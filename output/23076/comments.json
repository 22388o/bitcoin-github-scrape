[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926353681",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926353681",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 926353681,
    "node_id": "IC_kwDOABII5843NwkR",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T05:17:32Z",
    "updated_at": "2021-09-24T05:17:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any point in passing cfeerate by const reference vs just const\nvalue?\n\nOn Thu, Sep 23, 2021, 7:52 AM Jon Atack ***@***.***> wrote:\n\n> and add missing feerate and txmempool headers.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/bitcoin/bitcoin/pull/23076\n> Commit Summary\n>\n>    - Pass CFeeRate and CTxMemPool in-params by reference to const\n>    <https://github.com/bitcoin/bitcoin/pull/23076/commits/2e4a6cd3c8eb8fafd940814f5f11a18a53060185>\n>\n> File Changes\n>\n>    - *M* src/policy/rbf.cpp\n>    <https://github.com/bitcoin/bitcoin/pull/23076/files#diff-fa5cb2d84034ff72cdb9d479b17cf8c744a9bf3fc932b3a77c1a017edd767dfa>\n>    (8)\n>    - *M* src/policy/rbf.h\n>    <https://github.com/bitcoin/bitcoin/pull/23076/files#diff-a46953a84664bb5ac541df026cd5a22e88c50672f551c5e6d7825497c6535c85>\n>    (8)\n>    - *M* src/wallet/coinselection.h\n>    <https://github.com/bitcoin/bitcoin/pull/23076/files#diff-38f1a8db124a979cb6dd76ce263f7aae0053d6967ee909e6356115fa0402dc8c>\n>    (4)\n>\n> Patch Links:\n>\n>    - https://github.com/bitcoin/bitcoin/pull/23076.patch\n>    - https://github.com/bitcoin/bitcoin/pull/23076.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/23076>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGYN67CNE6N4Z6HYN73JHTUDM5J7ANCNFSM5ET4AYJA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926353681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926539987",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926539987",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 926539987,
    "node_id": "IC_kwDOABII5843OeDT",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T11:05:33Z",
    "updated_at": "2021-09-24T11:05:33Z",
    "author_association": "MEMBER",
    "body": "> Is there any point in passing cfeerate by const reference vs just const\r\n\r\nAgree. A `CFeeRate` is basically a wrapper around a `CAmount`, so 8 bytes. Seems for constant use it's better to pass it by value, instead of adding a level of indirection by reference.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926539987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926656639",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926656639",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 926656639,
    "node_id": "IC_kwDOABII5843O6h_",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T14:10:16Z",
    "updated_at": "2021-09-29T09:47:28Z",
    "author_association": "MEMBER",
    "body": "Yes a `CAmount` is 8 bytes, and https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in suggests a threshold of 2-3 words, e.g. `2 * sizeof(void*)`.\r\n\r\nSo, I wondered why elsewhere than this patch `CFeeRate` params are passed by reference to const. For instance, in `feerate.h`, `fees.{h,cpp}`, `policy.{h,cpp}` and`txmempool.{h,cpp}` (granted, it could all be an oversight).\r\n\r\nI found more in-depth discussion in Scott Meyers' \"Effective C++, Third Edition\" (2005), Item 20, pages 86-94, and \"Effective Modern C++\" (2015), Item 41, pages 281-292. Maybe it is somewhat dated. Apologies if it is obvious info. Some excerpts:\r\n\r\n- Avoid passing objects of user-defined types by value.\r\n\r\n- One might conclude that all small types are good candidates for pass-by-value,\r\n  even if they're user-defined. However, just because an object is small doesn't\r\n  mean that calling its copy constructor is inexpensive.  Many objects--most STL\r\n  containers among them--contain little more than a pointer, but copying such\r\n  objects entails copying everything they point to. That can be very expensive.\r\n\r\n- Even when small objects have inexpensive copy constructors, there can be\r\n  performance issues. Some compilers treat built-in and user-defined types\r\n  differently, even if they have the same underlying representation. When that\r\n  type of thing happens, you can be better off passing such objects by\r\n  reference, because compilers will certainly put pointers (the implementation\r\n  of references) into registers.\r\n\r\n- Another reason why small user-defined types are not necessarily good\r\n  pass-by-value candidates is that, being user-defined, their size is subject to\r\n  change. A type that's small now may be bigger in the future if its internal\r\n  implementation changes.  Things can even change when switching to a different\r\n  C++ implementation.\r\n\r\n- In general, the only types for which you can reasonably assume that\r\n  pass-by-value is inexpensive are built-in types and STL iterator and function\r\n  object types. For everything else, prefer pass-by-reference-to-const over\r\n  pass-by-value.\r\n\r\n- Exception: possibly consider pass-by-value of user-defined types for copyable\r\n  parameters that are cheap to move, if they are always copied anyway in their\r\n  implementation.\r\n\r\n- When there are chains of function calls, each of which passes-by-value, the\r\n  cost for the entire chain of calls accumulates and may not be something you can\r\n  tolerate. With by-reference passing, chains of calls don't incur this kind of\r\n  accumulated overhead.\r\n\r\n- The most practical approach may be to adopt a \"guilty until proven innocent\"\r\n  policy for pass-by-value of user-defined types.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926656639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926666242",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926666242",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 926666242,
    "node_id": "IC_kwDOABII5843O84C",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T14:22:28Z",
    "updated_at": "2021-09-24T14:22:44Z",
    "author_association": "MEMBER",
    "body": "It looks like there are 18 lines of `CFeeRate` params passed by reference to const, and 7 in this patch passed by value. If the 18 should be changed rather than these 7, it would remain a reasonably small change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926666242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927137187",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-927137187",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 927137187,
    "node_id": "IC_kwDOABII5843Qv2j",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-25T15:29:49Z",
    "updated_at": "2021-10-25T20:06:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927137187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927868578",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-927868578",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 927868578,
    "node_id": "IC_kwDOABII5843Tiai",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-27T13:20:07Z",
    "updated_at": "2021-09-27T13:34:03Z",
    "author_association": "MEMBER",
    "body": "Yes I think the main thing to consider is maintainability: if CFeeRate might grow larger at some point in the future, we do not want to change all of these again. FWIW, the story behind `CAmount` historically being passed by-reference is that it makes it easier to share code with coins that have non-POD amounts (at the time, Freicoin). I don't think we actually care about this, but for the info.\r\n\r\nAnyhow: \r\n\r\n- I think the chance of more fields being added to CFeeRate is relatively small\r\n- however, CFeeRate is never passed to really performance critical functions where copying a few more bytes would really make a difference. Nor the extra level of indirection, for that matter.\r\n\r\nSo to be honest I don't feel strongly either way. It would be somewhat nice to be consistent but that's all.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927868578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928154082",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-928154082",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 928154082,
    "node_id": "IC_kwDOABII5843UoHi",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-27T18:18:12Z",
    "updated_at": "2021-09-27T18:18:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "i don't particularly care either just figured it might be better to pass by const value.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928154082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930017016",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-930017016",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 930017016,
    "node_id": "IC_kwDOABII5843bu74",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-29T09:41:43Z",
    "updated_at": "2021-09-29T09:50:38Z",
    "author_association": "MEMBER",
    "body": "Yes, ISTM the advantages of this change are small amounts (pun intended) of:\r\n\r\n- maintainability (no need to change further as `CFeeRate` evolves)\r\n- consistency\r\n- clarity for developers reading the code and this discussion\r\n- and perhaps even performance...\r\n\r\n> With by-reference passing, chains of calls don't incur this kind of accumulated overhead.\r\n\r\n...as the `CFeeRate` comparison operators in `feerate.h` are reference to const, when feerates are passed into functions to be compared by invoking one of those operators, like in `policy/rbf.{h,cpp}` in this diff, performance might be not worse and indeed (very slightly) better if the call chain remains reference to const rather than introducing a needless copy in the middle. At least, performance is a wash or shouldn't be an issue.\r\n\r\nI tried writing some benchmarks as a sanity check but I didn't see anything conclusive (the difference may be too small to see and my machine isn't very stable for benchmarking anyway): https://github.com/jonatack/bitcoin/commits/bench-passing-CAmount-and-CFeeRate",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930017016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930042413",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-930042413",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
    "id": 930042413,
    "node_id": "IC_kwDOABII5843b1It",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-29T10:16:34Z",
    "updated_at": "2021-09-29T10:16:34Z",
    "author_association": "MEMBER",
    "body": "> FWIW, the story behind `CAmount` historically being passed by-reference is that it makes it easier to share code with coins that have non-POD amounts (at the time, Freicoin).\r\n\r\nThanks for the context! Been wondering for some time why that was.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930042413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]