JeremyRubin,2021-09-24 05:17:32,"Is there any point in passing cfeerate by const reference vs just const\nvalue?\n\nOn Thu, Sep 23, 2021, 7:52 AM Jon Atack ***@***.***> wrote:\n\n> and add missing feerate and txmempool headers.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/bitcoin/bitcoin/pull/23076\n> Commit Summary\n>\n>    - Pass CFeeRate and CTx",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926353681,926353681,
laanwj,2021-09-24 11:05:33,"> Is there any point in passing cfeerate by const reference vs just const\n\nAgree. A `CFeeRate` is basically a wrapper around a `CAmount`, so 8 bytes. Seems for constant use it's better to pass it by value, instead of adding a level of indirection by reference.",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926539987,926539987,
jonatack,2021-09-24 14:10:16,"Yes a `CAmount` is 8 bytes, and https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in suggests a threshold of 2-3 words, e.g. `2 * sizeof(void*)`.\n\nSo, I wondered why elsewhere than this patch `CFeeRate` params are passed by reference to const. For instance, in `feerate.h`, `fees.{h,cpp}`, `policy.{h,cpp}` and`txmempool.{h,cpp}` (granted, it could all be an oversight).\n\nI foun",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926656639,926656639,
jonatack,2021-09-24 14:22:28,"It looks like there are 18 lines of `CFeeRate` params passed by reference to const, and 7 in this patch passed by value. If the 18 should be changed rather than these 7, it would remain a reasonably small change.",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-926666242,926666242,
DrahtBot,2021-09-25 15:29:49,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-927137187,927137187,
laanwj,2021-09-27 13:20:07,"Yes I think the main thing to consider is maintainability: if CFeeRate might grow larger at some point in the future, we do not want to change all of these again. FWIW, the story behind `CAmount` historically being passed by-reference is that it makes it easier to share code with coins that have non-POD amounts (at the time, Freicoin). I don't think we actually care about this, but for the info.\",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-927868578,927868578,
JeremyRubin,2021-09-27 18:18:12,i don't particularly care either just figured it might be better to pass by const value.,https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-928154082,928154082,
jonatack,2021-09-29 09:41:43,"Yes, ISTM the advantages of this change are small amounts (pun intended) of:\n\n- maintainability (no need to change further as `CFeeRate` evolves)\n- consistency\n- clarity for developers reading the code and this discussion\n- and perhaps even performance...\n\n> With by-reference passing, chains of calls don't incur this kind of accumulated overhead.\n\n...as the `CFeeRate` comparison ",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-930017016,930017016,
jonatack,2021-09-29 10:16:34,"> FWIW, the story behind `CAmount` historically being passed by-reference is that it makes it easier to share code with coins that have non-POD amounts (at the time, Freicoin).\n\nThanks for the context! Been wondering for some time why that was.",https://github.com/bitcoin/bitcoin/pull/23076#issuecomment-930042413,930042413,
