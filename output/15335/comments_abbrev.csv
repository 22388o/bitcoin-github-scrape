DrahtBot,2019-02-04T08:21:03Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14866](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14866.html) (Improve property evaluation way in bitcoin.",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460163444,460163444,
AkioNak,2019-02-04T08:56:02Z,"If #14866 will be merged before this PR, I will drop the bug-fix code (system.cpp) , but leave the test code.",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460171968,460171968,
MarcoFalke,2019-02-04T15:59:05Z,utACK f7b0e60eac70fde74684ac406967c38ba8308679,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460302424,460302424,
MarcoFalke,2019-02-04T16:01:20Z,test-nit: Wouldn't it be cleaner to also clear them in `ReadConfigString`?,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460303315,460303315,
AkioNak,2019-02-05T07:51:20Z,"@MarcoFalke Thank you for your review.\nI'm sorry, but I don't understand. Is `ReadConfigString` related to this Python test?\n\nI think removing includeconf=~ from including file rather than making both 2 included file empty is another idea.",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460543508,460543508,
promag,2019-02-05T14:44:20Z,"Concept ACK.\n\nI wonder if it should warn unrecognized sections per file (section + file + line)? It also avoid duplicate warns but maybe it shouldn't.",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460662969,460662969,
MarcoFalke,2019-02-05T15:41:03Z,"@AkioNak The unit tests don't read from files, but from strings. Since you moved the `clear()` to the method that reads files, it would no longer be called in the unit tests.",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460685641,460685641,
AkioNak,2019-02-05T16:24:56Z,@promag Thank you for your review. I did not focus on that behavior. Will address.,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460703209,460703209,
AkioNak,2019-02-05T16:28:32Z,@MarcoFalke Thanks! I understand. I will check the unit test code and add to call the ```clear()``` .,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460704681,460704681,
MarcoFalke,2019-02-05T16:49:24Z,"The tests are passing without the `clear()`, but I guess the state might be dirty (haven't actually checked) and future tests might break unexpectedly.",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-460712823,460712823,
AkioNak,2019-02-06T14:50:36Z,"@promag @MarcoFalke Addressed.\n\nBoth CI checks have failed:\n\nAppveyou -> Many linker error occurred. they are almost ```unresolved external symbols```. but now I don't know what's wrong.\nhttps://ci.appveyor.com/project/DrahtBot/bitcoin/builds/22165173\n\nTravis CI -> The Compile time was over 25min for each failed jobs. I think it is not related to this change.\nhttps://travis-ci.org/",https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-461050292,461050292,
MarcoFalke,2019-02-18T16:06:16Z,re-utACK 6fffaec0e72c21,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-464790988,464790988,
MarcoFalke,2019-02-19T19:13:15Z,re-utACK 1a7ba84e11,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-465270417,465270417,
promag,2019-02-23T17:26:16Z,Tested ACK 1a7ba84.,https://github.com/bitcoin/bitcoin/pull/15335#issuecomment-466671077,466671077,
laanwj,2019-02-12T13:49:14Z,Would it make sense to move the `%s:%i` out of the translation message to keep it the same? The translators aren't going to understand that part anyway.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r255959728,255959728,src/init.cpp
AkioNak,2019-02-13T03:52:12Z,@laanwj Thank you  for your review. Addressed.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r256239261,256239261,src/init.cpp
promag,2019-02-15T15:46:07Z,Why is the argument called `label` when in the `SectionInfo` it's file? I'd name it `filepath`.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257285400,257285400,src/util/system.h
promag,2019-02-15T15:48:08Z,"nit, I think these should have `m_` prefix? Developer notes mentions:\n>     - Class member variables have a `m_` prefix.",https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257286241,257286241,src/util/system.h
promag,2019-02-15T15:51:38Z,Could use `emplace_back`?,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257287731,257287731,src/util/system.cpp
promag,2019-02-15T16:00:22Z,Use better variable name. Maybe also drop `auto`.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257291425,257291425,src/util/system.cpp
promag,2019-02-15T16:00:57Z,Use better variable name.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257291658,257291658,src/util/system.cpp
promag,2019-02-15T16:01:17Z,Also `emplace_back`.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257291773,257291773,src/util/system.cpp
AkioNak,2019-02-18T08:00:34Z,"I thought it might not only be a file stream. (unit test uses ```std::istringstream```).\nBut now I agree that ```filepath``` is better than ```label```.  Fixed.",https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257586807,257586807,src/util/system.h
AkioNak,2019-02-18T08:01:47Z,Thanks. Fixed.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257587116,257587116,src/util/system.h
AkioNak,2019-02-18T08:04:11Z,Thanks. Addressed.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257587692,257587692,src/util/system.cpp
AkioNak,2019-02-18T08:04:18Z,Thanks. Addressed.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257587724,257587724,src/util/system.cpp
AkioNak,2019-02-18T08:06:16Z,Fixed : parameter for lambda function.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257588177,257588177,src/util/system.cpp
AkioNak,2019-02-18T08:12:14Z,@promag I cannot drop ```auto``` simply. I am happy if you explain a little more.,https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257589691,257589691,src/util/system.cpp
promag,2019-02-18T16:18:06Z,"I mean, could have explicit type.",https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257757256,257757256,src/util/system.cpp
AkioNak,2019-02-19T02:55:54Z,"Thanks. I understand.\nAddressed.",https://github.com/bitcoin/bitcoin/pull/15335#discussion_r257875683,257875683,src/util/system.cpp
