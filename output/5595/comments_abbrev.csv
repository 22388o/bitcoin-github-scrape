sipa,2015-01-04T15:17:03Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-68636215,68636215,
jtimon,2015-01-04T18:45:16Z,@Diapolo Added a squashme commit to fix the include nit.\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-68643644,68643644,
jtimon,2015-01-07T23:30:28Z,Squashed @diapolo's nit. Also rebased.\nDoes people agree that InitPolicyFromCommandLine() is a good idea to squash its commit?\n@luke-jr ?\nNow there's 3 more commits from #5180 that I think you can agree with. You also moved main::IsStandardTx() and main::AreInputsStandard() in the more advanced policy branch you showed me (luke-jr/nodepolicy2).\nThe difference is that I'm also moving some const,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-69111822,69111822,
luke-jr,2015-01-08T15:57:22Z,"ACK, although I don't think we ought to be claiming copyright on policy.h yet as it contains no copyrightable content.\n",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-69199704,69199704,
jtimon,2015-01-08T20:29:39Z,"Thanks.\nWell, making later commits smaller is the whole point and putting the copyright text already serves that purpose.\nShould I squash the second commit then?\n",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-69243816,69243816,
jtimon,2015-01-10T18:17:21Z,Squashed to a single commit. \n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-69465782,69465782,
jtimon,2015-01-21T02:00:16Z,"I'm sorry for changing the PR again but the goal was always to find a common base and hopefully make later policy-code movements cleaner.\nI think IsStandard(CStript) with luke's commits is a good example that will likely be easy to maintain.\nAll those functions and interfaces like Policy(""standard"") allow you to easily create your own crazy policy and activate it with `-policy=custom` as shown i",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-70771918,70771918,
jtimon,2015-01-21T12:02:36Z,"Well, I'm sorry, the latest version is actually failing on windows...\nEDIT: found the bug: https://travis-ci.org/bitcoin/bitcoin/builds/47773190\nNow squashing and updating the initial description.\n",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-70825678,70825678,
jtimon,2015-01-21T13:21:48Z,There was a bug in src/test/test_bitcoin.cpp. I updated the code and the initial description.\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-70835231,70835231,
jtimon,2015-01-23T16:31:13Z,Rebased on top of #5696 and updated the initial description adding new links to commits.\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-71220436,71220436,
jtimon,2015-02-13T20:10:39Z,"@dexX7 this is just a proof of concept branch to make sure everyone is in the same page when it comes to the interface (the abstract class), the functions to initialize the policy, etc.\nIt is not complete. See #5768 for a more complete branch (which includes your suggestion).\nI'm mostly waiting for @luke-jr ack/nack on the interface to rebase and reduce the scope of this PR to something relative",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-74318492,74318492,
jtimon,2015-03-26T15:25:05Z,"Updated with @luke-jr 's suggestions:\n\n1) Replace ValidateX with ApproveX\n2) Added a method `std::vector<std::pair<std::string, std::string> > GetOptionsHelp()` to the CPolicy interface to make GUI-based policy configuration easier.\n\nThis is no longer a Proof of concept, this is ready to be merged. For more examples on how this will be used see #5768 \n",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-86567880,86567880,
jtimon,2015-04-01T22:32:20Z,Fixed the redundancies but MANDATORY_SCRIPT_VERIFY_FLAGS remains in policy/policy.h\n@luke-jr is that a nack for you?\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-88653609,88653609,
jtimon,2015-04-13T19:09:20Z,"As discussed on IRC, I'll just leave MANDATORY_SCRIPT_VERIFY_FLAGS in script/standard.h for now.\nI believe all the nits have been solved now.\n",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-92464980,92464980,
luke-jr,2015-04-13T22:30:54Z,ACK 9ddf5e5f84c9450b6125d9124866d8d50c116959\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-92518003,92518003,
jtimon,2015-04-20T19:28:54Z,Needed rebase.\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-94547430,94547430,
jtimon,2015-04-23T00:56:14Z,Closing until #5696 is resolved\n,https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-95378188,95378188,
jtimon,2015-04-26T14:35:21Z,"I'm sorry but I can't reopen this, more explanations and the rebased equivalent (needed rebase and it will also get slightly simpler after a reduced version of #5696 has been merged) to this PR in: #6068.\n\nI'm very sorry, @luke-jr when I created this PR competing with #5071 it wasn't my intention to slow things down with policy. \n",https://github.com/bitcoin/bitcoin/pull/5595#issuecomment-96392396,96392396,
Diapolo,2015-01-03T17:47:17Z,Nit: This should be moved to the core includes block :).\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r22433633,22433633,src/qt/coincontroldialog.cpp
jtimon,2015-01-04T18:25:44Z,"Mhmm, I guess init should be with main and wallet as well...\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r22441270,22441270,src/qt/coincontroldialog.cpp
dexX7,2015-02-11T04:33:17Z,"This should probably be moved as well. The help message is currently in ""connection options"": https://github.com/jtimon/bitcoin/blob/d66803ee06175d71ff7605ed1cfa8b91aec23f62/src/init.cpp#L284\n\nVery exciting branch by the way! :)\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24474017,24474017,src/init.cpp
luke-jr,2015-02-13T23:54:32Z,"Rather, perhaps put -policy in the main usage func, and add a -help-policy=<policyname> that calls a per-policy function returning some kind of list?\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24707276,24707276,src/policy.cpp
luke-jr,2015-02-13T23:57:33Z,"""Validate"" is the wrong term here. Perhaps ""AcceptScript""?\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24707415,24707415,src/policy.cpp
luke-jr,2015-02-14T00:00:02Z,This should be a CStandardPolicy thing - the base class should simply have one for transactions (AcceptToMemoryPool equivalent). Some policies may not have a script-specific check.\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24707532,24707532,src/policy.h
jtimon,2015-02-14T00:09:06Z,"Mhmm, so move -policy back to init and then have this function take a string parameter so that it can return different things for different policies?. Is that what you're suggesting?\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24707854,24707854,src/policy.cpp
jtimon,2015-02-14T00:11:43Z,"I'm using CheckX and VerifyX so I chose ValidateX for policy to avoid ""grep conflicts"".\nI can change Validate for Accept but I would rather use the same for all the methods..\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24707957,24707957,src/policy.cpp
luke-jr,2015-02-14T00:12:54Z,more like have init call Policy(str).GetUsage() for -help-policy=<str>\n\nGetUsage can return a bunch of std::pairs which get formatted by init\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708009,24708009,src/policy.cpp
luke-jr,2015-02-14T00:15:48Z,"We are already using Accept for AcceptToMemoryPool, and IsStandard for the current equivalent of this. I agree IsStandard is not very well-named.\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708104,24708104,src/policy.cpp
jtimon,2015-02-14T00:18:45Z,"The point is to never expose CStandardPolicy to the rest of the code.\nYou can change the interface (CPolicy) later and hide some methods in CStandardPolicy only.\n\nYour approach is not the only possibility. The replacements themselves could be maintained in main or txmempool and here only have a method that compares two transactions (or rather, two groups of transactions for child-pay-for-parent",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708197,24708197,src/policy.h
jtimon,2015-02-14T00:20:34Z,"ok, I see what you're saying. Makes sense to me.\nBut why return pairs instead of a string? The latter seems much simpler.\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708262,24708262,src/policy.cpp
jtimon,2015-02-14T00:24:29Z,The fact that we're using Accept in main may actually be a reason against also using it in policy rather than a reason in favor.\nIf you look at #5768 you may understand why I definitely prefer ValidateX over AcceptX at this point. I'm not changing it unless you get more people to support this bikeshed.\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708402,24708402,src/policy.cpp
luke-jr,2015-02-14T00:30:56Z,I'm not suggesting exposing CStandardPolicy... see how I did this in my branch; CStandardPolicy's CPolicy::AcceptTransaction can call CStandardPolicy::AcceptScript\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708628,24708628,src/policy.h
luke-jr,2015-02-14T00:35:52Z,"It's cleaner, avoids breaking policy formatting when the main codebase changes, and fits #5749 well.\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708779,24708779,src/policy.cpp
luke-jr,2015-02-14T00:37:31Z,"The Accept in main ought to be moved to policy. ""Validate"" is entirely wrong, as validity is not related to policy.\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708818,24708818,src/policy.cpp
jtimon,2015-02-14T00:38:02Z,"That being said, if some of the methods are not strictly check-only, it will be better that they get another name. For example, CPolicy::AcceptMemPoolEntry() in https://github.com/jtimon/bitcoin/commit/0f69efa2876580255f40edad95d15180f3ffa31c\nThat commit could also hide some methods to only belong to CStandardPolicy .\nFor example, you can hide CheckTxPreInputs() can be hiden since exposing Accep",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708830,24708830,src/policy.cpp
jtimon,2015-02-14T00:43:00Z,"I know, that can be done later as shown in https://github.com/jtimon/bitcoin/compare/luke_policy2 (a rebased version of your stuff).\nThat's not the only possible interface, it may not be the best (specially since we lack a criterion of quality for policy interfaces) and, again, the interface doesn't need to be perfect from the beginning. \nThe priority is encapsulating policy-specific code. The f",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24708987,24708987,src/policy.h
jtimon,2015-02-14T00:55:36Z,"You're checking that things are valid for a given policy. I understand the concern now though since the term ""validate"" is often used in the documentation of consensus code so it may be misleading for policy. Another possibility would be to use ValidateX and VerifyX in consensus functions instead of CheckX and VerifyX. That would leave CheckX free for policy.\nBut that would be even more work...\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24709387,24709387,src/policy.cpp
jtimon,2015-02-14T00:59:22Z,"#5749 seems like a good enough reason, thanks.\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24709491,24709491,src/policy.cpp
jtimon,2015-02-14T05:54:32Z,"mhmm, what about ApproveX() ?\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r24712543,24712543,src/policy.cpp
luke-jr,2015-03-26T18:33:27Z,This isn't policy.\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r27242340,27242340,src/policy/policy.h
luke-jr,2015-03-26T18:43:45Z,Isn't this redundant with BasicTestingSetup::BasicTestingSetup?\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r27243433,27243433,src/test/script_P2SH_tests.cpp
jtimon,2015-03-27T11:08:00Z,"MANDATORY_SCRIPT_VERIFY_FLAGS isn't policy?\nAt first I put it in consensus, but @TheBlueMatt wasn't convinced that was consensus, and @sipa said it was policy in #5696 (or maybe #5669).\nIdeally consensus should always use something like Consensus::GetFlags() (see https://github.com/jtimon/bitcoin/commit/0779bbc15d91706380f23219cecf472728099b46) \nLonger term, I think it should become an attribut",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r27287688,27287688,src/policy/policy.h
jtimon,2015-03-27T11:10:21Z,"Maybe after the rebase there's some redundancies with SelectPolicy()... @laanwj IIRC you recently changed the places where SelectParams() was called, can you confirm this is now redundant?\n",https://github.com/bitcoin/bitcoin/pull/5595#discussion_r27287779,27287779,src/test/script_P2SH_tests.cpp
laanwj,2015-03-27T12:02:42Z,Yes BasicTestingSetup sets the `standard` policy so there is no reason to do it in the individual test cases too.\n,https://github.com/bitcoin/bitcoin/pull/5595#discussion_r27289754,27289754,src/test/script_P2SH_tests.cpp
