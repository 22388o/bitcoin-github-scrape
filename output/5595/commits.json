[
  {
    "sha": "691161d419fe3d82d7a49b511ef80e2b24332aac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTExNjFkNDE5ZmUzZDgyZDdhNDliNTExZWY4MGUyYjI0MzMyYWFj",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T14:29:29Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-20T19:27:51Z"
      },
      "message": "Consensus: Create consensus/consensus.h with some constants",
      "tree": {
        "sha": "fb657b9aba2aa42ff9948fcfc428845b60384c35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb657b9aba2aa42ff9948fcfc428845b60384c35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/691161d419fe3d82d7a49b511ef80e2b24332aac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/691161d419fe3d82d7a49b511ef80e2b24332aac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/691161d419fe3d82d7a49b511ef80e2b24332aac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/691161d419fe3d82d7a49b511ef80e2b24332aac/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ea3bcede1cbbf89486b9d67329e0110c4624ae"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 34,
      "deletions": 16
    },
    "files": [
      {
        "sha": "72d79619b246da4df43a52c31849336f7c17bd04",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -87,6 +87,7 @@ BITCOIN_CORE_H = \\\n   coins.h \\\n   compat.h \\\n   compressor.h \\\n+  consensus/consensus.h \\\n   consensus/params.h \\\n   core_io.h \\\n   wallet/db.h \\"
      },
      {
        "sha": "f1c1c0ff8bffea7af2a5f44f70d0faf1d8892d85",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -4,18 +4,18 @@\n \n #include \"base58.h\"\n #include \"clientversion.h\"\n-#include \"primitives/block.h\" // for MAX_BLOCK_SIZE\n-#include \"primitives/transaction.h\"\n-#include \"core_io.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n+#include \"core_io.h\"\n #include \"keystore.h\"\n+#include \"primitives/transaction.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n #include \"ui_interface.h\" // for _(...)\n #include \"univalue/univalue.h\"\n #include \"util.h\"\n-#include \"utilstrencodings.h\"\n #include \"utilmoneystr.h\"\n+#include \"utilstrencodings.h\"\n \n #include <stdio.h>\n "
      },
      {
        "sha": "9c5b7d4ffb0ea7179ad0ff6a8c5b2b4688aef144",
        "filename": "src/consensus/consensus.h",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -0,0 +1,18 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n+#define BITCOIN_CONSENSUS_CONSENSUS_H\n+\n+/** The maximum allowed size for a serialized block, in bytes (network rule) */\n+static const unsigned int MAX_BLOCK_SIZE = 1000000;\n+/** The maximum allowed number of signature check operations in a block (network rule) */\n+static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n+/** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n+static const int COINBASE_MATURITY = 100;\n+/** Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. */\n+static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n+\n+#endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "a4c34c5345e00c0735206e5be32e35196c1b5944",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -14,9 +14,10 @@\n #include \"chain.h\"\n #include \"chainparams.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n+#include \"net.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n-#include \"net.h\"\n #include \"script/script.h\"\n #include \"script/sigcache.h\"\n #include \"script/standard.h\"\n@@ -53,8 +54,6 @@ static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n /** The maximum size for transactions we're willing to relay/mine */\n static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n-/** The maximum allowed number of signature check operations in a block (network rule) */\n-static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Maximum number of signature check operations in an IsStandard() P2SH script */\n static const unsigned int MAX_P2SH_SIGOPS = 15;\n /** The maximum number of sigops we're willing to relay/mine in a single tx */\n@@ -67,10 +66,6 @@ static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n static const unsigned int BLOCKFILE_CHUNK_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for rev?????.dat files (since 0.8) */\n static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n-/** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n-static const int COINBASE_MATURITY = 100;\n-/** Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. */\n-static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n /** Maximum number of script-checking threads allowed */\n static const int MAX_SCRIPTCHECK_THREADS = 16;\n /** -par default (number of script-checking threads, 0 = auto) */"
      },
      {
        "sha": "c48d8cd508db4bbe928c9ca68d5d0b99bf8e7bbc",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -6,7 +6,7 @@\n #include \"merkleblock.h\"\n \n #include \"hash.h\"\n-#include \"primitives/block.h\" // for MAX_BLOCK_SIZE\n+#include \"consensus/consensus.h\"\n #include \"utilstrencodings.h\"\n \n using namespace std;"
      },
      {
        "sha": "56a2c5828b9ea266657dcfcdfdb1f405c475c6af",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"amount.h\"\n #include \"chainparams.h\"\n+#include \"consensus/consensus.h\"\n #include \"hash.h\"\n #include \"main.h\"\n #include \"net.h\""
      },
      {
        "sha": "59f46deb1c420d8aef28a85a0d144a06259d3a18",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -10,9 +10,6 @@\n #include \"serialize.h\"\n #include \"uint256.h\"\n \n-/** The maximum allowed size for a serialized block, in bytes (network rule) */\n-static const unsigned int MAX_BLOCK_SIZE = 1000000;\n-\n /** Nodes collect new transactions into a block, hash them into a hash tree,\n  * and scan through nonce values to make the block's hash satisfy proof-of-work\n  * requirements.  When they solve the proof-of-work, they broadcast the block"
      },
      {
        "sha": "721424943551880acc9c9764af65ed605b0e7535",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -10,11 +10,13 @@\n #include \"transactionrecord.h\"\n \n #include \"base58.h\"\n+#include \"consensus/consensus.h\"\n #include \"main.h\"\n #include \"script/script.h\"\n #include \"timedata.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"wallet/db.h\"\n #include \"wallet/wallet.h\"\n \n #include <stdint.h>"
      },
      {
        "sha": "7f1db58e5d815e77f517e2bb1399ac7061461a10",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -5,6 +5,7 @@\n #include \"transactionrecord.h\"\n \n #include \"base58.h\"\n+#include \"consensus/consensus.h\"\n #include \"main.h\"\n #include \"timedata.h\"\n #include \"wallet/wallet.h\""
      },
      {
        "sha": "8398a33f75028ae82e0e85db8ba99f2a5f6f7296",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -5,11 +5,12 @@\n \n #include \"amount.h\"\n #include \"chainparams.h\"\n+#include \"consensus/consensus.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n-#include \"net.h\"\n #include \"main.h\"\n #include \"miner.h\"\n+#include \"net.h\"\n #include \"pow.h\"\n #include \"rpcserver.h\"\n #include \"util.h\""
      },
      {
        "sha": "d05e3c6eecc7353f95405b7d4c4bb8d9c9ea9433",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -6,6 +6,7 @@\n #include \"txmempool.h\"\n \n #include \"clientversion.h\"\n+#include \"consensus/consensus.h\"\n #include \"main.h\"\n #include \"streams.h\"\n #include \"util.h\""
      },
      {
        "sha": "88e6610decbcc5b6da49a5c04b56c09798d5208c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/691161d419fe3d82d7a49b511ef80e2b24332aac/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/691161d419fe3d82d7a49b511ef80e2b24332aac/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=691161d419fe3d82d7a49b511ef80e2b24332aac",
        "patch": "@@ -8,6 +8,7 @@\n #include \"base58.h\"\n #include \"checkpoints.h\"\n #include \"coincontrol.h\"\n+#include \"consensus/consensus.h\"\n #include \"main.h\"\n #include \"net.h\"\n #include \"script/script.h\""
      }
    ]
  },
  {
    "sha": "ae6329bb79a211b1353fc93aa50d8b9143c62b13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTYzMjliYjc5YTIxMWIxMzUzZmM5M2FhNTBkOGI5MTQzYzYyYjEz",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-23T10:39:46Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-20T19:27:53Z"
      },
      "message": "Policy: Create policy.o with some constants and globals",
      "tree": {
        "sha": "a80747cf337ccc5640cefbc52b6ffa259e75f262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a80747cf337ccc5640cefbc52b6ffa259e75f262"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae6329bb79a211b1353fc93aa50d8b9143c62b13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6329bb79a211b1353fc93aa50d8b9143c62b13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6329bb79a211b1353fc93aa50d8b9143c62b13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6329bb79a211b1353fc93aa50d8b9143c62b13/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "691161d419fe3d82d7a49b511ef80e2b24332aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/691161d419fe3d82d7a49b511ef80e2b24332aac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/691161d419fe3d82d7a49b511ef80e2b24332aac"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 79,
      "deletions": 37
    },
    "files": [
      {
        "sha": "57284bf9e74cd29a1f33302ba47ff466639764f0",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -106,6 +106,7 @@ BITCOIN_CORE_H = \\\n   netbase.h \\\n   net.h \\\n   noui.h \\\n+  policy/policy.h \\\n   pow.h \\\n   primitives/block.h \\\n   primitives/transaction.h \\\n@@ -182,6 +183,7 @@ libbitcoin_server_a_SOURCES = \\\n   miner.cpp \\\n   net.cpp \\\n   noui.cpp \\\n+  policy/policy.cpp \\\n   pow.cpp \\\n   rest.cpp \\\n   rpcblockchain.cpp \\"
      },
      {
        "sha": "f5e3efa31015196e09280e5e6a753fac409308bb",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -8,6 +8,7 @@\n #include \"consensus/consensus.h\"\n #include \"core_io.h\"\n #include \"keystore.h\"\n+#include \"policy/policy.h\"\n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\""
      },
      {
        "sha": "2bf61792c2659dc8f0cec61b26590cfee7080c80",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -17,6 +17,7 @@\n #include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n+#include \"policy/policy.h\"\n #include \"rpcserver.h\"\n #include \"script/standard.h\"\n #include \"txdb.h\""
      },
      {
        "sha": "66c65b40c7bc501a2de5843086b9d2790b226106",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -11,9 +11,11 @@\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n+#include \"consensus/consensus.h\"\n #include \"init.h\"\n #include \"merkleblock.h\"\n #include \"net.h\"\n+#include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n@@ -52,13 +54,9 @@ int nScriptCheckThreads = 0;\n bool fImporting = false;\n bool fReindex = false;\n bool fTxIndex = false;\n-bool fIsBareMultisigStd = true;\n bool fCheckBlockIndex = false;\n unsigned int nCoinCacheSize = 5000;\n \n-/** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(1000);\n-\n CTxMemPool mempool(::minRelayTxFee);\n \n struct COrphanTx {"
      },
      {
        "sha": "cc8ec1032a25cad2c91a660195e908b7dc8c6680",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -14,7 +14,6 @@\n #include \"chain.h\"\n #include \"chainparams.h\"\n #include \"coins.h\"\n-#include \"consensus/consensus.h\"\n #include \"net.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n@@ -47,17 +46,6 @@ class CValidationState;\n \n struct CNodeStateStats;\n \n-/** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n-static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n-static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n-/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n-static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n-/** The maximum size for transactions we're willing to relay/mine */\n-static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n-/** Maximum number of signature check operations in an IsStandard() P2SH script */\n-static const unsigned int MAX_P2SH_SIGOPS = 15;\n-/** The maximum number of sigops we're willing to relay/mine in a single tx */\n-static const unsigned int MAX_STANDARD_TX_SIGOPS = MAX_BLOCK_SIGOPS/5;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n@@ -116,10 +104,8 @@ extern bool fImporting;\n extern bool fReindex;\n extern int nScriptCheckThreads;\n extern bool fTxIndex;\n-extern bool fIsBareMultisigStd;\n extern bool fCheckBlockIndex;\n extern unsigned int nCoinCacheSize;\n-extern CFeeRate minRelayTxFee;\n \n /** Best header we've seen so far (used for getheaders queries' starting points). */\n extern CBlockIndex *pindexBestHeader;"
      },
      {
        "sha": "8049f1db84e569f1ab8337aee964879fad9cc919",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -11,6 +11,7 @@\n #include \"hash.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"primitives/transaction.h\"\n #include \"timedata.h\""
      },
      {
        "sha": "62015c4cfcb00ef60e29cc10d1065c4d19f71b1a",
        "filename": "src/policy/policy.cpp",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -0,0 +1,14 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"amount.h\"\n+\n+bool fIsBareMultisigStd = true;\n+/** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n+CFeeRate minRelayTxFee = CFeeRate(1000);"
      },
      {
        "sha": "3ffc035a07b89025bbbc2833d4efbb35bbfe42cd",
        "filename": "src/policy/policy.h",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_H\n+#define BITCOIN_POLICY_H\n+\n+#include \"consensus/consensus.h\"\n+#include \"script/interpreter.h\"\n+#include \"script/standard.h\"\n+\n+class CFeeRate;\n+\n+/** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n+static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n+static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n+/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n+static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n+/** The maximum size for transactions we're willing to relay/mine */\n+static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n+/** Maximum number of signature check operations in an IsStandard() P2SH script */\n+static const unsigned int MAX_P2SH_SIGOPS = 15;\n+/** The maximum number of sigops we're willing to relay/mine in a single tx */\n+static const unsigned int MAX_STANDARD_TX_SIGOPS = MAX_BLOCK_SIGOPS/5;\n+/**\n+ * Standard script verification flags that standard transactions will comply\n+ * with. However scripts violating these flags may still be present in valid\n+ * blocks and we must accept those blocks.\n+ */\n+static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY_FLAGS |\n+                                                         SCRIPT_VERIFY_DERSIG |\n+                                                         SCRIPT_VERIFY_STRICTENC |\n+                                                         SCRIPT_VERIFY_MINIMALDATA |\n+                                                         SCRIPT_VERIFY_NULLDUMMY |\n+                                                         SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS |\n+                                                         SCRIPT_VERIFY_CLEANSTACK;\n+/** For convenience, standard but not mandatory verify flags. */\n+static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n+\n+/** GLOBALS: These variables are supposed to become CStandardPolicy attributes */\n+\n+extern bool fIsBareMultisigStd;\n+extern CFeeRate minRelayTxFee;\n+\n+#endif // BITCOIN_POLICY_H"
      },
      {
        "sha": "e6698248824ac02d7bfdc229aac60cb49c323ed7",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -15,6 +15,7 @@\n #include \"coincontrol.h\"\n #include \"init.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"wallet/wallet.h\"\n \n #include <boost/assign/list_of.hpp> // for 'map_list_of()'"
      },
      {
        "sha": "f127b80b6f1e69290a218d40c9886a2ccfec0adb",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -9,9 +9,10 @@\n #include \"qvalidatedlineedit.h\"\n #include \"walletmodel.h\"\n \n-#include \"primitives/transaction.h\"\n #include \"init.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n+#include \"primitives/transaction.h\"\n #include \"protocol.h\"\n #include \"script/script.h\"\n #include \"script/standard.h\""
      },
      {
        "sha": "cd68a64780755672641c4b9493c8b13d98009090",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -11,6 +11,7 @@\n #include \"base58.h\"\n #include \"chainparams.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"wallet/wallet.h\""
      },
      {
        "sha": "5530b7ce6a371504693d069f1ff2a1d28d04243f",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -9,6 +9,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"policy/policy.h\"\n #include \"rpcserver.h\"\n #include \"timedata.h\"\n #include \"util.h\""
      },
      {
        "sha": "caf6ed1de86cef664701601562e643813e9836cd",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -8,6 +8,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"policy/policy.h\"\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"timedata.h\""
      },
      {
        "sha": "d31003d8280e210d402975e731159b0dbdf18d4d",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -4,12 +4,13 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n-#include \"primitives/transaction.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n #include \"keystore.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"policy/policy.h\"\n+#include \"primitives/transaction.h\"\n #include \"rpcserver.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\""
      },
      {
        "sha": "3217285221af3e5ae480df704aafe2b0029856a8",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -5,9 +5,10 @@\n \n #include \"script/sign.h\"\n \n-#include \"primitives/transaction.h\"\n #include \"key.h\"\n #include \"keystore.h\"\n+#include \"policy/policy.h\"\n+#include \"primitives/transaction.h\"\n #include \"script/standard.h\"\n #include \"uint256.h\"\n "
      },
      {
        "sha": "c4ad17dd8fcf902946f033052fd7731afb348526",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -39,22 +39,6 @@ extern unsigned nMaxDatacarrierBytes;\n  */\n static const unsigned int MANDATORY_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH;\n \n-/**\n- * Standard script verification flags that standard transactions will comply\n- * with. However scripts violating these flags may still be present in valid\n- * blocks and we must accept those blocks.\n- */\n-static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY_FLAGS |\n-                                                         SCRIPT_VERIFY_DERSIG |\n-                                                         SCRIPT_VERIFY_STRICTENC |\n-                                                         SCRIPT_VERIFY_MINIMALDATA |\n-                                                         SCRIPT_VERIFY_NULLDUMMY |\n-                                                         SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS |\n-                                                         SCRIPT_VERIFY_CLEANSTACK;\n-\n-/** For convenience, standard but not mandatory verify flags. */\n-static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n-\n enum txnouttype\n {\n     TX_NONSTANDARD,"
      },
      {
        "sha": "16c9a4a868e9af296279afaa1625f596af5072f4",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -5,6 +5,7 @@\n #include \"key.h\"\n #include \"keystore.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\"\n #include \"script/sign.h\""
      },
      {
        "sha": "c325f7e7a0fecd48f285a74dd810d368c46c40ba",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6329bb79a211b1353fc93aa50d8b9143c62b13/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "patch": "@@ -11,6 +11,7 @@\n #include \"consensus/consensus.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"policy/policy.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n #include \"timedata.h\""
      }
    ]
  },
  {
    "sha": "573a2b36eb49c4684ce8079eddc32ba8147067ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzNhMmIzNmViNDljNDY4NGNlODA3OWVkZGMzMmJhODE0NzA2N2Fj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-01T22:26:31Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-20T19:27:53Z"
      },
      "message": "Policy: Prepare utils for policy",
      "tree": {
        "sha": "01de19d0eb1502e2b71ad95236a4c640addd40d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01de19d0eb1502e2b71ad95236a4c640addd40d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/573a2b36eb49c4684ce8079eddc32ba8147067ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/573a2b36eb49c4684ce8079eddc32ba8147067ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/573a2b36eb49c4684ce8079eddc32ba8147067ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/573a2b36eb49c4684ce8079eddc32ba8147067ac/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6329bb79a211b1353fc93aa50d8b9143c62b13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6329bb79a211b1353fc93aa50d8b9143c62b13"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 45,
      "deletions": 10
    },
    "files": [
      {
        "sha": "8a0569b5f45501e2acf53741294aaba72cb99c23",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 10,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/573a2b36eb49c4684ce8079eddc32ba8147067ac/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/573a2b36eb49c4684ce8079eddc32ba8147067ac/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=573a2b36eb49c4684ce8079eddc32ba8147067ac",
        "patch": "@@ -305,31 +305,49 @@ void ParseParameters(int argc, const char* const argv[])\n     }\n }\n \n-std::string GetArg(const std::string& strArg, const std::string& strDefault)\n+std::string GetArg(const std::string& strArg, const std::string& strDefault, const std::map<std::string, std::string>& mapArgs)\n {\n-    if (mapArgs.count(strArg))\n-        return mapArgs[strArg];\n+    std::map<std::string, std::string>::const_iterator it = mapArgs.find(strArg);\n+    if (it != mapArgs.end())\n+        return it->second;\n     return strDefault;\n }\n \n-int64_t GetArg(const std::string& strArg, int64_t nDefault)\n+int64_t GetArg(const std::string& strArg, int64_t nDefault, const std::map<std::string, std::string>& mapArgs)\n {\n-    if (mapArgs.count(strArg))\n-        return atoi64(mapArgs[strArg]);\n+    std::map<std::string, std::string>::const_iterator it = mapArgs.find(strArg);\n+    if (it != mapArgs.end())\n+        return atoi64(it->second);\n     return nDefault;\n }\n \n-bool GetBoolArg(const std::string& strArg, bool fDefault)\n+bool GetBoolArg(const std::string& strArg, bool fDefault, const std::map<std::string, std::string>& mapArgs)\n {\n-    if (mapArgs.count(strArg))\n+    std::map<std::string, std::string>::const_iterator it = mapArgs.find(strArg);\n+    if (it != mapArgs.end())\n     {\n-        if (mapArgs[strArg].empty())\n+        if (it->second.empty())\n             return true;\n-        return (atoi(mapArgs[strArg]) != 0);\n+        return (atoi(it->second) != 0);\n     }\n     return fDefault;\n }\n \n+std::string GetArg(const std::string& strArg, const std::string& strDefault)\n+{\n+    return GetArg(strArg, strDefault, mapArgs);\n+}\n+\n+int64_t GetArg(const std::string& strArg, int64_t nDefault)\n+{\n+    return GetArg(strArg, nDefault, mapArgs);\n+}\n+\n+bool GetBoolArg(const std::string& strArg, bool fDefault)\n+{\n+    return GetBoolArg(strArg, fDefault, mapArgs);\n+}\n+\n bool SoftSetArg(const std::string& strArg, const std::string& strValue)\n {\n     if (mapArgs.count(strArg))\n@@ -361,6 +379,14 @@ std::string HelpMessageOpt(const std::string &option, const std::string &message\n            std::string(\"\\n\\n\");\n }\n \n+std::string HelpMessagesOpt(std::vector<std::pair<std::string, std::string> > optionsHelp)\n+{\n+    std::string strUsage;\n+    for (unsigned int i=0; i < optionsHelp.size(); i++)\n+        strUsage += HelpMessageOpt(optionsHelp[i].first, optionsHelp[i].second);\n+    return strUsage;\n+}\n+\n static std::string FormatException(const std::exception* pex, const char* pszThread)\n {\n #ifdef WIN32"
      },
      {
        "sha": "f055c73177f805d4a14194918018d018f733887d",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/573a2b36eb49c4684ce8079eddc32ba8147067ac/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/573a2b36eb49c4684ce8079eddc32ba8147067ac/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=573a2b36eb49c4684ce8079eddc32ba8147067ac",
        "patch": "@@ -125,6 +125,7 @@ inline bool IsSwitchChar(char c)\n  * @return command-line argument or default value\n  */\n std::string GetArg(const std::string& strArg, const std::string& strDefault);\n+std::string GetArg(const std::string& strArg, const std::string& strDefault, const std::map<std::string, std::string>& mapArgs);\n \n /**\n  * Return integer argument or default value\n@@ -134,6 +135,7 @@ std::string GetArg(const std::string& strArg, const std::string& strDefault);\n  * @return command-line argument (0 if invalid number) or default value\n  */\n int64_t GetArg(const std::string& strArg, int64_t nDefault);\n+int64_t GetArg(const std::string& strArg, int64_t nDefault, const std::map<std::string, std::string>& mapArgs);\n \n /**\n  * Return boolean argument or default value\n@@ -143,6 +145,7 @@ int64_t GetArg(const std::string& strArg, int64_t nDefault);\n  * @return command-line argument or default value\n  */\n bool GetBoolArg(const std::string& strArg, bool fDefault);\n+bool GetBoolArg(const std::string& strArg, bool fDefault, const std::map<std::string, std::string>& mapArgs);\n \n /**\n  * Set an argument if it doesn't already have a value\n@@ -179,6 +182,12 @@ std::string HelpMessageGroup(const std::string& message);\n  */\n std::string HelpMessageOpt(const std::string& option, const std::string& message);\n \n+/**\n+ * @param optionsHelp a vector of string pairs to iteratively call HelpMessageOpt\n+ * @return the formatted string with all pairs\n+ */\n+std::string HelpMessagesOpt(std::vector<std::pair<std::string, std::string> > optionsHelp);\n+\n void SetThreadPriority(int nPriority);\n void RenameThread(const char* name);\n "
      }
    ]
  },
  {
    "sha": "c1c81ea46833a68383cb2d17f690badfe54b8ef2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWM4MWVhNDY4MzNhNjgzODNjYjJkMTdmNjkwYmFkZmU1NGI4ZWYy",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-01T22:27:15Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-20T19:27:53Z"
      },
      "message": "Policy: Create CPolicy interface and CStandardPolicy implementation",
      "tree": {
        "sha": "3f33876bf530d524c152341d64f10440911e6a0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f33876bf530d524c152341d64f10440911e6a0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1c81ea46833a68383cb2d17f690badfe54b8ef2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1c81ea46833a68383cb2d17f690badfe54b8ef2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1c81ea46833a68383cb2d17f690badfe54b8ef2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1c81ea46833a68383cb2d17f690badfe54b8ef2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "573a2b36eb49c4684ce8079eddc32ba8147067ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/573a2b36eb49c4684ce8079eddc32ba8147067ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/573a2b36eb49c4684ce8079eddc32ba8147067ac"
      }
    ],
    "stats": {
      "total": 109,
      "additions": 109,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1d8f92ccaf3bd6e0fa4c0356b37e64c6e0267db9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c1c81ea46833a68383cb2d17f690badfe54b8ef2",
        "patch": "@@ -384,6 +384,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n     strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n \n+    strUsage += GetPolicyUsageStr(GetArg(\"-policy\", \"standard\"));\n+\n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-datacarriersize\", strprintf(_(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\"), MAX_OP_RETURN_RELAY));\n@@ -725,6 +727,13 @@ bool AppInit2(boost::thread_group& threadGroup)\n     const char* pszP2SH = \"/P2SH/\";\n     COINBASE_FLAGS << std::vector<unsigned char>(pszP2SH, pszP2SH+strlen(pszP2SH));\n \n+    // Init Policy\n+    try {\n+        InitPolicyFromArgs(mapArgs, \"standard\");\n+    } catch(std::exception &e) {\n+        return InitError(strprintf(_(\"Error while initializing policy: %s\"), e.what()));\n+    }\n+\n     // Fee-per-kilobyte amount considered the same as \"free\"\n     // If you are mining, be careful setting this:\n     // if you set it to zero then"
      },
      {
        "sha": "022c806e118bbf6d8623eedc85d57a22344a4b45",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=c1c81ea46833a68383cb2d17f690badfe54b8ef2",
        "patch": "@@ -8,7 +8,75 @@\n #include \"policy/policy.h\"\n \n #include \"amount.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n \n bool fIsBareMultisigStd = true;\n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+public:\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)\n+{\n+    pCurrentPolicy = &Policy(policy);\n+}\n+\n+const CPolicy& Policy()\n+{\n+    assert(pCurrentPolicy);\n+    return *pCurrentPolicy;\n+}\n+\n+std::string GetPolicyUsageStr(std::string selectedPolicy)\n+{\n+    CPolicy& policy = standardPolicy;\n+    try {\n+        policy = Policy(selectedPolicy);\n+    } catch(std::exception &e) {\n+        selectedPolicy = \"standard\";\n+    }\n+    std::string strUsage = HelpMessageGroup(strprintf(_(\"Policy options (for policy: %s):\"), selectedPolicy));\n+    strUsage += HelpMessageOpt(\"-policy\", strprintf(_(\"Select a specific type of policy (default: %s)\"), \"standard\"));\n+    strUsage += HelpMessagesOpt(policy.GetOptionsHelp());\n+    return strUsage;\n+}\n+\n+void InitPolicyFromArgs(const std::map<std::string, std::string>& mapArgs, std::string defaultPolicy)\n+{\n+    SelectPolicy(GetArg(\"-policy\", defaultPolicy, mapArgs));\n+    pCurrentPolicy->InitFromArgs(mapArgs);\n+}\n+\n+/** CStandardPolicy implementation */\n+\n+std::vector<std::pair<std::string, std::string> > CStandardPolicy::GetOptionsHelp() const\n+{\n+    std::vector<std::pair<std::string, std::string> > optionsHelp;\n+    return optionsHelp;\n+}\n+\n+void CStandardPolicy::InitFromArgs(const std::map<std::string, std::string>& mapArgs)\n+{\n+}"
      },
      {
        "sha": "751c0226bc12f53df96d7accae9680a41fccb0a3",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=c1c81ea46833a68383cb2d17f690badfe54b8ef2",
        "patch": "@@ -10,6 +10,9 @@\n #include \"script/interpreter.h\"\n #include \"script/standard.h\"\n \n+#include <map>\n+#include <string>\n+\n class CFeeRate;\n \n /** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n@@ -43,4 +46,31 @@ static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_\n extern bool fIsBareMultisigStd;\n extern CFeeRate minRelayTxFee;\n \n+/** Abstract interface for Policy */\n+class CPolicy\n+{\n+public:\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const = 0;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&) = 0;\n+};\n+\n+/** Return a CPolicy of the type described in the parameter string */\n+CPolicy& Policy(std::string);\n+/** Returns the current CPolicy. Requires calling SelectPolicy() or InitPolicyFromArgs() first */\n+const CPolicy& Policy();\n+/** Selects the current CPolicy of the type described in the parameter string */\n+void SelectPolicy(std::string);\n+/**\n+ * Returns a HelpMessage string with policy options\n+ *\n+ * @param selectedPolicy select a policy to show its options\n+ * @return the formatted string\n+ */\n+std::string GetPolicyUsageStr(std::string selectedPolicy);\n+/**\n+ * Selects the current CPolicy of the type described in the string on key \"-policy\" mapArgs\n+ * and calls CPolicy::InitFromArgs() with mapArgs.\n+ */\n+void InitPolicyFromArgs(const std::map<std::string, std::string>& mapArgs, std::string defaultPolicy);\n+\n #endif // BITCOIN_POLICY_H"
      },
      {
        "sha": "7fea31cce635d2bfbcbcdb69bdfe7910aa8240c2",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c81ea46833a68383cb2d17f690badfe54b8ef2/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=c1c81ea46833a68383cb2d17f690badfe54b8ef2",
        "patch": "@@ -7,6 +7,7 @@\n #include \"test_bitcoin.h\"\n \n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"random.h\"\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n@@ -32,6 +33,7 @@ BasicTestingSetup::BasicTestingSetup()\n         fPrintToDebugLog = false; // don't want to write to debug.log file\n         fCheckBlockIndex = true;\n         SelectParams(CBaseChainParams::MAIN);\n+        SelectPolicy(\"standard\");\n }\n BasicTestingSetup::~BasicTestingSetup()\n {"
      }
    ]
  },
  {
    "sha": "ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmFjYWU4M2VmOTEyMjYzZGUxZGEyZGQ4MzE1YjVjZDhlZDRjMmRk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-11T22:41:05Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-20T19:27:53Z"
      },
      "message": "Policy: MOVEONLY: script/standard.o::IsStandard() -> CPolicy::ApproveScript()",
      "tree": {
        "sha": "e8d2d33dcae1c672bde9a361f335c3dbc5482ea3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8d2d33dcae1c672bde9a361f335c3dbc5482ea3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1c81ea46833a68383cb2d17f690badfe54b8ef2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1c81ea46833a68383cb2d17f690badfe54b8ef2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1c81ea46833a68383cb2d17f690badfe54b8ef2"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 32,
      "deletions": 30
    },
    "files": [
      {
        "sha": "0084d136f1070af11ab05ce6bbc5d516488c195a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
        "patch": "@@ -617,7 +617,7 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n     unsigned int nDataOut = 0;\n     txnouttype whichType;\n     BOOST_FOREACH(const CTxOut& txout, tx.vout) {\n-        if (!::IsStandard(txout.scriptPubKey, whichType)) {\n+        if (!Policy().ApproveScript(txout.scriptPubKey, whichType)) {\n             reason = \"scriptpubkey\";\n             return false;\n         }"
      },
      {
        "sha": "86b8e0adb949b2c4dc19f5bb32dea47062685cb7",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
        "patch": "@@ -23,6 +23,7 @@ class CStandardPolicy : public CPolicy\n public:\n     virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n     virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n };\n \n /** Global variables and their interfaces */\n@@ -80,3 +81,23 @@ std::vector<std::pair<std::string, std::string> > CStandardPolicy::GetOptionsHel\n void CStandardPolicy::InitFromArgs(const std::map<std::string, std::string>& mapArgs)\n {\n }\n+\n+bool CStandardPolicy::ApproveScript(const CScript& scriptPubKey, txnouttype& whichType) const\n+{\n+    std::vector<std::vector<unsigned char> > vSolutions;\n+    if (!Solver(scriptPubKey, whichType, vSolutions))\n+        return false;\n+\n+    if (whichType == TX_MULTISIG)\n+    {\n+        unsigned char m = vSolutions.front()[0];\n+        unsigned char n = vSolutions.back()[0];\n+        // Support up to x-of-3 multisig txns as standard\n+        if (n < 1 || n > 3)\n+            return false;\n+        if (m < 1 || m > n)\n+            return false;\n+    }\n+\n+    return whichType != TX_NONSTANDARD;\n+}"
      },
      {
        "sha": "4976e3926450db82da66ec3a94291d91a3b5e5a8",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
        "patch": "@@ -52,6 +52,7 @@ class CPolicy\n public:\n     virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const = 0;\n     virtual void InitFromArgs(const std::map<std::string, std::string>&) = 0;\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const = 0;\n };\n \n /** Return a CPolicy of the type described in the parameter string */"
      },
      {
        "sha": "66657127ab85cf47c5c63ad8ea960a16978d2035",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
        "patch": "@@ -180,26 +180,6 @@ int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned c\n     return -1;\n }\n \n-bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n-{\n-    vector<valtype> vSolutions;\n-    if (!Solver(scriptPubKey, whichType, vSolutions))\n-        return false;\n-\n-    if (whichType == TX_MULTISIG)\n-    {\n-        unsigned char m = vSolutions.front()[0];\n-        unsigned char n = vSolutions.back()[0];\n-        // Support up to x-of-3 multisig txns as standard\n-        if (n < 1 || n > 3)\n-            return false;\n-        if (m < 1 || m > n)\n-            return false;\n-    }\n-\n-    return whichType != TX_NONSTANDARD;\n-}\n-\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n {\n     vector<valtype> vSolutions;"
      },
      {
        "sha": "46ae5f9f10389f8825dc2fa0f3d64f4542639c69",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
        "patch": "@@ -69,7 +69,6 @@ const char* GetTxnOutputType(txnouttype t);\n \n bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet);\n int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions);\n-bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n "
      },
      {
        "sha": "15d28fe815f43e8b3d37e32a327a27db7d2dbbb1",
        "filename": "src/test/multisig_tests.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/test/multisig_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffacae83ef912263de1da2dd8315b5cd8ed4c2dd/src/test/multisig_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/multisig_tests.cpp?ref=ffacae83ef912263de1da2dd8315b5cd8ed4c2dd",
        "patch": "@@ -4,13 +4,13 @@\n \n #include \"key.h\"\n #include \"keystore.h\"\n-#include \"main.h\"\n+#include \"policy/policy.h\"\n+#include \"script/interpreter.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\"\n-#include \"script/interpreter.h\"\n #include \"script/sign.h\"\n-#include \"uint256.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"uint256.h\"\n \n #ifdef ENABLE_WALLET\n #include \"wallet/wallet_ismine.h\"\n@@ -143,6 +143,7 @@ BOOST_AUTO_TEST_CASE(multisig_verify)\n \n BOOST_AUTO_TEST_CASE(multisig_IsStandard)\n {\n+    const CPolicy& policy = Policy(\"standard\");\n     CKey key[4];\n     for (int i = 0; i < 4; i++)\n         key[i].MakeNewKey(true);\n@@ -151,19 +152,19 @@ BOOST_AUTO_TEST_CASE(multisig_IsStandard)\n \n     CScript a_and_b;\n     a_and_b << OP_2 << ToByteVector(key[0].GetPubKey()) << ToByteVector(key[1].GetPubKey()) << OP_2 << OP_CHECKMULTISIG;\n-    BOOST_CHECK(::IsStandard(a_and_b, whichType));\n+    BOOST_CHECK(policy.ApproveScript(a_and_b, whichType));\n \n     CScript a_or_b;\n     a_or_b  << OP_1 << ToByteVector(key[0].GetPubKey()) << ToByteVector(key[1].GetPubKey()) << OP_2 << OP_CHECKMULTISIG;\n-    BOOST_CHECK(::IsStandard(a_or_b, whichType));\n+    BOOST_CHECK(policy.ApproveScript(a_or_b, whichType));\n \n     CScript escrow;\n     escrow << OP_2 << ToByteVector(key[0].GetPubKey()) << ToByteVector(key[1].GetPubKey()) << ToByteVector(key[2].GetPubKey()) << OP_3 << OP_CHECKMULTISIG;\n-    BOOST_CHECK(::IsStandard(escrow, whichType));\n+    BOOST_CHECK(policy.ApproveScript(escrow, whichType));\n \n     CScript one_of_four;\n     one_of_four << OP_1 << ToByteVector(key[0].GetPubKey()) << ToByteVector(key[1].GetPubKey()) << ToByteVector(key[2].GetPubKey()) << ToByteVector(key[3].GetPubKey()) << OP_4 << OP_CHECKMULTISIG;\n-    BOOST_CHECK(!::IsStandard(one_of_four, whichType));\n+    BOOST_CHECK(!policy.ApproveScript(one_of_four, whichType));\n \n     CScript malformed[6];\n     malformed[0] << OP_3 << ToByteVector(key[0].GetPubKey()) << ToByteVector(key[1].GetPubKey()) << OP_2 << OP_CHECKMULTISIG;\n@@ -174,7 +175,7 @@ BOOST_AUTO_TEST_CASE(multisig_IsStandard)\n     malformed[5] << OP_1 << ToByteVector(key[0].GetPubKey()) << ToByteVector(key[1].GetPubKey());\n \n     for (int i = 0; i < 6; i++)\n-        BOOST_CHECK(!::IsStandard(malformed[i], whichType));\n+        BOOST_CHECK(!policy.ApproveScript(malformed[i], whichType));\n }\n \n BOOST_AUTO_TEST_CASE(multisig_Solver1)"
      }
    ]
  }
]