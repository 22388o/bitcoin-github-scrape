[
  {
    "sha": "fd355e29febe9760e004877b19b890635386e904",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDM1NWUyOWZlYmU5NzYwZTAwNDg3N2IxOWI4OTA2MzUzODZlOTA0",
    "commit": {
      "author": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-02-01T12:39:43Z"
      },
      "committer": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-02-01T13:16:15Z"
      },
      "message": "Use dynamic_cast for downcasting instead of static_cast.\n\nSee: https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c146-use-dynamic_cast-where-class-hierarchy-navigation-is-unavoidable",
      "tree": {
        "sha": "6fa5655d93c610ba7f26fd8e8b98d05f3ba87ee0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fa5655d93c610ba7f26fd8e8b98d05f3ba87ee0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd355e29febe9760e004877b19b890635386e904",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd355e29febe9760e004877b19b890635386e904",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd355e29febe9760e004877b19b890635386e904",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd355e29febe9760e004877b19b890635386e904/comments",
    "author": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d2eaba300bc13c556e3cb05420dcc91ae12e1d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d2eaba300bc13c556e3cb05420dcc91ae12e1d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2eaba300bc13c556e3cb05420dcc91ae12e1d0"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "6f787005d8934274f44e868466f6c850f5f26b95",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -222,7 +222,7 @@ bool AskPassphraseDialog::event(QEvent *event)\n {\n     // Detect Caps Lock key press.\n     if (event->type() == QEvent::KeyPress) {\n-        QKeyEvent *ke = static_cast<QKeyEvent *>(event);\n+        QKeyEvent *ke = dynamic_cast<QKeyEvent *>(event);\n         if (ke->key() == Qt::Key_CapsLock) {\n             fCapsLock = !fCapsLock;\n         }\n@@ -253,7 +253,7 @@ bool AskPassphraseDialog::eventFilter(QObject *object, QEvent *event)\n      * Shift key is not down and the result is an upper case character.\n      */\n     if (event->type() == QEvent::KeyPress) {\n-        QKeyEvent *ke = static_cast<QKeyEvent *>(event);\n+        QKeyEvent *ke = dynamic_cast<QKeyEvent *>(event);\n         QString str = ke->text();\n         if (str.length() != 0) {\n             const QChar *psz = str.unicode();"
      },
      {
        "sha": "abc29a6c331da1f344438d4b60309549627394e9",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -153,7 +153,7 @@ class AmountSpinBox: public QAbstractSpinBox\n     {\n         if (event->type() == QEvent::KeyPress || event->type() == QEvent::KeyRelease)\n         {\n-            QKeyEvent *keyEvent = static_cast<QKeyEvent *>(event);\n+            QKeyEvent *keyEvent = dynamic_cast<QKeyEvent *>(event);\n             if (keyEvent->key() == Qt::Key_Comma)\n             {\n                 // Translate a comma into a period"
      },
      {
        "sha": "baefc2d2a19b24a1c05e24faf00cc6031453c2c5",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -939,7 +939,7 @@ void BitcoinGUI::changeEvent(QEvent *e)\n     {\n         if(clientModel && clientModel->getOptionsModel() && clientModel->getOptionsModel()->getMinimizeToTray())\n         {\n-            QWindowStateChangeEvent *wsevt = static_cast<QWindowStateChangeEvent*>(e);\n+            QWindowStateChangeEvent *wsevt = dynamic_cast<QWindowStateChangeEvent*>(e);\n             if(!(wsevt->oldState() & Qt::WindowMinimized) && isMinimized())\n             {\n                 QTimer::singleShot(0, this, SLOT(hide()));"
      },
      {
        "sha": "9e6a20592fba18e1459b5a790d22b182501a8de5",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -478,7 +478,7 @@ bool ToolTipToRichTextFilter::eventFilter(QObject *obj, QEvent *evt)\n {\n     if(evt->type() == QEvent::ToolTipChange)\n     {\n-        QWidget *widget = static_cast<QWidget*>(obj);\n+        QWidget *widget = dynamic_cast<QWidget*>(obj);\n         QString tooltip = widget->toolTip();\n         if(tooltip.size() > size_threshold && !tooltip.startsWith(\"<qt\") && !Qt::mightBeRichText(tooltip))\n         {"
      },
      {
        "sha": "fa6c98e94e6e28bb4dea77ecb6fbdb8625092569",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -39,7 +39,7 @@ ModalOverlay::~ModalOverlay()\n bool ModalOverlay::eventFilter(QObject * obj, QEvent * ev) {\n     if (obj == parent()) {\n         if (ev->type() == QEvent::Resize) {\n-            QResizeEvent * rev = static_cast<QResizeEvent*>(ev);\n+            QResizeEvent * rev = dynamic_cast<QResizeEvent*>(ev);\n             resize(rev->size());\n             if (!layerIsVisible)\n                 setGeometry(0, height(), width(), height());"
      },
      {
        "sha": "f1e86fb0f1e706e7f3a7c562ac6597c4658191f0",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -346,7 +346,7 @@ PaymentServer::~PaymentServer()\n bool PaymentServer::eventFilter(QObject *object, QEvent *event)\n {\n     if (event->type() == QEvent::FileOpen) {\n-        QFileOpenEvent *fileEvent = static_cast<QFileOpenEvent*>(event);\n+        QFileOpenEvent *fileEvent = dynamic_cast<QFileOpenEvent*>(event);\n         if (!fileEvent->file().isEmpty())\n             handleURIOrFile(fileEvent->file());\n         else if (!fileEvent->url().isEmpty())"
      },
      {
        "sha": "de15734db940b3d9415a98f9d714648cb2270613",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -512,7 +512,7 @@ bool RPCConsole::eventFilter(QObject* obj, QEvent *event)\n {\n     if(event->type() == QEvent::KeyPress) // Special key handling\n     {\n-        QKeyEvent *keyevt = static_cast<QKeyEvent*>(event);\n+        QKeyEvent *keyevt = dynamic_cast<QKeyEvent*>(event);\n         int key = keyevt->key();\n         Qt::KeyboardModifiers mod = keyevt->modifiers();\n         switch(key)"
      },
      {
        "sha": "21d3266d3f2a14b5b3dc358946557e71e5affb55",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -141,7 +141,7 @@ SplashScreen::~SplashScreen()\n \n bool SplashScreen::eventFilter(QObject * obj, QEvent * ev) {\n     if (ev->type() == QEvent::KeyPress) {\n-        QKeyEvent *keyEvent = static_cast<QKeyEvent *>(ev);\n+        QKeyEvent *keyEvent = dynamic_cast<QKeyEvent *>(ev);\n         if(keyEvent->text()[0] == 'q') {\n             StartShutdown();\n         }"
      },
      {
        "sha": "695c6ef10c7e648360a4be91ba5b75276858b37d",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd355e29febe9760e004877b19b890635386e904/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd355e29febe9760e004877b19b890635386e904/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=fd355e29febe9760e004877b19b890635386e904",
        "patch": "@@ -605,7 +605,7 @@ bool TransactionView::eventFilter(QObject *obj, QEvent *event)\n {\n     if (event->type() == QEvent::KeyPress)\n     {\n-        QKeyEvent *ke = static_cast<QKeyEvent *>(event);\n+        QKeyEvent *ke = dynamic_cast<QKeyEvent *>(event);\n         if (ke->key() == Qt::Key_C && ke->modifiers().testFlag(Qt::ControlModifier))\n         {\n              GUIUtil::copyEntryData(transactionView, 0, TransactionTableModel::TxPlainTextRole);"
      }
    ]
  }
]