laanwj,2018-02-01T17:44:57Z,"There's a sizable performance penalty in using dynamic_cast instead of static_cast due to the extra checks, and it needs RTTI type information enabled.\nI think it's unnecessary in all of these cases as the type of the object is already checked through qt's own introspection system. There's no need to do it through C++'s too.",https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-362345951,362345951,
ghost,2018-02-01T17:53:09Z,"Doubt there would be any performance issues in this particular case.\n\nSince Qt is a 3rd party library I wouldn't rely on static_casting it. \n\nIf the code must compile with RTTI disabled I believe the Qt solution is qobject_cast https://doc.qt.io/qt-5/qobject.html#qobject_cast",https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-362348297,362348297,
laanwj,2018-02-01T18:16:31Z,"So do you see any concrete problems with the current code? Any realistic way this can fail the way it is now?\n\nIf not, I don't see a reason to change it.\n\nWe don't use dynamic_cast anywhere in the code and without a very good reason we shouldn't introduce it either.",https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-362354669,362354669,
ghost,2018-02-01T18:30:20Z,"Unless something happens inside Qt, the code will function correctly.\n\nI just have strong feeling about stuff like this.",https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-362358596,362358596,
ajtowns,2018-02-02T06:20:34Z,"The qt doc examples use `static_cast` -- http://doc.qt.io/qt-5/eventsandfilters.html so this seems fine as is, and even with these changes mistakes would still cause a crash since a nullptr returned by dynamic_cast will be immediately dereferenced. Mightn't be terrible to use dynamic_cast (or qobject_cast) in the if() statement instead of checking event->type(), but not sure it would be worth the ",https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-362497509,362497509,
promag,2018-02-06T10:00:49Z,NACK. See ☝️ by @ajtowns.,https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-363371766,363371766,
laanwj,2018-02-06T12:39:48Z,"Closing, there seems to be agreement to not do this",https://github.com/bitcoin/bitcoin/pull/12325#issuecomment-363410064,363410064,
