MarcoFalke,2018-02-04T23:29:58Z,Tests need update (test_bitcoin: coins.cpp:205: bool CCoinsViewCache::Flush(): Assertion `cachedCoinsUsage == 0' failed.),https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-362949733,362949733,
theuni,2018-02-05T21:42:10Z,"@TheBlueMatt pointed out that this shouldn't be new for 0.16, and I've now reproduced with 0.15.1.\n\nSo, this probably shouldn't be an 0.16 blocker.",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-363230965,363230965,
TheBlueMatt,2018-02-06T02:07:55Z,"I ran into this a few times during testing, which was somewhat surprising so maybe it is somehow easier to hit now? Not sure why that would be...still, worth fixing if there's an easy fix for 0.16 (eaiser fix is probably to make the ActivateBestChain if (ShutdownRequested()) check a if (ShutdownRequested() && chainActive.Tip() != nullptr) check).",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-363286706,363286706,
TheBlueMatt,2018-02-06T18:46:35Z,I prefer the fix in #12367 as much simpler.,https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-363524167,363524167,
MarcoFalke,2018-02-06T19:27:36Z,Closing for now,https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-363536920,363536920,
eklitzke,2018-02-12T23:13:40Z,"Without this change, I still get a segfault from bitcoind master (commit c997f8808256521397f1c003bb1e9896fee6eaa0) reliably. To reproduce:\n * Run `bitcoind -reindex-chainstate -daemon=0`\n * Immediately type Ctrl-c, and wait for bitcoind to stop\n * bitcoind segfaults with this stack trace:\n\n```\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\n#1  0x00007f514a4",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-365095741,365095741,
theuni,2018-02-13T05:58:08Z,"Thanks for helping to reproduce, eklitzke! Indeed I managed to force this with this patch:\n```diff\n--- a/src/init.cpp\n+++ b/src/init.cpp\n@@ -1520,6 +1520,7 @@ bool AppInitMain()\n                         break;\n                     }\n                 }\n+                fRequestShutdown = true;\n\n                 if (!is_coinsview_empty) {\n                     uiInterface.InitMe",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-365159606,365159606,
ryanofsky,2018-02-13T16:06:28Z,"@TheBlueMatt, in IRC you wrote ""we could revert to the initial suggestion of #12349 and just short-circuit flushing, but I really hate that"" https://botbot.me/freenode/bitcoin-core-dev/msg/96765327/\n\nCould you explain more? I haven't looked in detail, but at first glance this looks like a simple, obvious fix that doesn't rely on action at a distance like the one in #12367.",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-365313700,365313700,
wumpus,2018-02-13T17:05:13Z,You're deferring to the wrong wumpus!,https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-365333555,365333555,
laanwj,2018-02-15T13:40:28Z,"utACK\n\nWe absolutely should have tests for this! it's a bit silly to merge a fix for something (#12367) then need another fix for the same thing, within the same rc phase.",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-365930003,365930003,
theuni,2018-02-15T18:59:30Z,"@laanwj Yea, this is a mess :(\n\nAs a small data point, though, we believed this to be qt only and couldn't hit it with rc3. It was @eklitzke's bitcoind backtrace that made it easy to reproduce.\n\nI just tested with current master and can confirm that the bug and fix are still valid.\n\nAny suggestions for testing? Only thing I can think of is an rpc test that runs bitcoind with something ",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-366027209,366027209,
promag,2018-02-15T19:05:29Z,Tested ACK ceaefdd. Can't reproduce the crash with this change.,https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-366028851,366028851,
laanwj,2018-02-15T21:16:20Z,"utACK https://github.com/bitcoin/bitcoin/pull/12349/commits/ceaefdd5f362537a1908d0095059e4be788f3dee\n\n> Any suggestions for testing? Only thing I can think of is an rpc test that runs bitcoind with something like -stopafterblockimport, but that'd only be testing a really specific code path.\n\n@TheBlueMatt's suggestion was pretty good\n```\n<BlueMatt> yes, one thing I did during testing wa",https://github.com/bitcoin/bitcoin/pull/12349#issuecomment-366064159,366064159,
