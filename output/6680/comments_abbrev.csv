dcousens,2015-09-16T15:38:03Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-140780250,140780250,
promag,2015-09-19T22:34:23Z,"I choose `uint256` because I don't know the ownership, thread safety and lifetime of `CBlockIndex*` objects.\n\nOtherwise LGTM.\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-141711807,141711807,
sipa,2015-09-19T23:28:14Z,"They have infinite lifetime. Some fields are mutable (especially validation state and disk offsets), but even CBlockIndex::GetAncestor can be used without locking.\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-141718513,141718513,
dcousens,2015-09-20T01:52:17Z,@sipa didn't that invariant change with pruning?\n,https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-141724768,141724768,
sipa,2015-09-20T01:57:07Z,"Since pruning, the disk position information can go from existing to\nnonexisting, but otherwise, nothing chamged. CBlockIndex entries still live\nforever, and their pprev, pskip, chainwork, block hash, difficulty,\ntimestamp, height, ... are still immutable.\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-141724872,141724872,
dcousens,2015-09-20T02:00:28Z,"@sipa ah,  so that was what could change in https://github.com/bitcoin/bitcoin/pull/6688?\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-141725068,141725068,
laanwj,2015-09-21T12:03:39Z,"This makes sense. If there comes a time that CBlockIndex\* are no longer infinitely kept in memory, we need to replace them with another handle type throughout the code, and this change will not be a specific blocker.\n\nutACK.\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-141952217,141952217,
sipa,2015-09-22T16:57:52Z,"I think ReadBlockFromDisk should grab cs_main by itself, only when read the disk position information, and release before actual reading. That way, the publisher doesn't need access to cs_main anymore.\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-142348150,142348150,
dcousens,2015-09-22T22:19:43Z,"Agreed with @sipa,  do the existing locks allow for recursive locking? Or would we have to re-write a lot of that code?\n",https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-142438190,142438190,
sipa,2015-09-22T22:21:50Z,The sync.h locks support recursive locking.\n,https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-142438591,142438591,
jgarzik,2015-09-22T22:53:11Z,+1 on not holding across disk I/O\n,https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-142443621,142443621,
jonasschnelli,2015-09-26T08:13:37Z,@sipa: do you prefer adding the cs_main lock to `ReadBlockFromDisk()` within this PR?\nI personally would recommend to keep this PR as it is and address the `ReadBlockFromDisk()` cs_main lock in another PR because it might need some adaptation here and there.\n,https://github.com/bitcoin/bitcoin/pull/6680#issuecomment-143409163,143409163,
