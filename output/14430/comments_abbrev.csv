practicalswift,2018-10-08T06:10:33Z,"Concept ACK\n\nVery nice! Thanks for working on this",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-427729870,427729870,
Empact,2018-10-09T00:41:55Z,Ref #12775 which this builds on.,https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-428022626,428022626,
Empact,2018-10-09T00:58:37Z,"How about responding to @MarcoFalke's suggestions?\nhttps://github.com/bitcoin/bitcoin/pull/12775#discussion_r216164298\nhttps://github.com/bitcoin/bitcoin/pull/12775#discussion_r216158186\n",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-428025048,428025048,
Christewart,2018-10-09T03:27:24Z,">why gen::nonEmpty here?\n\nI believe blocks, by consensus, are required to have at least one transaction in them (citation needed). ",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-428047290,428047290,
Empact,2018-10-09T03:41:09Z,"> > why gen::nonEmpty here?\n> \n> I believe blocks, by consensus, are required to have at least one transaction in them (citation needed).\n\nI believe that's correct. Relevant check in `CheckBlock` here: https://github.com/bitcoin/bitcoin/blob/4de0b5f39cc35636d499ad29ee3c63384b13fc76/src/validation.cpp#L3112-L3118",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-428049149,428049149,
fanquake,2018-10-20T07:00:43Z,"Rebooted the tests, as they were still stuck on the initial linting error.\n\nThis would be a good opportunity to address some of the nits left over from #12775, as well as possibly moving to a newer version of rapidcheck, which we can host at https://github.com/bitcoin-core. \nI bought that up on IRC with @laanwj [here](https://botbot.me/freenode/bitcoin-core-dev/2018-10-20/?msg=105598194&page",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-431555605,431555605,
Christewart,2018-10-24T14:05:39Z,"So I tried to adjust our build script that is found [here](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/rapidcheck.mk#L11) and failed to sift through the cmake weeds. \n\nIt isn't as trivial as running \n\n```\n$ cmake . \n$ make install \n```\n\nsince we needs extra functionality located in this package \n\nhttps://github.com/bitcoin-core/rapidcheck/tree/master/extra",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-432671520,432671520,
Empact,2018-11-08T22:10:52Z,@Christewart have you seen this? https://github.com/emil-e/rapidcheck/blob/master/doc/boost_test.md ,https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-437174462,437174462,
Christewart,2018-11-08T22:13:51Z,"@empact Yes! That is how I hook nicely into the existing boost testing framework. \n\nWhat I am currently blocked on is adding that submodule to our ci build. Please see the comment above for details.\n\nWith these proeprties, if they are enabled, you can just run them simply with \n\n```\n$ ./test_bitcoin \n```\n\nsince we integrate with `boost_test`\n\nEDIT:\n\nAlso I am short on t",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-437175252,437175252,
Christewart,2018-11-30T20:32:05Z,"It looks like there is now an easy configuration option in rapidcheck to allow for the installing of `extra/boost_test` by setting a simple configuration option: \n\nhttps://github.com/emil-e/rapidcheck/issues/222#issuecomment-443259105\n\nWe will need to update the rapidcheck dependency to at least https://github.com/emil-e/rapidcheck/commit/5f0eb302f28979395a070bbdfde1f6d4cad94409",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-443330631,443330631,
fanquake,2018-12-01T05:17:13Z,"@Christewart I've made an attempt to use the new install flags in #14853.\n\nWhen I merge these changes on top of that PR (using the new rapidcheck) I'm seeing some compilation errors. This is on a macOS 10.14.1 machine, using Xcode 10.1 (10B61):\n```\nIn file included from test/gen/transaction_gen.cpp:1:\nIn file included from ./test/gen/transaction_gen.h:4:\nIn file included from ./test/ge",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-443400827,443400827,
fanquake,2019-04-03T10:33:48Z,"@Christewart Could you rebase this, now that #14853 has been merged?",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-479433690,479433690,
Christewart,2019-04-17T20:22:39Z,"Rebased this branch, but i am getting a new error when running these tests locally. This doesn't seem related to my PR AFAICT\n\n```\nchris@chris:~/dev/bitcoin/src/test$ ./test_bitcoin\nRunning 365 test cases...\nUsing configuration: seed=16472686160129483926\nError: Specified -walletdir ""/tmp/test_common_Bitcoin Core/1555532449_497584857/tempdir/path_does_not_exist"" does not exist\nError: ",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-484246618,484246618,
practicalswift,2019-04-17T20:31:34Z,"@Christewart Yes, those annoying errors are unrelated: see discussion in #15352 :-)",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-484249740,484249740,
jonatack,2019-07-29T08:38:02Z,@fanquake I wrote @Christewart about this PR 3 days ago and he might have some time this week.,https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-515900466,515900466,
Christewart,2019-07-29T13:58:32Z,"So i rebased onto master, and fixed various things that needed to be fixed with API changes in master. \n\n>Do you have time to continue with this RapidCheck test work going forward? If so, could you rebase this on master (to pull in a build fix), address outstanding nits and squash your commits etc.\n\n>I'm wondering what the state of the RapidCheck project is, as the repo hasn't seen any act",https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-516003117,516003117,
Christewart,2019-08-20T10:51:18Z,@jonatack I think everything is good to go now?,https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-522960584,522960584,
fanquake,2020-04-03T11:32:08Z,Closing this in light of #18514.,https://github.com/bitcoin/bitcoin/pull/14430#issuecomment-608383728,608383728,
MarcoFalke,2018-10-08T03:14:53Z,"Please use bracket syntax includes (""#include <foo.h>"") instead of quote syntax includes:",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223241898,223241898,src/test/gen/block_gen.h
instagibbs,2018-10-08T04:37:32Z,the wallet has no idea how to make a script using numbers beyond OP_16. Once you do n-of-17 you need a single byte pushing instruction to push the number `17`,https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223247105,223247105,src/test/gen/crypto_gen.cpp
Empact,2018-10-09T00:55:52Z,"Seems you could directly `tie` into the `header` fields, to make this more succinct.",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223535116,223535116,src/test/gen/block_gen.h
Empact,2018-10-09T00:59:28Z,"nit: looks like this method is defined with the same name here and in `merkleblock_gen.h`, how about:\n* applying `static` more liberally?\n* renaming one or the other?",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223535561,223535561,src/test/gen/bloom_gen.cpp
Empact,2018-10-09T00:59:47Z,nit: `using`?,https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223535598,223535598,src/test/gen/script_gen.h
Christewart,2018-10-09T02:39:37Z,I think the original reason for this was actually that more than 15 public keys it was too big of a val to push onto the stack (520 byte limit),https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223546544,223546544,src/test/gen/crypto_gen.cpp
Christewart,2018-10-09T02:52:47Z,Not sure what you mean about this,https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223547907,223547907,src/test/gen/block_gen.h
Christewart,2018-10-09T02:54:13Z,So basically mark as `static` in merkleblock_gen.h and then include that header file and use it here? ,https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223548045,223548045,src/test/gen/bloom_gen.cpp
Empact,2018-10-09T03:02:38Z,"Well they have different implementations for different return results. Calling this `bloom_gen.cpp` implementation `static` will prevent it from being used outside this file, which would reduce the risk of conflicts and otherwise be appropriate as the method is only used here. I don't think you want to apply `static` in the header, as that will result in the function being compiled into every incl",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r223548900,223548900,src/test/gen/bloom_gen.cpp
practicalswift,2018-10-14T21:21:45Z,"Is the presence of `LoadBloomFilter` auto-detected?\n\nSame question applies to `LoadedBloomFilter`, `P2SHSPK`, `P2WSHSPK` and `SignedTx` which all looks like  unused functions when taking a na√Øve look :-)",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r225009505,225009505,src/test/gen/bloom_gen.cpp
practicalswift,2018-10-14T21:23:27Z,"Needs copyright message :-)\n\nApplies to all added files in this PR.",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r225009571,225009571,src/test/block_properties.cpp
practicalswift,2018-10-14T21:24:05Z,"`// namespace rc` to make it consistent with the rest of the project.\n\nApplies to all files with `//namespace` in this PR :-)",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r225009598,225009598,src/test/gen/block_gen.h
practicalswift,2018-10-24T05:40:46Z,Nit: Use `using` instead :-),https://github.com/bitcoin/bitcoin/pull/14430#discussion_r227647597,227647597,src/test/gen/block_gen.h
practicalswift,2018-10-24T05:41:08Z,Nit: Use `using` instead :-),https://github.com/bitcoin/bitcoin/pull/14430#discussion_r227647652,227647652,src/test/gen/transaction_gen.h
fanquake,2019-07-29T02:58:59Z,You can just use 2019 here,https://github.com/bitcoin/bitcoin/pull/14430#discussion_r308041338,308041338,src/test/bloom_properties.cpp
fanquake,2019-07-29T03:00:10Z,Please put this back. Same in the `.h`.,https://github.com/bitcoin/bitcoin/pull/14430#discussion_r308041482,308041482,src/test/gen/crypto_gen.cpp
jonatack,2019-08-17T11:25:18Z,"nit: could update ""2013-2016"" in this file's copyright header",https://github.com/bitcoin/bitcoin/pull/14430#discussion_r314944115,314944115,src/Makefile.test.include
