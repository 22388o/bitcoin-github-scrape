jonatack,2021-05-03 23:00:45,Thanks for the early feedback @vasild! Updated and ready for review.,https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-831588071,831588071,
DrahtBot,2021-05-04 00:13:24,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21941 (fuzz: Call const member functions in addrman fuzz test only once by MarcoFalke)\n* #21940 (refactor: Mark CAddrMan",https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-831611812,831611812,
jonatack,2021-05-04 16:39:46,Thank you @vasild. Removed the defaults and improved the fuzzing per `git diff ac01ec0 09f2c20`. ,https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-832083003,832083003,
jonatack,2021-05-06 07:10:26,Rebased for CI fix on master.,https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-833286989,833286989,
vasild,2021-05-11 12:44:01,"The latest push removed the default value for the `network` argument from `CAddrMan::GetAddr()` and from `CConnMan::GetAddresses()` too. The latter deserves a default value because now there are a lot of call sites like `connman.GetAddresses(..., std::nullopt)`, no?",https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-838409013,838409013,
jonatack,2021-05-11 13:13:03,"> GetAddresses(..., std::nullopt)`\n\nOnly in two places outside of tests, so it seemed better to pass it explicitly.\n",https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-838450410,838450410,
jonatack,2021-05-12 15:29:01,"Thanks @vasild, agreed. Making them explicit was more work, but I reckon sooner or later someone is going to make them explicit so may as well do it now.",https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-839866656,839866656,
jonatack,2021-05-12 15:32:13,"Only change is @promag's suggestion: ` git diff bdc57fc 9d17f30`\n```diff\ndiff --git a/src/addrman.cpp b/src/addrman.cpp\nindex 473ac21ad0..ceab1689d7 100644\n--- a/src/addrman.cpp\n+++ b/src/addrman.cpp\n@@ -494,6 +494,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size\n+    const int64_t now{GetAdjustedTime()};\n     for (unsigned int n = 0; n < vRando",https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-839869158,839869158,
jonatack,2021-05-19 11:10:17,"rebased after merge of #21506, no other change\n\n`git range-diff 4da26fb 9d17f30 ce6bca8`\n```diff\n     @@ src/net_processing.cpp: void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n              pfrom.vAddrToSend.clear();\n              std::vector<CAddress> vAddr;\n-         if (pfrom.HasPermission(PF_ADDR)) {\n+         if (pfrom.HasPermission(NetPermissi",https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-843998813,843998813,
laanwj,2021-05-20 18:47:59,Code review and lightly tested ACK ce6bca88e8c685c69686e0b8dc095ffc3e2ac34d,https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-845382366,845382366,
jarolrod,2021-05-20 18:55:04,post-merge ACK üëç,https://github.com/bitcoin/bitcoin/pull/21843#issuecomment-845388483,845388483,
vasild,2021-05-03 12:10:40,"Maybe print the unrecognized string:\n```suggestion\n        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(""Network not recognized: %s"", request.params[1].get_str());\n```",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625042438,625042438,src/rpc/net.cpp
vasild,2021-05-03 12:13:34,"To designate ""not specified / any network"", maybe `std::optional` would fit better than using the special value `NET_MAX`? I plan to remove `NET_MAX` some day.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625043781,625043781,src/addrman.h
vasild,2021-05-03 12:16:12,"The default value can be removed since all callers of this method always provide the argument.\n\n```suggestion\n    void GetAddr_(std::vector<CAddress> &vAddr, size_t max_addresses, size_t max_pct, Network net) EXCLUSIVE_LOCKS_REQUIRED(cs);\n```",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625045041,625045041,src/addrman.h
jonatack,2021-05-03 12:22:48,I was asking myself if `std::optional` would be better here. Thanks!,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625048295,625048295,src/addrman.h
jonatack,2021-05-03 19:22:48,Good idea! Done.,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625311317,625311317,src/rpc/net.cpp
jonatack,2021-05-03 19:23:21,Indeed! Done.,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625311617,625311617,src/addrman.h
jonatack,2021-05-03 19:23:31,Indeed! Done.,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625311691,625311691,src/addrman.h
vasild,2021-05-04 07:10:45,"It just occurred to me that the only (non test) caller of `GetAddr()` is `GetAddresses()` which will always pass 3 arguments. Maybe consider removing the default from here since it is not necessary.\n\n```suggestion\n    std::vector<CAddress> GetAddr(size_t max_addresses, size_t max_pct, std::optional<Network> network)\n```",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625554482,625554482,src/addrman.h
vasild,2021-05-04 07:23:36,Why remove this test?,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625561771,625561771,test/functional/rpc_net.py
vasild,2021-05-04 07:27:37,"This move is unrelated to this PR. If this PR does not fly, when the move will not fly either.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625564054,625564054,doc/release-notes.md
jonatack,2021-05-04 08:53:48,"It's redundant with the assertion in line 215 (before this change they were two identical tests as well, by two different authors).",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625615095,625615095,test/functional/rpc_net.py
jonatack,2021-05-04 09:00:14,"I think it's ok. If this PR doesn't make the release, I can move the existing note to the right place when the notes are moved to the wiki for editing (I usually make some corrections in the wiki before the notes are moved back to the repo for -final). ",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625619180,625619180,doc/release-notes.md
jonatack,2021-05-04 09:21:21,"Good idea, doing (this will add fuzz coverage for change too).",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625632446,625632446,src/addrman.h
promag,2021-05-12 09:21:32,"8d4b14e001ec026f346c6b4b00509adae7769415\n\nI'd use a different approach to not mix different conditions:\n\n```cpp\n// Filter by network (optional)\nif (network != std::nullopt && ai.GetNetClass() != network) continue;\n\n// Filter for quality\nif (ai.IsTerrible()) continue;\n\nvAddr.push_back(ai);\n```\n\nAlso note that it first filters by network, which I think is slightly better.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r630874278,630874278,src/addrman.cpp
promag,2021-05-12 09:25:02,"8942494e8c5eff8a3e268fe830868faf8ce19f9f\n\nWhy not `network = std::nullopt`? It would avoid changes in call sites.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r630876740,630876740,src/addrman.h
jonatack,2021-05-12 09:36:19,"Yes, that is what the PR initially did, as it was a smaller diff and I tend to start with the smaller change. It is now passed explicitly in reponse to review feedback. I agree that explicit is good too.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r630884631,630884631,src/addrman.h
promag,2021-05-12 09:43:33,"You can dismiss my comment, just checked @vasild comment https://github.com/bitcoin/bitcoin/pull/21843#discussion_r625554482.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r630889511,630889511,src/addrman.h
jonatack,2021-05-12 15:25:49,"Thanks @promag, done and added a commit by you for the gettime optimization.",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r631145323,631145323,src/addrman.cpp
sipa,2021-05-20 19:59:44,"~~Won't this result in infnite loops, if there are not enough of the requested net class? I think doing this correctly requires keeping track of the counts per network.~~\n\nEDIT: nevermind, it's bounded by the size of vRandom as pointed out below.\n\n",https://github.com/bitcoin/bitcoin/pull/21843#discussion_r636431728,636431728,src/addrman.cpp
jonatack,2021-05-20 20:13:41,If the early exit isn't triggered (e.g. `getnodeaddresses 10000 i2p`) the loop terminates after it has iterated through vRandom.,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r636439771,636439771,src/addrman.cpp
vasild,2021-05-21 08:09:38,Today's computers are so fast that even the infinite loop finishes in about 6 seconds.,https://github.com/bitcoin/bitcoin/pull/21843#discussion_r636723391,636723391,src/addrman.cpp
jonatack,2021-05-21 08:14:15,(I think the added functional tests here cover it.),https://github.com/bitcoin/bitcoin/pull/21843#discussion_r636726197,636726197,src/addrman.cpp
