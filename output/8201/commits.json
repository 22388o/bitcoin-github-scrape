[
  {
    "sha": "fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI2YzQyMGJmYjdkYmFkNjc4MWYzMWYyMjJhNjZlZjUyZjJhZTQ1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-13T17:36:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-13T19:34:41Z"
      },
      "message": "[qa] util: Move check_fee_amount out of wallet.py",
      "tree": {
        "sha": "ef66821d317ca074de5a350526b88f90e2e1f9f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef66821d317ca074de5a350526b88f90e2e1f9f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa26c420bfb7dbad6781f31f222a66ef52f2ae45/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44c1b1c9bb54082625c7ad76af25473abf79f866",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44c1b1c9bb54082625c7ad76af25473abf79f866",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44c1b1c9bb54082625c7ad76af25473abf79f866"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "782df52d62af917a9fe449abad56b185af251e93",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa26c420bfb7dbad6781f31f222a66ef52f2ae45/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa26c420bfb7dbad6781f31f222a66ef52f2ae45/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
        "patch": "@@ -477,6 +477,15 @@ def random_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n \n     return (txid, signresult[\"hex\"], fee)\n \n+def assert_fee_amount(fee, tx_size, fee_per_kB):\n+    \"\"\"Assert the fee was in range\"\"\"\n+    target_fee = tx_size * fee_per_kB / 1000\n+    if fee < target_fee:\n+        raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+    # allow the wallet's estimation to be at most 2 bytes off\n+    if fee > (tx_size + 2) * fee_per_kB / 1000:\n+        raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+\n def assert_equal(thing1, thing2):\n     if thing1 != thing2:\n         raise AssertionError(\"%s != %s\"%(str(thing1),str(thing2)))"
      },
      {
        "sha": "0b7eb52f07fd54c714f488453cef98af401470f9",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa26c420bfb7dbad6781f31f222a66ef52f2ae45/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa26c420bfb7dbad6781f31f222a66ef52f2ae45/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
        "patch": "@@ -11,12 +11,7 @@ class WalletTest (BitcoinTestFramework):\n     def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size):\n         \"\"\"Return curr_balance after asserting the fee was in range\"\"\"\n         fee = balance_with_fee - curr_balance\n-        target_fee = fee_per_byte * tx_size\n-        if fee < target_fee:\n-            raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n-        # allow the node's estimation to be at most 2 bytes off\n-        if fee > fee_per_byte * (tx_size + 2):\n-            raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+        assert_fee_amount(fee, tx_size, fee_per_byte * 1000)\n         return curr_balance\n \n     def __init__(self):"
      }
    ]
  },
  {
    "sha": "fae1d063fc8a54067a8527d249d8801a00feef03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWUxZDA2M2ZjOGE1NDA2N2E4NTI3ZDI0OWQ4ODAxYTAwZmVlZjAz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-13T17:52:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-13T19:35:04Z"
      },
      "message": "[qa] fundrawtransaction: Fix race, assert amounts",
      "tree": {
        "sha": "0303af4009458347cddd9551f7a37ffbf7d35901",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0303af4009458347cddd9551f7a37ffbf7d35901"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae1d063fc8a54067a8527d249d8801a00feef03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae1d063fc8a54067a8527d249d8801a00feef03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae1d063fc8a54067a8527d249d8801a00feef03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae1d063fc8a54067a8527d249d8801a00feef03/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa26c420bfb7dbad6781f31f222a66ef52f2ae45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa26c420bfb7dbad6781f31f222a66ef52f2ae45"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "228574e6718037bf6dc67229c058dd1d35d76062",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae1d063fc8a54067a8527d249d8801a00feef03/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae1d063fc8a54067a8527d249d8801a00feef03/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=fae1d063fc8a54067a8527d249d8801a00feef03",
        "patch": "@@ -58,7 +58,6 @@ def run_test(self):\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n \n-        self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n@@ -552,7 +551,6 @@ def run_test(self):\n         self.nodes[1].walletpassphrase(\"test\", 100)\n         signedTx = self.nodes[1].signrawtransaction(fundedTx['hex'])\n         txId = self.nodes[1].sendrawtransaction(signedTx['hex'])\n-        self.sync_all()\n         self.nodes[1].generate(1)\n         self.sync_all()\n \n@@ -572,7 +570,6 @@ def run_test(self):\n \n         for i in range(0,20):\n             self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01)\n-        self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n@@ -603,7 +600,6 @@ def run_test(self):\n \n         for i in range(0,20):\n             self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01)\n-        self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n@@ -677,15 +673,25 @@ def run_test(self):\n         signedtx = self.nodes[0].signrawtransaction(signedtx[\"hex\"])\n         assert(signedtx[\"complete\"])\n         self.nodes[0].sendrawtransaction(signedtx[\"hex\"])\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        #######################\n+        # Test feeRate option #\n+        #######################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n \n         inputs = []\n         outputs = {self.nodes[2].getnewaddress() : 1}\n         rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n         result = self.nodes[3].fundrawtransaction(rawtx) # uses min_relay_tx_fee (set by settxfee)\n         result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee})\n         result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10*min_relay_tx_fee})\n-        assert_equal(result['fee']*2, result2['fee'])\n-        assert_equal(result['fee']*10, result3['fee'])\n+        result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n+        assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      }
    ]
  }
]