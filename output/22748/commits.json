[
  {
    "sha": "2f0190320ddf45ff35f07950e8f01e8f15538043",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjAxOTAzMjBkZGY0NWZmMzVmMDc5NTBlOGYwMWU4ZjE1NTM4MDQz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-19T17:49:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-20T18:30:59Z"
      },
      "message": "Avoid temporary vectors/uint256s in VerifyTaprootCommitment\n\nAs XOnlyPubKey has a Span-based constructor, that can be used directly\nwithout needing to first convert the byte sequence into a vector, only\nto convert that to a uint256, which only then can then be passed as a\nspan to the constructor.",
      "tree": {
        "sha": "05382a819ef64d00fa2570912721cfdc0b829a82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05382a819ef64d00fa2570912721cfdc0b829a82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f0190320ddf45ff35f07950e8f01e8f15538043",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f0190320ddf45ff35f07950e8f01e8f15538043",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f0190320ddf45ff35f07950e8f01e8f15538043",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f0190320ddf45ff35f07950e8f01e8f15538043/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fc15d15667d9d9c4fb5515ce73c05b4596298ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fc15d15667d9d9c4fb5515ce73c05b4596298ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fc15d15667d9d9c4fb5515ce73c05b4596298ec"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "eafa9840d74f4581a06418df0e73d70c654a13be",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f0190320ddf45ff35f07950e8f01e8f15538043/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f0190320ddf45ff35f07950e8f01e8f15538043/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=2f0190320ddf45ff35f07950e8f01e8f15538043",
        "patch": "@@ -1874,9 +1874,9 @@ static bool VerifyTaprootCommitment(const std::vector<unsigned char>& control, c\n     assert(control.size() >= TAPROOT_CONTROL_BASE_SIZE);\n     assert(program.size() >= uint256::size());\n     //! The internal pubkey (x-only, so no Y coordinate parity).\n-    const XOnlyPubKey p{uint256(std::vector<unsigned char>(control.begin() + 1, control.begin() + TAPROOT_CONTROL_BASE_SIZE))};\n+    const XOnlyPubKey p{Span<const unsigned char>{control.data() + 1, control.data() + TAPROOT_CONTROL_BASE_SIZE}};\n     //! The output pubkey (taken from the scriptPubKey).\n-    const XOnlyPubKey q{uint256(program)};\n+    const XOnlyPubKey q{program};\n     // Compute the Merkle root from the leaf and the provided path.\n     const uint256 merkle_root = ComputeTaprootMerkleRoot(control, tapleaf_hash);\n     // Verify that the output pubkey matches the tweaked internal pubkey, after correcting for parity."
      }
    ]
  }
]