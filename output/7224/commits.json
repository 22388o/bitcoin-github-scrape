[
  {
    "sha": "b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTFmOWY1NTJiOWQ5ZmVhZDI0ODgwY2JkYTBjMGMxYjBmYjkwMTRl",
    "commit": {
      "author": {
        "name": "sidhujag",
        "email": "sidhujag@hotmail.com",
        "date": "2015-12-17T00:34:50Z"
      },
      "committer": {
        "name": "sidhujag",
        "email": "sidhujag@hotmail.com",
        "date": "2015-12-17T00:34:50Z"
      },
      "message": "bitcoin rename to syscoin\n\nbitcoin to syscoin\nBitcoin to Syscoin\nBITCOIN to SYSCOIN\nBTC to SYS\nbtc to sys\nsyscoincore to bitcoincore\nsyscoind-comparisontool bitcoind-comparisontool\n\nfile rename bitcoin to syscoin",
      "tree": {
        "sha": "990e81086163f7282f8524f4c9b99a38b88244f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/990e81086163f7282f8524f4c9b99a38b88244f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/comments",
    "author": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sidhujag",
      "id": 6238042,
      "node_id": "MDQ6VXNlcjYyMzgwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidhujag",
      "html_url": "https://github.com/sidhujag",
      "followers_url": "https://api.github.com/users/sidhujag/followers",
      "following_url": "https://api.github.com/users/sidhujag/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidhujag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidhujag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
      "organizations_url": "https://api.github.com/users/sidhujag/orgs",
      "repos_url": "https://api.github.com/users/sidhujag/repos",
      "events_url": "https://api.github.com/users/sidhujag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidhujag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a"
      }
    ],
    "stats": {
      "total": 19876,
      "additions": 8716,
      "deletions": 11160
    },
    "files": [
      {
        "sha": "c0a5d7ef0a54764eb1ff6856e374450a1ee4565a",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n *.tar.gz\n \n *.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/qt/test/test_bitcoin-qt\n+src/syscoin\n+src/syscoind\n+src/syscoin-cli\n+src/syscoin-tx\n+src/test/test_syscoin\n+src/qt/test/test_syscoin-qt\n \n # autoreconf\n Makefile.in\n@@ -29,8 +29,8 @@ config.log\n config.status\n configure\n libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n+src/config/syscoin-config.h\n+src/config/syscoin-config.h.in\n src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n@@ -55,7 +55,7 @@ src/qt/test/moc*.cpp\n *.o\n *.o-*\n *.patch\n-.bitcoin\n+.syscoin\n *.a\n *.pb.cc\n *.pb.h\n@@ -74,12 +74,12 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n+syscoin-qt\n+Syscoin-Qt.app\n \n # Unit-tests\n Makefile.test\n-bitcoin-qt_test\n+syscoin-qt_test\n src/test/buildenv.py\n \n # Resources cpp\n@@ -93,24 +93,24 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_syscoin.coverage/\n total.coverage/\n coverage_percent.txt\n \n #build tests\n linux-coverage-build\n linux-build\n win32-build\n-qa/pull-tester/run-bitcoind-for-test.sh\n+qa/pull-tester/run-syscoind-for-test.sh\n qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n qa/tmp\n cache/\n-share/BitcoindComparisonTool.jar\n+share/SyscoindComparisonTool.jar\n \n !src/leveldb*/Makefile\n \n /doc/doxygen/\n \n-libbitcoinconsensus.pc\n+libsyscoinconsensus.pc"
      },
      {
        "sha": "071a5e63652cba1462e50bcc5aa839409f7a7f88",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -29,19 +29,19 @@ matrix:\n   fast_finish: true\n   include:\n     - compiler: \": ARM\"\n-      env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+      env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" SYSCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" SYSCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" SYSCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n-    - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" SYSCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+    - compiler: \": syscoind\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" SYSCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n-      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" SYSCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" SYSCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n install:\n@@ -58,14 +58,14 @@ before_script:\n script:\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - SYSCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then export CCACHE_READONLY=1; fi\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir PACKAGE=bitcoin VERSION=$HOST\n-    - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - ./configure --cache-file=config.cache $SYSCOIN_CONFIG_ALL $SYSCOIN_CONFIG || ( cat config.log && false)\n+    - make distdir PACKAGE=syscoin VERSION=$HOST\n+    - cd syscoin-$HOST\n+    - ./configure --cache-file=../config.cache $SYSCOIN_CONFIG_ALL $SYSCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi"
      },
      {
        "sha": "d6cc3aab8879ce3af16c8fa1b5ab5f5d3df5839b",
        "filename": ".tx/config",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,7 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-\n-[bitcoin.qt-translation-012x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n-source_lang = en"
      },
      {
        "sha": "9540572d50a7b51b6dfea49876c8dad8170b39eb",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n-Contributing to Bitcoin Core\n+Contributing to Syscoin Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+The Syscoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n \n Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n \n@@ -67,9 +67,9 @@ Project maintainers aim for a quick turnaround on refactoring pull requests, so\n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+The following applies to code changes to the Syscoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Syscoin Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+Whether a pull request is merged into Syscoin Core rests with the project merge maintainers and ultimately the project lead. \n \n Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n \n@@ -82,7 +82,7 @@ In general, all pull requests must:\n   - not break the existing test suite;\n   - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n \n-Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+Patches that change Syscoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n \n \n ###Peer Review\n@@ -101,10 +101,10 @@ Project maintainers reserve the right to weigh the opinions of peer reviewers us\n \n Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n \n-Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+Where a patch set proposes to change the Syscoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n \n \n Release Policy\n --------------\n \n-The project leader is the release manager for each Bitcoin Core release.\n+The project leader is the release manager for each Syscoin Core release."
      },
      {
        "sha": "81d1ad0f111d6ba8c85b9db83de4432925e7efc5",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,6 +1,6 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2015 The Bitcoin Core developers\n+Copyright (c) 2009-2015 The Syscoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "fc7e63bd2752ef68264b9600a0b33dcf7db4c115",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n-Building Bitcoin\n+Building Syscoin\n \n-See doc/build-*.md for instructions on building bitcoind,\n+See doc/build-*.md for instructions on building syscoind,\n the intended-for-services, no-graphical-interface, reference\n-implementation of Bitcoin.\n\\ No newline at end of file\n+implementation of Syscoin."
      },
      {
        "sha": "41132e90b92edb2a8a205d46d2434d249be48eea",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 43,
        "deletions": 43,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -4,29 +4,29 @@ SUBDIRS = src\n \n GZIP_ENV=\"-9n\"\n \n-if BUILD_BITCOIN_LIBS\n+if BUILD_SYSCOIN_LIBS\n pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n+pkgconfig_DATA = libsyscoinconsensus.pc\n endif\n \n-BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/bitcoin-cli$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+SYSCOIND_BIN=$(top_builddir)/src/syscoind$(EXEEXT)\n+SYSCOIN_QT_BIN=$(top_builddir)/src/qt/syscoin-qt$(EXEEXT)\n+SYSCOIN_CLI_BIN=$(top_builddir)/src/syscoin-cli$(EXEEXT)\n+SYSCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n-OSX_APP=Bitcoin-Qt.app\n-OSX_DMG=Bitcoin-Core.dmg\n+OSX_APP=Syscoin-Qt.app\n+OSX_DMG=Syscoin-Core.dmg\n OSX_BACKGROUND_IMAGE=background.tiff\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n OSX_BASE_LPROJ_DIR=$(top_srcdir)/contrib/macdeploy/Base.lproj/InfoPlist.strings\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/syscoin.icns\n OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n \n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/syscoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n@@ -38,9 +38,9 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) $\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  leveldb_baseline.info test_syscoin_filtered.info total_coverage.info \\\n   baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+  leveldb_baseline_filtered.info test_syscoin_coverage.info test_syscoin.info\n \n dist-hook:\n \t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n@@ -55,11 +55,11 @@ distcheck-hook:\n distcleancheck:\n \t@:\n \n-$(BITCOIN_WIN_INSTALLER): all-recursive\n+$(SYSCOIN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(SYSCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(SYSCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(SYSCOIN_CLI_BIN) $(top_builddir)/release\n \t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \t@echo built $@\n@@ -79,11 +79,11 @@ $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+$(OSX_APP)/Contents/Resources/syscoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Syscoin-Qt: $(SYSCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n@@ -92,8 +92,8 @@ $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings: $(OSX_BASE_LPROJ_DIR\n \t$(INSTALL_DATA) $< $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+  $(OSX_APP)/Contents/Resources/syscoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Syscoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n if BUILD_DARWIN\n $(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n@@ -108,18 +108,18 @@ $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n \t@cd $(@D); $(LN_S) /Applications $(@F)\n \n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Syscoin-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"Bitcoin-Core\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"Syscoin-Core\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n \n $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_IMAGE)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL) $< $@\n $(APP_DIST_DIR)/.DS_Store: contrib/macdeploy/DS_Store\n \t$(INSTALL) $< $@\n \n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Syscoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n@@ -130,16 +130,16 @@ appbundle: $(OSX_APP_BUILT)\n deploy: $(OSX_DMG)\n endif\n if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n+deploy: $(SYSCOIN_WIN_INSTALLER)\n endif\n \n-$(BITCOIN_QT_BIN): FORCE\n+$(SYSCOIN_QT_BIN): FORCE\n \t$(MAKE) -C src qt/$(@F)\n \n-$(BITCOIND_BIN): FORCE\n+$(SYSCOIND_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n-$(BITCOIN_CLI_BIN): FORCE\n+$(SYSCOIN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n@@ -159,26 +159,26 @@ leveldb_baseline_filtered.info: leveldb_baseline.info\n baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n \t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n \n-test_bitcoin.info: baseline_filtered_combined.info\n+test_syscoin.info: baseline_filtered_combined.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -c -d $(abs_builddir)/src -t test_syscoin -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n-test_bitcoin_filtered.info: test_bitcoin.info\n+test_syscoin_filtered.info: test_syscoin.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-block_test.info: test_bitcoin_filtered.info\n+block_test.info: test_syscoin_filtered.info\n \t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n+\t-@TIMEOUT=15 qa/pull-tester/run-syscoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t SyscoinJBlockTest -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n block_test_filtered.info: block_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-rpc_test.info: test_bitcoin_filtered.info\n+rpc_test.info: test_syscoin_filtered.info\n \t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n@@ -187,37 +187,37 @@ rpc_test.info: test_bitcoin_filtered.info\n rpc_test_filtered.info: rpc_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+test_syscoin_coverage.info: baseline_filtered_combined.info test_syscoin_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_syscoin_filtered.info -o $@\n \n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_syscoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_syscoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+test_syscoin.coverage/.dirstamp:  test_syscoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n \t@touch $@\n \n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+cov: test_syscoin.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n if USE_COMPARISON_TOOL\n check-local:\n \t$(MKDIR_P) qa/tmp\n-\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n+\t@qa/pull-tester/run-syscoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+CLEANFILES = $(OSX_DMG) $(SYSCOIN_WIN_INSTALLER)\n \n .INTERMEDIATE: $(COVERAGE_INFO)\n \n clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_syscoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)"
      },
      {
        "sha": "42949c85959f3ab48f9c0d56db4c7f9f8f4dbde9",
        "filename": "README.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,42 +1,42 @@\n-Bitcoin Core integration/staging tree\n+Syscoin Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+[![Build Status](https://travis-ci.org/syscoin/syscoin.svg?branch=master)](https://travis-ci.org/syscoin/syscoin)\n \n-https://www.bitcoin.org\n+https://www.syscoin.org\n \n-What is Bitcoin?\n+What is Syscoin?\n ----------------\n \n-Bitcoin is an experimental new digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Syscoin is an experimental new digital currency that enables instant payments to\n+anyone, anywhere in the world. Syscoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Syscoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://www.bitcoin.org/en/download.\n+the Syscoin Core software, see https://www.syscoin.org/en/download.\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Syscoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+completely stable. [Tags](https://github.com/syscoin/syscoin/tags) are created\n+regularly to indicate new official, stable release versions of Syscoin Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/syscoin-dev)\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+Developer IRC can be found on Freenode at #syscoin-core-dev.\n \n Testing\n -------\n@@ -70,12 +70,12 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+[Syscoin Core's Transifex page](https://www.transifex.com/projects/p/syscoin/).\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n \n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/syscoin-translators)."
      },
      {
        "sha": "3f24d5ddc617b769904edb52095084ad36480dd5",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 281,
        "changes": 281,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,281 +0,0 @@\n-# ===========================================================================\n-#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# DESCRIPTION\n-#\n-#   Test for the Boost C++ libraries of a particular version (or newer)\n-#\n-#   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n-#   $BOOST_ROOT environment variable. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Peter Adolphs\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 23\n-\n-AC_DEFUN([AX_BOOST_BASE],\n-[\n-AC_ARG_WITH([boost],\n-  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n-    [use Boost library from a standard location (ARG=yes),\n-     from the specified location (ARG=<path>),\n-     or disable it (ARG=no)\n-     @<:@ARG=yes@:>@ ])],\n-    [\n-    if test \"$withval\" = \"no\"; then\n-        want_boost=\"no\"\n-    elif test \"$withval\" = \"yes\"; then\n-        want_boost=\"yes\"\n-        ac_boost_path=\"\"\n-    else\n-        want_boost=\"yes\"\n-        ac_boost_path=\"$withval\"\n-    fi\n-    ],\n-    [want_boost=\"yes\"])\n-\n-\n-AC_ARG_WITH([boost-libdir],\n-        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n-        [\n-        if test -d \"$withval\"\n-        then\n-                ac_boost_lib_path=\"$withval\"\n-        else\n-                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n-        fi\n-        ],\n-        [ac_boost_lib_path=\"\"]\n-)\n-\n-if test \"x$want_boost\" = \"xyes\"; then\n-    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n-    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n-    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n-        boost_lib_version_req_sub_minor=\"0\"\n-        fi\n-    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n-    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n-    succeeded=no\n-\n-    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n-    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n-    dnl this (as it rises problems for generic multi-arch support).\n-    dnl The last entry in the list is chosen by default when no libraries\n-    dnl are found, e.g. when only header-only libraries are installed!\n-    libsubdirs=\"lib\"\n-    ax_arch=`uname -m`\n-    case $ax_arch in\n-      x86_64)\n-        libsubdirs=\"lib64 libx32 lib lib64\"\n-        ;;\n-      ppc64|s390x|sparc64|aarch64)\n-        libsubdirs=\"lib64 lib lib64\"\n-        ;;\n-    esac\n-\n-    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n-    dnl them priority over the other paths since, if libs are found there, they\n-    dnl are almost assuredly the ones desired.\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n-\n-    case ${host_cpu} in\n-      i?86)\n-        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n-        ;;\n-    esac\n-\n-    dnl some arches may advertise a cpu type that doesn't line up with their\n-    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n-    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n-    dnl value for an extra chance of finding the correct path.\n-    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n-\n-    dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n-    dnl or if you install boost with RPM\n-    if test \"$ac_boost_path\" != \"\"; then\n-        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n-        for ac_boost_path_tmp in $libsubdirs; do\n-                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n-                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n-                        break\n-                fi\n-        done\n-    elif test \"$cross_compiling\" != yes; then\n-        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n-                break;\n-            fi\n-        done\n-    fi\n-\n-    dnl overwrite ld flags if we have required special directory with\n-    dnl --with-boost-libdir parameter\n-    if test \"$ac_boost_lib_path\" != \"\"; then\n-       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n-    fi\n-\n-    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-    export CPPFLAGS\n-\n-    LDFLAGS_SAVED=\"$LDFLAGS\"\n-    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-    export LDFLAGS\n-\n-    AC_REQUIRE([AC_PROG_CXX])\n-    AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    @%:@include <boost/version.hpp>\n-    ]], [[\n-    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-    // Everything is okay\n-    #else\n-    #  error Boost version is too old\n-    #endif\n-    ]])],[\n-        AC_MSG_RESULT(yes)\n-    succeeded=yes\n-    found_system=yes\n-        ],[:\n-        ])\n-    AC_LANG_POP([C++])\n-\n-\n-\n-    dnl if we found no boost with system layout we search for boost libraries\n-    dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\"; then\n-        _version=0\n-        if test \"$ac_boost_path\" != \"\"; then\n-            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                    V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"$V_CHECK\" = \"1\" ; then\n-                        _version=$_version_tmp\n-                    fi\n-                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n-                done\n-            fi\n-        else\n-            if test \"$cross_compiling\" != yes; then\n-                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                            V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"$V_CHECK\" = \"1\" ; then\n-                                _version=$_version_tmp\n-                                best_path=$ac_boost_path\n-                            fi\n-                        done\n-                    fi\n-                done\n-\n-                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test \"$ac_boost_lib_path\" = \"\"; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n-                fi\n-            fi\n-\n-            if test \"x$BOOST_ROOT\" != \"x\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n-                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n-                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n-                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n-                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n-                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n-                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n-                    fi\n-                fi\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        @%:@include <boost/version.hpp>\n-        ]], [[\n-        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-        // Everything is okay\n-        #else\n-        #  error Boost version is too old\n-        #endif\n-        ]])],[\n-            AC_MSG_RESULT(yes)\n-        succeeded=yes\n-        found_system=yes\n-            ],[:\n-            ])\n-        AC_LANG_POP([C++])\n-    fi\n-\n-    if test \"$succeeded\" != \"yes\" ; then\n-        if test \"$_version\" = \"0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n-        else\n-            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n-        fi\n-        # execute ACTION-IF-NOT-FOUND (if present):\n-        ifelse([$3], , :, [$3])\n-    else\n-        AC_SUBST(BOOST_CPPFLAGS)\n-        AC_SUBST(BOOST_LDFLAGS)\n-        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n-        # execute ACTION-IF-FOUND (if present):\n-        ifelse([$2], , :, [$2])\n-    fi\n-\n-    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-    LDFLAGS=\"$LDFLAGS_SAVED\"\n-fi\n-\n-])"
      },
      {
        "sha": "318ecea17fab84b7bbc24ded70bcb27be749d603",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_CHRONO\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CHRONO_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_CHRONO\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 1\n-\n-AC_DEFUN([AX_BOOST_CHRONO],\n-[\n-\tAC_ARG_WITH([boost-chrono],\n-\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n-                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_chrono_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_chrono_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n-\t\t\t\t\t   ax_cv_boost_chrono,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point time;]])],\n-                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_chrono\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                   [link_chrono=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n-            fi\n-\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 26\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "f591441854f59863049a28feb0b89b991ec32ef3",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,109 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 22\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::options_description generic(\"Generic options\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "9c78280fcae472e022bc2c45afa11ceb70167681",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 17\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-                                   [[boost::system::system_category]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,150 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 27\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-           if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n-\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n-            fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "4efd1e2f18be12e19176f772ad41f07a823a0c85",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,138 +0,0 @@\n-# ================================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# ================================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# DESCRIPTION\n-#\n-#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n-#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n-#   is available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 19\n-\n-AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n-[\n-\tAC_ARG_WITH([boost-unit-test-framework],\n-\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n-                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_unit_test_framework_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n-\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n-                                    [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n-                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n-                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n-                    if test -r $monitor_library ; then\n-                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t  break\n-\t\t\t\t    fi\n-                done\n-                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n-                                 [link_unit_test_framework=\"no\"])\n-\t\t\t\tdone\n-                fi\n-            else\n-                link_unit_test_framework=\"no\"\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n-                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      break;\n-                   fi\n-                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n-                   if test -r $unittest_library ; then\n-                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t    break\n-\t\t\t\t    fi\n-                  done\n-               done\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n-            fi\n-\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,72 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's compiler\n-#   or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the current language's default\n-#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n-#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n-#   force the compiler to issue an error when a bad flag is given.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n-  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 71,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,71 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the linker or gives an error.\n-#   (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n-#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n-#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n-#   issue an error when a bad flag is given.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$LDFLAGS\n-  LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  LDFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,72 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's\n-#   preprocessor or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n-#   flags when the check is done.  The check is thus made with the flags:\n-#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n-#   preprocessor to issue an error when a bad flag is given.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$CPPFLAGS\n-  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  CPPFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "275ca63a2c217cb584e26824e45b96b3d575e2f8",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,217 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "d383ad5c6d6a5061370800bb1dc89b7a334c0638",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 332,
        "changes": 332,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,332 +0,0 @@\n-# ===========================================================================\n-#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n-#\n-# DESCRIPTION\n-#\n-#   This macro figures out how to build C programs using POSIX threads. It\n-#   sets the PTHREAD_LIBS output variable to the threads library and linker\n-#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n-#   flags that are needed. (The user can also force certain compiler\n-#   flags/libs to be tested by setting these environment variables.)\n-#\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n-#\n-#   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also link it with them as well. e.g. you should link with\n-#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n-#\n-#   If you are only building threads programs, you may wish to use these\n-#   variables in your default LIBS, CFLAGS, and CC:\n-#\n-#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n-#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-#     CC=\"$PTHREAD_CC\"\n-#\n-#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n-#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n-#\n-#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n-#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n-#   PTHREAD_CFLAGS.\n-#\n-#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n-#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n-#   is not found. If ACTION-IF-FOUND is not specified, the default action\n-#   will define HAVE_PTHREAD.\n-#\n-#   Please let the authors know if this macro fails on any platform, or if\n-#   you have any other suggestions or comments. This macro was based on work\n-#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n-#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n-#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n-#   grateful for the helpful feedback of numerous users.\n-#\n-#   Updated for Autoconf 2.68 by Daniel Richard G.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n-#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 21\n-\n-AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n-AC_DEFUN([AX_PTHREAD], [\n-AC_REQUIRE([AC_CANONICAL_HOST])\n-AC_LANG_PUSH([C])\n-ax_pthread_ok=no\n-\n-# We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on True64 or Sequent).\n-# It gets checked for in the link test anyway.\n-\n-# First of all, check if the user has set any of the PTHREAD_LIBS,\n-# etcetera environment variables, and if threads linking works using\n-# them:\n-if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n-        save_CFLAGS=\"$CFLAGS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        save_LIBS=\"$LIBS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n-        AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test x\"$ax_pthread_ok\" = xno; then\n-                PTHREAD_LIBS=\"\"\n-                PTHREAD_CFLAGS=\"\"\n-        fi\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n-fi\n-\n-# We must check for the threads library under a number of different\n-# names; the ordering is very important because some systems\n-# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n-# libraries is broken (non-POSIX).\n-\n-# Create a list of thread flags to try.  Items starting with a \"-\" are\n-# C compiler flags, and other items are library names, except for \"none\"\n-# which indicates that we try without any flags at all, and \"pthread-config\"\n-# which is a program returning the flags for the Pth emulation library.\n-\n-ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n-\n-# The ordering *is* (sometimes) important.  Some notes on the\n-# individual items follow:\n-\n-# pthreads: AIX (must check this before -lpthread)\n-# none: in case threads are in libc; should be tried before -Kthread and\n-#       other compiler flags to prevent continual compiler warnings\n-# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n-# -pthreads: Solaris/gcc\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n-# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads too;\n-#      also defines -D_REENTRANT)\n-#      ... -mt is also the pthreads flag for HP/aCC\n-# pthread: Linux, etcetera\n-# --thread-safe: KAI C++\n-# pthread-config: use pthread-config program (for GNU Pth library)\n-\n-case ${host_os} in\n-        solaris*)\n-\n-        # On Solaris (at least, for some versions), libc contains stubbed\n-        # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n-        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n-        # a function called by this macro, so we could check for that, but\n-        # who knows whether they'll stub that too in a future libc.)  So,\n-        # we'll just look for -pthreads and -lpthread first:\n-\n-        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n-        ;;\n-\n-        darwin*)\n-        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n-        ;;\n-esac\n-\n-# Clang doesn't consider unrecognized options an error unless we specify\n-# -Werror. We throw in some extra Clang-specific options to ensure that\n-# this doesn't happen for GCC, which also accepts -Werror.\n-\n-AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])\n-save_CFLAGS=\"$CFLAGS\"\n-ax_pthread_extra_flags=\"-Werror\"\n-CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],\n-                  [AC_MSG_RESULT([yes])],\n-                  [ax_pthread_extra_flags=\n-                   AC_MSG_RESULT([no])])\n-CFLAGS=\"$save_CFLAGS\"\n-\n-if test x\"$ax_pthread_ok\" = xno; then\n-for flag in $ax_pthread_flags; do\n-\n-        case $flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $flag])\n-                PTHREAD_CFLAGS=\"$flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                if test x\"$ax_pthread_config\" = xno; then continue; fi\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n-\n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$flag])\n-                PTHREAD_LIBS=\"-l$flag\"\n-                ;;\n-        esac\n-\n-        save_LIBS=\"$LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-                        static void routine(void *a) { a = 0; }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-                [ax_pthread_ok=yes],\n-                [])\n-\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = xyes; then\n-                break;\n-        fi\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n-\n-# Various other checks:\n-if test \"x$ax_pthread_ok\" = xyes; then\n-        save_LIBS=\"$LIBS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-\n-        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_MSG_CHECKING([for joinable pthread attribute])\n-        attr_name=unknown\n-        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                           [int attr = $attr; return attr /* ; */])],\n-                [attr_name=$attr; break],\n-                [])\n-        done\n-        AC_MSG_RESULT([$attr_name])\n-        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n-            AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],\n-                               [Define to necessary symbol if this constant\n-                                uses a non-standard name on your system.])\n-        fi\n-\n-        AC_MSG_CHECKING([if more special flags are required for pthreads])\n-        flag=no\n-        case ${host_os} in\n-            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n-            osf* | hpux*) flag=\"-D_REENTRANT\";;\n-            solaris*)\n-            if test \"$GCC\" = \"yes\"; then\n-                flag=\"-D_REENTRANT\"\n-            else\n-                # TODO: What about Clang on Solaris?\n-                flag=\"-mt -D_REENTRANT\"\n-            fi\n-            ;;\n-        esac\n-        AC_MSG_RESULT([$flag])\n-        if test \"x$flag\" != xno; then\n-            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n-        fi\n-\n-        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT], [\n-                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                                [[int i = PTHREAD_PRIO_INHERIT;]])],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n-            [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])\n-\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n-\n-        # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != xyes; then\n-            case $host_os in\n-                aix*)\n-                AS_CASE([\"x/$CC\"],\n-                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                  [#handle absolute path differently from PATH based program lookup\n-                   AS_CASE([\"x$CC\"],\n-                     [x/*],\n-                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n-                ;;\n-            esac\n-        fi\n-fi\n-\n-test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n-\n-AC_SUBST([PTHREAD_LIBS])\n-AC_SUBST([PTHREAD_CFLAGS])\n-AC_SUBST([PTHREAD_CC])\n-\n-# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test x\"$ax_pthread_ok\" = xyes; then\n-        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n-        :\n-else\n-        ax_pthread_ok=no\n-        $2\n-fi\n-AC_LANG_POP\n-])dnl AX_PTHREAD"
      },
      {
        "sha": "0bf558d25b5e904fe40340bb29115baaf32da190",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,66 +0,0 @@\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-  BDB_CPPFLAGS=\n-  BDB_LIBS=\n-  bdbpath=X\n-  bdb48path=X\n-  bdbdirlist=\n-  for _vn in 4.8 48 4 5 ''; do\n-    for _pfx in b lib ''; do\n-      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n-    done\n-  done\n-  for searchpath in $bdbdirlist ''; do\n-    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-        #error \"failed to find bdb 4.8+\"\n-      #endif\n-    ]])],[\n-      if test \"x$bdbpath\" = \"xX\"; then\n-        bdbpath=\"${searchpath}\"\n-      fi\n-    ],[\n-      continue\n-    ])\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-        #error \"failed to find bdb 4.8\"\n-      #endif\n-    ]])],[\n-      bdb48path=\"${searchpath}\"\n-      break\n-    ],[])\n-  done\n-  if test \"x$bdbpath\" = \"xX\"; then\n-    AC_MSG_RESULT([no])\n-    AC_MSG_ERROR([libdb_cxx headers missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  elif test \"x$bdb48path\" = \"xX\"; then\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-    ],[\n-      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-    ])\n-  else\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-    bdbpath=\"${bdb48path}\"\n-  fi\n-  AC_SUBST(BDB_CPPFLAGS)\n-  \n-  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-  for searchlib in db_cxx-4.8 db_cxx; do\n-    AC_CHECK_LIB([$searchlib],[main],[\n-      BDB_LIBS=\"-l${searchlib}\"\n-      break\n-    ])\n-  done\n-  if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  fi\n-  AC_SUBST(BDB_LIBS)\n-])"
      },
      {
        "sha": "2480267dc17ef5575ea6c22b8adddd535a6f9de6",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 491,
        "changes": 491,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,491 +0,0 @@\n-dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-\n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n-dnl Helper for finding the path of programs needed for Qt.\n-dnl Inputs: $1: Variable to be set\n-dnl Inputs: $2: List of programs to search for\n-dnl Inputs: $3: Look for $2 here before $PATH\n-dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n-dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    if test \"x$3\" != \"x\"; then\n-      AC_PATH_PROGS($1,$2,,$3)\n-    else\n-      AC_PATH_PROGS($1,$2)\n-    fi\n-    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n-dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n-dnl input variables are set correctly.\n-dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n-  dnl enable qt support\n-  AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n-    [\n-     bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n-     fi\n-    ],\n-    [bitcoin_qt_want_version=auto])\n-\n-  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n-  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n-  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-\n-  AC_ARG_WITH([qtdbus],\n-    [AS_HELP_STRING([--with-qtdbus],\n-    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-    [use_dbus=$withval],\n-    [use_dbus=auto])\n-\n-  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n-])\n-\n-dnl Find the appropriate version of Qt libraries and includes.\n-dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n-dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n-dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n-dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n-  use_pkgconfig=$1\n-\n-  if test x$use_pkgconfig = x; then\n-    use_pkgconfig=yes\n-  fi\n-\n-  if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n-  else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n-  fi\n-\n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-  TEMP_CPPFLAGS=$CPPFLAGS\n-  TEMP_CXXFLAGS=$CXXFLAGS\n-  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [[#include <QtCore>]],[[\n-          #if QT_VERSION >= 0x050400\n-          choke;\n-          #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test x$TARGET_OS = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n-    fi\n-  else\n-    if test x$TARGET_OS = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n-    fi\n-  fi\n-  CPPFLAGS=$TEMP_CPPFLAGS\n-  CXXFLAGS=$TEMP_CXXFLAGS\n-  ])\n-\n-  if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n-  fi\n-\n-  if test x$use_hardening != xno; then\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    TEMP_CXXFLAGS=$CXXFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n-      [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n-      ]])],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n-      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    CXXFLAGS=$TEMP_CXXFLAGS\n-    ])\n-  else\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n-      [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n-      ]])],\n-      [ AC_MSG_RESULT(no)],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    ])\n-  fi\n-\n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n-\n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n-  case $host in\n-    *darwin*)\n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-    ;;\n-    *mingw*)\n-       BITCOIN_QT_CHECK([\n-         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n-       ])\n-  esac\n-\n-\n-  dnl enable qt support\n-  AC_MSG_CHECKING(whether to build Bitcoin Core GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n-    if test x$have_qt_test = xno; then\n-      bitcoin_enable_qt_test=no\n-    fi\n-    bitcoin_enable_qt_dbus=no\n-    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n-    fi\n-    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    if test x$LUPDATE = x; then\n-      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-    fi\n-  ],[\n-    bitcoin_enable_qt=no\n-  ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n-\n-  AC_SUBST(QT_PIE_FLAGS)\n-  AC_SUBST(QT_INCLUDES)\n-  AC_SUBST(QT_LIBS)\n-  AC_SUBST(QT_LDFLAGS)\n-  AC_SUBST(QT_DBUS_INCLUDES)\n-  AC_SUBST(QT_DBUS_LIBS)\n-  AC_SUBST(QT_TEST_INCLUDES)\n-  AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n-  AC_SUBST(MOC_DEFS)\n-])\n-\n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n-\n-dnl Internal. Check if the included version of Qt is Qt5.\n-dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if QT_VERSION < 0x050000\n-      choke me\n-      #else\n-      return 0;\n-      #endif\n-    ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n-])])\n-\n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n-dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if defined(QT_STATIC)\n-      return 0;\n-      #else\n-      choke me\n-      #endif\n-    ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n-  ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n-    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n-  fi\n-])\n-\n-dnl Internal. Check if the link-requirements for static plugins are met.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n-dnl Inputs: $2: The libraries that resolve $1.\n-dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n-  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n-  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n-])\n-\n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n-      fi\n-     m4_ifdef([PKG_CHECK_MODULES],[\n-     if test x$use_pkgconfig = xyes; then\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test x$TARGET_OS = xlinux; then\n-         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-         fi\n-       elif test x$TARGET_OS = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n-       fi\n-     fi\n-     ])\n-  else\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n-])\n-\n-dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n-dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n-dnl         first.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n-  m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test x$auto_priority_version = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n-        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n-      fi\n-\n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = x$qt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n-      if test x$have_qt != xyes; then\n-        have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n-      fi\n-    ])\n-    BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test x$use_dbus != xno; then\n-        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-      fi\n-    ])\n-  ])\n-  true; dnl\n-])\n-\n-dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n-dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n-    fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"$LIBS -L$qt_lib_path\"\n-    fi\n-\n-    if test x$TARGET_OS = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n-  fi\n-  QT_LIBS=\"$LIBS\"\n-  LIBS=\"$TEMP_LIBS\"\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"-L$qt_lib_path\"\n-    fi\n-    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n-    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-    QT_TEST_LIBS=\"$LIBS\"\n-    if test x$use_dbus != xno; then\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-    fi\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-  LIBS=\"$TEMP_LIBS\"\n-])\n-"
      },
      {
        "sha": "66f106c7d47b9121576197c56f6a330e3972d188",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,14 +0,0 @@\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n-dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n-  if test \"x$2\" = \"x\"; then\n-    AC_MSG_RESULT([default])\n-  else\n-    echo \"#include <$2$3.h>\" >conftest.cpp\n-    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n-    AC_MSG_RESULT([${newinclpath}])\n-    if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n-    fi\n-  fi\n-])"
      },
      {
        "sha": "d3104119a0f76c5f6a3f815c72e4d2940d9c7b11",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 47,
        "deletions": 47,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -6,17 +6,17 @@ define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n define(_COPYRIGHT_YEAR, 2015)\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin])\n+AC_INIT([Syscoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/syscoin/syscoin/issues],[syscoin])\n AC_CONFIG_SRCDIR([src/main.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_HEADERS([src/config/syscoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n AC_CANONICAL_HOST\n \n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+AH_TOP([#ifndef SYSCOIN_CONFIG_H])\n+AH_TOP([#define SYSCOIN_CONFIG_H])\n+AH_BOTTOM([#endif //SYSCOIN_CONFIG_H])\n \n dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n@@ -184,21 +184,21 @@ CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n+  [build syscoin-cli syscoin-tx (default=yes)])],\n+  [build_syscoin_utils=$withval],\n+  [build_syscoin_utils=yes])\n \n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n   [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n+  [build_syscoin_libs=$withval],\n+  [build_syscoin_libs=yes])\n \n AC_ARG_WITH([daemon],\n   [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n+  [build syscoind daemon (default=yes)])],\n+  [build_syscoind=$withval],\n+  [build_syscoind=yes])\n \n AC_LANG_PUSH([C++])\n \n@@ -382,7 +382,7 @@ AC_C_BIGENDIAN\n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n \n-# The following macro will add the necessary defines to bitcoin-config.h, but\n+# The following macro will add the necessary defines to syscoin-config.h, but\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n@@ -523,7 +523,7 @@ AC_SUBST(LIBMEMENV)\n \n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n+    SYSCOIN_FIND_BDB48\n fi\n \n dnl Check for libminiupnpc (optional)\n@@ -535,12 +535,12 @@ if test x$use_upnp != xno; then\n   )\n fi\n \n-BITCOIN_QT_INIT\n+SYSCOIN_QT_INIT\n \n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+dnl sets $syscoin_enable_qt, $syscoin_enable_qt_test, $syscoin_enable_qt_dbus\n+SYSCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+if test x$build_syscoin_utils$build_syscoind$syscoin_enable_qt$use_tests = xnononono; then\n     use_boost=no\n else\n     use_boost=yes\n@@ -684,11 +684,11 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      SYSCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [SYSCOIN_QT_FAIL(libprotobuf not found)])])\n       if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+        SYSCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+      if test x$build_syscoin_utils$build_syscoind$syscoin_enable_qt$use_tests != xnononono; then\n         PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n@@ -713,7 +713,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+  if test x$build_syscoin_utils$build_syscoind$syscoin_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n@@ -735,10 +735,10 @@ else\n     AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n   fi\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  SYSCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], SYSCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+    SYSCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    SYSCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n@@ -750,23 +750,23 @@ AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n CXXFLAGS=\"$CXXFLAGS_TEMP\"\n LIBS=\"$LIBS_TEMP\"\n \n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+SYSCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n+AC_MSG_CHECKING([whether to build syscoind])\n+AM_CONDITIONAL([BUILD_SYSCOIND], [test x$build_syscoind = xyes])\n+AC_MSG_RESULT($build_syscoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n+AC_MSG_CHECKING([whether to build utils (syscoin-cli syscoin-tx)])\n+AM_CONDITIONAL([BUILD_SYSCOIN_UTILS], [test x$build_syscoin_utils = xyes])\n+AC_MSG_RESULT($build_syscoin_utils)\n \n AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n+AM_CONDITIONAL([BUILD_SYSCOIN_LIBS], [test x$build_syscoin_libs = xyes])\n+if test x$build_syscoin_libs = xyes; then\n   AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+  AC_CONFIG_FILES([libsyscoinconsensus.pc:libsyscoinconsensus.pc.in])\n fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n+AC_MSG_RESULT($build_syscoin_libs)\n \n AC_LANG_POP\n \n@@ -827,14 +827,14 @@ else\n fi\n \n dnl these are only used when qt is enabled\n-if test x$bitcoin_enable_qt != xno; then\n+if test x$syscoin_enable_qt != xno; then\n   BUILD_QT=qt\n   dnl enable dbus support\n   AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n+  if test x$syscoin_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n   fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+  AC_MSG_RESULT($syscoin_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n@@ -857,8 +857,8 @@ if test x$bitcoin_enable_qt != xno; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n \n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_tests$bitcoin_enable_qt_test = xyesyes; then\n+  AC_MSG_CHECKING([whether to build test_syscoin-qt])\n+  if test x$use_tests$syscoin_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n     BUILD_TEST_QT=\"test\"\n   else\n@@ -868,7 +868,7 @@ fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n-AC_MSG_CHECKING([whether to build test_bitcoin])\n+AC_MSG_CHECKING([whether to build test_syscoin])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n   BUILD_TEST=\"test\"\n@@ -883,7 +883,7 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n+if test x$build_syscoin_utils$build_syscoin_libs$build_syscoind$syscoin_enable_qt$use_tests = xnonononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n fi\n \n@@ -892,8 +892,8 @@ AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$syscoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$syscoin_enable_qt_test = xyesyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n@@ -932,7 +932,7 @@ AC_SUBST(BUILD_TEST_QT)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n-AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n+AC_CONFIG_FILES([qa/pull-tester/run-syscoind-for-test.sh],[chmod +x qa/pull-tester/run-syscoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a"
      },
      {
        "sha": "e33380bda798f7406b812177256032b495d189b5",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -21,7 +21,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ### [Qos](/contrib/qos) ###\n \n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Syscoin network. This means one can have an always-on syscoind instance running, and another local syscoind/syscoin-qt instance which connects to this node and receives blocks from it.\n \n ### [Seeds](/contrib/seeds) ###\n Utility to generate the pnSeed[] array that is compiled into the client.\n@@ -30,8 +30,8 @@ Build Tools and Keys\n ---------------------\n \n ### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+Contains files used to package syscoind/syscoin-qt\n+for Debian-based Linux systems. If you compile syscoind/syscoin-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n Gavin's notes on getting gitian builds up and running using KVM.\n@@ -46,7 +46,7 @@ Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Syscoin tests.\n \n ### [Test Patches](/contrib/test-patches) ###\n These patches are applied when the automated pull-tester"
      },
      {
        "sha": "b26a1a44a3e9b2e8f262194abbd9b85050d9c674",
        "filename": "contrib/debian/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,21 +1,21 @@\n \n Debian\n ====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+This directory contains files used to package syscoind/syscoin-qt\n+for Debian-based Linux systems. If you compile syscoind/syscoin-qt yourself, there are some useful files here.\n \n-## bitcoin: URI support ##\n+## syscoin: URI support ##\n \n \n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n+syscoin-qt.desktop  (Gnome / Open Desktop)\n To install:\n \n-\tsudo desktop-file-install bitcoin-qt.desktop\n+\tsudo desktop-file-install syscoin-qt.desktop\n \tsudo update-desktop-database\n \n If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n+the .desktop file or copy or symlink your syscoin-qt binary to `/usr/bin`\n+and the `../../share/pixmaps/syscoin128.png` to `/usr/share/pixmaps`\n \n-bitcoin-qt.protocol (KDE)\n+syscoin-qt.protocol (KDE)\n "
      },
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,12 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "0f84707b66cb7c063a29df2ae67b8325e34da679",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "6d3e683855018ec721d97853b0d5c9b90edd5c35",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,3 +0,0 @@\n-debian/manpages/bitcoind.1\n-debian/manpages/bitcoin.conf.5\n-debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "736f3f723d4285c8350942440802bc038804fa47",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 68,
        "deletions": 68,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,245 +1,245 @@\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n+syscoin (0.11.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n \n-bitcoin (0.10.2-precise1) precise; urgency=medium\n+syscoin (0.10.2-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n \n-bitcoin (0.10.1-precise3) precise; urgency=medium\n+syscoin (0.10.1-precise3) precise; urgency=medium\n \n   * Fix build dep (include python).\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n \n-bitcoin (0.10.1-precise2) precise; urgency=medium\n+syscoin (0.10.1-precise2) precise; urgency=medium\n \n   * Fix miniupnpc dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n \n-bitcoin (0.10.1-precise1) precise; urgency=medium\n+syscoin (0.10.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n \n-bitcoin (0.10.0-precise1) precise; urgency=medium\n+syscoin (0.10.0-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n \n-bitcoin (0.9.4-precise1) precise; urgency=high\n+syscoin (0.9.4-precise1) precise; urgency=high\n \n   * New upstream releases.\n \n  -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n \n-bitcoin (0.9.3-precise1) precise; urgency=medium\n+syscoin (0.9.3-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n \n-bitcoin (0.9.1-precise1) precise; urgency=medium\n+syscoin (0.9.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Backport pull #4019\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n \n-bitcoin (0.9.0-precise1) precise; urgency=medium\n+syscoin (0.9.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n \n-bitcoin (0.8.6-precise1) precise; urgency=medium\n+syscoin (0.8.6-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Make .desktop paths non-fixed (suggested by prusnak@github)\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n \n-bitcoin (0.8.5-precise1) precise; urgency=medium\n+syscoin (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n \n-bitcoin (0.8.4-precise1) precise; urgency=medium\n+syscoin (0.8.4-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n \n-bitcoin (0.8.3-natty1) natty; urgency=low\n+syscoin (0.8.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n \n-bitcoin (0.8.2-natty1) natty; urgency=low\n+syscoin (0.8.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n \n-bitcoin (0.8.1-natty3) natty; urgency=low\n+syscoin (0.8.1-natty3) natty; urgency=low\n \n   * New pixmaps\n \n  -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n \n-bitcoin (0.8.1-natty2) natty; urgency=low\n+syscoin (0.8.1-natty2) natty; urgency=low\n \n   * Remove dumb broken launcher script\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n \n-bitcoin (0.8.1-natty1) natty; urgency=low\n+syscoin (0.8.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n \n-bitcoin (0.8.0-natty1) natty; urgency=low\n+syscoin (0.8.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n \n-bitcoin (0.7.2-natty1) natty; urgency=low\n+syscoin (0.7.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n \n-bitcoin (0.7.1-natty1) natty; urgency=low\n+syscoin (0.7.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n \n-bitcoin (0.7.0-natty1) natty; urgency=low\n+syscoin (0.7.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n \n-bitcoin (0.6.3-natty1) natty; urgency=low\n+syscoin (0.6.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n \n-bitcoin (0.6.2-natty1) natty; urgency=low\n+syscoin (0.6.2-natty1) natty; urgency=low\n \n   * Update package description and launch scripts.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n \n-bitcoin (0.6.2-natty0) natty; urgency=low\n+syscoin (0.6.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n \n-bitcoin (0.6.1-natty0) natty; urgency=low\n+syscoin (0.6.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n \n-bitcoin (0.6.0-natty0) natty; urgency=low\n+syscoin (0.6.0-natty0) natty; urgency=low\n \n   * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n+  * Add GNOME/KDE support for syscoin-qt's syscoin: URI support.\n     Thanks to luke-jr for the KDE .protocol file.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n \n-bitcoin (0.5.3-natty1) natty; urgency=low\n+syscoin (0.5.3-natty1) natty; urgency=low\n \n   * Mark for upload to PPA.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n \n-bitcoin (0.5.3-natty0) natty; urgency=low\n+syscoin (0.5.3-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n+ -- Luke Dashjr <luke+syscoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n \n-bitcoin (0.5.2-natty1) natty; urgency=low\n+syscoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isn't anonymous without\n+    These should never have been there, syscoin isn't anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n \n-bitcoin (0.5.2-natty0) natty; urgency=low\n+syscoin (0.5.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n+ -- Luke Dashjr <luke+syscoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n \n-bitcoin (0.5.1-natty0) natty; urgency=low\n+syscoin (0.5.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n \n-bitcoin (0.5.0-natty0) natty; urgency=low\n+syscoin (0.5.0-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n \n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n+syscoin (0.5.0~rc7-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n \n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n+syscoin (0.5.0~rc3-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n+  * Don't set rpcpassword for syscoin-qt.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n \n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n+syscoin (0.5.0~rc1-natty1) natty; urgency=low\n \n-  * Add test_bitcoin to build test\n+  * Add test_syscoin to build test\n   * Fix clean\n   * Remove unnecessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n+syscoin (0.5.0~rc1-natty0) natty; urgency=low\n \n   * Mark for natty\n   * Fix broken build\n   * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n+  * Remove syscoin: URL handler until syscoin actually has support for it (Oops)\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n+syscoin (0.5.0~rc1-2) experimental; urgency=low\n \n-  * Add bitcoin-qt\n+  * Add syscoin-qt\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n \n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n+syscoin (0.5.0~rc1-1) experimental; urgency=low\n \n   * New upstream prerelease.\n   * Add Github as alternate upstream source in watch file.\n@@ -250,7 +250,7 @@ bitcoin (0.5.0~rc1-1) experimental; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n \n-bitcoin (0.4.0-1) unstable; urgency=low\n+syscoin (0.4.0-1) unstable; urgency=low\n \n   * New upstream release.\n   * Stop repackaging source tarballs: No DFSG-violating stripping left.\n@@ -259,7 +259,7 @@ bitcoin (0.4.0-1) unstable; urgency=low\n   * Drop dpkg-source local-options hint: Declared options are default\n     since dpkg-source 1.16.1.\n     + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n+    + Add comment on Syscoin Developers to catch-all Files section.\n     + Add Files sections for newly readded src/cryptopp/* (new custom\n       BSD-like license), and newly added doc/build-osx.txt and\n       src/makefile.osx (Expat).\n@@ -278,13 +278,13 @@ bitcoin (0.4.0-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n \n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n+syscoin (0.3.24~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Jonas Smedegaard ]\n   * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n+    + Explicitly mention in long description that syscoind contains\n       daemon and command-line interface.\n     + Extend README.Debian with section on lack of GUI, and add primary\n       headline.\n@@ -305,7 +305,7 @@ bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n \n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n+syscoin (0.3.21~dfsg-2) unstable; urgency=low\n \n   * Enable UPNP support:\n     + Drop patch 1006.\n@@ -314,7 +314,7 @@ bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n \n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n+syscoin (0.3.21~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n   * Refresh patches.\n@@ -327,7 +327,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n   * Bump policy compliance to standards-version 3.9.2.\n   * Shorten Vcs-Browser paragraph in control file.\n   * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n+  * Stop conflicting with or replace syscoin-cli: Only transitional, no\n     longer needed.\n   * Link against unversioned berkeleydb. Update NEWS and README.Debian\n     accordingly (and improve wording while at it).\n@@ -339,7 +339,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n \n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n+syscoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n   * Fix have wrapper script execute real binary (not loop executing\n     itself).\n@@ -349,36 +349,36 @@ bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n \n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n+syscoin (0.3.20.2~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n+  * Fix provide and replace former package name syscoin-cli.\n     Closes: bug#618439. Thanks to Shane Wegner.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n \n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n+syscoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Micah Anderson ]\n   * Add myself as uploader.\n \n   [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n+  * Add wrapper for syscoind to ease initial startup.\n   * Update patches:\n     + Drop patch 2002: Applied upstream.\n     + Add patch 1005 to add phtread linker option.\n       Closes: bug#615619. Thanks to Shane Wegner.\n     + Refresh patches.\n   * Extend copyright years in rules file header.\n   * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n+  * Rename binary package to syscoind (from bincoin-cli).\n     Closes: bug#614025. Thanks to Luke-Jr.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n \n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n+syscoin (0.3.19~dfsg-6) unstable; urgency=low\n \n   * Fix override aggressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n@@ -389,7 +389,7 @@ bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n \n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n+syscoin (0.3.19~dfsg-5) unstable; urgency=low\n \n   * Fix lower Boost fallback-build-dependencies to 1.35, really\n     available in Lenny.\n@@ -404,11 +404,11 @@ bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n \n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n+syscoin (0.3.19~dfsg-4) unstable; urgency=low\n \n   [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n+  * Provide example syscoin.conf.\n+  * Add syscoind(1) and syscoin.conf(5) man pages.\n \n   [ Jonas Smedegaard ]\n   * Ease backporting:\n@@ -420,7 +420,7 @@ bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n \n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n+syscoin (0.3.19~dfsg-3) unstable; urgency=low\n \n   * Document in copyright file files excluded from repackaged source.\n   * Update copyright file:\n@@ -435,7 +435,7 @@ bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n \n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n+syscoin (0.3.19~dfsg-2) unstable; urgency=low\n \n   * Adjust build options to use optimized miner only for amd64. Fixes\n     FTBFS on i386 (and other archs, if compiling anywhere else at all).\n@@ -450,7 +450,7 @@ bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n \n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n+syscoin (0.3.19~dfsg-1) unstable; urgency=low\n \n   [ Jonas Smedegaard ]\n   * Initial release."
      },
      {
        "sha": "6d09db745ab3aa4df1e632068432776051fffede",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-Source: bitcoin\n+Source: syscoin\n Section: utils\n Priority: optional\n Maintainer: Jonas Smedegaard <dr@jones.dk>\n@@ -23,45 +23,45 @@ Build-Depends: debhelper,\n  libprotobuf-dev, protobuf-compiler,\n  python\n Standards-Version: 3.9.2\n-Homepage: https://www.bitcoin.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n+Homepage: https://www.syscoin.org/\n+Vcs-Git: git://github.com/syscoin/syscoin.git\n+Vcs-Browser: https://github.com/syscoin/syscoin\n \n-Package: bitcoind\n+Package: syscoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ Syscoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Syscoin uses peer-to-peer\n  technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n+ and issuing money are carried out collectively by the network. Syscoin Core\n  is the name of the open source software which enables the use of this currency.\n  .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n+ This package provides the daemon, syscoind, and the CLI tool\n+ syscoin-cli to interact with the daemon.\n \n-Package: bitcoin-qt\n+Package: syscoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ Syscoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Syscoin uses peer-to-peer\n  technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n+ and issuing money are carried out collectively by the network. Syscoin Core\n  is the name of the open source software which enables the use of this currency.\n  .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+ This package provides Syscoin-Qt, a GUI for Syscoin based on Qt.\n \n-Package: bitcoin-tx\n+Package: syscoin-tx\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ Syscoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Syscoin uses peer-to-peer\n  technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n+ and issuing money are carried out collectively by the network. Syscoin Core\n  is the name of the open source software which enables the use of this currency.\n  .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n+ This package provides syscoin-tx, a command-line transaction creation\n+ tool which can be used without a syscoin daemon.  Some means of\n  exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "1dabbe7d6d9248cd6ce3f903796d1f98460f5807",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n+Upstream-Name: Syscoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n+ irc://#syscoin@freenode.net\n+Source: https://github.com/syscoin/syscoin\n \n Files: *\n-Copyright: 2009-2015, Bitcoin Core Developers\n+Copyright: 2009-2015, Syscoin Core Developers\n License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Syscoin Core Developers encompasses the current developers listed on syscoin.org,\n          as well as the numerous contributors to the project.\n \n Files: debian/*\n@@ -72,12 +72,12 @@ License: Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n+       src/qt/res/icons/syscoin.*\n+       share/pixmaps/syscoin*\n+       src/qt/res/src/syscoin.svg\n Copyright: Bitboy, Jonas Schnelli\n License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n+Comment: Site: https://syscointalk.org/?topic=1756.0\n \n \n License: Expat"
      },
      {
        "sha": "b8ba038aa4864bbac2604644f5876de4c9bf9a31",
        "filename": "contrib/debian/examples/syscoin.conf",
        "status": "renamed",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/examples/syscoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/examples/syscoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/syscoin.conf?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n ##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n+## syscoin.conf configuration file. Lines beginning with # are comments.\n ##\n  \n # Network-related settings:\n \n-# Run on the test network instead of the real bitcoin network.\n+# Run on the test network instead of the real syscoin network.\n #testnet=0\n \n # Run a regression test network\n@@ -57,10 +57,10 @@\n #maxconnections=\n \n #\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+# JSON-RPC options (for controlling a running Syscoin/syscoind process)\n #\n \n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n+# server=1 tells Syscoin-Qt and syscoind to accept JSON-RPC commands\n #server=0\n \n # Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n@@ -71,7 +71,7 @@\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n \n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# How many seconds syscoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n #rpcclienttimeout=30\n \n@@ -82,16 +82,16 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n+# server=1 tells Syscoin-Qt to accept JSON-RPC commands.\n+# it is also read by syscoind to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n #rpcport=8332\n \n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n+# You can use Syscoin or syscoind to send commands to Syscoin/syscoind\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n@@ -110,14 +110,14 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n+# Pay an optional transaction fee every time you send syscoins.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n #paytxfee=0.00\n \n # User interface options\n \n-# Start Bitcoin minimized\n+# Start Syscoin minimized\n #min=1\n \n # Minimize to the system tray",
        "previous_filename": "contrib/debian/examples/bitcoin.conf"
      },
      {
        "sha": "6843e332888e2cb3869baae59a0693b3a1d8338c",
        "filename": "contrib/debian/manpages/syscoin-cli.1",
        "status": "renamed",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/syscoin-cli.1?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,29 +1,29 @@\n-.TH BITCOIN-CLI \"1\" \"February 2015\" \"bitcoin-cli 0.10\" \n+.TH SYSCOIN-CLI \"1\" \"February 2015\" \"syscoin-cli 0.10\" \n .SH NAME\n-bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n+syscoin-cli \\- a remote procedure call client for Syscoin Core. \n .SH SYNOPSIS\n-bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n+syscoin-cli [options] <command> [params] \\- Send command to Syscoin Core. \n .TP\n-bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n+syscoin-cli [options] help \\- Asks Syscoin Core for a list of supported commands.\n .SH DESCRIPTION\n-This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n+This manual page documents the syscoin-cli program. syscoin-cli is an RPC client used to send commands to Syscoin Core.\n \n .SH OPTIONS\n .TP\n \\fB\\-?\\fR\n Show the help message.\n .TP\n \\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf).\n+Specify configuration file (default: syscoin.conf).\n .TP\n \\fB\\-datadir=\\fR<dir>\n Specify data directory.\n .TP\n \\fB\\-testnet\\fR\n-Connect to a Bitcoin Core instance running in testnet mode.\n+Connect to a Syscoin Core instance running in testnet mode.\n .TP\n \\fB\\-regtest\\fR\n-Connect to a Bitcoin Core instance running in regtest mode (see documentation for -regtest on bitcoind).\n+Connect to a Syscoin Core instance running in regtest mode (see documentation for -regtest on syscoind).\n .TP\n \\fB\\-rpcuser=\\fR<user>\n Username for JSON\\-RPC connections.\n@@ -38,7 +38,7 @@ Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332).\n Send commands to node running on <ip> (default: 127.0.0.1).\n \n .SH \"SEE ALSO\"\n-\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n+\\fBsyscoind\\fP, \\fBsyscoin.conf\\fP\n .SH AUTHOR\n This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n ",
        "previous_filename": "contrib/debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "2c3d6abf18696e8e9778f5ef69571a2da53ad416",
        "filename": "contrib/debian/manpages/syscoin-qt.1",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/syscoin-qt.1?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,20 +1,20 @@\n-.TH BITCOIN-QT \"1\" \"April 2013\" \"bitcoin-qt 1\"\n+.TH SYSCOIN-QT \"1\" \"April 2013\" \"syscoin-qt 1\"\n .SH NAME\n-bitcoin-qt \\- peer-to-peer network based digital currency\n+syscoin-qt \\- peer-to-peer network based digital currency\n .SH DESCRIPTION\n .SS \"Usage:\"\n .IP\n-bitcoin\\-qt [command\\-line options]\n+syscoin\\-qt [command\\-line options]\n .SH OPTIONS\n .TP\n \\-?\n This help message\n .TP\n \\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: syscoin.conf)\n .TP\n \\fB\\-pid=\\fR<file>\n-Specify pid file (default: bitcoind.pid)\n+Specify pid file (default: syscoind.pid)\n .TP\n \\fB\\-gen\\fR\n Generate coins",
        "previous_filename": "contrib/debian/manpages/bitcoin-qt.1"
      },
      {
        "sha": "89ed1bf8fa379ae3a83540b88bc38e5d0dac70b6",
        "filename": "contrib/debian/manpages/syscoin.conf.5",
        "status": "renamed",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/syscoin.conf.5?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-.TH BITCOIN.CONF \"5\" \"January 2011\" \"bitcoin.conf 3.19\"\n+.TH SYSCOIN.CONF \"5\" \"January 2011\" \"syscoin.conf 3.19\"\n .SH NAME\n-bitcoin.conf \\- bitcoin configuration file\n+syscoin.conf \\- syscoin configuration file\n .SH SYNOPSIS\n All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n .TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n+The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, syscoind(1) will look for a file named syscoin.conf(5) in the syscoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n .SH LOCATION\n-bitcoin.conf should be located in $HOME/.bitcoin\n+syscoin.conf should be located in $HOME/.syscoin\n .SH NETWORK-RELATED SETTINGS\n .TP\n .TP\n \\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *bitcoin* network.\n+Enable or disable run on the test network instead of the real *syscoin* network.\n .TP\n \\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n Connect via a socks4 proxy.\n@@ -29,7 +29,7 @@ Maximum number of inbound+outbound connections.\n .SH JSON-RPC OPTIONS\n .TP\n \\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *bitcoin* to accept or not accept JSON-RPC commands.\n+Tells *syscoin* to accept or not accept JSON-RPC commands.\n .TP\n \\fBrpcuser=\\fR\\fI'username'\\fR\n You must set *rpcuser* to secure the JSON-RPC api.\n@@ -44,34 +44,34 @@ By default, only RPC connections from localhost are allowed. Specify as many *rp\n Listen for RPC connections on this TCP port.\n .TP\n \\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n+You can use *syscoin* or *syscoind(1)* to send commands to *syscoin*/*syscoind(1)* running on another host using this option.\n .TP\n .SH MISCELLANEOUS OPTIONS\n .TP\n \\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate bitcoins.\n+Enable or disable attempt to generate syscoins.\n .TP\n \\fB4way=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable use SSE instructions to try to generate bitcoins faster.\n+Enable or disable use SSE instructions to try to generate syscoins faster.\n .TP\n \\fBkeypool=\\fR\\fI'100'\\fR\n Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n .TP\n \\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send bitcoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n+Pay an optional transaction fee every time you send syscoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n .TP\n \\fBallowreceivebyip=\\fR\\fI'1'\\fR\n Allow direct connections for the 'pay via IP address' feature.\n .TP\n .SH USER INTERFACE OPTIONS\n .TP\n \\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start bitcoind minimized.\n+Enable or disable start syscoind minimized.\n .TP\n \\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n Enable or disable minimize to the system tray.\n .SH \"SEE ALSO\"\n-bitcoind(1)\n+syscoind(1)\n .SH AUTHOR\n This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n ",
        "previous_filename": "contrib/debian/manpages/bitcoin.conf.5"
      },
      {
        "sha": "fe2729a7ba7afae5c187122596a02a820f8fc462",
        "filename": "contrib/debian/manpages/syscoind.1",
        "status": "renamed",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/manpages/syscoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/syscoind.1?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-.TH BITCOIND \"1\" \"January 2011\" \"bitcoind 3.19\" \n+.TH SYSCOIND \"1\" \"January 2011\" \"syscoind 3.19\" \n .SH NAME\n-bitcoind \\- peer-to-peer network based digital currency\n+syscoind \\- peer-to-peer network based digital currency\n .SH SYNOPSIS\n-bitcoin [options] <command> [params]  \n+syscoin [options] <command> [params]  \n .TP\n-bitcoin [options] help <command> \\- Get help for a command\n+syscoin [options] help <command> \\- Get help for a command\n .SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n+This  manual page documents the syscoind program. Syscoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n \n-Bitcoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Bitcoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+Syscoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Syscoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n \n .SH OPTIONS\n .TP\n \\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: syscoin.conf)\n .TP\n \\fB\\-gen\\fR\n Generate coins\n@@ -70,14 +70,14 @@ This help message\n \\fBbackupwallet 'destination'\\fR\n Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n .TP\n-\\fBgetaccount 'bitcoinaddress'\\fR\n+\\fBgetaccount 'syscoinaddress'\\fR\n DEPRECATED. Returns the account associated with the given address.\n .TP\n-\\fBsetaccount 'bitcoinaddress' ['account']\\fR\n+\\fBsetaccount 'syscoinaddress' ['account']\\fR\n DEPRECATED. Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n .TP\n \\fBgetaccountaddress 'account'\\fR\n-DEPRECATED. Returns a new bitcoin address for 'account'.\n+DEPRECATED. Returns a new syscoin address for 'account'.\n .TP\n \\fBgetaddressesbyaccount 'account'\\fR\n DEPRECATED. Returns the list of addresses associated with the given 'account'.\n@@ -98,7 +98,7 @@ Returns the number of connections to other nodes.\n Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n .TP\n \\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate bitcoins, false otherwise.\n+Returns boolean true if server is trying to generate syscoins, false otherwise.\n .TP\n \\fBsetgenerate 'generate' ['genproclimit']\\fR\n Generation is limited to ['genproclimit'] processors, \\-1 is unlimited.\n@@ -110,13 +110,13 @@ Returns a recent hashes per second performance measurement while generating.\n Returns an object containing server information.\n .TP\n \\fBgetnewaddress 'account'\\fR\n-Returns a new bitcoin address for receiving payments. If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.\n+Returns a new syscoin address for receiving payments. If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.\n .TP\n \\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n DEPRECATED. Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n .TP\n-\\fBgetreceivedbyaddress 'bitcoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'bitcoinaddress' in transactions with at least ['minconf'] confirmations.\n+\\fBgetreceivedbyaddress 'syscoinaddress' ['minconf=1']\\fR\n+Returns the total amount received by 'syscoinaddress' in transactions with at least ['minconf'] confirmations.\n .TP\n \\fBgettransaction 'txid'\\fR\n Returns information about a specific transaction, given hexadecimal transaction ID.\n@@ -134,7 +134,7 @@ List commands, or get help for a command.\n .TP\n \\fBlistaccounts ['minconf=1']\\fR\n DEPRECATED. List accounts and their current balances.\n-     *note: requires bitcoin 0.3.20 or later.\n+     *note: requires syscoin 0.3.20 or later.\n .TP\n \\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n ['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n@@ -163,31 +163,31 @@ Returns a list of the last ['count'] transactions for 'account' \\- for all accou\n     \"message\"       : message associated with transaction (only for send).\n     \"to\"            : message-to associated with transaction (only for send).\n \n-    *note: requires bitcoin 0.3.20 or later.\n+    *note: requires syscoin 0.3.20 or later.\n .TP\n \\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n DEPRECATED. Moves funds between accounts.\n .TP\n-\\fBsendfrom* <'account'> <'bitcoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-DEPRECATED. Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n+\\fBsendfrom* <'account'> <'syscoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n+DEPRECATED. Sends amount from account's balance to 'syscoinaddress'. This method will fail if there is less than amount syscoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n .TP     \n-\\fBsendtoaddress 'bitcoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'bitcoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n+\\fBsendtoaddress 'syscoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n+Sends amount from the server's available balance to 'syscoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n .TP    \n \\fBstop\\fR\n-Stops the bitcoin server.\n+Stops the syscoin server.\n .TP    \n-\\fBvalidateaddress 'bitcoinaddress'\\fR\n-Checks that 'bitcoinaddress' looks like a proper bitcoin address. Returns an object containing:\n+\\fBvalidateaddress 'syscoinaddress'\\fR\n+Checks that 'syscoinaddress' looks like a proper syscoin address. Returns an object containing:\n \n     \"isvalid\" : true or false.\n     \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : bitcoinaddress.\n+    \"address\" : syscoinaddress.\n \n     *note: ismine and address are only returned if the address is valid.\n \n .SH \"SEE ALSO\"\n-bitcoin.conf(5)\n+syscoin.conf(5)\n .SH AUTHOR\n This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n ",
        "previous_filename": "contrib/debian/manpages/bitcoind.1"
      },
      {
        "sha": "741aed2f5a4af42b2be6707036ed8a52bff7a671",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n #!/usr/bin/make -f\n # -*- mode: makefile; coding: utf-8 -*-\n \n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n+#DEB_MAKE_CHECK_TARGET = test_syscoin\n+#build/syscoind::\n+#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_syscoin)\n \n-DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n+DEB_INSTALL_EXAMPLES_syscoind += debian/examples/*\n+DEB_INSTALL_MANPAGES_syscoind += debian/manpages/*\n \n %:\n \tdh --with bash-completion $@\n \n override_dh_auto_clean:\n \tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/syscoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n # Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:"
      },
      {
        "sha": "e8ef064997fe8165b447c62cc810f239b747fb39",
        "filename": "contrib/debian/syscoin-qt.desktop",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoin-qt.desktop?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,12 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Syscoin\n+Comment=Syscoin P2P Cryptocurrency\n+Comment[fr]=Syscoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Syscoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=syscoin-qt %u\n+Terminal=false\n+Type=Application\n+Icon=syscoin128\n+MimeType=x-scheme-handler/syscoin;\n+Categories=Office;Finance;"
      },
      {
        "sha": "a0106d8dff0966d92e54c3f51d243ddad5cfcdbf",
        "filename": "contrib/debian/syscoin-qt.install",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoin-qt.install?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,6 @@\n+usr/local/bin/syscoin-qt usr/bin\n+share/pixmaps/syscoin32.xpm usr/share/pixmaps\n+share/pixmaps/syscoin16.xpm usr/share/pixmaps\n+share/pixmaps/syscoin128.png usr/share/pixmaps\n+debian/syscoin-qt.desktop usr/share/applications\n+debian/syscoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "20b94ee363207f78fd4d4c0fb467a556bc4bc914",
        "filename": "contrib/debian/syscoin-qt.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoin-qt.lintian-overrides?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl\n+syscoin-qt: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/bitcoin-qt.lintian-overrides"
      },
      {
        "sha": "5ba7bd7745b93639b5df48b7f65bd09689370098",
        "filename": "contrib/debian/syscoin-qt.protocol",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoin-qt.protocol?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,6 +1,6 @@\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=syscoin-qt '%u'\n+protocol=syscoin\n input=none\n output=none\n helper=true",
        "previous_filename": "contrib/debian/bitcoin-qt.protocol"
      },
      {
        "sha": "4fed433cbd16edf5155871301460fd46dcb83bf2",
        "filename": "contrib/debian/syscoin-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoin-tx.install?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/syscoin-tx usr/bin"
      },
      {
        "sha": "937163061659e7e570eafacc900fa07a784413c8",
        "filename": "contrib/debian/syscoind.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoind.bash-completion?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1 @@\n+contrib/syscoind.bash-completion\tsyscoind"
      },
      {
        "sha": "49023ff7b9edc75693a1d82e0c47f8a85f56fd09",
        "filename": "contrib/debian/syscoind.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoind.examples?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/syscoin.conf"
      },
      {
        "sha": "2e8c4d0cfd932ee084f51d01d2b926bca6020db9",
        "filename": "contrib/debian/syscoind.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoind.install?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,2 @@\n+usr/local/bin/syscoind usr/bin\n+usr/local/bin/syscoin-cli usr/bin"
      },
      {
        "sha": "21fdab79a5531e32322f5b8e536577d309e2e437",
        "filename": "contrib/debian/syscoind.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoind.lintian-overrides?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl\n+syscoind: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/bitcoind.lintian-overrides"
      },
      {
        "sha": "af62ace8e9657697b28171bc0dcf98dc25c057cd",
        "filename": "contrib/debian/syscoind.manpages",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/syscoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/syscoind.manpages?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,3 @@\n+debian/manpages/syscoind.1\n+debian/manpages/syscoin.conf.5\n+debian/manpages/syscoin-cli.1"
      },
      {
        "sha": "c89ae1755d2a180d9d9bbef948ab16da3e3e43a9",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,4 +2,4 @@\n version=3\n # use qa.debian.org redirector; see man uscan\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/syscoin/syscoin v(.*).tar.gz"
      },
      {
        "sha": "18863c44e8bf3de5997640c036a5ba6ccd2bd6e4",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -16,11 +16,11 @@ If you run this script from src/ it will automatically update the year on the co\n \n For example a file changed in 2014 (with 2014 being the current year):\n \n-```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n+```// Copyright (c) 2009-2013 The Syscoin Core developers```\n \n would be changed to:\n \n-```// Copyright (c) 2009-2014 The Bitcoin Core developers```\n+```// Copyright (c) 2009-2014 The Syscoin Core developers```\n \n git-subtree-check.sh\n ====================\n@@ -30,9 +30,9 @@ the commit it claims to have been updated to.\n \n To use, make sure that you have fetched the upstream repository branch in which the subtree is\n maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin/univalue.git (branch master)\n+* for `src/secp256k1`: https://github.com/syscoin/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/syscoin/leveldb.git (branch syscoin-fork)\n+* for `src/univalue`: https://github.com/syscoin/univalue.git (branch master)\n \n Usage: `git-subtree-check.sh DIR COMMIT`\n \n@@ -45,10 +45,10 @@ A small script to automate merging pull-requests securely and sign them with GPG\n \n For example:\n \n-  ./github-merge.sh bitcoin/bitcoin 3077\n+  ./github-merge.sh syscoin/syscoin 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n+syscoin/syscoin repository.\n \n What it does:\n * Fetch master and the pull request.\n@@ -66,16 +66,16 @@ couldn't mess with the sources.\n \n Setup\n ---------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+Configuring the github-merge tool for the syscoin repository is done in the following way:\n \n-    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.repository syscoin/syscoin\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n optimize-pngs.py\n ================\n \n-A script to optimize png files in the bitcoin\n+A script to optimize png files in the syscoin\n repository (requires pngcrush).\n \n security-check.py and test-security-check.py\n@@ -98,10 +98,10 @@ If only supported symbols are used the return value will be 0 and the output wil\n \n If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n \n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+    .../64/test_syscoin: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_syscoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_syscoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_syscoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n ======================"
      },
      {
        "sha": "215261e27a3b808889ade7087128d3f56aedab43",
        "filename": "contrib/devtools/clang-format.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,7 +3,7 @@\n Wrapper script for clang-format\n \n Copyright (c) 2015 MarcoFalke\n-Copyright (c) 2015 The Bitcoin Core developers\n+Copyright (c) 2015 The Syscoin Core developers\n Distributed under the MIT software license, see the accompanying\n file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "96279e8c9b2c3e1e25324b7f8add62cc7a171dc1",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -7,11 +7,11 @@\n \n For example: if it finds something like this and we're in 2014\n \n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2013 The Syscoin Core developers\n \n it will change it to\n \n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n \n It will do this for all the files in the folder and its children.\n \n@@ -22,7 +22,7 @@\n \n year = time.gmtime()[0]\n last_year = year - 1\n-command = \"perl -pi -e 's/%s The Bitcoin/%s The Bitcoin/' %s\"\n+command = \"perl -pi -e 's/%s The Syscoin/%s The Syscoin/' %s\"\n listFilesCommand = \"find . | grep %s\"\n \n extensions = [\".cpp\",\".h\"]"
      },
      {
        "sha": "984aab6396dd23fa624e0078c2a3dba56ec10dfe",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -50,7 +50,7 @@\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n # Allowed NEEDED libraries\n ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n+# syscoind and syscoin-qt\n 'libgcc_s.so.1', # GCC base support\n 'libc.so.6', # C library\n 'libpthread.so.0', # threading\n@@ -59,7 +59,7 @@\n 'librt.so.1', # real-time (clock)\n 'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n 'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n+# syscoin-qt only\n 'libX11-xcb.so.1', # part of X11\n 'libX11.so.6', # part of X11\n 'libxcb.so.1', # part of X11"
      },
      {
        "sha": "3994d31c92c3b6176bb1f67428cb935b887b42c5",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -26,7 +26,7 @@\n # Name of transifex tool\n TX = 'tx'\n # Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n+SOURCE_LANG = 'syscoin_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n # Minimum number of messages for translation to be considered at all"
      },
      {
        "sha": "75e9b8390355d24f62ca12ce260aa973b1d042e4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -19,7 +19,7 @@ Sanity checks:\n \n Once you've got the right hardware and software:\n \n-    git clone git://github.com/bitcoin/bitcoin.git\n+    git clone git://github.com/syscoin/syscoin.git\n     git clone git://github.com/devrandom/gitian-builder.git\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n@@ -61,5 +61,5 @@ Here's a description of Gavin's setup on OSX 10.6:\n 5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n \n \texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n+\tgit clone git://github.com/syscoin/syscoin.git\n \t... etc"
      },
      {
        "sha": "8bcd95467c0bd9a9904dccab08b2d19dd62ac4eb",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.13\"\n+name: \"syscoin-linux-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -17,8 +17,8 @@ packages:\n - \"binutils-gold\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/syscoin/syscoin.git\"\n+  \"dir\": \"syscoin\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n@@ -62,7 +62,7 @@ script: |\n   done\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd syscoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -73,13 +73,13 @@ script: |\n   ./autogen.sh\n   ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo syscoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find syscoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\""
      },
      {
        "sha": "4d285bafa08bdae1a26f40f88468dfede241a358",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-dmg-signer\"\n+name: \"syscoin-dmg-signer\"\n suites:\n - \"trusty\"\n architectures:\n@@ -9,10 +9,10 @@ packages:\n - \"faketime\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/syscoin/syscoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n+- \"syscoin-osx-unsigned.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n@@ -29,10 +29,10 @@ script: |\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n+  UNSIGNED=syscoin-osx-unsigned.tar.gz\n+  SIGNED=syscoin-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n   ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"Bitcoin-Core\" -no-pad -r -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"Syscoin-Core\" -no-pad -r -apple -o uncompressed.dmg signed-app\n   ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "7fb4ba1294bff83d69e42f622371849b152ee7ee",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.13\"\n+name: \"syscoin-osx-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -20,8 +20,8 @@ packages:\n - \"libbz2-dev\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/syscoin/syscoin.git\"\n+  \"dir\": \"syscoin\"\n files:\n - \"MacOSX10.9.sdk.tar.gz\"\n script: |\n@@ -68,7 +68,7 @@ script: |\n   done\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd syscoin\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n@@ -83,14 +83,14 @@ script: |\n   ./autogen.sh\n   ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo syscoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find syscoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\"\n@@ -120,7 +120,7 @@ script: |\n     popd\n \n     make deploy\n-    ${WRAP_DIR}/dmg dmg Bitcoin-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+    ${WRAP_DIR}/dmg dmg Syscoin-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n \n     cd installed\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "b8a5ca2d5dc14303a193cb8640f9e0ae15220a7a",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-signer\"\n+name: \"syscoin-win-signer\"\n suites:\n - \"trusty\"\n architectures:\n@@ -9,12 +9,12 @@ packages:\n - \"autoconf\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/syscoin/syscoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"osslsigncode-1.7.1.tar.gz\"\n - \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n+- \"syscoin-win-unsigned.tar.gz\"\n script: |\n   BUILD_DIR=`pwd`\n   SIGDIR=${BUILD_DIR}/signature/win\n@@ -24,7 +24,7 @@ script: |\n   echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+  tar -C ${UNSIGNED_DIR} -xf syscoin-win-unsigned.tar.gz\n \n   tar xf osslsigncode-1.7.1.tar.gz\n   cd osslsigncode-1.7.1"
      },
      {
        "sha": "d3d9b80b0cb7434dee5e9a1c4910f473b538b618",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.13\"\n+name: \"syscoin-win-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -20,8 +20,8 @@ packages:\n - \"zip\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/syscoin/syscoin.git\"\n+  \"dir\": \"syscoin\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n@@ -66,7 +66,7 @@ script: |\n \n   # Create per-host linker wrapper\n   # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  # heap, causing non-determinism. See discussion in https://github.com/syscoin/syscoin/pull/6900\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n     for prog in collect2; do\n@@ -89,7 +89,7 @@ script: |\n \n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd syscoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -100,14 +100,14 @@ script: |\n   ./autogen.sh\n   ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo syscoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find syscoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   mkdir -p $OUTDIR/src\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n@@ -126,7 +126,7 @@ script: |\n     make ${MAKEOPTS}\n     make deploy\n     make install-strip\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f syscoin-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "dbf1e3540c9127a27130513d57df87ee99547abf",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n Sample configuration files for:\n \n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n+SystemD: syscoind.service\n+Upstart: syscoind.conf\n+OpenRC:  syscoind.openrc\n+         syscoind.openrcconf\n+CentOS:  syscoind.init\n+OS X:    org.syscoin.syscoind.plist\n \n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/runscript\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "0cbff6d30d2d66bbafaaf2205f4dd7609b2113a1",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "patch": "@@ -1,22 +0,0 @@\n-[Unit]\n-Description=Bitcoin's distributed currency daemon\n-After=network.target\n-\n-[Service]\n-User=bitcoin\n-Group=bitcoin\n-\n-Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n-\n-Restart=always\n-PrivateTmp=true\n-TimeoutStopSec=60s\n-TimeoutStartSec=2s\n-StartLimitInterval=120s\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "3bc7918eedfabc701353d48ab404cb1ff8b64e51",
        "filename": "contrib/init/org.syscoin.syscoind.plist",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/org.syscoin.syscoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/org.syscoin.syscoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.syscoin.syscoind.plist?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,10 +3,10 @@\n <plist version=\"1.0\">\n <dict>\n \t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n+\t<string>org.syscoin.syscoind</string>\n \t<key>ProgramArguments</key>\n \t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>/usr/local/bin/syscoind</string>\n \t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>",
        "previous_filename": "contrib/init/org.bitcoin.bitcoind.plist"
      },
      {
        "sha": "04487b402c462d63ae7dbf3d3dd6563d7a32b0d6",
        "filename": "contrib/init/syscoind.conf",
        "status": "renamed",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/syscoind.conf?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,16 +1,16 @@\n-description \"Bitcoin Core Daemon\"\n+description \"Syscoin Core Daemon\"\n \n start on runlevel [2345]\n stop on starting rc RUNLEVEL=[016]\n \n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+env SYSCOIND_BIN=\"/usr/bin/syscoind\"\n+env SYSCOIND_USER=\"syscoin\"\n+env SYSCOIND_GROUP=\"syscoin\"\n+env SYSCOIND_PIDDIR=\"/var/run/syscoind\"\n # upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+env SYSCOIND_PIDFILE=\"/var/run/syscoind/syscoind.pid\"\n+env SYSCOIND_CONFIGFILE=\"/etc/syscoin/syscoin.conf\"\n+env SYSCOIND_DATADIR=\"/var/lib/syscoind\"\n \n expect fork\n \n@@ -20,13 +20,13 @@ kill timeout 60\n \n pre-start script\n     # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n+    # syscoind will check and exit with this very warning, but it can do so\n     # long after forking, leaving upstart to think everything started fine.\n     # since this is a commonly encountered case on install, just check and\n     # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+    if ! grep -qs '^rpcpassword=' \"$SYSCOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run syscoind.\"\n+        echo \"The setting must appear in $SYSCOIND_CONFIGFILE\"\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n@@ -38,28 +38,28 @@ pre-start script\n         echo \"It is also recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Syscoin Alert\\\"\" \\\n             \"admin@foo.com\"\n         echo\n         exit 1\n     fi\n \n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+    mkdir -p \"$SYSCOIND_PIDDIR\"\n+    chmod 0755 \"$SYSCOIND_PIDDIR\"\n+    chown $SYSCOIND_USER:$SYSCOIND_GROUP \"$SYSCOIND_PIDDIR\"\n+    chown $SYSCOIND_USER:$SYSCOIND_GROUP \"$SYSCOIND_CONFIGFILE\"\n+    chmod 0660 \"$SYSCOIND_CONFIGFILE\"\n end script\n \n exec start-stop-daemon \\\n     --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n+    --pidfile \"$SYSCOIND_PIDFILE\" \\\n+    --chuid $SYSCOIND_USER:$SYSCOIND_GROUP \\\n+    --exec \"$SYSCOIND_BIN\" \\\n     -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -pid=\"$SYSCOIND_PIDFILE\" \\\n+    -conf=\"$SYSCOIND_CONFIGFILE\" \\\n+    -datadir=\"$SYSCOIND_DATADIR\" \\\n     -disablewallet \\\n     -daemon\n ",
        "previous_filename": "contrib/init/bitcoind.conf"
      },
      {
        "sha": "660441d8893df8a556b8f2b6ab835496ebd237fd",
        "filename": "contrib/init/syscoind.init",
        "status": "renamed",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/syscoind.init?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,36 +1,36 @@\n #!/bin/bash\n #\n-#  bitcoind The bitcoin core server.\n+#  syscoind The syscoin core server.\n #\n #\n # chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n+# description: syscoind\n+# processname: syscoind\n #\n \n # Source function library.\n . /etc/init.d/functions\n \n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n+# you can override defaults in /etc/sysconfig/syscoind, see below\n+if [ -f /etc/sysconfig/syscoind ]; then\n+        . /etc/sysconfig/syscoind\n fi\n \n RETVAL=0\n \n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+prog=syscoind\n+# you can override the lockfile via SYSCOIND_LOCKFILE in /etc/sysconfig/syscoind\n+lockfile=${SYSCOIND_LOCKFILE-/var/lock/subsys/syscoind}\n \n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+# syscoind defaults to /usr/bin/syscoind, override with SYSCOIND_BIN\n+syscoind=${SYSCOIND_BIN-/usr/bin/syscoind}\n \n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+# syscoind opts default to -disablewallet, override with SYSCOIND_OPTS\n+syscoind_opts=${SYSCOIND_OPTS--disablewallet}\n \n start() {\n     echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    daemon $DAEMONOPTS $syscoind $syscoind_opts\n     RETVAL=$?\n     echo\n     [ $RETVAL -eq 0 ] && touch $lockfile",
        "previous_filename": "contrib/init/bitcoind.init"
      },
      {
        "sha": "e893d674d6b3e765c6ac3b3ff47cb01aa26f4724",
        "filename": "contrib/init/syscoind.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/syscoind.openrc?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/runscript\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/syscoin/.syscoin\" ]; then\n+\tSYSCOIND_DEFAULT_DATADIR=\"/var/lib/syscoin/.syscoin\"\n+else\n+\tSYSCOIND_DEFAULT_DATADIR=\"/var/lib/syscoind\"\n+fi\n+\n+SYSCOIND_CONFIGFILE=${SYSCOIND_CONFIGFILE:-/etc/syscoin/syscoin.conf}\n+SYSCOIND_PIDDIR=${SYSCOIND_PIDDIR:-/var/run/syscoind}\n+SYSCOIND_PIDFILE=${SYSCOIND_PIDFILE:-${SYSCOIND_PIDDIR}/syscoind.pid}\n+SYSCOIND_DATADIR=${SYSCOIND_DATADIR:-${SYSCOIND_DEFAULT_DATADIR}}\n+SYSCOIND_USER=${SYSCOIND_USER:-${SYSCOIN_USER:-syscoin}}\n+SYSCOIND_GROUP=${SYSCOIND_GROUP:-syscoin}\n+SYSCOIND_BIN=${SYSCOIND_BIN:-/usr/bin/syscoind}\n+SYSCOIND_NICE=${SYSCOIND_NICE:-${NICELEVEL:-0}}\n+SYSCOIND_OPTS=\"${SYSCOIND_OPTS:-${SYSCOIN_OPTS}}\"\n+\n+name=\"Syscoin Core Daemon\"\n+description=\"Syscoin cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/syscoind\"\n+command_args=\"-pid=\\\"${SYSCOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${SYSCOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${SYSCOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${SYSCOIND_OPTS}\"\n+\n+required_files=\"${SYSCOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${SYSCOIND_USER} \\\n+\t\t\t-N ${SYSCOIND_NICE} -w 2000\"\n+pidfile=\"${SYSCOIND_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${SYSCOIND_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${SYSCOIND_USER}:${SYSCOIND_GROUP}\" \\\n+\t\"${SYSCOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${SYSCOIND_USER}:${SYSCOIND_GROUP}\" \\\n+\t\"${SYSCOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${SYSCOIND_USER}:${SYSCOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${SYSCOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${SYSCOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run syscoind.\"\n+\t\teerror \"The setting must appear in ${SYSCOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Syscoin Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "d2d9a256a8c4ed49d2dcf97fcb67a239c3c4f942",
        "filename": "contrib/init/syscoind.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/syscoind.openrcconf?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/syscoind: config file for /etc/init.d/syscoind\n+\n+# Config file location\n+#SYSCOIND_CONFIGFILE=\"/etc/syscoin/syscoin.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $SYSCOIND_USER)\n+#SYSCOIND_PIDDIR=\"/var/run/syscoind\"\n+\n+# What filename to give the pidfile\n+#SYSCOIND_PIDFILE=\"${SYSCOIND_PIDDIR}/syscoind.pid\"\n+\n+# Where to write syscoind data (be mindful that the blockchain is large)\n+#SYSCOIND_DATADIR=\"/var/lib/syscoind\"\n+\n+# User and group to own syscoind process\n+#SYSCOIND_USER=\"syscoin\"\n+#SYSCOIND_GROUP=\"syscoin\"\n+\n+# Path to syscoind executable\n+#SYSCOIND_BIN=\"/usr/bin/syscoind\"\n+\n+# Nice value to run syscoind under\n+#SYSCOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+SYSCOIND_OPTS=\"-disablewallet\"\n+\n+# The timeout in seconds OpenRC will wait for syscoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+SYSCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "f9d9dfff562a23eb498b434dbc6e357ff3e51fd0",
        "filename": "contrib/init/syscoind.service",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/init/syscoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/syscoind.service?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -0,0 +1,22 @@\n+[Unit]\n+Description=Syscoin's distributed currency daemon\n+After=network.target\n+\n+[Service]\n+User=syscoin\n+Group=syscoin\n+\n+Type=forking\n+PIDFile=/var/lib/syscoind/syscoind.pid\n+ExecStart=/usr/bin/syscoind -daemon -pid=/var/lib/syscoind/syscoind.pid \\\n+-conf=/etc/syscoin/syscoin.conf -datadir=/var/lib/syscoind -disablewallet\n+\n+Restart=always\n+PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "7a3abaf0d36f5197f744c4bddb95ecb0e4db51a8",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -17,7 +17,7 @@ Optional config file setting for linearize-hashes:\n     $ ./linearize-data.py linearize.cfg\n \n Required configuration file settings:\n-* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n+* \"input\": syscoind blocks/ directory containing blkNNNNN.dat\n * \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n output.\n * \"output_file\": bootstrap.dat"
      },
      {
        "sha": "c5cf6edc0a990189992c8bfc0a210e4c535417f5",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n \n-# bitcoind RPC settings (linearize-hashes)\n+# syscoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n host=127.0.0.1\n@@ -14,12 +14,12 @@ max_height=313000\n # mainnet\n netmagic=f9beb4d9\n genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n+input=/home/example/.syscoin/blocks\n \n # testnet\n #netmagic=0b110907\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n+#input=/home/example/.syscoin/testnet3/blocks\n \n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt"
      },
      {
        "sha": "711375b9d8be90b0e9945afd989acc2cd42c3091",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "738183aab67a25b3bd7c6741fb62b4e78da15038",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -17,7 +17,7 @@\n \n settings = {}\n \n-class BitcoinRPC:\n+class SyscoinRPC:\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n \t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n@@ -53,7 +53,7 @@ def response_is_error(resp_obj):\n \t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n \n def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\trpc = SyscoinRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpassword'])\n \n \theight = settings['min_height']"
      },
      {
        "sha": "9ded867db4dc078ee7dc8420396928140fbc9aeb",
        "filename": "contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/Base.lproj/InfoPlist.strings?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1 +1 @@\n-{\tCFBundleDisplayName = \"Bitcoin Core\"; CFBundleName = \"Bitcoin Core\"; }\n+{\tCFBundleDisplayName = \"Syscoin Core\"; CFBundleName = \"Syscoin Core\"; }"
      },
      {
        "sha": "d30e164008e2844e031c322f1aadd505e6dfb005",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Syscoin-Core.dmg`.\n "
      },
      {
        "sha": "1269df4f0f2cf14cf06f53209eb2bb7aec608ab6",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@\n set -e\n \n ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+BUNDLE=\"${ROOTDIR}/Syscoin-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt"
      },
      {
        "sha": "5afb87244115691b71b0a8fa662b15f00f15b831",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>Syscoin-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "9568fccc0ea3bc19436db5da6f8c8a4209065e03",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -155,7 +155,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = \"Syscoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -596,7 +596,7 @@ if os.path.exists(\"dist\"):\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", \"Syscoin-Qt.app\")\n \n if verbose >= 2:\n     print \"+ Copying source bundle +\"\n@@ -757,7 +757,7 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=\"Bitcoin-Core\", ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=\"Syscoin-Core\", ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n@@ -772,7 +772,7 @@ if config.dmg is not None:\n         if verbose >= 3:\n             print \"Creating temp image for modification...\"\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=\"Bitcoin-Core\", ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=\"Syscoin-Core\", ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n@@ -837,7 +837,7 @@ if config.dmg is not None:\n                 items_positions.append(itemscript.substitute(params))\n \n         params = {\n-            \"disk\" : \"Bitcoin-Core\",\n+            \"disk\" : \"Syscoin-Core\",\n             \"window_bounds\" : \"300,300,800,620\",\n             \"icon_size\" : \"96\",\n             \"background_commands\" : \"\","
      },
      {
        "sha": "8175a859ac63145eeacf4d44404e944485673847",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ### Qos ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Syscoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n \n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+This means one can have an always-on syscoind instance running, and another local syscoind/syscoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "c893defbeea3ed305b6f113a6e9f1dfae06a7181",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n+#limit outbound Syscoin protocol traffic to this rate\n LIMIT=\"160kbit\"\n #defines the address space for which you wish to disable rate limiting\n LOCALNET=\"192.168.0.0/16\""
      },
      {
        "sha": "50a093a663328ccf202750cdb7cb6618ab999b15",
        "filename": "contrib/qt_translations.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,21 +2,21 @@\n \n # Helpful little script that spits out a comma-separated list of\n # language codes for Qt icons that should be included\n-# in binary bitcoin distributions\n+# in binary syscoin distributions\n \n import glob\n import os\n import re\n import sys\n \n if len(sys.argv) != 3:\n-  sys.exit(\"Usage: %s $QTDIR/translations $BITCOINDIR/src/qt/locale\"%sys.argv[0])\n+  sys.exit(\"Usage: %s $QTDIR/translations $SYSCOINDIR/src/qt/locale\"%sys.argv[0])\n \n d1 = sys.argv[1]\n d2 = sys.argv[2]\n \n l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])\n-l2 = set([ re.search(r'bitcoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'bitcoin_*.qm')) ])\n+l2 = set([ re.search(r'syscoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'syscoin_*.qm')) ])\n \n print \",\".join(sorted(l1.intersection(l2)))\n "
      },
      {
        "sha": "dcb9cbd35706a51fcfb6521c7a516eb9a6354c25",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -5,4 +5,4 @@ Utility to generate the seeds.txt list that is compiled into the client\n \n The 512 seeds compiled into the 0.10 release were created from sipa's DNS seed data, like this:\n \n-\tcurl -s http://bitcoin.sipa.be/seeds.txt | makeseeds.py\n+\tcurl -s http://syscoin.sipa.be/seeds.txt | makeseeds.py"
      },
      {
        "sha": "ce245c540d579d0f24e05e9e517dbaf81489d31d",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -117,10 +117,10 @@ def main():\n         exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#ifndef SYSCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define SYSCOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * List of fixed seed nodes for the syscoin network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n@@ -131,7 +131,7 @@ def main():\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n         process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#endif // SYSCOIN_CHAINPARAMSSEEDS_H\\n')\n             \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "885caecb7eade01c93c5ead5d81a05dca08659c3",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -152,7 +152,7 @@ def main():\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    # Filter out hosts with multiple syscoin ports, these are likely abusive\n     ips = filtermultiport(ips)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)"
      },
      {
        "sha": "f0ad99227eced5a1ae955678d017a8ee9370bcc7",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -859,8 +859,8 @@\n 77mx2jsxaoyesz2p.onion:8333\n 7g7j54btiaxhtsiy.onion:8333\n b6fr7dlbu2kpiysf.onion:8333\n-bitcoincfqcssig5.onion:8333\n-bitcoinostk4e4re.onion:8333\n+syscoincfqcssig5.onion:8333\n+syscoinostk4e4re.onion:8333\n bmutjfrj5btseddb.onion:8333\n drp4pvejybx2ejdr.onion:8333\n gixnv56d63buypan.onion:8333"
      },
      {
        "sha": "0f83914c8efcb9c7dbad454414a83e1be9a98b64",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n # List of fixed seed nodes for testnet\n \n # Onion nodes\n-thfsmmn2jbitcoin.onion\n+thfsmmn2jsyscoin.onion\n it2pj4f7657g3rhi.onion\n nkf5e6b7pl4jfd4a.onion\n 4zhkir2ofl7orfom.onion"
      },
      {
        "sha": "fef37486223bce0dae3c7c204be6251b80ad486a",
        "filename": "contrib/spendfrom/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -7,7 +7,7 @@ address (or addresses).\n Depends on [jsonrpc](http://json-rpc.org/).\n \n \tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n+\t             --fee=fee --datadir=/path/to/.syscoin --testnet --dry_run\n \n With no arguments, outputs a list of amounts associated with addresses.\n \n@@ -16,7 +16,7 @@ With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOAD\n ### Notes ###\n \n - You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n-will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n+will fail,  though, to prevent syscoin-losing accidents). Spendfrom may fail if\n it thinks the transaction would never be confirmed (if the amount being sent is\n too small, or if the transaction is too many bytes for the fee).\n "
      },
      {
        "sha": "c631fda1701e203e7c2e5d37d403d91ee0903c81",
        "filename": "contrib/spendfrom/setup.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n from distutils.core import setup\n-setup(name='btcspendfrom',\n+setup(name='sysspendfrom',\n       version='1.0',\n-      description='Command-line utility for bitcoin \"coin control\"',\n+      description='Command-line utility for syscoin \"coin control\"',\n       author='Gavin Andresen',\n-      author_email='gavin@bitcoinfoundation.org',\n+      author_email='gavin@syscoinfoundation.org',\n       requires=['jsonrpc'],\n       scripts=['spendfrom.py'],\n       )"
      },
      {
        "sha": "4e19bd10966f0c155c133a39baf3f8ddfcea4970",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "modified",
        "additions": 42,
        "deletions": 42,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python\n #\n-# Use the raw transactions API to spend bitcoins received on particular addresses,\n+# Use the raw transactions API to spend syscoins received on particular addresses,\n # and send any change back to that same address.\n #\n # Example usage:\n #  spendfrom.py  # Lists available funds\n #  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n #\n-# Assumes it will talk to a bitcoind or Bitcoin-Qt running\n+# Assumes it will talk to a syscoind or Syscoin-Qt running\n # on localhost.\n #\n # Depends on jsonrpc\n@@ -26,22 +26,22 @@\n BASE_FEE=Decimal(\"0.001\")\n \n def check_json_precision():\n-    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n+    \"\"\"Make sure json library being used does not lose precision converting SYS values\"\"\"\n     n = Decimal(\"20000000.00000003\")\n     satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n     if satoshis != 2000000000000003:\n         raise RuntimeError(\"JSON encode/decode loses precision\")\n \n def determine_db_dir():\n-    \"\"\"Return the default location of the bitcoin data directory\"\"\"\n+    \"\"\"Return the default location of the syscoin data directory\"\"\"\n     if platform.system() == \"Darwin\":\n-        return os.path.expanduser(\"~/Library/Application Support/Bitcoin/\")\n+        return os.path.expanduser(\"~/Library/Application Support/Syscoin/\")\n     elif platform.system() == \"Windows\":\n-        return os.path.join(os.environ['APPDATA'], \"Bitcoin\")\n-    return os.path.expanduser(\"~/.bitcoin\")\n+        return os.path.join(os.environ['APPDATA'], \"Syscoin\")\n+    return os.path.expanduser(\"~/.syscoin\")\n \n-def read_bitcoin_config(dbdir):\n-    \"\"\"Read the bitcoin.conf file from dbdir, returns dictionary of settings\"\"\"\n+def read_syscoin_config(dbdir):\n+    \"\"\"Read the syscoin.conf file from dbdir, returns dictionary of settings\"\"\"\n     from ConfigParser import SafeConfigParser\n \n     class FakeSecHead(object):\n@@ -59,11 +59,11 @@ def readline(self):\n                 return s\n \n     config_parser = SafeConfigParser()\n-    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"bitcoin.conf\"))))\n+    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"syscoin.conf\"))))\n     return dict(config_parser.items(\"all\"))\n \n def connect_JSON(config):\n-    \"\"\"Connect to a bitcoin JSON-RPC server\"\"\"\n+    \"\"\"Connect to a syscoin JSON-RPC server\"\"\"\n     testnet = config.get('testnet', '0')\n     testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n     if not 'rpcport' in config:\n@@ -72,7 +72,7 @@ def connect_JSON(config):\n     try:\n         result = ServiceProxy(connect)\n         # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n-        # but also make sure the bitcoind we're talking to is/isn't testnet:\n+        # but also make sure the syscoind we're talking to is/isn't testnet:\n         if result.getmininginfo()['testnet'] != testnet:\n             sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n             sys.exit(1)\n@@ -81,36 +81,36 @@ def connect_JSON(config):\n         sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n         sys.exit(1)\n \n-def unlock_wallet(bitcoind):\n-    info = bitcoind.getinfo()\n+def unlock_wallet(syscoind):\n+    info = syscoind.getinfo()\n     if 'unlocked_until' not in info:\n         return True # wallet is not encrypted\n     t = int(info['unlocked_until'])\n     if t <= time.time():\n         try:\n             passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n-            bitcoind.walletpassphrase(passphrase, 5)\n+            syscoind.walletpassphrase(passphrase, 5)\n         except:\n             sys.stderr.write(\"Wrong passphrase\\n\")\n \n-    info = bitcoind.getinfo()\n+    info = syscoind.getinfo()\n     return int(info['unlocked_until']) > time.time()\n \n-def list_available(bitcoind):\n+def list_available(syscoind):\n     address_summary = dict()\n \n     address_to_account = dict()\n-    for info in bitcoind.listreceivedbyaddress(0):\n+    for info in syscoind.listreceivedbyaddress(0):\n         address_to_account[info[\"address\"]] = info[\"account\"]\n \n-    unspent = bitcoind.listunspent(0)\n+    unspent = syscoind.listunspent(0)\n     for output in unspent:\n         # listunspent doesn't give addresses, so:\n-        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n+        rawtx = syscoind.getrawtransaction(output['txid'], 1)\n         vout = rawtx[\"vout\"][output['vout']]\n         pk = vout[\"scriptPubKey\"]\n \n-        # This code only deals with ordinary pay-to-bitcoin-address\n+        # This code only deals with ordinary pay-to-syscoin-address\n         # or pay-to-script-hash outputs right now; anything exotic is ignored.\n         if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n             continue\n@@ -139,8 +139,8 @@ def select_coins(needed, inputs):\n         n += 1\n     return (outputs, have-needed)\n \n-def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n-    all_coins = list_available(bitcoind)\n+def create_tx(syscoind, fromaddresses, toaddress, amount, fee):\n+    all_coins = list_available(syscoind)\n \n     total_available = Decimal(\"0.0\")\n     needed = amount+fee\n@@ -152,14 +152,14 @@ def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n         total_available += all_coins[addr][\"total\"]\n \n     if total_available < needed:\n-        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n+        sys.stderr.write(\"Error, only %f SYS available, need %f\\n\"%(total_available, needed));\n         sys.exit(1)\n \n     #\n     # Note:\n     # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n     # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n-    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n+    # Decimals, I'm casting amounts to float before sending them to syscoind.\n     #  \n     outputs = { toaddress : float(amount) }\n     (inputs, change_amount) = select_coins(needed, potential_inputs)\n@@ -170,19 +170,19 @@ def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n         else:\n             outputs[change_address] = float(change_amount)\n \n-    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n-    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n+    rawtx = syscoind.createrawtransaction(inputs, outputs)\n+    signed_rawtx = syscoind.signrawtransaction(rawtx)\n     if not signed_rawtx[\"complete\"]:\n         sys.stderr.write(\"signrawtransaction failed\\n\")\n         sys.exit(1)\n     txdata = signed_rawtx[\"hex\"]\n \n     return txdata\n \n-def compute_amount_in(bitcoind, txinfo):\n+def compute_amount_in(syscoind, txinfo):\n     result = Decimal(\"0.0\")\n     for vin in txinfo['vin']:\n-        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n+        in_info = syscoind.getrawtransaction(vin['txid'], 1)\n         vout = in_info['vout'][vin['vout']]\n         result = result + vout['value']\n     return result\n@@ -193,12 +193,12 @@ def compute_amount_out(txinfo):\n         result = result + vout['value']\n     return result\n \n-def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n+def sanity_test_fee(syscoind, txdata_hex, max_fee):\n     class FeeError(RuntimeError):\n         pass\n     try:\n-        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n-        total_in = compute_amount_in(bitcoind, txinfo)\n+        txinfo = syscoind.decoderawtransaction(txdata_hex)\n+        total_in = compute_amount_in(syscoind, txinfo)\n         total_out = compute_amount_out(txinfo)\n         if total_in-total_out > max_fee:\n             raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n@@ -221,15 +221,15 @@ def main():\n \n     parser = optparse.OptionParser(usage=\"%prog [options]\")\n     parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n-                      help=\"addresses to get bitcoins from\")\n+                      help=\"addresses to get syscoins from\")\n     parser.add_option(\"--to\", dest=\"to\", default=None,\n-                      help=\"address to get send bitcoins to\")\n+                      help=\"address to get send syscoins to\")\n     parser.add_option(\"--amount\", dest=\"amount\", default=None,\n                       help=\"amount to send\")\n     parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n                       help=\"fee to include\")\n     parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n-                      help=\"location of bitcoin.conf file with RPC username/password (default: %default)\")\n+                      help=\"location of syscoin.conf file with RPC username/password (default: %default)\")\n     parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n                       help=\"Use the test network\")\n     parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n@@ -238,12 +238,12 @@ def main():\n     (options, args) = parser.parse_args()\n \n     check_json_precision()\n-    config = read_bitcoin_config(options.datadir)\n+    config = read_syscoin_config(options.datadir)\n     if options.testnet: config['testnet'] = True\n-    bitcoind = connect_JSON(config)\n+    syscoind = connect_JSON(config)\n \n     if options.amount is None:\n-        address_summary = list_available(bitcoind)\n+        address_summary = list_available(syscoind)\n         for address,info in address_summary.iteritems():\n             n_transactions = len(info['outputs'])\n             if n_transactions > 1:\n@@ -253,14 +253,14 @@ def main():\n     else:\n         fee = Decimal(options.fee)\n         amount = Decimal(options.amount)\n-        while unlock_wallet(bitcoind) == False:\n+        while unlock_wallet(syscoind) == False:\n             pass # Keep asking for passphrase until they get it right\n-        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n-        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n+        txdata = create_tx(syscoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n+        sanity_test_fee(syscoind, txdata, amount*Decimal(\"0.01\"))\n         if options.dry_run:\n             print(txdata)\n         else:\n-            txid = bitcoind.sendrawtransaction(txdata)\n+            txid = syscoind.sendrawtransaction(txdata)\n             print(txid)\n \n if __name__ == '__main__':"
      },
      {
        "sha": "30751b0fd5efc654a5124d9ebea035a804a4bc26",
        "filename": "contrib/syscoin-qt.pro",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/syscoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/syscoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/syscoin-qt.pro?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -18,4 +18,4 @@ FORMS += \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n-    ../src/qt/bitcoin.qrc\n+    ../src/qt/syscoin.qrc",
        "previous_filename": "contrib/bitcoin-qt.pro"
      },
      {
        "sha": "13774dd31bee1de2fdf6ffe321cf501fffba6dc3",
        "filename": "contrib/syscoind.bash-completion",
        "status": "renamed",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/syscoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/syscoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/syscoind.bash-completion?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n+# bash programmable completion for syscoind(1) and syscoin-cli(1)\n # Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-have bitcoind && {\n+have syscoind && {\n \n-# call $bitcoind for RPC\n-_bitcoin_rpc() {\n+# call $syscoind for RPC\n+_syscoin_rpc() {\n     # determine already specified args necessary for RPC\n     local rpcargs=()\n     for i in ${COMP_LINE}; do\n@@ -16,23 +16,23 @@ _bitcoin_rpc() {\n                 ;;\n         esac\n     done\n-    $bitcoind \"${rpcargs[@]}\" \"$@\"\n+    $syscoind \"${rpcargs[@]}\" \"$@\"\n }\n \n-# Add bitcoin accounts to COMPREPLY\n-_bitcoin_accounts() {\n+# Add syscoin accounts to COMPREPLY\n+_syscoin_accounts() {\n     local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n+    accounts=$(_syscoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n     COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n }\n \n-_bitcoind() {\n+_syscoind() {\n     local cur prev words=() cword\n-    local bitcoind\n+    local syscoind\n \n-    # save and use original argument to invoke bitcoind\n-    # bitcoind might not be in $PATH\n-    bitcoind=\"$1\"\n+    # save and use original argument to invoke syscoind\n+    # syscoind might not be in $PATH\n+    syscoind=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -53,7 +53,7 @@ _bitcoind() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n+                _syscoin_accounts\n                 return 0\n                 ;;\n             getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n@@ -74,7 +74,7 @@ _bitcoind() {\n                 return 0\n                 ;;\n             move|setaccount)\n-                _bitcoin_accounts\n+                _syscoin_accounts\n                 return 0\n                 ;;\n         esac\n@@ -90,7 +90,7 @@ _bitcoind() {\n             return 0\n             ;;\n         getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+            _syscoin_accounts\n             return 0\n             ;;\n     esac\n@@ -114,12 +114,12 @@ _bitcoind() {\n \n             # only parse --help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($syscoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n             fi\n \n             # only parse help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+                commands=$(_syscoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n             fi\n \n             COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n@@ -133,7 +133,7 @@ _bitcoind() {\n     esac\n }\n \n-complete -F _bitcoind bitcoind bitcoin-cli\n+complete -F _syscoind syscoind syscoin-cli\n }\n \n # Local variables:",
        "previous_filename": "contrib/bitcoind.bash-completion"
      },
      {
        "sha": "71238b67e8ee4073e4acd89a4bf1a97edc31aafb",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,6 +1,6 @@\n ### TestGen ###\n \n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Syscoin tests.\n \n Usage: \n "
      },
      {
        "sha": "5ea85529289d4f7cd1ddbf47e72b29513f40a14d",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n '''\n-Bitcoin base58 encoding and decoding.\n+Syscoin base58 encoding and decoding.\n \n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+Based on https://syscointalk.org/index.php?topic=1026.0 (public domain)\n '''\n import hashlib\n \n@@ -34,7 +34,7 @@ def b58encode(v):\n         long_value = div\n     result = __b58chars[long_value] + result\n \n-    # Bitcoin does a little leading-zero-compression:\n+    # Syscoin does a little leading-zero-compression:\n     # leading 0-bytes in the input become leading-1s\n     nPad = 0\n     for c in v:\n@@ -95,7 +95,7 @@ def get_bcaddress_version(strAddress):\n     return ord(version)\n \n if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    # Test case (from http://gitorious.org/syscoin/python-base58.git)\n     assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n     _ohai = 'o hai'.encode('ascii')\n     _tmp = b58encode(_ohai)"
      },
      {
        "sha": "8f8862d146ab4407489cdf9405fd64e64ea9d6ad",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -4,7 +4,7 @@ if [ -d \"$1\" ]; then\n   cd \"$1\"\n else\n   echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n+  echo \"Removes obsolete Syscoin database files\" >&2\n   exit 1\n fi\n \n@@ -16,22 +16,22 @@ if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/C\n \n case $LEVEL in\n   0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n+    echo \"Error: no Syscoin datadir detected.\"\n     exit 1\n     ;;\n   1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n+    echo \"Detected old Syscoin datadir (before 0.7).\"\n     echo \"Nothing to do.\"\n     exit 0\n     ;;\n   2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n+    echo \"Detected Syscoin 0.7 datadir.\"\n     ;;\n   3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n+    echo \"Detected Syscoin pre-0.8 datadir.\"\n     ;;\n   4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n+    echo \"Detected Syscoin 0.8 datadir.\"\n     ;;\n esac\n "
      },
      {
        "sha": "6031fe3f482df3dc3c86b0d5d4204d10248f5294",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -11,7 +11,7 @@ for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\t[ \"$SYSCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n \t\twhile read KEY; do\n \t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY:24:40} \"*)\n \t\t\t\tREVSIG=true"
      },
      {
        "sha": "c74d0c1d9376fc8febb0958abe1bb6600bb18b87",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)syscoin/syscoin(.git)?$ ]]; then\n     exit 0\n fi\n "
      },
      {
        "sha": "a0c8d1c2ecb9900bdd24ffd92a65846498767a2d",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -20,9 +20,9 @@ IS_SIGNED () {\n \t\treturn 0;\n \tfi\n \tif IS_REVSIG_ALLOWED \"$1\"; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\t\texport SYSCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n \telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\t\texport SYSCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n \tfi\n \tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n \t\treturn 1;"
      },
      {
        "sha": "144dfb7a44bc9fb3c9eeaa57279c679bf35526ce",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n ### Verify SF Binaries ###\n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://syscoin.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n "
      },
      {
        "sha": "60d03cec03200ccd4fc507d377533f95739aaf08",
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,6 +1,6 @@\n #!/bin/bash\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   This script attempts to download the signature file SHA256SUMS.asc from syscoin.org\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -14,13 +14,13 @@ function clean_up {\n    done\n }\n \n-WORKINGDIR=\"/tmp/bitcoin\"\n+WORKINGDIR=\"/tmp/syscoin\"\n TMPFILE=\"hashes.tmp\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test/\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n+BASEDIR=\"https://syscoin.org/bin/\"\n+VERSIONPREFIX=\"syscoin-core-\"\n RCVERSIONSTRING=\"rc\"\n \n #this URL is used if a version number is not specified as an argument to the script\n@@ -34,7 +34,7 @@ cd \"$WORKINGDIR\"\n \n #test if a version number has been passed as an argument\n if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #let's also check if the version number includes the prefix 'syscoin-',\n    #  and add this prefix if it doesn't\n    if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n       VERSION=\"$1\"\n@@ -82,7 +82,7 @@ if [ $RET -ne 0 ]; then\n       echo \"Bad signature.\"\n    elif [ $RET -eq 2 ]; then\n       #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n+      echo \"gpg error. Do you have the Syscoin Core binary release signing key installed?\"\n    fi\n \n    echo \"gpg output:\""
      },
      {
        "sha": "f91f983f2921ff06b2371ddf856bb89924d96a37",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -12,9 +12,9 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n+A prefix will be generated that's suitable for plugging into Syscoin's\n configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+created. To use it for Syscoin:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n@@ -40,7 +40,7 @@ The following can be set when running make: make FOO=bar\n     DEBUG: disable some optimizations and enable more runtime checking\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+options will be passed to syscoin's configure. In this case, `--disable-wallet`.\n \n Additional targets:\n "
      },
      {
        "sha": "24571af33f42f7360d02799a267b4d666ad306ef",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -18,7 +18,7 @@ if test -z $with_protoc_bindir; then\n   with_protoc_bindir=$prefix/native/bin\n fi\n if test -z $with_comparison_tool; then\n-  with_comparison_tool=$prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+  with_comparison_tool=$prefix/native/share/SyscoindComparisonTool_jar/SyscoindComparisonTool.jar\n fi\n \n "
      },
      {
        "sha": "05457f7bb7b57e68a6339f707648b38f2fa0a485",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n+This is a system of building and caching dependencies necessary for building Syscoin. \n There are several features that make it different from most similar systems:\n \n ### It is designed to be builder and host agnostic"
      },
      {
        "sha": "6969fe08eec06d3b7036171b51951a7ef1e6ae64",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,8 +3,8 @@ $(package)_version=8c6666f\n $(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n $(package)_file_name=pull-tests-$($(package)_version).jar\n $(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n-$(package)_install_dirname=BitcoindComparisonTool_jar\n-$(package)_install_filename=BitcoindComparisonTool.jar\n+$(package)_install_dirname=SyscoindComparisonTool_jar\n+$(package)_install_filename=SyscoindComparisonTool.jar\n \n define $(package)_extract_cmds\n endef"
      },
      {
        "sha": "831b9d362a28a3a265078c0a0e9c5b4480dea5a2",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -28,7 +28,7 @@ DOXYFILE_ENCODING      = UTF-8\n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n # by quotes) that should identify the project.\n \n-PROJECT_NAME           = Bitcoin\n+PROJECT_NAME           = Syscoin\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. \n # This could be handy for archiving the generated documentation or \n@@ -47,7 +47,7 @@ PROJECT_BRIEF          = \"P2P Digital Currency\"\n # exceed 55 pixels and the maximum width should not exceed 200 pixels. \n # Doxygen will copy the logo to the output directory.\n \n-PROJECT_LOGO           = doc/bitcoin_logo_doxygen.png\n+PROJECT_LOGO           = doc/syscoin_logo_doxygen.png\n \n # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n # base path where the generated documentation will be put. "
      },
      {
        "sha": "05209802539a0b6abc1abb8776e0a775083de6aa",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,45 +1,45 @@\n-Bitcoin Core 0.12.99\n+Syscoin Core 0.12.99\n =====================\n \n Setup\n ---------------------\n-[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+[Syscoin Core](http://syscoin.org/en/download) is the original Syscoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Syscoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform.\n+The following are some helpful notes on how to run Syscoin on your native platform.\n \n ### Unix\n \n-You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n+You need the Qt4 run-time libraries to run Syscoin-Qt. On Debian or Ubuntu:\n \n \tsudo apt-get install libqtgui4\n \n Unpack the files into a directory and run:\n \n-- bin/32/bitcoin-qt (GUI, 32-bit) or bin/32/bitcoind (headless, 32-bit)\n-- bin/64/bitcoin-qt (GUI, 64-bit) or bin/64/bitcoind (headless, 64-bit)\n+- bin/32/syscoin-qt (GUI, 32-bit) or bin/32/syscoind (headless, 32-bit)\n+- bin/64/syscoin-qt (GUI, 64-bit) or bin/64/syscoind (headless, 64-bit)\n \n \n \n ### Windows\n \n-Unpack the files into a directory, and then run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run syscoin-qt.exe.\n \n ### OS X\n \n-Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n+Drag Syscoin-Core to your applications folder, and then run Syscoin-Core.\n \n ### Need Help?\n \n-* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+* See the documentation at the [Syscoin Wiki](https://en.syscoin.it/wiki/Main_Page)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n+* Ask for help on [#syscoin](http://webchat.freenode.net?channels=syscoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=syscoin).\n+* Ask for help on the [SyscoinTalk](https://syscointalk.org/) forums, in the [Technical Support board](https://syscointalk.org/index.php?board=4.0).\n \n Building\n ---------------------\n-The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+The following are developer notes on how to build Syscoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n@@ -49,13 +49,13 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/README.md) contains relevant information on the development process and automated testing.\n+The Syscoin repo's [root README](https://github.com/syscoin/syscoin/blob/master/README.md) contains relevant information on the development process and automated testing.\n \n - [Developer Notes](developer-notes.md)\n - [Multiwallet Qt Development](multiwallet-qt.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://dev.visucore.com/syscoin/doxygen/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [Unit Tests](unit-tests.md)\n@@ -65,9 +65,9 @@ The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/\n - [Dnsseed Policy](dnsseed-policy.md)\n \n ### Resources\n-* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss on the [SyscoinTalk](https://syscointalk.org/) forums, in the [Development & Technical Discussion board](https://syscointalk.org/index.php?board=6.0).\n+* Discuss project-specific development on #syscoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=syscoin-core-dev).\n+* Discuss general Syscoin development on #syscoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=syscoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "844170120c52cdb6b837b276c11b5056f6c2f7b9",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin Core 0.12.99\r\n+Syscoin Core 0.12.99\r\n =====================\r\n \r\n Intro\r\n -----\r\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\r\n+Syscoin is a free open source peer-to-peer electronic cash system that is\r\n completely decentralized, without the need for a central server or trusted\r\n parties.  Users hold the crypto keys to their own money and transact directly\r\n with each other, with the help of a P2P network to check for double-spending.\r\n \r\n \r\n Setup\r\n -----\r\n-Unpack the files into a directory and run bitcoin-qt.exe.\r\n+Unpack the files into a directory and run syscoin-qt.exe.\r\n \r\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n-However, it downloads and stores the entire history of Bitcoin transactions;\r\n+Syscoin Core is the original Syscoin client and it builds the backbone of the network.\r\n+However, it downloads and stores the entire history of Syscoin transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r\n \r\n-See the bitcoin wiki at:\r\n-  https://en.bitcoin.it/wiki/Main_Page\r\n+See the syscoin wiki at:\r\n+  https://en.syscoin.it/wiki/Main_Page\r\n for more help and information.\r"
      },
      {
        "sha": "e6eeaabf9f6feabcd485d503a645c4a80e6021f2",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -49,7 +49,7 @@ Only supports JSON as output format.\n \n The getutxo command allows querying of the UTXO set given a set of outpoints.\n See BIP64 for input and output serialisation:\n-https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki\n+https://github.com/syscoin/bips/blob/master/bip-0064.mediawiki\n \n Example:\n ```\n@@ -93,4 +93,4 @@ Only supports JSON as output format.\n \n Risks\n -------------\n-Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy.\n+Running a web browser on the same node with a REST enabled syscoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "10fe758f5bd7e09bee1a96f4e839132434e98674",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1 +1 @@\n-The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).\n+The list of assets used in the syscoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "7b08d3bfaa6080277c3718dafb950cd21d5450dc",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,21 +1,21 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n+BIPs that are implemented by Syscoin Core (up-to-date up to **v0.12.0**):\n \n-* [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 14`](https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 16`](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/bitcoin/bitcoin/pull/748)).\n-* [`BIP 21`](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki): The URI format for Bitcoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/bitcoin/bitcoin/pull/176)).\n-* [`BIP 22`](https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/bitcoin/bitcoin/pull/936)).\n-* [`BIP 23`](https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/bitcoin/bitcoin/pull/1816)).\n-* [`BIP 30`](https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/bitcoin/bitcoin/pull/915)).\n-* [`BIP 31`](https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/bitcoin/bitcoin/pull/1081)).\n-* [`BIP 34`](https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/bitcoin/bitcoin/pull/1526)).\n-* [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)).\n-* [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n-* [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n-* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n-* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n-* [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n-* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579)).\n-* [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n+* [`BIP 11`](https://github.com/syscoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/syscoin/syscoin/pull/669)).\n+* [`BIP 13`](https://github.com/syscoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/syscoin/syscoin/pull/669)).\n+* [`BIP 14`](https://github.com/syscoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/syscoin/syscoin/pull/669)).\n+* [`BIP 16`](https://github.com/syscoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/syscoin/syscoin/pull/748)).\n+* [`BIP 21`](https://github.com/syscoin/bips/blob/master/bip-0021.mediawiki): The URI format for Syscoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/syscoin/syscoin/pull/176)).\n+* [`BIP 22`](https://github.com/syscoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/syscoin/syscoin/pull/936)).\n+* [`BIP 23`](https://github.com/syscoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/syscoin/syscoin/pull/1816)).\n+* [`BIP 30`](https://github.com/syscoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/syscoin/syscoin/pull/915)).\n+* [`BIP 31`](https://github.com/syscoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/syscoin/syscoin/pull/1081)).\n+* [`BIP 34`](https://github.com/syscoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/syscoin/syscoin/pull/1526)).\n+* [`BIP 35`](https://github.com/syscoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/syscoin/syscoin/pull/1641)).\n+* [`BIP 37`](https://github.com/syscoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/syscoin/syscoin/pull/1795)).\n+* [`BIP 42`](https://github.com/syscoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/syscoin/syscoin/pull/3842)).\n+* [`BIP 61`](https://github.com/syscoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/syscoin/syscoin/pull/3185)).\n+* [`BIP 65`](https://github.com/syscoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/syscoin/syscoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/syscoin/syscoin/pull/6124).\n+* [`BIP 66`](https://github.com/syscoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/syscoin/syscoin/pull/5713)).\n+* [`BIP 70`](https://github.com/syscoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/syscoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/syscoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Syscoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/syscoin/syscoin/pull/5216)).\n+* [`BIP 111`](https://github.com/syscoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/syscoin/syscoin/pull/6579)).\n+* [`BIP 130`](https://github.com/syscoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/syscoin/syscoin/pull/6494))."
      },
      {
        "sha": "afc2fef0716c5cffc17d00d3451dd26fe1a4c313",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@ OpenBSD build guide\n ======================\n (updated for OpenBSD 5.7)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+This guide describes how to build syscoind and command-line utilities on OpenBSD.\n \n As OpenBSD is most common as a server OS, we will not bother with the GUI.\n \n@@ -19,7 +19,7 @@ pkg_add python # (select version 2.7.x, not 3.x)\n ln -sf /usr/local/bin/python2.7 /usr/local/bin/python2\n ```\n \n-The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.\n+The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Syscoin Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.\n \n GCC\n -------\n@@ -36,16 +36,16 @@ This compiler will not overwrite the system compiler, it will be installed as `e\n \n Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n \n-    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    test_syscoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n     Segmentation fault (core dumped)\n \n-This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+This makes it necessary to build boost, or at least the parts used by Syscoin Core, manually:\n \n ```\n-# Pick some path to install boost to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+# Pick some path to install boost to, here we create a directory within the syscoin directory\n+SYSCOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${SYSCOIN_ROOT}/boost\"\n mkdir -p $BOOST_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -62,7 +62,7 @@ patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monit\n sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n \n-# Build w/ minimum configuration necessary for bitcoin\n+# Build w/ minimum configuration necessary for syscoin\n echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n@@ -78,9 +78,9 @@ See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to b\n You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n ```bash\n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the syscoin directory\n+SYSCOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${SYSCOIN_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -96,7 +96,7 @@ cd db-4.8.30.NC/build_unix/\n make install\n ```\n \n-### Building Bitcoin Core\n+### Building Syscoin Core\n \n **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n \n@@ -149,9 +149,9 @@ gmake\n However, this does not appear to work. Compilation succeeds, but link fails\n with many 'local symbol discarded' errors:\n \n-    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libsyscoin_util.a(libsyscoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libsyscoin_util.a(libsyscoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libsyscoin_util.a(libsyscoin_util_a-random.o)\n \n According to similar reported errors this is a binutils (ld) issue in 2.15, the\n version installed by OpenBSD 5.7:"
      },
      {
        "sha": "58eabc82518489f43dcece9a1db6fa7d6faebf9c",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,6 +1,6 @@\n Mac OS X Build Instructions and Notes\n ====================================\n-This guide will show you how to build bitcoind (headless client) for OS X.\n+This guide will show you how to build syscoind (headless client) for OS X.\n \n Notes\n -----\n@@ -36,15 +36,15 @@ Instructions: Homebrew\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n \n-### Building `bitcoin`\n+### Building `syscoin`\n \n 1. Clone the GitHub tree to get the source code and go into the directory.\n \n-        git clone https://github.com/bitcoin/bitcoin.git\n-        cd bitcoin\n+        git clone https://github.com/syscoin/syscoin.git\n+        cd syscoin\n \n-2.  Build bitcoin-core:\n-    This will configure and build the headless bitcoin binaries as well as the gui (if Qt is found).\n+2.  Build syscoin-core:\n+    This will configure and build the headless syscoin binaries as well as the gui (if Qt is found).\n     You can disable the gui build by passing `--without-gui` to configure.\n \n         ./autogen.sh\n@@ -55,7 +55,7 @@ NOTE: Building with Qt4 is still supported, however, could result in a broken UI\n \n         make check\n \n-4.  (Optional) You can also install bitcoind to your path:\n+4.  (Optional) You can also install syscoind to your path:\n \n         make install\n \n@@ -67,7 +67,7 @@ Download Qt Creator from https://www.qt.io/download/. Download the \"community ed\n 1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+4. Enter \"syscoin-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n@@ -77,11 +77,11 @@ Download Qt Creator from https://www.qt.io/download/. Download the \"community ed\n \n Creating a release build\n ------------------------\n-You can ignore this section if you are building `bitcoind` for your own use.\n+You can ignore this section if you are building `syscoind` for your own use.\n \n-bitcoind/bitcoin-cli binaries are not included in the Bitcoin-Qt.app bundle.\n+syscoind/syscoin-cli binaries are not included in the Syscoin-Qt.app bundle.\n \n-If you are building `bitcoind` or `Bitcoin Core` for others, your build machine should be set up\n+If you are building `syscoind` or `Syscoin Core` for others, your build machine should be set up\n as follows for maximum compatibility:\n \n All dependencies should be compiled with these flags:\n@@ -90,30 +90,30 @@ All dependencies should be compiled with these flags:\n  -arch x86_64\n  -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n \n-Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Bitcoin Core\n+Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Syscoin Core\n bundle is packaged and signed to create the .dmg disk image that is distributed.\n \n Running\n -------\n \n-It's now available at `./bitcoind`, provided that you are still in the `src`\n+It's now available at `./syscoind`, provided that you are still in the `src`\n directory. We have to first create the RPC configuration file, though.\n \n-Run `./bitcoind` to get the filename where it should be put, or just try these\n+Run `./syscoind` to get the filename where it should be put, or just try these\n commands:\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    echo -e \"rpcuser=syscoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Syscoin/syscoin.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Syscoin/syscoin.conf\"\n \n The next time you run it, it will start downloading the blockchain, but it won't\n output anything while it's doing this. This process may take several hours;\n you can monitor its process by looking at the debug.log file, like this:\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/Syscoin/debug.log\n \n Other commands:\n -------\n \n-    ./bitcoind -daemon # to start the bitcoin daemon.\n-    ./bitcoin-cli --help  # for a list of command-line options.\n-    ./bitcoin-cli help    # When the daemon is running, to get a list of RPC commands\n+    ./syscoind -daemon # to start the syscoin daemon.\n+    ./syscoin-cli --help  # for a list of command-line options.\n+    ./syscoin-cli help    # When the daemon is running, to get a list of RPC commands"
      },
      {
        "sha": "aa2ab6ffd765e22d8ab19f6b5fd8c46a5d3e8a14",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin Core in Unix.\n+Some notes on how to build Syscoin Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile bitcoin and the dependencies,\n+Always use absolute paths to configure and compile syscoin and the dependencies,\n for example, when specifying the the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build syscoin-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -54,7 +54,7 @@ System requirements\n --------------------\n \n C++ compilers are memory-hungry. It is recommended to have at least 1 GB of\n-memory available when compiling Bitcoin Core. With 512MB of memory or less\n+memory available when compiling Syscoin Core. With 512MB of memory or less\n compilation will take much longer due to swap thrashing.\n \n Dependency Build Instructions: Ubuntu & Debian\n@@ -73,10 +73,10 @@ If that doesn't work, you can install all boost development packages with:\n \n     sudo apt-get install libboost-all-dev\n \n-BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~syscoin/+archive/syscoin).\n You can add the repository and install using the following commands:\n \n-    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo add-apt-repository ppa:syscoin/syscoin\n     sudo apt-get update\n     sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n@@ -85,7 +85,7 @@ BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distri\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+See the section \"Disable-wallet mode\" to build Syscoin Core without wallet.\n \n Optional:\n \n@@ -98,7 +98,7 @@ ZMQ dependencies:\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n-If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+If you want to build Syscoin-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n@@ -115,12 +115,12 @@ libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n \n-Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+Once these are installed, they will be found by configure and a syscoin-qt executable will be\n built by default.\n \n Notes\n -----\n-The release is built with GCC and then \"strip bitcoind\" to strip the debug\n+The release is built with GCC and then \"strip syscoind\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n \n@@ -141,10 +141,10 @@ Berkeley DB\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n ```bash\n-BITCOIN_ROOT=$(pwd)\n+SYSCOIN_ROOT=$(pwd)\n \n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the syscoin directory\n+BDB_PREFIX=\"${SYSCOIN_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -159,8 +159,8 @@ cd db-4.8.30.NC/build_unix/\n ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n make install\n \n-# Configure Bitcoin Core to use our own-built instance of BDB\n-cd $BITCOIN_ROOT\n+# Configure Syscoin Core to use our own-built instance of BDB\n+cd $SYSCOIN_ROOT\n ./autogen.sh\n ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n@@ -178,7 +178,7 @@ If you need to build Boost yourself:\n \n Security\n --------\n-To help make your bitcoin installation more secure by making certain attacks impossible to\n+To help make your syscoin installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n@@ -202,7 +202,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+    \tscanelf -e ./syscoin\n \n     The output should contain:\n \n@@ -211,13 +211,13 @@ Hardening enables the following features:\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, bitcoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, syscoin should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    `scanelf -e ./bitcoin`\n+    `scanelf -e ./syscoin`\n \n     the output should contain:\n \tSTK/REL/PTL\n@@ -227,7 +227,7 @@ Hardening enables the following features:\n \n Disable-wallet mode\n --------------------\n-When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+When the intention is to run only a P2P node without a wallet, syscoin may be compiled in\n disable-wallet mode with:\n \n     ./configure --disable-wallet"
      },
      {
        "sha": "1ff5d168931e9ade1e98c81785bd02924e6e7c53",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n WINDOWS BUILD NOTES\n ====================\n \n-Some notes on how to build Bitcoin Core for Windows.\n+Some notes on how to build Syscoin Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n Windows. This is also used to build the release binaries."
      },
      {
        "sha": "e2e4c94f58595893dac59cac9e3dc83b128f2c25",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -110,7 +110,7 @@ to see it.\n \n **testnet and regtest modes**\n \n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+Run with the -testnet option to run with \"play syscoins\" on the test network, if you\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n@@ -119,7 +119,7 @@ that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n \n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+Syscoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n are held, and adds warnings to the debug.log file if inconsistencies are detected.\n@@ -168,7 +168,7 @@ Threads\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+- SyscoinMiner : Generates syscoins (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n \n@@ -178,7 +178,7 @@ Ignoring IDE/editor files\n In closed-source environments in which everyone uses the same IDE it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n-However, in open source software such as Bitcoin Core, where everyone uses\n+However, in open source software such as Syscoin Core, where everyone uses\n their own editors/IDE/tools, it is less common. Only you know what files your\n editor produces and this may change from version to version. The canonical way\n to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n@@ -208,9 +208,9 @@ Development guidelines\n ============================\n \n A few non-style-related recommendations for developers, as well as points to\n-pay attention to for reviewers of Bitcoin Core code.\n+pay attention to for reviewers of Syscoin Core code.\n \n-General Bitcoin Core\n+General Syscoin Core\n ----------------------\n \n - New features should be exposed on RPC first, then can be made available in the GUI\n@@ -321,7 +321,7 @@ Strings and formatting\n \n - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Syscoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n \n Threads and synchronization\n ----------------------------"
      },
      {
        "sha": "607320ce0c302ecb635406d3aa4c9822873030e7",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n Expectations for DNS Seed operators\n ====================================\n \n-Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+Syscoin Core attempts to minimize the level of trust in DNS seeds,\n but DNS seeds still pose a small amount of risk for the network.\n As such, DNS seeds must be run by entities which have some minimum\n-level of trust within the Bitcoin community.\n+level of trust within the Syscoin community.\n \n-Other implementations of Bitcoin software may also use the same\n+Other implementations of Syscoin software may also use the same\n seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n@@ -16,7 +16,7 @@ and not sell or transfer control of the DNS seed. Any hosting services\n contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n-functioning Bitcoin nodes from the public network to the best of the\n+functioning Syscoin nodes from the public network to the best of the\n operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n@@ -26,7 +26,7 @@ urgent technical necessity and disclosed.\n 3. The results may not be served with a DNS TTL of less than one minute.\n \n 4. Any logging of DNS queries should be only that which is necessary\n-for the operation of the service or urgent health of the Bitcoin\n+for the operation of the service or urgent health of the Syscoin\n network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n@@ -42,13 +42,13 @@ details of their operating practices.\n related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n-discontinue providing services and contact the active Bitcoin\n+discontinue providing services and contact the active Syscoin\n Core development team as well as posting on\n-[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n+[syscoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/syscoin-dev).\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance.\n \n See also\n ----------\n-- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed.\n+- [syscoin-seeder](https://github.com/sipa/syscoin-seeder) is a reference implementation of a DNS seed."
      },
      {
        "sha": "032722892275b61a1f1c7a6c7a1fbaf5be0a6c49",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,14 +1,14 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n-* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n-* bitcoind.pid: stores the process id of bitcoind while running\n+* syscoin.conf: contains configuration settings for syscoind or syscoin-qt\n+* syscoind.pid: stores the process id of syscoind while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n * db.log: wallet database log file\n-* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* debug.log: contains debug information and general logging generated by syscoind or syscoin-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * wallet.dat: personal wallet (BDB) with keys and transactions"
      },
      {
        "sha": "9b5538d7cfe2edd02a9e6ccbfab918a9e05c1468",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,17 +1,17 @@\n Gitian building\n ================\n \n-*Setup instructions for a Gitian build of Bitcoin using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Syscoin using a Debian VM or physical system.*\n \n-Gitian is the deterministic build process that is used to build the Bitcoin\n+Gitian is the deterministic build process that is used to build the Syscoin\n Core executables. It provides a way to be reasonably sure that the\n executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n-to bitcoin.org.\n+to syscoin.org.\n \n More independent Gitian builders are needed, which is why this guide exists.\n It is preferred you follow these steps yourself instead of using someone else's\n@@ -26,7 +26,7 @@ Table of Contents\n - [Installing Gitian](#installing-gitian)\n - [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin](#building-bitcoin)\n+- [Building Syscoin](#building-syscoin)\n - [Building an alternative repository](#building-an-alternative-repository)\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n@@ -41,7 +41,7 @@ Debian Linux was chosen as the host distribution because it has a lightweight in\n Any kind of virtualization can be used, for example:\n - [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n-- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-syscoin-host/README.md).\n \n You can also install Gitian on actual hardware instead of using virtualization.\n \n@@ -300,11 +300,11 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and Gitian.\n+Clone the git repositories for syscoin and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/bitcoin/bitcoin\n+git clone https://github.com/syscoin/syscoin\n ```\n \n Setting up the Gitian image\n@@ -331,16 +331,16 @@ Getting and building the inputs\n --------------------------------\n \n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n-in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n+in the syscoin repository under 'Fetch and build inputs' to install sources which require\n manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n and offline git repositories' which will fetch the remaining files required for building\n offline.\n \n-Building Bitcoin\n+Building Syscoin\n ----------------\n \n-To build Bitcoin (for Linux, OS X and Windows) just follow the steps under 'perform\n-Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n+To build Syscoin (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the syscoin repository.\n \n This may take some time as it will build all the dependencies needed for each descriptor.\n These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n@@ -354,12 +354,12 @@ tail -f var/build.log\n \n Output from `gbuild` will look something like\n \n-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/syscoin/.git/\n     remote: Counting objects: 57959, done.\n     remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n     Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n     Resolving deltas: 100% (41590/41590), done.\n-    From https://github.com/bitcoin/bitcoin\n+    From https://github.com/syscoin/syscoin\n     ... (new tags, new branch etc)\n     --- Building for precise amd64 ---\n     Stopping target if it is up\n@@ -385,18 +385,18 @@ and inputs.\n \n For example:\n ```bash\n-URL=https://github.com/laanwj/bitcoin.git\n+URL=https://github.com/laanwj/syscoin.git\n COMMIT=2014_03_windows_unicode_path\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+./bin/gbuild --commit syscoin=${COMMIT} --url syscoin=${URL} ../syscoin/contrib/gitian-descriptors/gitian-linux.yml\n+./bin/gbuild --commit syscoin=${COMMIT} --url syscoin=${URL} ../syscoin/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit syscoin=${COMMIT} --url syscoin=${URL} ../syscoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n Building fully offline\n -----------------------\n \n For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n-and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+and the syscoin git repository with the desired tag must both be available locally, and then gbuild must be\n told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n manually disabling gitian-builder's use of apt-get to update the VM build environment.\n \n@@ -415,7 +415,7 @@ cd /path/to/gitian-builder\n LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get update\n LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \\\n   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../syscoin/contrib/gitian-descriptors/*|sort|uniq )\n LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub\n LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n ```\n@@ -435,12 +435,12 @@ Then when building, override the remote URLs that gbuild would otherwise pull fr\n ```bash\n \n cd /some/root/path/\n-git clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+git clone https://github.com/syscoin/syscoin-detached-sigs.git\n \n-BTCPATH=/some/root/path/bitcoin.git\n-SIGPATH=/some/root/path/bitcoin-detached-sigs.git\n+SYSPATH=/some/root/path/syscoin.git\n+SIGPATH=/some/root/path/syscoin-detached-sigs.git\n \n-./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+./bin/gbuild --url syscoin=${SYSPATH},signature=${SIGPATH} ../syscoin/contrib/gitian-descriptors/gitian-win-signer.yml\n ```\n \n Signing externally\n@@ -455,9 +455,9 @@ When you execute `gsign` you will get an error from GPG, which can be ignored. C\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/syscoin-linux-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/syscoin-win-build.assert\n+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/syscoin-osx-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n@@ -467,5 +467,5 @@ Uploading signatures\n ---------------------\n \n After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if that's not possible create a pull\n+[syscoin/gitian.sigs](https://github.com/syscoin/gitian.sigs/) repository, or if that's not possible create a pull\n request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them."
      },
      {
        "sha": "be445dd642ae88704933721e551c317891d99f13",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,50 +1,50 @@\n-Sample init scripts and service configuration for bitcoind\n+Sample init scripts and service configuration for syscoind\n ==========================================================\n \n Sample scripts and configuration files for systemd, Upstart and OpenRC\n can be found in the contrib/init folder.\n \n-    contrib/init/bitcoind.service:    systemd service unit configuration\n-    contrib/init/bitcoind.openrc:     OpenRC compatible SysV style init script\n-    contrib/init/bitcoind.openrcconf: OpenRC conf.d file\n-    contrib/init/bitcoind.conf:       Upstart service configuration file\n-    contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n+    contrib/init/syscoind.service:    systemd service unit configuration\n+    contrib/init/syscoind.openrc:     OpenRC compatible SysV style init script\n+    contrib/init/syscoind.openrcconf: OpenRC conf.d file\n+    contrib/init/syscoind.conf:       Upstart service configuration file\n+    contrib/init/syscoind.init:       CentOS compatible SysV style init script\n \n 1. Service User\n ---------------------------------\n \n-All three Linux startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"syscoin\" user\n and group.  They must be created before attempting to use these scripts.\n-The OS X configuration assumes bitcoind will be set up for the current user.\n+The OS X configuration assumes syscoind will be set up for the current user.\n \n 2. Configuration\n ---------------------------------\n \n-At a bare minimum, bitcoind requires that the rpcpassword setting be set\n+At a bare minimum, syscoind requires that the rpcpassword setting be set\n when running as a daemon.  If the configuration file does not exist or this\n-setting is not set, bitcoind will shutdown promptly after startup.\n+setting is not set, syscoind will shutdown promptly after startup.\n \n This password does not have to be remembered or typed as it is mostly used\n-as a fixed token that bitcoind and client programs read from the configuration\n+as a fixed token that syscoind and client programs read from the configuration\n file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+If syscoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n it will use a special cookie file for authentication. The cookie is generated with random\n content when the daemon starts, and deleted when it exits. Read access to this file\n controls who can access it through RPC.\n \n By default the cookie is stored in the data directory, but it's location can be overridden\n with the option '-rpccookiefile'.\n \n-This allows for running bitcoind without having to do any manual configuration.\n+This allows for running syscoind without having to do any manual configuration.\n \n `conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n relative to the data directory. `wallet` *only* supports relative paths.\n \n For an example configuration file that describes the configuration settings,\n-see `contrib/debian/examples/bitcoin.conf`.\n+see `contrib/debian/examples/syscoin.conf`.\n \n 3. Paths\n ---------------------------------\n@@ -53,24 +53,24 @@ see `contrib/debian/examples/bitcoin.conf`.\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`  \n-Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n-Data directory:      `/var/lib/bitcoind`  \n-PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/var/lib/bitcoind/bitcoind.pid` (systemd)  \n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n+Binary:              `/usr/bin/syscoind`  \n+Configuration file:  `/etc/syscoin/syscoin.conf`  \n+Data directory:      `/var/lib/syscoind`  \n+PID file:            `/var/run/syscoind/syscoind.pid` (OpenRC and Upstart) or `/var/lib/syscoind/syscoind.pid` (systemd)  \n+Lock file:           `/var/lock/subsys/syscoind` (CentOS)  \n \n The configuration file, PID directory (if applicable) and data directory\n-should all be owned by the bitcoin user and group.  It is advised for security\n+should all be owned by the syscoin user and group.  It is advised for security\n reasons to make the configuration file and data directory only readable by the\n-bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n+syscoin user and group.  Access to syscoin-cli and other syscoind rpc clients\n can then be controlled by group membership.\n \n 3b) Mac OS X\n \n-Binary:              `/usr/local/bin/bitcoind`  \n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`\n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+Binary:              `/usr/local/bin/syscoind`  \n+Configuration file:  `~/Library/Application Support/Syscoin/syscoin.conf`  \n+Data directory:      `~/Library/Application Support/Syscoin`\n+Lock file:           `~/Library/Application Support/Syscoin/.lock`\n \n 4. Installing Service Configuration\n -----------------------------------\n@@ -81,42 +81,42 @@ Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n `systemctl daemon-reload` in order to update running systemd configuration.\n \n-To test, run `systemctl start bitcoind` and to enable for system startup run\n-`systemctl enable bitcoind`\n+To test, run `systemctl start syscoind` and to enable for system startup run\n+`systemctl enable syscoind`\n \n 4b) OpenRC\n \n-Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n+Rename syscoind.openrc to syscoind and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n-`/etc/init.d/bitcoind start` and configure it to run on startup with\n-`rc-update add bitcoind`\n+`/etc/init.d/syscoind start` and configure it to run on startup with\n+`rc-update add syscoind`\n \n 4c) Upstart (for Debian/Ubuntu based distributions)\n \n-Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n+Drop syscoind.conf in /etc/init.  Test by running `service syscoind start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n 4d) CentOS\n \n-Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n+Copy syscoind.init to /etc/init.d/syscoind. Test by running `service syscoind start`.\n \n-Using this script, you can adjust the path and flags to the bitcoind program by\n-setting the BITCOIND and FLAGS environment variables in the file\n-/etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n+Using this script, you can adjust the path and flags to the syscoind program by\n+setting the SYSCOIND and FLAGS environment variables in the file\n+/etc/sysconfig/syscoind. You can also use the DAEMONOPTS environment variable here.\n \n 4e) Mac OS X\n \n-Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n-running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+Copy org.syscoin.syscoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.syscoin.syscoind.plist`.\n \n-This Launch Agent will cause bitcoind to start whenever the user logs in.\n+This Launch Agent will cause syscoind to start whenever the user logs in.\n \n-NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n-You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n-Launch Daemon with a dedicated bitcoin user.\n+NOTE: This approach is intended for those wanting to run syscoind as the current user.\n+You will need to modify org.syscoin.syscoind.plist if you intend to use it as a\n+Launch Daemon with a dedicated syscoin user.\n \n 5. Auto-respawn\n -----------------------------------"
      },
      {
        "sha": "2d01d08ab5577fb15b0383a5d8fbdfd78509c428",
        "filename": "doc/multiwallet-qt.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,40 +1,40 @@\n Multiwallet Qt Development and Integration Strategy\n ===================================================\n \n-In order to support loading of multiple wallets in bitcoin-qt, a few changes in the UI architecture will be needed.\n+In order to support loading of multiple wallets in syscoin-qt, a few changes in the UI architecture will be needed.\n Fortunately, only four of the files in the existing project are affected by this change.\n \n Two new classes have been implemented in two new .h/.cpp file pairs, with much of the functionality that was previously\n-implemented in the BitcoinGUI class moved over to these new classes.\n+implemented in the SyscoinGUI class moved over to these new classes.\n \n-The two existing files most affected, by far, are bitcoingui.h and bitcoingui.cpp, as the BitcoinGUI class will require\n+The two existing files most affected, by far, are syscoingui.h and syscoingui.cpp, as the SyscoinGUI class will require\n some major retrofitting.\n \n-Only requiring some minor changes is bitcoin.cpp.\n+Only requiring some minor changes is syscoin.cpp.\n \n-Finally, two new headers and source files will have to be added to bitcoin-qt.pro.\n+Finally, two new headers and source files will have to be added to syscoin-qt.pro.\n \n-Changes to class BitcoinGUI\n+Changes to class SyscoinGUI\n ---------------------------\n-The principal change to the BitcoinGUI class concerns the QStackedWidget instance called centralWidget.\n+The principal change to the SyscoinGUI class concerns the QStackedWidget instance called centralWidget.\n This widget owns five page views: overviewPage, transactionsPage, addressBookPage, receiveCoinsPage, and sendCoinsPage.\n \n A new class called *WalletView* inheriting from QStackedWidget has been written to handle all renderings and updates of\n these page views. In addition to owning these five page views, a WalletView also has a pointer to a WalletModel instance.\n This allows the construction of multiple WalletView objects, each rendering a distinct wallet.\n \n A second class called *WalletFrame* inheriting from QFrame has been written as a container for embedding all wallet-related\n-controls into BitcoinGUI. At present it contains the WalletView instances for the wallets and does little more than passing on messages\n-from BitcoinGUI to the currently selected WalletView. It is a WalletFrame instance\n-that takes the place of what used to be centralWidget in BitcoinGUI. The purpose of this class is to allow future\n-refinements of the wallet controls with minimal need for further modifications to BitcoinGUI, thus greatly simplifying\n+controls into SyscoinGUI. At present it contains the WalletView instances for the wallets and does little more than passing on messages\n+from SyscoinGUI to the currently selected WalletView. It is a WalletFrame instance\n+that takes the place of what used to be centralWidget in SyscoinGUI. The purpose of this class is to allow future\n+refinements of the wallet controls with minimal need for further modifications to SyscoinGUI, thus greatly simplifying\n merges while reducing the risk of breaking top-level stuff.\n \n-Changes to bitcoin.cpp\n+Changes to syscoin.cpp\n ----------------------\n-bitcoin.cpp is the entry point into bitcoin-qt, and as such, will require some minor modifications to provide hooks for\n+syscoin.cpp is the entry point into syscoin-qt, and as such, will require some minor modifications to provide hooks for\n multiple wallet support. Most importantly will be the way it instantiates WalletModels and passes them to the\n-singleton BitcoinGUI instance called window. Formerly, BitcoinGUI kept a pointer to a single instance of a WalletModel.\n+singleton SyscoinGUI instance called window. Formerly, SyscoinGUI kept a pointer to a single instance of a WalletModel.\n The initial change required is very simple: rather than calling `window.setWalletModel(&walletModel);` we perform the\n following two steps:\n "
      },
      {
        "sha": "f1bbc0fce9597f239aacb0a3a6cbd9332a045f73",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,7 +3,7 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+By default, syscoin-core allows up to 125 connections to different peers, 8 of\n which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n@@ -34,5 +34,5 @@ blocks and transactions to fewer nodes.\n ## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n Reducing the maximum connected nodes to a minimum could be desirable if traffic\n-limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+limits are tiny. Keep in mind that syscoin's trustless model works best if you are\n connected to a handful of nodes."
      },
      {
        "sha": "a73d5e76bb8cfaac20ded5e1401bb4c56a39e7af",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "modified",
        "additions": 46,
        "deletions": 46,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.0 is now available from:\n+Syscoin Core version 0.10.0 is now available from:\n \n-  https://bitcoin.org/bin/0.10.0/\n+  https://syscoin.org/bin/0.10.0/\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Downgrading warning\n ---------------------\n \n Because release 0.10.0 makes use of headers-first synchronization and parallel\n block download (see further), the block files and databases are not\n-backwards-compatible with older versions of Bitcoin Core or other software:\n+backwards-compatible with older versions of Syscoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -50,7 +50,7 @@ Notable changes\n Faster synchronization\n ----------------------\n \n-Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n+Syscoin Core now uses 'headers-first synchronization'. This means that we first\n ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n validate those. In a second stage, when the headers have been discovered, we\n download the blocks. However, as we already know about the whole chain in\n@@ -172,7 +172,7 @@ improved by making the signatures constant time and deterministic.\n \n This change is a result of switching signing to use libsecp256k1\n instead of OpenSSL. Libsecp256k1 is a cryptographic library\n-optimized for the curve Bitcoin uses which was created by Bitcoin\n+optimized for the curve Syscoin uses which was created by Syscoin\n Core developer Pieter Wuille.\n \n There exist attacks[1] against most ECC implementations where an\n@@ -187,7 +187,7 @@ long time, but this functionality has still not made its\n way into a released version of OpenSSL. Libsecp256k1 achieves\n significantly stronger protection: As far as we're aware this is\n the only deployed implementation of constant time signing for\n-the curve Bitcoin uses and we have reason to believe that\n+the curve Syscoin uses and we have reason to believe that\n libsecp256k1 is better tested and more thoroughly reviewed\n than the implementation in OpenSSL.\n \n@@ -222,21 +222,21 @@ addresses need to added to the wallet before the payment, though.\n Consensus library\n -----------------\n \n-Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n+Starting from 0.10.0, the Syscoin Core distribution includes a consensus library.\n \n The purpose of this library is to make the verification functionality that is\n-critical to Bitcoin's consensus available to other applications, e.g. to language\n-bindings such as [python-bitcoinlib](https://pypi.python.org/pypi/python-bitcoinlib) or\n+critical to Syscoin's consensus available to other applications, e.g. to language\n+bindings such as [python-syscoinlib](https://pypi.python.org/pypi/python-syscoinlib) or\n alternative node implementations.\n \n-This library is called `libbitcoinconsensus.so` (or, `.dll` for Windows).\n-Its interface is defined in the C header [bitcoinconsensus.h](https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h).\n+This library is called `libsyscoinconsensus.so` (or, `.dll` for Windows).\n+Its interface is defined in the C header [syscoinconsensus.h](https://github.com/syscoin/syscoin/blob/0.10/src/script/syscoinconsensus.h).\n \n In its initial version the API includes two functions:\n \n-- `bitcoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n+- `syscoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n correctly spends the passed scriptPubKey under additional constraints indicated by flags\n-- `bitcoinconsensus_version` returns the API version, currently at an experimental `0`\n+- `syscoinconsensus_version` returns the API version, currently at an experimental `0`\n \n The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface\n for existing methods should remain stable.\n@@ -247,42 +247,42 @@ Standard script rules relaxed for P2SH addresses\n The IsStandard() rules have been almost completely removed for P2SH\n redemption scripts, allowing applications to make use of any valid\n script type, such as \"n-of-m OR y\", hash-locked oracle addresses, etc.\n-While the Bitcoin protocol has always supported these types of script,\n+While the Syscoin protocol has always supported these types of script,\n actually using them on mainnet has been previously inconvenient as\n-standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n+standard Syscoin Core nodes wouldn't relay them to miners, nor would\n most miners include them in blocks they mined.\n \n-bitcoin-tx\n+syscoin-tx\n ----------\n \n-It has been observed that many of the RPC functions offered by bitcoind are\n-\"pure functions\", and operate independently of the bitcoind wallet. This\n+It has been observed that many of the RPC functions offered by syscoind are\n+\"pure functions\", and operate independently of the syscoind wallet. This\n included many of the RPC \"raw transaction\" API functions, such as\n createrawtransaction.\n \n-bitcoin-tx is a newly introduced command line utility designed to enable easy\n-manipulation of bitcoin transactions. A summary of its operation may be\n-obtained via \"bitcoin-tx --help\" Transactions may be created or signed in a\n+syscoin-tx is a newly introduced command line utility designed to enable easy\n+manipulation of syscoin transactions. A summary of its operation may be\n+obtained via \"syscoin-tx --help\" Transactions may be created or signed in a\n manner similar to the RPC raw tx API. Transactions may be updated, deleting\n inputs or outputs, or appending new inputs and outputs. Custom scripts may be\n-easily composed using a simple text notation, borrowed from the bitcoin test\n+easily composed using a simple text notation, borrowed from the syscoin test\n suite.\n \n This tool may be used for experimenting with new transaction types, signing\n multi-party transactions, and many other uses. Long term, the goal is to\n deprecate and remove \"pure function\" RPC API calls, as those do not require a\n server round-trip to execute.\n \n-Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n+Other utilities \"syscoin-key\" and \"syscoin-script\" have been proposed, making\n key and script operations easily accessible via command line.\n \n Mining and relay policy enhancements\n ------------------------------------\n \n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+Syscoin Core's block templates are now for version 3 blocks only, and any mining\n software relying on its `getblocktemplate` must be updated in parallel to use\n libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+If you are solo mining, this will affect you the moment you upgrade Syscoin\n Core, which must be done prior to BIP66 achieving its 951/1001 status.\n If you are mining with the stratum mining protocol: this does not affect you.\n If you are mining with the getblocktemplate protocol to a pool: this will affect\n@@ -292,10 +292,10 @@ achieving its 951/1001 status.\n The `prioritisetransaction` RPC method has been added to enable miners to\n manipulate the priority of transactions on an individual basis.\n \n-Bitcoin Core now supports BIP 22 long polling, so mining software can be\n+Syscoin Core now supports BIP 22 long polling, so mining software can be\n notified immediately of new templates rather than having to poll periodically.\n \n-Support for BIP 23 block proposals is now available in Bitcoin Core's\n+Support for BIP 23 block proposals is now available in Syscoin Core's\n `getblocktemplate` method. This enables miners to check the basic validity of\n their next block before expending work on it, reducing risks of accidental\n hardforks or mining invalid blocks.\n@@ -313,9 +313,9 @@ AllowFreeThreshold(), in which case they are relayed subject to the rate limiter\n BIP 66: strict DER encoding for signatures\n ------------------------------------------\n \n-Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n+Syscoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n consensus rule, which prohibits non-DER signatures. Such transactions have been\n-non-standard since Bitcoin v0.8.0 (released in February 2013), but were\n+non-standard since Syscoin v0.8.0 (released in February 2013), but were\n technically still permitted inside blocks.\n \n This change breaks the dependency on OpenSSL's signature parsing, and is\n@@ -337,10 +337,10 @@ Detailed release notes follow. This overview includes changes that affect extern\n behavior, not code moves, refactors or string updates.\n \n RPC:\n-- `f923c07` Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost\n+- `f923c07` Support IPv6 lookup in syscoin-cli even when IPv6 only bound on localhost\n - `b641c9c` Fix addnode \"onetry\": Connect with OpenNetworkConnection\n - `171ca77` estimatefee / estimatepriority RPC methods\n-- `b750cf1` Remove cli functionality from bitcoind\n+- `b750cf1` Remove cli functionality from syscoind\n - `f6984e8` Add \"chain\" to getmininginfo, improve help in getblockchaininfo\n - `99ddc6c` Add nLocalServices info to RPC getinfo\n - `cf0c47b` Remove getwork() RPC call\n@@ -391,7 +391,7 @@ Command-line options:\n - `4278b1d` Clarify error message when invalid -rpcallowip\n - `6b407e4` -datadir is now allowed in config files\n - `bdd5b58` Add option `-sysperms` to disable 077 umask (create new files with system default umask)\n-- `cbe39a3` Add \"bitcoin-tx\" command line utility and supporting modules\n+- `cbe39a3` Add \"syscoin-tx\" command line utility and supporting modules\n - `dbca89b` Trigger -alertnotify if network is upgrading without you\n - `ad96e7c` Make -reindex cope with out-of-order blocks\n - `16d5194` Skip reindexed blocks individually\n@@ -465,7 +465,7 @@ P2P protocol and network code:\n - `35e408f` Regard connection failures as attempt for addrman\n - `a3a7317` Introduce 10 minute block download timeout\n - `3022e7d` Require sufficent priority for relay of free transactions\n-- `58fda4d` Update seed IPs, based on bitcoin.sipa.be crawler data\n+- `58fda4d` Update seed IPs, based on syscoin.sipa.be crawler data\n - `18021d0` Remove bitnodes.io from dnsseeds.\n \n Validation:\n@@ -492,13 +492,13 @@ Build system:\n - `9ce0774` build: Fix windows configure when using --with-qt-libdir\n - `ea96475` build: Add mention of --disable-wallet to bdb48 error messages\n - `1dec09b` depends: add shared dependency builder\n-- `c101c76` build: Add --with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n+- `c101c76` build: Add --with-utils (syscoin-cli and syscoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n - `e432a5f` build: add option for reducing exports (v2)\n - `6134b43` Fixing condition 'sabotaging' MSVC build\n - `af0bd5e` osx: fix signing to make Gatekeeper happy (again)\n - `a7d1f03` build: fix dynamic boost check when --with-boost= is used\n - `d5fd094` build: fix qt test build when libprotobuf is in a non-standard path\n-- `2cf5f16` Add libbitcoinconsensus library\n+- `2cf5f16` Add libsyscoinconsensus library\n - `914868a` build: add a deterministic dmg signer \n - `2d375fe` depends: bump openssl to 1.0.1k\n - `b7a4ecc` Build: Only check for boost when building code that requires it\n@@ -522,7 +522,7 @@ Wallet:\n GUI:\n - `c21c74b` osx: Fix missing dock menu with qt5\n - `b90711c` Fix Transaction details shows wrong To:\n-- `516053c` Make links in 'About Bitcoin Core' clickable\n+- `516053c` Make links in 'About Syscoin Core' clickable\n - `bdc83e8` Ensure payment request network matches client network\n - `65f78a1` Add GUI view of peer information\n - `06a91d9` VerifyDB progress reporting\n@@ -539,7 +539,7 @@ GUI:\n - `7007402` Implement SI-style (thin space) thoudands separator\n - `91cce17` Use fixed-point arithmetic in amount spinbox\n - `bdba2dd` Remove an obscure option no-one cares about\n-- `bd0aa10` Replace the temporary file hack currently used to change Bitcoin-Qt's dock icon (OS X) with a buffer-based solution\n+- `bd0aa10` Replace the temporary file hack currently used to change Syscoin-Qt's dock icon (OS X) with a buffer-based solution\n - `94e1b9e` Re-work overviewpage UI\n - `8bfdc9a` Better looking trayicon\n - `b197bf3` disable tray interactions when client model set to 0\n@@ -585,8 +585,8 @@ Tests:\n - `4cac5db` script tests: value with trailing 0x00 is true\n - `89101c6` script test: test case for 5-byte bools\n - `d2d9dc0` script tests: add tests for CHECKMULTISIG limits\n-- `d789386` Add \"it works\" test for bitcoin-tx\n-- `df4d61e` Add bitcoin-tx tests\n+- `d789386` Add \"it works\" test for syscoin-tx\n+- `df4d61e` Add syscoin-tx tests\n - `aa41ac2` Test IsPushOnly() with invalid push\n - `6022b5d` Make `script_{valid,invalid}.json` validation flags configurable\n - `8138cbe` Add automatic script test generation, and actual checksig tests\n@@ -598,7 +598,7 @@ Tests:\n - `2b62e17` Clearly separate PUSHDATA and numeric argument MINIMALDATA tests\n - `16d78bd` Add valid invert of invalid every numeric opcode tests\n - `f635269` tests: enable alertnotify test for Windows\n-- `7a41614` tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n+- `7a41614` tests: allow rpc-tests to get filenames for syscoind and syscoin-cli from the environment\n - `5122ea7` tests: fix forknotify.py on windows\n - `fa7f8cd` tests: remove old pull-tester scripts\n - `7667850` tests: replace the old (unused since Travis) tests with new rpc test scripts\n@@ -624,7 +624,7 @@ Tests:\n Miscellaneous:\n - `122549f` Fix incorrect checkpoint data for testnet3\n - `5bd02cf` Log used config file to debug.log on startup\n-- `68ba85f` Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments\n+- `68ba85f` Updated Debian example syscoin.conf with config from wiki + removed some cruft and updated comments\n - `e5ee8f0` Remove -beta suffix\n - `38405ac` Add comment regarding experimental-use service bits\n - `be873f6` Issue warning if collecting RandSeed data failed\n@@ -635,7 +635,7 @@ Miscellaneous:\n - `cd01a5e` Enable paranoid corruption checks in LevelDB >= 1.16\n - `9365937` Add comment about never updating nTimeOffset past 199 samples\n - `403c1bf` contrib: remove getwork-based pyminer (as getwork API call has been removed)\n-- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate bitcoind\n+- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate syscoind\n - `0a0878d` doc: Add new DNSseed policy\n - `2887bff` Update coding style and add .clang-format\n - `5cbda4f` Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope\n@@ -758,5 +758,5 @@ Thanks to everyone who contributed to this release:\n - Yoichi Hirai\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/).\n "
      },
      {
        "sha": "47d8c224e25292d21d133a4b6db6ab7052dd9b7f",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.1 is now available from:\n+Syscoin Core version 0.10.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.1/>\n+  <https://syscoin.org/bin/syscoin-core-0.10.1/>\n \n This is a new minor version release, bringing bug fixes and translation \n updates. It is recommended to upgrade to this version.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/syscoin/syscoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Syscoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -48,7 +48,7 @@ Notable changes\n \n This is a minor release and hence there are no notable changes.\n For the notable changes in 0.10, refer to the release notes for the\n-0.10.0 release at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+0.10.0 release at https://github.com/syscoin/syscoin/blob/v0.10.0/doc/release-notes.md\n \n 0.10.1 Change log\n =================\n@@ -140,4 +140,4 @@ And all those who contributed additional code review and/or security research:\n - Sergio Demian Lerner\n - Sharon Goldberg\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/)."
      },
      {
        "sha": "a8d1e7c74984e9e78897b295cad1afe604fb15a0",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.2 is now available from:\n+Syscoin Core version 0.10.2 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.2/>\n+  <https://syscoin.org/bin/syscoin-core-0.10.2/>\n \n This is a new minor version release, bringing minor bug fixes and translation \n updates. It is recommended to upgrade to this version.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/syscoin/syscoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Syscoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -47,12 +47,12 @@ Notable changes\n ===============\n \n This fixes a serious problem on Windows with data directories that have non-ASCII\n-characters (https://github.com/bitcoin/bitcoin/issues/6078).\n+characters (https://github.com/syscoin/syscoin/issues/6078).\n \n For other platforms there are no notable changes.\n \n For the notable changes in 0.10, refer to the release notes\n-at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+at https://github.com/syscoin/syscoin/blob/v0.10.0/doc/release-notes.md\n \n 0.10.2 Change log\n =================\n@@ -83,4 +83,4 @@ And all those who contributed additional code review and/or security research:\n - Pieter Wuille\n - vayvanne\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/)."
      },
      {
        "sha": "eb66ff5c8992e139bf6fd8609560258e111beeb4",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.3 is now available from:\n+Syscoin Core version 0.10.3 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n+  <https://syscoin.org/bin/syscoin-core-0.10.3/>\n \n This is a new minor version release, bringing security fixes and translation \n updates. It is recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/syscoin/syscoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Syscoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -60,7 +60,7 @@ using distribution provided packages.\n Additionally, upnp has been disabled by default. This may result in a lower\n number of reachable nodes on IPv4, however this prevents future libupnpc\n vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n+(see https://github.com/syscoin/syscoin/pull/6795).\n \n Test for LowS signatures before relaying\n -----------------------------------------\n@@ -75,26 +75,26 @@ for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n it will block most transactions made by sufficiently out of date software.\n \n Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n+one was randomly violated by all deployed syscoin software prior to\n its discovery. So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted. Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n \n-Bitcoin Core has produced compatible signatures since a28fb70e in\n+Syscoin Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n+in March 2014; Syscoinj has done so for a similar span of time.\n+Syscoinjs and electrum have been more recently updated.\n \n This does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n \n-[1] On the Malleability of Bitcoin Transactions\n+[1] On the Malleability of Syscoin Transactions\n Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+http://fc15.ifca.ai/preproceedings/syscoin/paper_9.pdf\n \n Minimum relay fee default increase\n -----------------------------------\n@@ -107,7 +107,7 @@ outrageous memory usage on nodes due to the mempool ballooning. This is a\n temporary measure, bridging the time until a dynamic method for determining\n this fee is merged (which will be in 0.12).\n \n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n+(see https://github.com/syscoin/syscoin/pull/6793, as well as the 0.11.0\n release notes, in which this value was suggested)\n \n 0.10.3 Change log\n@@ -162,4 +162,4 @@ And all those who contributed additional code review and/or security research:\n - timothy on IRC for reporting the issue\n - Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/)."
      },
      {
        "sha": "50df2c439a3234a6fc69618b0885605054e03694",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.11.0 is now available from:\n+Syscoin Core version 0.11.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n+  <https://syscoin.org/bin/syscoin-core-0.11.0/>\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/syscoin/syscoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Syscoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -58,7 +58,7 @@ possible to change a few configuration options to work around this. The growth\n of the mempool can be monitored with the RPC command `getmempoolinfo`.\n \n One is to increase the minimum transaction relay fee `minrelaytxfee`, which\n-defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be\n+defaults to 0.00001. This will cause transactions with fewer SYS/kB fee to be\n rejected, and thus fewer transactions entering the mempool.\n \n The other is to restrict the relaying of free transactions with\n@@ -67,7 +67,7 @@ free transactions (with enough priority) will be accepted. It defaults to 15.\n Reducing this number reduces the speed at which the mempool can grow due\n to free transactions.\n \n-For example, add the following to `bitcoin.conf`:\n+For example, add the following to `syscoin.conf`:\n \n     minrelaytxfee=0.00005 \n     limitfreerelay=5\n@@ -82,11 +82,11 @@ Block file pruning\n \n This release supports running a fully validating node without maintaining a copy \n of the raw block and undo data on disk. To recap, there are four types of data \n-related to the blockchain in the bitcoin system: the raw blocks as received over \n+related to the blockchain in the syscoin system: the raw blocks as received over \n the network (blk???.dat), the undo data (rev???.dat), the block index and the \n UTXO set (both LevelDB databases). The databases are built from the raw data.\n \n-Block pruning allows Bitcoin Core to delete the raw block and undo data once \n+Block pruning allows Syscoin Core to delete the raw block and undo data once \n it's been validated and used to build the databases. At that point, the raw data \n is used only to relay blocks to other nodes, to handle reorganizations, to look \n up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n@@ -95,7 +95,7 @@ all blocks in the blockchain.\n \n The user specifies how much space to allot for block & undo files. The minimum \n allowed is 550MB. Note that this is in addition to whatever is required for the \n-block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n+block index and UTXO databases. The minimum was chosen so that Syscoin Core will \n be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n minutes per block). In rare instances it is possible that the amount of space \n used will exceed the pruning target in order to keep the required last 288 \n@@ -192,7 +192,7 @@ transaction (re)broadcast:\n One such application is selective Tor usage, where the node runs on the normal\n internet but transactions are broadcasted over Tor.\n \n-For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n+For an example script see [syscoin-submittx](https://github.com/laanwj/syscoin-submittx).\n \n Privacy: Stream isolation for Tor\n ----------------------------------\n@@ -297,7 +297,7 @@ git merge commit are mentioned.\n \n ### Build system\n - #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n-- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n+- #5334 `cf87536` libsyscoinconsensus: Add pkg-config support\n - #5514 `ed11d53` Fix 'make distcheck'\n - #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n - #5582 `e8a6639` Osx toolchain update\n@@ -309,7 +309,7 @@ git merge commit are mentioned.\n - #5149 `c7abfa5` Add script to verify all merge commits are signed\n - #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n - #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n-- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n+- #6269 `95aca44` gitian: Use the new syscoin-detached-sigs git repo for OSX signatures\n - #6285 `ef1d506` Fix scheduler build with some boost versions.\n - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n - #6303 `b711599` gitian: add a gitian-win-signer descriptor\n@@ -346,8 +346,8 @@ git merge commit are mentioned.\n - #5626 `ab0d798` Fix icon sizes and column width\n - #5683 `c7b22aa` add new osx dmg background picture\n - #5620 `7823598` Payment request expiration bug fix\n-- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n-- #5753 `0f44672` Add bitcoin logo to about screen\n+- #5729 `9c4a5a5` Allow unit changes for read-only SyscoinAmountField\n+- #5753 `0f44672` Add syscoin logo to about screen\n - #5629 `a956586` Prevent amount overflow problem with payment requests\n - #5830 `215475a` Don't save geometry for options and about/help window\n - #5793 `d26f0b2` Honor current network when creating autostart link\n@@ -392,21 +392,21 @@ git merge commit are mentioned.\n - #5366 `47a79bb` No longer check osx compatibility in RenameThread\n - #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n - #5708 `8b298ca` Add list of implemented BIPs\n-- #5809 `46bfbe7` Add bitcoin-cli man page\n+- #5809 `46bfbe7` Add syscoin-cli man page\n - #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n - #5749 `d734d87` Help messages correctly formatted (79 chars)\n - #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n-- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n+- #5849 `41259ca` contrib/init/syscoind.openrc: Compatibility with previous OpenRC init script variables\n - #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n - #5965 `7c6bfb1` Add git-subtree-check.sh script\n - #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n - #6064 `b46e7c2` Several changes to mruset\n - #6104 `3e2559c` Show an init message while activating best chain\n - #6125 `351f73e` Clean up parsing of bool command line args\n - #5964 `b4c219b` Lightweight task scheduler\n-- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n+- #6116 `30dc3c1` [OSX] rename Syscoin-Qt.app to Syscoin-Core.app\n - #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n-- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n+- #6098 `7708fcd` Update Windows resource files (and add one for syscoin-tx)\n - #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n - #6186 `182686c` Fix two problems in CSubnet parsing\n - #6174 `df992b9` doc: add translation strings policy\n@@ -427,7 +427,7 @@ Thanks to everyone who directly contributed to this release:\n - azeteki\n - Ben Holden-Crowther\n - bikinibabe\n-- BitcoinPRReadingGroup\n+- SyscoinPRReadingGroup\n - Blake Jakopovic\n - BtcDrak\n - charlescharles\n@@ -501,5 +501,5 @@ And all those who contributed additional code review and/or security research:\n \n - Sergio Demian Lerner\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/).\n "
      },
      {
        "sha": "801c962cdf56790816969b8a4f7e0e4afff17dad",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.11.1 is now available from:\n+Syscoin Core version 0.11.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n+  <https://syscoin.org/bin/syscoin-core-0.11.1/>\n \n This is a new minor version release, bringing security fixes. It is recommended\n to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/syscoin/syscoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Syscoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -61,7 +61,7 @@ using distribution provided packages.\n Additionally, upnp has been disabled by default. This may result in a lower\n number of reachable nodes on IPv4, however this prevents future libupnpc\n vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n+(see https://github.com/syscoin/syscoin/pull/6795).\n \n Test for LowS signatures before relaying\n -----------------------------------------\n@@ -76,26 +76,26 @@ for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n it will block most transactions made by sufficiently out of date software.\n \n Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n+one was randomly violated by all deployed syscoin software prior to\n its discovery. So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted. Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n \n-Bitcoin Core has produced compatible signatures since a28fb70e in\n+Syscoin Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n+in March 2014; Syscoinj has done so for a similar span of time.\n+Syscoinjs and electrum have been more recently updated.\n \n This does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n \n-[1] On the Malleability of Bitcoin Transactions\n+[1] On the Malleability of Syscoin Transactions\n Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+http://fc15.ifca.ai/preproceedings/syscoin/paper_9.pdf\n \n Minimum relay fee default increase\n -----------------------------------\n@@ -108,7 +108,7 @@ outrageous memory usage on nodes due to the mempool ballooning. This is a\n temporary measure, bridging the time until a dynamic method for determining\n this fee is merged (which will be in 0.12).\n \n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n+(see https://github.com/syscoin/syscoin/pull/6793, as well as the 0.11\n release notes, in which this value was suggested)\n \n 0.11.1 Change log\n@@ -124,7 +124,7 @@ git merge commit are mentioned.\n - #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n - #6471 `92401c2` Depends: bump to qt 5.5\n - #6224 `93b606a` Be even stricter in processing unrequested blocks\n-- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n+- #6571 `100ac4e` libsyscoinconsensus: avoid a crash in multi-threaded environments\n - #6545 `649f5d9` Do not store more than 200 timedata samples.\n - #6694 `834e299` [QT] fix thin space word wrap line break issue\n - #6703 `1cd7952` Backport bugfixes to 0.11\n@@ -168,5 +168,5 @@ And those who contributed additional code review and/or security research:\n - timothy on IRC for reporting the issue\n - Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/).\n "
      },
      {
        "sha": "c874f77787f867a8d6df4353b5c0f6abbde3d116",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -7,7 +7,7 @@ Features:\n * Recovers and continues if an exception is caused by a message you received.  Other nodes shouldn't be able to cause an exception, and it hasn't happened before, but if a way is found to cause an exception, this would keep it from being used to stop network nodes.\n \n If you have json-rpc code that checks the contents of the error string, you need to change it to expect error objects of the form {\"code\":<number>,\"message\":<string>}, which is the standard.  See this thread:\n-http://www.bitcoin.org/smf/index.php?topic=969.0\n+http://www.syscoin.org/smf/index.php?topic=969.0\n \n Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.12/\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.12/"
      },
      {
        "sha": "95c8fd1f76e58c967c437d92a78073cc48658394",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -12,15 +12,15 @@ Gavin Andresen:\n * Clean shutdown on SIGTERM on Linux.\n \n Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.13/\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.13/\n \n (Thanks Laszlo for the Mac OSX build!)\n \n Note:\n The SSE2 auto-detect in the Linux 64-bit version doesn't work with AMD in 64-bit mode.  Please try this instead and let me know if it gets it right:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.1-specialbuild-linux64.tar.gz\n+http://www.syscoin.org/download/syscoin-0.3.13.1-specialbuild-linux64.tar.gz\n \n You can still control the SSE2 use manually with -4way and -4way=0.\n \n Version 0.3.13.2 (SVN rev 161) has improvements for the case where you already had 0/unconfirmed transactions that you might have already spent.  Here's a Windows build of it:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.2-win32-setup.exe\n+http://www.syscoin.org/download/syscoin-0.3.13.2-win32-setup.exe"
      },
      {
        "sha": "7af6d883e868b61abcf2b10d055980df09da18a7",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n Version 0.3.14 is now available\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.14/\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.14/\n \n Changes:\n * Key pool feature for safer wallet backup"
      },
      {
        "sha": "90cf3c72370ce4a8f2c3d583fb5196fe741b2a79",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,6 +1,6 @@\n * paytxfee switch is now per KB, so it adds the correct fee for large transactions\n * sending avoids using coins with less than 6 confirmations if it can\n-* BitcoinMiner processes transactions in priority order based on age of dependencies\n+* SyscoinMiner processes transactions in priority order based on age of dependencies\n * make sure generation doesn't start before block 74000 downloaded\n * bugfixes by Dean Gores\n * testnet, keypoololdest and paytxfee added to getinfo"
      },
      {
        "sha": "3cf60d0fe25eb0c176d8107f93efbe55c9539728",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,7 +3,7 @@ Changes:\n * IsStandard() check to only include known transaction types in blocks\n * Jgarzik's optimisation to speed up the initial block download a little\n \n-The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.bitcoin.org/smf/index.php?topic=1886.0).  \n+The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.syscoin.org/smf/index.php?topic=1886.0).  \n * getaccountaddress\n * sendfrom\n * move"
      },
      {
        "sha": "b449cb8573b31f76d6a21c9cee6e40f3a6f6a7a4",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,13 +3,13 @@ worse as people upgraded, so I cherry-picked the bug fix and created a minor rel\n \n The Amazon Machine Images I used to do the builds are available:\n \n-  ami-38a05251   Bitcoin-v0.3.20.2 Mingw    (Windows; Administrator password 'bitcoin development')\n-  ami-30a05259   Bitcoin_0.3.20.2 Linux32\n-  ami-8abc4ee3   Bitcoin_0.3.20.2 Linux64\n+  ami-38a05251   Syscoin-v0.3.20.2 Mingw    (Windows; Administrator password 'syscoin development')\n+  ami-30a05259   Syscoin_0.3.20.2 Linux32\n+  ami-8abc4ee3   Syscoin_0.3.20.2 Linux64\n \n (mac build will be done soon)\n \n-If you have already downloaded version 0.3.20.1, please either add this to your bitcoin.conf file:\n+If you have already downloaded version 0.3.20.1, please either add this to your syscoin.conf file:\n \n   maxsendbuffer=10000\n   maxreceivebuffer=10000"
      },
      {
        "sha": "df693a907f7a0fe71def1001cb3df9c7f56e9c41",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,22 +1,22 @@\n Please checkout the git integration branch from:\n \n-https://github.com/bitcoin/bitcoin\n+https://github.com/syscoin/syscoin\n \n ... and help test.  The new features that need testing are:\n \n-* -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n+* -nolisten : https://github.com/syscoin/syscoin/pull/11\n * -rescan : scan block chain for missing wallet transactions\n-* -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n-* RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n-* listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10\n+* -printtoconsole : https://github.com/syscoin/syscoin/pull/37\n+* RPC gettransaction details : https://github.com/syscoin/syscoin/pull/24\n+* listtransactions new features : https://github.com/syscoin/syscoin/pull/10\n \n Bug fixes that also need testing:\n \n-* -maxconnections= : https://github.com/bitcoin/bitcoin/pull/42\n-* RPC listaccounts minconf : https://github.com/bitcoin/bitcoin/pull/27\n-* RPC move, add time to output : https://github.com/bitcoin/bitcoin/pull/21\n+* -maxconnections= : https://github.com/syscoin/syscoin/pull/42\n+* RPC listaccounts minconf : https://github.com/syscoin/syscoin/pull/27\n+* RPC move, add time to output : https://github.com/syscoin/syscoin/pull/21\n * ...and several improvements to --help output.\n \n This needs more testing on Windows!  Please drop me a quick private message, email, or IRC message if you are able to do some testing.  If you find bugs, please open an issue at:\n \n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues"
      },
      {
        "sha": "22ce87a773a27cdabb1dbeb0199227767e6a5b99",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-Binaries for Bitcoin version 0.3.21 are available at:\n-  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/\n+Binaries for Syscoin version 0.3.21 are available at:\n+  https://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.21/\n \n Changes and new features from the 0.3.20 release include:\n \n-* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running bitcoin or bitcoind with the - -upnp=1 command line switch or using the Options dialog box.\n+* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running syscoin or syscoind with the - -upnp=1 command line switch or using the Options dialog box.\n \n-* Support for full-precision bitcoin amounts.  You can now send, and bitcoin will display, bitcoin amounts smaller than 0.01.  However, sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so you can send 1.0001 bitcoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n+* Support for full-precision syscoin amounts.  You can now send, and syscoin will display, syscoin amounts smaller than 0.01.  However, sending fewer than 0.01 syscoins still requires a 0.01 syscoin fee (so you can send 1.0001 syscoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n \n-* A new method of finding bitcoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n+* A new method of finding syscoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n \n-For developers, changes to bitcoin's remote-procedure-call API:\n+For developers, changes to syscoin's remote-procedure-call API:\n \n-* New rpc command \"sendmany\" to send bitcoins to more than one address in a single transaction.\n+* New rpc command \"sendmany\" to send syscoins to more than one address in a single transaction.\n \n-* Several bug fixes, including a serious intermittent bug that would sometimes cause bitcoind to stop accepting rpc requests. \n+* Several bug fixes, including a serious intermittent bug that would sometimes cause syscoind to stop accepting rpc requests. \n \n * -logtimestamps option, to add a timestamp to each line in debug.log.\n "
      },
      {
        "sha": "f1f433ec6ba57e2fa56d4a8e7213ac934f5178a9",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Download URL: https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/\n+Download URL: https://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.22/\n \n This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.\n \n Notable changes:\n-* Client will accept and relay TX's with 0.0005 BTC fee schedule (users still pay 0.01 BTC per kb, until next version)\n+* Client will accept and relay TX's with 0.0005 SYS fee schedule (users still pay 0.01 SYS per kb, until next version)\n * Non-standard transactions accepted on testnet\n * Source code tree reorganized (prep for autotools build)\n * Remove \"Generate Coins\" option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.\n-* IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99\n+* IRC is overflowing.  Client now bootstraps to channels #syscoin00 - #syscoin99\n * DNS names now may be used with -addnode, -connect (requires -dns to enable)\n \n RPC changes:"
      },
      {
        "sha": "a0aae278a99a2c64064acc9e9d7c1aa8014a6948",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n-Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/\n+Win32, Linux, MacOSX and source releases for syscoin v0.3.23 have been uploaded to\n+https://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.23/\n \n-This is another quick bugfix release, trying to deal with the influx of new bitcoin users.\n+This is another quick bugfix release, trying to deal with the influx of new syscoin users.\n \n Main items of note:\n \n * P2P connect-to-node logic changed to reduce timeout a bit.  The network saw a huge influx of new users, who do not permit incoming connections.  This change is a short-term hack, to more quickly hunt for useful P2P connections.  Better \"leaf node\" logic is in the works, but this should let us limp along until then.  One may use -upnp to properly forward ports, and help the network.\n * Transaction fee reduced to 0.0005 for new transactions\n-* Client will relay transactions with fees as low as 0.0001 BTC\n+* Client will relay transactions with fees as low as 0.0001 SYS"
      },
      {
        "sha": "56b79dcb0094a8ba56599530425e179033962f63",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n-Bitcoin v0.3.24 is now available for download at\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/\n+Syscoin v0.3.24 is now available for download at\n+https://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.3.24/\n \n-This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/bitcoin/bitcoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n+This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/syscoin/syscoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n \n Notable fixes in v0.3.24, and the main reasons for this release:\n \n@@ -13,8 +13,8 @@ Notable changes in v0.3.24:\n \n C1) DNS seeding enabled by default.\n \n-C2) UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n+C2) UPNP enabled by default in the GUI client.  The percentage of syscoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  syscoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n \n-C3) Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n+C3) Initial unit testing framework.  Syscoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n \n C4) Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4's wallet encryption."
      },
      {
        "sha": "edf7b9df2ee0262180d92240c07c444379f15d70",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,24 +1,24 @@\n-Bitcoin version 0.4.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/\n+Syscoin version 0.4.0 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.4.0/\n \n The main feature in this release is wallet private key encryption;\n you can set a passphrase that must be entered before sending coins.\n See below for more information; if you decide to encrypt your wallet,\n WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION. If you\n-forget or lose your wallet passphrase, you lose your bitcoins.\n-Previous versions of bitcoin are unable to read encrypted wallets,\n+forget or lose your wallet passphrase, you lose your syscoins.\n+Previous versions of syscoin are unable to read encrypted wallets,\n and will crash on startup if the wallet is encrypted.\n \n-Also note: bitcoin version 0.4 uses a newer version of Berkeley DB\n+Also note: syscoin version 0.4 uses a newer version of Berkeley DB\n (bdb version 4.8) than previous versions (bdb 4.7). If you upgrade\n-to version 0.4 and then revert back to an earlier version of bitcoin\n+to version 0.4 and then revert back to an earlier version of syscoin\n the it may be unable to start because bdb 4.7 cannot read bdb 4.8\n \"log\" files.\n \n \n Notable bug fixes from version 0.3.24:\n \n-Fix several bitcoin-becomes-unresponsive bugs due to multithreading\n+Fix several syscoin-becomes-unresponsive bugs due to multithreading\n deadlocks.\n \n Optimize database writes for large (lots of inputs) transactions\n@@ -27,44 +27,44 @@ Optimize database writes for large (lots of inputs) transactions\n \n Wallet Encryption\n \n-Bitcoin supports native wallet encryption so that people who steal your\n-wallet file don't automatically get access to all of your Bitcoins.\n+Syscoin supports native wallet encryption so that people who steal your\n+wallet file don't automatically get access to all of your Syscoins.\n In order to enable this feature, choose \"Encrypt Wallet\" from the\n Options menu.  You will be prompted to enter a passphrase, which\n will be used as the key to encrypt your wallet and will be needed\n-every time you wish to send Bitcoins.  If you lose this passphrase,\n-you will lose access to spend all of the bitcoins in your wallet,\n-no one, not even the Bitcoin developers can recover your Bitcoins.\n+every time you wish to send Syscoins.  If you lose this passphrase,\n+you will lose access to spend all of the syscoins in your wallet,\n+no one, not even the Syscoin developers can recover your Syscoins.\n This means you are responsible for your own security, store your\n passphrase in a secure location and do not forget it.\n \n-Remember that the encryption built into bitcoin only encrypts the\n-actual keys which are required to send your bitcoins, not the full\n+Remember that the encryption built into syscoin only encrypts the\n+actual keys which are required to send your syscoins, not the full\n wallet.  This means that someone who steals your wallet file will\n be able to see all the addresses which belong to you, as well as the\n relevant transactions, you are only protected from someone spending\n your coins.\n \n It is recommended that you backup your wallet file before you\n-encrypt your wallet.  To do this, close the Bitcoin client and\n-copy the wallet.dat file from ~/.bitcoin/ on Linux, /Users/(user\n-name)/Application Support/Bitcoin/ on Mac OSX, and %APPDATA%/Bitcoin/\n-on Windows (that is /Users/(user name)/AppData/Roaming/Bitcoin on\n+encrypt your wallet.  To do this, close the Syscoin client and\n+copy the wallet.dat file from ~/.syscoin/ on Linux, /Users/(user\n+name)/Application Support/Syscoin/ on Mac OSX, and %APPDATA%/Syscoin/\n+on Windows (that is /Users/(user name)/AppData/Roaming/Syscoin on\n Windows Vista and 7 and /Documents and Settings/(user name)/Application\n-Data/Bitcoin on Windows XP).  Once you have copied that file to a\n-safe location, reopen the Bitcoin client and Encrypt your wallet.\n+Data/Syscoin on Windows XP).  Once you have copied that file to a\n+safe location, reopen the Syscoin client and Encrypt your wallet.\n If everything goes fine, delete the backup and enjoy your encrypted\n wallet.  Note that once you encrypt your wallet, you will never be\n-able to go back to a version of the Bitcoin client older than 0.4.\n+able to go back to a version of the Syscoin client older than 0.4.\n \n Keep in mind that you are always responsible for your own security.\n All it takes is a slightly more advanced wallet-stealing trojan which\n installs a keylogger to steal your wallet passphrase as you enter it\n-in addition to your wallet file and you have lost all your Bitcoins.\n+in addition to your wallet file and you have lost all your Syscoins.\n Wallet encryption cannot keep you safe if you do not practice\n good security, such as running up-to-date antivirus software, only\n-entering your wallet passphrase in the Bitcoin client and using the\n+entering your wallet passphrase in the Syscoin client and using the\n same passphrase only as your wallet passphrase.\n \n-See the doc/README file in the bitcoin source for technical details\n+See the doc/README file in the syscoin source for technical details\n of wallet encryption."
      },
      {
        "sha": "f484cd0f322db293c484e97163e9bd8579f7ddbc",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,38 +1,38 @@\n-Bitcoin version 0.4.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.1/\n+Syscoin version 0.4.1 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.4.1/\n \n This is a bugfix only release based on 0.4.0.\n \n Please report bugs by replying to this forum thread.\n \n MAJOR BUG FIX  (CVE-2011-4447)\n \n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+The wallet encryption feature introduced in Syscoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n associated coins.\n \n-If you have a previously encrypted wallet.dat, the first time you run wxbitcoin or bitcoind the wallet will be rewritten, Bitcoin will\n+If you have a previously encrypted wallet.dat, the first time you run wxsyscoin or syscoind the wallet will be rewritten, Syscoin will\n shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n \n If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+location) you should send all of your syscoins to yourself using a new syscoin address and stop using any previously generated addresses.\n \n-Wallets encrypted with this version of Bitcoin are written properly.\n+Wallets encrypted with this version of Syscoin are written properly.\n \n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new syscoin address; to be certain that the\n new private keys are properly backed up you should:\n \n-1. Run Bitcoin and let it rewrite the wallet.dat file\n+1. Run Syscoin and let it rewrite the wallet.dat file\n \n-2. Run it again, then ask it for a new bitcoin address.\n-wxBitcoin: new address visible on main window\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+2. Run it again, then ask it for a new syscoin address.\n+wxSyscoin: new address visible on main window\n+syscoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n \n-3. If your encrypted wallet.dat may have been copied or stolen, send all of your bitcoins to the new bitcoin address.\n+3. If your encrypted wallet.dat may have been copied or stolen, send all of your syscoins to the new syscoin address.\n \n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+4. Shut down Syscoin, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new syscoin address before backing up, so that the 'keypool' is regenerated and backed up.\n \n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your syscoins.\n \n Thanks to Alan Reiner (etotheipi) for finding and reporting this bug."
      },
      {
        "sha": "a62adfc031330bdcb78b4c05e98e557f20dacfd6",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,21 +1,21 @@\n-bitcoind version 0.4.3 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)\n+syscoind version 0.4.3 is now available for download at:\n+http://luke.dashjr.org/programs/syscoin/files/syscoind-0.4.3/ (until Gavin uploads to SourceForge)\n \n This is a bugfix-only release based on 0.4.0.\n \n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please note that the wxSyscoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.3#.tar.gz\n+http://gitorious.org/syscoin/syscoind-stable/archive-tarball/v0.4.3#.tar.gz\n \n BUG FIXES\n \n Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download).\n Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n+No longer accept inbound connections over the internet when Syscoin is being used with Tor (identity leak).\n+Use the correct base transaction fee of 0.0005 SYS for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 SYS which was only meant to be relayed).\n Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).\n "
      },
      {
        "sha": "c3ec2910299738a1617eba62f56077d5184953cf",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,15 +1,15 @@\n-Bitcoin version 0.4.4 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.4/\n+Syscoin version 0.4.4 is now available for download at:\n+http://luke.dashjr.org/programs/syscoin/files/syscoind-0.4.4/\n \n This is a bugfix-only release based on 0.4.0.\n \n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please note that the wxSyscoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.4#.tar.gz\n+http://gitorious.org/syscoin/syscoind-stable/archive-tarball/v0.4.4#.tar.gz\n \n BUG FIXES\n \n@@ -24,7 +24,7 @@ Several shutdown issues have been fixed.\n Check that keys stored in the wallet are valid at startup, and if not,\n report corruption.\n Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n+If no password is specified to syscoind, recommend a secure password.\n Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n Add checkpoint at block 168,000.\n "
      },
      {
        "sha": "bf5d03fd516547a85b24e7dce8e533a41439b0d1",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,37 +1,37 @@\n-bitcoind version 0.4.6 is now available for download at:\n+syscoind version 0.4.6 is now available for download at:\n Windows: installer | zip (sig)\n Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+syscoind and Syscoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n \n These are bugfix-only releases.\n \n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxSyscoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n BUG FIXES\n \n Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n Verify status of encrypt/decrypt calls to detect failed padding\n Check blocks for duplicate transactions earlier. Fixes #1167\n Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+Set label when selecting an address that already has a label. Fixes #1080 (Syscoin-Qt)\n JSON-RPC listtransactions's from/count handling is now fixed\n Optimize and fix multithreaded access, when checking whether we already know about transactions\n Fix potential networking deadlock\n Proper support for Growl 1.3 notifications\n Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Syscoin-Qt)\n Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Syscoin-Qt)\n Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n+Show a message box when runaway exception happens (Syscoin-Qt)\n Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Show error message instead of exception crash when unable to bind RPC port (Syscoin-Qt)\n+Correct sign message syscoin address tooltip. Fixes #1050 (Syscoin-Qt)\n Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Syscoin-Qt)\n Work around issue in boost::program_options that prevents from compiling in clang\n Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Syscoin-Qt)\n Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "001961109df705a0a2495cac0a944eb872167ff2",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,45 +1,45 @@\n-Bitcoin version 0.5.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/\n+Syscoin version 0.5.0 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.5.0/\n \n The major change for this release is a completely new graphical interface that uses the Qt user interface toolkit.\n \n This release include German, Spanish, Spanish-Castilian, Norwegian and Dutch translations. More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/syscoin/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep bitcoin up-to-date.  Just type \"sudo apt-add-repository ppa:bitcoin/bitcoin\" in your terminal, then install the bitcoin-qt package.\n+For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep syscoin up-to-date.  Just type \"sudo apt-add-repository ppa:syscoin/syscoin\" in your terminal, then install the syscoin-qt package.\n \n MAJOR BUG FIX  (CVE-2011-4447)\n \n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+The wallet encryption feature introduced in Syscoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n associated coins.\n \n-If you have a previously encrypted wallet.dat, the first time you run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will\n+If you have a previously encrypted wallet.dat, the first time you run syscoin-qt or syscoind the wallet will be rewritten, Syscoin will\n shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n \n If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+location) you should send all of your syscoins to yourself using a new syscoin address and stop using any previously generated addresses.\n \n-Wallets encrypted with this version of Bitcoin are written properly.\n+Wallets encrypted with this version of Syscoin are written properly.\n \n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new syscoin address; to be certain that the\n new private keys are properly backed up you should:\n \n-1. Run Bitcoin and let it rewrite the wallet.dat file\n+1. Run Syscoin and let it rewrite the wallet.dat file\n \n-2. Run it again, then ask it for a new bitcoin address.\n-Bitcoin-Qt: Address Book, then New Address...\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+2. Run it again, then ask it for a new syscoin address.\n+Syscoin-Qt: Address Book, then New Address...\n+syscoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n \n-3. If your encrypted wallet.dat may have been copied or stolen, send  all of your bitcoins to the new bitcoin address.\n+3. If your encrypted wallet.dat may have been copied or stolen, send  all of your syscoins to the new syscoin address.\n \n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+4. Shut down Syscoin, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new syscoin address before backing up, so that the 'keypool' is regenerated and backed up.\n \n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your syscoins.\n \n Thanks to Alan Reiner (etotheipi) for finding and reporting this bug.\n \n@@ -51,7 +51,7 @@ MAJOR GUI CHANGES\n \n Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n \n-Drag and drop support for bitcoin: URIs on web pages.\n+Drag and drop support for syscoin: URIs on web pages.\n \n Export transactions as a .csv file.\n \n@@ -63,7 +63,7 @@ getmemorypool : new RPC command, provides everything needed to construct a block\n \n listsinceblock : new RPC command, list transactions since given block\n \n-signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a bitcoin address.\n+signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a syscoin address.\n \n GENERAL CHANGES\n "
      },
      {
        "sha": "0069f3f714bc8f697ec3b81e81cd0393c6fec438",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,43 +1,43 @@\n-Bitcoin version 0.5.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/\n+Syscoin version 0.5.1 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.5.1/\n \n This is a bugfix-only release.\n \n This release includes 13 translations, including 5 new translations:\n Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.\n More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/syscoin/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Project source code is hosted at github; we are no longer\n distributing .tar.gz files here, you can get them\n directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.5.1  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.5.1  # .zip\n+https://github.com/syscoin/syscoin/tarball/v0.5.1  # .tar.gz\n+https://github.com/syscoin/syscoin/zipball/v0.5.1  # .zip\n \n For Ubuntu users, there is a new ppa maintained by Matt Corallo which\n you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n+syscoin up-to-date.  Just type\n+sudo apt-add-repository ppa:syscoin/syscoin\n+in your terminal, then install the syscoin-qt package.\n \n \n BUG FIXES\n \n Re-enable SSL support for the JSON-RPC interface (it was unintentionally\n disabled for the 0.5.0 release binaries).\n \n-The code that finds peers via \"dns seeds\" no longer stops bitcoin startup\n+The code that finds peers via \"dns seeds\" no longer stops syscoin startup\n if one of the dns seed machines is down.\n \n Tooltips on the transaction list view were rendering incorrectly (as black boxes\n or with a transparent background).\n \n-Prevent a denial-of-service attack involving flooding a bitcoin node with\n+Prevent a denial-of-service attack involving flooding a syscoin node with\n orphan blocks.\n \n The wallet passphrase dialog now warns you if the caps lock key was pressed.\n \n-Improved searching in addresses and labels in bitcoin-qt.\n+Improved searching in addresses and labels in syscoin-qt."
      },
      {
        "sha": "f5518f9af9e21cc5fa6734b95b163bad8454669f",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin version 0.5.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/\n+Syscoin version 0.5.2 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.5.2/\n \n This is a bugfix-only release based on 0.5.1.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.2#.tar.gz\n+http://gitorious.org/syscoin/syscoind-stable/archive-tarball/v0.5.2#.tar.gz\n \n BUG FIXES\n \n Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1 skipped checking ECDSA signatures during initial blockchain download).\n Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download; this was\n not a security vulnerability).\n Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n+No longer accept inbound connections over the internet when Syscoin is being used with Tor (identity leak).\n Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n+Use the correct base transaction fee of 0.0005 SYS for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 SYS which was only meant to be relayed).\n Don't show \"IP\" for transactions which are not necessarily IP transactions.\n Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr)."
      },
      {
        "sha": "8e3f1388bfb4e85aa2fdaf71e6957dab798b72cb",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin version 0.5.3 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/\n+Syscoin version 0.5.3 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.5.3/\n \n This is a bugfix-only release based on 0.5.1.\n It also includes a few protocol updates.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n+http://gitorious.org/syscoin/syscoind-stable/archive-tarball/v0.5.3#.tar.gz\n \n PROTOCOL UPDATES\n \n BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n-On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n+On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Syscoin easier, and will not affect normal mode.\n \n BUG FIXES\n \n@@ -24,19 +24,19 @@ Resolved multiple bugs preventing long-term unlocking of encrypted wallets\n Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n Skip splash screen when -min is used, and fix Minimize to Tray function.\n-Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n+Do not blank \"label\" in Syscoin-Qt \"Send\" tab, if the user has already entered something.\n Correct various labels and messages.\n Various memory leaks and potential null pointer deferences have been fixed.\n-Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n+Handle invalid Syscoin URIs using \"syscoin://\" instead of \"syscoin:\".\n Several shutdown issues have been fixed.\n Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users.\n Check that keys stored in the wallet are valid at startup, and if not, report corruption.\n Enable accessible widgets on Windows, so that people with screen readers such as NVDA can make sense of it.\n Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Automatically focus and scroll to new \"Send coins\" entries in Bitcoin-Qt.\n-Show a message box for --help on Windows, for Bitcoin-Qt.\n+If no password is specified to syscoind, recommend a secure password.\n+Automatically focus and scroll to new \"Send coins\" entries in Syscoin-Qt.\n+Show a message box for --help on Windows, for Syscoin-Qt.\n Add missing \"About Qt\" menu option to show built-in Qt About dialog.\n-Don't show \"-daemon\" as an option for Bitcoin-Qt, since it isn't available.\n+Don't show \"-daemon\" as an option for Syscoin-Qt, since it isn't available.\n Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n Add checkpoint at block 168,000."
      },
      {
        "sha": "440b33c87a0334f9cb4577478273129dcd2c18b7",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin version 0.5.4 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.4/\n+Syscoin version 0.5.4 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.5.4/\n NOTE: 0.5.4rc3 is being renamed to 0.5.4 final with no changes.\n \n This is a bugfix-only release in the 0.5.x series, plus a few protocol updates.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.4#.tar.gz\n+http://gitorious.org/syscoin/syscoind-stable/archive-tarball/v0.5.4#.tar.gz\n \n PROTOCOL UPDATES\n \n@@ -22,16 +22,16 @@ Fix broken testnet mining.\n Stop excess inventory relay during initial block download.\n When disconnecting a node, clear the received buffer so that we do not process any already received messages.\n Yet another attempt at implementing \"minimize to tray\" that works on all operating systems.\n-Fix Bitcoin-Qt notifications under Growl 1.3.\n-Increase required age of Bitcoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n+Fix Syscoin-Qt notifications under Growl 1.3.\n+Increase required age of Syscoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n Implemented missing verifications that led to crash on entering some wrong passphrases for encrypted wallets.\n Fix default filename suffixes in GNOME save dialog.\n Make the \"Send coins\" tab use the configured unit type, even on the first attempt.\n Print detailed wallet loading errors to debug.log when it is corrupt.\n Allocate exactly the amount of space needed for signing transactions, instead of a fixed 10k buffer.\n Workaround for improbable memory access violation.\n Check wallet's minimum version before trying to load it.\n-Remove wxBitcoin properly when installing Bitcoin-Qt over it. (Windows)\n+Remove wxSyscoin properly when installing Syscoin-Qt over it. (Windows)\n Detail reorganization information better in debug log.\n Use a messagebox to display the error when -server is provided without configuring a RPC password.\n Testing suite build now honours provided CXXFLAGS."
      },
      {
        "sha": "6facdadf96652cb1502bf084cd90f80514fc24ac",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,37 +1,37 @@\n-bitcoind and Bitcoin-Qt version 0.5.5 are now available for download at:\n+syscoind and Syscoin-Qt version 0.5.5 are now available for download at:\n Windows: installer | zip (sig)\n Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+syscoind and Syscoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n \n These are bugfix-only releases.\n \n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxSyscoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n BUG FIXES\n \n Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n Verify status of encrypt/decrypt calls to detect failed padding\n Check blocks for duplicate transactions earlier. Fixes #1167\n Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+Set label when selecting an address that already has a label. Fixes #1080 (Syscoin-Qt)\n JSON-RPC listtransactions's from/count handling is now fixed\n Optimize and fix multithreaded access, when checking whether we already know about transactions\n Fix potential networking deadlock\n Proper support for Growl 1.3 notifications\n Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Syscoin-Qt)\n Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Syscoin-Qt)\n Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n+Show a message box when runaway exception happens (Syscoin-Qt)\n Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Show error message instead of exception crash when unable to bind RPC port (Syscoin-Qt)\n+Correct sign message syscoin address tooltip. Fixes #1050 (Syscoin-Qt)\n Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Syscoin-Qt)\n Work around issue in boost::program_options that prevents from compiling in clang\n Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Syscoin-Qt)\n Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "df6f3b74b4046e5c8aff50de13e1dd6aa5a58320",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,25 +1,25 @@\n-Bitcoin version 0.6.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/\n+Syscoin version 0.6.0 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.6.0/test/\n \n This release includes more than 20 language localizations.\n More translations are welcome; join the\n project at Transifex to help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/syscoin/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n Project source code is hosted at github; we are no longer\n distributing .tar.gz files here, you can get them\n directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.6.0  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.6.0  # .zip\n+https://github.com/syscoin/syscoin/tarball/v0.6.0  # .tar.gz\n+https://github.com/syscoin/syscoin/zipball/v0.6.0  # .zip\n \n For Ubuntu users, there is a ppa maintained by Matt Corallo which\n you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n+syscoin up-to-date.  Just type\n+sudo apt-add-repository ppa:syscoin/syscoin\n+in your terminal, then install the syscoin-qt package.\n \n \n KNOWN ISSUES\n@@ -30,38 +30,38 @@ because database writes are queued to speed up download\n time.\n \n \n-NEW FEATURES SINCE BITCOIN VERSION 0.5\n+NEW FEATURES SINCE SYSCOIN VERSION 0.5\n \n Initial network synchronization should be much faster\n (one or two hours on a typical machine instead of ten or more\n hours).\n \n Backup Wallet menu option.\n \n-Bitcoin-Qt can display and save QR codes for sending\n+Syscoin-Qt can display and save QR codes for sending\n and receiving addresses.\n \n New context menu on addresses to copy/edit/delete them.\n \n New Sign Message dialog that allows you to prove that you\n-own a bitcoin address by creating a digital\n+own a syscoin address by creating a digital\n signature.\n \n New wallets created with this version will\n use 33-byte 'compressed' public keys instead of\n 65-byte public keys, resulting in smaller\n-transactions and less traffic on the bitcoin\n+transactions and less traffic on the syscoin\n network. The shorter keys are already supported\n by the network but wallet.dat files containing\n short keys are not compatible with earlier\n-versions of Bitcoin-Qt/bitcoind.\n+versions of Syscoin-Qt/syscoind.\n \n New command-line argument -blocknotify=<command>\n that will spawn a shell process to run <command> \n when a new block is accepted.\n \n New command-line argument -splash=0 to disable\n-Bitcoin-Qt's initial splash screen\n+Syscoin-Qt's initial splash screen\n \n validateaddress JSON-RPC api command output includes\n two new fields for addresses in the wallet:\n@@ -104,11 +104,11 @@ attacks were fixed.\n \n NOT YET IMPLEMENTED FEATURES\n \n-Support for clicking on bitcoin: URIs and\n-opening/launching Bitcoin-Qt is available only on Linux,\n+Support for clicking on syscoin: URIs and\n+opening/launching Syscoin-Qt is available only on Linux,\n and only if you configure your desktop to launch\n-Bitcoin-Qt. All platforms support dragging and dropping\n-bitcoin: URIs onto the Bitcoin-Qt window to start\n+Syscoin-Qt. All platforms support dragging and dropping\n+syscoin: URIs onto the Syscoin-Qt window to start\n payment.\n \n \n@@ -117,21 +117,21 @@ PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS\n This release has preliminary support for multisignature\n transactions-- transactions that require authorization\n from more than one person or device before they\n-will be accepted by the bitcoin network.\n+will be accepted by the syscoin network.\n \n Prior to this release, multisignature transactions\n were considered 'non-standard' and were ignored;\n with this release multisignature transactions are\n considered standard and will start to be relayed\n and accepted into blocks.\n \n-It is expected that future releases of Bitcoin-Qt\n+It is expected that future releases of Syscoin-Qt\n will support the creation of multisignature transactions,\n once enough of the network has upgraded so relaying\n and validating them is robust.\n \n For this release, creation and testing of multisignature\n-transactions is limited to the bitcoin test network using\n+transactions is limited to the syscoin test network using\n the \"addmultisigaddress\" JSON-RPC api call.\n \n Short multisignature address support is included in this"
      },
      {
        "sha": "fb8f96e636f8320775ce661a451baa8723b29c7b",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n-Bitcoin version 0.6.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/\n+Syscoin version 0.6.2 is now available for download at:\n+http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.6.2/\n \n This is a bug-fix and code-cleanup release, with no major new features.\n \n Please report bugs using the github issue tracker at:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/syscoin/syscoin/issues\n \n \n NOTABLE CHANGES\n@@ -14,7 +14,7 @@ portable to different data directories by default. If you need a\n portable blkindex.dat file then run with the new -detachdb=1 option\n or the \"Detach databases at shutdown\" GUI preference.\n \n-Fixed https://github.com/bitcoin/bitcoin/issues/1065, a bug that\n+Fixed https://github.com/syscoin/syscoin/issues/1065, a bug that\n could cause long-running nodes to crash.\n \n Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux"
      },
      {
        "sha": "39a6a64243a091a41e2abdda38b56f93cae0c391",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,29 +1,29 @@\n-Bitcoin version 0.6.3 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/\n+Syscoin version 0.6.3 is now available for download at:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.6.3/\n \n This is a bug-fix release, with no new features.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n CHANGE SUMMARY\n \n Fixed a serious denial-of-service attack that could cause the\n-bitcoin process to become unresponsive. Thanks to Sergio Lerner\n+syscoin process to become unresponsive. Thanks to Sergio Lerner\n for finding and responsibly reporting the problem. (CVE-2012-3789)\n \n Optimized the process of checking transaction signatures, to\n speed up processing of new block messages and make propagating\n blocks across the network faster.\n \n-Fixed an obscure bug that could cause the bitcoin process to get\n+Fixed an obscure bug that could cause the syscoin process to get\n stuck on an invalid block-chain, if the invalid chain was\n hundreds of blocks long.\n \n-Bitcoin-Qt no longer automatically selects the first address\n+Syscoin-Qt no longer automatically selects the first address\n in the address book (Issue #1384).\n \n-Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n+Fixed minimize-to-dock behavior of Syscoin-Qt on the Mac.\n \n Added a block checkpoint at block 185,333 to speed up initial\n blockchain download."
      },
      {
        "sha": "7b8bde36d6d42407d5d5ad72c9deb99489dc97cd",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,24 +1,24 @@\n-Bitcoin version 0.7.0 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/\n+Syscoin version 0.7.0 is now available for download at:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.7.0/\n \n-We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt\n+We recommend that everybody running prior versions of syscoind/Syscoin-Qt\n upgrade to this release, except for users running Mac OSX 10.5.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n Project source code is hosted at github; you can get\n source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.0  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.0  # .zip\n+  https://github.com/syscoin/syscoin/tarball/v0.7.0  # .tar.gz\n+  https://github.com/syscoin/syscoin/zipball/v0.7.0  # .zip\n \n Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n maintained by Matt Corallo to automatically keep \n-bitcoin up-to-date.  Just type\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n+syscoin up-to-date.  Just type\n+  sudo apt-add-repository ppa:syscoin/syscoin\n   sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n+in your terminal, then install the syscoin-qt package:\n+  sudo apt-get install syscoin-qt\n \n \n How to Upgrade\n@@ -27,10 +27,10 @@ If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n Code:\n-/Applications/Bitcoin-Qt\n+/Applications/Syscoin-Qt\n (on Mac) or\n Code:\n-bitcoind/bitcoin-qt\n+syscoind/syscoin-qt\n (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n@@ -45,14 +45,14 @@ Incompatible Changes\n   and 'getrawmempool' commands.\n * Remove deprecated RPC 'getblocknumber'\n \n-Bitcoin Improvement Proposals implemented\n+Syscoin Improvement Proposals implemented\n \n BIP 22 - 'getblocktemplate', 'submitblock' RPCs\n BIP 34 - block version 2, height in coinbase\n BIP 35 - 'mempool' message, extended 'getdata' message behavior\n \n \n-Core bitcoin handling and blockchain database\n+Core syscoin handling and blockchain database\n \n * Reduced CPU usage, by eliminating some redundant hash calculations\n * Cache signature verifications, to eliminate redundant signature checks\n@@ -109,7 +109,7 @@ Qt GUI\n * Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)\n * Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI\n * Merge sign/verify message into a single window with tabbed UI\n-* Ensure a changed bitcoin unit immediately updates all GUI elements that use units\n+* Ensure a changed syscoin unit immediately updates all GUI elements that use units\n * Update QR Code dialog\n * Improve error reporting at startup\n * Fine-grained UI updates for a much smoother UI during block downloads\n@@ -119,8 +119,8 @@ Qt GUI\n * Much better translations\n * Override progress bar design on platforms with segmented progress bars to assist with readability\n * Added 'immature balance' display on the overview page\n-* (Windows only): enable ASLR and DEP for bitcoin-qt.exe\n-* (Windows only): add meta-data to bitcoin-qt.exe (e.g. description)\n+* (Windows only): enable ASLR and DEP for syscoin-qt.exe\n+* (Windows only): add meta-data to syscoin-qt.exe (e.g. description)\n \n Internal codebase\n \n@@ -131,7 +131,7 @@ Internal codebase\n Miscellaneous\n \n * Reopen debug.log upon SIGHUP\n-* Bash programmable completion for bitcoind(1)\n+* Bash programmable completion for syscoind(1)\n * On supported OS's, each thread is given a useful name\n \n "
      },
      {
        "sha": "75b59a61f392ba258e23ae69b50577285a6717ee",
        "filename": "doc/release-notes/release-notes-0.7.1.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.7.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.7.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin version 0.7.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/\n+Syscoin version 0.7.1 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.7.1/\n \n This is a bug-fix minor release.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n Project source code is hosted at github; you can get\n source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip\n+  https://github.com/syscoin/syscoin/tarball/v0.7.1  # .tar.gz\n+  https://github.com/syscoin/syscoin/zipball/v0.7.1  # .zip\n \n Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n maintained by Matt Corallo to automatically keep \n up-to-date.  Just type:\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n+  sudo apt-add-repository ppa:syscoin/syscoin\n   sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n+in your terminal, then install the syscoin-qt package:\n+  sudo apt-get install syscoin-qt\n \n KNOWN ISSUES\n ------------\n@@ -30,7 +30,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n with a different version of Berkeley DB (for example, if you were using an\n@@ -75,7 +75,7 @@ Dependency changes\n Bug fixes\n ---------\n \n-* Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.\n+* Clicking on a syscoin: URI on Windows should now launch Syscoin-Qt properly.\n \n * When running -testnet, use RPC port 18332 by default.\n "
      },
      {
        "sha": "f903fab81799c56c34c5674e76c863bdead0b644",
        "filename": "doc/release-notes/release-notes-0.7.2.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.7.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.7.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,18 +1,18 @@\n-Bitcoin version 0.7.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2\n+Syscoin version 0.7.2 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.7.2\n \n This is a bug-fix minor release.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n with a different version of Berkeley DB (for example, if you were using an\n@@ -40,7 +40,7 @@ Bug fixes\n   database twice.\n \n * Fix use-after-free problems in initialization and shutdown, the latter of\n-  which caused Bitcoin-Qt to crash on Windows when exiting.\n+  which caused Syscoin-Qt to crash on Windows when exiting.\n \n * Correct library linking so building on Windows natively works.\n "
      },
      {
        "sha": "e3a5c1e096bf0410b28f64b3f7d8e76cbb97f612",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin-Qt version 0.8.0 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/\n+Syscoin-Qt version 0.8.0 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.0/\n \n This is a major release designed to improve performance and handle the\n increasing volume of transactions on the network.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n The first time you run after the upgrade a re-indexing process will be\n started that will take anywhere from 30 minutes to several hours,\n@@ -31,7 +31,7 @@ details).\n Improvements\n ------------\n \n-Mac and Windows binaries are signed with certificates owned by the Bitcoin\n+Mac and Windows binaries are signed with certificates owned by the Syscoin\n Foundation, to be compatible with the new security features in OSX 10.8 and\n Windows 8.\n \n@@ -61,7 +61,7 @@ contrib/spendfrom is a python-language command-line utility that demonstrates\n how to use the \"raw transactions\" JSON-RPC api to send coins received from particular\n addresses (also known as \"coin control\").\n \n-New/changed settings (command-line or bitcoin.conf file)\n+New/changed settings (command-line or syscoin.conf file)\n --------------------------------------------------------\n \n dbcache : controls LevelDB memory usage."
      },
      {
        "sha": "9e2c7521a01615bf48eac435bd1ef25411b1faa3",
        "filename": "doc/release-notes/release-notes-0.8.1.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt/bitcoind version 0.8.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n+Syscoin-Qt/syscoind version 0.8.1 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.1/\n \n This is a maintenance release that adds a new network rule to avoid\n a chain-forking incompatibility with versions 0.7.2 and earlier.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.1 your blockchain files will be re-indexed, which will take"
      },
      {
        "sha": "5c99108f09598cb274dc542bc412f719f52f1403",
        "filename": "doc/release-notes/release-notes-0.8.2.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin-Qt version 0.8.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/\n+Syscoin-Qt version 0.8.2 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.2/\n \n This is a maintenance release that fixes many bugs and includes\n a few small new features.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n \n How to Upgrade\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.2 your blockchain files will be re-indexed, which will take\n@@ -24,12 +24,12 @@ your machine.\n \n Fee Policy changes\n \n-The default fee for low-priority transactions is lowered from 0.0005 BTC \n+The default fee for low-priority transactions is lowered from 0.0005 SYS \n (for each 1,000 bytes in the transaction; an average transaction is\n-about 500 bytes) to 0.0001 BTC.\n+about 500 bytes) to 0.0001 SYS.\n \n Payments (transaction outputs) of 0.543 times the minimum relay fee\n-(0.00005430 BTC) are now considered 'non-standard', because storing them\n+(0.00005430 SYS) are now considered 'non-standard', because storing them\n costs the network more than they are worth and spending them will usually\n cost their owner more in transaction fees than they are worth.\n \n@@ -43,7 +43,7 @@ with code that automatically calculates and suggests appropriate fees in the\n 0.9 release and note that if you set a fee policy significantly different from\n the rest of the network your transactions may never confirm.\n \n-Bitcoin-Qt changes\n+Syscoin-Qt changes\n \n * New icon and splash screen\n * Improve reporting of synchronization process\n@@ -58,7 +58,7 @@ Bitcoin-Qt changes\n   to current translations\n \n MacOSX:\n-* OSX support for click-to-pay (bitcoin:) links\n+* OSX support for click-to-pay (syscoin:) links\n * Fix GUI disappearing problem on MacOSX (issue #1522)\n \n Linux/Unix:\n@@ -97,8 +97,8 @@ Wallet compatibility/rescuing\n \n Known Bugs\n \n-* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Bitcoin-Qt debug\n-console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line\n+* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Syscoin-Qt debug\n+console will cause Syscoin-Qt to crash. Run Syscoin-Qt with the -server command-line\n option to workaround.\n \n Thanks to everybody who contributed to the 0.8.2 release!"
      },
      {
        "sha": "2cb5ec918eb47984b80b40732b6c5f3004c71fff",
        "filename": "doc/release-notes/release-notes-0.8.3.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.3.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.3 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/\n+Syscoin-Qt version 0.8.3 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.3/\n \n This is a maintenance release to fix a denial-of-service attack that\n can cause nodes to crash.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n 0.8.3 Release notes\n "
      },
      {
        "sha": "8c94989ffa9849887f04bb9ede836fae86175b93",
        "filename": "doc/release-notes/release-notes-0.8.4.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.4.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.4 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n+Syscoin-Qt version 0.8.4 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.4/\n \n This is a maintenance release to fix a critical bug and three\n security issues; we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.4 your blockchain files will be re-indexed, which will take\n@@ -29,12 +29,12 @@ Security issues\n \n An attacker could send a series of messages that resulted in\n an integer division-by-zero error in the Bloom Filter handling\n-code, causing the Bitcoin-Qt or bitcoind process to crash.\n+code, causing the Syscoin-Qt or syscoind process to crash.\n Bloom filters were introduced with version 0.8, so versions 0.8.0\n through 0.8.3 are vulnerable to this critical denial-of-service attack.\n \n A constant-time algorithm is now used to check RPC password\n-guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n+guess attempts; fixes https://github.com/syscoin/syscoin/issues/2838\n (CVE-2013-4165)\n \n Implement a better fix for the fill-memory-with-orphan-transactions\n@@ -55,11 +55,11 @@ OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\n prevent the database corruption issues many people have\n experienced on OSX.\n \n-Linux: clicking on bitcoin: links was broken if you were using\n+Linux: clicking on syscoin: links was broken if you were using\n a Gnome-based desktop.\n \n Fix a hang-at-shutdown bug that only affects users that compile\n-their own version of Bitcoin against Boost versions 1.50-1.52.\n+their own version of Syscoin against Boost versions 1.50-1.52.\n \n Other changes\n -------------"
      },
      {
        "sha": "1380e7cdef0452fdf7072c637c7cc75b5a636137",
        "filename": "doc/release-notes/release-notes-0.8.5.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.5.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.5 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n+Syscoin-Qt version 0.8.5 is now available from:\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.5/\n \n This is a maintenance release to fix a critical bug;\n we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.5 your blockchain files will be re-indexed, which will take"
      },
      {
        "sha": "1b507194e111700816273cc4d21610c098ec759c",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n-Bitcoin-Qt version 0.8.6 final is now available from:\n+Syscoin-Qt version 0.8.6 final is now available from:\n \n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/\n+  http://sourceforge.net/projects/syscoin/files/Syscoin/syscoin-0.8.6/\n \n This is a maintenance release to fix a critical bug; we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n@@ -16,7 +16,7 @@ If you already downloaded 0.8.6rc1 you do not need to re-download. This release\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.6 your blockchain files will be re-indexed, which will take\n@@ -47,7 +47,7 @@ your machine.\n \n - Additional debug.log logging for diagnosis of network problems, log timestamps by default\n \n-- Fix Bitcoin-Qt startup crash when clicking dock icon on OSX \n+- Fix Syscoin-Qt startup crash when clicking dock icon on OSX \n \n - Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()\n \n@@ -63,4 +63,4 @@ Warning\n   Hence it is recommended to use a 64-bit executable if possible.\n   A 64-bit executable for Windows is planned for 0.9.\n \n-Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/bitcoin/bitcoin.org/pull/279).\n+Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/syscoin/syscoin.org/pull/279)."
      },
      {
        "sha": "f43d43f65d27267f34d495e685c56cc9905861af",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "modified",
        "additions": 29,
        "deletions": 29,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,27 +1,27 @@\n-Bitcoin Core version 0.9.0 is now available from:\n+Syscoin Core version 0.9.0 is now available from:\n \n-  https://bitcoin.org/bin/0.9.0/\n+  https://syscoin.org/bin/0.9.0/\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), uninstall all\n-earlier versions of Bitcoin, then run the installer (on Windows) or just copy\n-over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+earlier versions of Syscoin, then run the installer (on Windows) or just copy\n+over /Applications/Syscoin-Qt (on Mac) or syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.0 your blockchain files will be re-indexed, which will take anywhere from \n 30 minutes to several hours, depending on the speed of your machine.\n \n-On Windows, do not forget to uninstall all earlier versions of the Bitcoin\n+On Windows, do not forget to uninstall all earlier versions of the Syscoin\n client first, especially if you are switching to the 64-bit version.\n \n Windows 64-bit installer\n@@ -59,11 +59,11 @@ Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n the blockchain for missing spent coins, which will take a long time (tens\n of minutes on a typical machine).\n \n-Rebranding to Bitcoin Core\n+Rebranding to Syscoin Core\n ---------------------------\n \n-To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n-have renamed the reference client to Bitcoin Core.\n+To reduce confusion between Syscoin-the-network and Syscoin-the-software we\n+have renamed the reference client to Syscoin Core.\n \n \n OP_RETURN and data in the block chain\n@@ -74,7 +74,7 @@ blockchain.  This change is not an endorsement of storing data in the\n blockchain.  The OP_RETURN change creates a provably-prunable output,\n to avoid data storage schemes -- some of which were already deployed --\n that were storing arbitrary data such as images as forever-unspendable\n-TX outputs, bloating bitcoin's UTXO database.\n+TX outputs, bloating syscoin's UTXO database.\n \n Storing arbitrary data in the blockchain is still a bad idea; it is less\n costly and far more efficient to store non-currency data elsewhere.\n@@ -85,20 +85,20 @@ Autotools build system\n For 0.9.0 we switched to an autotools-based build system instead of individual\n (q)makefiles.\n \n-Using the standard \"./autogen.sh; ./configure; make\" to build Bitcoin-Qt and\n-bitcoind makes it easier for experienced open source developers to contribute \n+Using the standard \"./autogen.sh; ./configure; make\" to build Syscoin-Qt and\n+syscoind makes it easier for experienced open source developers to contribute \n to the project.\n \n Be sure to check doc/build-*.md for your platform before building from source.\n \n-Bitcoin-cli\n+Syscoin-cli\n -------------\n \n-Another change in the 0.9 release is moving away from the bitcoind executable\n+Another change in the 0.9 release is moving away from the syscoind executable\n functioning both as a server and as a RPC client. The RPC client functionality\n-(\"tell the running bitcoin daemon to do THIS\") was split into a separate\n-executable, 'bitcoin-cli'. The RPC client code will eventually be removed from\n-bitcoind, but will be kept for backwards compatibility for a release or two.\n+(\"tell the running syscoin daemon to do THIS\") was split into a separate\n+executable, 'syscoin-cli'. The RPC client code will eventually be removed from\n+syscoind, but will be kept for backwards compatibility for a release or two.\n \n `walletpassphrase` RPC\n -----------------------\n@@ -143,7 +143,7 @@ Transaction Fees\n \n This release drops the default fee required to relay transactions across the\n network and for miners to consider the transaction in their blocks to\n-0.01mBTC per kilobyte.\n+0.01mSYS per kilobyte.\n \n Note that getting a transaction relayed across the network does NOT guarantee\n that the transaction will be accepted by a miner; by default, miners fill\n@@ -156,7 +156,7 @@ the mintxfee setting to determine which low-priority transactions should\n be considered for inclusion in blocks.\n \n The wallet code still uses a default fee for low-priority transactions of\n-0.1mBTC per kilobyte. During periods of heavy transaction volume, even this\n+0.1mSYS per kilobyte. During periods of heavy transaction volume, even this\n fee may not be enough to get transactions confirmed quickly; the mintxfee\n option may be used to override the default.\n \n@@ -197,13 +197,13 @@ Command-line options:\n - New option: -nospendzeroconfchange to never spend unconfirmed change outputs\n - New option: -zapwallettxes to rebuild the wallet's transaction information\n - Rename option '-tor' to '-onion' to better reflect what it does\n-- Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\n+- Add '-disablewallet' mode to let syscoind run entirely without wallet (when\n   built with wallet)\n - Update default '-rpcsslciphers' to include TLSv1.2\n - make '-logtimestamps' default on and rework help-message\n - RPC client option: '-rpcwait', to wait for server start\n - Remove '-logtodebugger'\n-- Allow `-noserver` with bitcoind\n+- Allow `-noserver` with syscoind\n \n Block-chain handling and storage:\n \n@@ -239,7 +239,7 @@ Mining:\n \n Protocol and network:\n \n-- Drop the fee required to relay a transaction to 0.01mBTC per kilobyte\n+- Drop the fee required to relay a transaction to 0.01mSYS per kilobyte\n - Send tx relay flag with version\n - New 'reject' P2P message (BIP 0061, see\n   https://gist.github.com/gavinandresen/7079034 for draft)\n@@ -254,7 +254,7 @@ Protocol and network:\n - Improve logging of failed connections\n - Bump protocol version to 70002\n - Add some additional logging to give extra network insight\n-- Added new DNS seed from bitcoinstats.com\n+- Added new DNS seed from syscoinstats.com\n \n Validation:\n \n@@ -295,26 +295,26 @@ GUI:\n - Add Coin Control Features\n - Improve receive coins workflow: make the 'Receive' tab into a form to request\n   payments, and move historical address list functionality to File menu.\n-- Rebrand to `Bitcoin Core`\n+- Rebrand to `Syscoin Core`\n - Move initialization/shutdown to a thread. This prevents \"Not responding\"\n   messages during startup. Also show a window during shutdown.\n - Don't regenerate autostart link on every client startup\n-- Show and store message of normal bitcoin:URI\n+- Show and store message of normal syscoin:URI\n - Fix richtext detection hang issue on very old Qt versions\n - OS X: Make use of the 10.8+ user notification center to display Growl-like \n   notifications\n - OS X: Added NSHighResolutionCapable flag to Info.plist for better font\n   rendering on Retina displays.\n-- OS X: Fix bitcoin-qt startup crash when clicking dock icon\n-- Linux: Fix Gnome bitcoin: URI handler\n+- OS X: Fix syscoin-qt startup crash when clicking dock icon\n+- Linux: Fix Gnome syscoin: URI handler\n \n Miscellaneous:\n \n - Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth\n - Add '-regtest' mode, similar to testnet but private with instant block\n   generation with 'setgenerate' RPC.\n - Add 'linearize.py' script to contrib, for creating bootstrap.dat\n-- Add separate bitcoin-cli client\n+- Add separate syscoin-cli client\n \n Credits\n --------\n@@ -378,7 +378,7 @@ Thanks to everyone who contributed to this release:\n - paveljanik\n - Peter Todd\n - phantomcircuit\n-- phelixbtc\n+- phelixsys\n - Philip Kaufmann\n - Pieter Wuille\n - Rav3nPL"
      },
      {
        "sha": "341286148403ba7d822815b9aba382e0d0496056",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,27 +1,27 @@\n-Bitcoin Core version 0.9.1 is now available from:\n+Syscoin Core version 0.9.1 is now available from:\n \n-  https://bitcoin.org/bin/0.9.1/\n+  https://syscoin.org/bin/0.9.1/\n \n This is a security update. It is recommended to upgrade to this release\n as soon as possible.\n \n It is especially important to upgrade if you currently have version\n 0.9.0 installed and are using the graphical interface OR you are using\n-bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n+syscoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n have configured allowip to allow rpc connections from potentially\n hostile hosts.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n@@ -33,7 +33,7 @@ If you are upgrading from version 0.7.2 or earlier, the first time you run\n No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n \n - Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n-  affect the Bitcoin Core software:\n+  affect the Syscoin Core software:\n \n   - CVE-2014-0160 (\"heartbleed\")\n     A missing bounds check in the handling of the TLS heartbeat extension can"
      },
      {
        "sha": "fe35edbaf307c70daf82b8572f26a940006daf8a",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin Core version 0.9.2.1 is now available from:\n+Syscoin Core version 0.9.2.1 is now available from:\n \n-  https://bitcoin.org/bin/0.9.2.1/\n+  https://syscoin.org/bin/0.9.2.1/\n \n This is a new minor version release, bringing mostly bug fixes and some minor\n improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n@@ -93,7 +93,7 @@ Protocol and network code:\n Wallet:\n \n - Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Lower paytxfee warning threshold from 0.25 SYS to 0.01 SYS\n - Fix importwallet nTimeFirstKey (trigger necessary rescans)\n - Log BerkeleyDB version at startup\n - CWallet init fix\n@@ -130,7 +130,7 @@ GUI:\n - Catch Windows shutdown events while client is running\n - Optionally add third party links to transaction context menu\n - Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n+- Fix \"Start syscoin on system login\"\n \n Miscellaneous:\n "
      },
      {
        "sha": "95a41f809fcffd1666532af8b575383472ca8c96",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin Core version 0.9.2 is now available from:\n+Syscoin Core version 0.9.2 is now available from:\n \n-  https://bitcoin.org/bin/0.9.2/\n+  https://syscoin.org/bin/0.9.2/\n \n This is a new minor version release, bringing mostly bug fixes and some minor\n improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.2 your blockchain files will be re-indexed, which will take anywhere from \n@@ -93,7 +93,7 @@ Protocol and network code:\n Wallet:\n \n - Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Lower paytxfee warning threshold from 0.25 SYS to 0.01 SYS\n - Fix importwallet nTimeFirstKey (trigger necessary rescans)\n - Log BerkeleyDB version at startup\n - CWallet init fix\n@@ -130,7 +130,7 @@ GUI:\n - Catch Windows shutdown events while client is running\n - Optionally add third party links to transaction context menu\n - Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n+- Fix \"Start syscoin on system login\"\n \n Miscellaneous:\n "
      },
      {
        "sha": "05a7225b69ed31eb6fb4a01fc8be89e3a3ba7e26",
        "filename": "doc/release-notes/release-notes-0.9.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.3.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.9.3 is now available from:\n+Syscoin Core version 0.9.3 is now available from:\n \n-  https://bitcoin.org/bin/0.9.3/\n+  https://syscoin.org/bin/0.9.3/\n \n This is a new minor version release, bringing only bug fixes and updated\n translations. Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n Upgrading and downgrading\n ==========================\n@@ -17,8 +17,8 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.3 your blockchain files will be re-indexed, which will take anywhere from \n@@ -70,7 +70,7 @@ GUI:\n Miscellaneous:\n - key.cpp: fail with a friendlier message on missing ssl EC support\n - Remove bignum dependency for scripts\n-- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Bitcoin Core)\n+- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Syscoin Core)\n - Upgrade miniupnpc to 1.9.20140701\n - Fix boost detection in build system on some platforms\n \n@@ -98,4 +98,4 @@ Thanks to everyone who contributed to this release:\n - Wladimir J. van der Laan\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/)."
      },
      {
        "sha": "588399af7e3fbdcd900024a96bfb8824418a1544",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,39 +1,39 @@\n-Bitcoin Core version 0.9.4 is now available from:\n+Syscoin Core version 0.9.4 is now available from:\n \n-  https://bitcoin.org/bin/0.9.4/\n+  https://syscoin.org/bin/0.9.4/\n \n This is a new minor version release, bringing only bug fixes and updated\n translations. Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n ===============\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n OpenSSL Warning\n ================\n \n OpenSSL 1.0.0p / 1.0.1k was recently released and is being pushed out by\n various operating system maintainers. Review by Gregory Maxwell determined that\n-this update is incompatible with the Bitcoin system and could lead to consensus\n+this update is incompatible with the Syscoin system and could lead to consensus\n forks.\n \n-Bitcoin Core released binaries from https://bitcoin.org are unaffected,\n+Syscoin Core released binaries from https://syscoin.org are unaffected,\n as are any built with the gitian deterministic build system.\n \n However, if you are running either\n \n-- The Ubuntu PPA from https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin\n-- A third-party or self-compiled Bitcoin Core\n+- The Ubuntu PPA from https://launchpad.net/~syscoin/+archive/ubuntu/syscoin\n+- A third-party or self-compiled Syscoin Core\n \n-upgrade to Bitcoin Core 0.9.4, which includes a workaround, **before** updating\n+upgrade to Syscoin Core 0.9.4, which includes a workaround, **before** updating\n OpenSSL.\n \n The incompatibility is due to the OpenSSL update changing the\n@@ -92,4 +92,4 @@ Thanks to who contributed to this release, at least:\n - Sergio Demian Lerner\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/)."
      },
      {
        "sha": "899c137d03330c2a367ec9811016f61298313a64",
        "filename": "doc/release-notes/release-notes-0.9.5.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-notes/release-notes-0.9.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.5.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,33 +1,33 @@\n-Bitcoin Core version 0.9.5 is now available from:\n+Syscoin Core version 0.9.5 is now available from:\n \n-  https://bitcoin.org/bin/0.9.5/\n+  https://syscoin.org/bin/0.9.5/\n \n This is a new minor version release, with the goal of backporting BIP66. There\n are also a few bug fixes and updated translations. Upgrading to this release is\n recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/syscoin/syscoin/issues\n \n How to Upgrade\n ===============\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Syscoin-Qt (on Mac) or\n+syscoind/syscoin-qt (on Linux).\n \n Notable changes\n ================\n \n Mining and relay policy enhancements\n ------------------------------------\n \n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+Syscoin Core's block templates are now for version 3 blocks only, and any mining\n software relying on its `getblocktemplate` must be updated in parallel to use\n libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+If you are solo mining, this will affect you the moment you upgrade Syscoin\n Core, which must be done prior to BIP66 achieving its 951/1001 status.\n If you are mining with the stratum mining protocol: this does not affect you.\n If you are mining with the getblocktemplate protocol to a pool: this will affect\n@@ -57,4 +57,4 @@ Thanks to who contributed to this release, at least:\n - Pieter Wuille\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/syscoin/)."
      },
      {
        "sha": "dae119d897f86789af71d0f816567b3a3976c804",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 50,
        "deletions": 50,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n Release Process\n ====================\n \n-* Update translations (ping wumpus, Diapolo or tcatm on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex)\n+* Update translations (ping wumpus, Diapolo or tcatm on IRC) see [translation_process.md](https://github.com/syscoin/syscoin/blob/master/doc/translation_process.md#syncing-with-transifex)\n * Update [bips.md](bips.md) to account for changes since the last release.\n \n * * *\n@@ -10,14 +10,14 @@ Release Process\n Check out the source code in the following directory hierarchy.\n \n \tcd /path/to/your/toplevel/build\n-\tgit clone https://github.com/bitcoin/gitian.sigs.git\n-\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\tgit clone https://github.com/syscoin/gitian.sigs.git\n+\tgit clone https://github.com/syscoin/syscoin-detached-sigs.git\n \tgit clone https://github.com/devrandom/gitian-builder.git\n-\tgit clone https://github.com/bitcoin/bitcoin.git\n+\tgit clone https://github.com/syscoin/syscoin.git\n \n-###Bitcoin maintainers/release engineers, update (commit) version in sources\n+###Syscoin maintainers/release engineers, update (commit) version in sources\n \n-\tpushd ./bitcoin\n+\tpushd ./syscoin\n \tcontrib/verifysfbinaries/verify.sh\n \tdoc/README*\n \tshare/setup.nsi\n@@ -38,7 +38,7 @@ Check out the source code in the following directory hierarchy.\n \n  Setup Gitian descriptors:\n \n-\tpushd ./bitcoin\n+\tpushd ./syscoin\n \texport SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n \tgit checkout v${VERSION}\n@@ -73,42 +73,42 @@ Check out the source code in the following directory hierarchy.\n \n By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+\tmake -C ../syscoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n ```\n-./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+./bin/gbuild --url syscoin=/path/to/syscoin,signature=/path/to/sigs {rest of arguments}\n ```\n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n+###Build (and optionally verify) Syscoin Core for Linux, Windows, and OS X:\n \n-\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\tmv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n+\t./bin/gbuild --commit syscoin=v${VERSION} ../syscoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../syscoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../syscoin/contrib/gitian-descriptors/gitian-linux.yml\n+\tmv build/out/syscoin-*.tar.gz build/out/src/syscoin-*.tar.gz ../\n \n-\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\tmv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\tmv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n+\t./bin/gbuild --commit syscoin=v${VERSION} ../syscoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../syscoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../syscoin/contrib/gitian-descriptors/gitian-win.yml\n+\tmv build/out/syscoin-*-win-unsigned.tar.gz inputs/syscoin-win-unsigned.tar.gz\n+\tmv build/out/syscoin-*.zip build/out/syscoin-*.exe ../\n \n-\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\tmv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\tmv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n+\t./bin/gbuild --commit syscoin=v${VERSION} ../syscoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../syscoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../syscoin/contrib/gitian-descriptors/gitian-osx.yml\n+\tmv build/out/syscoin-*-osx-unsigned.tar.gz inputs/syscoin-osx-unsigned.tar.gz\n+\tmv build/out/syscoin-*.tar.gz build/out/syscoin-*.dmg ../\n \tpopd\n \n   Build output expected:\n \n-  1. source tarball (bitcoin-${VERSION}.tar.gz)\n-  2. linux 32-bit and 64-bit dist tarballs (bitcoin-${VERSION}-linux[32|64].tar.gz)\n-  3. windows 32-bit and 64-bit unsigned installers and dist zips (bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe, bitcoin-${VERSION}-win[32|64].zip)\n-  4. OS X unsigned installer and dist tarball (bitcoin-${VERSION}-osx-unsigned.dmg, bitcoin-${VERSION}-osx64.tar.gz)\n+  1. source tarball (syscoin-${VERSION}.tar.gz)\n+  2. linux 32-bit and 64-bit dist tarballs (syscoin-${VERSION}-linux[32|64].tar.gz)\n+  3. windows 32-bit and 64-bit unsigned installers and dist zips (syscoin-${VERSION}-win[32|64]-setup-unsigned.exe, syscoin-${VERSION}-win[32|64].zip)\n+  4. OS X unsigned installer and dist tarball (syscoin-${VERSION}-osx-unsigned.dmg, syscoin-${VERSION}-osx64.tar.gz)\n   5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/\n \n ###Next steps:\n@@ -126,25 +126,25 @@ Commit your signature to gitian.sigs:\n   Wait for Windows/OS X detached signatures:\n \n \tOnce the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n-\tDetached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n+\tDetached signatures will then be committed to the [syscoin-detached-sigs](https://github.com/syscoin/syscoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n   Create (and optionally verify) the signed OS X binary:\n \n \tpushd ./gitian-builder\n-\t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\tmv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n+\t./bin/gbuild -i --commit signature=v${VERSION} ../syscoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../syscoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../syscoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\tmv build/out/syscoin-osx-signed.dmg ../syscoin-${VERSION}-osx.dmg\n \tpopd\n \n   Create (and optionally verify) the signed Windows binaries:\n \n \tpushd ./gitian-builder\n-\t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\tmv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n-\tmv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n+\t./bin/gbuild -i --commit signature=v${VERSION} ../syscoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../syscoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../syscoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\tmv build/out/syscoin-*win64-setup.exe ../syscoin-${VERSION}-win64-setup.exe\n+\tmv build/out/syscoin-*win32-setup.exe ../syscoin-${VERSION}-win32-setup.exe\n \tpopd\n \n Commit your signature for the signed OS X/Windows binaries:\n@@ -169,35 +169,35 @@ rm SHA256SUMS\n (the digest algorithm is forced to sha256 to avoid confusion of the `Hash:` header that GPG adds with the SHA256 used for the files)\n Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spurious/nonsensical entry.\n \n-- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the bitcoin.org server\n-  into `/var/www/bin/bitcoin-core-${VERSION}`\n+- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the syscoin.org server\n+  into `/var/www/bin/syscoin-core-${VERSION}`\n \n-- Update bitcoin.org version\n+- Update syscoin.org version\n \n-  - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n+  - First, check to see if the Syscoin.org maintainers have prepared a\n+    release: https://github.com/syscoin-dot-org/syscoin.org/labels/Releases\n \n       - If they have, it will have previously failed their Travis CI\n         checks because the final release files weren't uploaded.\n         Trigger a Travis CI rebuild---if it passes, merge.\n \n-  - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n+  - If they have not prepared a release, follow the Syscoin.org release\n+    instructions: https://github.com/syscoin-dot-org/syscoin.org#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n     as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong\n \n - Announce the release:\n \n-  - Release sticky on bitcointalk: https://bitcointalk.org/index.php?board=1.0\n+  - Release sticky on syscointalk: https://syscointalk.org/index.php?board=1.0\n \n-  - Bitcoin-development mailing list\n+  - Syscoin-development mailing list\n \n-  - Update title of #bitcoin on Freenode IRC\n+  - Update title of #syscoin on Freenode IRC\n \n-  - Optionally reddit /r/Bitcoin, ... but this will usually sort out itself\n+  - Optionally reddit /r/Syscoin, ... but this will usually sort out itself\n \n-- Notify BlueMatt so that he can start building [https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin](the PPAs)\n+- Notify BlueMatt so that he can start building [https://launchpad.net/~syscoin/+archive/ubuntu/syscoin](the PPAs)\n \n - Add release notes for the new version to the directory `doc/release-notes` in git master\n "
      },
      {
        "sha": "91a31b10ceb7d8b5b7cc644f710de64860fd59bf",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,21 +1,21 @@\n Shared Libraries\n ================\n \n-## bitcoinconsensus\n+## syscoinconsensus\n \n-The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n+The purpose of this library is to make the verification functionality that is critical to Syscoin's consensus available to other applications, e.g. to language bindings.\n \n ### API\n \n-The interface is defined in the C header `bitcoinconsensus.h` located in  `src/script/bitcoinconsensus.h`.\n+The interface is defined in the C header `syscoinconsensus.h` located in  `src/script/syscoinconsensus.h`.\n \n #### Version\n \n-`bitcoinconsensus_version` returns an `unsigned int` with the the API version *(currently at an experimental `0`)*.\n+`syscoinconsensus_version` returns an `unsigned int` with the the API version *(currently at an experimental `0`)*.\n \n #### Script Validation\n \n-`bitcoinconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n+`syscoinconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n \n ##### Parameters\n - `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.\n@@ -24,21 +24,21 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n - `unsigned int txToLen` - The number of bytes for the `txTo`.\n - `unsigned int nIn` - The index of the input in `txTo` that spends the `scriptPubKey`.\n - `unsigned int flags` - The script validation flags *(see below)*.\n-- `bitcoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n+- `syscoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n \n ##### Script Flags\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)) subscripts\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)) compliance\n+- `syscoinconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n+- `syscoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/syscoin/bips/blob/master/bip-0016.mediawiki)) subscripts\n+- `syscoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/syscoin/bips/blob/master/bip-0066.mediawiki)) compliance\n \n ##### Errors\n-- `bitcoinconsensus_ERR_OK` - No errors with input parameters *(see the return value of `bitcoinconsensus_verify_script` for the verification status)*\n-- `bitcoinconsensus_ERR_TX_INDEX` - An invalid index for `txTo`\n-- `bitcoinconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`\n-- `bitcoinconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n+- `syscoinconsensus_ERR_OK` - No errors with input parameters *(see the return value of `syscoinconsensus_verify_script` for the verification status)*\n+- `syscoinconsensus_ERR_TX_INDEX` - An invalid index for `txTo`\n+- `syscoinconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`\n+- `syscoinconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n \n ### Example Implementations\n-- [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n-- [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n-- [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n-- [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)\n+- [NSyscoin](https://github.com/NicolasDorier/NSyscoin/blob/master/NSyscoin/Script.cs#L814) (.NET Bindings)\n+- [node-libsyscoinconsensus](https://github.com/bitpay/node-libsyscoinconsensus) (Node.js Bindings)\n+- [java-libsyscoinconsensus](https://github.com/dexX7/java-libsyscoinconsensus) (Java Bindings)\n+- [syscoinconsensus-php](https://github.com/Bit-Wasp/syscoinconsensus-php) (PHP Bindings)"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/syscoin_logo_doxygen.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/syscoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/syscoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/syscoin_logo_doxygen.png?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "doc/bitcoin_logo_doxygen.png"
      },
      {
        "sha": "4c596aac46391b6cc203369ddd58b99e56db14ad",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,16 +1,16 @@\n-TOR SUPPORT IN BITCOIN\n+TOR SUPPORT IN SYSCOIN\n ======================\n \n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+It is possible to run Syscoin as a Tor hidden service, and connect to such services.\n \n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on a random port. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n \n-1. Run bitcoin behind a Tor proxy\n+1. Run syscoin behind a Tor proxy\n ---------------------------------\n \n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n+The first step is running Syscoin behind a Tor proxy. This will already make all\n outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n@@ -31,27 +31,27 @@ outgoing connections be anonymized, but more is possible.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./bitcoin -proxy=127.0.0.1:9050\n+\t./syscoin -proxy=127.0.0.1:9050\n \n \n-2. Run a bitcoin hidden server\n+2. Run a syscoin hidden server\n ------------------------------\n \n If you configure your Tor system accordingly, it is possible to make your node also\n reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n config file):\n \n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n+\tHiddenServiceDir /var/lib/tor/syscoin-service/\n \tHiddenServicePort 8333 127.0.0.1:8333\n \tHiddenServicePort 18333 127.0.0.1:18333\n \n The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n+your syscoind's P2P listen port (8333 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n+\t-externalip=X   You can tell syscoin about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above\n \t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+\t                /var/lib/tor/syscoin-service/hostname. Onion addresses are given\n \t                preference for your node to advertize itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n@@ -68,39 +68,39 @@ your bitcoind's P2P listen port (8333 by default).\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./syscoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n (obviously, replace the Onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n your address. To mitigate this, additionally bind the address of your Tor proxy:\n \n-\t./bitcoind ... -bind=127.0.0.1\n+\t./syscoind ... -bind=127.0.0.1\n \n If you don't care too much about hiding your node, and want to be reachable on IPv4\n as well, use `discover` instead:\n \n-\t./bitcoind ... -discover\n+\t./syscoind ... -discover\n \n and open port 8333 on your firewall (or use -upnp).\n \n If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./syscoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n \n 3. Automatically listen on Tor\n --------------------------------\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Syscoin Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n+Syscoin Core automatically creates a hidden service to listen on, without\n manual configuration. This will positively affect the number of available\n .onion nodes.\n \n-This new feature is enabled by default if Bitcoin Core is listening, and\n+This new feature is enabled by default if Syscoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`."
      },
      {
        "sha": "d9b2c7ef3c5967438c5852647481d5a79cbd4fd1",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,28 +1,28 @@\n Translations\n ============\n \n-The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool.\n+The Syscoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Syscoin-Core makes use of the Transifex online translation management tool.\n \n ### Helping to translate (using Transifex)\n Transifex is setup to monitor the Github repo for updates, and when code containing new translations is found, Transifex will process any changes. It may take several hours after a pull-request has been merged, to appear in the Transifex web interface.\n \n-Multiple language support is critical in assisting Bitcoin\u2019s global adoption, and growth. One of Bitcoin\u2019s greatest strengths is cross-boarder money transfers, any help making that easier is greatly appreciated.\n+Multiple language support is critical in assisting Syscoin\u2019s global adoption, and growth. One of Syscoin\u2019s greatest strengths is cross-boarder money transfers, any help making that easier is greatly appreciated.\n \n-See the [Transifex Bitcoin project](https://www.transifex.com/projects/p/bitcoin/) to assist in translations. You should also join the translation mailing list for announcements - see details below.\n+See the [Transifex Syscoin project](https://www.transifex.com/projects/p/syscoin/) to assist in translations. You should also join the translation mailing list for announcements - see details below.\n \n ### Writing code with translations\n We use automated scripts to help extract translations in both Qt, and non-Qt source files. It is rarely necessary to manually edit the files in `src/qt/locale/`. The translation source files must adhere to the following format:\n-`bitcoin_xx_YY.ts or bitcoin_xx.ts`\n+`syscoin_xx_YY.ts or syscoin_xx.ts`\n \n-`src/qt/locale/bitcoin_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `bitcoin_en.ts`.\n+`src/qt/locale/syscoin_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `syscoin_en.ts`.\n \n-To automatically regenerate the `bitcoin_en.ts` file, run the following commands:\n+To automatically regenerate the `syscoin_en.ts` file, run the following commands:\n ```sh\n cd src/\n make translate\n ```\n \n-`contrib/bitcoin-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n+`contrib/syscoin-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n \n **Example Qt translation**\n ```cpp\n@@ -36,14 +36,14 @@ When an updated source file is merged into the Github repo, Transifex will autom\n \n To create the pull-request, use the following commands:\n ```\n-git add src/qt/bitcoinstrings.cpp src/qt/locale/bitcoin_en.ts\n+git add src/qt/syscoinstrings.cpp src/qt/locale/syscoin_en.ts\n git commit\n ```\n \n ### Creating a Transifex account\n Visit the [Transifex Signup](https://www.transifex.com/signup/) page to create an account. Take note of your username and password, as they will be required to configure the command-line tool.\n \n-You can find the Bitcoin translation project at [https://www.transifex.com/projects/p/bitcoin/](https://www.transifex.com/projects/p/bitcoin/).\n+You can find the Syscoin translation project at [https://www.transifex.com/projects/p/syscoin/](https://www.transifex.com/projects/p/syscoin/).\n \n ### Installing the Transifex client command-line tool\n The client it used to fetch updated translations. If you are having problems, or need more details, see [http://docs.transifex.com/developer/client/setup](http://docs.transifex.com/developer/client/setup)\n@@ -68,24 +68,24 @@ username = USERNAME\n \n Please see [http://docs.transifex.com/developer/client/setup#windows](http://docs.transifex.com/developer/client/setup#windows) for details on installation.\n \n-The Transifex Bitcoin project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need change anything.\n+The Transifex Syscoin project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need change anything.\n \n ### Synchronising translations\n To assist in updating translations, we have created a script to help.\n \n 1. `python contrib/devtools/update-translations.py`\n-2. Update `src/qt/bitcoin_locale.qrc` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n+2. Update `src/qt/syscoin_locale.qrc` manually or via\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(syscoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n 3. Update `src/Makefile.qt.include` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(syscoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n 4. `git add` new translations from `src/qt/locale/`\n \n **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations.\n \n ### Handling Plurals (in source files)\n When new plurals are added to the source file, it's important to do the following steps:\n \n-1. Open `bitcoin_en.ts` in Qt Linguist (included in the Qt SDK)\n+1. Open `syscoin_en.ts` in Qt Linguist (included in the Qt SDK)\n 2. Search for `%n`, which will take you to the parts in the translation that use plurals\n 3. Look for empty `English Translation (Singular)` and `English Translation (Plural)` fields\n 4. Add the appropriate strings for the singular and plural form of the base string\n@@ -94,18 +94,18 @@ When new plurals are added to the source file, it's important to do the followin\n 7. Save the source file\n \n ### Translating a new language\n-To create a new language template, you will need to edit the languages manifest file `src/qt/bitcoin.qrc` and add a new entry. Below is an example of the english language entry.\n+To create a new language template, you will need to edit the languages manifest file `src/qt/syscoin.qrc` and add a new entry. Below is an example of the english language entry.\n \n ```xml\n <qresource prefix=\"/translations\">\n-    <file alias=\"en\">locale/bitcoin_en.qm</file>\n+    <file alias=\"en\">locale/syscoin_en.qm</file>\n     ...\n </qresource>\n ```\n \n **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.\n \n ### Questions and general assistance\n-The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-core-dev`.\n+The Syscoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #syscoin-core-dev`.\n \n-If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/bitcoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates.\n+If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/syscoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates."
      },
      {
        "sha": "29a392650c7bf0f718e0d319c6ff3223d604756b",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n Translation Strings Policy\n ===========================\n \n-This document provides guidelines for internationalization of the Bitcoin Core software.\n+This document provides guidelines for internationalization of the Syscoin Core software.\n \n How to translate?\n ------------------\n@@ -85,10 +85,10 @@ In Qt code use tr's third argument for optional plurality. For example:\n This adds `<numerusform>`s to the respective `.ts` file, which can be translated separately depending on the language. In English, this is simply:\n \n     <message numerus=\"yes\">\n-        <source>%n active connection(s) to Bitcoin network</source>\n+        <source>%n active connection(s) to Syscoin network</source>\n         <translation>\n-            <numerusform>%n active connection to Bitcoin network</numerusform>\n-            <numerusform>%n active connections to Bitcoin network</numerusform>\n+            <numerusform>%n active connection to Syscoin network</numerusform>\n+            <numerusform>%n active connections to Syscoin network</numerusform>\n         </translation>\n     </message>\n \n@@ -106,4 +106,4 @@ The second example reduces the number of pluralized words that translators have\n \n During a string freeze (often before a major release), no translation strings are to be added, modified or removed.\n \n-This can be checked by executing `make translate` in the `src` directory, then verifying that `bitcoin_en.ts` remains unchanged.\n+This can be checked by executing `make translate` in the `src` directory, then verifying that `syscoin_en.ts` remains unchanged."
      },
      {
        "sha": "a09bbf371043763746e1704aeb4d9e70c6b1a346",
        "filename": "doc/travis-ci.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/travis-ci.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/travis-ci.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.txt?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -29,7 +29,7 @@ trigger cache-invalidation and rebuilds as necessary.\n \n These caches can be manually removed if necessary. This is one of the the very few\n manual operations that is possible with Travis, and it can be done by the\n-Bitcoin Core committer via the Travis web interface.\n+Syscoin Core committer via the Travis web interface.\n \n In some cases, secure strings may be needed for hiding sensitive info such as\n private keys or URLs. The travis client may be used to create these strings:"
      },
      {
        "sha": "b148fce4a5d29db44a88522612ba1886525ad80d",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -6,13 +6,13 @@ and tests weren't explicitly disabled.\n \n After configuring, they can be run with `make check`.\n \n-To run the bitcoind tests manually, launch `src/test/test_bitcoin`.\n+To run the syscoind tests manually, launch `src/test/test_syscoin`.\n \n-To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n+To add more syscoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the `test/` directory or add new .cpp files that\n implement new BOOST_AUTO_TEST_SUITE sections.\n \n-To run the bitcoin-qt tests manually, launch `src/qt/test/test_bitcoin-qt`\n+To run the syscoin-qt tests manually, launch `src/qt/test/test_syscoin-qt`\n \n-To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n+To add more syscoin-qt tests, add them to the `src/qt/test/` directory and\n the `src/qt/test/test_main.cpp` file."
      },
      {
        "sha": "5b85ace16f1babe17c599800dfb9c5f984e6c4fb",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -5,8 +5,8 @@ connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n-The Bitcoin Core daemon can be configured to act as a trusted \"border\n-router\", implementing the bitcoin wire protocol and relay, making\n+The Syscoin Core daemon can be configured to act as a trusted \"border\n+router\", implementing the syscoin wire protocol and relay, making\n consensus decisions, maintaining the local blockchain database,\n broadcasting locally generated transactions into the network, and\n providing a queryable RPC interface to interact on a polled basis for\n@@ -33,7 +33,7 @@ buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+The ZeroMQ feature in Syscoin Core requires ZeroMQ API version 4.x or\n newer. Typically, it is packaged by distributions as something like\n *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n@@ -45,7 +45,7 @@ operation.\n \n By default, the ZeroMQ feature is automatically compiled in if the\n necessary prerequisites are found.  To disable, use --disable-zmq\n-during the *configure* step of building bitcoind:\n+during the *configure* step of building syscoind:\n \n     $ ./configure --disable-zmq (other options)\n \n@@ -66,16 +66,16 @@ address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ syscoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubrawtx=ipc:///tmp/syscoind.tx.raw\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n terminator) and the body is the hexadecimal transaction hash (32\n bytes).\n \n-These options can also be provided in bitcoin.conf.\n+These options can also be provided in syscoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org/4-0:_start).\n@@ -87,9 +87,9 @@ arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n-From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+From the perspective of syscoind, the ZeroMQ socket is write-only; PUB\n sockets don't even have a read function. Thus, there is no state\n-introduced into bitcoind directly. Furthermore, no information is\n+introduced into syscoind directly. Furthermore, no information is\n broadcast that wasn't already received from the public P2P network.\n \n No authentication or authorization is done on connecting clients; it"
      },
      {
        "sha": "de5e34ea21f102dc6f062b0ae14df4d221547c6e",
        "filename": "libsyscoinconsensus.pc.in",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/libsyscoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/libsyscoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libsyscoinconsensus.pc.in?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -3,9 +3,9 @@ exec_prefix=@exec_prefix@\n libdir=@libdir@\n includedir=@includedir@\n \n-Name: Bitcoin Core consensus library\n-Description: Library for the Bitcoin consensus protocol.\n+Name: Syscoin Core consensus library\n+Description: Library for the Syscoin consensus protocol.\n Version: @PACKAGE_VERSION@\n-Libs: -L${libdir} -lbitcoinconsensus\n+Libs: -L${libdir} -lsyscoinconsensus\n Cflags: -I${includedir}\n Requires.private: libcrypto",
        "previous_filename": "libbitcoinconsensus.pc.in"
      },
      {
        "sha": "7dbd06527fa9909a21e5cd26b3fc64b6c5d943da",
        "filename": "qa/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n The [pull-tester](/qa/pull-tester/) folder contains a script to call\n multiple tests from the [rpc-tests](/qa/rpc-tests/) folder.\n \n-Every pull request to the bitcoin repository is built and run through\n+Every pull request to the syscoin repository is built and run through\n the regression test suite. You can also run all or only individual\n tests locally.\n \n@@ -20,9 +20,9 @@ Possible options:\n \n ```\n   -h, --help            show this help message and exit\n-  --nocleanup           Leave bitcoinds and test.* datadir on exit or error\n-  --noshutdown          Don't stop bitcoinds after the test execution\n-  --srcdir=SRCDIR       Source directory containing bitcoind/bitcoin-cli\n+  --nocleanup           Leave syscoinds and test.* datadir on exit or error\n+  --noshutdown          Don't stop syscoinds after the test execution\n+  --srcdir=SRCDIR       Source directory containing syscoind/syscoin-cli\n                         (default: ../../src)\n   --tmpdir=TMPDIR       Root directory for datadirs\n   --tracerpc            Print out all RPC calls as they are made\n@@ -36,7 +36,7 @@ output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`).\n A 200-block -regtest blockchain and wallets for four nodes\n is created the first time a regression test is run and\n is stored in the cache/ directory. Each node has 25 mature\n-blocks (25*50=1250 BTC) in its wallet.\n+blocks (25*50=1250 SYS) in its wallet.\n \n After the first run, the cache/ blockchain and wallets are\n copied into a temporary directory and used as the initial\n@@ -47,7 +47,7 @@ to recover with:\n \n ```bash\n rm -rf cache\n-killall bitcoind\n+killall syscoind\n ```\n \n Writing tests"
      },
      {
        "sha": "7882e3ceb71f57eae6befa4563068f057d8e5961",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,7 +17,7 @@\n       interface.\n \n For a description of arguments recognized by test scripts, see\n-`qa/pull-tester/test_framework/test_framework.py:BitcoinTestFramework.main`.\n+`qa/pull-tester/test_framework/test_framework.py:SyscoinTestFramework.main`.\n \n \"\"\"\n \n@@ -34,8 +34,8 @@\n #If imported values are not defined then set to zero (or disabled)\n if not vars().has_key('ENABLE_WALLET'):\n     ENABLE_WALLET=0\n-if not vars().has_key('ENABLE_BITCOIND'):\n-    ENABLE_BITCOIND=0\n+if not vars().has_key('ENABLE_SYSCOIND'):\n+    ENABLE_SYSCOIND=0\n if not vars().has_key('ENABLE_UTILS'):\n     ENABLE_UTILS=0\n if not vars().has_key('ENABLE_ZMQ'):\n@@ -62,8 +62,8 @@\n \n #Set env vars\n buildDir = BUILDDIR\n-os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n-os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n+os.environ[\"SYSCOIND\"] = buildDir + '/src/syscoind' + EXEEXT\n+os.environ[\"SYSCOINCLI\"] = buildDir + '/src/syscoin-cli' + EXEEXT\n \n #Disable Windows tests by default\n if EXEEXT == \".exe\" and \"-win\" not in opts:\n@@ -136,7 +136,7 @@ def runtests():\n         coverage = RPCCoverage()\n         print(\"Initializing coverage directory at %s\\n\" % coverage.dir)\n \n-    if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n+    if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_SYSCOIND == 1):\n         rpcTestDir = buildDir + '/qa/rpc-tests/'\n         run_extended = '-extended' in opts\n         cov_flag = coverage.flag if coverage else ''\n@@ -182,7 +182,7 @@ def runtests():\n             coverage.cleanup()\n \n     else:\n-        print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n+        print \"No rpc tests to run. Wallet, utils, and syscoind must all be enabled\"\n \n \n class RPCCoverage(object):\n@@ -192,7 +192,7 @@ class RPCCoverage(object):\n     Coverage calculation works by having each test script subprocess write\n     coverage files into a particular directory. These files contain the RPC\n     commands invoked during testing, as well as a complete listing of RPC\n-    commands per `bitcoin-cli help` (`rpc_interface.txt`).\n+    commands per `syscoin-cli help` (`rpc_interface.txt`).\n \n     After all tests complete, the commands run are combined and diff'd against\n     the complete list to calculate uncovered RPC commands."
      },
      {
        "sha": "c5e1f46c838686018591fcaa0f4129157f5e5044",
        "filename": "qa/pull-tester/run-syscoind-for-test.sh.in",
        "status": "renamed",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/pull-tester/run-syscoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/pull-tester/run-syscoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-syscoind-for-test.sh.in?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,20 +1,20 @@\n #!/bin/bash\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n-DATADIR=\"@abs_top_builddir@/.bitcoin\"\n+DATADIR=\"@abs_top_builddir@/.syscoin\"\n rm -rf \"$DATADIR\"\n mkdir -p \"$DATADIR\"/regtest\n touch \"$DATADIR/regtest/debug.log\"\n tail -q -n 1 -F \"$DATADIR/regtest/debug.log\" | grep -m 1 -q \"Done loading\" &\n WAITER=$!\n PORT=`expr 10000 + $$ % 55536`\n-\"@abs_top_builddir@/src/bitcoind@EXEEXT@\" -connect=0.0.0.0 -datadir=\"$DATADIR\" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &\n-BITCOIND=$!\n+\"@abs_top_builddir@/src/syscoind@EXEEXT@\" -connect=0.0.0.0 -datadir=\"$DATADIR\" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &\n+SYSCOIND=$!\n \n #Install a watchdog.\n-(sleep 10 && kill -0 $WAITER 2>/dev/null && kill -9 $BITCOIND $$)&\n+(sleep 10 && kill -0 $WAITER 2>/dev/null && kill -9 $SYSCOIND $$)&\n wait $WAITER\n \n if [ -n \"$TIMEOUT\" ]; then\n@@ -25,8 +25,8 @@ else\n   RETURN=$?\n fi\n \n-(sleep 15 && kill -0 $BITCOIND 2>/dev/null && kill -9 $BITCOIND $$)&\n-kill $BITCOIND && wait $BITCOIND\n+(sleep 15 && kill -0 $SYSCOIND 2>/dev/null && kill -9 $SYSCOIND $$)&\n+kill $SYSCOIND && wait $SYSCOIND\n \n # timeout returns 124 on timeout, otherwise the return value of the child\n ",
        "previous_filename": "qa/pull-tester/run-bitcoind-for-test.sh.in"
      },
      {
        "sha": "80692e215823850cbc1e24780233a5fee6845a1e",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,8 +8,8 @@ EXEEXT=\"@EXEEXT@\"\n \n # These will turn into comments if they were disabled when configuring.\n @ENABLE_WALLET_TRUE@ENABLE_WALLET=1\n-@BUILD_BITCOIN_UTILS_TRUE@ENABLE_UTILS=1\n-@BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n+@BUILD_SYSCOIN_UTILS_TRUE@ENABLE_UTILS=1\n+@BUILD_SYSCOIND_TRUE@ENABLE_SYSCOIND=1\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1\n \n "
      },
      {
        "sha": "5235a0d50f2d5143523b50e15caaddd0117dfea5",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@ Regression tests\n ================\n \n ### [test_framework/authproxy.py](test_framework/authproxy.py)\n-Taken from the [python-bitcoinrpc repository](https://github.com/jgarzik/python-bitcoinrpc).\n+Taken from the [python-syscoinrpc repository](https://github.com/jgarzik/python-syscoinrpc).\n \n ### [test_framework/test_framework.py](test_framework/test_framework.py)\n Base class for new regression tests.\n@@ -11,19 +11,19 @@ Base class for new regression tests.\n Generally useful functions.\n \n ### [test_framework/mininode.py](test_framework/mininode.py)\n-Basic code to support p2p connectivity to a bitcoind.\n+Basic code to support p2p connectivity to a syscoind.\n \n ### [test_framework/comptool.py](test_framework/comptool.py)\n Framework for comparison-tool style, p2p tests.\n \n ### [test_framework/script.py](test_framework/script.py)\n-Utilities for manipulating transaction scripts (originally from python-bitcoinlib)\n+Utilities for manipulating transaction scripts (originally from python-syscoinlib)\n \n ### [test_framework/blockstore.py](test_framework/blockstore.py)\n Implements disk-backed block and tx storage.\n \n ### [test_framework/key.py](test_framework/key.py)\n-Wrapper around OpenSSL EC_Key (originally from python-bitcoinlib)\n+Wrapper around OpenSSL EC_Key (originally from python-syscoinlib)\n \n ### [test_framework/bignum.py](test_framework/bignum.py)\n Helpers for script.py\n@@ -41,10 +41,10 @@ over the network (```CBlock```, ```CTransaction```, etc, along with the network-\n wrappers for them, ```msg_block```, ```msg_tx```, etc).\n \n * P2P tests have two threads.  One thread handles all network communication\n-with the bitcoind(s) being tested (using python's asyncore package); the other\n+with the syscoind(s) being tested (using python's asyncore package); the other\n implements the test logic.\n \n-* ```NodeConn``` is the class used to connect to a bitcoind.  If you implement\n+* ```NodeConn``` is the class used to connect to a syscoind.  If you implement\n a callback class that derives from ```NodeConnCB``` and pass that to the\n ```NodeConn``` object, your code will receive the appropriate callbacks when\n events of interest arrive.\n@@ -64,13 +64,13 @@ is tested.  Examples: ```p2p-accept-block.py```, ```maxblocksinflight.py```.\n ## Comptool\n \n * Testing framework for writing tests that compare the block/tx acceptance\n-behavior of a bitcoind against 1 or more other bitcoind instances, or against\n+behavior of a syscoind against 1 or more other syscoind instances, or against\n known outcomes, or both.\n \n * Set the ```num_nodes``` variable (defined in ```ComparisonTestFramework```) to start up\n 1 or more nodes.  If using 1 node, then ```--testbinary``` can be used as a command line\n-option to change the bitcoind binary used by the test.  If using 2 or more nodes,\n-then ```--refbinary``` can be optionally used to change the bitcoind that will be used\n+option to change the syscoind binary used by the test.  If using 2 or more nodes,\n+then ```--refbinary``` can be optionally used to change the syscoind that will be used\n on nodes 2 and up.\n \n * Implement a (generator) function called ```get_tests()``` which yields ```TestInstance```s.\n@@ -79,13 +79,13 @@ Each ```TestInstance``` consists of:\n     * ```object``` is a ```CBlock```, ```CTransaction```, or\n     ```CBlockHeader```.  ```CBlock```'s and ```CTransaction```'s are tested for\n     acceptance.  ```CBlockHeader```s can be used so that the test runner can deliver\n-    complete headers-chains when requested from the bitcoind, to allow writing\n+    complete headers-chains when requested from the syscoind, to allow writing\n     tests where blocks can be delivered out of order but still processed by\n-    headers-first bitcoind's.\n+    headers-first syscoind's.\n     * ```outcome``` is ```True```, ```False```, or ```None```.  If ```True```\n     or ```False```, the tip is compared with the expected tip -- either the\n     block passed in, or the hash specified as the optional 3rd entry.  If\n-    ```None``` is specified, then the test will compare all the bitcoind's\n+    ```None``` is specified, then the test will compare all the syscoind's\n     being tested to see if they all agree on what the best tip is.\n     * ```hash``` is the block hash of the tip to compare against. Optional to\n     specify; if left out then the hash of the block passed in will be used as\n@@ -99,7 +99,7 @@ Each ```TestInstance``` consists of:\n     sequence and synced (this is slower when processing many blocks).\n   - ```sync_every_transaction```: ```True/False```.  Analogous to\n     ```sync_every_block```, except if the outcome on the last tx is \"None\",\n-    then the contents of the entire mempool are compared across all bitcoind\n+    then the contents of the entire mempool are compared across all syscoind\n     connections.  If ```True``` or ```False```, then only the last tx's\n     acceptance is tested against the given outcome.\n "
      },
      {
        "sha": "54922ab0eafbdd4ebcc40fe4021398b93ee41861",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,18 +1,18 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test the CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n-class BIP65Test(BitcoinTestFramework):\n+class BIP65Test(SyscoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "85c2da4512857244c26617bc6db4518ea7434abb",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,18 +1,18 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test the BIP66 changeover logic\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n-class BIP66Test(BitcoinTestFramework):\n+class BIP66Test(SyscoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "5301c56c8905f2d415abba979cd421ff547ea6ea",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,15 +9,15 @@\n \n import decimal\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import (\n     initialize_chain,\n     assert_equal,\n     start_nodes,\n     connect_nodes_bi,\n )\n \n-class BlockchainTest(BitcoinTestFramework):\n+class BlockchainTest(SyscoinTestFramework):\n     \"\"\"\n     Test blockchain-related RPC calls:\n "
      },
      {
        "sha": "39066e2363a063120a4e1ee4f11aeaa146627963",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,15 +1,15 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import *\n from binascii import hexlify, unhexlify\n from cStringIO import StringIO\n \n-class DecodeScriptTest(BitcoinTestFramework):\n+class DecodeScriptTest(SyscoinTestFramework):\n     \"\"\"Tests decoding scripts via RPC command \"decodescript\".\"\"\"\n \n     def setup_chain(self):"
      },
      {
        "sha": "3b40cc510065c386f91b62aeba251b21b4f00009",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Exercise API with -disablewallet.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n-class DisableWalletTest (BitcoinTestFramework):\n+class DisableWalletTest (SyscoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n@@ -22,7 +22,7 @@ def setup_network(self, split=False):\n         self.sync_all()\n \n     def run_test (self):\n-        # Check regression: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880\n+        # Check regression: https://github.com/syscoin/syscoin/issues/6963#issuecomment-154548880\n         x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n         assert(x['isvalid'] == False)\n         x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')"
      },
      {
        "sha": "e998104877aa20e107885f725b85024d96748519",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,18 +1,18 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test -alertnotify \n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n-class ForkNotifyTest(BitcoinTestFramework):\n+class ForkNotifyTest(SyscoinTestFramework):\n \n     alert_filename = None  # Set by setup_network\n "
      },
      {
        "sha": "3dc1e7538126227171a5e20782ebf6f46ae66d6a",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,15 +1,15 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from pprint import pprint\n from time import sleep\n \n # Create one-input, one-output, no-fee transaction:\n-class RawTransactionsTest(BitcoinTestFramework):\n+class RawTransactionsTest(SyscoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n@@ -418,7 +418,7 @@ def run_test(self):\n         mSigObj = self.nodes[2].addmultisigaddress(2, [addr1Obj['pubkey'], addr2Obj['pubkey']])\n \n \n-        # send 1.2 BTC to msig addr\n+        # send 1.2 SYS to msig addr\n         txId = self.nodes[0].sendtoaddress(mSigObj, 1.2);\n         self.sync_all()\n         self.nodes[1].generate(1)\n@@ -444,7 +444,7 @@ def run_test(self):\n         self.nodes[1].encryptwallet(\"test\")\n         self.nodes.pop(1)\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n \n         self.nodes = start_nodes(4, self.options.tmpdir)\n "
      },
      {
        "sha": "6b27e8ee4ed7953d8b5d2db6e0277ecc91c520df",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n \n@@ -43,7 +43,7 @@ def __init__(self, node):\n     def run(self):\n         self.node.getblocktemplate({'longpollid':self.longpollid})\n \n-class GetBlockTemplateLPTest(BitcoinTestFramework):\n+class GetBlockTemplateLPTest(SyscoinTestFramework):\n     '''\n     Test longpolling with getblocktemplate.\n     '''"
      },
      {
        "sha": "ea30f1589bf36cb6735f0581656e8b5a91da8093",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n from binascii import a2b_hex, b2a_hex\n@@ -87,7 +87,7 @@ def assert_template(node, tmpl, txlist, expect):\n     if rsp != expect:\n         raise AssertionError('unexpected: %s' % (rsp,))\n \n-class GetBlockTemplateProposalTest(BitcoinTestFramework):\n+class GetBlockTemplateProposalTest(SyscoinTestFramework):\n     '''\n     Test block proposals with getblocktemplate.\n     '''"
      },
      {
        "sha": "9c95735a268134c237a3cf12ecdbf6fd108e9e51",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the getchaintips API.  We introduce a network split, work\n # on chains of different lengths, and join the network together again.\n # This gives us two tips, verify that it works.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import assert_equal\n \n-class GetChainTipsTest (BitcoinTestFramework):\n+class GetChainTipsTest (SyscoinTestFramework):\n \n     def run_test (self):\n-        BitcoinTestFramework.run_test (self)\n+        SyscoinTestFramework.run_test (self)\n \n         tips = self.nodes[0].getchaintips ()\n         assert_equal (len (tips), 1)"
      },
      {
        "sha": "8bd2a9cc7f73d7a57b5637b2d1b26f722b3b38e9",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test rpc http basics\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import base64\n \n@@ -20,7 +20,7 @@\n except ImportError:\n     import urlparse\n \n-class HTTPBasicsTest (BitcoinTestFramework):\n+class HTTPBasicsTest (SyscoinTestFramework):\n     def setup_nodes(self):\n         return start_nodes(4, self.options.tmpdir)\n \n@@ -95,7 +95,7 @@ def run_test(self):\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n+        assert_equal(conn.sock!=None, True) #connection must be closed because syscoind should use keep-alive by default\n \n         # Check excessive request size\n         conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)"
      },
      {
        "sha": "8222e2cd39d1c11f5dfc1476ac3d0760b3a2acd0",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test InvalidateBlock code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n-class InvalidateTest(BitcoinTestFramework):\n+class InvalidateTest(SyscoinTestFramework):\n     \n         \n     def setup_chain(self):"
      },
      {
        "sha": "8cf7503c850d04af14a4b27b929095eba6c0fcc8",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the wallet keypool, and interaction with wallet encryption/locking\n \n-# Add python-bitcoinrpc to module search path:\n+# Add python-syscoinrpc to module search path:\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n \n@@ -32,13 +32,13 @@ def check_array_result(object_array, to_match, expected):\n     if num_matched == 0:\n         raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n \n-class KeyPoolTest(BitcoinTestFramework):\n+class KeyPoolTest(SyscoinTestFramework):\n \n     def run_test(self):\n         nodes = self.nodes\n         # Encrypt wallet and wait to terminate\n         nodes[0].encryptwallet('test')\n-        bitcoind_processes[0].wait()\n+        syscoind_processes[0].wait()\n         # Restart node 0\n         nodes[0] = start_node(0, self.options.tmpdir)\n         # Keep creating keys"
      },
      {
        "sha": "d1bc35be69a914b376f333c2dfe78c7e70dd2818",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the listtransactions API\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n \n@@ -30,7 +30,7 @@ def check_array_result(object_array, to_match, expected):\n     if num_matched == 0:\n         raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n \n-class ListTransactionsTest(BitcoinTestFramework):\n+class ListTransactionsTest(SyscoinTestFramework):\n \n     def run_test(self):\n         # Simple send, 0 to 1:"
      },
      {
        "sha": "151e3026864650e7ddaa9c141fb95c2e59c3a540",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -5,7 +5,7 @@\n #\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import logging\n \n@@ -75,10 +75,10 @@ def run(self):\n         self.connection.disconnect_node()\n \n         \n-class MaxBlocksInFlightTest(BitcoinTestFramework):\n+class MaxBlocksInFlightTest(SyscoinTestFramework):\n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n+                          default=os.getenv(\"SYSCOIND\", \"syscoind\"),\n                           help=\"Binary to test max block requests behavior\")\n \n     def setup_chain(self):"
      },
      {
        "sha": "835fee07bff36ae652415ae3dcdc0d0407ef36b5",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -5,7 +5,7 @@\n #\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from test_framework.comptool import wait_until\n import time\n@@ -81,7 +81,7 @@ def received_pong():\n         self.ping_counter += 1\n         return success\n \n-class MaxUploadTest(BitcoinTestFramework):\n+class MaxUploadTest(SyscoinTestFramework):\n     def __init__(self):\n         self.utxo = []\n \n@@ -103,8 +103,8 @@ def __init__(self):\n  \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"SYSCOIND\", \"syscoind\"),\n+                          help=\"syscoind binary to test\")\n \n     def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, 2)"
      },
      {
        "sha": "90842076fb9d5135b8b372741b9805f10d01c222",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,17 +1,17 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Test descendant package tracking code\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25\n \n-class MempoolPackagesTest(BitcoinTestFramework):\n+class MempoolPackagesTest(SyscoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "a00e6ee4c53bafbceac8202f51a62926ad19d923",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,13 +8,13 @@\n # that spend (directly or indirectly) coinbase transactions.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n # Create one-input, one-output, no-fee transaction:\n-class MempoolCoinbaseTest(BitcoinTestFramework):\n+class MempoolCoinbaseTest(SyscoinTestFramework):\n \n     alert_filename = None  # Set by setup_network\n "
      },
      {
        "sha": "3a981123762afe6b90745f1c453146fe391bb579",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,13 +8,13 @@\n # the blockchain is re-organized.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n # Create one-input, one-output, no-fee transaction:\n-class MempoolCoinbaseTest(BitcoinTestFramework):\n+class MempoolCoinbaseTest(SyscoinTestFramework):\n \n     def setup_network(self):\n         # Just need one node for this test"
      },
      {
        "sha": "057dd83deb35c46ae2e05a458cf000cd2195e5c6",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -13,13 +13,13 @@\n # but less mature coinbase spends are NOT.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n # Create one-input, one-output, no-fee transaction:\n-class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n+class MempoolSpendCoinbaseTest(SyscoinTestFramework):\n \n     def setup_network(self):\n         # Just need one node for this test"
      },
      {
        "sha": "334002a1ad7ef32e2a9b1c12201fcc7d1759269c",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,18 +1,18 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test merkleblock fetch/validation\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os\n import shutil\n \n-class MerkleBlockTest(BitcoinTestFramework):\n+class MerkleBlockTest(SyscoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)"
      },
      {
        "sha": "5eafcbd18109c5ec01e4c4f990543ad23edd061b",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test mulitple rpc user config option rpcauth\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import base64\n \n@@ -20,17 +20,17 @@\n except ImportError:\n     import urlparse\n \n-class HTTPBasicsTest (BitcoinTestFramework):\n+class HTTPBasicsTest (SyscoinTestFramework):\n     def setup_nodes(self):\n         return start_nodes(4, self.options.tmpdir)\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n         initialize_chain(self.options.tmpdir)\n-        #Append rpcauth to bitcoin.conf before initialization\n+        #Append rpcauth to syscoin.conf before initialization\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n         rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n-        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a') as f:\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"syscoin.conf\"), 'a') as f:\n             f.write(rpcauth+\"\\n\")\n             f.write(rpcauth2+\"\\n\")\n "
      },
      {
        "sha": "2d87ec87cfccb3cd064a56913dfb3807bae1de93",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test node handling\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import base64\n \n@@ -20,7 +20,7 @@\n except ImportError:\n     import urlparse\n \n-class NodeHandlingTest (BitcoinTestFramework):\n+class NodeHandlingTest (SyscoinTestFramework):\n     def run_test(self):\n         ###########################\n         # setban/listbanned tests #"
      },
      {
        "sha": "87026857df5765846c84b1040811d493caf2a3aa",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -5,7 +5,7 @@\n #\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import time\n from test_framework.blocktools import create_block, create_coinbase\n@@ -106,11 +106,11 @@ def sync_with_ping(self, timeout=30):\n         return received_pong\n \n \n-class AcceptBlockTest(BitcoinTestFramework):\n+class AcceptBlockTest(SyscoinTestFramework):\n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"SYSCOIND\", \"syscoind\"),\n+                          help=\"syscoind binary to test\")\n \n     def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, 2)"
      },
      {
        "sha": "d6c5f62e9684a2eda54602e349634b49966b34ba",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -23,7 +23,7 @@ def __init__(self, tx = CTransaction(), n = -1):\n         self.n = n  # the output we're spending\n \n '''\n-This reimplements tests from the bitcoinj/FullBlockTestGenerator used\n+This reimplements tests from the syscoinj/FullBlockTestGenerator used\n by the pull-tester.\n \n We use the testing framework in which we expect a particular answer from"
      },
      {
        "sha": "01b46502e7da6f18f87e7230686d9d7aeef5b2c5",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,18 +1,18 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test PrioritiseTransaction code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n COIN = 100000000\n \n-class PrioritiseTransactionTest(BitcoinTestFramework):\n+class PrioritiseTransactionTest(SyscoinTestFramework):\n \n     def __init__(self):\n         # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create"
      },
      {
        "sha": "8932e77c57be8b7a50c54ba674f0daf19112a1be",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n import socket\n@@ -8,14 +8,14 @@\n import time, os\n \n from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n '''\n Test plan:\n-- Start bitcoind's with different proxy configurations\n+- Start syscoind's with different proxy configurations\n - Use addnode to initiate connections\n - Verify that proxies are connected to, and the right connection command is given\n-- Proxy configurations to test on bitcoind side:\n+- Proxy configurations to test on syscoind side:\n     - `-proxy` (proxy everything)\n     - `-onion` (proxy just onions)\n     - `-proxyrandomize` Circuit randomization\n@@ -25,16 +25,16 @@\n     - proxy on IPv6\n \n - Create various proxies (as threads)\n-- Create bitcoinds that connect to them\n-- Manipulate the bitcoinds using addnode (onetry) an observe effects\n+- Create syscoinds that connect to them\n+- Manipulate the syscoinds using addnode (onetry) an observe effects\n \n addnode connect to IPv4\n addnode connect to IPv6\n addnode connect to onion\n addnode connect to generic DNS name\n '''\n \n-class ProxyTest(BitcoinTestFramework):        \n+class ProxyTest(SyscoinTestFramework):        \n     def __init__(self):\n         # Create two proxies on different ports\n         # ... one unauthenticated\n@@ -77,7 +77,7 @@ def node_test(self, node, proxies, auth, test_onion=True):\n         node.addnode(\"15.61.23.23:1234\", \"onetry\")\n         cmd = proxies[0].queue.get()\n         assert(isinstance(cmd, Socks5Command))\n-        # Note: bitcoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n+        # Note: syscoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n         assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n         assert_equal(cmd.addr, \"15.61.23.23\")\n         assert_equal(cmd.port, 1234)\n@@ -90,7 +90,7 @@ def node_test(self, node, proxies, auth, test_onion=True):\n         node.addnode(\"[1233:3432:2434:2343:3234:2345:6546:4534]:5443\", \"onetry\")\n         cmd = proxies[1].queue.get()\n         assert(isinstance(cmd, Socks5Command))\n-        # Note: bitcoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n+        # Note: syscoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n         assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n         assert_equal(cmd.addr, \"1233:3432:2434:2343:3234:2345:6546:4534\")\n         assert_equal(cmd.port, 5443)\n@@ -101,11 +101,11 @@ def node_test(self, node, proxies, auth, test_onion=True):\n \n         if test_onion:\n             # Test: outgoing onion connection through node\n-            node.addnode(\"bitcoinostk4e4re.onion:8333\", \"onetry\")\n+            node.addnode(\"syscoinostk4e4re.onion:8333\", \"onetry\")\n             cmd = proxies[2].queue.get()\n             assert(isinstance(cmd, Socks5Command))\n             assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n-            assert_equal(cmd.addr, \"bitcoinostk4e4re.onion\")\n+            assert_equal(cmd.addr, \"syscoinostk4e4re.onion\")\n             assert_equal(cmd.port, 8333)\n             if not auth:\n                 assert_equal(cmd.username, None)"
      },
      {
        "sha": "1d6a6d067fac7a5f448476dbf37058d6e08d01c8",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -11,14 +11,14 @@\n # This test takes 30 mins or more (up to 2 hours)\n # ********\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os.path\n \n def calc_usage(blockdir):\n     return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(blockdir+f))/(1024*1024)\n \n-class PruneTest(BitcoinTestFramework):\n+class PruneTest(SyscoinTestFramework):\n \n     def __init__(self):\n         self.utxo = []"
      },
      {
        "sha": "6e5222c92c3475a465d1bf3aa15ee0b863e3c11c",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,13 +8,13 @@\n # that spend (directly or indirectly) coinbase transactions.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from pprint import pprint\n from time import sleep\n \n # Create one-input, one-output, no-fee transaction:\n-class RawTransactionsTest(BitcoinTestFramework):\n+class RawTransactionsTest(SyscoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n@@ -24,7 +24,7 @@ def setup_network(self, split=False):\n         self.nodes = start_nodes(3, self.options.tmpdir)\n \n         #connect to a local machine for debugging\n-        #url = \"http://bitcoinrpc:DP6DvqZtqXarpeNWyN3LZTFchCCyCUuHwNF7E8pX99x1@%s:%d\" % ('127.0.0.1', 18332)\n+        #url = \"http://syscoinrpc:DP6DvqZtqXarpeNWyN3LZTFchCCyCUuHwNF7E8pX99x1@%s:%d\" % ('127.0.0.1', 18332)\n         #proxy = AuthServiceProxy(url)\n         #proxy.url = url # store URL on proxy for info\n         #self.nodes.append(proxy)\n@@ -82,7 +82,7 @@ def run_test(self):\n         #use balance deltas instead of absolute values\n         bal = self.nodes[2].getbalance()\n \n-        # send 1.2 BTC to msig adr\n+        # send 1.2 SYS to msig adr\n         txId       = self.nodes[0].sendtoaddress(mSigObj, 1.2);\n         self.sync_all()\n         self.nodes[0].generate(1)"
      },
      {
        "sha": "599fb1e8bb1292c31e0f85cd3bcbda1533dd0008",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the listreceivedbyaddress API\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n \n@@ -51,7 +51,7 @@ def check_array_result(object_array, to_match, expected, should_not_find = False\n     if num_matched > 0 and should_not_find == True:\n         raise AssertionError(\"Objects was matched %s\"%(str(to_match)))\n \n-class ReceivedByTest(BitcoinTestFramework):\n+class ReceivedByTest(SyscoinTestFramework):\n \n     def run_test(self):\n         '''"
      },
      {
        "sha": "cfee9ef2f760e65c059d0488a7a683edfa7d430d",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test -reindex with CheckBlockIndex\n #\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import os.path\n \n-class ReindexTest(BitcoinTestFramework):\n+class ReindexTest(SyscoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n@@ -24,7 +24,7 @@ def setup_network(self):\n     def run_test(self):\n         self.nodes[0].generate(3)\n         stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         self.nodes[0]=start_node(0, self.options.tmpdir, [\"-debug\", \"-reindex\", \"-checkblockindex=1\"])\n         assert_equal(self.nodes[0].getblockcount(), 3)\n         print \"Success\""
      },
      {
        "sha": "79a177699d75e2832e8516752433da8ade7408c3",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test replace by fee code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from test_framework.script import *\n from test_framework.mininode import *\n@@ -68,7 +68,7 @@ def make_utxo(node, amount, confirmed=True, scriptPubKey=CScript([1])):\n \n     return COutPoint(int(txid, 16), 0)\n \n-class ReplaceByFeeTest(BitcoinTestFramework):\n+class ReplaceByFeeTest(SyscoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []\n@@ -133,7 +133,7 @@ def test_simple_doublespend(self):\n         else:\n             assert(False)\n \n-        # Extra 0.1 BTC fee\n+        # Extra 0.1 SYS fee\n         tx1b = CTransaction()\n         tx1b.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n         tx1b.vout = [CTxOut(0.9*COIN, CScript([b'b']))]\n@@ -167,7 +167,7 @@ def test_doublespend_chain(self):\n             prevout = COutPoint(int(txid, 16), 0)\n \n         # Whether the double-spend is allowed is evaluated by including all\n-        # child fees - 40 BTC - so this attempt is rejected.\n+        # child fees - 40 SYS - so this attempt is rejected.\n         dbl_tx = CTransaction()\n         dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n         dbl_tx.vout = [CTxOut(initial_nValue - 30*COIN, CScript([1]))]\n@@ -245,7 +245,7 @@ def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.0001*COIN, _tota\n         else:\n             assert(False)\n \n-        # 1 BTC fee is enough\n+        # 1 SYS fee is enough\n         dbl_tx = CTransaction()\n         dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n         dbl_tx.vout = [CTxOut(initial_nValue - fee*n - 1*COIN, CScript([1]))]"
      },
      {
        "sha": "7f288795687b38c9eeb91da6c2902b969f592a2d",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +8,7 @@\n #\n \n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from struct import *\n import binascii\n@@ -52,7 +52,7 @@ def http_post_call(host, port, path, requestdata = '', response_object = 0):\n \n     return conn.getresponse().read()\n \n-class RESTTest (BitcoinTestFramework):\n+class RESTTest (SyscoinTestFramework):\n     FORMAT_SEPARATOR = \".\"\n \n     def setup_chain(self):"
      },
      {
        "sha": "72cca78806740bce9a486873ef84cdbe46476503",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Test for -rpcbind, as well as -rpcallowip and -rpcconnect\n \n-# Add python-bitcoinrpc to module search path:\n+# Add python-syscoinrpc to module search path:\n import os\n import sys\n \n@@ -31,11 +31,11 @@ def run_bind_test(tmpdir, allow_ips, connect_to, addresses, expected):\n     binds = ['-rpcbind='+addr for addr in addresses]\n     nodes = start_nodes(1, tmpdir, [base_args + binds], connect_to)\n     try:\n-        pid = bitcoind_processes[0].pid\n+        pid = syscoind_processes[0].pid\n         assert_equal(set(get_bind_addrs(pid)), set(expected))\n     finally:\n         stop_nodes(nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n \n def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     '''\n@@ -52,7 +52,7 @@ def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     finally:\n         node = None # make sure connection will be garbage collected and closed\n         stop_nodes(nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n \n \n def run_test(tmpdir):\n@@ -107,9 +107,9 @@ def main():\n \n     parser = optparse.OptionParser(usage=\"%prog [options]\")\n     parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+                      help=\"Leave syscoinds and test.* datadir on exit or error\")\n     parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n+                      help=\"Source directory containing syscoind/syscoin-cli (default: %default%)\")\n     parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                       help=\"Root directory for datadirs\")\n     (options, args) = parser.parse_args()\n@@ -138,7 +138,7 @@ def main():\n \n     if not options.nocleanup:\n         print(\"Cleaning up\")\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         shutil.rmtree(options.tmpdir)\n \n     if success:"
      },
      {
        "sha": "73f26eb641ac797fbdeb94a3749500ec2e06cf9a",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -5,7 +5,7 @@\n #\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import time\n from test_framework.blocktools import create_block, create_coinbase\n@@ -209,7 +209,7 @@ class TestNode(BaseNode):\n     def __init__(self):\n         BaseNode.__init__(self)\n \n-class SendHeadersTest(BitcoinTestFramework):\n+class SendHeadersTest(SyscoinTestFramework):\n     def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, 2)\n "
      },
      {
        "sha": "93ad268a01aa8a84c9a05b2304dfa3d02796789f",
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n \n-class SignRawTransactionsTest(BitcoinTestFramework):\n+class SignRawTransactionsTest(SyscoinTestFramework):\n     \"\"\"Tests transaction signing via RPC command \"signrawtransaction\".\"\"\"\n \n     def setup_chain(self):"
      },
      {
        "sha": "d11828f5a8aa3fa2b6f6db839d7badccbf7d783b",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test fee estimation code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n # Construct 2 trivial P2SH's and the ScriptSigs that spend them\n@@ -144,7 +144,7 @@ def check_estimates(node, fees_seen, max_invalid, print_estimates = True):\n     return all_estimates\n \n \n-class EstimateFeeTest(BitcoinTestFramework):\n+class EstimateFeeTest(SyscoinTestFramework):\n \n     def setup_network(self):\n         '''"
      },
      {
        "sha": "90aafa403d01c32ecde8ac81893bba06de712c27",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -51,7 +51,7 @@\n \n HTTP_TIMEOUT = 30\n \n-log = logging.getLogger(\"BitcoinRPC\")\n+log = logging.getLogger(\"SyscoinRPC\")\n \n class JSONRPCException(Exception):\n     def __init__(self, rpc_error):"
      },
      {
        "sha": "49725613ccf98d4497e64c6733d72f685414d4aa",
        "filename": "qa/rpc-tests/test_framework/bignum.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/bignum.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@\n #\n # bignum.py\n #\n-# This file is copied from python-bitcoinlib.\n+# This file is copied from python-syscoinlib.\n #\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -83,7 +83,7 @@ def mpi2bn(s):\n         return -v\n     return v\n \n-# bitcoin-specific little endian format, with implicit size\n+# syscoin-specific little endian format, with implicit size\n def mpi2vch(s):\n     r = s[4:]           # strip size\n     r = r[::-1]         # reverse string, converting BE->LE"
      },
      {
        "sha": "2e9a2936e57beab342dd412eff5466505f71612d",
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -9,7 +9,7 @@\n from util import p2p_port\n \n '''\n-This is a tool for comparing two or more bitcoinds to each other\n+This is a tool for comparing two or more syscoinds to each other\n using a script provided.\n \n To use, create a class that implements get_tests(), and pass it in"
      },
      {
        "sha": "75f84dbe061ac7633b36bcc182fd12616c4d706d",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -68,7 +68,7 @@ def get_filename(dirname, n_node):\n \n def write_all_rpc_commands(dirname, node):\n     \"\"\"\n-    Write out a list of all RPC functions available in `bitcoin-cli` for\n+    Write out a list of all RPC functions available in `syscoin-cli` for\n     coverage comparison. This will only happen once per coverage\n     directory.\n "
      },
      {
        "sha": "b6e69ae31a18939a1e4d1839a7b36b8e5421fc3c",
        "filename": "qa/rpc-tests/test_framework/key.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/key.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,7 +2,7 @@\n #\n # key.py - OpenSSL wrapper\n #\n-# This file is modified from python-bitcoinlib.\n+# This file is modified from python-syscoinlib.\n #\n \n \"\"\"ECC secp256k1 crypto routines"
      },
      {
        "sha": "239bdae81c4288b260353c10841f1e36a87aa2a6",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,17 +1,17 @@\n-# mininode.py - Bitcoin P2P network half-a-node\n+# mininode.py - Syscoin P2P network half-a-node\n #\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n # This python code was modified from ArtForz' public domain  half-a-node, as\n # found in the mini-node branch of http://github.com/jgarzik/pynode.\n #\n-# NodeConn: an object which manages p2p connectivity to a bitcoin node\n+# NodeConn: an object which manages p2p connectivity to a syscoin node\n # NodeConnCB: a base class that describes the interface for receiving\n #             callbacks with network messages from a NodeConn\n # CBlock, CTransaction, CBlockHeader, CTxIn, CTxOut, etc....:\n #     data structures that should map to corresponding structures in\n-#     bitcoin/primitives\n+#     syscoin/primitives\n # msg_block, msg_tx, msg_headers, etc.:\n #     data structures that represent network messages\n # ser_*, deser_*: functions that handle serialization/deserialization\n@@ -231,7 +231,7 @@ def ser_int_vector(l):\n     return r\n \n \n-# Objects that map to bitcoind objects, which can be serialized/deserialized\n+# Objects that map to syscoind objects, which can be serialized/deserialized\n \n class CAddress(object):\n     def __init__(self):\n@@ -956,7 +956,7 @@ def __init__(self):\n         self.headers = []\n \n     def deserialize(self, f):\n-        # comment in bitcoind indicates these should be deserialized as blocks\n+        # comment in syscoind indicates these should be deserialized as blocks\n         blocks = deser_vector(f, CBlock)\n         for x in blocks:\n             self.headers.append(CBlockHeader(x))\n@@ -1111,7 +1111,7 @@ def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=1):\n         vt.addrFrom.ip = \"0.0.0.0\"\n         vt.addrFrom.port = 0\n         self.send_message(vt, True)\n-        print 'MiniNode: Connecting to Bitcoin Node IP # ' + dstaddr + ':' \\\n+        print 'MiniNode: Connecting to Syscoin Node IP # ' + dstaddr + ':' \\\n             + str(dstport)\n \n         try:"
      },
      {
        "sha": "61112d94417c34bfb53d514d8043e706017020ef",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "797da0bf32560ea37ba1730499510100864fada7",
        "filename": "qa/rpc-tests/test_framework/script.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/script.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n #\n # script.py\n #\n-# This file is modified from python-bitcoinlib.\n+# This file is modified from python-syscoinlib.\n #\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php."
      },
      {
        "sha": "e6a9251581aadefd80abf0b221ab112ba3e9aeda",
        "filename": "qa/rpc-tests/test_framework/socks5.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/socks5.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/socks5.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/socks5.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "c6aac50a449c0aaab8ae3e26eed6781e7f6b6d40",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Base class for RPC testing\n \n-# Add python-bitcoinrpc to module search path:\n+# Add python-syscoinrpc to module search path:\n import os\n import sys\n \n@@ -21,15 +21,15 @@\n     sync_blocks,\n     sync_mempools,\n     stop_nodes,\n-    wait_bitcoinds,\n+    wait_syscoinds,\n     enable_coverage,\n     check_json_precision,\n     initialize_chain_clean,\n )\n from authproxy import AuthServiceProxy, JSONRPCException\n \n \n-class BitcoinTestFramework(object):\n+class SyscoinTestFramework(object):\n \n     # These may be over-ridden by subclasses:\n     def run_test(self):\n@@ -72,7 +72,7 @@ def split_network(self):\n         \"\"\"\n         assert not self.is_network_split\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         self.setup_network(True)\n \n     def sync_all(self):\n@@ -91,19 +91,19 @@ def join_network(self):\n         \"\"\"\n         assert self.is_network_split\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         self.setup_network(False)\n \n     def main(self):\n         import optparse\n \n         parser = optparse.OptionParser(usage=\"%prog [options]\")\n         parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+                          help=\"Leave syscoinds and test.* datadir on exit or error\")\n         parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n+                          help=\"Don't stop syscoinds after the test execution\")\n         parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                          help=\"Source directory containing bitcoind/bitcoin-cli (default: %default)\")\n+                          help=\"Source directory containing syscoind/syscoin-cli (default: %default)\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n         parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n@@ -149,9 +149,9 @@ def main(self):\n         if not self.options.noshutdown:\n             print(\"Stopping nodes\")\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n+            wait_syscoinds()\n         else:\n-            print(\"Note: bitcoinds were not stopped and may still be running\")\n+            print(\"Note: syscoinds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown:\n             print(\"Cleaning up\")\n@@ -165,25 +165,25 @@ def main(self):\n             sys.exit(1)\n \n \n-# Test framework for doing p2p comparison testing, which sets up some bitcoind\n+# Test framework for doing p2p comparison testing, which sets up some syscoind\n # binaries:\n # 1 binary: test binary\n # 2 binaries: 1 test binary, 1 ref binary\n # n>2 binaries: 1 test binary, n-1 ref binaries\n \n-class ComparisonTestFramework(BitcoinTestFramework):\n+class ComparisonTestFramework(SyscoinTestFramework):\n \n     # Can override the num_nodes variable to indicate how many nodes to run.\n     def __init__(self):\n         self.num_nodes = 2\n \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"SYSCOIND\", \"syscoind\"),\n+                          help=\"syscoind binary to test\")\n         parser.add_option(\"--refbinary\", dest=\"refbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to use for reference nodes (if any)\")\n+                          default=os.getenv(\"SYSCOIND\", \"syscoind\"),\n+                          help=\"syscoind binary to use for reference nodes (if any)\")\n \n     def setup_chain(self):\n         print \"Initializing test directory \"+self.options.tmpdir"
      },
      {
        "sha": "468a9b09fe50b1ccb2bc0a56312d8b05aa7e68ec",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,11 +1,11 @@\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n # Helpful routines for regression testing\n #\n \n-# Add python-bitcoinrpc to module search path:\n+# Add python-syscoinrpc to module search path:\n import os\n import sys\n \n@@ -61,7 +61,7 @@ def rpc_port(n):\n     return 12000 + n + os.getpid()%999\n \n def check_json_precision():\n-    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n+    \"\"\"Make sure json library being used does not lose precision converting SYS values\"\"\"\n     n = Decimal(\"20000000.00000003\")\n     satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n     if satoshis != 2000000000000003:\n@@ -95,13 +95,13 @@ def sync_mempools(rpc_connections, wait=1):\n             break\n         time.sleep(wait)\n \n-bitcoind_processes = {}\n+syscoind_processes = {}\n \n def initialize_datadir(dirname, n):\n     datadir = os.path.join(dirname, \"node\"+str(n))\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n-    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n+    with open(os.path.join(datadir, \"syscoin.conf\"), 'w') as f:\n         f.write(\"regtest=1\\n\");\n         f.write(\"rpcuser=rt\\n\");\n         f.write(\"rpcpassword=rt\\n\");\n@@ -114,7 +114,7 @@ def initialize_chain(test_dir):\n     \"\"\"\n     Create (or copy from cache) a 200-block-long chain and\n     4 wallets.\n-    bitcoind and bitcoin-cli must be in search path.\n+    syscoind and syscoin-cli must be in search path.\n     \"\"\"\n \n     if (not os.path.isdir(os.path.join(\"cache\",\"node0\"))\n@@ -128,19 +128,19 @@ def initialize_chain(test_dir):\n                 shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n \n         devnull = open(os.devnull, \"w\")\n-        # Create cache directories, run bitcoinds:\n+        # Create cache directories, run syscoinds:\n         for i in range(4):\n             datadir=initialize_datadir(\"cache\", i)\n-            args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n+            args = [ os.getenv(\"SYSCOIND\", \"syscoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n                 args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n-            bitcoind_processes[i] = subprocess.Popen(args)\n+            syscoind_processes[i] = subprocess.Popen(args)\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-                print \"initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount\"\n-            subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir,\n+                print \"initialize_chain: syscoind started, calling syscoin-cli -rpcwait getblockcount\"\n+            subprocess.check_call([ os.getenv(\"SYSCOINCLI\", \"syscoin-cli\"), \"-datadir=\"+datadir,\n                                     \"-rpcwait\", \"getblockcount\"], stdout=devnull)\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-                print \"initialize_chain: bitcoin-cli -rpcwait getblockcount completed\"\n+                print \"initialize_chain: syscoin-cli -rpcwait getblockcount completed\"\n         devnull.close()\n \n         rpcs = []\n@@ -169,7 +169,7 @@ def initialize_chain(test_dir):\n \n         # Shut them down, and clean up cache directories:\n         stop_nodes(rpcs)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         for i in range(4):\n             os.remove(log_filename(\"cache\", i, \"debug.log\"))\n             os.remove(log_filename(\"cache\", i, \"db.log\"))\n@@ -180,7 +180,7 @@ def initialize_chain(test_dir):\n         from_dir = os.path.join(\"cache\", \"node\"+str(i))\n         to_dir = os.path.join(test_dir,  \"node\"+str(i))\n         shutil.copytree(from_dir, to_dir)\n-        initialize_datadir(test_dir, i) # Overwrite port/rpcport in bitcoin.conf\n+        initialize_datadir(test_dir, i) # Overwrite port/rpcport in syscoin.conf\n \n def initialize_chain_clean(test_dir, num_nodes):\n     \"\"\"\n@@ -213,23 +213,23 @@ def _rpchost_to_args(rpchost):\n \n def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n     \"\"\"\n-    Start a bitcoind and return RPC connection to it\n+    Start a syscoind and return RPC connection to it\n     \"\"\"\n     datadir = os.path.join(dirname, \"node\"+str(i))\n     if binary is None:\n-        binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        binary = os.getenv(\"SYSCOIND\", \"syscoind\")\n     # RPC tests still depend on free transactions\n     args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-blockprioritysize=50000\" ]\n     if extra_args is not None: args.extend(extra_args)\n-    bitcoind_processes[i] = subprocess.Popen(args)\n+    syscoind_processes[i] = subprocess.Popen(args)\n     devnull = open(os.devnull, \"w\")\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-        print \"start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount\"\n-    subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir] +\n+        print \"start_node: syscoind started, calling syscoin-cli -rpcwait getblockcount\"\n+    subprocess.check_call([ os.getenv(\"SYSCOINCLI\", \"syscoin-cli\"), \"-datadir=\"+datadir] +\n                           _rpchost_to_args(rpchost)  +\n                           [\"-rpcwait\", \"getblockcount\"], stdout=devnull)\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-        print \"start_node: calling bitcoin-cli -rpcwait getblockcount returned\"\n+        print \"start_node: calling syscoin-cli -rpcwait getblockcount returned\"\n     devnull.close()\n     url = \"http://rt:rt@%s:%d\" % (rpchost or '127.0.0.1', rpc_port(i))\n \n@@ -242,7 +242,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n \n def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, binary=None):\n     \"\"\"\n-    Start multiple bitcoinds, return RPC connections to them\n+    Start multiple syscoinds, return RPC connections to them\n     \"\"\"\n     if extra_args is None: extra_args = [ None for i in range(num_nodes) ]\n     if binary is None: binary = [ None for i in range(num_nodes) ]\n@@ -253,8 +253,8 @@ def log_filename(dirname, n_node, logname):\n \n def stop_node(node, i):\n     node.stop()\n-    bitcoind_processes[i].wait()\n-    del bitcoind_processes[i]\n+    syscoind_processes[i].wait()\n+    del syscoind_processes[i]\n \n def stop_nodes(nodes):\n     for node in nodes:\n@@ -265,11 +265,11 @@ def set_node_times(nodes, t):\n     for node in nodes:\n         node.setmocktime(t)\n \n-def wait_bitcoinds():\n-    # Wait for all bitcoinds to cleanly exit\n-    for bitcoind in bitcoind_processes.values():\n-        bitcoind.wait()\n-    bitcoind_processes.clear()\n+def wait_syscoinds():\n+    # Wait for all syscoinds to cleanly exit\n+    for syscoind in syscoind_processes.values():\n+        syscoind.wait()\n+    syscoind_processes.clear()\n \n def connect_nodes(from_connection, node_num):\n     ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))"
      },
      {
        "sha": "481068cfeebde35b79517eaeb38f6e0127d957c7",
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,20 +1,20 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test proper accounting with an equivalent malleability clone\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.authproxy import AuthServiceProxy, JSONRPCException\n from decimal import Decimal\n from test_framework.util import *\n import os\n import shutil\n \n-class TxnMallTest(BitcoinTestFramework):\n+class TxnMallTest(SyscoinTestFramework):\n \n     def add_options(self, parser):\n         parser.add_option(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n@@ -25,7 +25,7 @@ def setup_network(self):\n         return super(TxnMallTest, self).setup_network(True)\n \n     def run_test(self):\n-        # All nodes should start with 1,250 BTC:\n+        # All nodes should start with 1,250 SYS:\n         starting_balance = 1250\n         for i in range(4):\n             assert_equal(self.nodes[i].getbalance(), starting_balance)\n@@ -68,7 +68,7 @@ def run_test(self):\n \n         # manipulation 2. createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n         # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n+        # 40 SYS serialized is 00286bee00000000\n         pos0 = 2*(4+1+36+1+4+1)\n         hex40 = \"00286bee00000000\"\n         output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16 : pos0 + 16 + 2], 0)\n@@ -96,7 +96,7 @@ def run_test(self):\n         tx1 = self.nodes[0].gettransaction(txid1)\n         tx2 = self.nodes[0].gettransaction(txid2)\n \n-        # Node0's balance should be starting balance, plus 50BTC for another\n+        # Node0's balance should be starting balance, plus 50SYS for another\n         # matured block, minus tx1 and tx2 amounts, and minus transaction fees:\n         expected = starting_balance + fund_foo_tx[\"fee\"] + fund_bar_tx[\"fee\"]\n         if self.options.mine_block: expected += 50\n@@ -140,7 +140,7 @@ def run_test(self):\n         assert_equal(tx1_clone[\"confirmations\"], 2)\n         assert_equal(tx2[\"confirmations\"], 1)\n \n-        # Check node0's total balance; should be same as before the clone, + 100 BTC for 2 matured,\n+        # Check node0's total balance; should be same as before the clone, + 100 SYS for 2 matured,\n         # less possible orphaned matured subsidy\n         expected += 100\n         if (self.options.mine_block): "
      },
      {
        "sha": "26b47d33c27bcc48dfc505480e000482f824a5c0",
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test proper accounting with a double-spend conflict\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from decimal import Decimal\n import os\n import shutil\n \n-class TxnMallTest(BitcoinTestFramework):\n+class TxnMallTest(SyscoinTestFramework):\n \n     def add_options(self, parser):\n         parser.add_option(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n@@ -24,7 +24,7 @@ def setup_network(self):\n         return super(TxnMallTest, self).setup_network(True)\n \n     def run_test(self):\n-        # All nodes should start with 1,250 BTC:\n+        # All nodes should start with 1,250 SYS:\n         starting_balance = 1250\n         for i in range(4):\n             assert_equal(self.nodes[i].getbalance(), starting_balance)\n@@ -45,7 +45,7 @@ def run_test(self):\n         # Coins are sent to node1_address\n         node1_address = self.nodes[1].getnewaddress(\"from0\")\n \n-        # First: use raw transaction API to send 1240 BTC to node1_address,\n+        # First: use raw transaction API to send 1240 SYS to node1_address,\n         # but don't broadcast:\n         doublespend_fee = Decimal('-.02')\n         rawtx_input_0 = {}\n@@ -63,7 +63,7 @@ def run_test(self):\n         doublespend = self.nodes[0].signrawtransaction(rawtx)\n         assert_equal(doublespend[\"complete\"], True)\n \n-        # Create two spends using 1 50 BTC coin each\n+        # Create two spends using 1 50 SYS coin each\n         txid1 = self.nodes[0].sendfrom(\"foo\", node1_address, 40, 0)\n         txid2 = self.nodes[0].sendfrom(\"bar\", node1_address, 20, 0)\n         \n@@ -75,7 +75,7 @@ def run_test(self):\n         tx1 = self.nodes[0].gettransaction(txid1)\n         tx2 = self.nodes[0].gettransaction(txid2)\n \n-        # Node0's balance should be starting balance, plus 50BTC for another\n+        # Node0's balance should be starting balance, plus 50SYS for another\n         # matured block, minus 40, minus 20, and minus transaction fees:\n         expected = starting_balance + fund_foo_tx[\"fee\"] + fund_bar_tx[\"fee\"]\n         if self.options.mine_block: expected += 50\n@@ -117,7 +117,7 @@ def run_test(self):\n         assert_equal(tx1[\"confirmations\"], -2)\n         assert_equal(tx2[\"confirmations\"], -2)\n \n-        # Node0's total balance should be starting balance, plus 100BTC for \n+        # Node0's total balance should be starting balance, plus 100SYS for \n         # two more matured blocks, minus 1240 for the double-spend, plus fees (which are\n         # negative):\n         expected = starting_balance + 100 - 1240 + fund_foo_tx[\"fee\"] + fund_bar_tx[\"fee\"] + doublespend_fee"
      },
      {
        "sha": "c403089af76c7620df0ee55cc5e25cb2aa424b56",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,8 +8,8 @@\n # Does the following:\n #   a) creates 3 nodes, with an empty chain (no blocks).\n #   b) node0 mines a block\n-#   c) node1 mines 101 blocks, so now nodes 0 and 1 have 50btc, node2 has none.\n-#   d) node0 sends 21 btc to node2, in two transactions (11 btc, then 10 btc).\n+#   c) node1 mines 101 blocks, so now nodes 0 and 1 have 50sys, node2 has none.\n+#   d) node0 sends 21 sys to node2, in two transactions (11 sys, then 10 sys).\n #   e) node0 mines a block, collects the fee on the second transaction\n #   f) node1 mines 100 blocks, to mature node0's just-mined block\n #   g) check that node0 has 100-21, node2 has 21\n@@ -19,20 +19,20 @@\n #   k) test ResendWalletTransactions - create transactions, startup fourth node, make sure it syncs\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n-class WalletTest (BitcoinTestFramework):\n+class WalletTest (SyscoinTestFramework):\n \n     def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size):\n         \"\"\"Return curr_balance after asserting the fee was in range\"\"\"\n         fee = balance_with_fee - curr_balance\n         target_fee = fee_per_byte * tx_size\n         if fee < target_fee:\n-            raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+            raise AssertionError(\"Fee of %s SYS too low! (Should be %s SYS)\"%(str(fee), str(target_fee)))\n         # allow the node's estimation to be at most 2 bytes off\n         if fee > fee_per_byte * (tx_size + 2):\n-            raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+            raise AssertionError(\"Fee of %s SYS too high! (Should be %s SYS)\"%(str(fee), str(target_fee)))\n         return curr_balance\n \n     def setup_chain(self):\n@@ -64,7 +64,7 @@ def run_test (self):\n         assert_equal(self.nodes[1].getbalance(), 50)\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n-        # Send 21 BTC from 0 to 2 using sendtoaddress call.\n+        # Send 21 SYS from 0 to 2 using sendtoaddress call.\n         # Second transaction will be child of first, and will require a fee\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n@@ -80,7 +80,7 @@ def run_test (self):\n         self.nodes[1].generate(100)\n         self.sync_all()\n \n-        # node0 should end up with 100 btc in block rewards plus fees, but\n+        # node0 should end up with 100 sys in block rewards plus fees, but\n         # minus the 21 plus fees sent to node2\n         assert_equal(self.nodes[0].getbalance(), 100-21)\n         assert_equal(self.nodes[2].getbalance(), 21)\n@@ -113,7 +113,7 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 100)\n         assert_equal(self.nodes[2].getbalance(\"from1\"), 100-21)\n \n-        # Send 10 BTC normal\n+        # Send 10 SYS normal\n         address = self.nodes[0].getnewaddress(\"test\")\n         fee_per_byte = Decimal('0.001') / 1000\n         self.nodes[2].settxfee(fee_per_byte * 1000)\n@@ -123,23 +123,23 @@ def run_test (self):\n         node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), Decimal('90'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n         assert_equal(self.nodes[0].getbalance(), Decimal('10'))\n \n-        # Send 10 BTC with subtract fee from amount\n+        # Send 10 SYS with subtract fee from amount\n         txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", True)\n         self.nodes[2].generate(1)\n         self.sync_all()\n         node_2_bal -= Decimal('10')\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), Decimal('20'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n \n-        # Sendmany 10 BTC\n+        # Sendmany 10 SYS\n         txid = self.nodes[2].sendmany('from1', {address: 10}, 0, \"\", [])\n         self.nodes[2].generate(1)\n         self.sync_all()\n         node_0_bal += Decimal('10')\n         node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n-        # Sendmany 10 BTC with subtract fee from amount\n+        # Sendmany 10 SYS with subtract fee from amount\n         txid = self.nodes[2].sendmany('from1', {address: 10}, 0, \"\", [address])\n         self.nodes[2].generate(1)\n         self.sync_all()\n@@ -195,7 +195,7 @@ def run_test (self):\n \n         #do some -walletbroadcast tests\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         self.nodes = start_nodes(3, self.options.tmpdir, [[\"-walletbroadcast=0\"],[\"-walletbroadcast=0\"],[\"-walletbroadcast=0\"]])\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -220,7 +220,7 @@ def run_test (self):\n \n         #restart the nodes with -walletbroadcast=1\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_syscoinds()\n         self.nodes = start_nodes(3, self.options.tmpdir)\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)"
      },
      {
        "sha": "942122e43aaa1b05c900fb1023f2870c2c7a4802",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -33,13 +33,13 @@\n and confirm again balances are correct.\n \"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n from random import randint\n import logging\n logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.INFO)\n \n-class WalletBackupTest(BitcoinTestFramework):\n+class WalletBackupTest(SyscoinTestFramework):\n \n     def setup_chain(self):\n         logging.info(\"Initializing test directory \"+self.options.tmpdir)"
      },
      {
        "sha": "924f55c7706c7f85cf9de92c0f9db5c379d3b1e0",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n \n \n-class ZapWalletTXesTest (BitcoinTestFramework):\n+class ZapWalletTXesTest (SyscoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n@@ -51,18 +51,18 @@ def run_test (self):\n         tx3 = self.nodes[0].gettransaction(txid3)\n         assert_equal(tx3['txid'], txid3) #tx3 must be available (unconfirmed)\n         \n-        #restart bitcoind\n+        #restart syscoind\n         self.nodes[0].stop()\n-        bitcoind_processes[0].wait()\n+        syscoind_processes[0].wait()\n         self.nodes[0] = start_node(0,self.options.tmpdir)\n         \n         tx3 = self.nodes[0].gettransaction(txid3)\n         assert_equal(tx3['txid'], txid3) #tx must be available (unconfirmed)\n         \n         self.nodes[0].stop()\n-        bitcoind_processes[0].wait()\n+        syscoind_processes[0].wait()\n         \n-        #restart bitcoind with zapwallettxes\n+        #restart syscoind with zapwallettxes\n         self.nodes[0] = start_node(0,self.options.tmpdir, [\"-zapwallettxes=1\"])\n         \n         aException = False"
      },
      {
        "sha": "dd8a78a158450b510ee3499ea3a171bc13cde12c",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Syscoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test ZMQ interface\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import SyscoinTestFramework\n from test_framework.util import *\n import zmq\n import binascii\n@@ -22,7 +22,7 @@\n except ImportError:\n     import urlparse\n \n-class ZMQTest (BitcoinTestFramework):\n+class ZMQTest (SyscoinTestFramework):\n \n     port = 28332\n "
      },
      {
        "sha": "52d948166e611e71beed553cd00d0b6576973824",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n Bag Attributes\n-    friendlyName: Developer ID Application: BITCOIN FOUNDATION, INC., THE\n+    friendlyName: Developer ID Application: SYSCOIN FOUNDATION, INC., THE\n     localKeyID: 6B 9C 6C A8 A5 73 70 70 E2 57 A3 49 D8 62 FB 97 C7 A5 5D 5E \n-subject=/UID=PBV4GLS9J4/CN=Developer ID Application: BITCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=BITCOIN FOUNDATION, INC., THE/C=US\n+subject=/UID=PBV4GLS9J4/CN=Developer ID Application: SYSCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=SYSCOIN FOUNDATION, INC., THE/C=US\n issuer=/CN=Developer ID Certification Authority/OU=Apple Certification Authority/O=Apple Inc./C=US\n -----BEGIN CERTIFICATE-----\n MIIFhzCCBG+gAwIBAgIIJ0r1rumyfZAwDQYJKoZIhvcNAQELBQAweTEtMCsGA1UE"
      },
      {
        "sha": "2636809c2fa7e7b42fd4d326df9df0027c010ee7",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n Bag Attributes\n-    friendlyName: The Bitcoin Foundation, Inc.'s COMODO CA Limited ID\n+    friendlyName: The Syscoin Foundation, Inc.'s COMODO CA Limited ID\n     localKeyID: 8C 94 64 E3 B5 B0 41 89 5B 89 B0 57 CC 74 B9 44 E5 B2 92 66 \n-subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Bitcoin Foundation, Inc./CN=The Bitcoin Foundation, Inc.\n+subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Syscoin Foundation, Inc./CN=The Syscoin Foundation, Inc.\n issuer=/C=GB/ST=Greater Manchester/L=Salford/O=COMODO CA Limited/CN=COMODO Code Signing CA 2\n -----BEGIN CERTIFICATE-----\n MIIFeDCCBGCgAwIBAgIRAJVYMd+waOER7lUqtiz3M2IwDQYJKoZIhvcNAQEFBQAw"
      },
      {
        "sha": "2d07df8e5443e2b0ff0f7d9a72a8cd8f2251979c",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -7,7 +7,7 @@ signing requests.\n \n For OSX, the private key was generated by Keychain.app on Gavin's main work machine.\n The key and certificate is in a separate, passphrase-protected keychain file that is\n-unlocked to sign the Bitcoin-Qt.app bundle.\n+unlocked to sign the Syscoin-Qt.app bundle.\n \n For Windows, the private key was generated by Firefox running on Gavin's main work machine.\n The key and certificate were exported into a separate, passphrase-protected PKCS#12 file, and\n@@ -17,7 +17,7 @@ Threat analysis\n --\n \n Gavin is a single point of failure. He could be coerced to divulge the secret signing keys,\n-allowing somebody to distribute a Bitcoin-Qt.app or bitcoin-qt-setup.exe with a valid\n+allowing somebody to distribute a Syscoin-Qt.app or syscoin-qt-setup.exe with a valid\n signature but containing a malicious binary.\n \n Or the machine Gavin uses to sign the binaries could be compromised, either remotely or\n@@ -34,7 +34,7 @@ or divulge the private keys).\n \n Windows binaries are reproducibly 'gitian-built', and the setup.exe file created\n by the NSIS installer system is a 7zip archive, so you could check to make sure\n-that the bitcoin-qt.exe file inside the installer had not been tampered with.\n+that the syscoin-qt.exe file inside the installer had not been tampered with.\n However, an attacker could modify the installer's code, so when the setup.exe\n was run it compromised users' systems. A volunteer to write an auditing tool\n that checks the setup.exe for tampering, and checks the files in it against"
      },
      {
        "sha": "f5480f41616a81cc3b65d0625f4f5e6f01a2f861",
        "filename": "share/pixmaps/syscoin.ico",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin.ico?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "share/pixmaps/bitcoin.ico"
      },
      {
        "sha": "55039b1c920d2c73de7384ece75f0a7b3d147676",
        "filename": "share/pixmaps/syscoin128.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin128.png?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "share/pixmaps/bitcoin128.png"
      },
      {
        "sha": "0adc8ea45503a44e0c40266fdf1222c34cf013ea",
        "filename": "share/pixmaps/syscoin128.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin128.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin128.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin128.xpm?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin___[] = {\n+static char *syscoin___[] = {\n /* columns rows colors chars-per-pixel */\n \"128 128 250 2\",\n \"   c #845415\",",
        "previous_filename": "share/pixmaps/bitcoin128.xpm"
      },
      {
        "sha": "5537479095c62d1fd4ab69ea7cf90b6596dacd39",
        "filename": "share/pixmaps/syscoin16.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin16.png?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "share/pixmaps/bitcoin16.png"
      },
      {
        "sha": "55ceb4a39652c7c85d052d21da2f0567da8f5bdf",
        "filename": "share/pixmaps/syscoin16.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin16.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin16.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin16.xpm?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *syscoin__[] = {\n /* columns rows colors chars-per-pixel */\n \"16 16 159 2\",\n \"   c #CA7C1E\",",
        "previous_filename": "share/pixmaps/bitcoin16.xpm"
      },
      {
        "sha": "1d42116ef1199d86749d17f1740121a659262f4a",
        "filename": "share/pixmaps/syscoin256.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin256.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin256.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin256.png?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "share/pixmaps/bitcoin256.png"
      },
      {
        "sha": "812f67ddb70f8fe486301078b9c5887a37bace87",
        "filename": "share/pixmaps/syscoin256.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin256.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin256.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin256.xpm?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin___[] = {\n+static char *syscoin___[] = {\n /* columns rows colors chars-per-pixel */\n \"256 256 203 2\",\n \"   c #BE741B\",",
        "previous_filename": "share/pixmaps/bitcoin256.xpm"
      },
      {
        "sha": "367abfcc8e0f48779b51a99d03f3389f216c6c8c",
        "filename": "share/pixmaps/syscoin32.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin32.png?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "share/pixmaps/bitcoin32.png"
      },
      {
        "sha": "2dceadf527b763b2db0cc9297fdbc626f7166527",
        "filename": "share/pixmaps/syscoin32.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin32.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin32.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin32.xpm?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *syscoin__[] = {\n /* columns rows colors chars-per-pixel */\n \"32 32 102 2\",\n \"   c #CC7D1D\",",
        "previous_filename": "share/pixmaps/bitcoin32.xpm"
      },
      {
        "sha": "08c676ae4afe56ca8baf2a517ef3b598e82a79f3",
        "filename": "share/pixmaps/syscoin64.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin64.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin64.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin64.png?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "previous_filename": "share/pixmaps/bitcoin64.png"
      },
      {
        "sha": "107fb080dbc4d456b0d45d21db33aab299d9d226",
        "filename": "share/pixmaps/syscoin64.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin64.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/pixmaps/syscoin64.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/syscoin64.xpm?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *syscoin__[] = {\n /* columns rows colors chars-per-pixel */\n \"64 64 172 2\",\n \"   c #8F6319\",",
        "previous_filename": "share/pixmaps/bitcoin64.xpm"
      },
      {
        "sha": "50dd9ce04d87ba7453f1c19aa39a9c01a3cc12fb",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -11,13 +11,13 @@\n   </array>\n \n   <key>CFBundleIconFile</key>\n-  <string>bitcoin.icns</string>\n+  <string>syscoin.icns</string>\n \n   <key>CFBundlePackageType</key>\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin Core developers</string>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Syscoin Core developers</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@</string>\n@@ -29,27 +29,27 @@\n   <string>????</string>\n \n   <key>CFBundleExecutable</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Syscoin-Qt</string>\n   \n   <key>CFBundleName</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Syscoin-Qt</string>\n \n   <key>LSHasLocalizedDisplayName</key>\n   <true/>\n \n   <key>CFBundleIdentifier</key>\n-  <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n+  <string>org.syscoinfoundation.Syscoin-Qt</string>\n \n   <key>CFBundleURLTypes</key>\n   <array>\n     <dict>\n       <key>CFBundleTypeRole</key>\n       <string>Editor</string>\n       <key>CFBundleURLName</key>\n-      <string>org.bitcoin.BitcoinPayment</string>\n+      <string>org.syscoin.SyscoinPayment</string>\n       <key>CFBundleURLSchemes</key>\n       <array>\n-        <string>bitcoin</string>\n+        <string>syscoin</string>\n       </array>\n     </dict>\n   </array>\n@@ -58,20 +58,20 @@\n   <array>\n     <dict>\n       <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n+      <string>org.syscoin.paymentrequest</string>\n       <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n+      <string>Syscoin payment request</string>\n       <key>UTTypeConformsTo</key>\n       <array>\n         <string>public.data</string>\n       </array>\n       <key>UTTypeTagSpecification</key>\n       <dict>\n         <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n+        <string>application/x-syscoin-payment-request</string>\n         <key>public.filename-extension</key>\n         <array>\n-          <string>bitcoinpaymentrequest</string>\n+          <string>syscoinpaymentrequest</string>\n         </array>\n       </dict>\n     </dict>\n@@ -84,7 +84,7 @@\n       <string>Editor</string>\n       <key>LSItemContentTypes</key>\n       <array>\n-        <string>org.bitcoin.paymentrequest</string>\n+        <string>org.syscoin.paymentrequest</string>\n       </array>\n       <key>LSHandlerRank</key>\n       <string>Owner</string>"
      },
      {
        "sha": "e1ee452dfc46f9ab780e7b457b45d41e3e97e6d8",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -9,7 +9,7 @@\n import os\n import sys\n \n-OUT_CPP=\"qt/bitcoinstrings.cpp\"\n+OUT_CPP=\"qt/syscoinstrings.cpp\"\n EMPTY=['\"\"']\n \n def parse_po(text):\n@@ -69,10 +69,10 @@ def parse_po(text):\n #define UNUSED\n #endif\n \"\"\")\n-f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n+f.write('static const char UNUSED *syscoin_strings[] = {\\n')\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:\n-        f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", %s),\\n' % ('\\n'.join(msgid)))\n+        f.write('QT_TRANSLATE_NOOP(\"syscoin-core\", %s),\\n' % ('\\n'.join(msgid)))\n f.write('};\\n')\n f.close()"
      },
      {
        "sha": "e90ff41936a8d3e2e2bc08435735db2a8633fc26",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2 \n-# Copyright (c) 2015 The Bitcoin Core developers \n+# Copyright (c) 2015 The Syscoin Core developers \n # Distributed under the MIT software license, see the accompanying \n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -36,6 +36,6 @@\n m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), digestmod)\n result = m.hexdigest()\n \n-print(\"String to be appended to bitcoin.conf:\")\n+print(\"String to be appended to syscoin.conf:\")\n print(\"rpcauth=\"+username+\":\"+salt+\"$\"+result)\n print(\"Your password:\\n\"+password)"
      },
      {
        "sha": "52841e7d680d604e661629c27b3f668022e87fb7",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -6,11 +6,11 @@ SetCompressor /SOLID lzma\n # General Symbol Definitions\n !define REGKEY \"SOFTWARE\\$(^Name)\"\n !define VERSION @CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@\n-!define COMPANY \"Bitcoin Core project\"\n-!define URL http://www.bitcoin.org/\n+!define COMPANY \"Syscoin Core project\"\n+!define URL http://www.syscoin.org/\n \n # MUI Symbol Definitions\n-!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/bitcoin.ico\"\n+!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/syscoin.ico\"\n !define MUI_WELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n !define MUI_HEADERIMAGE\n !define MUI_HEADERIMAGE_RIGHT\n@@ -20,7 +20,7 @@ SetCompressor /SOLID lzma\n !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\n !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\n !define MUI_STARTMENUPAGE_DEFAULTFOLDER \"@PACKAGE_NAME@\"\n-!define MUI_FINISHPAGE_RUN $INSTDIR\\bitcoin-qt.exe\n+!define MUI_FINISHPAGE_RUN $INSTDIR\\syscoin-qt.exe\n !define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\n !define MUI_UNWELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n !define MUI_UNFINISHPAGE_NOAUTOCLOSE\n@@ -48,18 +48,18 @@ Var StartMenuGroup\n !insertmacro MUI_LANGUAGE English\n \n # Installer attributes\n-OutFile @abs_top_srcdir@/bitcoin-${VERSION}-win@WINDOWS_BITS@-setup.exe\n+OutFile @abs_top_srcdir@/syscoin-${VERSION}-win@WINDOWS_BITS@-setup.exe\n !if \"@WINDOWS_BITS@\" == \"64\"\n-InstallDir $PROGRAMFILES64\\Bitcoin\n+InstallDir $PROGRAMFILES64\\Syscoin\n !else\n-InstallDir $PROGRAMFILES\\Bitcoin\n+InstallDir $PROGRAMFILES\\Syscoin\n !endif\n CRCCheck on\n XPStyle on\n BrandingText \" \"\n ShowInstDetails show\n VIProductVersion ${VERSION}.@CLIENT_VERSION_BUILD@\n-VIAddVersionKey ProductName \"Bitcoin Core\"\n+VIAddVersionKey ProductName \"Syscoin Core\"\n VIAddVersionKey ProductVersion \"${VERSION}\"\n VIAddVersionKey CompanyName \"${COMPANY}\"\n VIAddVersionKey CompanyWebsite \"${URL}\"\n@@ -73,19 +73,19 @@ ShowUninstDetails show\n Section -Main SEC0000\n     SetOutPath $INSTDIR\n     SetOverwrite on\n-    File @abs_top_srcdir@/release/bitcoin-qt.exe\n+    File @abs_top_srcdir@/release/syscoin-qt.exe\n     File /oname=COPYING.txt @abs_top_srcdir@/COPYING\n     File /oname=readme.txt @abs_top_srcdir@/doc/README_windows.txt\n     SetOutPath $INSTDIR\\daemon\n-    File @abs_top_srcdir@/release/bitcoind.exe\n-    File @abs_top_srcdir@/release/bitcoin-cli.exe\n+    File @abs_top_srcdir@/release/syscoind.exe\n+    File @abs_top_srcdir@/release/syscoin-cli.exe\n     SetOutPath $INSTDIR\\doc\n     File /r @abs_top_srcdir@/doc\\*.*\n     SetOutPath $INSTDIR\n     WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\n \n-    # Remove old wxwidgets-based-bitcoin executable and locales:\n-    Delete /REBOOTOK $INSTDIR\\bitcoin.exe\n+    # Remove old wxwidgets-based-syscoin executable and locales:\n+    Delete /REBOOTOK $INSTDIR\\syscoin.exe\n     RMDir /r /REBOOTOK $INSTDIR\\locale\n SectionEnd\n \n@@ -95,7 +95,7 @@ Section -post SEC0001\n     WriteUninstaller $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\n     CreateDirectory $SMPROGRAMS\\$StartMenuGroup\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\bitcoin-qt.exe\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\syscoin-qt.exe\n     CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\" $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_END\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\n@@ -106,10 +106,10 @@ Section -post SEC0001\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n-    WriteRegStr HKCR \"bitcoin\" \"URL Protocol\" \"\"\n-    WriteRegStr HKCR \"bitcoin\" \"\" \"URL:Bitcoin\"\n-    WriteRegStr HKCR \"bitcoin\\DefaultIcon\" \"\" $INSTDIR\\bitcoin-qt.exe\n-    WriteRegStr HKCR \"bitcoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\bitcoin-qt.exe\" \"%1\"'\n+    WriteRegStr HKCR \"syscoin\" \"URL Protocol\" \"\"\n+    WriteRegStr HKCR \"syscoin\" \"\" \"URL:Syscoin\"\n+    WriteRegStr HKCR \"syscoin\\DefaultIcon\" \"\" $INSTDIR\\syscoin-qt.exe\n+    WriteRegStr HKCR \"syscoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\syscoin-qt.exe\" \"%1\"'\n SectionEnd\n \n # Macro for selecting uninstaller sections\n@@ -127,7 +127,7 @@ done${UNSECTION_ID}:\n \n # Uninstaller sections\n Section /o -un.Main UNSEC0000\n-    Delete /REBOOTOK $INSTDIR\\bitcoin-qt.exe\n+    Delete /REBOOTOK $INSTDIR\\syscoin-qt.exe\n     Delete /REBOOTOK $INSTDIR\\COPYING.txt\n     Delete /REBOOTOK $INSTDIR\\readme.txt\n     RMDir /r /REBOOTOK $INSTDIR\\daemon\n@@ -139,15 +139,15 @@ Section -un.post UNSEC0001\n     DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\"\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Syscoin.lnk\"\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\n     Delete /REBOOTOK $INSTDIR\\debug.log\n     Delete /REBOOTOK $INSTDIR\\db.log\n     DeleteRegValue HKCU \"${REGKEY}\" StartMenuGroup\n     DeleteRegValue HKCU \"${REGKEY}\" Path\n     DeleteRegKey /IfEmpty HKCU \"${REGKEY}\\Components\"\n     DeleteRegKey /IfEmpty HKCU \"${REGKEY}\"\n-    DeleteRegKey HKCR \"bitcoin\"\n+    DeleteRegKey HKCR \"syscoin\"\n     RmDir /REBOOTOK $SMPROGRAMS\\$StartMenuGroup\n     RmDir /REBOOTOK $INSTDIR\n     Push $R0"
      },
      {
        "sha": "d072fa8c17500f891e5bfb860280836799bfd6b4",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 110,
        "deletions": 110,
        "changes": 220,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -19,19 +19,19 @@ $(LIBLEVELDB) $(LIBMEMENV):\n           OPT=\"$(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS\"\n endif\n \n-BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n-BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n-\n-BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n-BITCOIN_INCLUDES += -I$(srcdir)/univalue/include\n-\n-LIBBITCOIN_SERVER=libbitcoin_server.a\n-LIBBITCOIN_WALLET=libbitcoin_wallet.a\n-LIBBITCOIN_COMMON=libbitcoin_common.a\n-LIBBITCOIN_CLI=libbitcoin_cli.a\n-LIBBITCOIN_UTIL=libbitcoin_util.a\n-LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n-LIBBITCOINQT=qt/libbitcoinqt.a\n+SYSCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n+SYSCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n+\n+SYSCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n+SYSCOIN_INCLUDES += -I$(srcdir)/univalue/include\n+\n+LIBSYSCOIN_SERVER=libsyscoin_server.a\n+LIBSYSCOIN_WALLET=libsyscoin_wallet.a\n+LIBSYSCOIN_COMMON=libsyscoin_common.a\n+LIBSYSCOIN_CLI=libsyscoin_cli.a\n+LIBSYSCOIN_UTIL=libsyscoin_util.a\n+LIBSYSCOIN_CRYPTO=crypto/libsyscoin_crypto.a\n+LIBSYSCOINQT=qt/libsyscoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n LIBUNIVALUE=univalue/libunivalue.la\n \n@@ -44,41 +44,41 @@ $(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n EXTRA_LIBRARIES = \\\n-  crypto/libbitcoin_crypto.a \\\n-  libbitcoin_util.a \\\n-  libbitcoin_common.a \\\n-  libbitcoin_server.a \\\n-  libbitcoin_cli.a\n+  crypto/libsyscoin_crypto.a \\\n+  libsyscoin_util.a \\\n+  libsyscoin_common.a \\\n+  libsyscoin_server.a \\\n+  libsyscoin_cli.a\n if ENABLE_WALLET\n-BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n-EXTRA_LIBRARIES += libbitcoin_wallet.a\n+SYSCOIN_INCLUDES += $(BDB_CPPFLAGS)\n+EXTRA_LIBRARIES += libsyscoin_wallet.a\n endif\n if ENABLE_ZMQ\n-EXTRA_LIBRARIES += libbitcoin_zmq.a\n+EXTRA_LIBRARIES += libsyscoin_zmq.a\n endif\n \n-if BUILD_BITCOIN_LIBS\n-lib_LTLIBRARIES = libbitcoinconsensus.la\n-LIBBITCOIN_CONSENSUS=libbitcoinconsensus.la\n+if BUILD_SYSCOIN_LIBS\n+lib_LTLIBRARIES = libsyscoinconsensus.la\n+LIBSYSCOIN_CONSENSUS=libsyscoinconsensus.la\n else\n-LIBBITCOIN_CONSENSUS=\n+LIBSYSCOIN_CONSENSUS=\n endif\n \n bin_PROGRAMS =\n TESTS =\n BENCHMARKS =\n \n-if BUILD_BITCOIND\n-  bin_PROGRAMS += bitcoind\n+if BUILD_SYSCOIND\n+  bin_PROGRAMS += syscoind\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+if BUILD_SYSCOIN_UTILS\n+  bin_PROGRAMS += syscoin-cli syscoin-tx\n endif\n \n .PHONY: FORCE\n-# bitcoin core #\n-BITCOIN_CORE_H = \\\n+# syscoin core #\n+SYSCOIN_CORE_H = \\\n   addrman.h \\\n   alert.h \\\n   amount.h \\\n@@ -177,12 +177,12 @@ obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n \t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n \t  $(abs_top_srcdir)\n-libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n+libsyscoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n-# server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n-libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_server_a_SOURCES = \\\n+# server: shared between syscoind and syscoin-qt\n+libsyscoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libsyscoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n   bloom.cpp \\\n@@ -213,38 +213,38 @@ libbitcoin_server_a_SOURCES = \\\n   txdb.cpp \\\n   txmempool.cpp \\\n   validationinterface.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(SYSCOIN_CORE_H)\n \n if ENABLE_ZMQ\n-LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n+LIBSYSCOIN_ZMQ=libsyscoin_zmq.a\n \n-libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n-libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_zmq_a_SOURCES = \\\n+libsyscoin_zmq_a_CPPFLAGS = $(SYSCOIN_INCLUDES) $(ZMQ_CFLAGS)\n+libsyscoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\\n   zmq/zmqpublishnotifier.cpp\n endif\n \n \n-# wallet: shared between bitcoind and bitcoin-qt, but only linked\n+# wallet: shared between syscoind and syscoin-qt, but only linked\n # when wallet enabled\n-libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_wallet_a_SOURCES = \\\n+libsyscoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES)\n+libsyscoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/wallet_ismine.cpp \\\n   wallet/walletdb.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(SYSCOIN_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES)\n-crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-crypto_libbitcoin_crypto_a_SOURCES = \\\n+crypto_libsyscoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_CONFIG_INCLUDES)\n+crypto_libsyscoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+crypto_libsyscoin_crypto_a_SOURCES = \\\n   crypto/common.h \\\n   crypto/hmac_sha256.cpp \\\n   crypto/hmac_sha256.h \\\n@@ -259,10 +259,10 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.cpp \\\n   crypto/sha512.h\n \n-# common: shared between bitcoind, and bitcoin-qt and non-server tools\n-libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_common_a_SOURCES = \\\n+# common: shared between syscoind, and syscoin-qt and non-server tools\n+libsyscoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES)\n+libsyscoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoin_common_a_SOURCES = \\\n   amount.cpp \\\n   arith_uint256.cpp \\\n   base58.cpp \\\n@@ -286,14 +286,14 @@ libbitcoin_common_a_SOURCES = \\\n   script/script_error.cpp \\\n   script/sign.cpp \\\n   script/standard.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(SYSCOIN_CORE_H)\n \n # util: shared between all executables.\n # This library *must* be included to make sure that the glibc\n # backward-compatibility objects and their sanity checks are linked.\n-libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_util_a_SOURCES = \\\n+libsyscoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES)\n+libsyscoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoin_util_a_SOURCES = \\\n   support/pagelocker.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n@@ -309,94 +309,94 @@ libbitcoin_util_a_SOURCES = \\\n   utilmoneystr.cpp \\\n   utilstrencodings.cpp \\\n   utiltime.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(SYSCOIN_CORE_H)\n \n if GLIBC_BACK_COMPAT\n-libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n+libsyscoin_util_a_SOURCES += compat/glibc_compat.cpp\n endif\n \n-# cli: shared between bitcoin-cli and bitcoin-qt\n-libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_cli_a_SOURCES = \\\n+# cli: shared between syscoin-cli and syscoin-qt\n+libsyscoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES)\n+libsyscoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoin_cli_a_SOURCES = \\\n   rpcclient.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(SYSCOIN_CORE_H)\n \n-nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n+nodist_libsyscoin_util_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n-# bitcoind binary #\n-bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# syscoind binary #\n+syscoind_SOURCES = syscoind.cpp\n+syscoind_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES)\n+syscoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+syscoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoind_SOURCES += bitcoind-res.rc\n+syscoind_SOURCES += syscoind-res.rc\n endif\n \n-bitcoind_LDADD = \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n+syscoind_LDADD = \\\n+  $(LIBSYSCOIN_SERVER) \\\n+  $(LIBSYSCOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBSYSCOIN_UTIL) \\\n+  $(LIBSYSCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n if ENABLE_ZMQ\n-bitcoind_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+syscoind_LDADD += $(LIBSYSCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_WALLET\n-bitcoind_LDADD += libbitcoin_wallet.a\n+syscoind_LDADD += libsyscoin_wallet.a\n endif\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+syscoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n \n-# bitcoin-cli binary #\n-bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n-bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# syscoin-cli binary #\n+syscoin_cli_SOURCES = syscoin-cli.cpp\n+syscoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) $(EVENT_CFLAGS)\n+syscoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+syscoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n+syscoin_cli_SOURCES += syscoin-cli-res.rc\n endif\n \n-bitcoin_cli_LDADD = \\\n-  $(LIBBITCOIN_CLI) \\\n+syscoin_cli_LDADD = \\\n+  $(LIBSYSCOIN_CLI) \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_UTIL)\n+  $(LIBSYSCOIN_UTIL)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+syscoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n-# bitcoin-tx binary #\n-bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# syscoin-tx binary #\n+syscoin_tx_SOURCES = syscoin-tx.cpp\n+syscoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES)\n+syscoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+syscoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n+syscoin_tx_SOURCES += syscoin-tx-res.rc\n endif\n \n-bitcoin_tx_LDADD = \\\n+syscoin_tx_LDADD = \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBSYSCOIN_COMMON) \\\n+  $(LIBSYSCOIN_UTIL) \\\n+  $(LIBSYSCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+syscoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n-# bitcoinconsensus library #\n-if BUILD_BITCOIN_LIBS\n-include_HEADERS = script/bitcoinconsensus.h\n-libbitcoinconsensus_la_SOURCES = \\\n+# syscoinconsensus library #\n+if BUILD_SYSCOIN_LIBS\n+include_HEADERS = script/syscoinconsensus.h\n+libsyscoinconsensus_la_SOURCES = \\\n   crypto/hmac_sha512.cpp \\\n   crypto/ripemd160.cpp \\\n   crypto/sha1.cpp \\\n@@ -405,20 +405,20 @@ libbitcoinconsensus_la_SOURCES = \\\n   hash.cpp \\\n   primitives/transaction.cpp \\\n   pubkey.cpp \\\n-  script/bitcoinconsensus.cpp \\\n+  script/syscoinconsensus.cpp \\\n   script/interpreter.cpp \\\n   script/script.cpp \\\n   uint256.cpp \\\n   utilstrencodings.cpp\n \n if GLIBC_BACK_COMPAT\n-  libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n+  libsyscoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n endif\n \n-libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n-libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1)\n-libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL\n-libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libsyscoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n+libsyscoinconsensus_la_LIBADD = $(LIBSECP256K1)\n+libsyscoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_SYSCOIN_INTERNAL\n+libsyscoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n endif\n #"
      },
      {
        "sha": "dc0f80f9126b2aaf5314c8f96e9275394c5e2452",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,45 +1,45 @@\n-bin_PROGRAMS += bench/bench_bitcoin\n+bin_PROGRAMS += bench/bench_syscoin\n BENCH_SRCDIR = bench\n-BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+BENCH_BINARY = bench/bench_syscoin$(EXEEXT)\n \n \n-bench_bench_bitcoin_SOURCES = \\\n-  bench/bench_bitcoin.cpp \\\n+bench_bench_syscoin_SOURCES = \\\n+  bench/bench_syscoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n   bench/Examples.cpp\n \n-bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n-bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bench_bench_bitcoin_LDADD = \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+bench_bench_syscoin_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_syscoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bench_bench_syscoin_LDADD = \\\n+  $(LIBSYSCOIN_SERVER) \\\n+  $(LIBSYSCOIN_COMMON) \\\n+  $(LIBSYSCOIN_UNIVALUE) \\\n+  $(LIBSYSCOIN_UTIL) \\\n+  $(LIBSYSCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n if ENABLE_ZMQ\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+bench_bench_syscoin_LDADD += $(LIBSYSCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_WALLET\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+bench_bench_syscoin_LDADD += $(LIBSYSCOIN_WALLET)\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bench_bench_syscoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_syscoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno\n+CLEAN_SYSCOIN_BENCH = bench/*.gcda bench/*.gcno\n \n-CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n+CLEANFILES += $(CLEAN_SYSCOIN_BENCH)\n \n-bitcoin_bench: $(BENCH_BINARY)\n+syscoin_bench: $(BENCH_BINARY)\n \n bench: $(BENCH_BINARY) FORCE\n \t$(BENCH_BINARY)\n \n-bitcoin_bench_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)\n+syscoin_bench_clean : FORCE\n+\trm -f $(CLEAN_SYSCOIN_BENCH) $(bench_bench_syscoin_OBJECTS) $(BENCH_BINARY)"
      },
      {
        "sha": "4eab6a0f05138407d65b25d95e341f679ee89319",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 133,
        "deletions": 133,
        "changes": 266,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,85 +1,85 @@\n-bin_PROGRAMS += qt/bitcoin-qt\n-EXTRA_LIBRARIES += qt/libbitcoinqt.a\n+bin_PROGRAMS += qt/syscoin-qt\n+EXTRA_LIBRARIES += qt/libsyscoinqt.a\n \n-# bitcoin qt core #\n+# syscoin qt core #\n QT_TS = \\\n-  qt/locale/bitcoin_af_ZA.ts \\\n-  qt/locale/bitcoin_ar.ts \\\n-  qt/locale/bitcoin_be_BY.ts \\\n-  qt/locale/bitcoin_bg_BG.ts \\\n-  qt/locale/bitcoin_bg.ts \\\n-  qt/locale/bitcoin_bs.ts \\\n-  qt/locale/bitcoin_ca_ES.ts \\\n-  qt/locale/bitcoin_ca.ts \\\n-  qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_cs_CZ.ts \\\n-  qt/locale/bitcoin_cs.ts \\\n-  qt/locale/bitcoin_cy.ts \\\n-  qt/locale/bitcoin_da.ts \\\n-  qt/locale/bitcoin_de.ts \\\n-  qt/locale/bitcoin_el_GR.ts \\\n-  qt/locale/bitcoin_el.ts \\\n-  qt/locale/bitcoin_en_GB.ts \\\n-  qt/locale/bitcoin_en.ts \\\n-  qt/locale/bitcoin_eo.ts \\\n-  qt/locale/bitcoin_es_CL.ts \\\n-  qt/locale/bitcoin_es_DO.ts \\\n-  qt/locale/bitcoin_es_ES.ts \\\n-  qt/locale/bitcoin_es_MX.ts \\\n-  qt/locale/bitcoin_es.ts \\\n-  qt/locale/bitcoin_es_UY.ts \\\n-  qt/locale/bitcoin_es_VE.ts \\\n-  qt/locale/bitcoin_et.ts \\\n-  qt/locale/bitcoin_eu_ES.ts \\\n-  qt/locale/bitcoin_fa_IR.ts \\\n-  qt/locale/bitcoin_fa.ts \\\n-  qt/locale/bitcoin_fi.ts \\\n-  qt/locale/bitcoin_fr_CA.ts \\\n-  qt/locale/bitcoin_fr_FR.ts \\\n-  qt/locale/bitcoin_fr.ts \\\n-  qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_he.ts \\\n-  qt/locale/bitcoin_hi_IN.ts \\\n-  qt/locale/bitcoin_hr.ts \\\n-  qt/locale/bitcoin_hu.ts \\\n-  qt/locale/bitcoin_id_ID.ts \\\n-  qt/locale/bitcoin_it.ts \\\n-  qt/locale/bitcoin_ja.ts \\\n-  qt/locale/bitcoin_ka.ts \\\n-  qt/locale/bitcoin_kk_KZ.ts \\\n-  qt/locale/bitcoin_ko_KR.ts \\\n-  qt/locale/bitcoin_ky.ts \\\n-  qt/locale/bitcoin_la.ts \\\n-  qt/locale/bitcoin_lt.ts \\\n-  qt/locale/bitcoin_lv_LV.ts \\\n-  qt/locale/bitcoin_mk_MK.ts \\\n-  qt/locale/bitcoin_mn.ts \\\n-  qt/locale/bitcoin_ms_MY.ts \\\n-  qt/locale/bitcoin_nb.ts \\\n-  qt/locale/bitcoin_nl.ts \\\n-  qt/locale/bitcoin_pam.ts \\\n-  qt/locale/bitcoin_pl.ts \\\n-  qt/locale/bitcoin_pt_BR.ts \\\n-  qt/locale/bitcoin_pt_PT.ts \\\n-  qt/locale/bitcoin_ro_RO.ts \\\n-  qt/locale/bitcoin_ru_RU.ts \\\n-  qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_sk.ts \\\n-  qt/locale/bitcoin_sl_SI.ts \\\n-  qt/locale/bitcoin_sq.ts \\\n-  qt/locale/bitcoin_sr.ts \\\n-  qt/locale/bitcoin_sv.ts \\\n-  qt/locale/bitcoin_th_TH.ts \\\n-  qt/locale/bitcoin_tr_TR.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n-  qt/locale/bitcoin_uk.ts \\\n-  qt/locale/bitcoin_ur_PK.ts \\\n-  qt/locale/bitcoin_uz@Cyrl.ts \\\n-  qt/locale/bitcoin_vi.ts \\\n-  qt/locale/bitcoin_vi_VN.ts \\\n-  qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+  qt/locale/syscoin_af_ZA.ts \\\n+  qt/locale/syscoin_ar.ts \\\n+  qt/locale/syscoin_be_BY.ts \\\n+  qt/locale/syscoin_bg_BG.ts \\\n+  qt/locale/syscoin_bg.ts \\\n+  qt/locale/syscoin_bs.ts \\\n+  qt/locale/syscoin_ca_ES.ts \\\n+  qt/locale/syscoin_ca.ts \\\n+  qt/locale/syscoin_ca@valencia.ts \\\n+  qt/locale/syscoin_cs_CZ.ts \\\n+  qt/locale/syscoin_cs.ts \\\n+  qt/locale/syscoin_cy.ts \\\n+  qt/locale/syscoin_da.ts \\\n+  qt/locale/syscoin_de.ts \\\n+  qt/locale/syscoin_el_GR.ts \\\n+  qt/locale/syscoin_el.ts \\\n+  qt/locale/syscoin_en_GB.ts \\\n+  qt/locale/syscoin_en.ts \\\n+  qt/locale/syscoin_eo.ts \\\n+  qt/locale/syscoin_es_CL.ts \\\n+  qt/locale/syscoin_es_DO.ts \\\n+  qt/locale/syscoin_es_ES.ts \\\n+  qt/locale/syscoin_es_MX.ts \\\n+  qt/locale/syscoin_es.ts \\\n+  qt/locale/syscoin_es_UY.ts \\\n+  qt/locale/syscoin_es_VE.ts \\\n+  qt/locale/syscoin_et.ts \\\n+  qt/locale/syscoin_eu_ES.ts \\\n+  qt/locale/syscoin_fa_IR.ts \\\n+  qt/locale/syscoin_fa.ts \\\n+  qt/locale/syscoin_fi.ts \\\n+  qt/locale/syscoin_fr_CA.ts \\\n+  qt/locale/syscoin_fr_FR.ts \\\n+  qt/locale/syscoin_fr.ts \\\n+  qt/locale/syscoin_gl.ts \\\n+  qt/locale/syscoin_he.ts \\\n+  qt/locale/syscoin_hi_IN.ts \\\n+  qt/locale/syscoin_hr.ts \\\n+  qt/locale/syscoin_hu.ts \\\n+  qt/locale/syscoin_id_ID.ts \\\n+  qt/locale/syscoin_it.ts \\\n+  qt/locale/syscoin_ja.ts \\\n+  qt/locale/syscoin_ka.ts \\\n+  qt/locale/syscoin_kk_KZ.ts \\\n+  qt/locale/syscoin_ko_KR.ts \\\n+  qt/locale/syscoin_ky.ts \\\n+  qt/locale/syscoin_la.ts \\\n+  qt/locale/syscoin_lt.ts \\\n+  qt/locale/syscoin_lv_LV.ts \\\n+  qt/locale/syscoin_mk_MK.ts \\\n+  qt/locale/syscoin_mn.ts \\\n+  qt/locale/syscoin_ms_MY.ts \\\n+  qt/locale/syscoin_nb.ts \\\n+  qt/locale/syscoin_nl.ts \\\n+  qt/locale/syscoin_pam.ts \\\n+  qt/locale/syscoin_pl.ts \\\n+  qt/locale/syscoin_pt_BR.ts \\\n+  qt/locale/syscoin_pt_PT.ts \\\n+  qt/locale/syscoin_ro_RO.ts \\\n+  qt/locale/syscoin_ru_RU.ts \\\n+  qt/locale/syscoin_ru.ts \\\n+  qt/locale/syscoin_sk.ts \\\n+  qt/locale/syscoin_sl_SI.ts \\\n+  qt/locale/syscoin_sq.ts \\\n+  qt/locale/syscoin_sr.ts \\\n+  qt/locale/syscoin_sv.ts \\\n+  qt/locale/syscoin_th_TH.ts \\\n+  qt/locale/syscoin_tr_TR.ts \\\n+  qt/locale/syscoin_tr.ts \\\n+  qt/locale/syscoin_uk.ts \\\n+  qt/locale/syscoin_ur_PK.ts \\\n+  qt/locale/syscoin_uz@Cyrl.ts \\\n+  qt/locale/syscoin_vi.ts \\\n+  qt/locale/syscoin_vi_VN.ts \\\n+  qt/locale/syscoin_zh_CN.ts \\\n+  qt/locale/syscoin_zh.ts \\\n+  qt/locale/syscoin_zh_TW.ts\n \n QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\\n@@ -104,10 +104,10 @@ QT_MOC_CPP = \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n-  qt/moc_bitcoinaddressvalidator.cpp \\\n-  qt/moc_bitcoinamountfield.cpp \\\n-  qt/moc_bitcoingui.cpp \\\n-  qt/moc_bitcoinunits.cpp \\\n+  qt/moc_syscoinaddressvalidator.cpp \\\n+  qt/moc_syscoinamountfield.cpp \\\n+  qt/moc_syscoingui.cpp \\\n+  qt/moc_syscoinunits.cpp \\\n   qt/moc_clientmodel.cpp \\\n   qt/moc_coincontroldialog.cpp \\\n   qt/moc_coincontroltreewidget.cpp \\\n@@ -145,35 +145,35 @@ QT_MOC_CPP = \\\n   qt/moc_walletmodel.cpp \\\n   qt/moc_walletview.cpp\n \n-BITCOIN_MM = \\\n+SYSCOIN_MM = \\\n   qt/macdockiconhandler.mm \\\n   qt/macnotificationhandler.mm\n \n QT_MOC = \\\n-  qt/bitcoin.moc \\\n-  qt/bitcoinamountfield.moc \\\n+  qt/syscoin.moc \\\n+  qt/syscoinamountfield.moc \\\n   qt/intro.moc \\\n   qt/overviewpage.moc \\\n   qt/rpcconsole.moc\n \n-QT_QRC_CPP = qt/qrc_bitcoin.cpp\n-QT_QRC = qt/bitcoin.qrc\n-QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n-QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n+QT_QRC_CPP = qt/qrc_syscoin.cpp\n+QT_QRC = qt/syscoin.qrc\n+QT_QRC_LOCALE_CPP = qt/qrc_syscoin_locale.cpp\n+QT_QRC_LOCALE = qt/syscoin_locale.qrc\n \n PROTOBUF_CC = qt/paymentrequest.pb.cc\n PROTOBUF_H = qt/paymentrequest.pb.h\n PROTOBUF_PROTO = qt/paymentrequest.proto\n \n-BITCOIN_QT_H = \\\n+SYSCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n   qt/askpassphrasedialog.h \\\n   qt/bantablemodel.h \\\n-  qt/bitcoinaddressvalidator.h \\\n-  qt/bitcoinamountfield.h \\\n-  qt/bitcoingui.h \\\n-  qt/bitcoinunits.h \\\n+  qt/syscoinaddressvalidator.h \\\n+  qt/syscoinamountfield.h \\\n+  qt/syscoingui.h \\\n+  qt/syscoinunits.h \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\\n@@ -223,8 +223,8 @@ RES_ICONS = \\\n   qt/res/icons/address-book.png \\\n   qt/res/icons/about.png \\\n   qt/res/icons/about_qt.png \\\n-  qt/res/icons/bitcoin.ico \\\n-  qt/res/icons/bitcoin.png \\\n+  qt/res/icons/syscoin.ico \\\n+  qt/res/icons/syscoin.png \\\n   qt/res/icons/clock1.png \\\n   qt/res/icons/clock2.png \\\n   qt/res/icons/clock3.png \\\n@@ -267,12 +267,12 @@ RES_ICONS = \\\n   qt/res/icons/warning.png \\\n   qt/res/icons/verify.png\n \n-BITCOIN_QT_CPP = \\\n+SYSCOIN_QT_CPP = \\\n   qt/bantablemodel.cpp \\\n-  qt/bitcoinaddressvalidator.cpp \\\n-  qt/bitcoinamountfield.cpp \\\n-  qt/bitcoingui.cpp \\\n-  qt/bitcoinunits.cpp \\\n+  qt/syscoinaddressvalidator.cpp \\\n+  qt/syscoinamountfield.cpp \\\n+  qt/syscoingui.cpp \\\n+  qt/syscoinunits.cpp \\\n   qt/clientmodel.cpp \\\n   qt/csvmodelwriter.cpp \\\n   qt/guiutil.cpp \\\n@@ -291,11 +291,11 @@ BITCOIN_QT_CPP = \\\n   qt/utilitydialog.cpp\n \n if TARGET_WINDOWS\n-BITCOIN_QT_CPP += qt/winshutdownmonitor.cpp\n+SYSCOIN_QT_CPP += qt/winshutdownmonitor.cpp\n endif\n \n if ENABLE_WALLET\n-BITCOIN_QT_CPP += \\\n+SYSCOIN_QT_CPP += \\\n   qt/addressbookpage.cpp \\\n   qt/addresstablemodel.cpp \\\n   qt/askpassphrasedialog.cpp \\\n@@ -328,19 +328,19 @@ RES_IMAGES =\n \n RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)\n \n-BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n+SYSCOIN_RC = qt/res/syscoin-qt-res.rc\n \n-BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n+SYSCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n   -I$(builddir)/qt/forms -DQT_NO_KEYWORDS\n \n-qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_libsyscoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) $(SYSCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_libsyscoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n+qt_libsyscoinqt_a_SOURCES = $(SYSCOIN_QT_CPP) $(SYSCOIN_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n \n-nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n+nodist_qt_libsyscoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n   $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n \n # forms/foo.h -> forms/ui_foo.h\n@@ -349,70 +349,70 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n # Most files will depend on the forms and moc files as includes. Generate them\n # before anything else.\n $(QT_MOC): $(QT_FORMS_H)\n-$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+$(qt_libsyscoinqt_a_OBJECTS) $(qt_syscoin_qt_OBJECTS) : | $(QT_MOC)\n \n #Generating these with a half-written protobuf header leads to wacky results.\n #This makes sure it's done.\n $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n-# bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+# syscoin-qt binary #\n+qt_syscoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) $(SYSCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_syscoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+qt_syscoin_qt_SOURCES = qt/syscoin.cpp\n if TARGET_DARWIN\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n+  qt_syscoin_qt_SOURCES += $(SYSCOIN_MM)\n endif\n if TARGET_WINDOWS\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+  qt_syscoin_qt_SOURCES += $(SYSCOIN_RC)\n endif\n-qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+qt_syscoin_qt_LDADD = qt/libsyscoinqt.a $(LIBSYSCOIN_SERVER)\n if ENABLE_WALLET\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_syscoin_qt_LDADD += $(LIBSYSCOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_syscoin_qt_LDADD += $(LIBSYSCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_syscoin_qt_LDADD += $(LIBSYSCOIN_CLI) $(LIBSYSCOIN_COMMON) $(LIBSYSCOIN_UTIL) $(LIBSYSCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n+qt_syscoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_syscoin_qt_LIBTOOLFLAGS = --tag CXX\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)\n \n SECONDARY: $(QT_QM)\n \n-qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n+qt/syscoinstrings.cpp: $(libsyscoin_server_a_SOURCES) $(libsyscoin_wallet_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n \t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^\n \n-translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n+translate: qt/syscoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(SYSCOIN_QT_CPP) $(SYSCOIN_QT_H) $(SYSCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/syscoin_en.ts\n \n $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n \t@test -f $(RCC)\n \t@test -f $(@D)/$(<F) || cp -f $< $(@D)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/$(<F) | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name syscoin_locale $(@D)/$(<F) | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n $(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n \t@test -f $(RCC)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name syscoin $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n-CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n+CLEAN_QT = $(nodist_qt_libsyscoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n \n CLEANFILES += $(CLEAN_QT)\n \n-bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+syscoin_qt_clean: FORCE\n+\trm -f $(CLEAN_QT) $(qt_libsyscoinqt_a_OBJECTS) $(qt_syscoin_qt_OBJECTS) qt/syscoin-qt$(EXEEXT) $(LIBSYSCOINQT)\n \n-bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+syscoin_qt : qt/syscoin-qt$(EXEEXT)\n \n ui_%.h: %.ui\n \t@test -f $(UIC)"
      },
      {
        "sha": "9fe476810b13630ec23d69ed2466d873e877ef2a",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n-bin_PROGRAMS += qt/test/test_bitcoin-qt\n-TESTS += qt/test/test_bitcoin-qt\n+bin_PROGRAMS += qt/test/test_syscoin-qt\n+TESTS += qt/test/test_syscoin-qt\n \n TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp\n \n@@ -12,42 +12,42 @@ TEST_QT_H = \\\n   qt/test/paymentrequestdata.h \\\n   qt/test/paymentservertests.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_syscoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) $(SYSCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n-qt_test_test_bitcoin_qt_SOURCES = \\\n+qt_test_test_syscoin_qt_SOURCES = \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   $(TEST_QT_H)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_SOURCES += \\\n+qt_test_test_syscoin_qt_SOURCES += \\\n   qt/test/paymentservertests.cpp\n endif\n \n-nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+nodist_qt_test_test_syscoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_syscoin_qt_LDADD = $(LIBSYSCOINQT) $(LIBSYSCOIN_SERVER)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_test_test_syscoin_qt_LDADD += $(LIBSYSCOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_test_test_syscoin_qt_LDADD += $(LIBSYSCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_syscoin_qt_LDADD += $(LIBSYSCOIN_CLI) $(LIBSYSCOIN_COMMON) $(LIBSYSCOIN_UTIL) $(LIBSYSCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_test_test_syscoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_syscoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n+CLEAN_SYSCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n \n-CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n+CLEANFILES += $(CLEAN_SYSCOIN_QT_TEST)\n \n-test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+test_syscoin_qt : qt/test/test_syscoin-qt$(EXEEXT)\n \n-test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+test_syscoin_qt_check : qt/test/test_syscoin-qt$(EXEEXT) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n-test_bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)\n+test_syscoin_qt_clean: FORCE\n+\trm -f $(CLEAN_SYSCOIN_QT_TEST) $(qt_test_test_syscoin_qt_OBJECTS)"
      },
      {
        "sha": "7a920f8bf587dd82b655e0ef0512c18e1c9a5d4e",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n-TESTS += test/test_bitcoin\n-bin_PROGRAMS += test/test_bitcoin\n+TESTS += test/test_syscoin\n+bin_PROGRAMS += test/test_syscoin\n TEST_SRCDIR = test\n-TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+TEST_BINARY=test/test_syscoin$(EXEEXT)\n \n \n EXTRA_DIST += \\\n \ttest/bctest.py \\\n-\ttest/bitcoin-util-test.py \\\n-\ttest/data/bitcoin-util-test.json \\\n+\ttest/syscoin-util-test.py \\\n+\ttest/data/syscoin-util-test.json \\\n \ttest/data/blanktx.hex \\\n \ttest/data/tt-delin1-out.hex \\\n \ttest/data/tt-delout1-out.hex \\\n@@ -33,7 +33,7 @@ RAW_TEST_FILES = test/data/alertTests.raw\n \n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n-BITCOIN_TESTS =\\\n+SYSCOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n   test/scriptnum10.h \\\n   test/addrman_tests.cpp \\\n@@ -77,8 +77,8 @@ BITCOIN_TESTS =\\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n   test/streams_tests.cpp \\\n-  test/test_bitcoin.cpp \\\n-  test/test_bitcoin.h \\\n+  test/test_syscoin.cpp \\\n+  test/test_syscoin.h \\\n   test/timedata_tests.cpp \\\n   test/transaction_tests.cpp \\\n   test/txvalidationcache_tests.cpp \\\n@@ -87,47 +87,47 @@ BITCOIN_TESTS =\\\n   test/util_tests.cpp\n \n if ENABLE_WALLET\n-BITCOIN_TESTS += \\\n+SYSCOIN_TESTS += \\\n   test/accounting_tests.cpp \\\n   wallet/test/wallet_tests.cpp \\\n   test/rpc_wallet_tests.cpp\n endif\n \n-test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_syscoin_SOURCES = $(SYSCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_syscoin_CPPFLAGS = $(AM_CPPFLAGS) $(SYSCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_syscoin_LDADD = $(LIBSYSCOIN_SERVER) $(LIBSYSCOIN_CLI) $(LIBSYSCOIN_COMMON) $(LIBSYSCOIN_UTIL) $(LIBSYSCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_syscoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n-test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+test_test_syscoin_LDADD += $(LIBSYSCOIN_WALLET)\n endif\n \n-test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n+test_test_syscoin_LDADD += $(LIBSYSCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_syscoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n-test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+test_test_syscoin_LDADD += $(ZMQ_LIBS)\n endif\n \n-nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_test_test_syscoin_SOURCES = $(GENERATED_TEST_FILES)\n \n-$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n+$(SYSCOIN_TESTS): $(GENERATED_TEST_FILES)\n \n-CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n+CLEAN_SYSCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n \n-CLEANFILES += $(CLEAN_BITCOIN_TEST)\n+CLEANFILES += $(CLEAN_SYSCOIN_TEST)\n \n-bitcoin_test: $(TEST_BINARY)\n+syscoin_test: $(TEST_BINARY)\n \n-bitcoin_test_check: $(TEST_BINARY) FORCE\n+syscoin_test_check: $(TEST_BINARY) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n-bitcoin_test_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n+syscoin_test_clean : FORCE\n+\trm -f $(CLEAN_SYSCOIN_TEST) $(test_test_syscoin_OBJECTS) $(TEST_BINARY)\n \n check-local:\n-\t@echo \"Running test/bitcoin-util-test.py...\"\n-\t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(srcdir)/test/bitcoin-util-test.py\n+\t@echo \"Running test/syscoin-util-test.py...\"\n+\t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(srcdir)/test/syscoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check\n "
      },
      {
        "sha": "2e9434ee3bcfe4420f11ee0987e505cf383cc9fb",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_ADDRMAN_H\n-#define BITCOIN_ADDRMAN_H\n+#ifndef SYSCOIN_ADDRMAN_H\n+#define SYSCOIN_ADDRMAN_H\n \n #include \"netbase.h\"\n #include \"protocol.h\"\n@@ -577,4 +577,4 @@ class CAddrMan\n \n };\n \n-#endif // BITCOIN_ADDRMAN_H\n+#endif // SYSCOIN_ADDRMAN_H"
      },
      {
        "sha": "98f3813f8680f951f0009862692de52db54d05ee",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "288699df8e9e0d248b8d562f62323035cdeaf144",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2013 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_ALERT_H\n-#define BITCOIN_ALERT_H\n+#ifndef SYSCOIN_ALERT_H\n+#define SYSCOIN_ALERT_H\n \n #include \"serialize.h\"\n #include \"sync.h\"\n@@ -110,4 +110,4 @@ class CAlert : public CUnsignedAlert\n     static CAlert getAlertByHash(const uint256 &hash);\n };\n \n-#endif // BITCOIN_ALERT_H\n+#endif // SYSCOIN_ALERT_H"
      },
      {
        "sha": "c9895ca1ec659d95dc9f9a62abee1599bc368ab0",
        "filename": "src/amount.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/amount.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/amount.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"amount.h\"\n \n #include \"tinyformat.h\"\n \n-const std::string CURRENCY_UNIT = \"BTC\";\n+const std::string CURRENCY_UNIT = \"SYS\";\n \n CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nSize)\n {"
      },
      {
        "sha": "254980ed790f2ef70036155c7c352131fe63433e",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_AMOUNT_H\n-#define BITCOIN_AMOUNT_H\n+#ifndef SYSCOIN_AMOUNT_H\n+#define SYSCOIN_AMOUNT_H\n \n #include \"serialize.h\"\n \n@@ -20,8 +20,8 @@ extern const std::string CURRENCY_UNIT;\n \n /** No amount larger than this (in satoshi) is valid.\n  *\n- * Note that this constant is *not* the total money supply, which in Bitcoin\n- * currently happens to be less than 21,000,000 BTC for various reasons, but\n+ * Note that this constant is *not* the total money supply, which in Syscoin\n+ * currently happens to be less than 21,000,000 SYS for various reasons, but\n  * rather a sanity check. As this sanity check is used by consensus-critical\n  * validation code, the exact value of the MAX_MONEY constant is consensus\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n@@ -62,4 +62,4 @@ class CFeeRate\n     }\n };\n \n-#endif //  BITCOIN_AMOUNT_H\n+#endif //  SYSCOIN_AMOUNT_H"
      },
      {
        "sha": "29bbf15d91445d941e3b7d93bacb2ed2b9f7f69d",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin developers\n+// Copyright (c) 2009-2014 The Syscoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "373f3243d9db0b2453c1c55d9b326808c81d0dfe",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin developers\n+// Copyright (c) 2009-2014 The Syscoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_ARITH_UINT256_H\n-#define BITCOIN_ARITH_UINT256_H\n+#ifndef SYSCOIN_ARITH_UINT256_H\n+#define SYSCOIN_ARITH_UINT256_H\n \n #include <assert.h>\n #include <cstring>\n@@ -272,7 +272,7 @@ class arith_uint256 : public base_uint<256> {\n      * Thus 0x1234560000 is compact (0x05123456)\n      * and  0xc0de000000 is compact (0x0600c0de)\n      *\n-     * Bitcoin only uses this \"compact\" format for encoding difficulty\n+     * Syscoin only uses this \"compact\" format for encoding difficulty\n      * targets, which are unsigned 256bit quantities.  Thus, all the\n      * complexities of the sign bit and using base 256 are probably an\n      * implementation accident.\n@@ -287,4 +287,4 @@ class arith_uint256 : public base_uint<256> {\n uint256 ArithToUint256(const arith_uint256 &);\n arith_uint256 UintToArith256(const uint256 &);\n \n-#endif // BITCOIN_ARITH_UINT256_H\n+#endif // SYSCOIN_ARITH_UINT256_H"
      },
      {
        "sha": "3385ef2d36588d1c07cc75cb9170920b37c2ec5b",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2014 The Bitcoin Core developers\n+// Copyright (c) 2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -203,13 +203,13 @@ int CBase58Data::CompareTo(const CBase58Data& b58) const\n \n namespace\n {\n-class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n+class CSyscoinAddressVisitor : public boost::static_visitor<bool>\n {\n private:\n-    CBitcoinAddress* addr;\n+    CSyscoinAddress* addr;\n \n public:\n-    CBitcoinAddressVisitor(CBitcoinAddress* addrIn) : addr(addrIn) {}\n+    CSyscoinAddressVisitor(CSyscoinAddress* addrIn) : addr(addrIn) {}\n \n     bool operator()(const CKeyID& id) const { return addr->Set(id); }\n     bool operator()(const CScriptID& id) const { return addr->Set(id); }\n@@ -218,37 +218,37 @@ class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n \n } // anon namespace\n \n-bool CBitcoinAddress::Set(const CKeyID& id)\n+bool CSyscoinAddress::Set(const CKeyID& id)\n {\n     SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n     return true;\n }\n \n-bool CBitcoinAddress::Set(const CScriptID& id)\n+bool CSyscoinAddress::Set(const CScriptID& id)\n {\n     SetData(Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS), &id, 20);\n     return true;\n }\n \n-bool CBitcoinAddress::Set(const CTxDestination& dest)\n+bool CSyscoinAddress::Set(const CTxDestination& dest)\n {\n-    return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n+    return boost::apply_visitor(CSyscoinAddressVisitor(this), dest);\n }\n \n-bool CBitcoinAddress::IsValid() const\n+bool CSyscoinAddress::IsValid() const\n {\n     return IsValid(Params());\n }\n \n-bool CBitcoinAddress::IsValid(const CChainParams& params) const\n+bool CSyscoinAddress::IsValid(const CChainParams& params) const\n {\n     bool fCorrectSize = vchData.size() == 20;\n     bool fKnownVersion = vchVersion == params.Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n                          vchVersion == params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n     return fCorrectSize && fKnownVersion;\n }\n \n-CTxDestination CBitcoinAddress::Get() const\n+CTxDestination CSyscoinAddress::Get() const\n {\n     if (!IsValid())\n         return CNoDestination();\n@@ -262,7 +262,7 @@ CTxDestination CBitcoinAddress::Get() const\n         return CNoDestination();\n }\n \n-bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n+bool CSyscoinAddress::GetKeyID(CKeyID& keyID) const\n {\n     if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n         return false;\n@@ -272,40 +272,40 @@ bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n     return true;\n }\n \n-bool CBitcoinAddress::IsScript() const\n+bool CSyscoinAddress::IsScript() const\n {\n     return IsValid() && vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n }\n \n-void CBitcoinSecret::SetKey(const CKey& vchSecret)\n+void CSyscoinSecret::SetKey(const CKey& vchSecret)\n {\n     assert(vchSecret.IsValid());\n     SetData(Params().Base58Prefix(CChainParams::SECRET_KEY), vchSecret.begin(), vchSecret.size());\n     if (vchSecret.IsCompressed())\n         vchData.push_back(1);\n }\n \n-CKey CBitcoinSecret::GetKey()\n+CKey CSyscoinSecret::GetKey()\n {\n     CKey ret;\n     assert(vchData.size() >= 32);\n     ret.Set(vchData.begin(), vchData.begin() + 32, vchData.size() > 32 && vchData[32] == 1);\n     return ret;\n }\n \n-bool CBitcoinSecret::IsValid() const\n+bool CSyscoinSecret::IsValid() const\n {\n     bool fExpectedFormat = vchData.size() == 32 || (vchData.size() == 33 && vchData[32] == 1);\n     bool fCorrectVersion = vchVersion == Params().Base58Prefix(CChainParams::SECRET_KEY);\n     return fExpectedFormat && fCorrectVersion;\n }\n \n-bool CBitcoinSecret::SetString(const char* pszSecret)\n+bool CSyscoinSecret::SetString(const char* pszSecret)\n {\n     return CBase58Data::SetString(pszSecret) && IsValid();\n }\n \n-bool CBitcoinSecret::SetString(const std::string& strSecret)\n+bool CSyscoinSecret::SetString(const std::string& strSecret)\n {\n     return SetString(strSecret.c_str());\n }"
      },
      {
        "sha": "b97c5ed7c1cc062de80b8bb229ff5e3479f51562",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -11,8 +11,8 @@\n  * - E-mail usually won't line-break if there's no punctuation to break at.\n  * - Double-clicking selects the whole string as one word if it's all alphanumeric.\n  */\n-#ifndef BITCOIN_BASE58_H\n-#define BITCOIN_BASE58_H\n+#ifndef SYSCOIN_BASE58_H\n+#define SYSCOIN_BASE58_H\n \n #include \"chainparams.h\"\n #include \"key.h\"\n@@ -95,24 +95,24 @@ class CBase58Data\n     bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }\n };\n \n-/** base58-encoded Bitcoin addresses.\n+/** base58-encoded Syscoin addresses.\n  * Public-key-hash-addresses have version 0 (or 111 testnet).\n  * The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n  * Script-hash-addresses have version 5 (or 196 testnet).\n  * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n  */\n-class CBitcoinAddress : public CBase58Data {\n+class CSyscoinAddress : public CBase58Data {\n public:\n     bool Set(const CKeyID &id);\n     bool Set(const CScriptID &id);\n     bool Set(const CTxDestination &dest);\n     bool IsValid() const;\n     bool IsValid(const CChainParams &params) const;\n \n-    CBitcoinAddress() {}\n-    CBitcoinAddress(const CTxDestination &dest) { Set(dest); }\n-    CBitcoinAddress(const std::string& strAddress) { SetString(strAddress); }\n-    CBitcoinAddress(const char* pszAddress) { SetString(pszAddress); }\n+    CSyscoinAddress() {}\n+    CSyscoinAddress(const CTxDestination &dest) { Set(dest); }\n+    CSyscoinAddress(const std::string& strAddress) { SetString(strAddress); }\n+    CSyscoinAddress(const char* pszAddress) { SetString(pszAddress); }\n \n     CTxDestination Get() const;\n     bool GetKeyID(CKeyID &keyID) const;\n@@ -122,7 +122,7 @@ class CBitcoinAddress : public CBase58Data {\n /**\n  * A base58-encoded secret key\n  */\n-class CBitcoinSecret : public CBase58Data\n+class CSyscoinSecret : public CBase58Data\n {\n public:\n     void SetKey(const CKey& vchSecret);\n@@ -131,11 +131,11 @@ class CBitcoinSecret : public CBase58Data\n     bool SetString(const char* pszSecret);\n     bool SetString(const std::string& strSecret);\n \n-    CBitcoinSecret(const CKey& vchSecret) { SetKey(vchSecret); }\n-    CBitcoinSecret() {}\n+    CSyscoinSecret(const CKey& vchSecret) { SetKey(vchSecret); }\n+    CSyscoinSecret() {}\n };\n \n-template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtKeyBase : public CBase58Data\n+template<typename K, int Size, CChainParams::Base58Type Type> class CSyscoinExtKeyBase : public CBase58Data\n {\n public:\n     void SetKey(const K &key) {\n@@ -153,18 +153,18 @@ template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtK\n         return ret;\n     }\n \n-    CBitcoinExtKeyBase(const K &key) {\n+    CSyscoinExtKeyBase(const K &key) {\n         SetKey(key);\n     }\n \n-    CBitcoinExtKeyBase(const std::string& strBase58c) {\n+    CSyscoinExtKeyBase(const std::string& strBase58c) {\n         SetString(strBase58c.c_str(), Params().Base58Prefix(Type).size());\n     }\n \n-    CBitcoinExtKeyBase() {}\n+    CSyscoinExtKeyBase() {}\n };\n \n-typedef CBitcoinExtKeyBase<CExtKey, 74, CChainParams::EXT_SECRET_KEY> CBitcoinExtKey;\n-typedef CBitcoinExtKeyBase<CExtPubKey, 74, CChainParams::EXT_PUBLIC_KEY> CBitcoinExtPubKey;\n+typedef CSyscoinExtKeyBase<CExtKey, 74, CChainParams::EXT_SECRET_KEY> CSyscoinExtKey;\n+typedef CSyscoinExtKeyBase<CExtPubKey, 74, CChainParams::EXT_PUBLIC_KEY> CSyscoinExtPubKey;\n \n-#endif // BITCOIN_BASE58_H\n+#endif // SYSCOIN_BASE58_H"
      },
      {
        "sha": "8ad2797f1f4111305ccc9b0247c1916ba66286f3",
        "filename": "src/bench/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/.gitignore?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1 +1 @@\n-bench_bitcoin\n+bench_syscoin"
      },
      {
        "sha": "3fc1705a8ff586fdab99b04a36fe8ca6f9577fe9",
        "filename": "src/bench/Examples.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/Examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/Examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/Examples.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015 The Bitcoin Core developers\n+// Copyright (c) 2015 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d420ba4041d362359158538b399be619e803682b",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015 The Bitcoin Core developers\n+// Copyright (c) 2015 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "511d7e8838171daf55abc968c85919b51f269a66",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2015 The Bitcoin Core developers\n+// Copyright (c) 2015 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_BENCH_BENCH_H\n-#define BITCOIN_BENCH_BENCH_H\n+#ifndef SYSCOIN_BENCH_BENCH_H\n+#define SYSCOIN_BENCH_BENCH_H\n \n #include <map>\n #include <string>\n@@ -69,4 +69,4 @@ namespace benchmark {\n #define BENCHMARK(n) \\\n     benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n \n-#endif // BITCOIN_BENCH_BENCH_H\n+#endif // SYSCOIN_BENCH_BENCH_H"
      },
      {
        "sha": "25f61a6992932fdc6cec69767e05d047810666ca",
        "filename": "src/bench/bench_syscoin.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/bench_syscoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bench/bench_syscoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_syscoin.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015 The Bitcoin Core developers\n+// Copyright (c) 2015 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n ",
        "previous_filename": "src/bench/bench_bitcoin.cpp"
      },
      {
        "sha": "b8f9b08c830a6699ba98fd65df8581a8165d8b5e",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "800a704d1ca70f306ff080b00a8296a5efa8864a",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_BLOOM_H\n-#define BITCOIN_BLOOM_H\n+#ifndef SYSCOIN_BLOOM_H\n+#define SYSCOIN_BLOOM_H\n \n #include \"serialize.h\"\n \n@@ -151,4 +151,4 @@ class CRollingBloomFilter\n     }\n };\n \n-#endif // BITCOIN_BLOOM_H\n+#endif // SYSCOIN_BLOOM_H"
      },
      {
        "sha": "1ac3f2e2a4dfe811639b2ae55771f672274ba4a1",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "967a93df553976ea79450e35979f2cc8a56ab044",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHAIN_H\n-#define BITCOIN_CHAIN_H\n+#ifndef SYSCOIN_CHAIN_H\n+#define SYSCOIN_CHAIN_H\n \n #include \"arith_uint256.h\"\n #include \"primitives/block.h\"\n@@ -403,4 +403,4 @@ class CChain {\n     const CBlockIndex *FindFork(const CBlockIndex *pindex) const;\n };\n \n-#endif // BITCOIN_CHAIN_H\n+#endif // SYSCOIN_CHAIN_H"
      },
      {
        "sha": "2a89fc31b5b5c5530165d6ced86c6783ae3e1afe",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -100,12 +100,12 @@ class CMainParams : public CChainParams {\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\")); // Pieter Wuille\n+        vSeeds.push_back(CDNSSeedData(\"syscoin.sipa.be\", \"seed.syscoin.sipa.be\")); // Pieter Wuille\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"dnsseed.bluematt.me\")); // Matt Corallo\n-        vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\")); // Luke Dashjr\n-        vSeeds.push_back(CDNSSeedData(\"bitcoinstats.com\", \"seed.bitcoinstats.com\")); // Christian Decker\n+        vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.syscoin.dashjr.org\")); // Luke Dashjr\n+        vSeeds.push_back(CDNSSeedData(\"syscoinstats.com\", \"seed.syscoinstats.com\")); // Christian Decker\n         vSeeds.push_back(CDNSSeedData(\"xf2.org\", \"bitseed.xf2.org\")); // Jeff Garzik\n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.jonasschnelli.ch\", \"seed.bitcoin.jonasschnelli.ch\")); // Jonas Schnelli\n+        vSeeds.push_back(CDNSSeedData(\"syscoin.jonasschnelli.ch\", \"seed.syscoin.jonasschnelli.ch\")); // Jonas Schnelli\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n@@ -180,9 +180,9 @@ class CTestNetParams : public CChainParams {\n         vFixedSeeds.clear();\n         vSeeds.clear();\n         vSeeds.push_back(CDNSSeedData(\"alexykot.me\", \"testnet-seed.alexykot.me\"));\n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.petertodd.org\", \"testnet-seed.bitcoin.petertodd.org\"));\n+        vSeeds.push_back(CDNSSeedData(\"syscoin.petertodd.org\", \"testnet-seed.syscoin.petertodd.org\"));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"testnet-seed.bluematt.me\"));\n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.schildbach.de\", \"testnet-seed.bitcoin.schildbach.de\"));\n+        vSeeds.push_back(CDNSSeedData(\"syscoin.schildbach.de\", \"testnet-seed.syscoin.schildbach.de\"));\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);"
      },
      {
        "sha": "a0f5a00d46512e77fe5add5a831664014fa53cf6",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHAINPARAMS_H\n-#define BITCOIN_CHAINPARAMS_H\n+#ifndef SYSCOIN_CHAINPARAMS_H\n+#define SYSCOIN_CHAINPARAMS_H\n \n #include \"chainparamsbase.h\"\n #include \"consensus/params.h\"\n@@ -34,7 +34,7 @@ struct CCheckpointData {\n \n /**\n  * CChainParams defines various tweakable parameters of a given instance of the\n- * Bitcoin system. There are three: the main network on which people trade goods\n+ * Syscoin system. There are three: the main network on which people trade goods\n  * and services, the public test network which gets reset from time to time and\n  * a regression test mode which is intended for private networks only. It has\n  * minimal difficulty to ensure that blocks can be found instantly.\n@@ -116,4 +116,4 @@ CChainParams& Params(const std::string& chain);\n  */\n void SelectParams(const std::string& chain);\n \n-#endif // BITCOIN_CHAINPARAMS_H\n+#endif // SYSCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "28a97e1b273e34adfbe4d39908e9a7b3c7644342",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "663d008c43dd6249c7b5fcf330efff05f5dd9284",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,16 +1,16 @@\n-// Copyright (c) 2014 The Bitcoin Core developers\n+// Copyright (c) 2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHAINPARAMSBASE_H\n-#define BITCOIN_CHAINPARAMSBASE_H\n+#ifndef SYSCOIN_CHAINPARAMSBASE_H\n+#define SYSCOIN_CHAINPARAMSBASE_H\n \n #include <string>\n #include <vector>\n \n /**\n- * CBaseChainParams defines the base parameters (shared between bitcoin-cli and bitcoind)\n- * of a given instance of the Bitcoin system.\n+ * CBaseChainParams defines the base parameters (shared between syscoin-cli and syscoind)\n+ * of a given instance of the Syscoin system.\n  */\n class CBaseChainParams\n {\n@@ -59,4 +59,4 @@ std::string ChainNameFromCommandLine();\n  */\n bool AreBaseParamsConfigured();\n \n-#endif // BITCOIN_CHAINPARAMSBASE_H\n+#endif // SYSCOIN_CHAINPARAMSBASE_H"
      },
      {
        "sha": "3fbd997a9d5a8b92e44c30c996e45470d59deff4",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,7 +1,7 @@\n-#ifndef BITCOIN_CHAINPARAMSSEEDS_H\n-#define BITCOIN_CHAINPARAMSSEEDS_H\n+#ifndef SYSCOIN_CHAINPARAMSSEEDS_H\n+#define SYSCOIN_CHAINPARAMSSEEDS_H\n /**\n- * List of fixed seed nodes for the bitcoin network\n+ * List of fixed seed nodes for the syscoin network\n  * AUTOGENERATED by contrib/seeds/generate-seeds.py\n  *\n  * Each line contains a 16-byte IPv6 address and a port.\n@@ -898,4 +898,4 @@ static SeedSpec6 pnSeed6_test[] = {\n     {{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x47,0xb1,0xe4,0x55,0xd1,0xb0,0x14,0x3f,0xb6,0xdb}, 18333},\n     {{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0xa0,0x60,0x9e,0x46,0x54,0xdb,0x61,0x3b,0xb2,0x6f}, 18333}\n };\n-#endif // BITCOIN_CHAINPARAMSSEEDS_H\n+#endif // SYSCOIN_CHAINPARAMSSEEDS_H"
      },
      {
        "sha": "0fbf044e03f0f2820b5f68c66370f697244c600b",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "38b08a2608cafd585fface595d9039cc737bc7b5",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHECKPOINTS_H\n-#define BITCOIN_CHECKPOINTS_H\n+#ifndef SYSCOIN_CHECKPOINTS_H\n+#define SYSCOIN_CHECKPOINTS_H\n \n #include \"uint256.h\"\n \n@@ -29,4 +29,4 @@ double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex* pinde\n \n } //namespace Checkpoints\n \n-#endif // BITCOIN_CHECKPOINTS_H\n+#endif // SYSCOIN_CHECKPOINTS_H"
      },
      {
        "sha": "aad352b8afeb52db7dd829d9cf8d10c21b5081b3",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHECKQUEUE_H\n-#define BITCOIN_CHECKQUEUE_H\n+#ifndef SYSCOIN_CHECKQUEUE_H\n+#define SYSCOIN_CHECKQUEUE_H\n \n #include <algorithm>\n #include <vector>\n@@ -212,4 +212,4 @@ class CCheckQueueControl\n     }\n };\n \n-#endif // BITCOIN_CHECKQUEUE_H\n+#endif // SYSCOIN_CHECKQUEUE_H"
      },
      {
        "sha": "d6a6cbb07aa54fb882d1e450fa62dc9710f4fb39",
        "filename": "src/clientversion.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/clientversion.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/clientversion.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,7 +10,7 @@\n \n /**\n  * Name of client reported in the 'version' message. Report the same name\n- * for both bitcoind and bitcoin-core, to make it harder for attackers to\n+ * for both syscoind and syscoin-core, to make it harder for attackers to\n  * target servers or GUI users specifically.\n  */\n const std::string CLIENT_NAME(\"Satoshi\");\n@@ -92,7 +92,7 @@ std::string FormatFullVersion()\n }\n \n /** \n- * Format the subversion field according to BIP 14 spec (https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki) \n+ * Format the subversion field according to BIP 14 spec (https://github.com/syscoin/bips/blob/master/bip-0014.mediawiki) \n  */\n std::string FormatSubVersion(const std::string& name, int nClientVersion, const std::vector<std::string>& comments)\n {"
      },
      {
        "sha": "177c18c0c5434c3bcd5d152d500cb72e2fdcf77d",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,19 +1,19 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CLIENTVERSION_H\n-#define BITCOIN_CLIENTVERSION_H\n+#ifndef SYSCOIN_CLIENTVERSION_H\n+#define SYSCOIN_CLIENTVERSION_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/syscoin-config.h\"\n #else\n \n /**\n  * client versioning and copyright year\n  */\n \n-//! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n+//! These need to be macros, as clientversion.cpp's and syscoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 12\n #define CLIENT_VERSION_REVISION 99\n@@ -38,10 +38,10 @@\n #define DO_STRINGIZE(X) #X\n \n //! Copyright string used in Windows .rc files\n-#define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core Developers\"\n+#define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Syscoin Core Developers\"\n \n /**\n- * bitcoind-res.rc includes this file, but it cannot cope with real c++ code.\n+ * syscoind-res.rc includes this file, but it cannot cope with real c++ code.\n  * WINDRES_PREPROC is defined to indicate that its pre-processor is running.\n  * Anything other than a define should be guarded below.\n  */\n@@ -67,4 +67,4 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n \n #endif // WINDRES_PREPROC\n \n-#endif // BITCOIN_CLIENTVERSION_H\n+#endif // SYSCOIN_CLIENTVERSION_H"
      },
      {
        "sha": "7c77318eda0dcd7de6cf9ed93b1d3bd15b430cae",
        "filename": "src/coincontrol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coincontrol.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2013 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COINCONTROL_H\n-#define BITCOIN_COINCONTROL_H\n+#ifndef SYSCOIN_COINCONTROL_H\n+#define SYSCOIN_COINCONTROL_H\n \n #include \"primitives/transaction.h\"\n \n@@ -68,4 +68,4 @@ class CCoinControl\n     std::set<COutPoint> setSelected;\n };\n \n-#endif // BITCOIN_COINCONTROL_H\n+#endif // SYSCOIN_COINCONTROL_H"
      },
      {
        "sha": "e6cc743ff7588e8539dcf01badb07e58c1b59093",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "bc6f52fd955f61399f06098b69e6ab034ee7312a",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COINS_H\n-#define BITCOIN_COINS_H\n+#ifndef SYSCOIN_COINS_H\n+#define SYSCOIN_COINS_H\n \n #include \"compressor.h\"\n #include \"core_memusage.h\"\n@@ -45,7 +45,7 @@\n  *    - code = 4 (vout[1] is not spent, and 0 non-zero bytes of bitvector follow)\n  *    - unspentness bitvector: as 0 non-zero bytes follow, it has length 0\n  *    - vout[1]: 835800816115944e077fe7c803cfa57f29b36bf87c1d35\n- *               * 8358: compact amount representation for 60000000000 (600 BTC)\n+ *               * 8358: compact amount representation for 60000000000 (600 SYS)\n  *               * 00: special txout type pay-to-pubkey-hash\n  *               * 816115944e077fe7c803cfa57f29b36bf87c1d35: address uint160\n  *    - height = 203998\n@@ -61,11 +61,11 @@\n  *                2 (1, +1 because both bit 1 and bit 2 are unset) non-zero bitvector bytes follow)\n  *  - unspentness bitvector: bits 2 (0x04) and 14 (0x4000) are set, so vout[2+2] and vout[14+2] are unspent\n  *  - vout[4]: 86ef97d5790061b01caab50f1b8e9c50a5057eb43c2d9563a4ee\n- *             * 86ef97d579: compact amount representation for 234925952 (2.35 BTC)\n+ *             * 86ef97d579: compact amount representation for 234925952 (2.35 SYS)\n  *             * 00: special txout type pay-to-pubkey-hash\n  *             * 61b01caab50f1b8e9c50a5057eb43c2d9563a4ee: address uint160\n  *  - vout[16]: bbd123008c988f1a4a4de2161e0f50aac7f17e7f9555caa4\n- *              * bbd123: compact amount representation for 110397 (0.001 BTC)\n+ *              * bbd123: compact amount representation for 110397 (0.001 SYS)\n  *              * 00: special txout type pay-to-pubkey-hash\n  *              * 8c988f1a4a4de2161e0f50aac7f17e7f9555caa4: address uint160\n  *  - height = 120891\n@@ -457,7 +457,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n     size_t DynamicMemoryUsage() const;\n \n     /** \n-     * Amount of bitcoins coming in to a transaction\n+     * Amount of syscoins coming in to a transaction\n      * Note that lightweight clients may not know anything besides the hash of previous transactions,\n      * so may not be able to calculate this.\n      *\n@@ -490,4 +490,4 @@ class CCoinsViewCache : public CCoinsViewBacked\n     CCoinsViewCache(const CCoinsViewCache &);\n };\n \n-#endif // BITCOIN_COINS_H\n+#endif // SYSCOIN_COINS_H"
      },
      {
        "sha": "172e579d603d562953cfe774d701309f0a2ca455",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,13 +1,13 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_H\n-#define BITCOIN_COMPAT_H\n+#ifndef SYSCOIN_COMPAT_H\n+#define SYSCOIN_COMPAT_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/syscoin-config.h\"\n #endif\n \n #ifdef WIN32\n@@ -101,4 +101,4 @@ bool static inline IsSelectableSocket(SOCKET s) {\n #endif\n }\n \n-#endif // BITCOIN_COMPAT_H\n+#endif // SYSCOIN_COMPAT_H"
      },
      {
        "sha": "28b758ec34bd7d76d83f4c4cbb949b7d1338df77",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n-// Copyright (c) 2014 The Bitcoin developers\n+// Copyright (c) 2014 The Syscoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_BYTESWAP_H\n-#define BITCOIN_COMPAT_BYTESWAP_H\n+#ifndef SYSCOIN_COMPAT_BYTESWAP_H\n+#define SYSCOIN_COMPAT_BYTESWAP_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/syscoin-config.h\"\n #endif\n \n #include <stdint.h>\n@@ -44,4 +44,4 @@ inline uint64_t bswap_64(uint64_t x)\n }\n #endif // HAVE_DECL_BSWAP64\n \n-#endif // BITCOIN_COMPAT_BYTESWAP_H\n+#endif // SYSCOIN_COMPAT_BYTESWAP_H"
      },
      {
        "sha": "f1293c34c874f16cc9b791bda470eb311097d8a0",
        "filename": "src/compat/endian.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat/endian.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat/endian.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/endian.h?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,12 +1,12 @@\n-// Copyright (c) 2014 The Bitcoin developers\n+// Copyright (c) 2014 The Syscoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_ENDIAN_H\n-#define BITCOIN_COMPAT_ENDIAN_H\n+#ifndef SYSCOIN_COMPAT_ENDIAN_H\n+#define SYSCOIN_COMPAT_ENDIAN_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/syscoin-config.h\"\n #endif\n \n #include <stdint.h>\n@@ -193,4 +193,4 @@ inline uint64_t le64toh(uint64_t little_endian_64bits)\n \n #endif // WORDS_BIGENDIAN\n \n-#endif // BITCOIN_COMPAT_ENDIAN_H\n+#endif // SYSCOIN_COMPAT_ENDIAN_H"
      },
      {
        "sha": "735dd2d663ceb47ef14189011ec7342fc463983b",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11f9f552b9d9fead24880cbda0c0c1b0fb9014e/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=b11f9f552b9d9fead24880cbda0c0c1b0fb9014e",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Syscoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/syscoin-config.h\"\n #endif\n \n #include <cstddef>"
      }
    ]
  }
]