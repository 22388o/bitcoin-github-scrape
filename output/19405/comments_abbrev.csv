laanwj,2020-06-29 13:52:43,"> This is info I've been wishing to have for some time -- probably there is an RPC I'm overlooking? But for human users it seems good to have it in -getinfo.\n\nYeah, I've personally always used a stats script that goes through `getpeerinfo` and categorizes them by in/out × ipv4/ipv6/tor.\n```\nin:  ipv4 139 ipv6  20 tor   0\nout: ipv4  10 ipv6   0 tor   0\n```\nSeems like something that co",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-651136367,651136367,
practicalswift,2020-06-29 14:00:27,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-651141805,651141805,
jonatack,2020-06-29 15:14:40,"Re-pushed with release notes.\n\n> Yeah, I've personally always used a stats script that goes through `getpeerinfo` and categorizes them by in/out × ipv4/ipv6/tor.\n> \n> ```\n> in:  ipv4 139 ipv6  20 tor   0\n> out: ipv4  10 ipv6   0 tor   0\n> ```\n> \n> Seems like something that could easily be done client-side in `bitcoin-cli` itself. But no objections to adding this server-side, it's",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-651185957,651185957,
jonatack,2020-06-29 18:01:39,"> Concept ACK, but I am wondering if instead the connection type (#19316) should be returned?\n\nThat PR seems orthogonal, as it proposes to detail the outbounds into various subtypes, but the basic distinction remains between inbound and outbound connections.\n\nI reckon that exposing to users and RPC clients the counts of the outbound subtypes in addition to `in`/`out`/`total` would be enoug",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-651273931,651273931,
jonatack,2020-06-29 18:27:54,Addressed @MarcoFalke's suggestions. Thanks everyone. Rebased per `git diff 9290a98 94a792cc`.,https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-651286046,651286046,
jnewbery,2020-07-01 13:35:54,"I have no objection to adding this to getnetworkinfo, but just noting that [jq](https://stedolan.github.io/jq/) is your friend here:\n\n```\nbitcoin-cli getpeerinfo | jq ""group_by(.inbound) | map({Inbound: .[0].inbound, Count: length}) | .[]""\n{\n  ""Inbound"": false,\n  ""Count"": 9\n}\n{\n  ""Inbound"": true,\n  ""Count"": 6\n}\n```",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-652422500,652422500,
willcl-ark,2020-07-02 14:25:42,"tACK.\n\nChanges seem simple-enough and are working (and passing tests) on MacOS 10.15.\n\nAlso pleased to learn jnewbery's advanced jq pipe from above :)",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-653037635,653037635,
eriknylund,2020-07-15 09:22:10,"ACK 94a792cc19f26754ac5d60a1b733d4b520f7d0c7 \n\nRan unit tests and extended functional tests, all pass. Did not run fuzz tests. Started bitcoind on a clean datadir and ran the bitcoin-cli commands to verify the new output:\n```\n$ ./bitcoind -datadir=/tmp/pr19405\n```\nTested `-getinfo`\n```\n$ ./bitcoin-cli -datadir=/tmp/pr19405 -getinfo\n{\n  ""version"": 209900,\n  ""blocks"": 0,\n  ""h",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-658654214,658654214,
DrahtBot,2020-07-18 21:23:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19771 (net: Replace enum CConnMan::NumConnections with enum class ConnectionDirection by luke-jr)\n* #17167 (Allow whitel",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-660544535,660544535,
jonatack,2020-07-23 17:01:03,"Current status:\n- 1 Concept ACK\n- 2 ""No objections""\n- 2 Tested ACKs\n\nIs anything else needed? The changes are simple and have test coverage.",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-663120858,663120858,
jonatack,2020-08-20 09:35:32,"Rebased and re-opened per IRC discussion yesterday with shesek at http://www.erisian.com.au/bitcoin-core-dev/log-2020-08-19.html#l-375. Proposing with both `getnetworkinfo` and `-getinfo`, open to adjust per review feedback.",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-677490926,677490926,
jonatack,2020-08-24 16:44:20,Rebased. Testing and review welcome! :smiling_face_with_three_hearts: ,https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-679240840,679240840,
eriknylund,2020-08-24 19:24:36,"ACK 581b343d5bf517510ab0236583ca96628751177d\n\nRepeated steps from https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-658654214 on the re-opened and rebased PR. Tests and extended functional tests pass.\n\nTested `bitcoin-cli -getinfo`, `bitcoin-cli getnetworkinfo` and `bitcoin-cli help getnetworkinfo` and the output is unchanged from the previous test. Also tested the UNIX epoch time",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-679319164,679319164,
eriknylund,2020-08-27 05:57:57,@shesek have you had a chance to test and review to see if this works for your purposes? ,https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-681581120,681581120,
benthecarman,2020-08-27 06:33:01,tACK `581b343`,https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-681622110,681622110,
willcl-ark,2020-08-28 11:05:07,"tACK for 581b343d5bf517510ab0236583ca96628751177d, this time rebased onto master at 862fde88be706adb20a211178253636442c3ae00.",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-682465452,682465452,
shesek,2020-08-28 14:42:11,"tACK `581b343`. This provides what I needed, thanks!",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-682640195,682640195,
eriknylund,2020-08-28 14:47:49,"> tACK `581b343`. This provides what I needed, thanks!\n\nThanks @shesek! ",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-682649018,682649018,
n-thumann,2020-09-04 10:35:33,"tACK 581b343 on master at a0a422c, ran unit & functional tests and and confirmed changes on an existing datadir ✌️ ",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-687066721,687066721,
eriknylund,2020-09-04 10:38:46,"> tACK [581b343](https://github.com/bitcoin/bitcoin/commit/581b343d5bf517510ab0236583ca96628751177d) on master at [a0a422c](https://github.com/bitcoin/bitcoin/commit/a0a422c34cfd6514d0cc445bd784d3ee1a2d1749), ran unit & functional tests and and confirmed changes on an existing datadir ✌️\n\nThanks for reviewing @n-thumann and happy to hear that you tested on an existing datadir, which covers the",https://github.com/bitcoin/bitcoin/pull/19405#issuecomment-687068004,687068004,
jonatack,2020-06-29 11:01:28,"Possibly change this line to ""the total number of connections"".",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r446885310,446885310,src/rpc/net.cpp
MarcoFalke,2020-06-29 17:27:30,"nit: Any reason to remove ""Current ""?",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r447134495,447134495,src/rpc/net.cpp
MarcoFalke,2020-06-29 17:27:43,nit: Any reason to add an empty line?,https://github.com/bitcoin/bitcoin/pull/19405#discussion_r447134618,447134618,src/rpc/net.cpp
jonatack,2020-06-29 17:44:37,"> nit: Any reason to remove ""Current ""?\n\nWithout any other qualifier I thought it was self-understood but don't mind adding back ""Current"" if reviewers think it's unclear.",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r447144193,447144193,src/rpc/net.cpp
jonatack,2020-06-29 18:10:16,That's strange and inadvertant. Will remove.,https://github.com/bitcoin/bitcoin/pull/19405#discussion_r447158767,447158767,src/rpc/net.cpp
jonatack,2020-06-29 18:25:50,Re-added while retouching to fix the extra line.,https://github.com/bitcoin/bitcoin/pull/19405#discussion_r447167405,447167405,src/rpc/net.cpp
jonatack,2020-06-29 18:26:25,Thanks -- removed.,https://github.com/bitcoin/bitcoin/pull/19405#discussion_r447167726,447167726,src/rpc/net.cpp
eriknylund,2020-07-15 09:36:24,"I'm unsure about what this part is doing, if we just close all connection right after? Could this part be left out?",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r454922362,454922362,test/functional/rpc_net.py
jonatack,2020-07-15 11:03:49,"Thanks for reviewing, @eriknylund -- much appreciated. This code at line 100 adds informational logging to the test output at the start of this `_test_getnetworkinfo()` test function (e.g. what you see when you run `test/functional/rpc_net.py`), then updates the rest of the test function to cover the two fields added in this PR while making one less call to `getnetworkinfo()`.",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r454969810,454969810,test/functional/rpc_net.py
jonatack,2020-07-15 11:04:23,"(If I misunderstood your question, let me know.)",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r454970061,454970061,test/functional/rpc_net.py
eriknylund,2020-07-15 12:21:00,"Sorry if my question was unclear I'll try to rephrase it. I realize I should have used the comment function better to hilight all the lines and not only the beginning of the block which was misleading - sorry about that. I'm trying to figure out why the asserts on line 102-105. I think the ones on lines 116-120 are enough to test, as line 110 sets the precondition for this test. Perhaps I'm missin",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r455008755,455008755,test/functional/rpc_net.py
jonatack,2020-07-15 13:12:59,"Oh ok. I agree that the test could be marginally improved or refactored, but it is also fine as-is -- if anything, faster than before -- and not worth invalidating review for.",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r455039997,455039997,test/functional/rpc_net.py
eriknylund,2020-07-15 13:36:55,"Thanks for taking your time to explain. I agree it's probably not worth fixing, just wanted to make sure I understood your intent with those lines asserting the entry of this test method - if there's something obvious I'm missing or could learn with regards to how tests are structured and setup here. ",https://github.com/bitcoin/bitcoin/pull/19405#discussion_r455056916,455056916,test/functional/rpc_net.py
