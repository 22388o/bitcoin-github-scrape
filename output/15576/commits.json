[
  {
    "sha": "d41522b9f35ef80bfc1504bb0a5394ce465b07e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDE1MjJiOWYzNWVmODBiZmMxNTA0YmIwYTUzOTRjZTQ2NWIwN2U5",
    "commit": {
      "author": {
        "name": "Lenny Maiorani",
        "email": "lenny@colorado.edu",
        "date": "2019-03-11T00:56:43Z"
      },
      "committer": {
        "name": "Lenny Maiorani",
        "email": "lenny@colorado.edu",
        "date": "2019-03-11T01:02:04Z"
      },
      "message": "constexpr: Increase constexpr usage in strencodings\n\nProblem:\n- Several items in strencodings.h/cpp are known at compile-time, but are being computed at run-time due to not being labelled as `constexpr`.\n- Several items in strencodings.h/cpp are marked `static` when they are meant to be locally scoped variables.\n\nSolution:\n- Mark items `constexpr` when they can be.\n- Remove `static` qualifier when possible so that variables which are\n  meant to only be used locally are not bloating the final binary by\n  residing in the `data` segment.",
      "tree": {
        "sha": "98065ce930dbda5cdf30ab769ee749d77d29106b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98065ce930dbda5cdf30ab769ee749d77d29106b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d41522b9f35ef80bfc1504bb0a5394ce465b07e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d41522b9f35ef80bfc1504bb0a5394ce465b07e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d41522b9f35ef80bfc1504bb0a5394ce465b07e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d41522b9f35ef80bfc1504bb0a5394ce465b07e9/comments",
    "author": {
      "login": "ldm5180",
      "id": 639247,
      "node_id": "MDQ6VXNlcjYzOTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldm5180",
      "html_url": "https://github.com/ldm5180",
      "followers_url": "https://api.github.com/users/ldm5180/followers",
      "following_url": "https://api.github.com/users/ldm5180/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldm5180/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldm5180/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldm5180/subscriptions",
      "organizations_url": "https://api.github.com/users/ldm5180/orgs",
      "repos_url": "https://api.github.com/users/ldm5180/repos",
      "events_url": "https://api.github.com/users/ldm5180/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldm5180/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ldm5180",
      "id": 639247,
      "node_id": "MDQ6VXNlcjYzOTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldm5180",
      "html_url": "https://github.com/ldm5180",
      "followers_url": "https://api.github.com/users/ldm5180/followers",
      "following_url": "https://api.github.com/users/ldm5180/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldm5180/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldm5180/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldm5180/subscriptions",
      "organizations_url": "https://api.github.com/users/ldm5180/orgs",
      "repos_url": "https://api.github.com/users/ldm5180/repos",
      "events_url": "https://api.github.com/users/ldm5180/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldm5180/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "257f750cd986641afe04316ed0b22b646b56b60b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/257f750cd986641afe04316ed0b22b646b56b60b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/257f750cd986641afe04316ed0b22b646b56b60b"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1f9d3cdd5ae30ff6b789c919d63711992392fdee",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41522b9f35ef80bfc1504bb0a5394ce465b07e9/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41522b9f35ef80bfc1504bb0a5394ce465b07e9/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=d41522b9f35ef80bfc1504bb0a5394ce465b07e9",
        "patch": "@@ -8,6 +8,7 @@\n #include <tinyformat.h>\n \n #include <algorithm>\n+#include <array>\n #include <cstdlib>\n #include <cstring>\n #include <errno.h>\n@@ -34,7 +35,7 @@ std::string SanitizeString(const std::string& str, int rule)\n     return strResult;\n }\n \n-const signed char p_util_hexdigit[256] =\n+constexpr signed char p_util_hexdigit[256] =\n { -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n   -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n   -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n@@ -127,7 +128,7 @@ void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n \n std::string EncodeBase64(const unsigned char* pch, size_t len)\n {\n-    static const char *pbase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n+    constexpr char pbase64[] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n \n     std::string str;\n     str.reserve(((len + 2) / 3) * 4);\n@@ -143,7 +144,7 @@ std::string EncodeBase64(const std::string& str)\n \n std::vector<unsigned char> DecodeBase64(const char* p, bool* pf_invalid)\n {\n-    static const int decode64_table[256] =\n+    constexpr std::array<int,256> decode64_table =\n     {\n         -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n         -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n@@ -196,7 +197,7 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n \n std::string EncodeBase32(const unsigned char* pch, size_t len)\n {\n-    static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n+    constexpr char pbase32[] = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((len + 4) / 5) * 8);\n@@ -212,7 +213,7 @@ std::string EncodeBase32(const std::string& str)\n \n std::vector<unsigned char> DecodeBase32(const char* p, bool* pf_invalid)\n {\n-    static const int decode32_table[256] =\n+    constexpr std::array<int, 256> decode32_table =\n     {\n         -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n         -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n@@ -435,7 +436,7 @@ int atoi(const std::string& str)\n  *  9223372036854775807  (1<<63)-1  (max int64_t)\n  *  9999999999999999999  1^19-1     (would overflow)\n  */\n-static const int64_t UPPER_BOUND = 1000000000000000000LL - 1LL;\n+constexpr int64_t UPPER_BOUND = 1000000000000000000LL - 1LL;\n \n /** Helper function for ParseFixedPoint */\n static inline bool ProcessMantissaDigit(char ch, int64_t &mantissa, int &mantissa_tzeros)"
      },
      {
        "sha": "6d1a288a93fd218c1cefdb0351222269f8be9fc5",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41522b9f35ef80bfc1504bb0a5394ce465b07e9/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41522b9f35ef80bfc1504bb0a5394ce465b07e9/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=d41522b9f35ef80bfc1504bb0a5394ce465b07e9",
        "patch": "@@ -11,6 +11,7 @@\n \n #include <attributes.h>\n \n+#include <array>\n #include <cstdint>\n #include <string>\n #include <vector>\n@@ -124,8 +125,8 @@ template<typename T>\n std::string HexStr(const T itbegin, const T itend, bool fSpaces=false)\n {\n     std::string rv;\n-    static const char hexmap[16] = { '0', '1', '2', '3', '4', '5', '6', '7',\n-                                     '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n+    constexpr std::array<char, 16> hexmap = {'0', '1', '2', '3', '4', '5', '6', '7',\n+                                             '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};\n     rv.reserve((itend-itbegin)*3);\n     for(T it = itbegin; it < itend; ++it)\n     {"
      }
    ]
  }
]