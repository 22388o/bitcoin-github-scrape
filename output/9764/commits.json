[
  {
    "sha": "6c5427d24ca18ce01e46242876e24f68a9c72cc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzU0MjdkMjRjYTE4Y2UwMWU0NjI0Mjg3NmUyNGY2OGE5YzcyY2Mz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-15T10:31:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-15T10:31:28Z"
      },
      "message": "wallet: Prevent \"overrides a member function but is not marked 'override'\" warnings\n\nBecause it is used inconsistently at least version 5.4.0 of g++ to\ncomplains about methods that don't use override. There is two ways to go\nabout this: remove override from the methods having it, or add it to the\nmethods missing it. I chose the second.",
      "tree": {
        "sha": "73b07bb5f5bc6a2bce2e5cde55d47337d81317b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73b07bb5f5bc6a2bce2e5cde55d47337d81317b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c5427d24ca18ce01e46242876e24f68a9c72cc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c5427d24ca18ce01e46242876e24f68a9c72cc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c5427d24ca18ce01e46242876e24f68a9c72cc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c5427d24ca18ce01e46242876e24f68a9c72cc3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8e8b06bd0659b35e51effe35400408ec15bb09b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e8b06bd0659b35e51effe35400408ec15bb09b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e8b06bd0659b35e51effe35400408ec15bb09b"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "a7b15a8441c8410925bd0a1a4ae9b032517483ea",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c5427d24ca18ce01e46242876e24f68a9c72cc3/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c5427d24ca18ce01e46242876e24f68a9c72cc3/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=6c5427d24ca18ce01e46242876e24f68a9c72cc3",
        "patch": "@@ -737,7 +737,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CPubKey GenerateNewKey();\n     void DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret);\n     //! Adds a key to the store, and saves it to disk.\n-    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n+    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey) override;\n     //! Adds a key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadKey(const CKey& key, const CPubKey &pubkey) { return CCryptoKeyStore::AddKeyPubKey(key, pubkey); }\n     //! Load metadata (used by LoadWallet)\n@@ -747,10 +747,10 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     void UpdateTimeFirstKey(int64_t nCreateTime);\n \n     //! Adds an encrypted key to the store, and saves it to disk.\n-    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret) override;\n     //! Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n-    bool AddCScript(const CScript& redeemScript);\n+    bool AddCScript(const CScript& redeemScript) override;\n     bool LoadCScript(const CScript& redeemScript);\n \n     //! Adds a destination data tuple to the store, and saves it to disk\n@@ -764,7 +764,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     //! Adds a watch-only address to the store, and saves it to disk.\n     bool AddWatchOnly(const CScript& dest, int64_t nCreateTime);\n-    bool RemoveWatchOnly(const CScript &dest);\n+    bool RemoveWatchOnly(const CScript &dest) override;\n     //! Adds a watch-only address to the store, without saving it to disk (used by LoadWallet)\n     bool LoadWatchOnly(const CScript &dest);\n \n@@ -786,11 +786,11 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n     bool LoadToWallet(const CWalletTx& wtxIn);\n-    void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, int posInBlock);\n+    void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, int posInBlock) override;\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman);\n+    void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;\n@@ -872,7 +872,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool IsAllFromMe(const CTransaction& tx, const isminefilter& filter) const;\n     CAmount GetCredit(const CTransaction& tx, const isminefilter& filter) const;\n     CAmount GetChange(const CTransaction& tx) const;\n-    void SetBestChain(const CBlockLocator& loc);\n+    void SetBestChain(const CBlockLocator& loc) override;\n \n     DBErrors LoadWallet(bool& fFirstRunRet);\n     DBErrors ZapWalletTx(std::vector<CWalletTx>& vWtx);\n@@ -882,9 +882,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     bool DelAddressBook(const CTxDestination& address);\n \n-    void UpdatedTransaction(const uint256 &hashTx);\n+    void UpdatedTransaction(const uint256 &hashTx) override;\n \n-    void Inventory(const uint256 &hash)\n+    void Inventory(const uint256 &hash) override\n     {\n         {\n             LOCK(cs_wallet);\n@@ -894,8 +894,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n         }\n     }\n \n-    void GetScriptForMining(boost::shared_ptr<CReserveScript> &script);\n-    void ResetRequestCount(const uint256 &hash)\n+    void GetScriptForMining(boost::shared_ptr<CReserveScript> &script) override;\n+    void ResetRequestCount(const uint256 &hash) override\n     {\n         LOCK(cs_wallet);\n         mapRequestCount[hash] = 0;"
      }
    ]
  }
]