practicalswift,2017-01-18T16:35:45Z,"If we're guaranteed that `count` cannot be `0` in this context, should I remove the then redundant [`if (count == 0) {`-check on line 50](https://github.com/practicalswift/bitcoin/blob/6f96b2e518770dae28c07d65fb326c7eb95f50bb/src/bench/bench.cpp#L50) instead?\n\nAs said, please let me know if I'm missing something obvious here and I'll close the PR :-)",https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-273526989,273526989,
MarcoFalke,2017-01-22T02:24:59Z,Agree with @instagibbs  that the code is redundant. Maybe just add a comment or assert that says the count is never zero?,https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-274303016,274303016,
practicalswift,2017-01-22T09:24:42Z,"@MarcoFalke Good point! Updated, squashed and pushed - looks good? :-)",https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-274319515,274319515,
jtimon,2017-02-01T00:07:14Z,utACK e91074b,https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-276534286,276534286,
laanwj,2017-02-02T09:07:05Z,"We shouldn't be using an assertion for error handling.\n\nWhen can this happen? What should be the result (instead of dividing by zero)?",https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-276903456,276903456,
laanwj,2017-02-02T09:08:10Z,"Okay, just re-read the post above, so this can never happen. That wasn't clear to me from the code change: please add a comment specifying that.",https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-276903699,276903699,
practicalswift,2017-02-02T09:46:55Z,@laanwj Good point! Updated and pushed. Looks good? :-),https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-276911981,276911981,
practicalswift,2017-02-27T22:19:34Z,Any changes needed before merge? :-),https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-282875151,282875151,
laanwj,2017-02-28T11:54:24Z,"I think you should change the pull title first - it is incorrect to say that this is a potential division by zero, because it's avoided by previous code.",https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-283019956,283019956,
practicalswift,2017-02-28T12:28:59Z,@laanwj Changed. Looks good? :-),https://github.com/bitcoin/bitcoin/pull/9547#issuecomment-283026570,283026570,
gmaxwell,2017-01-13T21:56:15Z,because of the ++count above I don't believe this can be 1 here.,https://github.com/bitcoin/bitcoin/pull/9547#discussion_r96081958,96081958,src/bench/bench.cpp
practicalswift,2017-01-13T21:59:35Z,@gmaxwell But there is a `--count` on the line below :-),https://github.com/bitcoin/bitcoin/pull/9547#discussion_r96082456,96082456,src/bench/bench.cpp
gmaxwell,2017-01-13T22:00:59Z,"yes, my read it can't be 1 or 0, it must be >1 and then the decrements reduces it to 1.  If it is possible to be 0 at the division then I believe there is a bug elsewhere (in addition).",https://github.com/bitcoin/bitcoin/pull/9547#discussion_r96082659,96082659,src/bench/bench.cpp
practicalswift,2017-01-13T22:16:11Z,"If `count` would be guaranteed to be different from zero, then the check on line 50 (`if (count == 0) {`) wouldn't be needed, right? :-)\n\nIf the branch `if (count == 0) {` is taken then the relevant parts of the remaining code can be reduced to something like:\n\n```\ncount = 0; // implicit\n++count;\n--count;\ndouble average = (now-beginTime)/count;\n```\n\nAssuming I'm reading it co",https://github.com/bitcoin/bitcoin/pull/9547#discussion_r96084910,96084910,src/bench/bench.cpp
instagibbs,2017-01-19T18:05:30Z,Looks like if `maxElapsed` is > 0 then the logic here is redundant for that code path. `count=0` means `now` and `beginTime` are both 0.,https://github.com/bitcoin/bitcoin/pull/9547#discussion_r96919893,96919893,src/bench/bench.cpp
isle2983,2017-01-20T21:34:41Z,"It might be better to fix the issue in the output at the bottom of the function like so:\n\n```\n     // Output results\n-    double average = (now-beginTime)/count;\n-    int64_t averageCycles = (nowCycles-beginCycles)/count;\n+    double average = (count > 0) ? (now-beginTime)/count : 0.0;\n+    int64_t averageCycles = (count > 0) ? (nowCycles-beginCycles)/count : 0;\n     std::cout << s",https://github.com/bitcoin/bitcoin/pull/9547#discussion_r97160332,97160332,src/bench/bench.cpp
