[
  {
    "sha": "a3fc70f0848d9e39a2e95fc5650917f555007036",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2ZjNzBmMDg0OGQ5ZTM5YTJlOTVmYzU2NTA5MTdmNTU1MDA3MDM2",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2019-03-17T15:55:45Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2019-03-17T17:35:01Z"
      },
      "message": "Simplify PONG handler, improve readability of the processing logic.",
      "tree": {
        "sha": "d9ca45eb2e3837c94da6f883206ffcf980c86a63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9ca45eb2e3837c94da6f883206ffcf980c86a63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3fc70f0848d9e39a2e95fc5650917f555007036",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fc70f0848d9e39a2e95fc5650917f555007036",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3fc70f0848d9e39a2e95fc5650917f555007036",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fc70f0848d9e39a2e95fc5650917f555007036/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85f003274d8c90e422467342747543fadb66e9ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85f003274d8c90e422467342747543fadb66e9ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85f003274d8c90e422467342747543fadb66e9ec"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 24,
      "deletions": 45
    },
    "files": [
      {
        "sha": "f8b8332f657eb616d2f95162ce3a2ee8d41a6e11",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 45,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3fc70f0848d9e39a2e95fc5650917f555007036/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3fc70f0848d9e39a2e95fc5650917f555007036/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a3fc70f0848d9e39a2e95fc5650917f555007036",
        "patch": "@@ -2959,58 +2959,37 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::PONG) {\n-        int64_t pingUsecEnd = nTimeReceived;\n+        // We didn't send a ping, there shouldn't be a pong\n+        if (pfrom->nPingNonceSent == 0) {\n+            LogPrint(BCLog::NET, \"pong peer=%d: unsolicited pong\\n\", pfrom->GetId());\n+            return true;\n+        }\n+\n         uint64_t nonce = 0;\n         size_t nAvail = vRecv.in_avail();\n-        bool bPingFinished = false;\n-        std::string sProblem;\n+        if (nAvail != sizeof(nonce)) {\n+            LogPrint(BCLog::NET, \"pong peer=%d: bad buffer length, expected %u actual %u\\n\", pfrom->GetId(), sizeof(nonce), nAvail);\n+            pfrom->nPingNonceSent = 0;\n+            return true;\n+        }\n \n-        if (nAvail >= sizeof(nonce)) {\n-            vRecv >> nonce;\n+        vRecv >> nonce;\n+        if (nonce != pfrom->nPingNonceSent) {\n+            LogPrint(BCLog::NET, \"pong peer=%d: nonce mismatch, expected %x actual %x\\n\", pfrom->GetId(), pfrom->nPingNonceSent, nonce);\n+            pfrom->nPingNonceSent = 0;\n+            return true;\n+        }\n \n-            // Only process pong message if there is an outstanding ping (old ping without nonce should never pong)\n-            if (pfrom->nPingNonceSent != 0) {\n-                if (nonce == pfrom->nPingNonceSent) {\n-                    // Matching pong received, this ping is no longer outstanding\n-                    bPingFinished = true;\n-                    int64_t pingUsecTime = pingUsecEnd - pfrom->nPingUsecStart;\n-                    if (pingUsecTime > 0) {\n-                        // Successful ping time measurement, replace previous\n-                        pfrom->nPingUsecTime = pingUsecTime;\n-                        pfrom->nMinPingUsecTime = std::min(pfrom->nMinPingUsecTime.load(), pingUsecTime);\n-                    } else {\n-                        // This should never happen\n-                        sProblem = \"Timing mishap\";\n-                    }\n-                } else {\n-                    // Nonce mismatches are normal when pings are overlapping\n-                    sProblem = \"Nonce mismatch\";\n-                    if (nonce == 0) {\n-                        // This is most likely a bug in another implementation somewhere; cancel this ping\n-                        bPingFinished = true;\n-                        sProblem = \"Nonce zero\";\n-                    }\n-                }\n-            } else {\n-                sProblem = \"Unsolicited pong without ping\";\n-            }\n+        int64_t pingUsecTime = nTimeReceived - pfrom->nPingUsecStart;\n+        if (pingUsecTime >= 0) {\n+            // Successful ping time measurement, replace previous\n+            pfrom->nPingUsecTime = pingUsecTime;\n+            pfrom->nMinPingUsecTime = std::min(pfrom->nMinPingUsecTime.load(), pingUsecTime);\n         } else {\n-            // This is most likely a bug in another implementation somewhere; cancel this ping\n-            bPingFinished = true;\n-            sProblem = \"Short payload\";\n+            LogPrint(BCLog::NET, \"pong peer=%d: received pong before ping sent, maybe clock changed?\\n\", pfrom->GetId());\n         }\n \n-        if (!(sProblem.empty())) {\n-            LogPrint(BCLog::NET, \"pong peer=%d: %s, %x expected, %x received, %u bytes\\n\",\n-                pfrom->GetId(),\n-                sProblem,\n-                pfrom->nPingNonceSent,\n-                nonce,\n-                nAvail);\n-        }\n-        if (bPingFinished) {\n-            pfrom->nPingNonceSent = 0;\n-        }\n+        pfrom->nPingNonceSent = 0;\n         return true;\n     }\n "
      }
    ]
  }
]