[
  {
    "sha": "d3e8adfada889a3c9fba930086eda609509aca07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2U4YWRmYWRhODg5YTNjOWZiYTkzMDA4NmVkYTYwOTUwOWFjYTA3",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-16T23:43:11Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-17T11:16:09Z"
      },
      "message": "util: remove c-string interfaces for DecodeBase58{Check}",
      "tree": {
        "sha": "f106dae11ab2552c6d4329a9c0cfd2b8da5e7a97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f106dae11ab2552c6d4329a9c0cfd2b8da5e7a97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3e8adfada889a3c9fba930086eda609509aca07",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3e8adfada889a3c9fba930086eda609509aca07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3e8adfada889a3c9fba930086eda609509aca07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3e8adfada889a3c9fba930086eda609509aca07/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ffad34816722cdf27a0a7c16539ddd1d655602e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffad34816722cdf27a0a7c16539ddd1d655602e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ffad34816722cdf27a0a7c16539ddd1d655602e0"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 2,
      "deletions": 15
    },
    "files": [
      {
        "sha": "3a280880797c383b0ca35321df8ab748b6d4a32b",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3e8adfada889a3c9fba930086eda609509aca07/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3e8adfada889a3c9fba930086eda609509aca07/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=d3e8adfada889a3c9fba930086eda609509aca07",
        "patch": "@@ -35,7 +35,7 @@ static const int8_t mapBase58[256] = {\n     -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,\n };\n \n-bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_len)\n+NODISCARD static bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_len)\n {\n     // Skip leading spaces.\n     while (*psz && IsSpace(*psz))\n@@ -146,7 +146,7 @@ std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn)\n     return EncodeBase58(vch);\n }\n \n-bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet, int max_ret_len)\n+NODISCARD static bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet, int max_ret_len)\n {\n     if (!DecodeBase58(psz, vchRet, max_ret_len > std::numeric_limits<int>::max() - 4 ? std::numeric_limits<int>::max() : max_ret_len + 4) ||\n         (vchRet.size() < 4)) {"
      },
      {
        "sha": "a869ee1e750b24bf3d62f35c0c2b8e9d3788f9e0",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3e8adfada889a3c9fba930086eda609509aca07/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3e8adfada889a3c9fba930086eda609509aca07/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=d3e8adfada889a3c9fba930086eda609509aca07",
        "patch": "@@ -30,13 +30,6 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n  */\n std::string EncodeBase58(const std::vector<unsigned char>& vch);\n \n-/**\n- * Decode a base58-encoded string (psz) into a byte vector (vchRet).\n- * return true if decoding is successful.\n- * psz cannot be nullptr.\n- */\n-NODISCARD bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet, int max_ret_len);\n-\n /**\n  * Decode a base58-encoded string (str) into a byte vector (vchRet).\n  * return true if decoding is successful.\n@@ -48,12 +41,6 @@ NODISCARD bool DecodeBase58(const std::string& str, std::vector<unsigned char>&\n  */\n std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn);\n \n-/**\n- * Decode a base58-encoded string (psz) that includes a checksum into a byte\n- * vector (vchRet), return true if decoding is successful\n- */\n-NODISCARD bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet, int max_ret_len);\n-\n /**\n  * Decode a base58-encoded string (str) that includes a checksum into a byte\n  * vector (vchRet), return true if decoding is successful"
      }
    ]
  }
]