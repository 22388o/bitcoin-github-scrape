[
  {
    "sha": "381826dfee6258accafac29eef93ad264a90aaf6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODE4MjZkZmVlNjI1OGFjY2FmYWMyOWVlZjkzYWQyNjRhOTBhYWY2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-14T13:08:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-21T12:02:42Z"
      },
      "message": "bitcoin-cli: More detailed error reporting\n\nRegister a evhttp error handler to get a more detailed error message\nif the HTTP request fails.",
      "tree": {
        "sha": "c056bbdd49a829a9a1df56cd170210a25c506a38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c056bbdd49a829a9a1df56cd170210a25c506a38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/381826dfee6258accafac29eef93ad264a90aaf6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381826dfee6258accafac29eef93ad264a90aaf6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/381826dfee6258accafac29eef93ad264a90aaf6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381826dfee6258accafac29eef93ad264a90aaf6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fec6af744014d60242bf9ea0d343e3295e6e091a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fec6af744014d60242bf9ea0d343e3295e6e091a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fec6af744014d60242bf9ea0d343e3295e6e091a"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 39,
      "deletions": 3
    },
    "files": [
      {
        "sha": "68f5d90f5103d7f124bd5e8a7d5ffe9328b15320",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 3,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/381826dfee6258accafac29eef93ad264a90aaf6/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/381826dfee6258accafac29eef93ad264a90aaf6/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=381826dfee6258accafac29eef93ad264a90aaf6",
        "patch": "@@ -116,17 +116,42 @@ static bool AppInitRPC(int argc, char* argv[])\n /** Reply structure for request_done to fill in */\n struct HTTPReply\n {\n+    HTTPReply(): status(0), error(-1) {}\n+\n     int status;\n+    int error;\n     std::string body;\n };\n \n+const char *http_errorstring(int code)\n+{\n+    switch(code) {\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010300\n+    case EVREQ_HTTP_TIMEOUT:\n+        return \"timeout reached\";\n+    case EVREQ_HTTP_EOF:\n+        return \"EOF reached\";\n+    case EVREQ_HTTP_INVALID_HEADER:\n+        return \"error while reading header, or invalid header\";\n+    case EVREQ_HTTP_BUFFER_ERROR:\n+        return \"error encountered while reading or writing\";\n+    case EVREQ_HTTP_REQUEST_CANCEL:\n+        return \"request was canceled\";\n+    case EVREQ_HTTP_DATA_TOO_LONG:\n+        return \"response body is larger than allowed\";\n+#endif\n+    default:\n+        return \"unknown\";\n+    }\n+}\n+\n static void http_request_done(struct evhttp_request *req, void *ctx)\n {\n     HTTPReply *reply = static_cast<HTTPReply*>(ctx);\n \n     if (req == NULL) {\n-        /* If req is NULL, it means an error occurred while connecting, but\n-         * I'm not sure how to find out which one. We also don't really care.\n+        /* If req is NULL, it means an error occurred while connecting: the\n+         * error code will have been passed to http_error_cb.\n          */\n         reply->status = 0;\n         return;\n@@ -145,6 +170,14 @@ static void http_request_done(struct evhttp_request *req, void *ctx)\n     }\n }\n \n+#if LIBEVENT_VERSION_NUMBER >= 0x02010300\n+static void http_error_cb(enum evhttp_request_error err, void *ctx)\n+{\n+    HTTPReply *reply = static_cast<HTTPReply*>(ctx);\n+    reply->error = err;\n+}\n+#endif\n+\n UniValue CallRPC(const string& strMethod, const UniValue& params)\n {\n     std::string host = GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT);\n@@ -165,6 +198,9 @@ UniValue CallRPC(const string& strMethod, const UniValue& params)\n     struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII\n     if (req == NULL)\n         throw runtime_error(\"create http request failed\");\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010300\n+    evhttp_request_set_error_cb(req, http_error_cb);\n+#endif\n \n     // Get credentials\n     std::string strRPCUserColonPass;\n@@ -204,7 +240,7 @@ UniValue CallRPC(const string& strMethod, const UniValue& params)\n     event_base_free(base);\n \n     if (response.status == 0)\n-        throw CConnectionFailed(\"couldn't connect to server\");\n+        throw CConnectionFailed(strprintf(\"couldn't connect to server (%d %s)\", response.error, http_errorstring(response.error)));\n     else if (response.status == HTTP_UNAUTHORIZED)\n         throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n     else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)"
      }
    ]
  }
]