[
  {
    "sha": "b515b807790bee3fb6dd0e5f0483bddb0442db84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTE1YjgwNzc5MGJlZTNmYjZkZDBlNWYwNDgzYmRkYjA0NDJkYjg0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-13T18:56:33Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-13T22:08:19Z"
      },
      "message": "Save client version to settings.json on shutdown",
      "tree": {
        "sha": "b2963fe2f7e41dabfa852eab968ce0b9e76bb8c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2963fe2f7e41dabfa852eab968ce0b9e76bb8c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b515b807790bee3fb6dd0e5f0483bddb0442db84",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAoTdkACgkQT1chs9Dj\nkh0jQRAAmZA0I0+w0JXl1pXFA5Qn2cUw5LOnqn4C3hPF143t2g6XDxwrDaBIi7Tr\nh5gSFlkaZJX550slwgUBtmpC6FC8I99fXLodWIhXOOiEKF3/iyiNw0/9huniI8Ee\nipT/z6UoCH1+YSOqWPN4vbu4wIAC7zG5OzZ7IYHduu1Fzi9HfDwMMT1l8AM98685\n5FOF8NuXH1ZDZmsuqW30VIQoTtSns64xBFNqzRyrY9rzzKAVExkwIlooVw5Sf19E\nB/pR+cPaUzdtPWV+z5so/daQIJINpP7g/1Rk7F4AU9W4WkVBoYUVxEAS4zEaCaQU\nb9MT8RmvZaH3FM8iwhUxuuE0ZwGWFg8vzZfn/w8KIkdB5xnoZchr/NNuhseu32lQ\nkPv+b8VsegYqmMxjxyPsCYkrYauQCwWerscUEjOX46CkoTT7wp2ljuJIZuUu2dQa\nmXY2176VC1qgewPufM/q1FFMA6z/VZQamij7r3Zb3ji9EO5sB0K3E7h1Six6fVOi\nLN6Un0zn0i/ZmuYKOGN4IRhPPRF9l14VRKhh5OD/QRrXhcA+cBOFOKNbU1Gk3UQa\neC+gpfnVtM0VC8I3s8HtopGLXI8TWXqj6k3LknVDTSe09WtWl2cyVykHX0je8cS4\ngnK3YZP3/KLd0qt3eWKt8s6dFbSACyilN9C9GdKsau4BlMPeVog=\n=rwSE\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILq6z8ZugAicvcpK0pTZMsz4MmRQAAN1En+RRa76j6Y3CP/wEJOviCp+ml8U\nB31EwTbsuB4I8SDvneZyA9/wRX/Gwbz8I4SqpLrkFDQ9/HKfuH95KFAk+wjxBGAo\nTdvwCIU3asMkhbi4AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BCoLbIx7XVmQuGUqHcKGgmjCPEEYChN2/AI\nMox3LOsROuAAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BDqiqwHH8mncQwXONKU8usMCPEguaHr0USXxVDsJTCd\nNo8/FI12fRCHsFBkEs0vZm2hnxsI8QRgKEAJ8AiAhODNv1+VpwCD3+MNLvkMjiko\naHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQ9BcHf7cD\nh86LoloOFV9ccAjxBGAoTdrwCC4HgeK04JsTAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b2963fe2f7e41dabfa852eab968ce0b9e76bb8c5\nparent bf3189eda65d269fee6a70681ab390bd7cebf7d7\nauthor Jon Atack <jon@atack.com> 1613242593 +0100\ncommitter Jon Atack <jon@atack.com> 1613254099 +0100\n\nSave client version to settings.json on shutdown\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b515b807790bee3fb6dd0e5f0483bddb0442db84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b515b807790bee3fb6dd0e5f0483bddb0442db84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b515b807790bee3fb6dd0e5f0483bddb0442db84/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf3189eda65d269fee6a70681ab390bd7cebf7d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf3189eda65d269fee6a70681ab390bd7cebf7d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf3189eda65d269fee6a70681ab390bd7cebf7d7"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 22,
      "deletions": 5
    },
    "files": [
      {
        "sha": "5b17a00c9c70bd19f8d877c78e759604894a6e78",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b515b807790bee3fb6dd0e5f0483bddb0442db84/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b515b807790bee3fb6dd0e5f0483bddb0442db84/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b515b807790bee3fb6dd0e5f0483bddb0442db84",
        "patch": "@@ -15,6 +15,7 @@\n #include <blockfilter.h>\n #include <chain.h>\n #include <chainparams.h>\n+#include <clientversion.h>\n #include <compat/sanity.h>\n #include <consensus/validation.h>\n #include <fs.h>\n@@ -285,6 +286,11 @@ void Shutdown(NodeContext& node)\n     }\n #endif\n \n+    if (!node.args->IsArgNegated(\"-settings\")) {\n+        // Persist client version to <datadir>/settings.json file.\n+        node.chain->updateRwSetting(\"lastrunversion\", util::SettingsValue{CLIENT_VERSION});\n+    }\n+\n     node.chain_clients.clear();\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();"
      },
      {
        "sha": "40f391b6e9b6f40708d79cc24cfaa6862c42ebdb",
        "filename": "test/functional/feature_settings.py",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b515b807790bee3fb6dd0e5f0483bddb0442db84/test/functional/feature_settings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b515b807790bee3fb6dd0e5f0483bddb0442db84/test/functional/feature_settings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_settings.py?ref=b515b807790bee3fb6dd0e5f0483bddb0442db84",
        "patch": "@@ -23,15 +23,20 @@ def run_test(self):\n         node, = self.nodes\n         settings = Path(node.datadir, self.chain, \"settings.json\")\n         conf = Path(node.datadir, \"bitcoin.conf\")\n+        version = node.getnetworkinfo()[\"version\"]\n \n-        # Assert empty settings file was created\n-        self.stop_node(0)\n+        # Assert empty settings file is created on startup\n         with settings.open() as fp:\n             assert_equal(json.load(fp), {})\n \n+        # Assert client version is saved in settings file on shutdown\n+        self.stop_node(0)\n+        with settings.open() as fp:\n+            assert_equal(json.load(fp), {\"lastrunversion\": version})\n+\n         # Assert settings are parsed and logged\n         with settings.open(\"w\") as fp:\n-            json.dump({\"string\": \"string\", \"num\": 5, \"bool\": True, \"null\": None, \"list\": [6, 7]}, fp)\n+            json.dump({\"lastrunversion\": \"3.14\", \"string\": \"string\", \"num\": 5, \"bool\": True, \"null\": None, \"list\": [6, 7]}, fp)\n         with node.assert_debug_log(expected_msgs=[\n                 'Ignoring unknown rw_settings value bool',\n                 'Ignoring unknown rw_settings value list',\n@@ -43,13 +48,17 @@ def run_test(self):\n                 'Setting file arg: bool = true',\n                 'Setting file arg: null = null',\n                 'Setting file arg: list = [6,7]',\n+                'Setting file arg: lastrunversion = \"3.14\"',\n         ]):\n             self.start_node(0)\n             self.stop_node(0)\n \n-        # Assert settings are unchanged after shutdown\n+        # Assert settings are unchanged after shutdown, except lastrunversion, which is updated\n         with settings.open() as fp:\n-            assert_equal(json.load(fp), {\"string\": \"string\", \"num\": 5, \"bool\": True, \"null\": None, \"list\": [6, 7]})\n+            assert_equal(json.load(fp), {\n+                \"string\": \"string\", \"num\": 5, \"bool\": True, \"null\": None, \"list\": [6, 7],\n+                \"lastrunversion\": version,\n+            })\n \n         # Test invalid json\n         with settings.open(\"w\") as fp:\n@@ -85,6 +94,8 @@ def run_test(self):\n         with node.assert_debug_log(expected_msgs=['Setting file arg: key = \"value\"']):\n             self.start_node(0, extra_args=[\"-settings={}\".format(altsettings)])\n             self.stop_node(0)\n+        with altsettings.open() as fp:\n+            assert_equal(json.load(fp), {\"key\": \"value\", \"lastrunversion\": version})\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "3a2f31ee90a14c708816d17ceb42b5393e910cdc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTJmMzFlZTkwYTE0YzcwODgxNmQxN2NlYjQyYjUzOTNlOTEwY2Rj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-13T19:26:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-13T22:14:15Z"
      },
      "message": "Add logging to test/functional/feature_settings.py",
      "tree": {
        "sha": "ea8c001d39577f0eadcc2eb1625b766f7297aaa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea8c001d39577f0eadcc2eb1625b766f7297aaa3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a2f31ee90a14c708816d17ceb42b5393e910cdc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAoTzwACgkQT1chs9Dj\nkh2RjQ/9EvgkWwnc6aomPBHyoKkW2+ksnX61RL3pOB2heX5EwiZpFev45B4UoDcs\n+IctaC1Mg8ykyH4Rg9Ky/p+NydxfCnrdClev/rBQfImIzzdJQh7DW89VG8F79+bD\nhsxUKVc1MqaGR41B5qyoEHGhBa/owmz3Ulnw+JyQucaPTT9WYQt2tNqHDB0H5TFI\no55EcxEspxgIpxBNa3HYFiyP3vnud5eRZSqy4wAnSdnnWCwqAFSfwrUxbujqIC5R\nJhsxflJFZgHTYg/cSjdxyNFvlreprRVdq+w70ERSWeumDU3mF2axrle0rHSJiV4I\nCFh22DiS3nGlMJdEeCEB6HzjdMX034QCZTNlaBWuCVJDTRLzH0kCUvO67vb/bdVt\n7mlKLtKaGXE4SgP2BMuVx3SpTZ6mFGvsnbGpM5DB136YYz0BsL4mrrdSKK7qW9z/\nzkjhVxX3wpN8FP6rcrcTZVAro/YLScfqOb8HENBExZE0FR0jNsmG1td25ShpanAh\nRH5DKsbHhUG03juOxgMF/a1IrfAGwKOW6Q4xqmcd7nhJl+YV20RB/3YNwA7Y7Fc2\nTIGjZ7KupigZaQG52ZPZ+vluim/DMFLh9ctUX7kKMIID9GQBGGW0z/yuSZgpYmKS\nAl9ikuUWO3v3RYYPFkD63WcuSZtncuKPSpjOC8ndX5B7m8zgMno=\n=6N+M\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKp0Us1SUAU7F08zVmKm10tszJQmCEGe0+S/+wEdD51sCP/wECB52bbWduZW\nKVcX2qGMjMII8QRgKE8+8Ag10nUfx5QdnQCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEJT+/e0oVQ84k5yR+rqT\nYq4I8QRgKEFs8AhUPZubFKuyXACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEPGNtBAMV3lyLwmMaagCLDkI8QRgKE8+\n8AgkQ1dnFU5+6QCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ+IcUheL+sS3FQVSymdnSNAjxBGAoTz3wCIW8tuFc3N0GAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ea8c001d39577f0eadcc2eb1625b766f7297aaa3\nparent b515b807790bee3fb6dd0e5f0483bddb0442db84\nauthor Jon Atack <jon@atack.com> 1613244360 +0100\ncommitter Jon Atack <jon@atack.com> 1613254455 +0100\n\nAdd logging to test/functional/feature_settings.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a2f31ee90a14c708816d17ceb42b5393e910cdc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a2f31ee90a14c708816d17ceb42b5393e910cdc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a2f31ee90a14c708816d17ceb42b5393e910cdc/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b515b807790bee3fb6dd0e5f0483bddb0442db84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b515b807790bee3fb6dd0e5f0483bddb0442db84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b515b807790bee3fb6dd0e5f0483bddb0442db84"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "251602eaf677d0ea273f8ea25fe35a01d4e72aa3",
        "filename": "test/functional/feature_settings.py",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a2f31ee90a14c708816d17ceb42b5393e910cdc/test/functional/feature_settings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a2f31ee90a14c708816d17ceb42b5393e910cdc/test/functional/feature_settings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_settings.py?ref=3a2f31ee90a14c708816d17ceb42b5393e910cdc",
        "patch": "@@ -25,16 +25,16 @@ def run_test(self):\n         conf = Path(node.datadir, \"bitcoin.conf\")\n         version = node.getnetworkinfo()[\"version\"]\n \n-        # Assert empty settings file is created on startup\n+        self.log.info(\"Test empty settings file is created on startup\")\n         with settings.open() as fp:\n             assert_equal(json.load(fp), {})\n \n-        # Assert client version is saved in settings file on shutdown\n+        self.log.info(\"Test client version is saved in settings file on shutdown\")\n         self.stop_node(0)\n         with settings.open() as fp:\n             assert_equal(json.load(fp), {\"lastrunversion\": version})\n \n-        # Assert settings are parsed and logged\n+        self.log.info(\"Test settings are parsed and logged on startup\")\n         with settings.open(\"w\") as fp:\n             json.dump({\"lastrunversion\": \"3.14\", \"string\": \"string\", \"num\": 5, \"bool\": True, \"null\": None, \"list\": [6, 7]}, fp)\n         with node.assert_debug_log(expected_msgs=[\n@@ -53,41 +53,41 @@ def run_test(self):\n             self.start_node(0)\n             self.stop_node(0)\n \n-        # Assert settings are unchanged after shutdown, except lastrunversion, which is updated\n+        self.log.info(\"Test settings are unchanged after shutdown, except lastrunversion, which is updated\")\n         with settings.open() as fp:\n             assert_equal(json.load(fp), {\n                 \"string\": \"string\", \"num\": 5, \"bool\": True, \"null\": None, \"list\": [6, 7],\n                 \"lastrunversion\": version,\n             })\n \n-        # Test invalid json\n+        self.log.info(\"Test invalid json\")\n         with settings.open(\"w\") as fp:\n             fp.write(\"invalid json\")\n         node.assert_start_raises_init_error(expected_msg='Unable to parse settings file', match=ErrorMatch.PARTIAL_REGEX)\n \n-        # Test invalid json object\n+        self.log.info(\"Test invalid json object\")\n         with settings.open(\"w\") as fp:\n             fp.write('\"string\"')\n         node.assert_start_raises_init_error(expected_msg='Found non-object value \"string\" in settings file', match=ErrorMatch.PARTIAL_REGEX)\n \n-        # Test invalid settings file containing duplicate keys\n+        self.log.info(\"Test invalid settings file containing duplicate keys\")\n         with settings.open(\"w\") as fp:\n             fp.write('{\"key\": 1, \"key\": 2}')\n         node.assert_start_raises_init_error(expected_msg='Found duplicate key key in settings file', match=ErrorMatch.PARTIAL_REGEX)\n \n-        # Test invalid settings file is ignored with command line -nosettings\n+        self.log.info(\"Test invalid settings file is ignored with command line -nosettings\")\n         with node.assert_debug_log(expected_msgs=['Command-line arg: settings=false']):\n             self.start_node(0, extra_args=[\"-nosettings\"])\n             self.stop_node(0)\n \n-        # Test invalid settings file is ignored with config file -nosettings\n+        self.log.info(\"Test invalid settings file is ignored with config file -nosettings\")\n         with conf.open('a') as conf:\n             conf.write('nosettings=1\\n')\n         with node.assert_debug_log(expected_msgs=['Config file arg: [regtest] settings=false']):\n             self.start_node(0)\n             self.stop_node(0)\n \n-        # Test alternate settings path\n+        self.log.info(\"Test alternate settings path\")\n         altsettings = Path(node.datadir, \"altsettings.json\")\n         with altsettings.open(\"w\") as fp:\n             fp.write('{\"key\": \"value\"}')"
      }
    ]
  }
]