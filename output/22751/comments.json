[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903013607",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903013607",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903013607,
    "node_id": "IC_kwDOABII58410uTn",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T00:00:12Z",
    "updated_at": "2021-08-21T00:00:12Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. Perhaps `nettransactionbalance` or something to represent the balance-specific use?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903013607/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903052080",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903052080",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903052080,
    "node_id": "IC_kwDOABII584103sw",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T04:05:07Z",
    "updated_at": "2021-08-21T04:05:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. \r\n\r\nAgree. We already have RPC with similar name: `analyzepsbt` which returns lot of things that would be helpful for someone using PSBT. Although I am still confused between `decodepsbt` and `analyzepsbt`.\r\n\r\n> Perhaps nettransactionbalance or something to represent the balance-specific use?\r\n\r\nOr maybe add it in the results of any existing RPC",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903052080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903076896",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903076896",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903076896,
    "node_id": "IC_kwDOABII584109wg",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T07:45:23Z",
    "updated_at": "2021-08-21T07:48:37Z",
    "author_association": "MEMBER",
    "body": "I have no strong feelings about keeping `analyze` but I think `<verb>rawtransaction` is a good name (edit: because it is sticking to the convention), where `<verb>` somehow indicates looking at each input and output and determining whether they belong to the wallet, and if so to add/subtract the appropriate amount.\r\n\r\nEdit: adding to results of existing RPC sounds good to me too, but not sure which that would be.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903076896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903104233",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903104233",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903104233,
    "node_id": "IC_kwDOABII58411Ebp",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T11:45:01Z",
    "updated_at": "2021-08-21T12:23:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> adding to results of existing RPC sounds good to me too, but not sure which that would be.\r\n\r\nCan we add this to [`getbalance`](https://bitcoincore.org/en/doc/0.21.0/rpc/wallet/getbalance/)? Will need one argument `include_tx` so the command would look like this:\r\n\r\n```\r\n$ bitcoin-cli -named getbalance include_tx=hex\r\n\r\nResult:\r\n{                   \r\n  \"balance\" : n    (numeric) The total amount in BTC received for this wallet.\r\n\r\n  \"change\"  : n    (numeric) The wallet balance change including tx(negative means decrease).\r\n}\r\n```\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903104233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903227551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903227551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903227551,
    "node_id": "IC_kwDOABII58411iif",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-22T07:38:23Z",
    "updated_at": "2021-08-22T07:38:23Z",
    "author_association": "MEMBER",
    "body": "@prayank23 \r\n\r\n> Can we add this to [`getbalance`](https://bitcoincore.org/en/doc/0.21.0/rpc/wallet/getbalance/)?\r\n\r\nAdding to `getbalance` sounds reasonable to me.\r\n\r\n@jonatack \r\n\r\n> Concept ACK. Maybe add to decoderawtransaction? (Ignore me if that's dumb, and feel free to ignore the more detailed review comments below until the direction is set.)\r\n\r\nThis requires the wallet so `decoderawtransaction` is out, I'm afraid. :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903227551/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903228160",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903228160",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903228160,
    "node_id": "IC_kwDOABII58411isA",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-22T07:45:01Z",
    "updated_at": "2021-08-22T07:45:01Z",
    "author_association": "MEMBER",
    "body": "(getbalances is the replacement for getbalance).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903228160/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903260884",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903260884",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903260884,
    "node_id": "IC_kwDOABII58411qrU",
    "user": {
      "login": "kristapsk",
      "id": 4500994,
      "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4500994?u=85c0215b4144f580341a17fc5af4dad33c2d8123&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kristapsk",
      "html_url": "https://github.com/kristapsk",
      "followers_url": "https://api.github.com/users/kristapsk/followers",
      "following_url": "https://api.github.com/users/kristapsk/following{/other_user}",
      "gists_url": "https://api.github.com/users/kristapsk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
      "organizations_url": "https://api.github.com/users/kristapsk/orgs",
      "repos_url": "https://api.github.com/users/kristapsk/repos",
      "events_url": "https://api.github.com/users/kristapsk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kristapsk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-22T12:23:08Z",
    "updated_at": "2021-08-22T12:23:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be better to return JSON instead of numeric, that would allow adding possible other analysis in the future without breaking backwards compatibility.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903260884/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903422148",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903422148",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903422148,
    "node_id": "IC_kwDOABII58412SDE",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T03:58:42Z",
    "updated_at": "2021-08-23T03:58:42Z",
    "author_association": "MEMBER",
    "body": "Thanks for all the feedback. I'm rewriting this as a separate pull request that adds the feature to `getbalances`. I'll potentially keep updating this PR as well, in case somebody prefers this variant.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903422148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903431067",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903431067",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903431067,
    "node_id": "IC_kwDOABII58412UOb",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T04:20:40Z",
    "updated_at": "2021-08-23T04:20:40Z",
    "author_association": "MEMBER",
    "body": "Opened alternative #22776 and updated this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903431067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903811963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903811963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 903811963,
    "node_id": "IC_kwDOABII58413xN7",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-23T14:13:21Z",
    "updated_at": "2021-11-17T11:08:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23532](https://github.com/bitcoin/bitcoin/pull/23532) (test: add functional test for -startupnotify by brunoerg)\n* [#22776](https://github.com/bitcoin/bitcoin/pull/22776) (rpc/wallet: add optional transaction(s) to getbalances by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903811963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905174885",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905174885",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 905174885,
    "node_id": "IC_kwDOABII5841899l",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T04:32:19Z",
    "updated_at": "2021-08-25T04:32:19Z",
    "author_association": "MEMBER",
    "body": "@kallewoof do you mind adding mention of #22776 to the OP so people looking at this are clear of the alternative",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905174885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905367425",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905367425",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 905367425,
    "node_id": "IC_kwDOABII58419s-B",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T10:12:43Z",
    "updated_at": "2021-08-25T10:12:43Z",
    "author_association": "MEMBER",
    "body": "> @kallewoof do you mind adding mention of #22776 to the OP so people looking at this are clear of the alternative\r\n\r\nGood point, done.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905367425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905367905",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905367905",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 905367905,
    "node_id": "IC_kwDOABII58419tFh",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T10:13:25Z",
    "updated_at": "2021-08-25T10:29:18Z",
    "author_association": "MEMBER",
    "body": "~Apologies, I switched to a constant CWallet so had to re-push.~\r\n\r\nReverted change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905367905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905950000",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905950000",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 905950000,
    "node_id": "IC_kwDOABII5841_7Mw",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-25T23:49:43Z",
    "updated_at": "2021-08-25T23:49:43Z",
    "author_association": "MEMBER",
    "body": "This seems useful, but I would like to see its functionality be a bit broader, and the name changed.\r\n\r\nOn the topic of functionality, I do see how it would be useful to see what changes a transaction would make without actually broadcasting it. We currently have `testmempoolaccept` which simulates `sendrawtransaction`. What if we had this RPC be `testwalletaccept` where we can not only observe how the balances change, but also which transaction(s) it conflicts with/replaces in the wallet. It could also be useful to have such an RPC indicate whether it would even be tracked by the wallet, and what metadata the wallet would assign to each output (e.g. mine, change, etc.). However such changes would likely need more invasive changes to the wallet itself before the RPC could be implemented (e.g. refactors to allow checks without actually adding to the wallet).\r\n\r\nOn the topic of naming, I would prefer that we don't use `analyzerawtransaction` unless it is doing something equivalent to `analyzepsbt`. Currently the PSBT and raw transaction RPCs have similar names to indicate that they do equivalent things but with different data structures. This proposed `analyzerawtransaction` is not at all equivalent to the existing `analyzepsbt` - the equivalent thing would be to say what steps need to be done next to the raw transaction in order to sign it. I would rather this be something like `testwalletaccept` or perhaps `simulaterawtransaction`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905950000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906059704",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-906059704",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 906059704,
    "node_id": "IC_kwDOABII5842AV-4",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T03:15:09Z",
    "updated_at": "2021-08-26T03:25:44Z",
    "author_association": "MEMBER",
    "body": "@achow101\r\n\r\nThanks for the feedback. Great suggestions!\r\n\r\nI think it's agreed that this should be renamed if we do not go with the alternative proposal to add this to `getbalances` (see #22776); I'll rename to `simulaterawtransaction` for now. It seems like your additional functionality may come as follow-up PR(s), too.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906059704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906187435",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-906187435",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 906187435,
    "node_id": "IC_kwDOABII5842A1Kr",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T08:05:36Z",
    "updated_at": "2021-08-26T08:05:36Z",
    "author_association": "MEMBER",
    "body": "Updated to take array of transactions instead of just one.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906187435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921136915",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-921136915",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 921136915,
    "node_id": "IC_kwDOABII5842528T",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-16T18:18:47Z",
    "updated_at": "2021-09-16T18:18:47Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, interesting feature",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921136915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923865580",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-923865580",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 923865580,
    "node_id": "IC_kwDOABII5843ERHs",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T10:53:08Z",
    "updated_at": "2021-09-21T10:53:08Z",
    "author_association": "MEMBER",
    "body": "* added `include_watchonly` option\r\n* updated tests to use one node with two wallets\r\n* added `include_watchonly` tests",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923865580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924071463",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-924071463",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 924071463,
    "node_id": "IC_kwDOABII5843FDYn",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T14:57:42Z",
    "updated_at": "2021-09-21T14:57:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approach NACK\r\n\r\nI prefer https://github.com/bitcoin/bitcoin/pull/22776\r\n\r\nReasons: \r\n\r\n1. No need to create another RPC and remember another RPC.\r\n2. Other PR keeps things simple. This is basically returning balances but based on some conditions. It makes sense to add conditions (transactions in this case) as an argument in `getbalances`.\r\n3. Same approach can be followed in future for other RPCs if required. Example: What will be output for `getmempoolinfo` if a list of transactions are broadcasted: `getmempoolinfo \"[Tx1, Tx2.. Txn]\"`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924071463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924574194",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-924574194",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "id": 924574194,
    "node_id": "IC_kwDOABII5843G-Hy",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T04:29:50Z",
    "updated_at": "2021-09-22T04:29:50Z",
    "author_association": "MEMBER",
    "body": "FWIW, @apoelstra suggests this is modified to take PSBT(s) instead of raw transactions, stating that the latter is more or less made obsolete by the former, and in multi-party transactions people will most likely be using PSBT.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924574194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814",
    "pull_request_review_id": 734716391,
    "id": 692703814,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcwMzgxNA==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
    "path": "test/functional/wallet_analyzerawtx.py",
    "position": null,
    "original_position": 60,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`test/functional/wallet_analyzerawtx.py:60:9: F841 local variable 'analysis' is assigned to but never used`",
    "created_at": "2021-08-20T06:40:00Z",
    "updated_at": "2021-08-20T06:40:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520",
    "pull_request_review_id": 734731551,
    "id": 692716520,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcxNjUyMA==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
    "path": "test/functional/wallet_analyzerawtx.py",
    "position": null,
    "original_position": 60,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, fixed.",
    "created_at": "2021-08-20T07:04:56Z",
    "updated_at": "2021-08-20T07:04:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 692703814
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773",
    "pull_request_review_id": 735506097,
    "id": 693372773,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzM3Mjc3Mw==",
    "diff_hunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())",
    "path": "test/functional/wallet_analyzerawtx.py",
    "position": null,
    "original_position": 37,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "<details><summary>Some suggestions for the test</summary><p>\r\n\r\n```diff\r\n--- a/test/functional/wallet_analyzerawtx.py\r\n+++ b/test/functional/wallet_analyzerawtx.py\r\n@@ -5,12 +5,14 @@\r\n \"\"\"Test analyzerawtransaction.\r\n \"\"\"\r\n \r\n+from test_framework.blocktools import COINBASE_MATURITY\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_approx,\r\n     assert_equal,\r\n )\r\n \r\n+\r\n class AnalyzeTxTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.setup_clean_chain = True\r\n@@ -27,14 +29,14 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         node1 = self.nodes[1]\r\n         self.connect_nodes(0, 1)\r\n \r\n-        node0.generate(1) # Leave IBD\r\n+        node0.generate(1)  # Leave IBD\r\n \r\n         node0.createwallet(wallet_name='w0')\r\n         w0 = node0.get_wallet_rpc('w0')\r\n         node1.createwallet(wallet_name='w1')\r\n         w1 = node1.get_wallet_rpc('w1')\r\n \r\n-        node0.generatetoaddress(101, w0.getnewaddress())\r\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\r\n         assert_equal(w0.getbalance(), 50.0)\r\n         assert_equal(w1.getbalance(), 0.0)\r\n \r\n@@ -43,10 +45,10 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         tx = node1.createrawtransaction([], [{address1: 5.0}])\r\n \r\n         # node0 should be unaffected\r\n-        assert_equal(w0.analyzerawtransaction(tx), 0.0)\r\n+        assert_equal(w0.analyzerawtransaction(tx), {\"balance_change\": 0.0})\r\n \r\n         # node1 should see +5 balance\r\n-        assert_equal(w1.analyzerawtransaction(tx), 5.0)\r\n+        assert_equal(w1.analyzerawtransaction(tx), {\"balance_change\": 5.0})\r\n \r\n         # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\r\n         funding = w0.fundrawtransaction(tx)\r\n@@ -54,10 +56,11 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         bitcoin_fee = float(funding[\"fee\"])\r\n \r\n         # node0 sees fee + 5 btc decrease\r\n-        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\r\n+        assert_approx(w0.analyzerawtransaction(tx)[\"balance_change\"], -(5.0 + bitcoin_fee))\r\n \r\n         # node1 sees same as before\r\n-        assert_equal(w1.analyzerawtransaction(tx), 5.0)\r\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\r\n+\r\n \r\n if __name__ == '__main__':\r\n     AnalyzeTxTest().main()\r\n```\r\n</p></details>\r\n\r\n\r\n",
    "created_at": "2021-08-21T16:14:58Z",
    "updated_at": "2021-08-21T17:07:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693372773",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693372773"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190",
    "pull_request_review_id": 735506097,
    "id": 693374190,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzM3NDE5MA==",
    "diff_hunk": "@@ -4685,6 +4738,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &unloadwallet,                   },\n     { \"wallet\",             &upgradewallet,                  },\n     { \"wallet\",             &walletcreatefundedpsbt,         },\n+    { \"wallet\",             &analyzerawtransaction,          },",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "<details><summary>Some suggestions for the rpc</summary><p>\r\n\r\n```diff\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -4647,13 +4647,16 @@ static RPCHelpMan upgradewallet()\r\n RPCHelpMan analyzerawtransaction()\r\n {\r\n     return RPCHelpMan{\"analyzerawtransaction\",\r\n-        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\r\n+        \"\\nCalculate the balance change that would result from the signing and broadcasting of the given transaction.\\n\" +\r\n         HELP_REQUIRING_PASSPHRASE,\r\n         {\r\n             {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\r\n         },\r\n         RPCResult{\r\n-            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\r\n+            RPCResult::Type::OBJ, \"\", \"\",\r\n+            {\r\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\r\n+            }\r\n         },\r\n         RPCExamples{\r\n             HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\r\n@@ -4673,26 +4676,31 @@ RPCHelpMan analyzerawtransaction()\r\n     // Decode the transaction\r\n     CMutableTransaction mtx;\r\n     if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\r\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\r\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failed. Make sure the transaction has at least one input.\");\r\n     }\r\n \r\n     // Calculate changes\r\n-    CAmount changes = 0;\r\n+    CAmount changes{0};\r\n \r\n-    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\r\n+    // Fetch debit; we are *spending* these; if the transaction is signed and\r\n+    // broadcast, we will lose everything in these.\r\n     for (size_t i = 0; i < mtx.vin.size(); ++i) {\r\n         changes -= pwallet->GetDebit(mtx.vin.at(i), ISMINE_SPENDABLE);\r\n     }\r\n \r\n-    // Iterate over outputs; we are *receiving* these, if the wallet considers them \"mine\"; if the transaciton is signed\r\n-    // and broadcast, we will receive everything in these\r\n+    // Iterate over outputs; we are *receiving* these, if the wallet considers\r\n+    // them \"mine\"; if the transaction is signed and broadcast, we will receive\r\n+    // everything in these.\r\n     for (size_t i = 0; i < mtx.vout.size(); ++i) {\r\n         const CTxOut& txout = mtx.vout.at(i);\r\n         if (!pwallet->IsMine(txout)) continue;\r\n         changes += txout.nValue;\r\n     }\r\n \r\n-    return ValueFromAmount(changes);\r\n+    UniValue result(UniValue::VOBJ);\r\n+    result.pushKV(\"balance_change\", ValueFromAmount(changes));\r\n+\r\n+    return result;\r\n }\r\n     };\r\n }\r\n@@ -4762,6 +4770,7 @@ static const CRPCCommand commands[] =\r\n     { \"wallet\",             &abandontransaction,             },\r\n     { \"wallet\",             &abortrescan,                    },\r\n     { \"wallet\",             &addmultisigaddress,             },\r\n+    { \"wallet\",             &analyzerawtransaction,          },\r\n     { \"wallet\",             &backupwallet,                   },\r\n     { \"wallet\",             &bumpfee,                        },\r\n     { \"wallet\",             &psbtbumpfee,                    },\r\n@@ -4816,7 +4825,6 @@ static const CRPCCommand commands[] =\r\n     { \"wallet\",             &unloadwallet,                   },\r\n     { \"wallet\",             &upgradewallet,                  },\r\n     { \"wallet\",             &walletcreatefundedpsbt,         },\r\n-    { \"wallet\",             &analyzerawtransaction,          },\r\n```\r\n</p></details>\r\n\r\n- return an amount? (edit: seems to give the same result)\r\n- ISTM returning the result as a JSON object is preferred\r\n- `s/transaciton/transaction/` line 4610\r\n- sort here\r\n",
    "created_at": "2021-08-21T16:28:25Z",
    "updated_at": "2021-08-21T17:11:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693374190",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693374190"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4741,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693516957",
    "pull_request_review_id": 735586779,
    "id": 693516957,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNjk1Nw==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    // Decode the transaction\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Consider please:\r\n```suggestion\r\n    if (!DecodeHexTx(mtx, request.params[0].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\r\n```",
    "created_at": "2021-08-22T15:18:03Z",
    "updated_at": "2021-08-22T15:44:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693516957",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693516957"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693516957"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693516957/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4598,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517224",
    "pull_request_review_id": 735586779,
    "id": 693517224,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNzIyNA==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: People typically place `const`s before types in this codebase, AFAIK. If I'm wrong, please correct me.",
    "created_at": "2021-08-22T15:20:06Z",
    "updated_at": "2021-08-22T15:44:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693517224",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517224"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693517224"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517767",
    "pull_request_review_id": 735586779,
    "id": 693517767,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNzc2Nw==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    // Decode the transaction\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+    }\n+\n+    // Calculate changes\n+    CAmount changes = 0;\n+\n+    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\n+    for (size_t i = 0; i < mtx.vin.size(); ++i) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would it be more idiomatic to use `for (CTxIn& txin : mtx.vin) {`?",
    "created_at": "2021-08-22T15:23:59Z",
    "updated_at": "2021-08-22T15:44:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693517767",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517767"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693517767"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517767/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4606,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518657",
    "pull_request_review_id": 735586779,
    "id": 693518657,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxODY1Nw==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    RPCTypeCheck(request.params, {UniValue::VSTR}, /* fAllowNull */ true);\r\n```",
    "created_at": "2021-08-22T15:30:30Z",
    "updated_at": "2021-08-22T15:44:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693518657",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518657"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693518657"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4594,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518874",
    "pull_request_review_id": 735586779,
    "id": 693518874,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxODg3NA==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you allow `null`, then L4598 will lead to a crash, would it not?",
    "created_at": "2021-08-22T15:32:02Z",
    "updated_at": "2021-08-22T15:44:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693518874",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518874"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693518874"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4594,
    "side": "RIGHT",
    "in_reply_to_id": 693518657
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693641733",
    "pull_request_review_id": 735697397,
    "id": 693641733,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MTczMw==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The RPCHelpMan framework will not execute the code, since the first param is non-optional.",
    "created_at": "2021-08-23T04:19:45Z",
    "updated_at": "2021-08-23T04:19:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693641733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693641733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693641733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693641733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4594,
    "side": "RIGHT",
    "in_reply_to_id": 693518657
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643260",
    "pull_request_review_id": 735699067,
    "id": 693643260,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MzI2MA==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    // Decode the transaction\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+    }\n+\n+    // Calculate changes\n+    CAmount changes = 0;\n+\n+    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\n+    for (size_t i = 0; i < mtx.vin.size(); ++i) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-08-23T04:25:14Z",
    "updated_at": "2021-08-23T04:25:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643260",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643260"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643260"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643260/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4606,
    "side": "RIGHT",
    "in_reply_to_id": 693517767
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643427",
    "pull_request_review_id": 735699262,
    "id": 693643427,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MzQyNw==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Looking around in the code, the way I wrote it seems to be the way it's written elsewhere, so keeping as is.",
    "created_at": "2021-08-23T04:25:57Z",
    "updated_at": "2021-08-23T04:25:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643427",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643427"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643427"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT",
    "in_reply_to_id": 693517224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643835",
    "pull_request_review_id": 735699733,
    "id": 693643835,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MzgzNQ==",
    "diff_hunk": "@@ -4685,6 +4738,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &unloadwallet,                   },\n     { \"wallet\",             &upgradewallet,                  },\n     { \"wallet\",             &walletcreatefundedpsbt,         },\n+    { \"wallet\",             &analyzerawtransaction,          },",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, addressed all. See also alt PR.",
    "created_at": "2021-08-23T04:27:26Z",
    "updated_at": "2021-08-23T04:27:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643835",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643835"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643835"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4741,
    "side": "RIGHT",
    "in_reply_to_id": 693374190
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693854537",
    "pull_request_review_id": 735966391,
    "id": 693854537,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg1NDUzNw==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Two lines above the `const` modifier is before type. Anyway, it's not important so I don't want to waste your time on this any further.",
    "created_at": "2021-08-23T10:32:30Z",
    "updated_at": "2021-08-23T10:32:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693854537",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693854537"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693854537"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693854537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT",
    "in_reply_to_id": 693517224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693877296",
    "pull_request_review_id": 735996115,
    "id": 693877296,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg3NzI5Ng==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That would actually make the shared pointer a constant, which points to a non-constant CWallet instance.\r\n\r\nSee e.g. https://stackoverflow.com/questions/7526152/easy-rule-to-read-complicated-const-declarations",
    "created_at": "2021-08-23T11:10:21Z",
    "updated_at": "2021-08-23T11:10:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693877296",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693877296"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693877296"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693877296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT",
    "in_reply_to_id": 693517224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693878759",
    "pull_request_review_id": 735997982,
    "id": 693878759,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg3ODc1OQ==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also try modifying my PR to this, and try compiling:\r\n```C++\r\n    const std::shared_ptr<CWallet> wallet = GetWalletForJSONRPCRequest(request);\r\n    wallet->ResendWalletTransactions(); // <- this is not const\r\n```\r\n(it works, even though ResendWalletTransactions() is NOT const-declared)",
    "created_at": "2021-08-23T11:12:47Z",
    "updated_at": "2021-08-23T11:13:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693878759",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693878759"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693878759"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693878759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT",
    "in_reply_to_id": 693517224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693891440",
    "pull_request_review_id": 736014169,
    "id": 693891440,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg5MTQ0MA==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually, I'm mistaken, and the two versions are identical. (ResendWalletTransactions() compiles for both cases.)\r\nI actually think this is a mistake, and could just as well be\r\n```C++\r\nstd::shared_ptr<CWallet> wallet = GetWalletForJSONRPCRequest(request);\r\n```\r\nbut I'm just going to keep the const where it is, as that's the case for other RPC calls. Sorry for the misinformation!\r\n\r\nTo clarify, I mis-remembered `const` as applying to the thing directly to the right of it, but it's the opposite; const as the starting keyword is simply a remnant from before the const rule was solidified, and is an exception that says \"usually we apply to the token to our left, but when const is preceded by nothing at all, it applies to the thing right after it\". (That stack overflow post explains it.)\r\n\r\nSo\r\n```C++\r\nconst std::shared_ptr<CWallet> wallet = GetWalletForJSONRPCRequest(request);\r\nstd::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\r\n```\r\nall lead to a wallet whose non-const methods can be called, and the const applies to the `std::shared_ptr` in both cases (it stops us from changing `wallet` to, say, some other `CWallet` somewhere).\r\n\r\nWhat we *really* want here is actually\r\n```C++\r\nstd::shared_ptr<CWallet const> const wallet = GetWalletForJSOMRPCRequest(request);\r\n```\r\n",
    "created_at": "2021-08-23T11:33:56Z",
    "updated_at": "2021-08-23T12:31:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693891440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693891440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693891440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693891440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT",
    "in_reply_to_id": 693517224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694482649",
    "pull_request_review_id": 736769842,
    "id": 694482649,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDQ4MjY0OQ==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I opened a separate pull request on this subject. Thanks for the nudge. https://github.com/bitcoin/bitcoin/pull/22787",
    "created_at": "2021-08-24T04:29:18Z",
    "updated_at": "2021-08-24T04:29:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694482649",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694482649"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694482649"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694482649/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4590,
    "side": "RIGHT",
    "in_reply_to_id": 693517224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694870990",
    "pull_request_review_id": 737254585,
    "id": 694870990,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDg3MDk5MA==",
    "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would `RPCTypeCheck(request.params, {UniValue::VSTR})` work too then?",
    "created_at": "2021-08-24T13:51:22Z",
    "updated_at": "2021-08-24T13:51:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694870990",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694870990"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694870990"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694870990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4594,
    "side": "RIGHT",
    "in_reply_to_id": 693518657
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694871518",
    "pull_request_review_id": 737255285,
    "id": 694871518,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDg3MTUxOA==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx)[\"balance_change\"], 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])",
    "path": "test/functional/wallet_analyzerawtx.py",
    "position": null,
    "original_position": 55,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "c3628daf58bbe8d745cef08db8cee5fffd95167e",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would it be better to use `Decimal` here?",
    "created_at": "2021-08-24T13:51:58Z",
    "updated_at": "2021-08-24T13:51:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694871518",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694871518"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694871518"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694871518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695604933",
    "pull_request_review_id": 738160469,
    "id": 695604933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTYwNDkzMw==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx)[\"balance_change\"], 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])",
    "path": "test/functional/wallet_analyzerawtx.py",
    "position": null,
    "original_position": 55,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "c3628daf58bbe8d745cef08db8cee5fffd95167e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could, but would be another import just for this one place, and the code should be fine (i.e. no rounding errors) due to the `assert_approx`.",
    "created_at": "2021-08-25T10:11:20Z",
    "updated_at": "2021-08-25T10:11:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r695604933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695604933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r695604933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695604933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT",
    "in_reply_to_id": 694871518
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710393087",
    "pull_request_review_id": 756660588,
    "id": 710393087,
    "node_id": "PRRC_kwDOABII584qV7z_",
    "diff_hunk": "@@ -4567,6 +4567,76 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    const auto& txs = request.params[0].get_array();\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            if (spent.count(txin.prevout)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            spent.insert(txin.prevout);\n+            changes -= pwallet->GetDebit(txin, ISMINE_SPENDABLE);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 4d6c1a01532fa189c44714fae31916d758f3a574 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThe isminetype here needs to match the isminetype below as otherwise we could get incorrect balance calculations. This either needs to be changed to `ISMINE_ALL` or the calculation in the outputs needs to check `ISMINE_SPENDABLE` too.\r\n\r\nI think it would be better to use `ISMINE_ALL` so that the balance computation includes watchonly things as those are part of the wallet balance as well.\r\n\r\nOr there could be an `include_watchonly` option that would change the IsMine filter from `ISMINE_SPENDABLE` to `ISMINE_ALL`. This would be the most inline with the rest of the RPCs.",
    "created_at": "2021-09-16T18:56:33Z",
    "updated_at": "2021-09-16T19:04:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r710393087",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710393087"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r710393087"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710393087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4732,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710397947",
    "pull_request_review_id": 756660588,
    "id": 710397947,
    "node_id": "PRRC_kwDOABII584qV8_7",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2",
    "path": "test/functional/wallet_simulaterawtx.py",
    "position": null,
    "original_position": 19,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 4d6c1a01532fa189c44714fae31916d758f3a574 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nI would prefer using one node with 2 wallets. Having multiple nodes, with one wallet on each, is how we used to do things before multiwallet. Given that the test already makes testing wallets (one on each node), it's unnecessary to have multiple nodes.",
    "created_at": "2021-09-16T19:02:00Z",
    "updated_at": "2021-09-16T19:04:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r710397947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710397947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r710397947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710397947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712694853",
    "pull_request_review_id": 759301570,
    "id": 712694853,
    "node_id": "PRRC_kwDOABII584qetxF",
    "diff_hunk": "@@ -4567,6 +4567,76 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    const auto& txs = request.params[0].get_array();\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            if (spent.count(txin.prevout)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            spent.insert(txin.prevout);\n+            changes -= pwallet->GetDebit(txin, ISMINE_SPENDABLE);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sounds good - adding an `include_watchonly` option.",
    "created_at": "2021-09-21T04:58:14Z",
    "updated_at": "2021-09-21T04:58:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r712694853",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712694853"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r712694853"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712694853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4732,
    "side": "RIGHT",
    "in_reply_to_id": 710393087
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712767909",
    "pull_request_review_id": 759385992,
    "id": 712767909,
    "node_id": "PRRC_kwDOABII584qe_ml",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2",
    "path": "test/functional/wallet_simulaterawtx.py",
    "position": null,
    "original_position": 19,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That is obviously the right way to do it. Thanks, fixed.",
    "created_at": "2021-09-21T07:22:02Z",
    "updated_at": "2021-09-21T07:22:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r712767909",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712767909"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r712767909"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712767909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 710397947
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715884509",
    "pull_request_review_id": 763449354,
    "id": 715884509,
    "node_id": "PRRC_kwDOABII584qq4fd",
    "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 40944a573a21c225662ce0c8ba7f64a8427ca22d \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThis is unnecessary since no key access is needed.",
    "created_at": "2021-09-24T20:25:04Z",
    "updated_at": "2021-09-24T20:29:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r715884509",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715884509"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r715884509"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715884509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4699,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715993468",
    "pull_request_review_id": 763562965,
    "id": 715993468,
    "node_id": "PRRC_kwDOABII584qrTF8",
    "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do the vin/vout checks not access keys to determine if the wallet owns them?",
    "created_at": "2021-09-25T05:18:49Z",
    "updated_at": "2021-09-25T05:18:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r715993468",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715993468"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r715993468"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715993468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4699,
    "side": "RIGHT",
    "in_reply_to_id": 715884509
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716003118",
    "pull_request_review_id": 763568590,
    "id": 716003118,
    "node_id": "PRRC_kwDOABII584qrVcu",
    "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It only uses pubkeys.",
    "created_at": "2021-09-25T07:02:04Z",
    "updated_at": "2021-09-25T07:02:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r716003118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716003118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r716003118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716003118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4699,
    "side": "RIGHT",
    "in_reply_to_id": 715884509
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716004123",
    "pull_request_review_id": 763569217,
    "id": 716004123,
    "node_id": "PRRC_kwDOABII584qrVsb",
    "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK, you're talking about the `EnsureWalletIsUnlocked` line. I thought you were also talking about L4698. Fixed.",
    "created_at": "2021-09-25T07:12:48Z",
    "updated_at": "2021-09-25T07:12:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r716004123",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716004123"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r716004123"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716004123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4699,
    "side": "RIGHT",
    "in_reply_to_id": 715884509
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745550564",
    "pull_request_review_id": 801190333,
    "id": 745550564,
    "node_id": "PRRC_kwDOABII584scDLk",
    "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        node.generate(1) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        node.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())",
    "path": "test/functional/wallet_simulaterawtx.py",
    "position": null,
    "original_position": 37,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "b269f1bb0d6d1c25000732edbcc1407517d3b20a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Needs to use self.gener... after a rebase",
    "created_at": "2021-11-09T12:01:43Z",
    "updated_at": "2021-11-09T12:01:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r745550564",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745550564"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r745550564"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745550564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748843165",
    "pull_request_review_id": 805462408,
    "id": 748843165,
    "node_id": "PRRC_kwDOABII584sonCd",
    "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        node.generate(1) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        node.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())",
    "path": "test/functional/wallet_simulaterawtx.py",
    "position": null,
    "original_position": 37,
    "commit_id": "f2cee8ff75f26b2d1529190e26db0bf172807316",
    "original_commit_id": "b269f1bb0d6d1c25000732edbcc1407517d3b20a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, updated.",
    "created_at": "2021-11-14T11:52:59Z",
    "updated_at": "2021-11-14T11:52:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r748843165",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748843165"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r748843165"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748843165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT",
    "in_reply_to_id": 745550564
  }
]