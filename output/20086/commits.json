[
  {
    "sha": "70e5398053f9e428b9afa112113c0d352cac794f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGU1Mzk4MDUzZjllNDI4YjlhZmExMTIxMTNjMGQzNTJjYWM3OTRm",
    "commit": {
      "author": {
        "name": "Rafa\u0142 Kie\u0142bus",
        "email": "rav3n.pl@gmail.com",
        "date": "2020-10-05T16:11:17Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-10-05T16:11:17Z"
      },
      "message": "Update CONTRIBUTING.md\n\nFormat document to consistent markdown rules:\r\n\r\n- all lists use \"-\" (dash) - it was mixed with \"*\" (asterisk)\r\n- equally indent all lists\r\n- fix two \"bare\" links\r\n- all headers styles use \"atx\" - it was mixed with \"setext\", but we need 3 heading levels there\r\n- removed  needless empty lines \r\n\r\nAdded missing comma.",
      "tree": {
        "sha": "d684b96ba8ebbd3ccb0166c344ceca599058f899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d684b96ba8ebbd3ccb0166c344ceca599058f899"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70e5398053f9e428b9afa112113c0d352cac794f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfe0WlCRBK7hj4Ov3rIwAAdHIIAClkLGBBN1AyBwRumqP6PAt2\nEURVQB9fFUklVr57IPmU/8U8VGs4snJ9LwFp3Z1MyITl27qwJuu0U0dRbiENp78u\n/wI3jXj85CLgPZieWNbv0vb/dN2M+FMPqAXimvo4kNG1VKTrJ/UNMdte8xz4zkUu\nma4NRSpu/ce0yvPdO4c7x2O8PutWyXksYlklRbyaLOtPE50cKIdxQo4q6W0lAU+Q\nWZJPZWVYoaj9QPSe3wrmuqy0lRL4FZn5v2ZKyn9L1n58ra6od0bgog7iNoZ8/n44\nTnQuotFyYpfKfKHWhJqaN84oE5xZhUaSnXbrLzYvqw6kjwqeEzQ2eKj2qdMzfDQ=\n=Ls8z\n-----END PGP SIGNATURE-----\n",
        "payload": "tree d684b96ba8ebbd3ccb0166c344ceca599058f899\nparent 875e1ccc9fe01e026e564dfd39a64d9a4b332a89\nauthor Rafa\u0142 Kie\u0142bus <rav3n.pl@gmail.com> 1601914277 +0200\ncommitter GitHub <noreply@github.com> 1601914277 +0200\n\nUpdate CONTRIBUTING.md\n\nFormat document to consistent markdown rules:\r\n\r\n- all lists use \"-\" (dash) - it was mixed with \"*\" (asterisk)\r\n- equally indent all lists\r\n- fix two \"bare\" links\r\n- all headers styles use \"atx\" - it was mixed with \"setext\", but we need 3 heading levels there\r\n- removed  needless empty lines \r\n\r\nAdded missing comma."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70e5398053f9e428b9afa112113c0d352cac794f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70e5398053f9e428b9afa112113c0d352cac794f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70e5398053f9e428b9afa112113c0d352cac794f/comments",
    "author": {
      "login": "Rav3nPL",
      "id": 1094027,
      "node_id": "MDQ6VXNlcjEwOTQwMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1094027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rav3nPL",
      "html_url": "https://github.com/Rav3nPL",
      "followers_url": "https://api.github.com/users/Rav3nPL/followers",
      "following_url": "https://api.github.com/users/Rav3nPL/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rav3nPL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rav3nPL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rav3nPL/subscriptions",
      "organizations_url": "https://api.github.com/users/Rav3nPL/orgs",
      "repos_url": "https://api.github.com/users/Rav3nPL/repos",
      "events_url": "https://api.github.com/users/Rav3nPL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rav3nPL/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "875e1ccc9fe01e026e564dfd39a64d9a4b332a89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/875e1ccc9fe01e026e564dfd39a64d9a4b332a89",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/875e1ccc9fe01e026e564dfd39a64d9a4b332a89"
      }
    ],
    "stats": {
      "total": 174,
      "additions": 80,
      "deletions": 94
    },
    "files": [
      {
        "sha": "03ff1e2f15f459b866de0d7313fef8fa08052812",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 80,
        "deletions": 94,
        "changes": 174,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70e5398053f9e428b9afa112113c0d352cac794f/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70e5398053f9e428b9afa112113c0d352cac794f/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=70e5398053f9e428b9afa112113c0d352cac794f",
        "patch": "@@ -1,5 +1,4 @@\n-Contributing to Bitcoin Core\n-============================\n+# Contributing to Bitcoin Core\n \n The Bitcoin Core project operates an open contributor model where anyone is\n welcome to contribute towards development in the form of peer review, testing\n@@ -15,8 +14,7 @@ merging pull requests, as well as a \"lead maintainer\" who is responsible for the\n release cycle as well as overall merging, moderation and appointment of\n maintainers.\n \n-Getting Started\n----------------\n+## Getting Started\n \n New contributors are very welcome and needed.\n \n@@ -53,8 +51,7 @@ you are encouraged to leave a comment if you are planning to work on it. This\n will help other contributors monitor which issues are actively being addressed\n and is also an effective way to request assistance if and when you need it.\n \n-Communication Channels\n-----------------------\n+## Communication Channels\n \n Most communication about Bitcoin Core development happens on IRC, in the\n `#bitcoin-core-dev` channel on Freenode. The easiest way to participate on IRC is\n@@ -71,33 +68,33 @@ The developer\n should be used to discuss complicated or controversial consensus or P2P protocol changes before working on\n a patch set.\n \n-\n-Contributor Workflow\n---------------------\n+## Contributor Workflow\n \n The codebase is maintained using the \"contributor workflow\" where everyone\n without exception contributes patch proposals using \"pull requests\" (PRs). This\n facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n-  1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n-  1. Create topic branch\n-  1. Commit patches\n+1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n+2. Create topic branch\n+3. Commit patches\n \n-For GUI-related issues or pull requests, the https://github.com/bitcoin-core/gui repository should be used.\n-For all other issues and pull requests, the https://github.com/bitcoin/bitcoin node repository should be used.\n+For GUI-related issues or pull requests, the\n+[https://github.com/bitcoin-core/gui](https://github.com/bitcoin-core/gui) repository should be used.\n+For all other issues and pull requests, the \n+[https://github.com/bitcoin/bitcoin](https://github.com/bitcoin/bitcoin) node repository should be used.\n \n The master branch for all monotree repositories is identical.\n \n As a rule of thumb, everything that only modifies `src/qt` is a GUI-only pull\n request. However:\n \n-* For global refactoring or other transversal changes the node repository\n+- For global refactoring or other transversal changes the node repository\n   should be used.\n-* For GUI-related build system changes, the node repository should be used\n+- For GUI-related build system changes, the node repository should be used\n   because the change needs review by the build systems reviewers.\n-* Changes in `src/interfaces` need to go to the node repository because they\n+- Changes in `src/interfaces` need to go to the node repository because they\n   might affect other components like the wallet.\n \n For large GUI changes that include build system and interface changes, it is\n@@ -133,27 +130,27 @@ Commit messages should never contain any `@` mentions (usernames prefixed with \"\n Please refer to the [Git manual](https://git-scm.com/doc) for more information\n about Git.\n \n-  - Push changes to your fork\n-  - Create pull request\n+- Push changes to your fork\n+- Create pull request\n \n ### Creating the Pull Request\n \n The title of the pull request should be prefixed by the component or area that\n the pull request affects. Valid areas as:\n \n-  - `consensus` for changes to consensus critical code\n-  - `doc` for changes to the documentation\n-  - `qt` or `gui` for changes to bitcoin-qt\n-  - `log` for changes to log messages\n-  - `mining` for changes to the mining code\n-  - `net` or `p2p` for changes to the peer-to-peer network code\n-  - `refactor` for structural changes that do not change behavior\n-  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n-  - `script` for changes to the scripts and tools\n-  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n-  - `util` or `lib` for changes to the utils or libraries\n-  - `wallet` for changes to the wallet code\n-  - `build` for changes to the GNU Autotools or reproducible builds\n+- `consensus` for changes to consensus critical code\n+- `doc` for changes to the documentation\n+- `qt` or `gui` for changes to bitcoin-qt\n+- `log` for changes to log messages\n+- `mining` for changes to the mining code\n+- `net` or `p2p` for changes to the peer-to-peer network code\n+- `refactor` for structural changes that do not change behavior\n+- `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n+- `script` for changes to the scripts and tools\n+- `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n+- `util` or `lib` for changes to the utils or libraries\n+- `wallet` for changes to the wallet code\n+- `build` for changes to the GNU Autotools or reproducible builds\n \n Examples:\n \n@@ -238,15 +235,13 @@ the `git range-diff` tool explained in the [productivity\n notes](/doc/productivity.md#diff-the-diffs-with-git-range-diff). To avoid needless review churn, maintainers will\n generally merge pull requests that received the most review attention first.\n \n-Pull Request Philosophy\n------------------------\n+## Pull Request Philosophy\n \n Patchsets should always be focused. For example, a pull request could add a\n feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n pull requests which attempt to do too much, are overly large, or overly complex\n as this makes review difficult.\n \n-\n ### Features\n \n When adding a new feature, thought must be given to the long term technical debt\n@@ -255,7 +250,6 @@ feature that will require maintenance, please consider if you are willing to\n maintain it (including bug fixing). If features get orphaned with no maintainer\n in the future, they may be removed by the Repository Maintainer.\n \n-\n ### Refactoring\n \n Refactoring is a necessary part of any software project's evolution. The\n@@ -278,9 +272,7 @@ Trivial pull requests or pull requests that refactor the code with no clear\n benefits may be immediately closed by the maintainers to reduce unnecessary\n workload on reviewing.\n \n-\n-\"Decision Making\" Process\n--------------------------\n+## \"Decision Making\" Process\n \n The following applies to code changes to the Bitcoin Core project (and related\n projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n@@ -295,15 +287,15 @@ judge the general consensus of contributors.\n \n In general, all pull requests must:\n \n-  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n-    the project (for example refactoring for modularisation);\n-  - Be well peer-reviewed;\n-  - Have unit tests, functional tests, and fuzz tests, where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n-  - Not break the existing test suite;\n-  - Where bugs are fixed, where possible, there should be unit tests\n-    demonstrating the bug and also proving the fix. This helps prevent regression.\n-  - Change relevant comments and documentation when behaviour of code changes.\n+- Have a clear use case, fix a demonstrable bug or serve the greater good of\n+  the project (for example refactoring for modularisation);\n+- Be well peer-reviewed;\n+- Have unit tests, functional tests, and fuzz tests, where appropriate;\n+- Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+- Not break the existing test suite;\n+- Where bugs are fixed, where possible, there should be unit tests\n+  demonstrating the bug and also proving the fix. This helps prevent regression.\n+- Change relevant comments and documentation when behaviour of code changes.\n \n Patches that change Bitcoin consensus rules are considerably more involved than\n normal because they affect the entire ecosystem and so must be preceded by\n@@ -312,11 +304,10 @@ be different, one should be prepared to expend more time and effort than for\n other kinds of patches because of increased peer review and consensus building\n requirements.\n \n-\n ### Peer Review\n \n Anyone may participate in peer review which is expressed by comments in the pull\n-request. Typically reviewers will review the code for obvious errors, as well as\n+request. Typically, reviewers will review the code for obvious errors, as well as\n test out the patch set and opine on the technical merits of the patch. Project\n maintainers take into account the peer review when determining if there is\n consensus to merge a pull request (remember that discussions may have been\n@@ -325,9 +316,10 @@ spread out over GitHub, mailing list and IRC discussions).\n #### Conceptual Review\n \n A review can be a conceptual review, where the reviewer leaves a comment\n- * `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n+\n+- `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n    request\",\n- * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n+- `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n    approach of this change\".\n \n A `NACK` needs to include a rationale why the change is not worthwhile.\n@@ -340,12 +332,12 @@ begins with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the PR\n branch, followed by a description of how the reviewer did the review. The\n following language is used within pull request comments:\n \n-  - \"I have tested the code\", involving change-specific manual testing in\n-    addition to running the unit, functional, or fuzz tests, and in case it is\n-    not obvious how the manual testing was done, it should be described;\n-  - \"I have not tested the code, but I have reviewed it and it looks\n-    OK, I agree it can be merged\";\n-  - A \"nit\" refers to a trivial, often non-blocking issue.\n+- \"I have tested the code\", involving change-specific manual testing in\n+  addition to running the unit, functional, or fuzz tests, and in case it is\n+  not obvious how the manual testing was done, it should be described;\n+- \"I have not tested the code, but I have reviewed it and it looks\n+  OK, I agree it can be merged\";\n+- A \"nit\" refers to a trivial, often non-blocking issue.\n \n Project maintainers reserve the right to weigh the opinions of peer reviewers\n using common sense judgement and may also weigh based on merit. Reviewers that\n@@ -371,34 +363,32 @@ that you've been waiting for a pull request to be given attention for several\n months, there may be a number of reasons for this, some of which you can do something\n about:\n \n-  - It may be because of a feature freeze due to an upcoming release. During this time,\n-    only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until after the release. Wait for the release.\n-  - It may be because the changes you are suggesting do not appeal to people. Rather than\n-    nits and critique, which require effort and means they care enough to spend time on your\n-    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n-    (because people don't assume *others* won't actually like the proposal). Don't take\n-    that personally, though! Instead, take another critical look at what you are suggesting\n-    and see if it: changes too much, is too broad, doesn't adhere to the\n-    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n-    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n-    their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people, and those people\n-    may not have realized your pull request even exists. A great way to find people who\n-    are qualified and care about the code you are touching is the\n-    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    look up who last modified the code you are changing and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging, though.\n-  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting for an unreasonably long time (say,\n-    more than a month) for no particular reason (a few lines changed, etc.),\n-    this is totally fine. Try to return the favor when someone else is asking\n-    for feedback on their code, and the universe balances out.\n-  - Remember that the best thing you can do while waiting is give review to others!\n-\n-\n-Backporting\n------------\n+- It may be because of a feature freeze due to an upcoming release. During this time,\n+  only bug fixes are taken into consideration. If your pull request is a new feature,\n+  it will not be prioritized until after the release. Wait for the release.\n+- It may be because the changes you are suggesting do not appeal to people. Rather than\n+  nits and critique, which require effort and means they care enough to spend time on your\n+  contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n+  (because people don't assume *others* won't actually like the proposal). Don't take\n+  that personally, though! Instead, take another critical look at what you are suggesting\n+  and see if it: changes too much, is too broad, doesn't adhere to the\n+  [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n+  Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n+  their opinion on the concept itself.\n+- It may be because your code is too complex for all but a few people, and those people\n+  may not have realized your pull request even exists. A great way to find people who\n+  are qualified and care about the code you are touching is the\n+  [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n+  look up who last modified the code you are changing and see if you can find\n+  them and give them a nudge. Don't be incessant about the nudging, though.\n+- Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n+  a look. If you think you've been waiting for an unreasonably long time (say,\n+  more than a month) for no particular reason (a few lines changed, etc.),\n+  this is totally fine. Try to return the favor when someone else is asking\n+  for feedback on their code, and the universe balances out.\n+- Remember that the best thing you can do while waiting is give review to others!\n+\n+## Backporting\n \n Security and bug fixes can be backported from `master` to release\n branches.\n@@ -411,24 +401,20 @@ when needed (the original author does not need to worry about it).\n \n A backport should contain the following metadata in the commit body:\n \n-```\n-Github-Pull: #<PR number>\n-Rebased-From: <commit hash of the original commit>\n-```\n+    Github-Pull: #<PR number>\n+    Rebased-From: <commit hash of the original commit>\n \n Have a look at [an example backport PR](\n https://github.com/bitcoin/bitcoin/pull/16189).\n \n Also see the [backport.py script](\n https://github.com/bitcoin-core/bitcoin-maintainer-tools#backport).\n \n-Release Policy\n---------------\n+## Release Policy\n \n The project leader is the release manager for each Bitcoin Core release.\n \n-Copyright\n----------\n+## Copyright\n \n By contributing to this repository, you agree to license your work under the\n MIT license unless specified otherwise in `contrib/debian/copyright` or at"
      }
    ]
  },
  {
    "sha": "b8eea76cbb767f9d5dcd17d19e833212fb3e5085",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOGVlYTc2Y2JiNzY3ZjlkNWRjZDE3ZDE5ZTgzMzIxMmZiM2U1MDg1",
    "commit": {
      "author": {
        "name": "Rafa\u0142 Kie\u0142bus",
        "email": "rav3n.pl@gmail.com",
        "date": "2020-10-05T18:11:15Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-10-05T18:11:15Z"
      },
      "message": "Remove trailing space",
      "tree": {
        "sha": "40496985631fdf87e1cf83762a29bc7a6ccee9b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40496985631fdf87e1cf83762a29bc7a6ccee9b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8eea76cbb767f9d5dcd17d19e833212fb3e5085",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfe2HDCRBK7hj4Ov3rIwAAdHIIACBAAZ9TJ2aWV1dTAeHBnFbt\nluYeMFeko4uguzvhqEJdDqAfL1TcyRMvO5rmT9FhMJMni5bhHamJHx+uaDqX8/Pp\nGPN2wtCCMOl8q6WxtWpcM5lAIpUGXsxKDIvprapABKj3qgnLKUu2HQsmPHD3a6O5\nAMzRTHzn7p+F9BipEHM7T2VxZgsz613NjRWvyFSZNXuVdKMMnIdCBFOB8DtipSg/\nK1yBaIqE5mAc+KM+lVlmFOGvuzYxsnsicMHjlvvR5SQUq5rnUc4XOWJhxuKYlt3x\nc6q6MpBKMZz8chFPOH2dmHRWhuSlQpNZFPnakTVipEd+LNDVK0Kkb1grO25B5CY=\n=Itfg\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 40496985631fdf87e1cf83762a29bc7a6ccee9b8\nparent 70e5398053f9e428b9afa112113c0d352cac794f\nauthor Rafa\u0142 Kie\u0142bus <rav3n.pl@gmail.com> 1601921475 +0200\ncommitter GitHub <noreply@github.com> 1601921475 +0200\n\nRemove trailing space"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8eea76cbb767f9d5dcd17d19e833212fb3e5085",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8eea76cbb767f9d5dcd17d19e833212fb3e5085",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8eea76cbb767f9d5dcd17d19e833212fb3e5085/comments",
    "author": {
      "login": "Rav3nPL",
      "id": 1094027,
      "node_id": "MDQ6VXNlcjEwOTQwMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1094027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rav3nPL",
      "html_url": "https://github.com/Rav3nPL",
      "followers_url": "https://api.github.com/users/Rav3nPL/followers",
      "following_url": "https://api.github.com/users/Rav3nPL/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rav3nPL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rav3nPL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rav3nPL/subscriptions",
      "organizations_url": "https://api.github.com/users/Rav3nPL/orgs",
      "repos_url": "https://api.github.com/users/Rav3nPL/repos",
      "events_url": "https://api.github.com/users/Rav3nPL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rav3nPL/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70e5398053f9e428b9afa112113c0d352cac794f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70e5398053f9e428b9afa112113c0d352cac794f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70e5398053f9e428b9afa112113c0d352cac794f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "76d76164ddfc5488bfa0f7f80b7466fc559b052f",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8eea76cbb767f9d5dcd17d19e833212fb3e5085/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8eea76cbb767f9d5dcd17d19e833212fb3e5085/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=b8eea76cbb767f9d5dcd17d19e833212fb3e5085",
        "patch": "@@ -82,7 +82,7 @@ To contribute a patch, the workflow is as follows:\n \n For GUI-related issues or pull requests, the\n [https://github.com/bitcoin-core/gui](https://github.com/bitcoin-core/gui) repository should be used.\n-For all other issues and pull requests, the \n+For all other issues and pull requests, the\n [https://github.com/bitcoin/bitcoin](https://github.com/bitcoin/bitcoin) node repository should be used.\n \n The master branch for all monotree repositories is identical."
      }
    ]
  }
]