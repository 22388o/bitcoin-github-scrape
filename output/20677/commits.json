[
  {
    "sha": "0c41c1083089efb158de828f97eb00e206f2869a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzQxYzEwODMwODllZmIxNThkZTgyOGY5N2ViMDBlMjA2ZjI4Njlh",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-16T19:35:27Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-16T19:36:09Z"
      },
      "message": "doc: Remove shouty enums in net_processing comments",
      "tree": {
        "sha": "4bf98d7a5fb20196f9a263c0ce1d67b5c60cf711",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4bf98d7a5fb20196f9a263c0ce1d67b5c60cf711"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c41c1083089efb158de828f97eb00e206f2869a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c41c1083089efb158de828f97eb00e206f2869a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c41c1083089efb158de828f97eb00e206f2869a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c41c1083089efb158de828f97eb00e206f2869a/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "427f8c2cff0122bd614155f114b8b581e4b6e960",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/427f8c2cff0122bd614155f114b8b581e4b6e960",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/427f8c2cff0122bd614155f114b8b581e4b6e960"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "17aa889ab015a9e631f574cb6789ab051b66b2c8",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c41c1083089efb158de828f97eb00e206f2869a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c41c1083089efb158de828f97eb00e206f2869a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0c41c1083089efb158de828f97eb00e206f2869a",
        "patch": "@@ -2394,8 +2394,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // empty and no one will know who we are, so these mechanisms are\n             // important to help us connect to the network.\n             //\n-            // We skip this for BLOCK_RELAY peers to avoid potentially leaking\n-            // information about our BLOCK_RELAY connections via address relay.\n+            // We skip this for block-relay-only peers to avoid potentially leaking\n+            // information about our block-relay-only connections via address relay.\n             if (fListen && !::ChainstateActive().IsInitialBlockDownload())\n             {\n                 CAddress addr = GetLocalAddress(&pfrom.addr, pfrom.GetLocalServices());\n@@ -3963,10 +3963,10 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         });\n     }\n \n-    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    // Check whether we have too many outbound-full-relay peers\n     if (m_connman.GetExtraFullOutboundCount() > 0) {\n-        // If we have more OUTBOUND_FULL_RELAY peers than we target, disconnect one.\n-        // Pick the OUTBOUND_FULL_RELAY peer that least recently announced\n+        // If we have more outbound-full-relay peers than we target, disconnect one.\n+        // Pick the outbound-full-relay peer that least recently announced\n         // us a new block, with ties broken by choosing the more recent\n         // connection (higher node id)\n         NodeId worst_peer = -1;\n@@ -3975,7 +3975,7 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n             AssertLockHeld(::cs_main);\n \n-            // Only consider OUTBOUND_FULL_RELAY peers that are not already\n+            // Only consider outbound-full-relay peers that are not already\n             // marked for disconnection\n             if (!pnode->IsFullOutboundConn() || pnode->fDisconnect) return;\n             CNodeState *state = State(pnode->GetId());"
      }
    ]
  }
]