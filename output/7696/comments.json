[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197200010",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-197200010",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 197200010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzIwMDAxMA==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T07:49:31Z",
    "updated_at": "2016-03-16T08:01:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Travis fails with:\n\n```\ntest/net_tests.cpp(93): error: in \"addrman_tests/caddrdb_deserialiation\": check addrman1.size() == 3 has failed\ntest/net_tests.cpp(105): error: in \"addrman_tests/caddrdb_deserialiation\": check addrman2.size() == 3 has failed\n```\n\nBut only in one configuration.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197200010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197298916",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-197298916",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 197298916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzI5ODkxNg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T12:33:40Z",
    "updated_at": "2016-03-16T12:33:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, more tests are better. Haven't verified the tests though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197298916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197375145",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-197375145",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 197375145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzM3NTE0NQ==",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T15:10:04Z",
    "updated_at": "2016-03-16T15:10:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@paveljanik The non-determinism of the test passing is worrying especially because the test that was failing was not testing new behavior. I haven't been able to replicate this failure locally, any idea what is happening with it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197375145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197376035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-197376035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 197376035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzM3NjAzNQ==",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T15:12:14Z",
    "updated_at": "2016-03-16T15:12:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can someone add the labels bug and data corruption.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197376035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/200908357",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-200908357",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 200908357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDkwODM1Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T16:20:30Z",
    "updated_at": "2016-03-24T16:20:30Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\n\nInstead of relying on the output of CAddrDB::Read to be \"clean\" in case of an error I'd prefer a different approach, though: ignore and reset its output when the function fails. In my experience this is a more robust approach - it's easy to forget resetting it in some code path. In a lot of APIs the output of failing functions is thus undefined.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/200908357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201039632",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-201039632",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 201039632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTAzOTYzMg==",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T21:48:24Z",
    "updated_at": "2016-03-24T21:48:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj I'm not sure I follow, do you want the \"clearing\" to happen closer to the source of the error? In the serialization code? \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201039632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201223722",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-201223722",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 201223722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTIyMzcyMg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T09:51:29Z",
    "updated_at": "2016-03-25T09:51:29Z",
    "author_association": "MEMBER",
    "body": "@EthanHeilman At the call site:\n\n```\n        if (adb.Read(addrman))\n            LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman.size(), GetTimeMillis() - nStart);\n        else {\n            addrman.clear(); // Addrman can be in an inconsistent state after failure, reset it\n            LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n            DumpAddresses();\n        }\n```\n\nIt's hard to _guarantee_ that `adb.Read` won't leave the passed addrman in an inconsistent state after failure in all possible internal code paths. This would at least catch all possible cases.\n\nThe cleanest way if we had a clean slate, I think, would be to have Read return an `AddrMan*` which is `null` if an error happened, then instantiate a new one on faiilure. But as we have that global object that's too impactful.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201223722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201350876",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-201350876",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 201350876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTM1MDg3Ng==",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T16:27:52Z",
    "updated_at": "2016-03-25T16:27:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj Good idea, I amended the commit to include addrman.Clear in StartNode's Read() error condition.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201350876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211538159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-211538159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 211538159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUzODE1OQ==",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T19:20:48Z",
    "updated_at": "2016-04-18T19:20:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does this pull-request need any additional changes?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211538159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211924495",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-211924495",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 211924495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTkyNDQ5NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T13:33:06Z",
    "updated_at": "2016-04-19T13:33:06Z",
    "author_association": "MEMBER",
    "body": "I still don't really like passing the hash into bool CAddrDB::Read, I think it makes for an awful API :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211924495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217037535",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-217037535",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 217037535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzAzNzUzNQ==",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T23:26:19Z",
    "updated_at": "2016-05-04T23:26:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj I removed hash from CAddrDB::Read \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217037535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217203200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-217203200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 217203200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzIwMzIwMA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-05T16:33:51Z",
    "updated_at": "2016-05-05T16:33:51Z",
    "author_association": "MEMBER",
    "body": "utACK 1475ecf61141e03f63a79d59831c411e0e8a5c0a\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217203200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217219099",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#issuecomment-217219099",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7696",
    "id": 217219099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzIxOTA5OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-05T17:32:27Z",
    "updated_at": "2016-05-05T17:32:27Z",
    "author_association": "MEMBER",
    "body": "@EthanHeilman Looks good to me now, thanks. utACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217219099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292422",
    "pull_request_review_id": null,
    "id": 56292422,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkyNDIy",
    "diff_hunk": "@@ -0,0 +1,142 @@\n+// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n+#include \"net.h\"\n+#include \"chainparams.h\"\n+\n+using namespace std;\n+\n+class CAddrManSerializationTest : public CAddrMan\n+{\n+public:\n+    virtual void Serialize(CDataStream &s, int nType, int nVersionDummy) const = 0;\n+};\n+\n+class CAddrManUncorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        CAddrMan::Serialize(s, nType, nVersionDummy);\n+    }\n+};\n+\n+class CAddrManCorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        // Produces corrupt output that claims addrman has 20 addrs when it only has one addr.\n+        unsigned char nVersion = 1;\n+        s << nVersion;\n+        s << ((unsigned char)32);\n+        s << nKey;\n+\n+        s << 10; // nNew\n+        s << 10; // nTried\n+\n+        int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+        s << nUBuckets;\n+\n+        CAddress addr = CAddress(CService(\"252.1.1.1\",7777));\n+        CAddrInfo info = CAddrInfo(addr, CNetAddr(\"252.2.2.2\"));\n+        s << info;\n+    }\n+};\n+\n+CDataStream AddrmanToStream(CAddrManSerializationTest& addrman)\n+{\n+    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n+    ssPeersIn << FLATDATA(Params().MessageStart());\n+    ssPeersIn << addrman;\n+    string str = ssPeersIn.str();\n+    vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n+\n+BOOST_FIXTURE_TEST_SUITE(addrman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_deserialiation)",
    "path": "src/test/net_tests.cpp",
    "position": null,
    "original_position": 66,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "strange test name ;-) `z` missing\n",
    "created_at": "2016-03-16T07:43:13Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292683",
    "pull_request_review_id": null,
    "id": 56292683,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjkyNjgz",
    "diff_hunk": "@@ -60,6 +60,7 @@ BITCOIN_TESTS =\\\n   test/merkle_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n+  test/net_tests.cpp \\",
    "path": "src/Makefile.test.include",
    "position": 4,
    "original_position": 4,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You test addrman, not net. Please name the file `addrman_tests.cpp`.\n",
    "created_at": "2016-03-16T07:47:08Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292683",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292683"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56292683"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56292683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 63,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56324033",
    "pull_request_review_id": null,
    "id": 56324033,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzI0MDMz",
    "diff_hunk": "@@ -60,6 +60,7 @@ BITCOIN_TESTS =\\\n   test/merkle_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n+  test/net_tests.cpp \\",
    "path": "src/Makefile.test.include",
    "position": 4,
    "original_position": 4,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am testing CAddrDB, which is called from and lives in net.h and net.cpp not CAddrMan.\n",
    "created_at": "2016-03-16T12:23:37Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56324033",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56324033"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56324033"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56324033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 63,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56324926",
    "pull_request_review_id": null,
    "id": 56324926,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzI0OTI2",
    "diff_hunk": "@@ -60,6 +60,7 @@ BITCOIN_TESTS =\\\n   test/merkle_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n+  test/net_tests.cpp \\",
    "path": "src/Makefile.test.include",
    "position": 4,
    "original_position": 4,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No strong opinion: IMO we don't need to use an identical filename for what is tested in the test. I think `addrman_tests.cpp` would be more clear.\n",
    "created_at": "2016-03-16T12:32:11Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56324926",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56324926"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56324926"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56324926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 63,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56325375",
    "pull_request_review_id": null,
    "id": 56325375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzI1Mzc1",
    "diff_hunk": "@@ -0,0 +1,142 @@\n+// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n+#include \"net.h\"\n+#include \"chainparams.h\"\n+\n+using namespace std;\n+\n+class CAddrManSerializationTest : public CAddrMan\n+{\n+public:\n+    virtual void Serialize(CDataStream &s, int nType, int nVersionDummy) const = 0;\n+};\n+\n+class CAddrManUncorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        CAddrMan::Serialize(s, nType, nVersionDummy);\n+    }\n+};\n+\n+class CAddrManCorrupted : public CAddrManSerializationTest\n+{\n+public:\n+    void Serialize(CDataStream &s, int nType, int nVersionDummy) const\n+    {\n+        // Produces corrupt output that claims addrman has 20 addrs when it only has one addr.\n+        unsigned char nVersion = 1;\n+        s << nVersion;\n+        s << ((unsigned char)32);\n+        s << nKey;\n+\n+        s << 10; // nNew\n+        s << 10; // nTried\n+\n+        int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+        s << nUBuckets;\n+\n+        CAddress addr = CAddress(CService(\"252.1.1.1\",7777));\n+        CAddrInfo info = CAddrInfo(addr, CNetAddr(\"252.2.2.2\"));\n+        s << info;\n+    }\n+};\n+\n+CDataStream AddrmanToStream(CAddrManSerializationTest& addrman)\n+{\n+    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n+    ssPeersIn << FLATDATA(Params().MessageStart());\n+    ssPeersIn << addrman;\n+    string str = ssPeersIn.str();\n+    vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n+\n+BOOST_FIXTURE_TEST_SUITE(addrman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_deserialiation)",
    "path": "src/test/net_tests.cpp",
    "position": null,
    "original_position": 66,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. I changed it to caddrdb_read, since that is a better descriptor of what I am testing.\n",
    "created_at": "2016-03-16T12:36:03Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56325375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56325375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56325375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56325375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56326921",
    "pull_request_review_id": null,
    "id": 56326921,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzI2OTIx",
    "diff_hunk": "@@ -60,6 +60,7 @@ BITCOIN_TESTS =\\\n   test/merkle_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n+  test/net_tests.cpp \\",
    "path": "src/Makefile.test.include",
    "position": 4,
    "original_position": 4,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "cb1b0556be47689623e7e252b9f8f04cffbde5ff",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If someone feels strongly I'm happy to move it to addrman_tests.cpp. I wrote all the tests in addrman_tests and choose to put this test in net_tests since it feels more common to net than addrman.\n\nIdeally CAddrDB, CBanDB and other files which manage interaction with the data directory should be refactored into a common file/class but that is much larger task (for instance CBanDB is very tightly coupled to net.cpp).\n",
    "created_at": "2016-03-16T12:49:38Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56326921",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56326921"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r56326921"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56326921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 63,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57460774",
    "pull_request_review_id": null,
    "id": 57460774,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDYwNzc0",
    "diff_hunk": "@@ -2331,6 +2332,11 @@ bool CAddrDB::Read(CAddrMan& addr)\n \n     CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n \n+    return Read(addr, ssPeers, hashIn);\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers, uint256& hashIn)\n+{\n     // verify stored checksum matches input data\n     uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "a7c4eb7ef7ff4519cbdc17d5ca37478b1d6eb753",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could make sense to move the hash check to the outer read function - after all, it's not part of the inner stream but of the wrapping file.\nWould simplify testing as there'd be no need to pass hashIn here.\n",
    "created_at": "2016-03-25T16:31:15Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57460774",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57460774"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57460774"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57460774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2341,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57464394",
    "pull_request_review_id": null,
    "id": 57464394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0Mzk0",
    "diff_hunk": "@@ -2331,6 +2332,11 @@ bool CAddrDB::Read(CAddrMan& addr)\n \n     CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n \n+    return Read(addr, ssPeers, hashIn);\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers, uint256& hashIn)\n+{\n     // verify stored checksum matches input data\n     uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "a7c4eb7ef7ff4519cbdc17d5ca37478b1d6eb753",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "My thinking with passing hashIn as a parameter was that it would allow me to write a test on the \"inner read\" to verify an error is thrown if hashIn is not the same as the hash of ssPeers. Something like:\n\n``` c++\nBOOST_AUTO_TEST_CASE(caddrdb_hash)\n{\n    CAddrManUncorrupted addrmanUncorrupted;\n    CService addr1 = CService(\"250.7.1.1\", 8333);\n    addrmanUncorrupted.Add(CAddress(addr1), CService(\"252.5.1.1\", 8333));\n\n    // Test that the de-serialization does not throw an exception.\n    CDataStream ssPeers1 = AddrmanToStream(addrmanUncorrupted);\n\n    addrmanUncorrupted.Add(CAddress(addr3), CService(\"253.3.3.33\", 8333));\n    CDataStream ssPeersDiff = AddrmanToStream(addrmanUncorrupted);\n    uint256 badHashIn = Hash(ssPeersDiff.begin(), ssPeersDiff.end());\n\n    CAddrDB adb;\n    CAddrMan addrman;\n    adb.Read(addrman, ssPeers2, badHashIn); // Assert this throws an exception since the hashes don't match\n}\n```\n\nbut I decided to wait until I had more time to work on it.\n\nHow interested are you in a system for mocking out filesystem objects rather than having to do everything at the stream level?\n",
    "created_at": "2016-03-25T17:07:03Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57464394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57464394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57464394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57464394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2341,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57468001",
    "pull_request_review_id": null,
    "id": 57468001,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY4MDAx",
    "diff_hunk": "@@ -2331,6 +2332,11 @@ bool CAddrDB::Read(CAddrMan& addr)\n \n     CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n \n+    return Read(addr, ssPeers, hashIn);\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers, uint256& hashIn)\n+{\n     // verify stored checksum matches input data\n     uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "a7c4eb7ef7ff4519cbdc17d5ca37478b1d6eb753",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, yes, that makes sense.\n\n> How interested are you in a system for mocking out filesystem objects rather than having to do everything at the stream level?\n\nDepends on the (non-test) code impact. I'm not entirely sure that is necessary - e.g. you could create a temporary file and make it read that.\n",
    "created_at": "2016-03-25T17:36:39Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57468001",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57468001"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57468001"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57468001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2341,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57476892",
    "pull_request_review_id": null,
    "id": 57476892,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDc2ODky",
    "diff_hunk": "@@ -2331,6 +2332,11 @@ bool CAddrDB::Read(CAddrMan& addr)\n \n     CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n \n+    return Read(addr, ssPeers, hashIn);\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers, uint256& hashIn)\n+{\n     // verify stored checksum matches input data\n     uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "a7c4eb7ef7ff4519cbdc17d5ca37478b1d6eb753",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Depends on the (non-test) code impact. \n\nIt is on my list of things to investigate, but I was considering creating a class which wraps File/fopen and can be mocked out in unitests similar to RandomInt in addrman.h.\n\nhttps://github.com/bitcoin/bitcoin/blob/master/src/addrman.h#L239\n\nI share your concern as this would require a big diff when all the instances of File are replaced with mockable File. I assume this is a problem others have solved so I'm looking into alternates.\n\n> I'm not entirely sure that is necessary - e.g. you could create a temporary file and make it read that.\n\nYMMV, but in my experience tmp files in unittests cause hard to debug test failures due to filesystem weirdness and added state (file deletes sometimes fail). \n",
    "created_at": "2016-03-25T18:51:51Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57476892",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57476892"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57476892"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57476892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2341,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57510529",
    "pull_request_review_id": null,
    "id": 57510529,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTEwNTI5",
    "diff_hunk": "@@ -2331,6 +2332,11 @@ bool CAddrDB::Read(CAddrMan& addr)\n \n     CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n \n+    return Read(addr, ssPeers, hashIn);\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers, uint256& hashIn)\n+{\n     // verify stored checksum matches input data\n     uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "a7c4eb7ef7ff4519cbdc17d5ca37478b1d6eb753",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> YMMV, but in my experience tmp files in unittests cause hard to debug test failures due to filesystem weirdness and added state (file deletes sometimes fail).\n\nI agree. It's somewhat preferable to not clutter files around the place.\nOn the other hand it actually tests the filesystem interaction then :)\n\n> I share your concern as this would require a big diff when all the instances of File are replaced with mockable File.\n\nC++ has some support for this by replacing inputs/outputs streams by string streams, unfortunately - or not, I'm not entirely up to date of the pros and cons of it - we don't really use C++'s file API.\n\nWe mainly use `fopen` and `FILE*`. Note that on some platforms (including Linux and MacOSX IIRC) for FILE\\* there is: [fmemopen, open_memstream](http://linux.die.net/man/3/open_memstream). May be interesting.\n\nThen one could change the APIs to take a FILE\\* instead of filename. On platforms without the function it could fall back to a temporary file, on platforms with the function it can use a memory stream.\n",
    "created_at": "2016-03-26T07:22:59Z",
    "updated_at": "2016-05-04T22:55:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57510529",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57510529"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r57510529"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57510529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2341,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/63483473",
    "pull_request_review_id": null,
    "id": 63483473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDgzNDcz",
    "diff_hunk": "@@ -0,0 +1,136 @@\n+// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n+#include \"net.h\"\n+#include \"chainparams.h\"\n+\n+using namespace std;\n+\n+class CAddrManSerializationMock : public CAddrMan\n+{\n+public:\n+    virtual void Serialize(CDataStream& s, int nType, int nVersionDummy) const = 0;\n+};\n+\n+class CAddrManUncorrupted : public CAddrManSerializationMock\n+{\n+public:\n+    void Serialize(CDataStream& s, int nType, int nVersionDummy) const\n+    {\n+        CAddrMan::Serialize(s, nType, nVersionDummy);\n+    }\n+};\n+\n+class CAddrManCorrupted : public CAddrManSerializationMock\n+{\n+public:\n+    void Serialize(CDataStream& s, int nType, int nVersionDummy) const\n+    {\n+        // Produces corrupt output that claims addrman has 20 addrs when it only has one addr.\n+        unsigned char nVersion = 1;\n+        s << nVersion;\n+        s << ((unsigned char)32);\n+        s << nKey;\n+        s << 10; // nNew\n+        s << 10; // nTried\n+\n+        int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+        s << nUBuckets;\n+\n+        CAddress addr = CAddress(CService(\"252.1.1.1\", 7777));\n+        CAddrInfo info = CAddrInfo(addr, CNetAddr(\"252.2.2.2\"));\n+        s << info;\n+    }\n+};\n+\n+CDataStream AddrmanToStream(CAddrManSerializationMock& addrman)\n+{\n+    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n+    ssPeersIn << FLATDATA(Params().MessageStart());\n+    ssPeersIn << addrman;\n+    std::string str = ssPeersIn.str();\n+    vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n+\n+BOOST_FIXTURE_TEST_SUITE(net_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_read)\n+{\n+    CAddrManUncorrupted addrmanUncorrupted;\n+\n+    CService addr1 = CService(\"250.7.1.1\", 8333);\n+    CService addr2 = CService(\"250.7.2.2\", 9999);\n+    CService addr3 = CService(\"250.7.3.3\", 9999);\n+\n+    // Add three addresses to new table.\n+    addrmanUncorrupted.Add(CAddress(addr1), CService(\"252.5.1.1\", 8333));\n+    addrmanUncorrupted.Add(CAddress(addr2), CService(\"252.5.1.1\", 8333));\n+    addrmanUncorrupted.Add(CAddress(addr3), CService(\"252.5.1.1\", 8333));\n+\n+    // Test that the de-serialization does not throw an exception.\n+    CDataStream ssPeers1 = AddrmanToStream(addrmanUncorrupted);\n+    bool exceptionThrown = false;\n+    CAddrMan addrman1;\n+\n+    BOOST_CHECK(addrman1.size() == 0);\n+    try {\n+        unsigned char pchMsgTmp[4];\n+        ssPeers1 >> FLATDATA(pchMsgTmp);\n+        ssPeers1 >> addrman1;\n+    } catch (const std::exception& e) {\n+        exceptionThrown = true;\n+    }\n+\n+    BOOST_CHECK(addrman1.size() == 3);\n+    BOOST_CHECK(exceptionThrown == false);\n+\n+    // Test that CAddrDB::Read creates an addrman with the correct number of addrs.\n+    CDataStream ssPeers2 = AddrmanToStream(addrmanUncorrupted);\n+\n+    CAddrMan addrman2;\n+    CAddrDB adb;\n+    BOOST_CHECK(addrman2.size() == 0);\n+    adb.Read(addrman2, ssPeers2);\n+    BOOST_CHECK(addrman2.size() == 3);\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(caddrdb_read_corrupted)\n+{\n+    CAddrManCorrupted addrmanCorrupted;\n+\n+    // Test that the de-serialization of corrupted addrman throws an exception.\n+    CDataStream ssPeers1 = AddrmanToStream(addrmanCorrupted);\n+    bool exceptionThrown = false;\n+    CAddrMan addrman1;\n+    BOOST_CHECK(addrman1.size() == 0);\n+    try {\n+        unsigned char pchMsgTmp[4];\n+        ssPeers1 >> FLATDATA(pchMsgTmp);\n+        ssPeers1 >> addrman1;\n+    } catch (const std::exception& e) {\n+        exceptionThrown = true;\n+    }\n+    // Even through de-serialization failed adddrman is not left in a clean state.",
    "path": "src/test/net_tests.cpp",
    "position": 122,
    "original_position": 122,
    "commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "original_commit_id": "1475ecf61141e03f63a79d59831c411e0e8a5c0a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "adddrman\n",
    "created_at": "2016-05-17T08:35:55Z",
    "updated_at": "2016-05-17T08:35:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r63483473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/63483473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7696#discussion_r63483473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7696"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/63483473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 122,
    "original_line": 122,
    "side": "RIGHT"
  }
]