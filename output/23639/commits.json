[
  {
    "sha": "36dc5bb8cb1d71356d645338b5b49361f3bda956",
    "node_id": "C_kwDOABII59oAKDM2ZGM1YmI4Y2IxZDcxMzU2ZDY0NTMzOGI1YjQ5MzYxZjNiZGE5NTY",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-11-30T09:12:57Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-12-01T11:24:03Z"
      },
      "message": "doc: Extract CreateTxDoc in rawtransaction\n\nFor the fields: inputs, outputs, locktime, replaceable",
      "tree": {
        "sha": "7b8020ee034d6147c7ee55707114900f62075ba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b8020ee034d6147c7ee55707114900f62075ba1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36dc5bb8cb1d71356d645338b5b49361f3bda956",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmGnW1QACgkQLuufXMCV\nJsHs5g//R8Y9cOmhTF/azuocUVHzit1rxkRXo67DJtLIzgJaZQsflMk7JC1HndiE\nKoRx6tjP6Zg5lBGM9vowxb2rmTP4lzbwx6lyDFVXwXwI3+8+yT/xAXLSh85p705Z\nmKFlT4haJ1SvmvunifLe4G2bIxJ0eIQ/EVZ0xW3GJKw+W5sPvkPQ05NR9mfP8XGU\nrt3t5fwRRfO1F9lVsd7+rNGIvpVdVs+md3x6CTTauOaL0saGBicAQYdvx0Vme3EP\n5Nle1fmRVBOiWQ7tVe9NR/95DCxxxLKVpByuGPdFp1TcCo2YylMKrfLEG5SI6hum\nW4AzcZwsMHzrl2VDGN2+abZoH1EYdntXg+3tyyUQ8+DAApCuwgyuFCa48TMDVemj\nd9TXV023wuAEBuGl0i5wEWq18TX+Carj4HF18nac/Gtzj0+2JSZCkUqhjnq2tnzs\nfB5yCCJVpVbeeBme5sz86UNXQfOTU3pF5LSePMQAv7gO92eDe7+SCe/4veTr3PVQ\nfry3+iyYndMOIA65ZEuA4fdXWRO6x6R6OBs1ZtHSXZWlVQt8XavKhkydiEW5YGz4\nab3aGTZWJ+DpD+6k2IKpNjYsxRFGX228wt8bFxDeNBa1Ju8P+YfDvzy5mamnPNDO\n201J85k+SmEQFgM/u5FaaDTI2ShK03T1XZOuiLt/9BYkCiRu6IA=\n=83h4\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b8020ee034d6147c7ee55707114900f62075ba1\nparent c9d7d0a653910fa3f2dc40e4355c638ec3f0fcb5\nauthor fanquake <fanquake@gmail.com> 1638263577 +0800\ncommitter fanquake <fanquake@gmail.com> 1638357843 +0800\n\ndoc: Extract CreateTxDoc in rawtransaction\n\nFor the fields: inputs, outputs, locktime, replaceable\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36dc5bb8cb1d71356d645338b5b49361f3bda956",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36dc5bb8cb1d71356d645338b5b49361f3bda956",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36dc5bb8cb1d71356d645338b5b49361f3bda956/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9d7d0a653910fa3f2dc40e4355c638ec3f0fcb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9d7d0a653910fa3f2dc40e4355c638ec3f0fcb5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9d7d0a653910fa3f2dc40e4355c638ec3f0fcb5"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 39,
      "deletions": 66
    },
    "files": [
      {
        "sha": "7f3917b6383305285ac98748426b172170889cf2",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 66,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36dc5bb8cb1d71356d645338b5b49361f3bda956/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36dc5bb8cb1d71356d645338b5b49361f3bda956/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=36dc5bb8cb1d71356d645338b5b49361f3bda956",
        "patch": "@@ -69,6 +69,43 @@ static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue&\n     }\n }\n \n+static std::vector<RPCArg> CreateTxDoc()\n+{\n+    return {\n+        {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The inputs\",\n+            {\n+                {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                    {\n+                        {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                        {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        {\"sequence\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"depends on the value of the 'replaceable' and 'locktime' arguments\"}, \"The sequence number\"},\n+                    },\n+                },\n+            },\n+        },\n+        {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n+                \"That is, each address can only appear once and there can only be one 'data' object.\\n\"\n+                \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n+                \"                             accepted as second parameter.\",\n+            {\n+                {\"\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED, \"\",\n+                    {\n+                        {\"address\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT},\n+                    },\n+                },\n+                {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                    {\n+                        {\"data\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n+                    },\n+                },\n+            },\n+        },\n+        {\"locktime\", RPCArg::Type::NUM, RPCArg::Default{0}, \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n+        {\"replaceable\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Marks this transaction as BIP125-replaceable.\\n\"\n+                \"Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\"},\n+    };\n+}\n+\n static RPCHelpMan getrawtransaction()\n {\n     return RPCHelpMan{\n@@ -375,39 +412,7 @@ static RPCHelpMan createrawtransaction()\n                 \"Returns hex-encoded raw transaction.\\n\"\n                 \"Note that the transaction's inputs are not signed, and\\n\"\n                 \"it is not stored in the wallet or transmitted to the network.\\n\",\n-                {\n-                    {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The inputs\",\n-                        {\n-                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n-                                {\n-                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n-                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n-                                    {\"sequence\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"depends on the value of the 'replaceable' and 'locktime' arguments\"}, \"The sequence number\"},\n-                                },\n-                                },\n-                        },\n-                        },\n-                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n-                            \"That is, each address can only appear once and there can only be one 'data' object.\\n\"\n-                            \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n-                            \"                             accepted as second parameter.\",\n-                        {\n-                            {\"\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED, \"\",\n-                                {\n-                                    {\"address\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT},\n-                                },\n-                                },\n-                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n-                                {\n-                                    {\"data\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n-                                },\n-                                },\n-                        },\n-                        },\n-                    {\"locktime\", RPCArg::Type::NUM, RPCArg::Default{0}, \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n-                    {\"replaceable\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Marks this transaction as BIP125-replaceable.\\n\"\n-            \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\"},\n-                },\n+                CreateTxDoc(),\n                 RPCResult{\n                     RPCResult::Type::STR_HEX, \"transaction\", \"hex string of the transaction\"\n                 },\n@@ -1435,39 +1440,7 @@ static RPCHelpMan createpsbt()\n     return RPCHelpMan{\"createpsbt\",\n                 \"\\nCreates a transaction in the Partially Signed Transaction format.\\n\"\n                 \"Implements the Creator role.\\n\",\n-                {\n-                    {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The json objects\",\n-                        {\n-                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n-                                {\n-                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n-                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n-                                    {\"sequence\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"depends on the value of the 'replaceable' and 'locktime' arguments\"}, \"The sequence number\"},\n-                                },\n-                                },\n-                        },\n-                        },\n-                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n-                            \"That is, each address can only appear once and there can only be one 'data' object.\\n\"\n-                            \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n-                            \"                             accepted as second parameter.\",\n-                        {\n-                            {\"\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED, \"\",\n-                                {\n-                                    {\"address\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT},\n-                                },\n-                                },\n-                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n-                                {\n-                                    {\"data\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n-                                },\n-                                },\n-                        },\n-                        },\n-                    {\"locktime\", RPCArg::Type::NUM, RPCArg::Default{0}, \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n-                    {\"replaceable\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Marks this transaction as BIP125 replaceable.\\n\"\n-                            \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\"},\n-                },\n+                CreateTxDoc(),\n                 RPCResult{\n                     RPCResult::Type::STR, \"\", \"The resulting raw transaction (base64-encoded string)\"\n                 },"
      }
    ]
  },
  {
    "sha": "c771ee8571dc63d27747ef565671eb1dcdc0ff4b",
    "node_id": "C_kwDOABII59oAKGM3NzFlZTg1NzFkYzYzZDI3NzQ3ZWY1NjU2NzFlYjFkY2RjMGZmNGI",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-12-01T11:24:38Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-12-01T11:24:38Z"
      },
      "message": "doc: use BIP125-replaceable",
      "tree": {
        "sha": "a54897ac8e6e953bc1f732fd48b78a762d4e8567",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a54897ac8e6e953bc1f732fd48b78a762d4e8567"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c771ee8571dc63d27747ef565671eb1dcdc0ff4b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmGnW4IACgkQLuufXMCV\nJsHb5w/+IRmqf1jl2xcA3NeuCOgulrmd7gPBhxazTLmWDqu9sCCEeI0LrmDbdB6+\nhDQXXnYvG436u5gJE05pYnS/4NpYwRJ8Wxc2lkrBQW/YLUy5ljDcJADMBP2wlMAZ\nSVG3PflQ6qMRq6tGga4rBoVaRcEf/LWI9kN96mtWxIFrW1xSZ8xD3lfeATxFUo/f\npuomK1MrYf/9uz4BmTiQFUHvwzIDj4QT5z2qf/PA2hQrMhgokG1Jf4WQbozgFCMf\nTSs6BwgyGIj3Kqtr5ZEir/e2jzfOZ2A108oX9oeZ8cLAcmlSQQNIjVV1oLZ3MV4/\nbiZv5WwYu7g4/BAFRH5MbnZ8Q8wh4XdwznQRuGAYCfGiXYVagoU/Ba8w7Kl3O9uu\nZNIUtdHBey4Swzn+aZmGKBKFHQIN7mZ/8IiR6BU23SokeRlPTrwrn4m5wJWw50VF\neqJeNUsUTMKpnYdz+ePjBbTTETjDYSfH/76418woJX7pe5Sie3pqz824bT5T4/TP\nJSvBFGAxmCMsX23w6uicLMioHgQf1vNCKaGh3/VKWp9HKECv0iuuYUZQPh9r4JlM\nrC8jwMZ6vgC0ZImom8rzfMQW0crLOJs4k9w8ZR3ZBkCSaBkADKEwqbyqhCffinAf\nhIHla2Yon5n1aXE5C9eEKSf6ICd7Q3+TqKPYALRv5GOE+Zzj2l4=\n=RlOA\n-----END PGP SIGNATURE-----",
        "payload": "tree a54897ac8e6e953bc1f732fd48b78a762d4e8567\nparent 36dc5bb8cb1d71356d645338b5b49361f3bda956\nauthor fanquake <fanquake@gmail.com> 1638357878 +0800\ncommitter fanquake <fanquake@gmail.com> 1638357878 +0800\n\ndoc: use BIP125-replaceable\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c771ee8571dc63d27747ef565671eb1dcdc0ff4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c771ee8571dc63d27747ef565671eb1dcdc0ff4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c771ee8571dc63d27747ef565671eb1dcdc0ff4b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36dc5bb8cb1d71356d645338b5b49361f3bda956",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36dc5bb8cb1d71356d645338b5b49361f3bda956",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36dc5bb8cb1d71356d645338b5b49361f3bda956"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "22ce271816296c72a5be1a31968f4e88d8f47b50",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c771ee8571dc63d27747ef565671eb1dcdc0ff4b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c771ee8571dc63d27747ef565671eb1dcdc0ff4b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c771ee8571dc63d27747ef565671eb1dcdc0ff4b",
        "patch": "@@ -3162,7 +3162,7 @@ static std::vector<RPCArg> FundTxDoc()\n         {\"conf_target\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"wallet -txconfirmtarget\"}, \"Confirmation target in blocks\"},\n         {\"estimate_mode\", RPCArg::Type::STR, RPCArg::Default{\"unset\"}, std::string() + \"The fee estimate mode, must be one of (case insensitive):\\n\"\n             \"         \\\"\" + FeeModes(\"\\\"\\n\\\"\") + \"\\\"\"},\n-        {\"replaceable\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"wallet default\"}, \"Marks this transaction as BIP125 replaceable.\\n\"\n+        {\"replaceable\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"wallet default\"}, \"Marks this transaction as BIP125-replaceable.\\n\"\n             \"Allows this transaction to be replaced by a transaction with higher fees\"},\n         {\"solving_data\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"Keys and scripts needed for producing a final transaction with a dummy signature.\\n\"\n             \"Used for fee estimation during coin selection.\","
      }
    ]
  }
]