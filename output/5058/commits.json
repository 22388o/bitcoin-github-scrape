[
  {
    "sha": "3eca82da7ef33772394621c6338bdae4a434f388",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWNhODJkYTdlZjMzNzcyMzk0NjIxYzYzMzhiZGFlNGE0MzRmMzg4",
    "commit": {
      "author": {
        "name": "Andymeows",
        "email": "andy@redeempaper.com",
        "date": "2014-10-06T06:02:53Z"
      },
      "committer": {
        "name": "Andymeows",
        "email": "andy@redeempaper.com",
        "date": "2014-10-07T02:55:23Z"
      },
      "message": "Adding base changes from Dogecoin implementation",
      "tree": {
        "sha": "ba5318b6789d67b7f8b7e6e15bc8c99e35ba4f92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba5318b6789d67b7f8b7e6e15bc8c99e35ba4f92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3eca82da7ef33772394621c6338bdae4a434f388",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eca82da7ef33772394621c6338bdae4a434f388",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3eca82da7ef33772394621c6338bdae4a434f388",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eca82da7ef33772394621c6338bdae4a434f388/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5505a1b13f75af9f0f6421b42d97c06e079db345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5505a1b13f75af9f0f6421b42d97c06e079db345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5505a1b13f75af9f0f6421b42d97c06e079db345"
      }
    ],
    "stats": {
      "total": 843,
      "additions": 838,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8d06c02eb48739c014670f4a5bcf0a7b7a6c32dc",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -112,6 +112,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n       if test x$qt_plugin_path != x; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/printsupport\"\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n       fi\n       if test x$use_pkgconfig = xyes; then\n@@ -120,6 +121,8 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       if test x$TARGET_OS == xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsPrinterSupportPlugin)],[-lwindowsprintersupport])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n       elif test x$TARGET_OS == xlinux; then\n         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n@@ -146,8 +149,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n          Q_IMPORT_PLUGIN(qjpcodecs)\n          Q_IMPORT_PLUGIN(qtwcodecs)\n          Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+         Q_IMPORT_PLUGIN(AccessibleFactory)\n+         Q_IMPORT_PLUGIN(QWindowsPrinterSupportPlugin)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets -lwindowsprintersupport])\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n@@ -301,7 +305,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n       QT_LIB_PREFIX=Qt\n       bitcoin_qt_got_major_vers=4\n     fi\n-    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets Qt5PrintSupport\"\n     qt4_modules=\"QtCore QtGui QtNetwork\"\n     BITCOIN_QT_CHECK([\n       if test x$bitcoin_qt_want_version == xqt5 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n@@ -345,7 +349,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n     if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus -I$qt_include_path/QtPrintSupport\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n   ])\n@@ -387,6 +391,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n   if test x$bitcoin_qt_got_major_vers == x5; then\n     BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PrintSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPrintSupport not found)))\n   fi\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\""
      },
      {
        "sha": "68f38387e3a9aaefe8a17b6daadb3b944a5e270c",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -19,3 +19,6 @@ FORMS += \\\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc\n+\n+QT += \\\n+    printsupport"
      },
      {
        "sha": "90a684ba072188be446486ca6c6f98facac374c2",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -85,6 +85,7 @@ QT_FORMS_UI = \\\n   qt/forms/openuridialog.ui \\\n   qt/forms/optionsdialog.ui \\\n   qt/forms/overviewpage.ui \\\n+  qt/forms/paperwalletdialog.ui \\\n   qt/forms/receivecoinsdialog.ui \\\n   qt/forms/receiverequestdialog.ui \\\n   qt/forms/rpcconsole.ui \\\n@@ -135,6 +136,7 @@ QT_MOC_CPP = \\\n   qt/moc_transactiontablemodel.cpp \\\n   qt/moc_transactionview.cpp \\\n   qt/moc_utilitydialog.cpp \\\n+  qt/moc_verticallabel.cpp \\\n   qt/moc_walletframe.cpp \\\n   qt/moc_walletmodel.cpp \\\n   qt/moc_walletview.cpp\n@@ -204,6 +206,7 @@ BITCOIN_QT_H = \\\n   qt/transactiontablemodel.h \\\n   qt/transactionview.h \\\n   qt/utilitydialog.h \\\n+  qt/verticallabel.h \\\n   qt/walletframe.h \\\n   qt/walletmodel.h \\\n   qt/walletmodeltransaction.h \\\n@@ -242,6 +245,7 @@ RES_ICONS = \\\n   qt/res/icons/lock_closed.png \\\n   qt/res/icons/lock_open.png \\\n   qt/res/icons/overview.png \\\n+  qt/res/icons/print.png \\\n   qt/res/icons/qrcode.png \\\n   qt/res/icons/quit.png \\\n   qt/res/icons/receive.png \\\n@@ -279,6 +283,7 @@ BITCOIN_QT_CPP = \\\n   qt/splashscreen.cpp \\\n   qt/trafficgraphwidget.cpp \\\n   qt/utilitydialog.cpp \\\n+  qt/verticallabel.cpp \\\n   qt/winshutdownmonitor.cpp\n \n if ENABLE_WALLET\n@@ -305,6 +310,7 @@ BITCOIN_QT_CPP += \\\n   qt/transactionrecord.cpp \\\n   qt/transactiontablemodel.cpp \\\n   qt/transactionview.cpp \\\n+  qt/verticallabel.cpp \\\n   qt/walletframe.cpp \\\n   qt/walletmodel.cpp \\\n   qt/walletmodeltransaction.cpp \\\n@@ -314,7 +320,8 @@ endif\n RES_IMAGES = \\\n   qt/res/images/about.png \\\n   qt/res/images/splash.png \\\n-  qt/res/images/splash_testnet.png\n+  qt/res/images/splash_testnet.png \\\n+  qt/res/images/paper_wallet.png\n \n RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)\n "
      },
      {
        "sha": "37fe547ab4382db9f500f591f162a7f622ac8a45",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -61,6 +61,8 @@ Q_IMPORT_PLUGIN(AccessibleFactory)\n Q_IMPORT_PLUGIN(QXcbIntegrationPlugin);\n #elif defined(QT_QPA_PLATFORM_WINDOWS)\n Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n+Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin);\n+Q_IMPORT_PLUGIN(QWindowsPrinterSupportPlugin);\n #elif defined(QT_QPA_PLATFORM_COCOA)\n Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n #endif"
      },
      {
        "sha": "804cda83612966d2d53edd283bbec3a83f407ed8",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -45,6 +45,7 @@\n         <file alias=\"filesave\">res/icons/filesave.png</file>\n         <file alias=\"qrcode\">res/icons/qrcode.png</file>\n         <file alias=\"debugwindow\">res/icons/debugwindow.png</file>\n+        <file alias=\"print\">res/icons/print.png</file>\n     </qresource>\n     <qresource prefix=\"/images\">\n         <file alias=\"about\">res/images/about.png</file>"
      },
      {
        "sha": "42fc8d6b330cc9340c1b2ffe3fb07d7ff53b192a",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -328,6 +328,8 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n     verifyMessageAction = new QAction(QIcon(\":/icons/transaction_0\"), tr(\"&Verify message...\"), this);\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n+    paperWalletAction = new QAction(QIcon(\":/icons/print\"), tr(\"&Print paper wallets\"), this);\n+    paperWalletAction->setStatusTip(tr(\"Print paper wallets\"));\n \n     openRPCConsoleAction = new QAction(QIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n@@ -360,6 +362,7 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n         connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n         connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n         connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+        connect(paperWalletAction, SIGNAL(triggered()), walletFrame, SLOT(printPaperWallets()));\n     }\n #endif\n }\n@@ -382,6 +385,7 @@ void BitcoinGUI::createMenuBar()\n         file->addAction(backupWalletAction);\n         file->addAction(signMessageAction);\n         file->addAction(verifyMessageAction);\n+        file->addAction(paperWalletAction);\n         file->addSeparator();\n         file->addAction(usedSendingAddressesAction);\n         file->addAction(usedReceivingAddressesAction);\n@@ -503,6 +507,7 @@ void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n     usedSendingAddressesAction->setEnabled(enabled);\n     usedReceivingAddressesAction->setEnabled(enabled);\n     openAction->setEnabled(enabled);\n+    paperWalletAction->setEnabled(enabled);\n }\n \n void BitcoinGUI::createTrayIcon(bool fIsTestnet)"
      },
      {
        "sha": "0fea7cd4fe47734b8910fbc4ff75c82fd909dd49",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -92,6 +92,7 @@ class BitcoinGUI : public QMainWindow\n     QAction *usedReceivingAddressesAction;\n     QAction *signMessageAction;\n     QAction *verifyMessageAction;\n+    QAction *paperWalletAction;\n     QAction *aboutAction;\n     QAction *receiveCoinsAction;\n     QAction *optionsAction;"
      },
      {
        "sha": "c55102e0aa9c1eed12e9fc21905282291e020471",
        "filename": "src/qt/forms/paperwalletdialog.ui",
        "status": "added",
        "additions": 339,
        "deletions": 0,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/forms/paperwalletdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/forms/paperwalletdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/paperwalletdialog.ui?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -0,0 +1,339 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>PaperWalletDialog</class>\n+ <widget class=\"QDialog\" name=\"PaperWalletDialog\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>716</width>\n+    <height>450</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Print Your Paper Wallets</string>\n+  </property>\n+  <widget class=\"QLabel\" name=\"privateKeyQRCode\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>524</x>\n+     <y>159</y>\n+     <width>149</width>\n+     <height>149</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string/>\n+   </property>\n+   <property name=\"scaledContents\">\n+    <bool>true</bool>\n+   </property>\n+  </widget>\n+  <widget class=\"QLabel\" name=\"addressQRCode\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>47</x>\n+     <y>86</y>\n+     <width>120</width>\n+     <height>120</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string/>\n+   </property>\n+   <property name=\"scaledContents\">\n+    <bool>true</bool>\n+   </property>\n+  </widget>\n+  <widget class=\"QPushButton\" name=\"getNewAddress\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>415</y>\n+     <width>151</width>\n+     <height>26</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string>Very New Address</string>\n+   </property>\n+   <property name=\"icon\">\n+    <iconset resource=\"../dogecoin.qrc\">\n+     <normaloff>:/icons/add</normaloff>:/icons/add</iconset>\n+   </property>\n+  </widget>\n+  <widget class=\"QLabel\" name=\"paperTemplate\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>10</y>\n+     <width>675</width>\n+     <height>362</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string notr=\"true\"/>\n+   </property>\n+   <property name=\"pixmap\">\n+    <pixmap resource=\"../dogecoin.qrc\">:/images/paper_wallet</pixmap>\n+   </property>\n+  </widget>\n+  <widget class=\"VerticalLabel\" name=\"addressText\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>212</x>\n+     <y>20</y>\n+     <width>31</width>\n+     <height>341</height>\n+    </rect>\n+   </property>\n+   <property name=\"font\">\n+    <font>\n+     <family>Monospace</family>\n+     <pointsize>12</pointsize>\n+     <weight>75</weight>\n+     <italic>false</italic>\n+     <bold>true</bold>\n+    </font>\n+   </property>\n+   <property name=\"text\">\n+    <string/>\n+   </property>\n+   <property name=\"alignment\">\n+    <set>Qt::AlignCenter</set>\n+   </property>\n+   <property name=\"textInteractionFlags\">\n+    <set>Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+   </property>\n+  </widget>\n+  <widget class=\"VerticalLabel\" name=\"privateKeyText\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>500</x>\n+     <y>10</y>\n+     <width>31</width>\n+     <height>361</height>\n+    </rect>\n+   </property>\n+   <property name=\"font\">\n+    <font>\n+     <family>Monospace</family>\n+     <pointsize>8</pointsize>\n+     <weight>50</weight>\n+     <italic>false</italic>\n+     <bold>false</bold>\n+    </font>\n+   </property>\n+   <property name=\"text\">\n+    <string/>\n+   </property>\n+   <property name=\"scaledContents\">\n+    <bool>true</bool>\n+   </property>\n+   <property name=\"alignment\">\n+    <set>Qt::AlignCenter</set>\n+   </property>\n+   <property name=\"textInteractionFlags\">\n+    <set>Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+   </property>\n+  </widget>\n+  <widget class=\"QPushButton\" name=\"printButton\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>420</x>\n+     <y>415</y>\n+     <width>111</width>\n+     <height>26</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string>So Print</string>\n+   </property>\n+   <property name=\"icon\">\n+    <iconset resource=\"../dogecoin.qrc\">\n+     <normaloff>:/icons/receiving_addresses</normaloff>:/icons/receiving_addresses</iconset>\n+   </property>\n+  </widget>\n+  <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>610</x>\n+     <y>415</y>\n+     <width>81</width>\n+     <height>26</height>\n+    </rect>\n+   </property>\n+   <property name=\"standardButtons\">\n+    <set>QDialogButtonBox::NoButton</set>\n+   </property>\n+   <property name=\"centerButtons\">\n+    <bool>true</bool>\n+   </property>\n+  </widget>\n+  <widget class=\"QLabel\" name=\"label\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>190</x>\n+     <y>415</y>\n+     <width>91</width>\n+     <height>26</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string>Many Wallets?</string>\n+   </property>\n+  </widget>\n+  <widget class=\"QComboBox\" name=\"walletCount\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>290</x>\n+     <y>415</y>\n+     <width>74</width>\n+     <height>26</height>\n+    </rect>\n+   </property>\n+   <property name=\"editable\">\n+    <bool>false</bool>\n+   </property>\n+   <item>\n+    <property name=\"text\">\n+     <string>1</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>2</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>3</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>4</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>5</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>6</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>7</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>8</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>9</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>10</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>11</string>\n+    </property>\n+   </item>\n+   <item>\n+    <property name=\"text\">\n+     <string>12</string>\n+    </property>\n+   </item>\n+  </widget>\n+  <widget class=\"QTextEdit\" name=\"publicKey\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>100</x>\n+     <y>378</y>\n+     <width>600</width>\n+     <height>30</height>\n+    </rect>\n+   </property>\n+   <property name=\"undoRedoEnabled\">\n+    <bool>false</bool>\n+   </property>\n+   <property name=\"readOnly\">\n+    <bool>true</bool>\n+   </property>\n+   <property name=\"html\">\n+    <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;\n+&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;\n+p, li { white-space: pre-wrap; }\n+&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;\n+&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n+   </property>\n+   <property name=\"acceptRichText\">\n+    <bool>false</bool>\n+   </property>\n+  </widget>\n+  <widget class=\"QLabel\" name=\"label_2\">\n+   <property name=\"geometry\">\n+    <rect>\n+     <x>20</x>\n+     <y>380</y>\n+     <width>91</width>\n+     <height>26</height>\n+    </rect>\n+   </property>\n+   <property name=\"text\">\n+    <string>Public Key:</string>\n+   </property>\n+  </widget>\n+  <zorder>getNewAddress</zorder>\n+  <zorder>paperTemplate</zorder>\n+  <zorder>addressQRCode</zorder>\n+  <zorder>privateKeyQRCode</zorder>\n+  <zorder>addressText</zorder>\n+  <zorder>privateKeyText</zorder>\n+  <zorder>printButton</zorder>\n+  <zorder>buttonBox</zorder>\n+  <zorder>label</zorder>\n+  <zorder>walletCount</zorder>\n+  <zorder>publicKey</zorder>\n+  <zorder>label_2</zorder>\n+ </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>VerticalLabel</class>\n+   <extends>QLabel</extends>\n+   <header>verticallabel.h</header>\n+  </customwidget>\n+ </customwidgets>\n+ <resources>\n+  <include location=\"../dogecoin.qrc\"/>\n+ </resources>\n+ <connections>\n+  <connection>\n+   <sender>buttonBox</sender>\n+   <signal>rejected()</signal>\n+   <receiver>PaperWalletDialog</receiver>\n+   <slot>close()</slot>\n+   <hints>\n+    <hint type=\"sourcelabel\">\n+     <x>650</x>\n+     <y>408</y>\n+    </hint>\n+    <hint type=\"destinationlabel\">\n+     <x>357</x>\n+     <y>214</y>\n+    </hint>\n+   </hints>\n+  </connection>\n+ </connections>\n+</ui>"
      },
      {
        "sha": "37a824880fa5fe75d635779315618bac196ceb48",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 357,
        "deletions": 0,
        "changes": 357,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -4,22 +4,56 @@\n \n #include \"utilitydialog.h\"\n \n+#include \"ui_paperwalletdialog.h\"\n #include \"ui_helpmessagedialog.h\"\n \n+#include \"bitcoinunits.h\"\n+\n+#ifdef ENABLE_WALLET\n+#include \"sendcoinsdialog.h\"\n+#include \"sendcoinsentry.h\"\n+#include \"coincontrol.h\"\n+#include \"coincontroldialog.h\"\n+#endif\n+\n+#include \"optionsmodel.h\"\n #include \"bitcoingui.h\"\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n \n+#include \"clientversion.h\"\n #include \"init.h\"\n+#include \"util.h\"\n #include \"version.h\"\n \n #include <stdio.h>\n+#include \"net.h\"\n \n #include <QCloseEvent>\n #include <QLabel>\n+#include <QFont>\n+#include <QInputDialog>\n #include <QRegExp>\n #include <QVBoxLayout>\n \n+#ifdef USE_QRCODE\n+#include <qrencode.h>\n+#endif\n+\n+#if QT_VERSION < 0x050000\n+#include <QPrinter>\n+#include <QPrintDialog>\n+#include <QPrintPreviewDialog>\n+#else\n+// Use QT5's new modular classes\n+#include <QtPrintSupport/QPrinter>\n+#include <QtPrintSupport/QPrintDialog>\n+#include <QtPrintSupport/QPrintPreviewDialog>\n+#endif\n+#include <QPainter>\n+#include \"walletmodel.h\"\n+\n+\n /** \"Help message\" or \"About\" dialog box */\n HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n     QDialog(parent),\n@@ -105,6 +139,329 @@ void HelpMessageDialog::on_okButton_accepted()\n     close();\n }\n \n+/** \"PaperWallet\" dialog box */\n+PaperWalletDialog::PaperWalletDialog(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::PaperWalletDialog)\n+{\n+    ui->setupUi(this);\n+\n+    ui->buttonBox->addButton(tr(\"Close\"), QDialogButtonBox::RejectRole);\n+\n+    // Begin with a small bold monospace font for the textual version of the key and address.\n+    QFont font(\"Monospace\");\n+    font.setBold(true);\n+    font.setStyleHint(QFont::TypeWriter);\n+    font.setPixelSize(1);\n+    ui->addressText->setFont(font);\n+    ui->privateKeyText->setFont(font);\n+    ui->addressText->setAlignment(Qt::AlignJustify);\n+    ui->privateKeyText->setAlignment(Qt::AlignJustify);\n+\n+    if (vNodes.size() > 0) {\n+\n+               QMessageBox::critical(this, \"Warning: Network Activity Detected\", tr(\"It is recommended to disconnect from the internet before printing paper wallets. Even though paper wallets are generated on your local computer, it is still possible to unknowingly have malware that transmits your screen to a remote location. It is also recommended to print to a local printer vs a network printer since that network traffic can be monitored. Some advanced printers also store copies of each printed document. Proceed with caution relative to the amount of value you plan to store on each address.\"), QMessageBox::Ok, QMessageBox::Ok);\n+\n+    }\n+\n+}\n+\n+void PaperWalletDialog::setModel(WalletModel *model)\n+{\n+    RandAddSeed();\n+    this->model = model;\n+    this->on_getNewAddress_clicked();\n+}\n+\n+PaperWalletDialog::~PaperWalletDialog()\n+{\n+    delete ui;\n+}\n+\n+void PaperWalletDialog::on_getNewAddress_clicked()\n+{\n+    // Create a new private key\n+    CKey privKey;\n+    privKey.MakeNewKey(true);\n+\n+    // Derive the public key\n+    CPubKey pubkey = privKey.GetPubKey();\n+\n+    // Derive the public key hash\n+    CBitcoinAddress pubkeyhash;\n+    pubkeyhash.Set(pubkey.GetID());\n+\n+    // Create String versions of each\n+    std::string myPrivKey = CBitcoinSecret(privKey).ToString();\n+    std::string myPubKey = HexStr(pubkey.begin(), pubkey.end());\n+    std::string myAddress = pubkeyhash.ToString();\n+\n+\n+#ifdef USE_QRCODE\n+    // Generate the address QR code\n+    QRcode *code = QRcode_encodeString(myAddress.c_str(), 0, QR_ECLEVEL_M, QR_MODE_8, 1);\n+    if (!code)\n+    {\n+        ui->addressQRCode->setText(tr(\"Error encoding Address into QR Code.\"));\n+        return;\n+    }\n+    QImage myImage = QImage(code->width, code->width, QImage::Format_ARGB32);\n+    myImage.fill(QColor(0,0,0,0));\n+    unsigned char *p = code->data;\n+    for (int y = 0; y < code->width; y++)\n+    {\n+        for (int x = 0; x < code->width; x++)\n+        {\n+            myImage.setPixel(x, y, ((*p & 1) ? 0xff000000 : 0x0));\n+            p++;\n+        }\n+    }\n+    QRcode_free(code);\n+\n+\n+    // Generate the private key QR code\n+    code = QRcode_encodeString(myPrivKey.c_str(), 0, QR_ECLEVEL_M, QR_MODE_8, 1);\n+    if (!code)\n+    {\n+        ui->privateKeyQRCode->setText(tr(\"Error encoding private key into QR Code.\"));\n+        return;\n+    }\n+    QImage myImagePriv = QImage(code->width, code->width, QImage::Format_ARGB32);\n+    myImagePriv.fill(QColor(0,0,0,0));\n+    p = code->data;\n+    for (int y = 0; y < code->width; y++)\n+    {\n+        for (int x = 0; x < code->width; x++)\n+        {\n+            myImagePriv.setPixel(x, y, ((*p & 1) ? 0xff000000 : 0x0));\n+            p++;\n+        }\n+    }\n+    QRcode_free(code);\n+\n+    // Populate the QR Codes\n+    ui->addressQRCode->setPixmap(QPixmap::fromImage(myImage).scaled(ui->addressQRCode->width(), ui->addressQRCode->height()));\n+    ui->privateKeyQRCode->setPixmap(QPixmap::fromImage(myImagePriv).scaled(ui->privateKeyQRCode->width(), ui->privateKeyQRCode->height()));\n+#endif\n+\n+    // Populate the Texts\n+    ui->addressText->setText(myAddress.c_str());\n+    ui->privateKeyText->setText(tr(myPrivKey.c_str()));\n+\n+    ui->publicKey->setHtml(myPubKey.c_str());\n+\n+    // Update the fonts to fit the height of the wallet.\n+    // This should only really trigger the first time since the font size persists.\n+    double paperHeight = (double) ui->paperTemplate->height();\n+    double maxTextWidth = paperHeight * 0.99;\n+    double minTextWidth = paperHeight * 0.95;\n+    int pixelSizeStep = 1;\n+\n+    int addressTextLength = ui->addressText->fontMetrics().boundingRect(ui->addressText->text()).width();\n+    QFont font = ui->addressText->font();\n+    for(int i = 0; i < PAPER_WALLET_READJUST_LIMIT; i++) {\n+        if ( addressTextLength < minTextWidth) {\n+            font.setPixelSize(font.pixelSize() + pixelSizeStep);\n+            ui->addressText->setFont(font);\n+            addressTextLength = ui->addressText->fontMetrics().boundingRect(ui->addressText->text()).width();\n+        } else {\n+            break;\n+        }\n+\n+    }\n+    if ( addressTextLength > maxTextWidth ) {\n+        font.setPixelSize(font.pixelSize() - pixelSizeStep);\n+        ui->addressText->setFont(font);\n+        addressTextLength = ui->addressText->fontMetrics().boundingRect(ui->addressText->text()).width();\n+    }\n+\n+    int privateKeyTextLength = ui->privateKeyText->fontMetrics().boundingRect(ui->privateKeyText->text()).width();\n+    font = ui->privateKeyText->font();\n+    for(int i = 0; i < PAPER_WALLET_READJUST_LIMIT; i++) {\n+        if ( privateKeyTextLength < minTextWidth) {\n+            font.setPixelSize(font.pixelSize() + pixelSizeStep);\n+            ui->privateKeyText->setFont(font);\n+            privateKeyTextLength = ui->privateKeyText->fontMetrics().boundingRect(ui->privateKeyText->text()).width();\n+        } else {\n+            break;\n+        }\n+    }\n+    if ( privateKeyTextLength > maxTextWidth ) {\n+        font.setPixelSize(font.pixelSize() - pixelSizeStep);\n+        ui->privateKeyText->setFont(font);\n+        privateKeyTextLength = ui->privateKeyText->fontMetrics().boundingRect(ui->privateKeyText->text()).width();\n+    }\n+\n+}\n+\n+void PaperWalletDialog::on_printButton_clicked()\n+{\n+\n+    QPrinter printer(QPrinter::HighResolution);\n+    QPrintDialog *qpd = new QPrintDialog(&printer, this);\n+\n+    qpd->setPrintRange(QAbstractPrintDialog::AllPages);\n+\n+    QList<QString> recipientPubKeyHashes;\n+\n+    if ( qpd->exec() != QDialog::Accepted ) {\n+        return;\n+    }\n+\n+    // Hardcode these values\n+    printer.setOrientation(QPrinter::Portrait);\n+    printer.setPaperSize(QPrinter::A4);\n+    printer.setFullPage(true);\n+\n+    QPainter painter;\n+    if (! painter.begin(&printer)) { // failed to open file\n+        QMessageBox::critical(this, \"Printing Error\", tr(\"failed to open file, is it writable?\"), QMessageBox::Ok, QMessageBox::Ok);\n+        return;\n+    }\n+\n+    int walletCount = ui->walletCount->currentIndex() + 1;\n+    int walletsPerPage = 4;\n+\n+    int pageHeight = printer.pageRect().height() - PAPER_WALLET_PAGE_MARGIN;\n+    int walletHeight = ui->paperTemplate->height();\n+    double computedWalletHeight = 0.9 * pageHeight / walletsPerPage;\n+    double scale = computedWalletHeight / walletHeight;\n+    double walletPadding = pageHeight * 0.05 / (walletsPerPage - 1) / scale;\n+\n+    QRegion walletRegion = QRegion(ui->paperTemplate->x(), ui->paperTemplate->y(),\n+    ui->paperTemplate->width(), ui->paperTemplate->height());\n+        painter.scale(scale, scale);\n+\n+    for(int i = 0; i < walletCount; i++) {\n+\n+        QPoint point = QPoint(PAPER_WALLET_PAGE_MARGIN, (PAPER_WALLET_PAGE_MARGIN / 2) + ( i % walletsPerPage ) * (walletHeight + walletPadding));\n+        this->render(&painter, point, walletRegion);\n+        recipientPubKeyHashes.append(ui->addressText->text());\n+\n+        if ( i % walletsPerPage == ( walletsPerPage - 1 ) ) {\n+\n+            printer.newPage();\n+\n+        }\n+\n+        this->on_getNewAddress_clicked();\n+\n+    }\n+\n+    painter.end();\n+\n+#ifdef ENABLE_WALLET\n+    QStringList formatted;\n+\n+    WalletModelTransaction *tx;\n+    while( true ) {\n+        bool ok;\n+\n+        // Ask for an amount to send to each paper wallet. It might be better to try to use the BitcoinAmountField, but this works fine.\n+        double amountInput = QInputDialog::getDouble(this, tr(\"Load Paper Wallets\"), tr(\"The paper wallet printing process has begun.<br/>Please wait for the wallets to print completely and verify that everything printed correctly.<br/>Check for misalignments, ink bleeding, smears, or anything else that could make the private keys unreadable.<br/>Now, enter the number of DOGE you wish to send to each wallet:\"), 0, 0, 2147483647, 8, &ok);\n+\n+        if(!ok) {\n+            return;\n+        }\n+\n+\n+        WalletModel::UnlockContext ctx(this->model->requestUnlock());\n+        if(!ctx.isValid())\n+        {\n+            return;\n+        }\n+\n+        QList<SendCoinsRecipient> recipients;\n+        quint64 amount = (quint64) ( amountInput * COIN );\n+        foreach(const QString &dest, recipientPubKeyHashes)\n+        {\n+\n+            recipients.append(SendCoinsRecipient(dest,tr(\"Paper wallet %1\").arg(dest), amount,\"\"));\n+            formatted.append(tr(\"<b>%1</b> to Paper Wallet <span style='font-family: monospace;'>%2</span>\").arg(QString::number(amountInput, 'f', 8), GUIUtil::HtmlEscape(dest)));\n+\n+        }\n+\n+        tx = new WalletModelTransaction(recipients);\n+\n+        WalletModel::SendCoinsReturn prepareStatus;\n+        if (this->model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n+            prepareStatus = this->model->prepareTransaction(*tx, CoinControlDialog::coinControl);\n+        else\n+            prepareStatus = this->model->prepareTransaction(*tx);\n+\n+        if (prepareStatus.status == WalletModel::InvalidAddress) {\n+            QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"The recipient address is not valid, please recheck.\"), QMessageBox::Ok, QMessageBox::Ok);\n+        } else if (prepareStatus.status == WalletModel::InvalidAmount) {\n+            QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"The amount to pay must be larger than 0\"), QMessageBox::Ok, QMessageBox::Ok);\n+        } else if (prepareStatus.status == WalletModel::AmountExceedsBalance) {\n+            QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"The amount exceeds your balance.\"), QMessageBox::Ok, QMessageBox::Ok);\n+        } else if (prepareStatus.status == WalletModel::AmountWithFeeExceedsBalance) {\n+            QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"The total exceeds your balance when the transaction fee is included\"), QMessageBox::Ok, QMessageBox::Ok);\n+        } else if (prepareStatus.status == WalletModel::DuplicateAddress) {\n+            QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"Duplicate address found, can only send to each address once per send operation.\"), QMessageBox::Ok, QMessageBox::Ok);\n+        } else if (prepareStatus.status == WalletModel::TransactionCreationFailed) {\n+            QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"Transaction creation failed!\"), QMessageBox::Ok, QMessageBox::Ok);\n+        } else if (prepareStatus.status == WalletModel::OK) {\n+            break;\n+        } else {\n+            delete tx;\n+            return;\n+        }\n+\n+    }\n+\n+   // Stolen from sendcoinsdialog.cpp\n+    qint64 txFee = tx->getTransactionFee();\n+    QString questionString = tr(\"Are you sure you want to send?\");\n+    questionString.append(\"<br /><br />%1\");\n+\n+    if(txFee > 0)\n+    {\n+        // append fee string if a fee is required\n+        questionString.append(\"<hr /><span style='color:#aa0000;'>\");\n+        questionString.append(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n+        questionString.append(\"</span> \");\n+        questionString.append(tr(\"added as transaction fee\"));\n+    }\n+\n+    // add total amount in all subdivision units\n+    questionString.append(\"<hr />\");\n+    qint64 totalAmount = tx->getTotalTransactionAmount() + txFee;\n+    QStringList alternativeUnits;\n+    foreach(BitcoinUnits::Unit u, BitcoinUnits::availableUnits())\n+    {\n+        if(u != model->getOptionsModel()->getDisplayUnit())\n+            alternativeUnits.append(BitcoinUnits::formatWithUnit(u, totalAmount));\n+    }\n+\n+    questionString.append(tr(\"Total Amount %1 (= %2)\")\n+        .arg(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n+        .arg(alternativeUnits.join(\" \" + tr(\"or\") + \" \")));\n+\n+    QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm send coins\"),\n+        questionString.arg(formatted.join(\"<br />\")),\n+        QMessageBox::Yes | QMessageBox::Cancel,\n+        QMessageBox::Cancel);\n+\n+    if(retval != QMessageBox::Yes)\n+    {\n+        delete tx;\n+        return;\n+    }\n+\n+    WalletModel::SendCoinsReturn sendStatus = this->model->sendCoins(*tx);\n+\n+    if (sendStatus.status == WalletModel::TransactionCommitFailed) {\n+        QMessageBox::critical(this, tr(\"Send Coins\"), tr(\"The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"), QMessageBox::Ok, QMessageBox::Ok);\n+    }\n+    delete tx;\n+#endif\n+    return;\n+\n+}\n+\n+\n+\n \n /** \"Shutdown\" window */\n ShutdownWindow::ShutdownWindow(QWidget *parent, Qt::WindowFlags f):"
      },
      {
        "sha": "bf96de105f50da48b1920fee6ed6865f8428fc19",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -7,14 +7,40 @@\n \n #include <QDialog>\n #include <QObject>\n+#include \"walletmodel.h\"\n \n class BitcoinGUI;\n class ClientModel;\n \n namespace Ui {\n     class HelpMessageDialog;\n+    class PaperWalletDialog;\n }\n \n+/** \"Paper Wallet\" dialog box */\n+class PaperWalletDialog : public QDialog\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PaperWalletDialog(QWidget *parent);\n+    ~PaperWalletDialog();\n+\n+    void setModel(WalletModel *model);\n+\n+private:\n+    Ui::PaperWalletDialog *ui;\n+    WalletModel *model;\n+    static const int PAPER_WALLET_READJUST_LIMIT = 20;\n+    static const int PAPER_WALLET_PAGE_MARGIN = 50;\n+\n+private slots:\n+    void on_getNewAddress_clicked();\n+    void on_printButton_clicked();\n+};\n+\n+\n+\n /** \"Help message\" dialog box */\n class HelpMessageDialog : public QDialog\n {"
      },
      {
        "sha": "f106c458b8ac258d856a16593b7558095c818b00",
        "filename": "src/qt/verticallabel.cpp",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/verticallabel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/verticallabel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/verticallabel.cpp?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -0,0 +1,41 @@\n+#include \"verticallabel.h\"\n+\n+#include <QPainter>\n+\n+VerticalLabel::VerticalLabel(QWidget *parent)\n+    : QLabel(parent)\n+{\n+\n+}\n+\n+VerticalLabel::VerticalLabel(const QString &text, QWidget *parent)\n+: QLabel(text, parent)\n+{\n+}\n+\n+VerticalLabel::~VerticalLabel()\n+{\n+}\n+\n+void VerticalLabel::paintEvent(QPaintEvent*)\n+{\n+    QPainter painter(this);\n+    painter.setPen(Qt::black);\n+    painter.setBrush(Qt::Dense1Pattern);\n+    painter.translate(width()/2,height());\n+    painter.rotate(270);\n+\n+    painter.drawText(0,0, text());\n+}\n+\n+QSize VerticalLabel::minimumSizeHint() const\n+{\n+    QSize s = QLabel::minimumSizeHint();\n+    return QSize(s.height(), s.width());\n+}\n+\n+QSize VerticalLabel::sizeHint() const\n+{\n+    QSize s = QLabel::sizeHint();\n+    return QSize(s.height(), s.width());\n+}"
      },
      {
        "sha": "40eff3d1c28bacdf33d5776fe66320aa873a837e",
        "filename": "src/qt/verticallabel.h",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/verticallabel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/verticallabel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/verticallabel.h?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -0,0 +1,21 @@\n+#ifndef VERTICALLABEL_H\n+#define VERTICALLABEL_H\n+\n+#include <QLabel>\n+\n+class VerticalLabel : public QLabel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit VerticalLabel(QWidget *parent=0);\n+    explicit VerticalLabel(const QString &text, QWidget *parent=0);\n+    ~VerticalLabel();\n+\n+protected:\n+    void paintEvent(QPaintEvent*);\n+    QSize sizeHint() const ;\n+    QSize minimumSizeHint() const;\n+};\n+\n+#endif // VERTICALLABEL_H"
      },
      {
        "sha": "1f8b20f27ebf793493b04aef510f3beef724f8f3",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -8,6 +8,7 @@\n #include \"walletview.h\"\n \n #include <cstdio>\n+#include <iostream>\n \n #include <QHBoxLayout>\n #include <QLabel>\n@@ -175,6 +176,13 @@ void WalletFrame::unlockWallet()\n         walletView->unlockWallet();\n }\n \n+void WalletFrame::printPaperWallets()\n+{\n+    WalletView *walletView = currentWalletView();\n+    if (walletView)\n+        walletView->printPaperWallets();\n+}\n+\n void WalletFrame::usedSendingAddresses()\n {\n     WalletView *walletView = currentWalletView();"
      },
      {
        "sha": "baa1ef4cb6375b4e362864bff7c89503a429ac0e",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -71,6 +71,8 @@ public slots:\n     /** Ask for passphrase to unlock wallet temporarily */\n     void unlockWallet();\n \n+    void printPaperWallets();\n+\n     /** Show used sending addresses */\n     void usedSendingAddresses();\n     /** Show used receiving addresses */"
      },
      {
        "sha": "388d1bc17f50055a6e016f739ca2b13354b186f9",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -17,6 +17,7 @@\n #include \"transactiontablemodel.h\"\n #include \"transactionview.h\"\n #include \"walletmodel.h\"\n+#include \"utilitydialog.h\"\n \n #include \"ui_interface.h\"\n \n@@ -304,3 +305,14 @@ void WalletView::showProgress(const QString &title, int nProgress)\n     else if (progressDialog)\n         progressDialog->setValue(nProgress);\n }\n+\n+void WalletView::printPaperWallets()\n+{\n+    if(!walletModel)\n+        return;\n+\n+    PaperWalletDialog dlg(this);\n+    dlg.setModel(walletModel);\n+    dlg.exec();\n+}\n+"
      },
      {
        "sha": "6de0d2fbf678a31d52520fa9fa58e0058a57768b",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eca82da7ef33772394621c6338bdae4a434f388/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=3eca82da7ef33772394621c6338bdae4a434f388",
        "patch": "@@ -93,6 +93,9 @@ public slots:\n     void changePassphrase();\n     /** Ask for passphrase to unlock wallet temporarily */\n     void unlockWallet();\n+    /** Open the print paper wallets dialog **/\n+    void printPaperWallets();\n+\n \n     /** Show used sending addresses */\n     void usedSendingAddresses();"
      }
    ]
  },
  {
    "sha": "367095b2c3f1401743db36a7a2f6950e45783a2c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjcwOTViMmMzZjE0MDE3NDNkYjM2YTdhMmY2OTUwZTQ1NzgzYTJj",
    "commit": {
      "author": {
        "name": "whitj00",
        "email": "whitj00@ymail.com",
        "date": "2014-10-07T04:27:03Z"
      },
      "committer": {
        "name": "whitj00",
        "email": "whitj00@ymail.com",
        "date": "2014-10-07T04:27:03Z"
      },
      "message": "Add Paper Wallet Image",
      "tree": {
        "sha": "1635cf5b6eae16e0c4b4833ada300cb775a8aacd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1635cf5b6eae16e0c4b4833ada300cb775a8aacd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/367095b2c3f1401743db36a7a2f6950e45783a2c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/367095b2c3f1401743db36a7a2f6950e45783a2c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/367095b2c3f1401743db36a7a2f6950e45783a2c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/367095b2c3f1401743db36a7a2f6950e45783a2c/comments",
    "author": {
      "login": "whitj00",
      "id": 6721742,
      "node_id": "MDQ6VXNlcjY3MjE3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6721742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitj00",
      "html_url": "https://github.com/whitj00",
      "followers_url": "https://api.github.com/users/whitj00/followers",
      "following_url": "https://api.github.com/users/whitj00/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitj00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitj00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitj00/subscriptions",
      "organizations_url": "https://api.github.com/users/whitj00/orgs",
      "repos_url": "https://api.github.com/users/whitj00/repos",
      "events_url": "https://api.github.com/users/whitj00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitj00/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "whitj00",
      "id": 6721742,
      "node_id": "MDQ6VXNlcjY3MjE3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6721742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitj00",
      "html_url": "https://github.com/whitj00",
      "followers_url": "https://api.github.com/users/whitj00/followers",
      "following_url": "https://api.github.com/users/whitj00/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitj00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitj00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitj00/subscriptions",
      "organizations_url": "https://api.github.com/users/whitj00/orgs",
      "repos_url": "https://api.github.com/users/whitj00/repos",
      "events_url": "https://api.github.com/users/whitj00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitj00/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3eca82da7ef33772394621c6338bdae4a434f388",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eca82da7ef33772394621c6338bdae4a434f388",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3eca82da7ef33772394621c6338bdae4a434f388"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f8f07f7443f047e5383dc96051c265e68d39359b",
        "filename": "src/qt/res/images/paper_wallet.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/367095b2c3f1401743db36a7a2f6950e45783a2c/src/qt/res/images/paper_wallet.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/367095b2c3f1401743db36a7a2f6950e45783a2c/src/qt/res/images/paper_wallet.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/images/paper_wallet.png?ref=367095b2c3f1401743db36a7a2f6950e45783a2c"
      }
    ]
  },
  {
    "sha": "6fdf638f10565b5ae41fa5a21990744497b2bcd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmRmNjM4ZjEwNTY1YjVhZTQxZmE1YTIxOTkwNzQ0NDk3YjJiY2Qw",
    "commit": {
      "author": {
        "name": "whitj00",
        "email": "whitj00@ymail.com",
        "date": "2014-10-07T04:31:13Z"
      },
      "committer": {
        "name": "whitj00",
        "email": "whitj00@ymail.com",
        "date": "2014-10-07T04:31:13Z"
      },
      "message": "Change Doge Wording",
      "tree": {
        "sha": "5736ae982b42d2836c4880f5096d8df557660baf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5736ae982b42d2836c4880f5096d8df557660baf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fdf638f10565b5ae41fa5a21990744497b2bcd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdf638f10565b5ae41fa5a21990744497b2bcd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fdf638f10565b5ae41fa5a21990744497b2bcd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdf638f10565b5ae41fa5a21990744497b2bcd0/comments",
    "author": {
      "login": "whitj00",
      "id": 6721742,
      "node_id": "MDQ6VXNlcjY3MjE3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6721742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitj00",
      "html_url": "https://github.com/whitj00",
      "followers_url": "https://api.github.com/users/whitj00/followers",
      "following_url": "https://api.github.com/users/whitj00/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitj00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitj00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitj00/subscriptions",
      "organizations_url": "https://api.github.com/users/whitj00/orgs",
      "repos_url": "https://api.github.com/users/whitj00/repos",
      "events_url": "https://api.github.com/users/whitj00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitj00/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "whitj00",
      "id": 6721742,
      "node_id": "MDQ6VXNlcjY3MjE3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6721742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitj00",
      "html_url": "https://github.com/whitj00",
      "followers_url": "https://api.github.com/users/whitj00/followers",
      "following_url": "https://api.github.com/users/whitj00/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitj00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitj00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitj00/subscriptions",
      "organizations_url": "https://api.github.com/users/whitj00/orgs",
      "repos_url": "https://api.github.com/users/whitj00/repos",
      "events_url": "https://api.github.com/users/whitj00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitj00/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "367095b2c3f1401743db36a7a2f6950e45783a2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/367095b2c3f1401743db36a7a2f6950e45783a2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/367095b2c3f1401743db36a7a2f6950e45783a2c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1d454b15646804d65f05ac78928d537caa76d307",
        "filename": "src/qt/forms/paperwalletdialog.ui",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fdf638f10565b5ae41fa5a21990744497b2bcd0/src/qt/forms/paperwalletdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fdf638f10565b5ae41fa5a21990744497b2bcd0/src/qt/forms/paperwalletdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/paperwalletdialog.ui?ref=6fdf638f10565b5ae41fa5a21990744497b2bcd0",
        "patch": "@@ -55,10 +55,10 @@\n     </rect>\n    </property>\n    <property name=\"text\">\n-    <string>Very New Address</string>\n+    <string>New Address</string>\n    </property>\n    <property name=\"icon\">\n-    <iconset resource=\"../dogecoin.qrc\">\n+    <iconset resource=\"../bitcoin.qrc\">\n      <normaloff>:/icons/add</normaloff>:/icons/add</iconset>\n    </property>\n   </widget>\n@@ -75,7 +75,7 @@\n     <string notr=\"true\"/>\n    </property>\n    <property name=\"pixmap\">\n-    <pixmap resource=\"../dogecoin.qrc\">:/images/paper_wallet</pixmap>\n+    <pixmap resource=\"../bitcoin.qrc\">:/images/paper_wallet</pixmap>\n    </property>\n   </widget>\n   <widget class=\"VerticalLabel\" name=\"addressText\">\n@@ -147,10 +147,10 @@\n     </rect>\n    </property>\n    <property name=\"text\">\n-    <string>So Print</string>\n+    <string>Print</string>\n    </property>\n    <property name=\"icon\">\n-    <iconset resource=\"../dogecoin.qrc\">\n+    <iconset resource=\"../bitcoin.qrc\">\n      <normaloff>:/icons/receiving_addresses</normaloff>:/icons/receiving_addresses</iconset>\n    </property>\n   </widget>\n@@ -180,7 +180,7 @@\n     </rect>\n    </property>\n    <property name=\"text\">\n-    <string>Many Wallets?</string>\n+    <string>How Many?</string>\n    </property>\n   </widget>\n   <widget class=\"QComboBox\" name=\"walletCount\">\n@@ -316,7 +316,7 @@ p, li { white-space: pre-wrap; }\n   </customwidget>\n  </customwidgets>\n  <resources>\n-  <include location=\"../dogecoin.qrc\"/>\n+  <include location=\"../bitcoin.qrc\"/>\n  </resources>\n  <connections>\n   <connection>"
      },
      {
        "sha": "ddcf4ef16eb619baa958bfb3f506b2ff4d49c48b",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fdf638f10565b5ae41fa5a21990744497b2bcd0/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fdf638f10565b5ae41fa5a21990744497b2bcd0/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=6fdf638f10565b5ae41fa5a21990744497b2bcd0",
        "patch": "@@ -358,7 +358,7 @@ void PaperWalletDialog::on_printButton_clicked()\n         bool ok;\n \n         // Ask for an amount to send to each paper wallet. It might be better to try to use the BitcoinAmountField, but this works fine.\n-        double amountInput = QInputDialog::getDouble(this, tr(\"Load Paper Wallets\"), tr(\"The paper wallet printing process has begun.<br/>Please wait for the wallets to print completely and verify that everything printed correctly.<br/>Check for misalignments, ink bleeding, smears, or anything else that could make the private keys unreadable.<br/>Now, enter the number of DOGE you wish to send to each wallet:\"), 0, 0, 2147483647, 8, &ok);\n+        double amountInput = QInputDialog::getDouble(this, tr(\"Load Paper Wallets\"), tr(\"The paper wallet printing process has begun.<br/>Please wait for the wallets to print completely and verify that everything printed correctly.<br/>Check for misalignments, ink bleeding, smears, or anything else that could make the private keys unreadable.<br/>Now, enter the number of BTC you wish to send to each wallet:\"), 0, 0, 2147483647, 8, &ok);\n \n         if(!ok) {\n             return;"
      }
    ]
  },
  {
    "sha": "5bc7fb094e81c4504a92646a04e28761a8fb865c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmM3ZmIwOTRlODFjNDUwNGE5MjY0NmEwNGUyODc2MWE4ZmI4NjVj",
    "commit": {
      "author": {
        "name": "whitj00",
        "email": "whitj00@ymail.com",
        "date": "2014-10-07T23:06:43Z"
      },
      "committer": {
        "name": "whitj00",
        "email": "whitj00@ymail.com",
        "date": "2014-10-07T23:06:43Z"
      },
      "message": "Add Print Icon",
      "tree": {
        "sha": "792d2df724382a7e7b97d660b0c0bc9e267bcd7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/792d2df724382a7e7b97d660b0c0bc9e267bcd7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bc7fb094e81c4504a92646a04e28761a8fb865c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bc7fb094e81c4504a92646a04e28761a8fb865c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5bc7fb094e81c4504a92646a04e28761a8fb865c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bc7fb094e81c4504a92646a04e28761a8fb865c/comments",
    "author": {
      "login": "whitj00",
      "id": 6721742,
      "node_id": "MDQ6VXNlcjY3MjE3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6721742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitj00",
      "html_url": "https://github.com/whitj00",
      "followers_url": "https://api.github.com/users/whitj00/followers",
      "following_url": "https://api.github.com/users/whitj00/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitj00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitj00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitj00/subscriptions",
      "organizations_url": "https://api.github.com/users/whitj00/orgs",
      "repos_url": "https://api.github.com/users/whitj00/repos",
      "events_url": "https://api.github.com/users/whitj00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitj00/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "whitj00",
      "id": 6721742,
      "node_id": "MDQ6VXNlcjY3MjE3NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6721742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitj00",
      "html_url": "https://github.com/whitj00",
      "followers_url": "https://api.github.com/users/whitj00/followers",
      "following_url": "https://api.github.com/users/whitj00/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitj00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitj00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitj00/subscriptions",
      "organizations_url": "https://api.github.com/users/whitj00/orgs",
      "repos_url": "https://api.github.com/users/whitj00/repos",
      "events_url": "https://api.github.com/users/whitj00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitj00/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fdf638f10565b5ae41fa5a21990744497b2bcd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdf638f10565b5ae41fa5a21990744497b2bcd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fdf638f10565b5ae41fa5a21990744497b2bcd0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f958cdcfa554b12acaf95076a7b0085006dbea55",
        "filename": "src/qt/res/icons/print.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bc7fb094e81c4504a92646a04e28761a8fb865c/src/qt/res/icons/print.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bc7fb094e81c4504a92646a04e28761a8fb865c/src/qt/res/icons/print.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/print.png?ref=5bc7fb094e81c4504a92646a04e28761a8fb865c"
      },
      {
        "sha": "a2cb8f38da67540548b30eec3e0d1574630816bb",
        "filename": "src/test/buildenv.py",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bc7fb094e81c4504a92646a04e28761a8fb865c/src/test/buildenv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bc7fb094e81c4504a92646a04e28761a8fb865c/src/test/buildenv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/buildenv.py?ref=5bc7fb094e81c4504a92646a04e28761a8fb865c",
        "patch": "@@ -0,0 +1,2 @@\n+#!/usr/bin/python\n+exeext=\"\""
      }
    ]
  }
]