[
  {
    "sha": "dd44ea39bb6e1e2a244630909647ea7fbb052941",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDQ0ZWEzOWJiNmUxZTJhMjQ0NjMwOTA5NjQ3ZWE3ZmJiMDUyOTQx",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2016-12-09T17:28:22Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-01-04T19:56:17Z"
      },
      "message": "Check FRESH validity in CCoinsViewCache::BatchWrite",
      "tree": {
        "sha": "08d82a140c158aca5a47f6c35c92f3e8beaa8d5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08d82a140c158aca5a47f6c35c92f3e8beaa8d5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd44ea39bb6e1e2a244630909647ea7fbb052941",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd44ea39bb6e1e2a244630909647ea7fbb052941",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd44ea39bb6e1e2a244630909647ea7fbb052941",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd44ea39bb6e1e2a244630909647ea7fbb052941/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7dac1e5e9e887f5f6ff146e812a05bd3bf281eae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dac1e5e9e887f5f6ff146e812a05bd3bf281eae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dac1e5e9e887f5f6ff146e812a05bd3bf281eae"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 24,
      "deletions": 11
    },
    "files": [
      {
        "sha": "4d0e4bc0ad3773022896984a71eb4d5b23ec9c76",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd44ea39bb6e1e2a244630909647ea7fbb052941/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd44ea39bb6e1e2a244630909647ea7fbb052941/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=dd44ea39bb6e1e2a244630909647ea7fbb052941",
        "patch": "@@ -207,6 +207,13 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n                         entry.flags |= CCoinsCacheEntry::FRESH;\n                 }\n             } else {\n+                // Assert that the child cache entry was not marked FRESH if the\n+                // parent cache entry has unspent outputs. If this ever happens,\n+                // it means the FRESH flag was misapplied and there is a logic\n+                // error in the calling code.\n+                if ((it->second.flags & CCoinsCacheEntry::FRESH) && !itUs->second.coins.IsPruned())\n+                    throw std::logic_error(\"FRESH flag misapplied to cache entry for base transaction with spendable outputs\");\n+\n                 // Found the entry in the parent cache\n                 if ((itUs->second.flags & CCoinsCacheEntry::FRESH) && it->second.coins.IsPruned()) {\n                     // The grandparent does not have an entry, and the child is"
      },
      {
        "sha": "b25c7ccc51c0d055e7aec7b489e05cc9a5c00847",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 11,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd44ea39bb6e1e2a244630909647ea7fbb052941/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd44ea39bb6e1e2a244630909647ea7fbb052941/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=dd44ea39bb6e1e2a244630909647ea7fbb052941",
        "patch": "@@ -791,12 +791,18 @@ BOOST_AUTO_TEST_CASE(ccoins_modify_new)\n void CheckWriteCoins(CAmount parent_value, CAmount child_value, CAmount expected_value, char parent_flags, char child_flags, char expected_flags)\n {\n     SingleEntryCacheTest test(ABSENT, parent_value, parent_flags);\n-    WriteCoinsViewEntry(test.cache, child_value, child_flags);\n-    test.cache.SelfTest();\n \n     CAmount result_value;\n     char result_flags;\n-    GetCoinsMapEntry(test.cache.map(), result_value, result_flags);\n+    try {\n+        WriteCoinsViewEntry(test.cache, child_value, child_flags);\n+        test.cache.SelfTest();\n+        GetCoinsMapEntry(test.cache.map(), result_value, result_flags);\n+    } catch (std::logic_error& e) {\n+        result_value = FAIL;\n+        result_flags = NO_ENTRY;\n+    }\n+\n     BOOST_CHECK_EQUAL(result_value, expected_value);\n     BOOST_CHECK_EQUAL(result_flags, expected_flags);\n }\n@@ -840,21 +846,21 @@ BOOST_AUTO_TEST_CASE(ccoins_write)\n     CheckWriteCoins(VALUE1, ABSENT, VALUE1, DIRTY      , NO_ENTRY   , DIRTY      );\n     CheckWriteCoins(VALUE1, ABSENT, VALUE1, DIRTY|FRESH, NO_ENTRY   , DIRTY|FRESH);\n     CheckWriteCoins(VALUE1, PRUNED, PRUNED, 0          , DIRTY      , DIRTY      );\n-    CheckWriteCoins(VALUE1, PRUNED, PRUNED, 0          , DIRTY|FRESH, DIRTY      );\n+    CheckWriteCoins(VALUE1, PRUNED, FAIL  , 0          , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, PRUNED, ABSENT, FRESH      , DIRTY      , NO_ENTRY   );\n-    CheckWriteCoins(VALUE1, PRUNED, ABSENT, FRESH      , DIRTY|FRESH, NO_ENTRY   );\n+    CheckWriteCoins(VALUE1, PRUNED, FAIL  , FRESH      , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, PRUNED, PRUNED, DIRTY      , DIRTY      , DIRTY      );\n-    CheckWriteCoins(VALUE1, PRUNED, PRUNED, DIRTY      , DIRTY|FRESH, DIRTY      );\n+    CheckWriteCoins(VALUE1, PRUNED, FAIL  , DIRTY      , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, PRUNED, ABSENT, DIRTY|FRESH, DIRTY      , NO_ENTRY   );\n-    CheckWriteCoins(VALUE1, PRUNED, ABSENT, DIRTY|FRESH, DIRTY|FRESH, NO_ENTRY   );\n+    CheckWriteCoins(VALUE1, PRUNED, FAIL  , DIRTY|FRESH, DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, VALUE2, VALUE2, 0          , DIRTY      , DIRTY      );\n-    CheckWriteCoins(VALUE1, VALUE2, VALUE2, 0          , DIRTY|FRESH, DIRTY      );\n+    CheckWriteCoins(VALUE1, VALUE2, FAIL  , 0          , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, VALUE2, VALUE2, FRESH      , DIRTY      , DIRTY|FRESH);\n-    CheckWriteCoins(VALUE1, VALUE2, VALUE2, FRESH      , DIRTY|FRESH, DIRTY|FRESH);\n+    CheckWriteCoins(VALUE1, VALUE2, FAIL  , FRESH      , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, VALUE2, VALUE2, DIRTY      , DIRTY      , DIRTY      );\n-    CheckWriteCoins(VALUE1, VALUE2, VALUE2, DIRTY      , DIRTY|FRESH, DIRTY      );\n+    CheckWriteCoins(VALUE1, VALUE2, FAIL  , DIRTY      , DIRTY|FRESH, NO_ENTRY   );\n     CheckWriteCoins(VALUE1, VALUE2, VALUE2, DIRTY|FRESH, DIRTY      , DIRTY|FRESH);\n-    CheckWriteCoins(VALUE1, VALUE2, VALUE2, DIRTY|FRESH, DIRTY|FRESH, DIRTY|FRESH);\n+    CheckWriteCoins(VALUE1, VALUE2, FAIL  , DIRTY|FRESH, DIRTY|FRESH, NO_ENTRY   );\n \n     // The checks above omit cases where the child flags are not DIRTY, since\n     // they would be too repetitive (the parent cache is never updated in these"
      }
    ]
  }
]