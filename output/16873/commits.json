[
  {
    "sha": "0f34f54888f680bfbe7a29ac278636d7178a99bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjM0ZjU0ODg4ZjY4MGJmYmU3YTI5YWMyNzg2MzZkNzE3OGE5OWJi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-09-14T17:48:38Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-09-14T18:17:19Z"
      },
      "message": "rpc: fix regression in gettransaction\n\nPR 16866 renamed the 'decode' argument in gettransaction to 'verbose' to make it more consistent with other RPC calls like getrawtransaction.\n\nHowever, it seems it inadvertently overloaded the 'details' fields when 'verbose' is passed. The result is that the original 'details' fields are no longer returned, which seems to be a breaking API change.\n\nThis PR takes the simplest path to restoring the 'details' fields by renaming them from 'details' back to 'decoded', while leaving the 'verbose' argument for API consistency.\n\nIt also addresses [this comment](https://github.com/bitcoin/bitcoin/pull/16185#discussion_r320740413) to mention that the 'decoded' field is identical to decoderawtransaction.\n\nUpdate the RPC help, functional test, and release note.",
      "tree": {
        "sha": "220005265c9f1dfe46cef7d60b7cf0695b001ee6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/220005265c9f1dfe46cef7d60b7cf0695b001ee6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f34f54888f680bfbe7a29ac278636d7178a99bb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl19LtkACgkQT1chs9Dj\nkh3+RBAAk3p+FGvpa0GLK4gLKWb2d7wPsJnoi4hlc6wpMiH6DzgllBPb9MUzEvek\nyKfU7Ly31AkusaJYQU0s8+/tdfRkMWnR7M53W9rTBRHak+TEcT2qGI2MjrmjI92/\nlWJOwn3lNPWSby/frHoBGyWsTLp07js8C3Y8aDJ2zzfRUti5kNsor38bjpI7FzI0\npRGstzF/LatrDJhdLPVW7y970wrW0PComh3TVOHmOeLZ20Pz1jxvDvvFcu7dADi9\nmYWdB90F6E38swlVqZTTR9X0V7ZNCsRSNEHySMZ+FKkopdF9S6F9vkbxYybq64rE\nNx3XPBI3aoX/yMYlq/NWBeVvRhiPuHrYOHssqIGxbdP/2XYfhvTEknUTeo5X9j4b\nwgjrZ5tNb4KuSRPDMGbKaeKGEzidT9cFRBgaKvsAjFg8JElkta5x7COSGbHCwhxb\nK1Gllg1Rj6XMAvV3BE1H2NGcZ584ib8/Oj6X0v0XgN7AZG7WwyTO/3qwWMpoQ8rR\nLxEOw45808YBPvPGO4/RlEBbKhNvXdtH1z26bGAywBEKc5ZZWLwGNHyUaRBdKBhH\ngGssSNJgkay1yZO1vTqK7jSEbg+IiO6yC6OgC/vOiWC8CeUU+nM0Ia05x2acus/i\n7Pc+bzZ1OMHU6crv2XWBrIN7wG/PxeT8CyqdWR+bAyamyUm8LvY=\n=NXbg\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJ39+4SkX/jl8rG8XhVJ6HqeGwuLA2D5dyUIhV9Ys5qYCP/wEC/hNuD6nTm8\n25xwAtVlb9cI8QRdfS7b8AijgJenrjuY0gCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQYU1u1fQAxXLiUJOU\nZCju6AjxBF19LtvwCIGnsLOmscKzAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQgM/LEWF7B8QTESWzXLm1SwjxBF19LtrwCGiw\n/nzB+Mc9AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDj7hf5YnOXzkoUHdbNUvsdCPEEXX0u2/AI8X42h+Wq8+wAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 220005265c9f1dfe46cef7d60b7cf0695b001ee6\nparent 4bfef0daeb9351c200b5bd09e60596a29b4d3523\nauthor Jon Atack <jon@atack.com> 1568483318 +0200\ncommitter Jon Atack <jon@atack.com> 1568485039 +0200\n\nrpc: fix regression in gettransaction\n\nPR 16866 renamed the 'decode' argument in gettransaction to 'verbose' to make it more consistent with other RPC calls like getrawtransaction.\n\nHowever, it seems it inadvertently overloaded the 'details' fields when 'verbose' is passed. The result is that the original 'details' fields are no longer returned, which seems to be a breaking API change.\n\nThis PR takes the simplest path to restoring the 'details' fields by renaming them from 'details' back to 'decoded', while leaving the 'verbose' argument for API consistency.\n\nIt also addresses [this comment](https://github.com/bitcoin/bitcoin/pull/16185#discussion_r320740413) to mention that the 'decoded' field is identical to decoderawtransaction.\n\nUpdate the RPC help, functional test, and release note.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f34f54888f680bfbe7a29ac278636d7178a99bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f34f54888f680bfbe7a29ac278636d7178a99bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f34f54888f680bfbe7a29ac278636d7178a99bb/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bfef0daeb9351c200b5bd09e60596a29b4d3523",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bfef0daeb9351c200b5bd09e60596a29b4d3523",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bfef0daeb9351c200b5bd09e60596a29b4d3523"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 15,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2567ebea4027076ff6d082db0c6b651532aa2e04",
        "filename": "doc/release-notes-16185.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f34f54888f680bfbe7a29ac278636d7178a99bb/doc/release-notes-16185.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f34f54888f680bfbe7a29ac278636d7178a99bb/doc/release-notes-16185.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16185.md?ref=0f34f54888f680bfbe7a29ac278636d7178a99bb",
        "patch": "@@ -1,3 +1,6 @@\n RPC changes\n -----------\n-The `gettransaction` RPC now accepts a third (boolean) argument `verbose`. If set to `true`, a new `details` field will be added to the response containing additional transaction details.\n+The `gettransaction` RPC now accepts a third (boolean) argument `verbose`. If\n+set to `true`, a new `decoded` field will be added to the response containing\n+the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n+or RPC `getrawtransaction` when `verbose` is passed."
      },
      {
        "sha": "216205ed613095e3f1800b6b741caeba249075cb",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f34f54888f680bfbe7a29ac278636d7178a99bb/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f34f54888f680bfbe7a29ac278636d7178a99bb/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0f34f54888f680bfbe7a29ac278636d7178a99bb",
        "patch": "@@ -1648,8 +1648,10 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n                 \"\\nGet detailed information about in-wallet transaction <txid>\\n\",\n                 {\n                     {\"txid\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction id\"},\n-                    {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Whether to include watch-only addresses in balance calculation and details[]\"},\n-                    {\"verbose\", RPCArg::Type::BOOL, /* default */ \"false\", \"Whether to add a field with additional transaction details\"},\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\",\n+                            \"Whether to include watch-only addresses in balance calculation and details[]\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, /* default */ \"false\",\n+                            \"Whether to include a `decoded` field containing the decoded transaction (equivalent to RPC decoderawtransaction)\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n@@ -1685,7 +1687,8 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n             \"    ,...\\n\"\n             \"  ],\\n\"\n             \"  \\\"hex\\\" : \\\"data\\\"         (string) Raw data for transaction\\n\"\n-            \"  \\\"details\\\" : transaction         (json object) Optional, additional transaction details. This object contains the same transaction details as the `getrawtransaction` RPC method\\n\"\n+            \"  \\\"decoded\\\" : transaction         (json object) Optional, the decoded transaction (only present when `verbose` is passed), equivalent to the\\n\"\n+            \"                                                RPC decoderawtransaction method, or the RPC getrawtransaction method when `verbose` is passed.\\n\"\n             \"}\\n\"\n                 },\n                 RPCExamples{\n@@ -1739,9 +1742,9 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n     entry.pushKV(\"hex\", strHex);\n \n     if (verbose) {\n-        UniValue details(UniValue::VOBJ);\n-        TxToUniv(*wtx.tx, uint256(), details, false);\n-        entry.pushKV(\"details\", details);\n+        UniValue decoded(UniValue::VOBJ);\n+        TxToUniv(*wtx.tx, uint256(), decoded, false);\n+        entry.pushKV(\"decoded\", decoded);\n     }\n \n     return entry;"
      },
      {
        "sha": "40ad9081ae60dc2faa077ba78c8d2781c37f8ee0",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f34f54888f680bfbe7a29ac278636d7178a99bb/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f34f54888f680bfbe7a29ac278636d7178a99bb/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=0f34f54888f680bfbe7a29ac278636d7178a99bb",
        "patch": "@@ -499,10 +499,10 @@ def run_test(self):\n         self.nodes[0].setlabel(change, 'foobar')\n         assert_equal(self.nodes[0].getaddressinfo(change)['ischange'], False)\n \n-        # Test \"verbose\" field value in gettransaction response\n+        # Test \"decoded\" field value in gettransaction `verbose` response.\n         self.log.info(\"Testing verbose gettransaction...\")\n         tx = self.nodes[0].gettransaction(txid=txid, verbose=True)\n-        assert_equal(tx[\"details\"], self.nodes[0].decoderawtransaction(tx[\"hex\"]))\n+        assert_equal(tx[\"decoded\"], self.nodes[0].decoderawtransaction(tx[\"hex\"]))\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "1b41c2c8a126ef4be183e1d800a17d85cab8837b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYjQxYzJjOGExMjZlZjRiZTE4M2UxZDgwMGExN2Q4NWNhYjg4Mzdi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-09-15T11:27:15Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-09-15T16:53:16Z"
      },
      "message": "test: improve gettransaction test coverage\n\n- Test gettransaction response without verbose, with verbose=False, and with verbose=True.\n\n- In each case, test presence of expected fields in the output, including absence of the \"decoded\" field when `verbose` is not passed or false.\n\n- Test that the \"details\" field contains the expected receive vout in each case.",
      "tree": {
        "sha": "f340c5e3053828d5f4d0f74d9667a12b4bd191f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f340c5e3053828d5f4d0f74d9667a12b4bd191f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b41c2c8a126ef4be183e1d800a17d85cab8837b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl1+bKoACgkQT1chs9Dj\nkh3e/BAAwjgxDivF18UUH1QDlvuOTJF0LXdP2tF3QuItlUv+9/cysyvrCGcko5Nk\n39WmXgVDovGT7KoG/33qlZt59CvX60AWiXrzlkd7gNmJP/onZnQkJO3SEdhZB5AB\ntv8GaKBuzLzrULrmTctv2gEFaH7gVm8uJ40q/lOghtI5ADVuBy6Lt3uZYCV8hRmj\nHwR0od0eRpqreySsrIg1H2ENzbeFaP6lr0u1+dkHqeE+sEvuqMdyQU711RYdGkos\n5p+pwT2gOdIXYhnrJTkrI3TWe/7XOsWJwJ8O4iKkwtRM24ifhGCC/6njxf4XyEZM\ngdy49oqt760t3YYzXOZmUD2qKR9MoaCo5OoNRtE5txIk1Z4dXDxpRs/g6WU6JPCZ\nEZqMx70+AHyoz2qBYx9xlylzZklbvd7OP20Akz6EYP8t8UEaEpxm/ERVMx26hZX0\nDcJ4XQ+AyISXe3L7bVkSnd/BK59pDdJDu/Dk8RXL2WdYO5yvltuQduJT66eBLbab\nHaXMrCvzijYJXD24UBuyf1TE1dnWG5OT28OFfId7Dh5QKaPmayaE7ggvbMAvbBjz\nS6GEfH4jR5Ock1RvECjIYOSfnw9YMctnJp1WpPBQK6jTDHZqT0Zvm1sNobafMXYl\nsWVVTMpvfago+swTRCMbTXDDivXcyWR2NHDs3X6xfDyx4OeaYME=\n=2WVt\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICvkeQF1L6HsMOjPqdYgYZvnaewzGMSdZ0jW0DLH1SkeCP/wECY6WI61yVI3\n6MyHMqEc4EII8QRdfmyr8Agkqh85X++7vACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wECd3ow2LU7QManKHW9Sz\nD50I8QRdfmys8AgxOz4Kc/0e5gCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEEiWSNo+Rpp6i3y/fEe3LPEI8QRdfmyr\n8AiN86nuyzk2zwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQVvVGTYFfHG+P/CyOMGpZAgjxBF1+bKzwCCinuqTwkyA6AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree f340c5e3053828d5f4d0f74d9667a12b4bd191f0\nparent 0f34f54888f680bfbe7a29ac278636d7178a99bb\nauthor Jon Atack <jon@atack.com> 1568546835 +0200\ncommitter Jon Atack <jon@atack.com> 1568566396 +0200\n\ntest: improve gettransaction test coverage\n\n- Test gettransaction response without verbose, with verbose=False, and with verbose=True.\n\n- In each case, test presence of expected fields in the output, including absence of the \"decoded\" field when `verbose` is not passed or false.\n\n- Test that the \"details\" field contains the expected receive vout in each case.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b41c2c8a126ef4be183e1d800a17d85cab8837b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1b41c2c8a126ef4be183e1d800a17d85cab8837b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b41c2c8a126ef4be183e1d800a17d85cab8837b/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f34f54888f680bfbe7a29ac278636d7178a99bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f34f54888f680bfbe7a29ac278636d7178a99bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f34f54888f680bfbe7a29ac278636d7178a99bb"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 28,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ce04110240e6da032b6346492ac01e14214752a0",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 28,
        "deletions": 3,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b41c2c8a126ef4be183e1d800a17d85cab8837b/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b41c2c8a126ef4be183e1d800a17d85cab8837b/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=1b41c2c8a126ef4be183e1d800a17d85cab8837b",
        "patch": "@@ -499,10 +499,35 @@ def run_test(self):\n         self.nodes[0].setlabel(change, 'foobar')\n         assert_equal(self.nodes[0].getaddressinfo(change)['ischange'], False)\n \n-        # Test \"decoded\" field value in gettransaction `verbose` response.\n-        self.log.info(\"Testing verbose gettransaction...\")\n+        # Test gettransaction response with different arguments.\n+        self.log.info(\"Testing gettransaction response with different arguments...\")\n+        self.nodes[0].setlabel(change, 'baz')\n+        baz = self.nodes[0].listtransactions(label=\"baz\", count=1)[0]\n+        expected_receive_vout = {\"label\":    \"baz\",\n+                                 \"address\":  baz[\"address\"],\n+                                 \"amount\":   baz[\"amount\"],\n+                                 \"category\": baz[\"category\"],\n+                                 \"vout\":     baz[\"vout\"]}\n+        expected_fields = frozenset({'amount', 'bip125-replaceable', 'confirmations', 'details', 'fee',\n+                                     'hex', 'time', 'timereceived', 'trusted', 'txid', 'walletconflicts'})\n+        verbose_field = \"decoded\"\n+        expected_verbose_fields = expected_fields | {verbose_field}\n+\n+        self.log.debug(\"Testing gettransaction response without verbose\")\n+        tx = self.nodes[0].gettransaction(txid=txid)\n+        assert_equal(set([*tx]), expected_fields)\n+        assert_array_result(tx[\"details\"], {\"category\": \"receive\"}, expected_receive_vout)\n+\n+        self.log.debug(\"Testing gettransaction response with verbose set to False\")\n+        tx = self.nodes[0].gettransaction(txid=txid, verbose=False)\n+        assert_equal(set([*tx]), expected_fields)\n+        assert_array_result(tx[\"details\"], {\"category\": \"receive\"}, expected_receive_vout)\n+\n+        self.log.debug(\"Testing gettransaction response with verbose set to True\")\n         tx = self.nodes[0].gettransaction(txid=txid, verbose=True)\n-        assert_equal(tx[\"decoded\"], self.nodes[0].decoderawtransaction(tx[\"hex\"]))\n+        assert_equal(set([*tx]), expected_verbose_fields)\n+        assert_array_result(tx[\"details\"], {\"category\": \"receive\"}, expected_receive_vout)\n+        assert_equal(tx[verbose_field], self.nodes[0].decoderawtransaction(tx[\"hex\"]))\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]