[
  {
    "sha": "43568782c23185a0599a6e60d61db4716da1cda1",
    "node_id": "C_kwDOABII59oAKDQzNTY4NzgyYzIzMTg1YTA1OTlhNmU2MGQ2MWRiNDcxNmRhMWNkYTE",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2021-10-05T13:17:22Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2021-10-05T22:55:34Z"
      },
      "message": "External input fund support cleanups\n\nSynchronize error checking for external inputs\nRename external output Select to SelectExternal\nConst FundTransaction variables",
      "tree": {
        "sha": "04deda211ec05b5b160aaf1169a4fcfd0a147830",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04deda211ec05b5b160aaf1169a4fcfd0a147830"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43568782c23185a0599a6e60d61db4716da1cda1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43568782c23185a0599a6e60d61db4716da1cda1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43568782c23185a0599a6e60d61db4716da1cda1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43568782c23185a0599a6e60d61db4716da1cda1/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "edd81e590fdf7199d79f61cf5a6cf1fbb706d4c8",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43568782c23185a0599a6e60d61db4716da1cda1/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43568782c23185a0599a6e60d61db4716da1cda1/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=43568782c23185a0599a6e60d61db4716da1cda1",
        "patch": "@@ -93,7 +93,7 @@ class CCoinControl\n         setSelected.insert(output);\n     }\n \n-    void Select(const COutPoint& outpoint, const CTxOut& txout)\n+    void SelectExternal(const COutPoint& outpoint, const CTxOut& txout)\n     {\n         setSelected.insert(outpoint);\n         m_external_txouts.emplace(outpoint, txout);"
      },
      {
        "sha": "7edf286ac093e33d1775f6b87ddda94b6e99816f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43568782c23185a0599a6e60d61db4716da1cda1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43568782c23185a0599a6e60d61db4716da1cda1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=43568782c23185a0599a6e60d61db4716da1cda1",
        "patch": "@@ -3292,15 +3292,15 @@ void FundTransaction(CWallet& wallet, CMutableTransaction& tx, CAmount& fee_out,\n     }\n \n     if (options.exists(\"solving_data\")) {\n-        UniValue solving_data = options[\"solving_data\"].get_obj();\n+        const UniValue solving_data = options[\"solving_data\"].get_obj();\n         if (solving_data.exists(\"pubkeys\")) {\n             for (const UniValue& pk_univ : solving_data[\"pubkeys\"].get_array().getValues()) {\n                 const std::string& pk_str = pk_univ.get_str();\n                 if (!IsHex(pk_str)) {\n                     throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"'%s' is not hex\", pk_str));\n                 }\n                 const std::vector<unsigned char> data(ParseHex(pk_str));\n-                CPubKey pubkey(data.begin(), data.end());\n+                const CPubKey pubkey(data.begin(), data.end());\n                 if (!pubkey.IsFullyValid()) {\n                     throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"'%s' is not a valid public key\", pk_str));\n                 }\n@@ -3365,7 +3365,7 @@ void FundTransaction(CWallet& wallet, CMutableTransaction& tx, CAmount& fee_out,\n     wallet.chain().findCoins(coins);\n     for (const auto& coin : coins) {\n         if (!coin.second.out.IsNull()) {\n-            coinControl.Select(coin.first, coin.second.out);\n+            coinControl.SelectExternal(coin.first, coin.second.out);\n         }\n     }\n "
      },
      {
        "sha": "5470177440b13a82c64c39de5398ef0e7fd35e02",
        "filename": "src/wallet/spend.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43568782c23185a0599a6e60d61db4716da1cda1/src/wallet/spend.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43568782c23185a0599a6e60d61db4716da1cda1/src/wallet/spend.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/spend.cpp?ref=43568782c23185a0599a6e60d61db4716da1cda1",
        "patch": "@@ -475,7 +475,7 @@ bool SelectCoins(const CWallet& wallet, const std::vector<COutput>& vAvailableCo\n \n         CInputCoin coin(outpoint, txout, input_bytes);\n         nValueFromPresetInputs += coin.txout.nValue;\n-        if (coin.m_input_bytes <= 0) {\n+        if (coin.m_input_bytes == -1) {\n             return false; // Not solvable, can't estimate size for fee\n         }\n         coin.effective_value = coin.txout.nValue - coin_selection_params.m_effective_feerate.GetFee(coin.m_input_bytes);\n@@ -814,7 +814,7 @@ static bool CreateTransactionInternal(\n     // Calculate the transaction fee\n     TxSize tx_sizes = CalculateMaximumSignedTxSize(CTransaction(txNew), &wallet, &coin_control);\n     int nBytes = tx_sizes.vsize;\n-    if (nBytes < 0) {\n+    if (nBytes == -1) {\n         error = _(\"Missing solving data for estimating transaction size\");\n         return false;\n     }"
      }
    ]
  }
]