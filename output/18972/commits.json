[
  {
    "sha": "2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2JhZmVkNGI0ZTlmMGIyZjdmOTJjMjY4MzMwMmNlMGU3OTBmMjEx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-11-15T05:36:24Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-11-10T23:49:22Z"
      },
      "message": "net: Add blockfilters white{bind,list} permission flag",
      "tree": {
        "sha": "3a0c25e5cf720f10b6fb47b6812cc999c071e363",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a0c25e5cf720f10b6fb47b6812cc999c071e363"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8dd34e918cd80db215df8937aaf6bb1552fcd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8dd34e918cd80db215df8937aaf6bb1552fcd9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8dd34e918cd80db215df8937aaf6bb1552fcd9"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 35,
      "deletions": 13
    },
    "files": [
      {
        "sha": "19b6c42402ed103dd71d2705e28a8010b7c91266",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 12,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
        "patch": "@@ -1977,18 +1977,30 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         StartTorControl(bind_addr);\n     }\n \n-    for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n-        NetWhitebindPermissions whitebind;\n-        bilingual_str error;\n-        if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n-        connOptions.vWhiteBinds.push_back(whitebind);\n-    }\n-\n-    for (const auto& net : args.GetArgs(\"-whitelist\")) {\n-        NetWhitelistPermissions subnet;\n-        bilingual_str error;\n-        if (!NetWhitelistPermissions::TryParse(net, subnet, error)) return InitError(error);\n-        connOptions.vWhitelistedRange.push_back(subnet);\n+    {\n+        NetPermissionFlags all_permission_flags = PF_NONE;\n+\n+        for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n+            NetWhitebindPermissions whitebind;\n+            bilingual_str error;\n+            if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n+            NetPermissions::AddFlag(all_permission_flags, whitebind.m_flags);\n+            connOptions.vWhiteBinds.push_back(whitebind);\n+        }\n+\n+        for (const auto& net : args.GetArgs(\"-whitelist\")) {\n+            NetWhitelistPermissions subnet;\n+            bilingual_str error;\n+            if (!NetWhitelistPermissions::TryParse(net, subnet, error)) return InitError(error);\n+            NetPermissions::AddFlag(all_permission_flags, subnet.m_flags);\n+            connOptions.vWhitelistedRange.push_back(subnet);\n+        }\n+\n+        if (NetPermissions::HasFlag(all_permission_flags, PF_BLOCKFILTERS_EXPLICIT)) {\n+            if (g_enabled_filter_types.count(BlockFilterType::BASIC) != 1) {\n+                return InitError(_(\"Cannot grant blockfilters permission without -blockfilterindex.\"));\n+            }\n+        }\n     }\n \n     connOptions.vSeedNodes = args.GetArgs(\"-seednode\");"
      },
      {
        "sha": "cd20bffc3594bff4541d058d94c96cf2da3be138",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
        "patch": "@@ -1135,6 +1135,9 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     if (NetPermissions::HasFlag(permissionFlags, PF_BLOOMFILTER)) {\n         nodeServices = static_cast<ServiceFlags>(nodeServices | NODE_BLOOM);\n     }\n+    if (NetPermissions::HasFlag(permissionFlags, PF_BLOCKFILTERS)) {\n+        nodeServices = static_cast<ServiceFlags>(nodeServices | NODE_COMPACT_FILTERS);\n+    }\n \n     const bool inbound_onion = std::find(m_onion_binds.begin(), m_onion_binds.end(), addr_bind) != m_onion_binds.end();\n     CNode* pnode = new CNode(id, nodeServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", ConnectionType::INBOUND, inbound_onion);"
      },
      {
        "sha": "427e0108ca19230fade692f3121efd9d3fa9fc30",
        "filename": "src/net_permissions.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/net_permissions.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/net_permissions.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.cpp?ref=2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
        "patch": "@@ -10,6 +10,7 @@\n \n const std::vector<std::string> NET_PERMISSIONS_DOC{\n     \"bloomfilter (allow requesting BIP37 filtered blocks and transactions)\",\n+    \"blockfilters (serve compact block filters to peers per BIP157)\"\n     \"noban (do not ban for misbehavior; implies download)\",\n     \"forcerelay (relay transactions that are already in the mempool; implies relay)\",\n     \"relay (relay even in -blocksonly mode, and unlimited transaction announcements)\",\n@@ -45,6 +46,7 @@ bool TryParsePermissionFlags(const std::string str, NetPermissionFlags& output,\n             if (commaSeparator != std::string::npos) readen++; // We read \",\"\n \n             if (permission == \"bloomfilter\" || permission == \"bloom\") NetPermissions::AddFlag(flags, PF_BLOOMFILTER);\n+            else if (permission == \"blockfilters\" || permission == \"compactfilters\" || permission == \"cfilters\") NetPermissions::AddFlag(flags, PF_BLOCKFILTERS_EXPLICIT);\n             else if (permission == \"noban\") NetPermissions::AddFlag(flags, PF_NOBAN);\n             else if (permission == \"forcerelay\") NetPermissions::AddFlag(flags, PF_FORCERELAY);\n             else if (permission == \"mempool\") NetPermissions::AddFlag(flags, PF_MEMPOOL);"
      },
      {
        "sha": "f7f30b26a6ec27d74075d50a515fb8d71c712838",
        "filename": "src/net_permissions.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/net_permissions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211/src/net_permissions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.h?ref=2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
        "patch": "@@ -33,9 +33,14 @@ enum NetPermissionFlags {\n     // Can request addrs without hitting a privacy-preserving cache\n     PF_ADDR = (1U << 7),\n \n+    // Can query compact filters even if -peerblockfilters is false\n+    PF_BLOCKFILTERS = (1U << 8),\n+    // Used to avoid an error when PF_ALL is used to set PF_CFILTERS\n+    PF_BLOCKFILTERS_EXPLICIT = PF_BLOCKFILTERS | (1U << 9),\n+\n     // True if the user did not specifically set fine grained permissions\n     PF_ISIMPLICIT = (1U << 31),\n-    PF_ALL = PF_BLOOMFILTER | PF_FORCERELAY | PF_RELAY | PF_NOBAN | PF_MEMPOOL | PF_DOWNLOAD | PF_ADDR,\n+    PF_ALL = PF_BLOOMFILTER | PF_FORCERELAY | PF_RELAY | PF_NOBAN | PF_MEMPOOL | PF_DOWNLOAD | PF_ADDR | PF_BLOCKFILTERS,\n };\n \n class NetPermissions"
      }
    ]
  },
  {
    "sha": "bbab64b076c796d056972d6de8ac4e0c6d2afe83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmFiNjRiMDc2Yzc5NmQwNTY5NzJkNmRlOGFjNGUwYzZkMmFmZTgz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-06-07T22:48:26Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-11-10T23:49:23Z"
      },
      "message": "Include \"blockfilters\" in NetPermissions::ToStrings as appropriate",
      "tree": {
        "sha": "918948d9134127d98b0e58432812f56f409470a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/918948d9134127d98b0e58432812f56f409470a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbab64b076c796d056972d6de8ac4e0c6d2afe83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbab64b076c796d056972d6de8ac4e0c6d2afe83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbab64b076c796d056972d6de8ac4e0c6d2afe83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbab64b076c796d056972d6de8ac4e0c6d2afe83/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cbafed4b4e9f0b2f7f92c2683302ce0e790f211"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f4e170b0beddd0d4d51c6931ae5fa20d41b8baee",
        "filename": "src/net_permissions.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbab64b076c796d056972d6de8ac4e0c6d2afe83/src/net_permissions.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbab64b076c796d056972d6de8ac4e0c6d2afe83/src/net_permissions.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.cpp?ref=bbab64b076c796d056972d6de8ac4e0c6d2afe83",
        "patch": "@@ -73,6 +73,7 @@ bool TryParsePermissionFlags(const std::string str, NetPermissionFlags& output,\n std::vector<std::string> NetPermissions::ToStrings(NetPermissionFlags flags)\n {\n     std::vector<std::string> strings;\n+    if (NetPermissions::HasFlag(flags, PF_BLOCKFILTERS)) strings.push_back(\"blockfilters\");\n     if (NetPermissions::HasFlag(flags, PF_BLOOMFILTER)) strings.push_back(\"bloomfilter\");\n     if (NetPermissions::HasFlag(flags, PF_NOBAN)) strings.push_back(\"noban\");\n     if (NetPermissions::HasFlag(flags, PF_FORCERELAY)) strings.push_back(\"forcerelay\");"
      },
      {
        "sha": "7a81ea6d2771527bff972b4fa212616a07b06da5",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbab64b076c796d056972d6de8ac4e0c6d2afe83/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbab64b076c796d056972d6de8ac4e0c6d2afe83/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=bbab64b076c796d056972d6de8ac4e0c6d2afe83",
        "patch": "@@ -418,7 +418,8 @@ BOOST_AUTO_TEST_CASE(netpermissions_test)\n     BOOST_CHECK(NetWhitelistPermissions::TryParse(\"bloom,forcerelay,noban,relay,mempool@1.2.3.4/32\", whitelistPermissions, error));\n \n     const auto strings = NetPermissions::ToStrings(PF_ALL);\n-    BOOST_CHECK_EQUAL(strings.size(), 7U);\n+    BOOST_CHECK_EQUAL(strings.size(), 8U);\n+    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"blockfilters\") != strings.end());\n     BOOST_CHECK(std::find(strings.begin(), strings.end(), \"bloomfilter\") != strings.end());\n     BOOST_CHECK(std::find(strings.begin(), strings.end(), \"forcerelay\") != strings.end());\n     BOOST_CHECK(std::find(strings.begin(), strings.end(), \"relay\") != strings.end());"
      },
      {
        "sha": "c04d3510f7f74910f8860091365df6d3a8494087",
        "filename": "test/functional/p2p_permissions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbab64b076c796d056972d6de8ac4e0c6d2afe83/test/functional/p2p_permissions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbab64b076c796d056972d6de8ac4e0c6d2afe83/test/functional/p2p_permissions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_permissions.py?ref=bbab64b076c796d056972d6de8ac4e0c6d2afe83",
        "patch": "@@ -107,7 +107,7 @@ def run_test(self):\n         self.checkpermission(\n             # all permission added\n             [\"-whitelist=all@127.0.0.1\"],\n-            [\"forcerelay\", \"noban\", \"mempool\", \"bloomfilter\", \"relay\", \"download\", \"addr\"],\n+            [\"blockfilters\", \"forcerelay\", \"noban\", \"mempool\", \"bloomfilter\", \"relay\", \"download\", \"addr\"],\n             False)\n \n         self.stop_node(1)"
      }
    ]
  },
  {
    "sha": "339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzlmZTE4OWViOTFlYTU3YjI0YWM0MjZhYjliMTVhY2I3YWE3NmJi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-06-07T22:52:06Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-11-10T23:49:23Z"
      },
      "message": "Refactor to avoid conflicts in new p2p permissions",
      "tree": {
        "sha": "49c695677689981288b15bb4170e9d52417093e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49c695677689981288b15bb4170e9d52417093e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbab64b076c796d056972d6de8ac4e0c6d2afe83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbab64b076c796d056972d6de8ac4e0c6d2afe83",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbab64b076c796d056972d6de8ac4e0c6d2afe83"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 25,
      "deletions": 10
    },
    "files": [
      {
        "sha": "23b48426c36a2a60e15840d99ea17fc8cf7234e1",
        "filename": "src/net_permissions.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/src/net_permissions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/src/net_permissions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.h?ref=339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
        "patch": "@@ -15,6 +15,7 @@ struct bilingual_str;\n extern const std::vector<std::string> NET_PERMISSIONS_DOC;\n \n enum NetPermissionFlags {\n+    // NOTE: When adding here, be sure to update net_permissions.cpp's NetPermissions::ToStrings too\n     PF_NONE = 0,\n     // Can query bloomfilter even if -peerbloomfilters is false\n     PF_BLOOMFILTER = (1U << 1),"
      },
      {
        "sha": "9b7b0a03fc4cb3ac97f14d30042d4065af7757f5",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
        "patch": "@@ -418,15 +418,20 @@ BOOST_AUTO_TEST_CASE(netpermissions_test)\n     BOOST_CHECK(NetWhitelistPermissions::TryParse(\"bloom,forcerelay,noban,relay,mempool@1.2.3.4/32\", whitelistPermissions, error));\n \n     const auto strings = NetPermissions::ToStrings(PF_ALL);\n-    BOOST_CHECK_EQUAL(strings.size(), 8U);\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"blockfilters\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"bloomfilter\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"forcerelay\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"relay\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"noban\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"mempool\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"download\") != strings.end());\n-    BOOST_CHECK(std::find(strings.begin(), strings.end(), \"addr\") != strings.end());\n+    const std::vector<std::string> expected_strings{\n+        \"blockfilters\",\n+        \"bloomfilter\",\n+        \"forcerelay\",\n+        \"relay\",\n+        \"noban\",\n+        \"mempool\",\n+        \"download\",\n+        \"addr\",\n+    };\n+    BOOST_CHECK_EQUAL(strings.size(), expected_strings.size());\n+    for (const auto& expected : expected_strings) {\n+        BOOST_CHECK(std::find(strings.begin(), strings.end(), expected) != strings.end());\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(netbase_dont_resolve_strings_with_embedded_nul_characters)"
      },
      {
        "sha": "2e9d5a6cf642645229488fa54e9e435fe6dd59a6",
        "filename": "test/functional/p2p_permissions.py",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/test/functional/p2p_permissions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/339fe189eb91ea57b24ac426ab9b15acb7aa76bb/test/functional/p2p_permissions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_permissions.py?ref=339fe189eb91ea57b24ac426ab9b15acb7aa76bb",
        "patch": "@@ -107,7 +107,16 @@ def run_test(self):\n         self.checkpermission(\n             # all permission added\n             [\"-whitelist=all@127.0.0.1\"],\n-            [\"blockfilters\", \"forcerelay\", \"noban\", \"mempool\", \"bloomfilter\", \"relay\", \"download\", \"addr\"],\n+            [\n+                \"blockfilters\",\n+                \"forcerelay\",\n+                \"noban\",\n+                \"mempool\",\n+                \"bloomfilter\",\n+                \"relay\",\n+                \"download\",\n+                \"addr\",\n+            ],\n             False)\n \n         self.stop_node(1)"
      }
    ]
  }
]