[
  {
    "sha": "c348a5fef310234b39dceb48f5f92adffa55f107",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzQ4YTVmZWYzMTAyMzRiMzlkY2ViNDhmNWY5MmFkZmZhNTVmMTA3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-04-02T14:25:58Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-04-02T14:29:31Z"
      },
      "message": "validation: Check absence of locks at compile-time (LOCKS_EXCLUDED) in addition to the current run-time checking (AssertLockNotHeld)",
      "tree": {
        "sha": "99a3144af117581bdd725f20982e08f57d29c185",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99a3144af117581bdd725f20982e08f57d29c185"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c348a5fef310234b39dceb48f5f92adffa55f107",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c348a5fef310234b39dceb48f5f92adffa55f107",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c348a5fef310234b39dceb48f5f92adffa55f107",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c348a5fef310234b39dceb48f5f92adffa55f107/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a2a9b5b0603c1206e4419ffd0fd0d4939813fc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a2a9b5b0603c1206e4419ffd0fd0d4939813fc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a2a9b5b0603c1206e4419ffd0fd0d4939813fc2"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "407a061af7825e13f6ccbf133fb7d16e13a1826b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c348a5fef310234b39dceb48f5f92adffa55f107/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c348a5fef310234b39dceb48f5f92adffa55f107/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c348a5fef310234b39dceb48f5f92adffa55f107",
        "patch": "@@ -159,7 +159,7 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock);\n+    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock) LOCKS_EXCLUDED(cs_main);\n \n     /**\n      * If a block header hasn't already been seen, call CheckBlockHeader on it, ensure\n@@ -2624,7 +2624,7 @@ static void NotifyHeaderTip() LOCKS_EXCLUDED(cs_main) {\n     }\n }\n \n-static void LimitValidationInterfaceQueue() {\n+static void LimitValidationInterfaceQueue() LOCKS_EXCLUDED(cs_main) {\n     AssertLockNotHeld(cs_main);\n \n     if (GetMainSignals().CallbacksPending() > 10) {"
      }
    ]
  }
]