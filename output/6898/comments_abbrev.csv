morcos,2015-11-03T16:27:42Z,"OK, this has been rewritten to use `CTxMemPoolEntry::GetPriority` for the priority sort.\nThis will make it very fast even when maintaining a priority space in the block.  So the commit changing the default blockprioritysize has been removed.  \n\nOf course until #6357 is merged or some other decision is taken regarding priority, it will not sort by an accurate measure of priority.\n",https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-153405578,153405578,
morcos,2015-11-12T14:02:19Z,I addressed @luke-jr 's comment about changing the method of failure return.  I still modified it to give some extra state info.   That commit and other fixes will get squashed.\n\nAmong the remaining outstanding items is to fix the constructor for CTxMemPoolEntry to not have any default arguments.  It would be nice to know a merge order since this will conflict with #6357 and #6915 and involves t,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-156109463,156109463,
morcos,2015-11-18T04:53:15Z,"I rebased this and squashed fixes for comments so far.\n\nI rebased it on top of #7008, because I needed to pick some path forward on how priority would be addressed in this PR.  The first 3 commits are therefore part of that pull and not this one.  If we decide to merge #6357 as well, then it should be an easy change.\n\nI will continue testing, but I don't have any other changes planned right no",https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-157604418,157604418,
morcos,2015-11-18T20:10:58Z,Thanks @sdaftuar for finding a bug in the way I was doing PrioritiseTransaction.   There should probably be RPC tests for those functions.\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-157847565,157847565,
morcos,2015-11-19T18:33:26Z,Apologies for all the churn.  Squashed again and rebased off a slightly modified index @sdaftuar created for #7062.   This introduces one more minor difference from the original code in that fee rates are compared as doubles now.  \n\nIf I correct for these differences:\n- using a score index which compares fee rates not doubles\n- make the original code use the hash tie breakers\n- search up 5000,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-158148816,158148816,
sdaftuar,2015-11-24T13:43:54Z,Addressed @jtimon's nit.\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-159270773,159270773,
btcdrak,2015-11-29T08:20:41Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160391129,160391129,
jameshilliard,2015-11-29T10:00:52Z,TestBlockValidity should probably be done in a background thread so that it does not delay GBT since TestBlockValidity is just a sanity check.\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160395642,160395642,
morcos,2015-11-30T13:27:25Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160626443,160626443,
gmaxwell,2015-12-01T10:09:27Z,Concept ACK. Some tested-ack. Will test more now.\n\nEdit: Hm. needs some not totally trivial rebasing.\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160923054,160923054,
jgarzik,2015-12-01T12:06:06Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160948386,160948386,
laanwj,2015-12-01T12:34:56Z,Needs rebase again...\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160955353,160955353,
morcos,2015-12-01T15:00:03Z,"that was an expected merge conflict, will rebase shortly\n\n@laanwj my warning about not having mined, was just a literal warning because i don't have sufficient hashpower to mine on mainnet.  I have created 1000s upon 1000s of block templates that all pass TestBlockValidity both in code running this pull live for the past 2 weeks (and prior iterations for weeks before that) and in historical simu",https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-160991225,160991225,
sipa,2015-12-01T16:26:44Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-161021659,161021659,
morcos,2015-12-01T17:10:56Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-161035857,161035857,
luke-jr,2015-12-01T20:18:30Z,This was not ready for merging. It needs #6357 first.\n,https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-161083652,161083652,
laanwj,2015-12-02T09:26:08Z,"> This was not ready for merging. It needs #6357 first.\n\n#7008, which took the place of #6537 was merged\n",https://github.com/bitcoin/bitcoin/pull/6898#issuecomment-161233018,161233018,
luke-jr,2015-10-31T18:30:00Z,NACK defaulting nSigOps to 0 when we depend on it being accurate.\n,https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43574695,43574695,src/txmempool.h
luke-jr,2015-10-31T18:30:55Z,Why change exception to returning NULL here? IMO this should be an independent PR.\n,https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43574702,43574702,src/miner.cpp
morcos,2015-11-01T01:22:16Z,"ok i agree, it makes more sense to default it high.\n",https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43577964,43577964,src/txmempool.h
luke-jr,2015-11-01T01:38:28Z,It does not make sense to default it period. Note the exact sigop count is part of the GBT response.\n,https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43578050,43578050,src/txmempool.h
morcos,2015-11-03T16:16:02Z,"OK agreed.  The default is just for the tests, I think for now it makes sense to remove all defaults from the constructor and just make the tests fill them in.  Unfortunately there are 2 other pulls open which also add arguments to the constructor and require changing the tests.  I'm going to hold off updating the tests in this pull until we're a bit closer assuming those might be merged first.\n",https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43768315,43768315,src/txmempool.h
morcos,2015-11-03T16:17:28Z,"The idea was this is now more likely to happen, and it seemed to meet that the JSON error from GetBlockTemplate would still be sufficient notification, and it would be better to not bring the node down.  However, I'm happy to leave the existing behavior if people think crashing the node is the right outcome.\n",https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43768487,43768487,src/miner.cpp
luke-jr,2015-11-03T17:33:24Z,Exceptions here should not crash the node... it just gets returned as a nicer JSON-RPC error.\n,https://github.com/bitcoin/bitcoin/pull/6898#discussion_r43779373,43779373,src/miner.cpp
jtimon,2015-11-23T13:06:51Z,"can you `strprintf(""%: TestBlockValidity failed: %"", __func__, ...` instead?\n",https://github.com/bitcoin/bitcoin/pull/6898#discussion_r45600732,45600732,src/miner.cpp
