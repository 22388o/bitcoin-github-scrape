[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356327874",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356327874",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 356327874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMyNzg3NA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T16:02:14Z",
    "updated_at": "2018-01-09T16:02:14Z",
    "author_association": "MEMBER",
    "body": "@promag Thanks for taking a look.  I mimicked `CompareTxMempoolEntryByDescendantScore` in this PR to make review easier, since the two concepts have a symmetry.\r\n\r\nThe use of `double` for the intermediate value is to prevent overflow of an int64_t, which is theoretically possible.  That's also why there's an explicit double cast before multiplication.\r\n\r\nI'll rewrite the helper function along the lines of your suggestion.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356327874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356453583",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356453583",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 356453583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ1MzU4Mw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T23:57:57Z",
    "updated_at": "2018-01-09T23:57:57Z",
    "author_association": "MEMBER",
    "body": "> The use of double for the intermediate value is to prevent overflow of an int64_t, which is theoretically possible.\r\n\r\nHow about http://releases.llvm.org/4.0.0/tools/clang/docs/LanguageExtensions.html#checked-arithmetic-builtins?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356453583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356633351",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356633351",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 356633351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjYzMzM1MQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T15:19:01Z",
    "updated_at": "2018-01-10T15:19:01Z",
    "author_association": "MEMBER",
    "body": "@promag The style of where to put the `&` doesn't seem to be in our style guide and is inconsistent already in this file, so I'm going to leave it the way I have it (which happens to be my preference for where to put the `&` :) ).\r\n\r\nI don't think it's a problem for code-correctness if the arithmetic overflows, so I'd rather just handle it as we currently do than introduce complication from calculating things two ways.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356633351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356641676",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356641676",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 356641676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY0MTY3Ng==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T15:45:00Z",
    "updated_at": "2018-01-10T15:45:00Z",
    "author_association": "MEMBER",
    "body": "utACK 9a51319.\r\n\r\n> I'm going to leave it the way I have it\r\n\r\nFine.\r\n\r\n> so I'd rather just handle it as we currently do\r\n\r\nIt was just curiosity. Maybe `GetModFeeAndSize` values could be cached in `CTxMemPoolEntry` to improve even further? (adding 128 bytes per entry)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356641676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356803845",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356803845",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 356803845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjgwMzg0NQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T02:21:46Z",
    "updated_at": "2018-01-11T02:21:46Z",
    "author_association": "MEMBER",
    "body": ">>I measured this as approximately a 5% speedup in removeForBlock.\r\n\r\n>I'm always interested to know how you benchmark these things, in case you want to post details.\r\n\r\n@ryanofsky I ran through nearly 3 months of historical block & transaction data (roughly March-May 2017), which I record and can play back to a patched bitcoind.  I ran two historical studies, one with this patch and one without, each with added benchmarks to specifically measure the time spent in removeForBlock.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356803845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357009787",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357009787",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357009787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAwOTc4Nw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T17:59:44Z",
    "updated_at": "2018-01-11T17:59:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 9a51319578091234fdd218a1eb144d517ea82b85",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357009787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357052870",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357052870",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357052870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzA1Mjg3MA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T20:34:03Z",
    "updated_at": "2018-01-11T20:34:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357052870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357174960",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357174960",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357174960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzE3NDk2MA==",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?u=c6cf723ac2c78d38bf31ae2665cb16e3e4452227&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T08:32:59Z",
    "updated_at": "2018-01-12T08:32:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe augment the `MempoolAncestorIndexingTest` with a case of a higher fee parent with a lower fee child (for which the sort order has changed).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357174960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357306399",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357306399",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357306399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzMwNjM5OQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T17:43:58Z",
    "updated_at": "2018-01-12T17:43:58Z",
    "author_association": "MEMBER",
    "body": "@jimpo Sounds good; I added a test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357306399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357467313",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357467313",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357467313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQ2NzMxMw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-13T21:07:51Z",
    "updated_at": "2018-01-13T21:07:51Z",
    "author_association": "MEMBER",
    "body": "I just remembered that the mining code had this ancestor feerate sorting logic duplicated; I just added a commit that attempts to re-use the mempool code so that the new behavior will apply there as well.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357467313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357697399",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357697399",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357697399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzY5NzM5OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T14:27:32Z",
    "updated_at": "2018-01-15T14:27:32Z",
    "author_association": "MEMBER",
    "body": "utACK 0a22a5291",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357697399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357701732",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357701732",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
    "id": 357701732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzcwMTczMg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T14:43:22Z",
    "updated_at": "2018-01-15T14:43:22Z",
    "author_association": "MEMBER",
    "body": "re-utACK 0a22a52. Added test looks good.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357701732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983",
    "pull_request_review_id": 87376974,
    "id": 160286983,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDI4Njk4Mw==",
    "diff_hunk": "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();\n+        double bSize = fUseBAncestors ? b.GetSizeWithAncestors() : b.GetTxSize();\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = aModFee * bSize;\n+        double f2 = aSize * bModFee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n \n         return f1 > f2;\n     }\n+\n+    // Calculate which score to use for an entry (avoiding division).\n+    // Picks min(feerate, feerate_with_ancestors)\n+    bool UseAncestorScore(const CTxMemPoolEntry &a) const\n+    {\n+        double f1 = (double)a.GetModifiedFee() * a.GetSizeWithAncestors();",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 43,
    "commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "original_commit_id": "f0aef6c7df28675d7d8982cef38b398daf975584",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remove double cast?",
    "created_at": "2018-01-08T23:51:55Z",
    "updated_at": "2018-01-13T21:06:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160286983",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160286983"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 298,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321",
    "pull_request_review_id": 87376974,
    "id": 160287321,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDI4NzMyMQ==",
    "diff_hunk": "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 18,
    "commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "original_commit_id": "f0aef6c7df28675d7d8982cef38b398daf975584",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why floating point? Aren't these all 64 integers?\r\n  ",
    "created_at": "2018-01-08T23:54:29Z",
    "updated_at": "2018-01-13T21:06:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160287321",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160287321"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 276,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272",
    "pull_request_review_id": 87376974,
    "id": 160288272,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDI4ODI3Mg==",
    "diff_hunk": "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 23,
    "commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "original_commit_id": "f0aef6c7df28675d7d8982cef38b398daf975584",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of factoring out `UseAncestorScore`, do (missing comments):\r\n```cpp\r\nvoid GetModFeeAndSize(const CTxMemPoolEntry& a, int64_t& mod_fee, int64_t& size) {\r\n    int64_t f1 = a.GetModifiedFee() * a.GetSizeWithAncestors();\r\n    int64_t f2 = a.GetModFeesWithAncestors() * a.GetTxSize();\r\n    if (f1 > f2) {\r\n        mod_fee = a.GetModFeesWithAncestors();\r\n        size = a.GetSizeWithAncestors();\r\n    } else {\r\n        mod_fee = a.GetModifiedFee();\r\n        size = a.GetTxSize();\r\n    }\r\n}\r\n```",
    "created_at": "2018-01-09T00:01:41Z",
    "updated_at": "2018-01-13T21:06:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 279,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319",
    "pull_request_review_id": 87376974,
    "id": 160288319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDI4ODMxOQ==",
    "diff_hunk": "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();\n+        double bSize = fUseBAncestors ? b.GetSizeWithAncestors() : b.GetTxSize();\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = aModFee * bSize;\n+        double f2 = aSize * bModFee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n \n         return f1 > f2;\n     }\n+\n+    // Calculate which score to use for an entry (avoiding division).\n+    // Picks min(feerate, feerate_with_ancestors)",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 40,
    "commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "original_commit_id": "f0aef6c7df28675d7d8982cef38b398daf975584",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, missing `.`.",
    "created_at": "2018-01-09T00:01:59Z",
    "updated_at": "2018-01-13T21:06:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 294,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161404506",
    "pull_request_review_id": 88689212,
    "id": 161404506,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQwNDUwNg==",
    "diff_hunk": "@@ -352,7 +352,7 @@ void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpda\n             // Try to compare the mapTx entry to the mapModifiedTx entry\n             iter = mempool.mapTx.project<0>(mi);\n             if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareModifiedEntry()(*modit, CTxMemPoolModifiedEntry(iter))) {\n+                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {",
    "path": "src/miner.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "original_commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just to check my understanding, this should have zero effect, correct? The highest element in mapTx and mapModifiedTx should always be the element we want, if the min() is hit, it will never have sorted as the top element in either mapModifedTx *or* mapTx, as all modifiedTx entries also have their parents in modifiedTx?",
    "created_at": "2018-01-14T17:30:24Z",
    "updated_at": "2018-01-14T18:11:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161404506",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161404506"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161404506"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161404506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 355,
    "original_line": 355,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161764266",
    "pull_request_review_id": 89104280,
    "id": 161764266,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTc2NDI2Ng==",
    "diff_hunk": "@@ -352,7 +352,7 @@ void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpda\n             // Try to compare the mapTx entry to the mapModifiedTx entry\n             iter = mempool.mapTx.project<0>(mi);\n             if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareModifiedEntry()(*modit, CTxMemPoolModifiedEntry(iter))) {\n+                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {",
    "path": "src/miner.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "original_commit_id": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes -- this change was only because I wanted to delete the code for CompareModifiedEntry, which is otherwise no longer needed.\r\n\r\n> all modifiedTx entries also have their parents in modifiedTx\r\n\r\nNot quite -- the parents of entries in mapModifiedTx are not in mapModifiedTx if they have been included in the candidate block.  Also a parent could be missing from mapModifiedTx if we already considered it for inclusion and it failed for some reason (eg the package it's part of would be too big).",
    "created_at": "2018-01-16T14:01:10Z",
    "updated_at": "2018-01-16T14:06:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161764266",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161764266"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161764266"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161764266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 355,
    "original_line": 355,
    "side": "RIGHT",
    "in_reply_to_id": 161404506
  }
]