[
  {
    "sha": "6773f92b302915b75db4ded9814563d42de3d489",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzczZjkyYjMwMjkxNWI3NWRiNGRlZDk4MTQ1NjNkNDJkZTNkNDg5",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-09T16:53:40Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-09T16:53:40Z"
      },
      "message": "Refactor CompareTxMemPoolEntryByDescendantScore",
      "tree": {
        "sha": "d4405b094f19b38e9f547324c090bdab2430b40d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4405b094f19b38e9f547324c090bdab2430b40d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6773f92b302915b75db4ded9814563d42de3d489",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6773f92b302915b75db4ded9814563d42de3d489",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6773f92b302915b75db4ded9814563d42de3d489",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6773f92b302915b75db4ded9814563d42de3d489/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c991b304dee368f506cfee27ddaa333f1f82c518",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c991b304dee368f506cfee27ddaa333f1f82c518",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c991b304dee368f506cfee27ddaa333f1f82c518"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 17,
      "deletions": 12
    },
    "files": [
      {
        "sha": "a0698387f28b58582cacc528e10940ff7a1c8b23",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6773f92b302915b75db4ded9814563d42de3d489/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6773f92b302915b75db4ded9814563d42de3d489/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=6773f92b302915b75db4ded9814563d42de3d489",
        "patch": "@@ -206,31 +206,36 @@ class CompareTxMemPoolEntryByDescendantScore\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        bool fUseADescendants = UseDescendantScore(a);\n-        bool fUseBDescendants = UseDescendantScore(b);\n+        double a_mod_fee, a_size, b_mod_fee, b_size;\n \n-        double aModFee = fUseADescendants ? a.GetModFeesWithDescendants() : a.GetModifiedFee();\n-        double aSize = fUseADescendants ? a.GetSizeWithDescendants() : a.GetTxSize();\n-\n-        double bModFee = fUseBDescendants ? b.GetModFeesWithDescendants() : b.GetModifiedFee();\n-        double bSize = fUseBDescendants ? b.GetSizeWithDescendants() : b.GetTxSize();\n+        GetModFeeAndSize(a, a_mod_fee, a_size);\n+        GetModFeeAndSize(b, b_mod_fee, b_size);\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aModFee * bSize;\n-        double f2 = aSize * bModFee;\n+        double f1 = a_mod_fee * b_size;\n+        double f2 = a_size * b_mod_fee;\n \n         if (f1 == f2) {\n             return a.GetTime() >= b.GetTime();\n         }\n         return f1 < f2;\n     }\n \n-    // Calculate which score to use for an entry (avoiding division).\n-    bool UseDescendantScore(const CTxMemPoolEntry &a) const\n+    // Return the fee/size we're using for sorting this entry.\n+    void GetModFeeAndSize(const CTxMemPoolEntry &a, double &mod_fee, double &size) const\n     {\n+        // Compare feerate with descendants to feerate of the transaction, and\n+        // return the fee/size for the max.\n         double f1 = (double)a.GetModifiedFee() * a.GetSizeWithDescendants();\n         double f2 = (double)a.GetModFeesWithDescendants() * a.GetTxSize();\n-        return f2 > f1;\n+\n+        if (f2 > f1) {\n+            mod_fee = a.GetModFeesWithDescendants();\n+            size = a.GetSizeWithDescendants();\n+        } else {\n+            mod_fee = a.GetModifiedFee();\n+            size = a.GetTxSize();\n+        }\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "9a51319578091234fdd218a1eb144d517ea82b85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTUxMzE5NTc4MDkxMjM0ZmRkMjE4YTFlYjE0NGQ1MTdlYTgyYjg1",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-09T17:27:57Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-09T17:27:57Z"
      },
      "message": "Sort mempool by min(feerate, ancestor_feerate)\n\nThis more closely approximates the desirability of a given transaction for\nmining.",
      "tree": {
        "sha": "85b5d154e47a9b15dd08e2b57497372a1c7b1425",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85b5d154e47a9b15dd08e2b57497372a1c7b1425"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a51319578091234fdd218a1eb144d517ea82b85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a51319578091234fdd218a1eb144d517ea82b85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a51319578091234fdd218a1eb144d517ea82b85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a51319578091234fdd218a1eb144d517ea82b85/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6773f92b302915b75db4ded9814563d42de3d489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6773f92b302915b75db4ded9814563d42de3d489",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6773f92b302915b75db4ded9814563d42de3d489"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 26,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a5eba9787ec26e166112f02acbf34566d7081075",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 26,
        "deletions": 7,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a51319578091234fdd218a1eb144d517ea82b85/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a51319578091234fdd218a1eb144d517ea82b85/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=9a51319578091234fdd218a1eb144d517ea82b85",
        "patch": "@@ -266,27 +266,46 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        double a_mod_fee, a_size, b_mod_fee, b_size;\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        GetModFeeAndSize(a, a_mod_fee, a_size);\n+        GetModFeeAndSize(b, b_mod_fee, b_size);\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = a_mod_fee * b_size;\n+        double f2 = a_size * b_mod_fee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n-\n         return f1 > f2;\n     }\n+\n+    // Return the fee/size we're using for sorting this entry.\n+    void GetModFeeAndSize(const CTxMemPoolEntry &a, double &mod_fee, double &size) const\n+    {\n+        // Compare feerate with ancestors to feerate of the transaction, and\n+        // return the fee/size for the min.\n+        double f1 = (double)a.GetModifiedFee() * a.GetSizeWithAncestors();\n+        double f2 = (double)a.GetModFeesWithAncestors() * a.GetTxSize();\n+\n+        if (f1 > f2) {\n+            mod_fee = a.GetModFeesWithAncestors();\n+            size = a.GetSizeWithAncestors();\n+        } else {\n+            mod_fee = a.GetModifiedFee();\n+            size = a.GetTxSize();\n+        }\n+    }\n };\n \n // Multi_index tag names"
      }
    ]
  },
  {
    "sha": "7abfa538b5a4508e0cf0589ae3ac0620b2188912",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YWJmYTUzOGI1YTQ1MDhlMGNmMDU4OWFlM2FjMDYyMGIyMTg4OTEy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-12T17:40:55Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-12T17:40:55Z"
      },
      "message": "Add test for new ancestor feerate sort behavior",
      "tree": {
        "sha": "eb2c89f3cdbee7258304ba0d24e3c548595546a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb2c89f3cdbee7258304ba0d24e3c548595546a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7abfa538b5a4508e0cf0589ae3ac0620b2188912",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7abfa538b5a4508e0cf0589ae3ac0620b2188912",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7abfa538b5a4508e0cf0589ae3ac0620b2188912",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7abfa538b5a4508e0cf0589ae3ac0620b2188912/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a51319578091234fdd218a1eb144d517ea82b85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a51319578091234fdd218a1eb144d517ea82b85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a51319578091234fdd218a1eb144d517ea82b85"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e6234c5abfacb874bba1f058cc9445dfcd378201",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7abfa538b5a4508e0cf0589ae3ac0620b2188912/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7abfa538b5a4508e0cf0589ae3ac0620b2188912/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=7abfa538b5a4508e0cf0589ae3ac0620b2188912",
        "patch": "@@ -427,6 +427,23 @@ BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)\n         sortedOrder.erase(sortedOrder.end()-2);\n     sortedOrder.insert(sortedOrder.begin(), tx7.GetHash().ToString());\n     CheckSort<ancestor_score>(pool, sortedOrder);\n+\n+    // High-fee parent, low-fee child\n+    // tx7 -> tx8\n+    CMutableTransaction tx8 = CMutableTransaction();\n+    tx8.vin.resize(1);\n+    tx8.vin[0].prevout  = COutPoint(tx7.GetHash(), 0);\n+    tx8.vin[0].scriptSig = CScript() << OP_11;\n+    tx8.vout.resize(1);\n+    tx8.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx8.vout[0].nValue = 10*COIN;\n+\n+    // Check that we sort by min(feerate, ancestor_feerate):\n+    // set the fee so that the ancestor feerate is above tx1/5,\n+    // but the transaction's own feerate is lower\n+    pool.addUnchecked(tx8.GetHash(), entry.Fee(5000LL).FromTx(tx8));\n+    sortedOrder.insert(sortedOrder.end()-1, tx8.GetHash().ToString());\n+    CheckSort<ancestor_score>(pool, sortedOrder);\n }\n \n "
      }
    ]
  },
  {
    "sha": "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTIyYTUyOTE4YWQ1YWY2ZDEwNWI0ZjVhZTlkZDZjNTIxOTlmMGU4",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-13T20:57:30Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-13T20:57:30Z"
      },
      "message": "Use mempool's ancestor sort in transaction selection\n\nTransaction selection for mining tracks ancestor feerates that are\nmodified based on transactions that have already been selected.  This\ncommit de-duplicates the code so that the ancestor feerate sorting used\nby the mempool can also be directly applied to the miner.",
      "tree": {
        "sha": "cdfe7f594d10c2c80a3f49a8c014fa6b191f94e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cdfe7f594d10c2c80a3f49a8c014fa6b191f94e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7abfa538b5a4508e0cf0589ae3ac0620b2188912",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7abfa538b5a4508e0cf0589ae3ac0620b2188912",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7abfa538b5a4508e0cf0589ae3ac0620b2188912"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 12,
      "deletions": 19
    },
    "files": [
      {
        "sha": "dda52790c6120ff5b96f03af9eddfdbdfaa6143d",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
        "patch": "@@ -352,7 +352,7 @@ void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpda\n             // Try to compare the mapTx entry to the mapModifiedTx entry\n             iter = mempool.mapTx.project<0>(mi);\n             if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareModifiedEntry()(*modit, CTxMemPoolModifiedEntry(iter))) {\n+                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {\n                 // The best entry in mapModifiedTx has higher score\n                 // than the one from mapTx.\n                 // Switch which transaction (package) to consider"
      },
      {
        "sha": "9c086332d4986ad28ea2874cd48ff2c6e240550b",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 16,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
        "patch": "@@ -41,6 +41,12 @@ struct CTxMemPoolModifiedEntry {\n         nSigOpCostWithAncestors = entry->GetSigOpCostWithAncestors();\n     }\n \n+    int64_t GetModifiedFee() const { return iter->GetModifiedFee(); }\n+    uint64_t GetSizeWithAncestors() const { return nSizeWithAncestors; }\n+    CAmount GetModFeesWithAncestors() const { return nModFeesWithAncestors; }\n+    size_t GetTxSize() const { return iter->GetTxSize(); }\n+    const CTransaction& GetTx() const { return iter->GetTx(); }\n+\n     CTxMemPool::txiter iter;\n     uint64_t nSizeWithAncestors;\n     CAmount nModFeesWithAncestors;\n@@ -67,21 +73,6 @@ struct modifiedentry_iter {\n     }\n };\n \n-// This matches the calculation in CompareTxMemPoolEntryByAncestorFee,\n-// except operating on CTxMemPoolModifiedEntry.\n-// TODO: refactor to avoid duplication of this logic.\n-struct CompareModifiedEntry {\n-    bool operator()(const CTxMemPoolModifiedEntry &a, const CTxMemPoolModifiedEntry &b) const\n-    {\n-        double f1 = (double)a.nModFeesWithAncestors * b.nSizeWithAncestors;\n-        double f2 = (double)b.nModFeesWithAncestors * a.nSizeWithAncestors;\n-        if (f1 == f2) {\n-            return CTxMemPool::CompareIteratorByHash()(a.iter, b.iter);\n-        }\n-        return f1 > f2;\n-    }\n-};\n-\n // A comparator that sorts transactions based on number of ancestors.\n // This is sufficient to sort an ancestor package in an order that is valid\n // to appear in a block.\n@@ -106,7 +97,7 @@ typedef boost::multi_index_container<\n             // Reuse same tag from CTxMemPool's similar index\n             boost::multi_index::tag<ancestor_score>,\n             boost::multi_index::identity<CTxMemPoolModifiedEntry>,\n-            CompareModifiedEntry\n+            CompareTxMemPoolEntryByAncestorFee\n         >\n     >\n > indexed_modified_transaction_set;"
      },
      {
        "sha": "d32131d7a80307ebf64e9b40073e1b134d9c6486",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
        "patch": "@@ -273,7 +273,8 @@ class CompareTxMemPoolEntryByEntryTime\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n-    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n+    template<typename T>\n+    bool operator()(const T& a, const T& b) const\n     {\n         double a_mod_fee, a_size, b_mod_fee, b_size;\n \n@@ -291,7 +292,8 @@ class CompareTxMemPoolEntryByAncestorFee\n     }\n \n     // Return the fee/size we're using for sorting this entry.\n-    void GetModFeeAndSize(const CTxMemPoolEntry &a, double &mod_fee, double &size) const\n+    template <typename T>\n+    void GetModFeeAndSize(const T &a, double &mod_fee, double &size) const\n     {\n         // Compare feerate with ancestors to feerate of the transaction, and\n         // return the fee/size for the min."
      }
    ]
  }
]