[
  {
    "sha": "fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTRmNGI2OTc0Y2VkZDA2ODk3MjZhN2ViNzkxZWI4ZjJkMWQ2NmVk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-06T14:26:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-06T15:49:51Z"
      },
      "message": "Add clang-format-diff.py from the LLVM svn\n\n------------------------------------------------------------------------\nr249567 | djasper | 2015-10-07 19:00:20 +0200 (Wed, 07 Oct 2015) | 2 lines\n\nclang-format: Add include sorting capabilities to sublime, emacs and\nclang-format-diff.py.\n------------------------------------------------------------------------\nr231926 | djasper | 2015-03-11 15:58:38 +0100 (Wed, 11 Mar 2015) | 3 lines\n\nclang-format: Recognize the .ts (TypeScript) extension as JavaScript.\n\nPatch by Martin Probst. Thank you.\n------------------------------------------------------------------------\nr223685 | djasper | 2014-12-08 20:39:03 +0100 (Mon, 08 Dec 2014) | 1 line\n\nclang-format: Make clang-format-diff.py format java files.\n------------------------------------------------------------------------\nr221990 | djasper | 2014-11-14 14:27:28 +0100 (Fri, 14 Nov 2014) | 4 lines\n\nclang-format: Give clang-format-diff.py a -v option.\n\nWith it, it prints the file being formatted. Apparently people are\nformatting thousands of files and some progress indication is helpful.\n------------------------------------------------------------------------\nr216945 | ed | 2014-09-02 22:59:13 +0200 (Tue, 02 Sep 2014) | 6 lines\n\nUse /usr/bin/env python instead of /usr/bin/python.\n\nOn operating systems like the BSDs, it is typically the case that\n/usr/bin/python does not exist. We should therefore use /usr/bin/env\ninstead. This is also done in various other scripts in tools/.\n\n------------------------------------------------------------------------\nr208766 | djasper | 2014-05-14 11:36:11 +0200 (Wed, 14 May 2014) | 1 line\n\nclang-format: Add clang-format-diff usage examples for SVN.\n------------------------------------------------------------------------\nr199750 | djasper | 2014-01-21 16:40:01 +0100 (Tue, 21 Jan 2014) | 3 lines\n\nclang-format: Enable formatting for .proto and .protodevel files.\n\nSupport for protocol buffer files seems complete enough.\n------------------------------------------------------------------------\nr197668 | djasper | 2013-12-19 11:21:37 +0100 (Thu, 19 Dec 2013) | 1 line\n\nFix usage description of clang-format-diff.py.\n------------------------------------------------------------------------\nr197608 | alp | 2013-12-18 22:34:07 +0100 (Wed, 18 Dec 2013) | 7 lines\n\nclang-format-diff.py: fix -regex/-iregex matching\n\nWhile debating the finer points of file extension matching, we somehow missed\nthe bigger problem that the current code will match anything starting with the\ndefault or user-specified pattern (e.g. lit.site.cfg.in).\n\nFix this by doing what find(1) does, implicitly wrapping the pattern with ^$.\n------------------------------------------------------------------------\nr197542 | alp | 2013-12-18 01:58:58 +0100 (Wed, 18 Dec 2013) | 3 lines\n\nclang-format-diff.py: add the OpenCL file extension\n\nIt's handled correctly as a C-family language.\n------------------------------------------------------------------------\nr197378 | alexfh | 2013-12-16 11:57:30 +0100 (Mon, 16 Dec 2013) | 14 lines\n\nAdded -iregex for case-insensitive regex to filter file names.\n\nSummary:\n-regex and -iregex both mimic options of the find utility.\nMade the default list of extensions case-insensitive, so that it's not only C\nand CPP extensions are accepted in upper case.\n\nReviewers: djasper\n\nReviewed By: djasper\n\nCC: cfe-commits\n\nDifferential Revision: http://llvm-reviews.chandlerc.com/D2415\n------------------------------------------------------------------------\nr196917 | alp | 2013-12-10 14:51:53 +0100 (Tue, 10 Dec 2013) | 10 lines\n\nclang-format-diff.py: Support -regex filter and more filename extensions\n\nAdd support for more filename extensions based on the list in the clang\nplus JavaScript.\n\nAlso adds a -regex option so users can override defaults if they have unusual\nfile extensions or want to format everything in the diff.\n\nKeeping with tradition the flag is modelled on Unix conventions, this time\nmatching the semantics of find(1).\n------------------------------------------------------------------------\nr196484 | alp | 2013-12-05 09:14:54 +0100 (Thu, 05 Dec 2013) | 4 lines\n\nclang-format-diff.py: pass through errors to stderr, not stdout\n\nAlso use write() for unified diff output to avoid further processing by the\nprint function (e.g. trailing newline).\n------------------------------------------------------------------------\nr196336 | alp | 2013-12-04 01:48:22 +0100 (Wed, 04 Dec 2013) | 3 lines\n\nclang-format-diff.py: Fix 'beintroduced' in help output\n\nAlso update docs to reflect recently changed -i inplace edit behaviour.\n------------------------------------------------------------------------\nr192505 | alexfh | 2013-10-11 23:32:01 +0200 (Fri, 11 Oct 2013) | 17 lines\n\nChanged clang-format-diff.py to output diff by default. Added -i option to apply changes to files instead.\n\nSummary:\n\"svn diff|clang-format-diff.py\" will just output the diff.\nNow it's possible to use:\n  svn diff|clang-format-diff.py|patch -p0\nas an equivalent to:\n  svn diff|clang-format-diff.py -i\n;)\n\nReviewers: djasper\n\nReviewed By: djasper\n\nCC: cfe-commits\n\nDifferential Revision: http://llvm-reviews.chandlerc.com/D1840\n------------------------------------------------------------------------\nr192184 | djasper | 2013-10-08 17:54:36 +0200 (Tue, 08 Oct 2013) | 7 lines\n\nclang-format: Don't exit with failure on empty files.\n\nAlso let clang-format-diff.py detect errors based on clang-format's\nreturn code. Otherwise messages like \"Can't find usable .clang-format,\nfalling back to LLVM style\" can make it fail, which might be undesired.\n\nPatch by Alp Toker. Thank you!\n------------------------------------------------------------------------\nr191820 | djasper | 2013-10-02 15:59:03 +0200 (Wed, 02 Oct 2013) | 18 lines\n\nclang-format: Fix clang-format-diff.py according to diff specification.\n\nPatch by Alp Toker. Many thanks!\n\nOriginal descriptions:\nclang-format-diff incorrectly modifies unchanged lines due to an error\nin diff parsing.\n\nThe unified diff format has a default line change count of 1, and 0 may\nbe specified to indicate that no lines have been added. This patch\nupdates the parser to accurately reflect the diff specification.\n\nThis also has the benefit of stabilising the operation so it will\nproduce the same output when run multiple times on the same changeset,\nwhich was previously not the case.\n\nNo tests added because this script is not currently tested (though we\nshould look into that!)\n------------------------------------------------------------------------\nr191137 | djasper | 2013-09-21 12:05:02 +0200 (Sat, 21 Sep 2013) | 3 lines\n\nFix clang-format-diff.py to accept -style again.\n\nCopy and paste error in r190935..\n------------------------------------------------------------------------\nr190935 | djasper | 2013-09-18 14:14:09 +0200 (Wed, 18 Sep 2013) | 3 lines\n\nSimplify clang-format-diff.py using new clang-format options.\n\nclang-format's -lines parameter makes this significantly easier.\n------------------------------------------------------------------------\nr189765 | alexfh | 2013-09-02 18:39:23 +0200 (Mon, 02 Sep 2013) | 2 lines\n\nAdded WebKit style to the BasedOnStyle handling and to the relevant help messages.\n\n------------------------------------------------------------------------\nr182923 | djasper | 2013-05-30 13:50:20 +0200 (Thu, 30 May 2013) | 4 lines\n\nFix default value of clang-format-diff's -p option.\n\nThis way, it has the same default as 'patch' and also the example in the\ncode makes more sense as it is explicitly setting -p 1.\n------------------------------------------------------------------------\nr179676 | djasper | 2013-04-17 09:55:02 +0200 (Wed, 17 Apr 2013) | 2 lines\n\nSmall improvements to clang-format documentation and integration\nscripts.\n------------------------------------------------------------------------\nr179377 | djasper | 2013-04-12 15:42:36 +0200 (Fri, 12 Apr 2013) | 1 line\n\nFix clang-format-diff.py script.\n------------------------------------------------------------------------\nr179098 | djasper | 2013-04-09 17:23:04 +0200 (Tue, 09 Apr 2013) | 5 lines\n\nImprovements to clang-format integrations.\n\nThis adds an emacs editor integration (thanks to Ami Fischman). Also\npulls out the style into a variable for the vi integration and just\nuses clang-formats defaults style in clang-format-diff.py.\n------------------------------------------------------------------------\nr177506 | djasper | 2013-03-20 10:53:23 +0100 (Wed, 20 Mar 2013) | 1 line\n\nAdd clang-format binary to cfe.\n------------------------------------------------------------------------\n\ns",
      "tree": {
        "sha": "0711e62bf692006711adb38597701ccf1fe8c285",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0711e62bf692006711adb38597701ccf1fe8c285"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "605c17844ea32b6d237db6d83871164dc7d59dab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/605c17844ea32b6d237db6d83871164dc7d59dab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/605c17844ea32b6d237db6d83871164dc7d59dab"
      }
    ],
    "stats": {
      "total": 124,
      "additions": 124,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9e02bb09387f87f90e70df024730f4f1538cf195",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 124,
        "deletions": 0,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
        "patch": "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License. See LICENSE.TXT for details.\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import re\n+import string\n+import subprocess\n+import StringIO\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  parser.add_argument(\n+      '-style',\n+      help=\n+      'formatting style to apply (LLVM, Google, Chromium, Mozilla, WebKit)')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename == None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1;\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.iteritems():\n+    if args.i and args.verbose:\n+      print 'Formatting', filename\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    if args.style:\n+      command.extend(['-style', args.style])\n+    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n+                         stderr=None, stdin=subprocess.PIPE)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode);\n+\n+    if not args.i:\n+      with open(filename) as f:\n+        code = f.readlines()\n+      formatted_code = StringIO.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = string.join(diff, '')\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      }
    ]
  },
  {
    "sha": "fa074a6fd098153c75ba0e76b7dd94eab82ae599",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA3NGE2ZmQwOTgxNTNjNzViYTBlNzZiN2RkOTRlYWI4MmFlNTk5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-06T15:11:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-06T15:50:06Z"
      },
      "message": "[contrib] Prepare clang-format-diff for usage",
      "tree": {
        "sha": "4b8e5f85ba8d42b29faf2dc688e6bfcac2939a9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b8e5f85ba8d42b29faf2dc688e6bfcac2939a9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa074a6fd098153c75ba0e76b7dd94eab82ae599",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa074a6fd098153c75ba0e76b7dd94eab82ae599",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa074a6fd098153c75ba0e76b7dd94eab82ae599",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa074a6fd098153c75ba0e76b7dd94eab82ae599/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4f4b6974cedd0689726a7eb791eb8f2d1d66ed"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 59,
      "deletions": 7
    },
    "files": [
      {
        "sha": "978f26b084c79c0182e3328eaeed0a3d58071836",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa074a6fd098153c75ba0e76b7dd94eab82ae599/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa074a6fd098153c75ba0e76b7dd94eab82ae599/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=fa074a6fd098153c75ba0e76b7dd94eab82ae599",
        "patch": "@@ -7,6 +7,18 @@ clang-format.py\n \n A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n \n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n fix-copyright-headers.py\n ========================\n "
      },
      {
        "sha": "13d2573b9ff874e0c536e246b6f94310b7c7587f",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "modified",
        "additions": 47,
        "deletions": 7,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa074a6fd098153c75ba0e76b7dd94eab82ae599/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa074a6fd098153c75ba0e76b7dd94eab82ae599/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=fa074a6fd098153c75ba0e76b7dd94eab82ae599",
        "patch": "@@ -5,7 +5,52 @@\n #                     The LLVM Compiler Infrastructure\n #\n # This file is distributed under the University of Illinois Open Source\n-# License. See LICENSE.TXT for details.\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n #\n #===------------------------------------------------------------------------===#\n \n@@ -56,10 +101,6 @@ def main():\n                       help='let clang-format sort include blocks')\n   parser.add_argument('-v', '--verbose', action='store_true',\n                       help='be more verbose, ineffective without -i')\n-  parser.add_argument(\n-      '-style',\n-      help=\n-      'formatting style to apply (LLVM, Google, Chromium, Mozilla, WebKit)')\n   args = parser.parse_args()\n \n   # Extract changed lines for each file.\n@@ -101,8 +142,7 @@ def main():\n     if args.sort_includes:\n       command.append('-sort-includes')\n     command.extend(lines)\n-    if args.style:\n-      command.extend(['-style', args.style])\n+    command.extend(['-style=file', '-fallback-style=none'])\n     p = subprocess.Popen(command, stdout=subprocess.PIPE,\n                          stderr=None, stdin=subprocess.PIPE)\n     stdout, stderr = p.communicate()"
      }
    ]
  }
]