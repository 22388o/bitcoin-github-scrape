jonasschnelli,2017-02-09T09:20:34Z,"Concept ACK (will review in detail and test soon).\nI think this is a great feature!\nTogether with #9662 this would allow better HWW/Cold-Storage interaction.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278588257,278588257,
laanwj,2017-02-09T09:44:10Z,"> The user create a new wallet by removing the old wallet.dat and running ./bitcoind -hdwatchonly=[ExtPubKey base58].\n\nInstead of removing the wallet, it would also be possible to specify an alternative one with `-wallet`, I guess?",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278593539,278593539,
luke-jr,2017-02-09T10:11:03Z,"How does this work, considering that Core is exclusively hardened derivation right now? Or can it only watch non-Core wallets? O.o",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278599655,278599655,
jonasschnelli,2017-02-09T10:24:46Z,"> How does this work, considering that Core is exclusively hardened derivation right now? Or can it only watch non-Core wallets? O.o\n\nFor the hd-watch-only default keypath, we should probably use Bip44.\nThis PR makes much more sense if we would have the flexible key path feature https://github.com/bitcoin/bitcoin/pull/8723",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278602807,278602807,
NicolasDorier,2017-02-09T12:14:21Z,"@luke-jr  for watchonly hd I am using non hardened derivation. goal is to eventually combine with flexible path.\n\n@laanwj yes. What I mean is that if you specify -hdwatchonly on an already existing wallet, you get an error at startup.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278625008,278625008,
NicolasDorier,2017-02-09T13:20:01Z,Travis error not related to this PR.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278638183,278638183,
jonasschnelli,2017-02-09T15:07:33Z,@NicolasDorier: I think in order to pass travis you need to add `-hdwatchonly` to the check doc script.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278669151,278669151,
NicolasDorier,2017-02-15T06:50:17Z,"I added a commit to track P2PK as well. It would be the same behavior as normal wallet. However I am not sure it is the right approach as P2PK are obsolete. An attacker could disrupt service by sending a P2PK output, when the service does not expect it.\n\nAlso, what for P2WPKH ?",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-279931206,279931206,
NicolasDorier,2017-02-20T07:12:47Z,"I am replicating the behavior of normal wallets, both p2pk and p2pkh are tracked.\n\nThe test is failing because I am testing wrong parameter usage, and there is no way in the test framework to assert an exception. Ping @MarcoFalke , same problem as reported by jonas on https://github.com/bitcoin/bitcoin/pull/9662",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-281004042,281004042,
NicolasDorier,2017-02-21T07:08:13Z,"I am at loss understanding why there is a permission denied on travis.... I thought I maybe did not had right to /dev/null, and tried to redirect stderr to stdout instead, but same problem. Any idea ?",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-281262396,281262396,
MarcoFalke,2017-02-21T13:05:33Z,"> Any idea\n\nTry\n\n```sh\nchmod +x qa/rpc-tests/hdwatchonly.py",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-281339052,281339052,
NicolasDorier,2017-03-13T08:05:01Z,"rebased, and cleaned up the commits for better review.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286038762,286038762,
saleemrashid,2017-03-13T17:49:03Z,"As far as I understand, Bitcoin Core uses `m/0'/0'/k'` whereas BIP 44 uses `m/0'/0/k` and `m/0'/1/k`. It makes most sense for this PR to implement `m/0/k` (and, with #9294, `m/1/k`). This allows you to use an `xpub` derived from `m/0'` (or any other account) by your hardware wallet, for example.\n\nHowever, this means that you are doing one less derivation than with `xprv` in Bitcoin Core. I don",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286187790,286187790,
NicolasDorier,2017-03-14T02:05:58Z,@saleemrashid very good point. Will make your change once  #9294 is merged.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286300044,286300044,
jonasschnelli,2017-03-17T16:47:50Z,This is a great PR. I really would like this to be in 0.15. It makes HWW signing much simpler and could be a pre-step for HWW support in Core.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-287408525,287408525,
NicolasDorier,2017-03-18T14:15:55Z,I will rebase and pass on all your nits and better test/code the case where you pass a xpriv once #9294 get merged.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-287548994,287548994,
NicolasDorier,2017-03-20T14:10:54Z,"1. Removed the addition of `CChainParams` into `InitLoadWallet`\n2. Correctly error if not passing an extpubkey with the right network\n3. Testing hdwatchonly parsing",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-287770212,287770212,
NicolasDorier,2017-04-07T07:35:30Z,"Rebased:\n\n* Support internal addresses of #9294\n* Using BIP44 friendly derivation @saleemrashid",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-292464179,292464179,
NicolasDorier,2017-06-05T13:30:38Z,Rebased @saleemrashid ,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-306187702,306187702,
instagibbs,2017-06-15T22:25:11Z,"needs rebase, will review",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-308882369,308882369,
NicolasDorier,2017-06-16T02:04:25Z,rebased,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-308912886,308912886,
instagibbs,2017-06-18T01:54:57Z,Is there a way exposed to the user that their wallet is HD watch-only? Might be useful in `getwalletinfo`.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309251477,309251477,
NicolasDorier,2017-06-18T05:15:08Z,just added info in `getwalletinfo`. I sadly can't compile because of https://github.com/bitcoin/bitcoin/issues/10622 and it seems my travis build is queued and does not want to run.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309257306,309257306,
NicolasDorier,2017-06-19T02:19:16Z,Ok my blinded push passed @instagibbs . Added some info in `getwalletinfo` as suggested.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309323041,309323041,
NicolasDorier,2017-06-19T04:34:43Z,"Thanks for the review @instagibbs I addressed your nits, can you re tACK once ?",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309336486,309336486,
instagibbs,2017-06-19T12:10:50Z,re-tACK https://github.com/bitcoin/bitcoin/pull/9728/commits/067b117b523208d66ade575e11ca76df964bf6ed,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309421315,309421315,
instagibbs,2017-06-19T12:27:52Z,We could actually also return the xpub in `validateaddress` as well...,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309424867,309424867,
instagibbs,2017-06-26T18:04:29Z,"Included the return in `validateaddress` here: https://github.com/instagibbs/bitcoin/commit/b8e1316721a72fa7a0de4e9c8497746f022e9881\n\nPlease feel free to take.\n\nUsing this PR ""in production"" with no issues.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-311136286,311136286,
NicolasDorier,2017-06-28T05:19:24Z,Rebased and included @instagibbs commit.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-311559073,311559073,
instagibbs,2017-06-29T13:11:33Z,"Not trying to completely sidetrack this PR, but this is for future PR consideration:\n\n@NicolasDorier https://github.com/instagibbs/bitcoin/commit/bb72d12cf6f737e4e7d43a90d7446f12a7e18a60  \n\nThis is the implementation that works for unconfirmed p2sh multisig where all keys are mixture of imported privkeys and hdwatchonly. Pretty ugly though and quite special-cased. Longer-term I'd look to e",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-311961589,311961589,
NicolasDorier,2017-06-30T13:12:31Z,"I think making more general case with SPENDABLE_WATCHONLY is preferable.\nI sadly don't have too much time these days, but I am interested into fixing it during 27-28.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-312263489,312263489,
NicolasDorier,2017-08-03T10:41:02Z,"Rebased, will soon open a new PR, as discussed with @instagibbs `watchonlyhd` should be renamed into `externalhd`.  Reason is that we want the generated addresses to behave exactly as if they were done by a normal wallet which has the keys. Those generated addresses might be able to be signed correclty by a HW module contrary to a normal watchonly address imported by `importaddress`.\n\nThus we ",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-319933982,319933982,
jonasschnelli,2017-08-15T20:07:40Z,"Re-Concept ACK. This should really be something we want in 0.16.\nI dislike the fact that the extended pubkey needs to be provided via a startup argument, but I guess as long as there is no runtime wallet creation RPC we have to go with that.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322574186,322574186,
jonasschnelli,2017-08-15T20:07:45Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322574204,322574204,
NicolasDorier,2017-08-17T02:39:02Z,"@jonasschnelli  We talked about this PR at Tokyo with @instagibbs and @sipa . Basically we agreed that contrary to what this PR does, the generated keys should not be considered as WATCH_ONLY but as SPENDABLE, even if core do not have the keys, it is still signable.\n\nThis mean that we need to refactor the wallet to first decouple a new class: `WatchOnlyKeyStore` from the `CCryptoKeyStore`. The",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322953243,322953243,
wtogami,2017-10-30T05:56:36Z,What is the status of this?,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-340350594,340350594,
NicolasDorier,2017-10-31T19:34:02Z,"So @saleemrashid is using it for hardware support in Bitcoin Core. I am using it in prod for quite a while, so this is stable.\n\nHowever, this is not the best way to do, ideally we should do like I detailed here https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322953243 .\nThis however requires deeper refactoring which I started on https://github.com/bitcoin/bitcoin/pull/10980 .\n\n",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-340882139,340882139,
instagibbs,2017-11-06T19:57:23Z,"For those interested, I'm rebasing at https://github.com/instagibbs/bitcoin/tree/externalhd2",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-342267473,342267473,
jonasschnelli,2018-02-17T10:54:15Z,Rebase required...,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366433316,366433316,
NicolasDorier,2018-02-17T15:02:45Z,@instagibbs  is maintaining a rebased version I think do you want to supersede this PR?,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366446947,366446947,
instagibbs,2018-02-17T15:09:08Z,Sure I can open a replacement PR if people are interested. I'm not actively pushing for merge at this time however.,https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366447344,366447344,
NicolasDorier,2018-02-17T15:18:45Z,"So the reason I put that back on the shelf, is that I think we want to do that after a major overall wallet refactoring that @sipa  proposed on https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2#future-design\n\nThis PR is creating new addresses as watch-only, this is however not what we want. We want addresses to be `MINE`, even if we don't have private key. Managing to refactor the ",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366447924,366447924,
NicolasDorier,2018-03-06T17:08:59Z,"Closing this it seems that we need deeper wallet refactoring as specified by sipa on https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2#future-design \n\n@instagibbs is maintaining https://github.com/instagibbs/bitcoin/tree/externalhd2 for those interested to continue this work.",https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-370854569,370854569,
jonasschnelli,2017-02-09T09:15:43Z,`>=`?,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259230,100259230,src/wallet/walletdb.h
jonasschnelli,2017-02-09T09:16:36Z,`s/AddKey/AddWatchOnly/`,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259436,100259436,src/wallet/wallet.cpp
jonasschnelli,2017-02-09T09:18:59Z,"I think returning false in case of `isWatchOnly` is confusing.\nIMO better set the `hasSecret` boolean with another check of `hdChain.isWatchOnly`.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259868,100259868,src/wallet/wallet.cpp
NicolasDorier,2017-02-09T09:45:29Z,"I can replace returns bool by void, and make the client responsible to test the validity of the returned Key.\n\nBut I fear that a new user would assume that DeriveNewKey always returns a valid CKey.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100266332,100266332,src/wallet/wallet.cpp
jonasschnelli,2017-02-09T09:58:35Z,"Yes. I once did a PR where we separate the key/pubkey records: https://github.com/bitcoin/bitcoin/pull/9298\nI guess this would be the cleaner solution... but maybe later.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100269433,100269433,src/wallet/wallet.cpp
MarcoFalke,2017-02-21T05:01:32Z,"Is this additional optional arg required? I don't think this will ever be used.\n\nEdit: I see you are doing it for consistency, so might be fine...",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102132683,102132683,qa/rpc-tests/test_framework/util.py
NicolasDorier,2017-02-21T05:18:07Z,it is used by `assert_start_raises_init_error`,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102133765,102133765,qa/rpc-tests/test_framework/util.py
MarcoFalke,2017-02-21T13:04:06Z,"Oh, right. I missed the plural s.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102201781,102201781,qa/rpc-tests/test_framework/util.py
jonasschnelli,2017-03-17T15:40:08Z,nit: `CURRENT_VERSION = SUPPORT_WATCHONLY_VERSION`.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106679482,106679482,src/wallet/walletdb.h
jonasschnelli,2017-03-17T15:50:00Z,"To make this compatible with BIP44, can we not just use `m` as the BIP44 account key. No hardened derivation would then be involved and users could use their BIP44 xpub's to generate watchonlys.\nThe `externalChainChildKey` would then be `m/0` (instead of `m/0/0`)",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106681973,106681973,src/wallet/wallet.cpp
jonasschnelli,2017-03-17T15:51:00Z,IMO this constant (`BIP32_NONHARDENED_KEY_LIMIT`) is superfluous. Just use `0`.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106682206,106682206,src/wallet/wallet.cpp
jonasschnelli,2017-03-17T15:51:45Z,"Also here, ... just use `hdChain.nExternalChainCounter` instead of `hdChain.nExternalChainCounter | BIP32_NONHARDENED_KEY_LIMIT` (no need to bitwise OR it with 0).",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106682399,106682399,src/wallet/wallet.cpp
jonasschnelli,2017-03-17T15:57:23Z,I think there is no way to verify the correctness of the derived pubkey?,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106683872,106683872,src/wallet/wallet.cpp
jonasschnelli,2017-03-17T16:35:29Z,"Somehow this PR was crashing here because of \n```\nAssertion failed: (pubkey.size() == 33), function Encode, file pubkey.cpp, line 255.\n```\n\nIt looks like that my tested `tpub` was non compressed? How is that even possible?\nLLDB told me `pubkey = (vch = unsigned char [65] @ 0x00007fd16736976c)`.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106692430,106692430,src/wallet/walletdb.h
jonasschnelli,2017-03-17T16:36:49Z,"Wait... I was using the extended private key instead. Though, I guess it should not crash in this case.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106692695,106692695,src/wallet/walletdb.h
jonasschnelli,2017-03-17T16:44:21Z,"Hmm.. I think this is incorrect. I could load a xpub (mainnet) on regtest.\nShouldn't `CBitcoinExtPubKey(""<x|tpub>"")` do the check for the correct encoding according to the chainparams?",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106694280,106694280,src/wallet/wallet.cpp
jonasschnelli,2017-03-17T16:47:28Z,"I got no warning when I started bitcoind again with a different `-hdwatchonly=xpub`.\nHere there should be a check wether the wallet has already a watch-only xpub set, and if the user provides one, and it's different, it should warn or stop.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106694984,106694984,src/wallet/wallet.cpp
saleemrashid,2017-03-17T17:14:32Z,@jonasschnelli https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286187790,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106700735,106700735,src/wallet/wallet.cpp
NicolasDorier,2017-03-20T06:44:29Z,this is normally checked. Actually I am testing it on https://github.com/bitcoin/bitcoin/pull/9728/files#diff-08fcd10ff4d7d4f9f0249ba978b3b4d4R49 this is strange... actual check done on https://github.com/bitcoin/bitcoin/pull/9728/files#diff-b2bb174788c7409b671c46ccc86034bdR3731 can you verify that you did not made another mistake ?,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106840319,106840319,src/wallet/wallet.cpp
NicolasDorier,2017-03-20T06:49:31Z,"How is it possible to get an extended private key here? if you provided a xpriv instead of xpub, it should have crashed at startup.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106840701,106840701,src/wallet/walletdb.h
jonasschnelli,2017-03-20T07:31:08Z,I used a `tpriv` which made this PR proceeding the hdwatchonly initialisation but then crashed at this point. Haven't looked into the details why the `tpriv` was accepted during init.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106844068,106844068,src/wallet/walletdb.h
jonasschnelli,2017-03-20T07:31:55Z,Ah.. Wasn't aware that @saleemrashid already pointed this out. Great.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106844134,106844134,src/wallet/wallet.cpp
NicolasDorier,2017-03-20T07:49:14Z,ah OK I know why... I do not verify the prefix,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106845495,106845495,src/wallet/walletdb.h
NicolasDorier,2017-03-20T14:08:14Z,Issue fixed and tested,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106908758,106908758,src/wallet/walletdb.h
instagibbs,2017-06-16T22:20:28Z,"Message should be something like ""Cannot specify new hdwatchonly on an already existing wallet""",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122544229,122544229,src/wallet/wallet.cpp
instagibbs,2017-06-19T01:19:53Z,"""extended pubkey""",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122607800,122607800,src/wallet/rpcwallet.cpp
instagibbs,2017-06-19T01:47:04Z,"Braces are the recommended code style, not sure why they're being removed.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122609340,122609340,src/wallet/wallet.cpp
instagibbs,2017-06-19T02:08:04Z,"Please add braces for readability\n\nShould you be using `WriteIC` like everywhere else?",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122610586,122610586,src/wallet/walletdb.cpp
instagibbs,2017-06-19T02:21:05Z,Perhaps move this into `AddKeyPubKey`,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122611382,122611382,src/wallet/wallet.cpp
instagibbs,2017-06-19T02:36:14Z,Please add braces.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122612369,122612369,src/wallet/wallet.cpp
instagibbs,2017-06-19T02:52:43Z,"suggested rewording:\n\n""check for graceful failure due to any invalid hdwatchonly parameters""",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122613460,122613460,test/functional/hdwatchonly.py
instagibbs,2017-06-19T02:57:10Z,s/was/has/,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122613707,122613707,test/functional/hdwatchonly.py
instagibbs,2017-06-27T16:08:16Z,"I think we may need to generalize this check a bit more. If the script here is a multisig in which the watch-only wallet owns all the keys, this will return false since there is no hdKeypath.\n\nPractically this means that spending 0-conf p2sh funds is a dicey experience that results in ""Insufficient funds"" responses sometimes. \n\nPerhaps something like `pwalletMain->IsHDWatchOnly(CScriptID& ",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124321134,124321134,src/wallet/wallet.cpp
instagibbs,2017-06-27T16:53:55Z,"Since we're not even required to be backwards compatible, I think adding a new piece of key metadata `fIsHDWatchOnly`, and adding that during `importaddress`(or some new call) when all keys are hdwatchonly keys(or a mixture of watchonly and stored private keys?).",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124333056,124333056,src/wallet/wallet.cpp
NicolasDorier,2017-06-28T05:17:49Z,Does `IsTrusted()`  returns `ISMINE_SPENDABLE` when for a multi sig output where we know all the keys when not hdwatchonly?,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124453764,124453764,src/wallet/wallet.cpp
instagibbs,2017-06-28T12:25:28Z,"If you have the private keys, yes, because of check a few lines above.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124525949,124525949,src/wallet/wallet.cpp
NicolasDorier,2017-06-29T04:05:20Z,So your goal is that `importaddress` scriptPubKeys should be considered trusted if we are in hdwatchonly mode ?,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124708027,124708027,src/wallet/wallet.cpp
instagibbs,2017-06-29T12:21:14Z,"If we completely those addresses via hdwatchonly keys and/or privkeys, yes.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124784157,124784157,src/wallet/wallet.cpp
instagibbs,2017-06-29T12:22:36Z,"Currently in this mode you can import a privkey and spend unconfirmed outputs. Likewise you can spend unconfirmed hdwatchonly outputs. You cannot however spend a mixture of the two in a multisig, or pure hdwatchonly p2sh.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124784432,124784432,src/wallet/wallet.cpp
jtimon,2017-07-13T19:28:58Z,it seems like you are repeating yourself a little bit here. Perhaps a common function can be extracted to avoid some code duplication between this if and the next one?,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r127309756,127309756,src/wallet/wallet.cpp
NicolasDorier,2017-07-15T01:28:55Z,"I tried to think about this, but this was not as easy. I preferred keeping this way as it makes review easier: I did not touch what was already working.",https://github.com/bitcoin/bitcoin/pull/9728#discussion_r127573008,127573008,src/wallet/wallet.cpp
jonasschnelli,2017-08-15T19:57:42Z,nit: missing two whitespaces before `(string)`.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133287217,133287217,src/wallet/rpcwallet.cpp
jonasschnelli,2017-08-15T19:58:28Z,nit: brackets,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133287429,133287429,src/wallet/wallet.cpp
jonasschnelli,2017-08-15T20:01:38Z,for other reviewers: the account key level is dropped here because it's hardened in BIP44. Maybe a source code comment would be good.,https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133288137,133288137,src/wallet/wallet.cpp
