[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278588257",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278588257",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278588257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU4ODI1Nw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T09:20:34Z",
    "updated_at": "2017-02-09T09:20:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK (will review in detail and test soon).\r\nI think this is a great feature!\r\nTogether with #9662 this would allow better HWW/Cold-Storage interaction.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278588257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278593539",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278593539",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278593539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU5MzUzOQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T09:44:10Z",
    "updated_at": "2017-02-09T09:44:10Z",
    "author_association": "MEMBER",
    "body": "> The user create a new wallet by removing the old wallet.dat and running ./bitcoind -hdwatchonly=[ExtPubKey base58].\r\n\r\nInstead of removing the wallet, it would also be possible to specify an alternative one with `-wallet`, I guess?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278593539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278599655",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278599655",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278599655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU5OTY1NQ==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T10:11:03Z",
    "updated_at": "2017-02-09T10:11:03Z",
    "author_association": "MEMBER",
    "body": "How does this work, considering that Core is exclusively hardened derivation right now? Or can it only watch non-Core wallets? O.o",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278599655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278602807",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278602807",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278602807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODYwMjgwNw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T10:24:46Z",
    "updated_at": "2017-02-09T10:24:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How does this work, considering that Core is exclusively hardened derivation right now? Or can it only watch non-Core wallets? O.o\r\n\r\nFor the hd-watch-only default keypath, we should probably use Bip44.\r\nThis PR makes much more sense if we would have the flexible key path feature https://github.com/bitcoin/bitcoin/pull/8723",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278602807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278625008",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278625008",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278625008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODYyNTAwOA==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T12:14:21Z",
    "updated_at": "2017-02-09T12:14:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@luke-jr  for watchonly hd I am using non hardened derivation. goal is to eventually combine with flexible path.\r\n\r\n@laanwj yes. What I mean is that if you specify -hdwatchonly on an already existing wallet, you get an error at startup.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278625008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278638183",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278638183",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278638183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODYzODE4Mw==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T13:20:01Z",
    "updated_at": "2017-02-09T13:20:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Travis error not related to this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278638183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278669151",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-278669151",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 278669151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODY2OTE1MQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T15:07:33Z",
    "updated_at": "2017-02-09T15:07:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@NicolasDorier: I think in order to pass travis you need to add `-hdwatchonly` to the check doc script.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278669151/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279931206",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-279931206",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 279931206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTkzMTIwNg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T06:50:17Z",
    "updated_at": "2017-02-15T06:51:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a commit to track P2PK as well. It would be the same behavior as normal wallet. However I am not sure it is the right approach as P2PK are obsolete. An attacker could disrupt service by sending a P2PK output, when the service does not expect it.\r\n\r\nAlso, what for P2WPKH ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279931206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281004042",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-281004042",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 281004042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTAwNDA0Mg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T07:12:47Z",
    "updated_at": "2017-02-20T07:12:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am replicating the behavior of normal wallets, both p2pk and p2pkh are tracked.\r\n\r\nThe test is failing because I am testing wrong parameter usage, and there is no way in the test framework to assert an exception. Ping @MarcoFalke , same problem as reported by jonas on https://github.com/bitcoin/bitcoin/pull/9662",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281004042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281262396",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-281262396",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 281262396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTI2MjM5Ng==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T07:08:13Z",
    "updated_at": "2017-02-21T07:08:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am at loss understanding why there is a permission denied on travis.... I thought I maybe did not had right to /dev/null, and tried to redirect stderr to stdout instead, but same problem. Any idea ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281262396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281339052",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-281339052",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 281339052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTMzOTA1Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T13:05:33Z",
    "updated_at": "2017-02-21T13:05:33Z",
    "author_association": "MEMBER",
    "body": "> Any idea\r\n\r\nTry\r\n\r\n```sh\r\nchmod +x qa/rpc-tests/hdwatchonly.py",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281339052/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286038762",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286038762",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 286038762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjAzODc2Mg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T08:05:01Z",
    "updated_at": "2017-03-13T08:05:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "rebased, and cleaned up the commits for better review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286038762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286187790",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286187790",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 286187790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE4Nzc5MA==",
    "user": {
      "login": "saleemrashid",
      "id": 22301423,
      "node_id": "MDQ6VXNlcjIyMzAxNDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22301423?u=36663ceb0e3247ffe5c05264b54417d80f035701&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saleemrashid",
      "html_url": "https://github.com/saleemrashid",
      "followers_url": "https://api.github.com/users/saleemrashid/followers",
      "following_url": "https://api.github.com/users/saleemrashid/following{/other_user}",
      "gists_url": "https://api.github.com/users/saleemrashid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saleemrashid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saleemrashid/subscriptions",
      "organizations_url": "https://api.github.com/users/saleemrashid/orgs",
      "repos_url": "https://api.github.com/users/saleemrashid/repos",
      "events_url": "https://api.github.com/users/saleemrashid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saleemrashid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T17:49:03Z",
    "updated_at": "2017-03-13T17:49:03Z",
    "author_association": "NONE",
    "body": "As far as I understand, Bitcoin Core uses `m/0'/0'/k'` whereas BIP 44 uses `m/0'/0/k` and `m/0'/1/k`. It makes most sense for this PR to implement `m/0/k` (and, with #9294, `m/1/k`). This allows you to use an `xpub` derived from `m/0'` (or any other account) by your hardware wallet, for example.\r\n\r\nHowever, this means that you are doing one less derivation than with `xprv` in Bitcoin Core. I don't think this is too much of an issue since `m/0'/0'/k'` is in no way compatible with `m/0'/0/k` anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286187790/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286300044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286300044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 286300044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjMwMDA0NA==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T02:05:58Z",
    "updated_at": "2017-03-14T02:05:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@saleemrashid very good point. Will make your change once  #9294 is merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286300044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287408525",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-287408525",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 287408525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQwODUyNQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T16:47:50Z",
    "updated_at": "2017-03-17T16:47:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a great PR. I really would like this to be in 0.15. It makes HWW signing much simpler and could be a pre-step for HWW support in Core.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287408525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287548994",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-287548994",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 287548994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzU0ODk5NA==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T14:15:55Z",
    "updated_at": "2017-03-18T14:15:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will rebase and pass on all your nits and better test/code the case where you pass a xpriv once #9294 get merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287548994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287770212",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-287770212",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 287770212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzc3MDIxMg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T14:10:54Z",
    "updated_at": "2017-03-20T14:10:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "1. Removed the addition of `CChainParams` into `InitLoadWallet`\r\n2. Correctly error if not passing an extpubkey with the right network\r\n3. Testing hdwatchonly parsing",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287770212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292464179",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-292464179",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 292464179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ2NDE3OQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T07:35:30Z",
    "updated_at": "2017-04-07T07:35:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased:\r\n\r\n* Support internal addresses of #9294\r\n* Using BIP44 friendly derivation @saleemrashid",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292464179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306187702",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-306187702",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 306187702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjE4NzcwMg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T13:30:38Z",
    "updated_at": "2017-06-05T13:30:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased @saleemrashid ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306187702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308882369",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-308882369",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 308882369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg4MjM2OQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-15T22:25:11Z",
    "updated_at": "2017-06-15T22:25:11Z",
    "author_association": "MEMBER",
    "body": "needs rebase, will review",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308882369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308912886",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-308912886",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 308912886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODkxMjg4Ng==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T02:04:25Z",
    "updated_at": "2017-06-16T02:04:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308912886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309251477",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309251477",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 309251477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI1MTQ3Nw==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-18T01:54:57Z",
    "updated_at": "2017-06-18T01:54:57Z",
    "author_association": "MEMBER",
    "body": "Is there a way exposed to the user that their wallet is HD watch-only? Might be useful in `getwalletinfo`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309251477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309257306",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309257306",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 309257306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI1NzMwNg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-18T05:15:08Z",
    "updated_at": "2017-06-18T05:15:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "just added info in `getwalletinfo`. I sadly can't compile because of https://github.com/bitcoin/bitcoin/issues/10622 and it seems my travis build is queued and does not want to run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309257306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309323041",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309323041",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 309323041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMyMzA0MQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T02:19:16Z",
    "updated_at": "2017-06-19T02:19:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok my blinded push passed @instagibbs . Added some info in `getwalletinfo` as suggested.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309323041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309336486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309336486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 309336486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMzNjQ4Ng==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T04:34:43Z",
    "updated_at": "2017-06-19T04:34:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the review @instagibbs I addressed your nits, can you re tACK once ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309336486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309421315",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309421315",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 309421315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTQyMTMxNQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T12:10:50Z",
    "updated_at": "2017-06-19T12:10:50Z",
    "author_association": "MEMBER",
    "body": "re-tACK https://github.com/bitcoin/bitcoin/pull/9728/commits/067b117b523208d66ade575e11ca76df964bf6ed",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309421315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309424867",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-309424867",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 309424867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTQyNDg2Nw==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T12:27:52Z",
    "updated_at": "2017-06-19T12:27:52Z",
    "author_association": "MEMBER",
    "body": "We could actually also return the xpub in `validateaddress` as well...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309424867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311136286",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-311136286",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 311136286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTEzNjI4Ng==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T18:04:29Z",
    "updated_at": "2017-06-26T18:05:59Z",
    "author_association": "MEMBER",
    "body": "Included the return in `validateaddress` here: https://github.com/instagibbs/bitcoin/commit/b8e1316721a72fa7a0de4e9c8497746f022e9881\r\n\r\nPlease feel free to take.\r\n\r\nUsing this PR \"in production\" with no issues.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311136286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311559073",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-311559073",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 311559073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTU1OTA3Mw==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-28T05:19:24Z",
    "updated_at": "2017-06-28T05:19:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and included @instagibbs commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311559073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311961589",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-311961589",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 311961589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTk2MTU4OQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-29T13:11:33Z",
    "updated_at": "2017-06-29T13:11:33Z",
    "author_association": "MEMBER",
    "body": "Not trying to completely sidetrack this PR, but this is for future PR consideration:\r\n\r\n@NicolasDorier https://github.com/instagibbs/bitcoin/commit/bb72d12cf6f737e4e7d43a90d7446f12a7e18a60  \r\n\r\nThis is the implementation that works for unconfirmed p2sh multisig where all keys are mixture of imported privkeys and hdwatchonly. Pretty ugly though and quite special-cased. Longer-term I'd look to extend ISMINE instead to have a value which covers this consideration and make this whole IsTrusted logic much simpler.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311961589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312263489",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-312263489",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 312263489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI2MzQ4OQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T13:12:31Z",
    "updated_at": "2017-06-30T13:12:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think making more general case with SPENDABLE_WATCHONLY is preferable.\r\nI sadly don't have too much time these days, but I am interested into fixing it during 27-28.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312263489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/319933982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-319933982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 319933982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTkzMzk4Mg==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T10:41:02Z",
    "updated_at": "2017-08-03T10:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased, will soon open a new PR, as discussed with @instagibbs `watchonlyhd` should be renamed into `externalhd`.  Reason is that we want the generated addresses to behave exactly as if they were done by a normal wallet which has the keys. Those generated addresses might be able to be signed correclty by a HW module contrary to a normal watchonly address imported by `importaddress`.\r\n\r\nThus we keys generated by externalhd wallet should not be considered watchonly.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/319933982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322574186",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322574186",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 322574186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjU3NDE4Ng==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T20:07:40Z",
    "updated_at": "2017-08-15T20:07:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re-Concept ACK. This should really be something we want in 0.16.\r\nI dislike the fact that the extended pubkey needs to be provided via a startup argument, but I guess as long as there is no runtime wallet creation RPC we have to go with that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322574186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322574204",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322574204",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 322574204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjU3NDIwNA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T20:07:45Z",
    "updated_at": "2017-08-15T20:07:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322574204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322953243",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322953243",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 322953243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjk1MzI0Mw==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T02:39:02Z",
    "updated_at": "2017-08-17T02:39:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli  We talked about this PR at Tokyo with @instagibbs and @sipa . Basically we agreed that contrary to what this PR does, the generated keys should not be considered as WATCH_ONLY but as SPENDABLE, even if core do not have the keys, it is still signable.\r\n\r\nThis mean that we need to refactor the wallet to first decouple a new class: `WatchOnlyKeyStore` from the `CCryptoKeyStore`. Then replace `CCryptoKeyStore` by a `CExternalHDKeyStore` to handle signing.\r\n\r\nI tried to do that in a separate PR, but this goes deep into the rabbit hole, I will need more work on it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322953243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340350594",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-340350594",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 340350594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM1MDU5NA==",
    "user": {
      "login": "wtogami",
      "id": 93665,
      "node_id": "MDQ6VXNlcjkzNjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtogami",
      "html_url": "https://github.com/wtogami",
      "followers_url": "https://api.github.com/users/wtogami/followers",
      "following_url": "https://api.github.com/users/wtogami/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtogami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
      "organizations_url": "https://api.github.com/users/wtogami/orgs",
      "repos_url": "https://api.github.com/users/wtogami/repos",
      "events_url": "https://api.github.com/users/wtogami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtogami/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T05:56:36Z",
    "updated_at": "2017-10-30T05:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is the status of this?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340350594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340882139",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-340882139",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 340882139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDg4MjEzOQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T19:34:02Z",
    "updated_at": "2017-10-31T19:35:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "So @saleemrashid is using it for hardware support in Bitcoin Core. I am using it in prod for quite a while, so this is stable.\r\n\r\nHowever, this is not the best way to do, ideally we should do like I detailed here https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-322953243 .\r\nThis however requires deeper refactoring which I started on https://github.com/bitcoin/bitcoin/pull/10980 .\r\n\r\nThis would need deeper review, and sadly I am out of time these days to follow through and keep rebasing. So if someone wants to take it over, it would probably be better.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340882139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342267473",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-342267473",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 342267473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjI2NzQ3Mw==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-06T19:57:23Z",
    "updated_at": "2017-11-06T19:57:23Z",
    "author_association": "MEMBER",
    "body": "For those interested, I'm rebasing at https://github.com/instagibbs/bitcoin/tree/externalhd2",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342267473/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366433316",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366433316",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 366433316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQzMzMxNg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-17T10:54:15Z",
    "updated_at": "2018-02-17T10:54:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebase required...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366433316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366446947",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366446947",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 366446947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ0Njk0Nw==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-17T15:02:45Z",
    "updated_at": "2018-02-17T15:02:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@instagibbs  is maintaining a rebased version I think do you want to supersede this PR?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366446947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366447344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366447344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 366447344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ0NzM0NA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-17T15:09:08Z",
    "updated_at": "2018-02-17T15:09:08Z",
    "author_association": "MEMBER",
    "body": "Sure I can open a replacement PR if people are interested. I'm not actively pushing for merge at this time however.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366447344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366447924",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-366447924",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 366447924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ0NzkyNA==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-17T15:18:45Z",
    "updated_at": "2018-02-17T15:18:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the reason I put that back on the shelf, is that I think we want to do that after a major overall wallet refactoring that @sipa  proposed on https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2#future-design\r\n\r\nThis PR is creating new addresses as watch-only, this is however not what we want. We want addresses to be `MINE`, even if we don't have private key. Managing to refactor the code to reach this goal is a can of worms which might be solved by @sipa redesign proposal.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366447924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370854569",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-370854569",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9728",
    "id": 370854569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg1NDU2OQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:08:59Z",
    "updated_at": "2018-03-06T17:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this it seems that we need deeper wallet refactoring as specified by sipa on https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2#future-design \r\n\r\n@instagibbs is maintaining https://github.com/instagibbs/bitcoin/tree/externalhd2 for those interested to continue this work.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370854569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259230",
    "pull_request_review_id": 20958705,
    "id": 100259230,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDI1OTIzMA==",
    "diff_hunk": "@@ -59,6 +63,10 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion <= SUPPORT_WATCHONLY_VERSION) {",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 18,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "4bca1ceca05e8bdcd5a3c60451ddff89a3741d2a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`>=`?",
    "created_at": "2017-02-09T09:15:43Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259230",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259230"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259230"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259230/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259436",
    "pull_request_review_id": 20958918,
    "id": 100259436,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDI1OTQzNg==",
    "diff_hunk": "@@ -93,72 +94,116 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n+    bool hasSecret = true;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        hasSecret = DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (hasSecret)\n+    {\n+        assert(secret.VerifyPubKey(pubkey));\n+    }\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(hasSecret) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(GetScriptForDestination(pubkey.GetID())))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "4bca1ceca05e8bdcd5a3c60451ddff89a3741d2a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`s/AddKey/AddWatchOnly/`",
    "created_at": "2017-02-09T09:16:36Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259868",
    "pull_request_review_id": 20959354,
    "id": 100259868,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDI1OTg2OA==",
    "diff_hunk": "@@ -93,72 +94,116 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n+    bool hasSecret = true;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        hasSecret = DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (hasSecret)\n+    {\n+        assert(secret.VerifyPubKey(pubkey));\n+    }\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(hasSecret) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(GetScriptForDestination(pubkey.GetID())))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n     return pubkey;\n }\n \n void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n {\n+    CPubKey pubKey;\n+    if(!DeriveNewChildKey(metadata, secret, pubKey))\n+        throw std::runtime_error(std::string(__func__) + \": Private key not available for this wallet\");\n+}\n+\n+bool CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n+{\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+        return true;\n+    }\n+    else if (hdChain.isWatchOnly) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0\n+        CExtPubKey externalChainChildKey; //key at m/0/0\n+        CExtPubKey childKey;              //key at m/0/0/<n>\n+\n+        // derive m/0\n+        masterKey.Derive(accountKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive m/0/0\n+        accountKey.Derive(externalChainChildKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_NONHARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0/0/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveWatchOnly(GetScriptForDestination(childKey.pubkey.GetID())));\n+        pubKey = childKey.pubkey;\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+        return false;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "4bca1ceca05e8bdcd5a3c60451ddff89a3741d2a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think returning false in case of `isWatchOnly` is confusing.\r\nIMO better set the `hasSecret` boolean with another check of `hdChain.isWatchOnly`.",
    "created_at": "2017-02-09T09:18:59Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259868",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259868"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100259868"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100259868/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 203,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100266332",
    "pull_request_review_id": 20965936,
    "id": 100266332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDI2NjMzMg==",
    "diff_hunk": "@@ -93,72 +94,116 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n+    bool hasSecret = true;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        hasSecret = DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (hasSecret)\n+    {\n+        assert(secret.VerifyPubKey(pubkey));\n+    }\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(hasSecret) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(GetScriptForDestination(pubkey.GetID())))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n     return pubkey;\n }\n \n void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n {\n+    CPubKey pubKey;\n+    if(!DeriveNewChildKey(metadata, secret, pubKey))\n+        throw std::runtime_error(std::string(__func__) + \": Private key not available for this wallet\");\n+}\n+\n+bool CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n+{\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+        return true;\n+    }\n+    else if (hdChain.isWatchOnly) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0\n+        CExtPubKey externalChainChildKey; //key at m/0/0\n+        CExtPubKey childKey;              //key at m/0/0/<n>\n+\n+        // derive m/0\n+        masterKey.Derive(accountKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive m/0/0\n+        accountKey.Derive(externalChainChildKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_NONHARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0/0/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveWatchOnly(GetScriptForDestination(childKey.pubkey.GetID())));\n+        pubKey = childKey.pubkey;\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+        return false;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "4bca1ceca05e8bdcd5a3c60451ddff89a3741d2a",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can replace returns bool by void, and make the client responsible to test the validity of the returned Key.\r\n\r\nBut I fear that a new user would assume that DeriveNewKey always returns a valid CKey.",
    "created_at": "2017-02-09T09:45:29Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100266332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100266332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100266332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100266332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 203,
    "side": "RIGHT",
    "in_reply_to_id": 100259868
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100269433",
    "pull_request_review_id": 20969169,
    "id": 100269433,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDI2OTQzMw==",
    "diff_hunk": "@@ -93,72 +94,116 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n+    bool hasSecret = true;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        hasSecret = DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (hasSecret)\n+    {\n+        assert(secret.VerifyPubKey(pubkey));\n+    }\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(hasSecret) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(GetScriptForDestination(pubkey.GetID())))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n     return pubkey;\n }\n \n void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n {\n+    CPubKey pubKey;\n+    if(!DeriveNewChildKey(metadata, secret, pubKey))\n+        throw std::runtime_error(std::string(__func__) + \": Private key not available for this wallet\");\n+}\n+\n+bool CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n+{\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+        return true;\n+    }\n+    else if (hdChain.isWatchOnly) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0\n+        CExtPubKey externalChainChildKey; //key at m/0/0\n+        CExtPubKey childKey;              //key at m/0/0/<n>\n+\n+        // derive m/0\n+        masterKey.Derive(accountKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive m/0/0\n+        accountKey.Derive(externalChainChildKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_NONHARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0/0/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveWatchOnly(GetScriptForDestination(childKey.pubkey.GetID())));\n+        pubKey = childKey.pubkey;\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+        return false;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "4bca1ceca05e8bdcd5a3c60451ddff89a3741d2a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. I once did a PR where we separate the key/pubkey records: https://github.com/bitcoin/bitcoin/pull/9298\r\nI guess this would be the cleaner solution... but maybe later.",
    "created_at": "2017-02-09T09:58:35Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100269433",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100269433"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r100269433"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100269433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 203,
    "side": "RIGHT",
    "in_reply_to_id": 100259868
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102132683",
    "pull_request_review_id": 22878316,
    "id": 102132683,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjEzMjY4Mw==",
    "diff_hunk": "@@ -352,7 +355,20 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n \n     return proxy\n \n-def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n+def assert_start_raises_init_error(dirname, extra_args=None, assert_msg=None):\n+    try:\n+        rpcs = start_nodes(1, dirname, extra_args, ignorestderr=True)\n+        stop_nodes(rpcs)\n+        if assert_msg is None:\n+            assert_msg = \"bitcoind should have exited with an error\"\n+        raise AssertionError(assert_msg)\n+    except AssertionError as e:\n+        raise\n+    except Exception as e:\n+        assert('bitcoind exited' in str(e)) #node must have shutdown\n+    \n+\n+def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None, ignorestderr=False):",
    "path": "qa/rpc-tests/test_framework/util.py",
    "position": null,
    "original_position": 39,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "fc8f8111a18e2119861011d91d8a8a3fd35bb9b2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this additional optional arg required? I don't think this will ever be used.\r\n\r\nEdit: I see you are doing it for consistency, so might be fine...",
    "created_at": "2017-02-21T05:01:32Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102132683",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102132683"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102132683"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102132683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 371,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102133765",
    "pull_request_review_id": 22879353,
    "id": 102133765,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjEzMzc2NQ==",
    "diff_hunk": "@@ -352,7 +355,20 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n \n     return proxy\n \n-def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n+def assert_start_raises_init_error(dirname, extra_args=None, assert_msg=None):\n+    try:\n+        rpcs = start_nodes(1, dirname, extra_args, ignorestderr=True)\n+        stop_nodes(rpcs)\n+        if assert_msg is None:\n+            assert_msg = \"bitcoind should have exited with an error\"\n+        raise AssertionError(assert_msg)\n+    except AssertionError as e:\n+        raise\n+    except Exception as e:\n+        assert('bitcoind exited' in str(e)) #node must have shutdown\n+    \n+\n+def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None, ignorestderr=False):",
    "path": "qa/rpc-tests/test_framework/util.py",
    "position": null,
    "original_position": 39,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "fc8f8111a18e2119861011d91d8a8a3fd35bb9b2",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "it is used by `assert_start_raises_init_error`",
    "created_at": "2017-02-21T05:18:07Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102133765",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102133765"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102133765"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102133765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 371,
    "side": "RIGHT",
    "in_reply_to_id": 102132683
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102201781",
    "pull_request_review_id": 22949539,
    "id": 102201781,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjIwMTc4MQ==",
    "diff_hunk": "@@ -352,7 +355,20 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n \n     return proxy\n \n-def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n+def assert_start_raises_init_error(dirname, extra_args=None, assert_msg=None):\n+    try:\n+        rpcs = start_nodes(1, dirname, extra_args, ignorestderr=True)\n+        stop_nodes(rpcs)\n+        if assert_msg is None:\n+            assert_msg = \"bitcoind should have exited with an error\"\n+        raise AssertionError(assert_msg)\n+    except AssertionError as e:\n+        raise\n+    except Exception as e:\n+        assert('bitcoind exited' in str(e)) #node must have shutdown\n+    \n+\n+def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None, ignorestderr=False):",
    "path": "qa/rpc-tests/test_framework/util.py",
    "position": null,
    "original_position": 39,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "fc8f8111a18e2119861011d91d8a8a3fd35bb9b2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, right. I missed the plural s.",
    "created_at": "2017-02-21T13:04:06Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102201781",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102201781"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r102201781"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102201781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 371,
    "side": "RIGHT",
    "in_reply_to_id": 102132683
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106679482",
    "pull_request_review_id": 27616739,
    "id": 106679482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY3OTQ4Mg==",
    "diff_hunk": "@@ -47,8 +47,12 @@ class CHDChain\n public:\n     uint32_t nExternalChainCounter;\n     CKeyID masterKeyID; //!< master key hash160\n+    CExtPubKey masterPubKey;\n+    bool isWatchOnly = false;\n \n-    static const int CURRENT_VERSION = 1;\n+    static const int FIRST_VERSION = 1;\n+    static const int SUPPORT_WATCHONLY_VERSION = 2;\n+    static const int CURRENT_VERSION = 2;",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 10,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `CURRENT_VERSION = SUPPORT_WATCHONLY_VERSION`.",
    "created_at": "2017-03-17T15:40:08Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106679482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106679482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106679482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106679482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106681973",
    "pull_request_review_id": 27619417,
    "id": 106681973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY4MTk3Mw==",
    "diff_hunk": "@@ -91,71 +92,103 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    }\n+    else if (IsHDWatchOnly()) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 98,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To make this compatible with BIP44, can we not just use `m` as the BIP44 account key. No hardened derivation would then be involved and users could use their BIP44 xpub's to generate watchonlys.\r\nThe `externalChainChildKey` would then be `m/0` (instead of `m/0/0`)",
    "created_at": "2017-03-17T15:50:00Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106681973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106681973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106681973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106681973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106682206",
    "pull_request_review_id": 27619696,
    "id": 106682206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY4MjIwNg==",
    "diff_hunk": "@@ -91,71 +92,103 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    }\n+    else if (IsHDWatchOnly()) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0\n+        CExtPubKey externalChainChildKey; //key at m/0/0\n+        CExtPubKey childKey;              //key at m/0/0/<n>\n+\n+        // derive m/0\n+        masterKey.Derive(accountKey, BIP32_NONHARDENED_KEY_LIMIT);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 103,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IMO this constant (`BIP32_NONHARDENED_KEY_LIMIT`) is superfluous. Just use `0`.",
    "created_at": "2017-03-17T15:51:00Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106682206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106682206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106682206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106682206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 172,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106682399",
    "pull_request_review_id": 27619897,
    "id": 106682399,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY4MjM5OQ==",
    "diff_hunk": "@@ -91,71 +92,103 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    }\n+    else if (IsHDWatchOnly()) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0\n+        CExtPubKey externalChainChildKey; //key at m/0/0\n+        CExtPubKey childKey;              //key at m/0/0/<n>\n+\n+        // derive m/0\n+        masterKey.Derive(accountKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive m/0/0\n+        accountKey.Derive(externalChainChildKey, BIP32_NONHARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_NONHARDENED_KEY_LIMIT);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 110,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also here, ... just use `hdChain.nExternalChainCounter` instead of `hdChain.nExternalChainCounter | BIP32_NONHARDENED_KEY_LIMIT` (no need to bitwise OR it with 0).",
    "created_at": "2017-03-17T15:51:45Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106682399",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106682399"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106682399"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106682399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 179,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106683872",
    "pull_request_review_id": 27621435,
    "id": 106683872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY4Mzg3Mg==",
    "diff_hunk": "@@ -91,71 +92,103 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think there is no way to verify the correctness of the derived pubkey?",
    "created_at": "2017-03-17T15:57:23Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106683872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106683872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106683872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106683872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106692430",
    "pull_request_review_id": 27630896,
    "id": 106692430,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY5MjQzMA==",
    "diff_hunk": "@@ -59,6 +63,11 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion >= SUPPORT_WATCHONLY_VERSION) {\n+            READWRITE(isWatchOnly);\n+            if(isWatchOnly)\n+                READWRITE(masterPubKey);",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 21,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Somehow this PR was crashing here because of \r\n```\r\nAssertion failed: (pubkey.size() == 33), function Encode, file pubkey.cpp, line 255.\r\n```\r\n\r\nIt looks like that my tested `tpub` was non compressed? How is that even possible?\r\nLLDB told me `pubkey = (vch = unsigned char [65] @ 0x00007fd16736976c)`.",
    "created_at": "2017-03-17T16:35:29Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106692430",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106692430"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106692430"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106692430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106692695",
    "pull_request_review_id": 27631184,
    "id": 106692695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY5MjY5NQ==",
    "diff_hunk": "@@ -59,6 +63,11 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion >= SUPPORT_WATCHONLY_VERSION) {\n+            READWRITE(isWatchOnly);\n+            if(isWatchOnly)\n+                READWRITE(masterPubKey);",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 21,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wait... I was using the extended private key instead. Though, I guess it should not crash in this case.",
    "created_at": "2017-03-17T16:36:49Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106692695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106692695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106692695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106692695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 106692430
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106694280",
    "pull_request_review_id": 27632920,
    "id": 106694280,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY5NDI4MA==",
    "diff_hunk": "@@ -3618,14 +3714,41 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+\n+    std::string hdWatchOnly = GetArg(\"-hdwatchonly\", \"\");\n+    CExtPubKey extPubKey;\n+    if (!hdWatchOnly.empty()) {\n+        CBitcoinExtPubKey bitcoinExtPubKey;\n+        auto extpubKeyPrefix = chainparams.Base58Prefix(CChainParams::Base58Type::EXT_PUBLIC_KEY);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 281,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm.. I think this is incorrect. I could load a xpub (mainnet) on regtest.\r\nShouldn't `CBitcoinExtPubKey(\"<x|tpub>\")` do the check for the correct encoding according to the chainparams?",
    "created_at": "2017-03-17T16:44:21Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106694280",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106694280"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106694280"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106694280/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3722,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106694984",
    "pull_request_review_id": 27633652,
    "id": 106694984,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjY5NDk4NA==",
    "diff_hunk": "@@ -3618,14 +3714,41 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+\n+    std::string hdWatchOnly = GetArg(\"-hdwatchonly\", \"\");\n+    CExtPubKey extPubKey;\n+    if (!hdWatchOnly.empty()) {\n+        CBitcoinExtPubKey bitcoinExtPubKey;\n+        auto extpubKeyPrefix = chainparams.Base58Prefix(CChainParams::Base58Type::EXT_PUBLIC_KEY);\n+        if (!bitcoinExtPubKey.SetString(hdWatchOnly.c_str(), extpubKeyPrefix.size())) {\n+            InitError(_(\"Invalid ExtPubKey format\"));\n+            return NULL;\n+        }\n+        extPubKey = bitcoinExtPubKey.GetKey();\n+    }\n+\n+    if (!fFirstRun && !hdWatchOnly.empty()) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 289,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I got no warning when I started bitcoind again with a different `-hdwatchonly=xpub`.\r\nHere there should be a check wether the wallet has already a watch-only xpub set, and if the user provides one, and it's different, it should warn or stop.",
    "created_at": "2017-03-17T16:47:28Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106694984",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106694984"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106694984"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106694984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3730,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106700735",
    "pull_request_review_id": 27639843,
    "id": 106700735,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjcwMDczNQ==",
    "diff_hunk": "@@ -91,71 +92,103 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    }\n+    else if (IsHDWatchOnly()) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 98,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "saleemrashid",
      "id": 22301423,
      "node_id": "MDQ6VXNlcjIyMzAxNDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22301423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saleemrashid",
      "html_url": "https://github.com/saleemrashid",
      "followers_url": "https://api.github.com/users/saleemrashid/followers",
      "following_url": "https://api.github.com/users/saleemrashid/following{/other_user}",
      "gists_url": "https://api.github.com/users/saleemrashid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saleemrashid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saleemrashid/subscriptions",
      "organizations_url": "https://api.github.com/users/saleemrashid/orgs",
      "repos_url": "https://api.github.com/users/saleemrashid/repos",
      "events_url": "https://api.github.com/users/saleemrashid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saleemrashid/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jonasschnelli https://github.com/bitcoin/bitcoin/pull/9728#issuecomment-286187790",
    "created_at": "2017-03-17T17:14:32Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106700735",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106700735"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106700735"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106700735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT",
    "in_reply_to_id": 106681973
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106840319",
    "pull_request_review_id": 27780239,
    "id": 106840319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjg0MDMxOQ==",
    "diff_hunk": "@@ -3618,14 +3714,41 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+\n+    std::string hdWatchOnly = GetArg(\"-hdwatchonly\", \"\");\n+    CExtPubKey extPubKey;\n+    if (!hdWatchOnly.empty()) {\n+        CBitcoinExtPubKey bitcoinExtPubKey;\n+        auto extpubKeyPrefix = chainparams.Base58Prefix(CChainParams::Base58Type::EXT_PUBLIC_KEY);\n+        if (!bitcoinExtPubKey.SetString(hdWatchOnly.c_str(), extpubKeyPrefix.size())) {\n+            InitError(_(\"Invalid ExtPubKey format\"));\n+            return NULL;\n+        }\n+        extPubKey = bitcoinExtPubKey.GetKey();\n+    }\n+\n+    if (!fFirstRun && !hdWatchOnly.empty()) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 289,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this is normally checked. Actually I am testing it on https://github.com/bitcoin/bitcoin/pull/9728/files#diff-08fcd10ff4d7d4f9f0249ba978b3b4d4R49 this is strange... actual check done on https://github.com/bitcoin/bitcoin/pull/9728/files#diff-b2bb174788c7409b671c46ccc86034bdR3731 can you verify that you did not made another mistake ?",
    "created_at": "2017-03-20T06:44:29Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106840319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106840319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106840319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106840319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3730,
    "side": "RIGHT",
    "in_reply_to_id": 106694984
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106840701",
    "pull_request_review_id": 27780616,
    "id": 106840701,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjg0MDcwMQ==",
    "diff_hunk": "@@ -59,6 +63,11 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion >= SUPPORT_WATCHONLY_VERSION) {\n+            READWRITE(isWatchOnly);\n+            if(isWatchOnly)\n+                READWRITE(masterPubKey);",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 21,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How is it possible to get an extended private key here? if you provided a xpriv instead of xpub, it should have crashed at startup.",
    "created_at": "2017-03-20T06:49:31Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106840701",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106840701"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106840701"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106840701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 106692430
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106844068",
    "pull_request_review_id": 27783848,
    "id": 106844068,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjg0NDA2OA==",
    "diff_hunk": "@@ -59,6 +63,11 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion >= SUPPORT_WATCHONLY_VERSION) {\n+            READWRITE(isWatchOnly);\n+            if(isWatchOnly)\n+                READWRITE(masterPubKey);",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 21,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I used a `tpriv` which made this PR proceeding the hdwatchonly initialisation but then crashed at this point. Haven't looked into the details why the `tpriv` was accepted during init.",
    "created_at": "2017-03-20T07:31:08Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106844068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106844068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106844068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106844068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 106692430
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106844134",
    "pull_request_review_id": 27783901,
    "id": 106844134,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjg0NDEzNA==",
    "diff_hunk": "@@ -91,71 +92,103 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, pubkey);\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubKey)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key)) {\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            metadata.hdMasterKeyID = hdChain.masterKeyID;\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubKey = childKey.key.GetPubKey();\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    }\n+    else if (IsHDWatchOnly()) {\n+        CExtPubKey& masterKey = hdChain.masterPubKey;             //hd master key\n+        CExtPubKey accountKey;            //key at m/0",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 98,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah.. Wasn't aware that @saleemrashid already pointed this out. Great.",
    "created_at": "2017-03-20T07:31:55Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106844134",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106844134"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106844134"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106844134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT",
    "in_reply_to_id": 106681973
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106845495",
    "pull_request_review_id": 27785406,
    "id": 106845495,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjg0NTQ5NQ==",
    "diff_hunk": "@@ -59,6 +63,11 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion >= SUPPORT_WATCHONLY_VERSION) {\n+            READWRITE(isWatchOnly);\n+            if(isWatchOnly)\n+                READWRITE(masterPubKey);",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 21,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ah OK I know why... I do not verify the prefix",
    "created_at": "2017-03-20T07:49:14Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106845495",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106845495"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106845495"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106845495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 106692430
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106908758",
    "pull_request_review_id": 27852122,
    "id": 106908758,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjkwODc1OA==",
    "diff_hunk": "@@ -59,6 +63,11 @@ class CHDChain\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n         READWRITE(masterKeyID);\n+        if (this->nVersion >= SUPPORT_WATCHONLY_VERSION) {\n+            READWRITE(isWatchOnly);\n+            if(isWatchOnly)\n+                READWRITE(masterPubKey);",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 21,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "d15d07e20531c6e29c8e1d6e1c1558cb4ebb9ad5",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Issue fixed and tested",
    "created_at": "2017-03-20T14:08:14Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106908758",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106908758"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r106908758"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106908758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 106692430
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122544229",
    "pull_request_review_id": 44675611,
    "id": 122544229,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjU0NDIyOQ==",
    "diff_hunk": "@@ -3839,6 +3920,26 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+\n+    std::string hdWatchOnly = GetArg(\"-hdwatchonly\", \"\");\n+    CExtPubKey extPubKey;\n+    if (!hdWatchOnly.empty()) {\n+        CBitcoinExtPubKey bitcoinExtPubKey(hdWatchOnly);\n+        extPubKey = bitcoinExtPubKey.GetKey();\n+        if (!extPubKey.pubkey.IsFullyValid()) {\n+            InitError(_(\"Invalid ExtPubKey format\"));\n+            return NULL;\n+        }\n+        \n+        if (!fFirstRun) {\n+            if (!walletInstance->IsHDWatchOnly() || \n+                walletInstance->GetHDChain().masterKeyID != extPubKey.pubkey.GetID()) {\n+                InitError(_(\"Cannot specify hdwatchonly on an already existing wallet\"));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 261,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "041763e1351557503711497a407e26f8200135ec",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Message should be something like \"Cannot specify new hdwatchonly on an already existing wallet\"",
    "created_at": "2017-06-16T22:20:28Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122544229",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122544229"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122544229"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122544229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3955,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122607800",
    "pull_request_review_id": 44675611,
    "id": 122607800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYwNzgwMA==",
    "diff_hunk": "@@ -2400,7 +2400,8 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used)\\n\"\n             \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\"\n+            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\" + \n+            \"  \\\"hdwatchonlykey\\\": \\\"<hdpubkey>\\\" (string) the HD pubkey used for key derivation in hdwatchonly mode\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "7ededffb3f7c2055f12a09b2abca469ca3199185",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"extended pubkey\"",
    "created_at": "2017-06-19T01:19:53Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122607800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122607800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122607800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122607800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2404,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122609340",
    "pull_request_review_id": 44675611,
    "id": 122609340,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYwOTM0MA==",
    "diff_hunk": "@@ -111,9 +111,7 @@ CPubKey CWallet::GenerateNewKey(bool internal)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n     if (!IsHDWatchOnly())\n-    {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "a42aafc0245fa132df296372062e7273b30f6df0",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Braces are the recommended code style, not sure why they're being removed.",
    "created_at": "2017-06-19T01:47:04Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122609340",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122609340"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122609340"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122609340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122610586",
    "pull_request_review_id": 44675611,
    "id": 122610586,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYxMDU4Ng==",
    "diff_hunk": "@@ -57,6 +57,14 @@ bool CWalletDB::EraseTx(uint256 hash)\n     return EraseIC(std::make_pair(std::string(\"tx\"), hash));\n }\n \n+bool CWalletDB::WriteKeyMeta(const CPubKey& vchPubKey, const CKeyMetadata& keyMeta)\n+{\n+    if (!batch.Write(std::make_pair(std::string(\"keymeta\"), vchPubKey),",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "a42aafc0245fa132df296372062e7273b30f6df0",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please add braces for readability\r\n\r\nShould you be using `WriteIC` like everywhere else?",
    "created_at": "2017-06-19T02:08:04Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122610586",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122610586"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122610586"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122610586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122611382",
    "pull_request_review_id": 44675611,
    "id": 122611382,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYxMTM4Mg==",
    "diff_hunk": "@@ -93,77 +93,115 @@ CPubKey CWallet::GenerateNewKey(bool internal)\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n+        DeriveNewChildKey(metadata, secret, pubkey, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())\n+        assert(secret.VerifyPubKey(pubkey));\n \n     mapKeyMetadata[pubkey.GetID()] = metadata;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "26025bc52e0597a12da377be2910af64d5a18085",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps move this into `AddKeyPubKey`",
    "created_at": "2017-06-19T02:21:05Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122611382",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122611382"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122611382"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122611382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122612369",
    "pull_request_review_id": 44675611,
    "id": 122612369,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYxMjM2OQ==",
    "diff_hunk": "@@ -93,77 +93,115 @@ CPubKey CWallet::GenerateNewKey(bool internal)\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n+        DeriveNewChildKey(metadata, secret, pubkey, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n+    if (!IsHDWatchOnly())",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "26025bc52e0597a12da377be2910af64d5a18085",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please add braces.",
    "created_at": "2017-06-19T02:36:14Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122612369",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122612369"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122612369"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122612369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 113,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122613460",
    "pull_request_review_id": 44675611,
    "id": 122613460,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYxMzQ2MA==",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWatchOnlyTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_network(self, split=False):\n+        self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, [['-hdwatchonly=tpubD6NzVbkrYhZ4YMc8VtVEChv2fv6eB5RK8ZKmn52hFuqmbGwauf1NjuzzscFzikw7sa41mdE46d9w274Gw29WuFkeVw2VESXxgcMwBQ6NNSf'],[]])\n+        self.is_network_split=False\n+\n+    def run_test(self):\n+        print(\"Mining blocks...\")\n+        \n+        # tprv8ZgxMBicQKsPetaLcEpdoJFv6tai1kEQZFizVYzPqe3NkngpHGBnZRP8hUVrrxgaXgckrr2V38HKMTzPMGG5cJq6RymQ1Bn8v9ACJgh9RvG\n+\n+        # Can generate change address\n+        address = self.nodes[0].getrawchangeaddress()\n+        assert_equal(address, 'mvumWx631FFTDtgWP55ph623xvUfp5Y1xz')\n+        validated_address = self.nodes[0].validateaddress(address)\n+        assert_equal(validated_address['hdkeypath'], 'm/1/0')\n+        address = self.nodes[0].getrawchangeaddress()\n+        assert_equal(address, 'mkrg25GL23RAdnhP6Ttxtu7DzgknmZz3yc')\n+        validated_address = self.nodes[0].validateaddress(address)\n+        assert_equal(validated_address['hdkeypath'], 'm/1/1')\n+\n+        # Check if getwalletinfo show the hd pubkey info\n+        assert_equal(self.nodes[0].getwalletinfo()[\"hdwatchonlykey\"], 'tpubD6NzVbkrYhZ4YMc8VtVEChv2fv6eB5RK8ZKmn52hFuqmbGwauf1NjuzzscFzikw7sa41mdE46d9w274Gw29WuFkeVw2VESXxgcMwBQ6NNSf')\n+\n+        # Can generate new address (m/0/0 is generated by default at wallet creation)\n+        address = self.nodes[0].getnewaddress()\n+        assert_equal(address, 'mxKeRQP6gTdCW6jHhn9FW8bGXD8W1UpR6n')\n+        validated_address = self.nodes[0].validateaddress(address)\n+        assert_equal(validated_address['hdkeypath'], 'm/0/1')\n+\n+        self.nodes[0].generatetoaddress(1, address)\n+        self.nodes[0].generate(101)\n+\n+        unspent = self.nodes[0].listunspent()\n+        assert_equal(len(unspent), 2)\n+\n+        # generatetoaddress with p2pkh\n+        assert_equal(unspent[0]['solvable'], True)\n+\n+        # generate mine to p2pk, so let's just be sure we can solve it\n+        assert_equal(unspent[1]['solvable'], True)\n+\n+        self.stop_nodes()\n+\n+        # check fails gracefully if any mess up with hdwatchonly parameter",
    "path": "test/functional/hdwatchonly.py",
    "position": null,
    "original_position": 58,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "26025bc52e0597a12da377be2910af64d5a18085",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "suggested rewording:\r\n\r\n\"check for graceful failure due to any invalid hdwatchonly parameters\"",
    "created_at": "2017-06-19T02:52:43Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122613460",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122613460"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122613460"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122613460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122613707",
    "pull_request_review_id": 44675611,
    "id": 122613707,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjYxMzcwNw==",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class HDWatchOnlyTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_network(self, split=False):\n+        self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, [['-hdwatchonly=tpubD6NzVbkrYhZ4YMc8VtVEChv2fv6eB5RK8ZKmn52hFuqmbGwauf1NjuzzscFzikw7sa41mdE46d9w274Gw29WuFkeVw2VESXxgcMwBQ6NNSf'],[]])\n+        self.is_network_split=False\n+\n+    def run_test(self):\n+        print(\"Mining blocks...\")\n+        \n+        # tprv8ZgxMBicQKsPetaLcEpdoJFv6tai1kEQZFizVYzPqe3NkngpHGBnZRP8hUVrrxgaXgckrr2V38HKMTzPMGG5cJq6RymQ1Bn8v9ACJgh9RvG\n+\n+        # Can generate change address\n+        address = self.nodes[0].getrawchangeaddress()\n+        assert_equal(address, 'mvumWx631FFTDtgWP55ph623xvUfp5Y1xz')\n+        validated_address = self.nodes[0].validateaddress(address)\n+        assert_equal(validated_address['hdkeypath'], 'm/1/0')\n+        address = self.nodes[0].getrawchangeaddress()\n+        assert_equal(address, 'mkrg25GL23RAdnhP6Ttxtu7DzgknmZz3yc')\n+        validated_address = self.nodes[0].validateaddress(address)\n+        assert_equal(validated_address['hdkeypath'], 'm/1/1')\n+\n+        # Check if getwalletinfo show the hd pubkey info\n+        assert_equal(self.nodes[0].getwalletinfo()[\"hdwatchonlykey\"], 'tpubD6NzVbkrYhZ4YMc8VtVEChv2fv6eB5RK8ZKmn52hFuqmbGwauf1NjuzzscFzikw7sa41mdE46d9w274Gw29WuFkeVw2VESXxgcMwBQ6NNSf')\n+\n+        # Can generate new address (m/0/0 is generated by default at wallet creation)\n+        address = self.nodes[0].getnewaddress()\n+        assert_equal(address, 'mxKeRQP6gTdCW6jHhn9FW8bGXD8W1UpR6n')\n+        validated_address = self.nodes[0].validateaddress(address)\n+        assert_equal(validated_address['hdkeypath'], 'm/0/1')\n+\n+        self.nodes[0].generatetoaddress(1, address)\n+        self.nodes[0].generate(101)\n+\n+        unspent = self.nodes[0].listunspent()\n+        assert_equal(len(unspent), 2)\n+\n+        # generatetoaddress with p2pkh\n+        assert_equal(unspent[0]['solvable'], True)\n+\n+        # generate mine to p2pk, so let's just be sure we can solve it\n+        assert_equal(unspent[1]['solvable'], True)\n+\n+        self.stop_nodes()\n+\n+        # check fails gracefully if any mess up with hdwatchonly parameter\n+        assert_start_raises_init_error(0, self.options.tmpdir, ['-hdwatchonly=eopipwd'], \n+        'Invalid ExtPubKey format')\n+        assert_start_raises_init_error(0, self.options.tmpdir, ['-hdwatchonly=tprv8ZgxMBicQKsPetaLcEpdoJFv6tai1kEQZFizVYzPqe3NkngpHGBnZRP8hUVrrxgaXgckrr2V38HKMTzPMGG5cJq6RymQ1Bn8v9ACJgh9RvG'], \n+        'Invalid ExtPubKey format')\n+        assert_start_raises_init_error(0, self.options.tmpdir, ['-hdwatchonly=xpubD6NzVbkrYhZ4YTNYPw3XmSoBRZWmfn8mRerv3SEaC8UFiz5geKgCJH42cp9KUzRcfQNSuCQgdM1grUH7FgWYahWKDST3E9NYJMBwMKooTaY'], \n+        'Invalid ExtPubKey format')\n+\n+        # should restart fine if hdwatchonly is the same as current wallet\n+        self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, [['-hdwatchonly=tpubD6NzVbkrYhZ4YMc8VtVEChv2fv6eB5RK8ZKmn52hFuqmbGwauf1NjuzzscFzikw7sa41mdE46d9w274Gw29WuFkeVw2VESXxgcMwBQ6NNSf'],[]])\n+\n+        self.stop_nodes()\n+        # should not restart if hdwatchonly is different from the current one\n+        assert_start_raises_init_error(0, self.options.tmpdir, ['-hdwatchonly=tpubD6NzVbkrYhZ4YTNYPw3XmSoBRZWmfn8mRerv3SEaC8UFiz5geKgCJH42cp9KUzRcfQNSuCQgdM1grUH7FgWYahWKDST3E9NYJMBwMKooTaY'], \n+        'Cannot specify hdwatchonly on an already existing wallet')\n+\n+        # check the hdkeypath was persisted\n+        self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, [[],[]])\n+        validated_address = self.nodes[0].validateaddress('mxKeRQP6gTdCW6jHhn9FW8bGXD8W1UpR6n')\n+        assert_equal(validated_address['hdkeypath'], 'm/0/1')\n+\n+        # check the hd key was persisted",
    "path": "test/functional/hdwatchonly.py",
    "position": null,
    "original_position": 79,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "26025bc52e0597a12da377be2910af64d5a18085",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "s/was/has/",
    "created_at": "2017-06-19T02:57:10Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122613707",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122613707"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r122613707"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122613707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124321134",
    "pull_request_review_id": 46599626,
    "id": 124321134,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDMyMTEzNA==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we may need to generalize this check a bit more. If the script here is a multisig in which the watch-only wallet owns all the keys, this will return false since there is no hdKeypath.\r\n\r\nPractically this means that spending 0-conf p2sh funds is a dicey experience that results in \"Insufficient funds\" responses sometimes. \r\n\r\nPerhaps something like `pwalletMain->IsHDWatchOnly(CScriptID& scriptID)` to make this check, which accounts for this situation?",
    "created_at": "2017-06-27T16:08:16Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124321134",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124321134"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124321134"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124321134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124333056",
    "pull_request_review_id": 46612445,
    "id": 124333056,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDMzMzA1Ng==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since we're not even required to be backwards compatible, I think adding a new piece of key metadata `fIsHDWatchOnly`, and adding that during `importaddress`(or some new call) when all keys are hdwatchonly keys(or a mixture of watchonly and stored private keys?).",
    "created_at": "2017-06-27T16:53:55Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124333056",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124333056"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124333056"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124333056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT",
    "in_reply_to_id": 124321134
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124453764",
    "pull_request_review_id": 46741704,
    "id": 124453764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDQ1Mzc2NA==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does `IsTrusted()`  returns `ISMINE_SPENDABLE` when for a multi sig output where we know all the keys when not hdwatchonly?",
    "created_at": "2017-06-28T05:17:49Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124453764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124453764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124453764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124453764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT",
    "in_reply_to_id": 124321134
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124525949",
    "pull_request_review_id": 46821533,
    "id": 124525949,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDUyNTk0OQ==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you have the private keys, yes, because of check a few lines above.",
    "created_at": "2017-06-28T12:25:28Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124525949",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124525949"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124525949"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124525949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT",
    "in_reply_to_id": 124321134
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124708027",
    "pull_request_review_id": 47022646,
    "id": 124708027,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDcwODAyNw==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So your goal is that `importaddress` scriptPubKeys should be considered trusted if we are in hdwatchonly mode ?",
    "created_at": "2017-06-29T04:05:20Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124708027",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124708027"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124708027"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124708027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT",
    "in_reply_to_id": 124321134
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124784157",
    "pull_request_review_id": 47106042,
    "id": 124784157,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc4NDE1Nw==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If we completely those addresses via hdwatchonly keys and/or privkeys, yes.",
    "created_at": "2017-06-29T12:21:14Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124784157",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124784157"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124784157"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124784157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT",
    "in_reply_to_id": 124321134
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124784432",
    "pull_request_review_id": 47106318,
    "id": 124784432,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc4NDQzMg==",
    "diff_hunk": "@@ -1868,8 +1868,18 @@ bool CWalletTx::IsTrusted() const\n         if (parent == NULL)\n             return false;\n         const CTxOut& parentOut = parent->tx->vout[txin.prevout.n];\n-        if (pwallet->IsMine(parentOut) != ISMINE_SPENDABLE)\n-            return false;\n+        const auto& isMine = pwallet->IsMine(parentOut);\n+        if (isMine != ISMINE_SPENDABLE)\n+        {\n+            // If the wallet is hdwatchonly, check if it is a key we generated\n+            if (!pwallet->IsHDWatchOnly() || isMine != ISMINE_WATCH_SOLVABLE)\n+                return false;\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = meta.find(CScriptID(parentOut.scriptPubKey));\n+            if (it == meta.end() ||\n+                it->second.hdKeypath.empty())",
    "path": "src/wallet/wallet.cpp",
    "position": 247,
    "original_position": 15,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "123540c7d22df5197a02dbff8635a50203d36c14",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently in this mode you can import a privkey and spend unconfirmed outputs. Likewise you can spend unconfirmed hdwatchonly outputs. You cannot however spend a mixture of the two in a multisig, or pure hdwatchonly p2sh.",
    "created_at": "2017-06-29T12:22:36Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124784432",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124784432"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r124784432"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124784432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1944,
    "original_line": 1944,
    "side": "RIGHT",
    "in_reply_to_id": 124321134
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127309756",
    "pull_request_review_id": 49881972,
    "id": 127309756,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzMwOTc1Ng==",
    "diff_hunk": "@@ -93,77 +93,114 @@ CPubKey CWallet::GenerateNewKey(bool internal)\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n+        DeriveNewChildKey(metadata, secret, pubkey, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n+        assert(secret.VerifyPubKey(pubkey));\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n-\n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool internal)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubkey, bool internal)\n {\n-    // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey chainChildKey;         //key at m/0'/0' (external) or m/0'/1' (internal)\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n     // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key))\n+    {\n+        // for now we use a fixed keypath scheme of m/0'/0'/k",
    "path": "src/wallet/wallet.cpp",
    "position": 60,
    "original_position": 57,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "c15332f7cb43042603ce62f62b8d5a9060cb91f4",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "it seems like you are repeating yourself a little bit here. Perhaps a common function can be extracted to avoid some code duplication between this if and the next one?",
    "created_at": "2017-07-13T19:28:58Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r127309756",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127309756"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r127309756"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127309756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 139,
    "original_line": 139,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127573008",
    "pull_request_review_id": 50178562,
    "id": 127573008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzU3MzAwOA==",
    "diff_hunk": "@@ -93,77 +93,114 @@ CPubKey CWallet::GenerateNewKey(bool internal)\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n+        DeriveNewChildKey(metadata, secret, pubkey, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n+        assert(secret.VerifyPubKey(pubkey));\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n-\n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKey(secret, pubkey))\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsHDWatchOnly()) {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n+    }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool internal)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, CPubKey& pubkey, bool internal)\n {\n-    // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey chainChildKey;         //key at m/0'/0' (external) or m/0'/1' (internal)\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n     // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key))\n+    {\n+        // for now we use a fixed keypath scheme of m/0'/0'/k",
    "path": "src/wallet/wallet.cpp",
    "position": 60,
    "original_position": 57,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "c15332f7cb43042603ce62f62b8d5a9060cb91f4",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I tried to think about this, but this was not as easy. I preferred keeping this way as it makes review easier: I did not touch what was already working.",
    "created_at": "2017-07-15T01:28:55Z",
    "updated_at": "2017-08-03T14:59:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r127573008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127573008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r127573008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127573008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 139,
    "original_line": 139,
    "side": "RIGHT",
    "in_reply_to_id": 127309756
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133287217",
    "pull_request_review_id": 56451308,
    "id": 133287217,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzI4NzIxNw==",
    "diff_hunk": "@@ -2510,7 +2510,8 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used)\\n\"\n             \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\"\n+            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"   (string) the Hash160 of the HD master pubkey\\n\" + ",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: missing two whitespaces before `(string)`.",
    "created_at": "2017-08-15T19:57:42Z",
    "updated_at": "2017-08-15T19:57:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133287217",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133287217"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133287217"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133287217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2513,
    "original_line": 2513,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133287429",
    "pull_request_review_id": 56451559,
    "id": 133287429,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzI4NzQyOQ==",
    "diff_hunk": "@@ -95,79 +95,116 @@ CPubKey CWallet::GenerateNewKey(CWalletDB &walletdb, bool internal)\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(walletdb, metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n+        DeriveNewChildKey(walletdb, metadata, secret, pubkey, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n+        assert(secret.VerifyPubKey(pubkey));\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed) {\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n     }\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n-\n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKeyWithDB(walletdb, secret, pubkey)) {\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsExternalHD()) {\n+        if (!AddKeyPubKeyWithDB(walletdb, secret, pubkey)) {\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+        }\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))",
    "path": "src/wallet/wallet.cpp",
    "position": 39,
    "original_position": 39,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: brackets",
    "created_at": "2017-08-15T19:58:28Z",
    "updated_at": "2017-08-15T19:58:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133287429",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133287429"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133287429"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133287429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 126,
    "original_line": 126,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133288137",
    "pull_request_review_id": 56452379,
    "id": 133288137,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzI4ODEzNw==",
    "diff_hunk": "@@ -95,79 +95,116 @@ CPubKey CWallet::GenerateNewKey(CWalletDB &walletdb, bool internal)\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-\n+    CPubKey pubkey;\n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n     CKeyMetadata metadata(nCreationTime);\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(walletdb, metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n+        DeriveNewChildKey(walletdb, metadata, secret, pubkey, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n+        pubkey = secret.GetPubKey();\n+        assert(secret.VerifyPubKey(pubkey));\n     }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed) {\n         SetMinVersion(FEATURE_COMPRPUBKEY);\n     }\n \n-    CPubKey pubkey = secret.GetPubKey();\n-    assert(secret.VerifyPubKey(pubkey));\n-\n     mapKeyMetadata[pubkey.GetID()] = metadata;\n     UpdateTimeFirstKey(nCreationTime);\n \n-    if (!AddKeyPubKeyWithDB(walletdb, secret, pubkey)) {\n-        throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    if(!IsExternalHD()) {\n+        if (!AddKeyPubKeyWithDB(walletdb, secret, pubkey)) {\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+        }\n+    }\n+    else {\n+        if (!AddWatchOnly(pubkey, metadata, nCreationTime))\n+            throw std::runtime_error(std::string(__func__) + \": AddWatchOnly failed\");\n     }\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CWalletDB &walletdb, CKeyMetadata& metadata, CKey& secret, bool internal)\n+\n+void CWallet::DeriveNewChildKey(CWalletDB &walletdb, CKeyMetadata& metadata, CKey& secret, CPubKey& pubkey, bool internal)\n {\n-    // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n-    CExtKey masterKey;             //hd master key\n-    CExtKey accountKey;            //key at m/0'\n-    CExtKey chainChildKey;         //key at m/0'/0' (external) or m/0'/1' (internal)\n-    CExtKey childKey;              //key at m/0'/0'/<n>'\n-\n     // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n+    if (GetKey(hdChain.masterKeyID, key))\n+    {\n+        // for now we use a fixed keypath scheme of m/0'/0'/k\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey chainChildKey;         //key at m/0'/0' (external) or m/0'/1' (internal)\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+\n+        // derive m/0'/0' (external chain) OR m/0'/1' (internal chain)\n+        assert(internal ? CanSupportFeature(FEATURE_HD_SPLIT) : true);\n+        accountKey.Derive(chainChildKey, BIP32_HARDENED_KEY_LIMIT + (internal ? 1 : 0));\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            if (internal) {\n+                chainChildKey.Derive(childKey, hdChain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+                metadata.hdKeypath = \"m/0'/1'/\" + std::to_string(hdChain.nInternalChainCounter) + \"'\";\n+                hdChain.nInternalChainCounter++;\n+            }\n+            else {\n+                chainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+                metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+                hdChain.nExternalChainCounter++;\n+            }\n+        } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+        pubkey = childKey.key.GetPubKey();\n+        metadata.hdMasterKeyID = hdChain.masterKeyID;\n+        // update the chain model in the database\n+        if (!walletdb.WriteHDChain(hdChain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    }\n+    else if (IsExternalHD()) {\n+        CExtPubKey& masterKey = hdChain.externalHD;             //hd master key\n+        CExtPubKey chainChildKey;         //key at m/0 (external) or m/1 (internal)\n+        CExtPubKey childKey;              //key at m/0/<n>\n+\n+        // derive m/x\n+        masterKey.Derive(chainChildKey, internal ? 1 : 0);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do {\n+            if (internal) {\n+                chainChildKey.Derive(childKey, hdChain.nInternalChainCounter);\n+                metadata.hdKeypath = \"m/1/\" + std::to_string(hdChain.nInternalChainCounter);",
    "path": "src/wallet/wallet.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "original_commit_id": "1cac7a66e8d016993a30ad8397590dd759cc1dbd",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "for other reviewers: the account key level is dropped here because it's hardened in BIP44. Maybe a source code comment would be good.",
    "created_at": "2017-08-15T20:01:38Z",
    "updated_at": "2017-08-15T20:01:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133288137",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133288137"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9728#discussion_r133288137"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9728"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133288137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 190,
    "original_line": 190,
    "side": "RIGHT"
  }
]