[
  {
    "sha": "7904ed828768101268c825fba3e84915c2507739",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTA0ZWQ4Mjg3NjgxMDEyNjhjODI1ZmJhM2U4NDkxNWMyNTA3NzM5",
    "commit": {
      "author": {
        "name": "chrislennon",
        "email": "chrislennon@users.noreply.github.com",
        "date": "2018-03-02T19:44:46Z"
      },
      "committer": {
        "name": "chrislennon",
        "email": "chrislennon@users.noreply.github.com",
        "date": "2018-03-02T19:44:46Z"
      },
      "message": "adds function for creation of sub-directory within temp workspace",
      "tree": {
        "sha": "1ca8f8fff6314fc1799be342e0cdb0b2b4e0cdc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ca8f8fff6314fc1799be342e0cdb0b2b4e0cdc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7904ed828768101268c825fba3e84915c2507739",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7904ed828768101268c825fba3e84915c2507739",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7904ed828768101268c825fba3e84915c2507739",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7904ed828768101268c825fba3e84915c2507739/comments",
    "author": {
      "login": "chrislennon",
      "id": 9197696,
      "node_id": "MDQ6VXNlcjkxOTc2OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9197696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrislennon",
      "html_url": "https://github.com/chrislennon",
      "followers_url": "https://api.github.com/users/chrislennon/followers",
      "following_url": "https://api.github.com/users/chrislennon/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrislennon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrislennon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrislennon/subscriptions",
      "organizations_url": "https://api.github.com/users/chrislennon/orgs",
      "repos_url": "https://api.github.com/users/chrislennon/repos",
      "events_url": "https://api.github.com/users/chrislennon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrislennon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chrislennon",
      "id": 9197696,
      "node_id": "MDQ6VXNlcjkxOTc2OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9197696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrislennon",
      "html_url": "https://github.com/chrislennon",
      "followers_url": "https://api.github.com/users/chrislennon/followers",
      "following_url": "https://api.github.com/users/chrislennon/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrislennon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrislennon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrislennon/subscriptions",
      "organizations_url": "https://api.github.com/users/chrislennon/orgs",
      "repos_url": "https://api.github.com/users/chrislennon/repos",
      "events_url": "https://api.github.com/users/chrislennon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrislennon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90a0aed51194ad82da8e011b96f9561c685e40b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90a0aed51194ad82da8e011b96f9561c685e40b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90a0aed51194ad82da8e011b96f9561c685e40b7"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 24,
      "deletions": 9
    },
    "files": [
      {
        "sha": "3e4d73f53c7869a1cb676a01988b5caac550d3ab",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7904ed828768101268c825fba3e84915c2507739/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7904ed828768101268c825fba3e84915c2507739/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=7904ed828768101268c825fba3e84915c2507739",
        "patch": "@@ -12,4 +12,18 @@ FILE *freopen(const fs::path& p, const char *mode, FILE *stream)\n     return ::freopen(p.string().c_str(), mode, stream);\n }\n \n+// Create and return temporary subdirectory for test outputs\n+fs::path unit_test_directory(){\n+    std::string sub_dir = \"bitcoin_unit_tests\";\n+    fs::path dir(fs::temp_directory_path() / sub_dir);\n+\n+    if(fs::create_directory(dir) || fs::exists(dir))\n+    {\n+        return dir;\n+    }\n+    else{\n+        throw std::runtime_error(\"Error creating the directory\\n\");\n+    }\n+}\n+\n } // fsbridge"
      },
      {
        "sha": "6307129c6956e97af4c3b20729d40b232ee5b112",
        "filename": "src/fs.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7904ed828768101268c825fba3e84915c2507739/src/fs.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7904ed828768101268c825fba3e84915c2507739/src/fs.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.h?ref=7904ed828768101268c825fba3e84915c2507739",
        "patch": "@@ -19,6 +19,7 @@ namespace fs = boost::filesystem;\n namespace fsbridge {\n     FILE *fopen(const fs::path& p, const char *mode);\n     FILE *freopen(const fs::path& p, const char *mode, FILE *stream);\n+    fs::path unit_test_directory();\n };\n \n #endif // BITCOIN_FS_H"
      },
      {
        "sha": "3c6ed734bd6dcaf6c99555e55de2e543c2b88d45",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7904ed828768101268c825fba3e84915c2507739/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7904ed828768101268c825fba3e84915c2507739/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=7904ed828768101268c825fba3e84915c2507739",
        "patch": "@@ -25,7 +25,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (bool obfuscate : {false, true}) {\n-        fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+        fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n         uint256 in = InsecureRand256();\n@@ -45,7 +45,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (bool obfuscate : {false, true}) {\n-        fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+        fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         char key = 'i';\n@@ -81,7 +81,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (bool obfuscate : {false, true}) {\n-        fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+        fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         // The two keys are intentionally chosen for ordering\n@@ -121,7 +121,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n {\n     // We're going to share this fs::path between two wrappers\n-    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+    fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n@@ -162,7 +162,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n BOOST_AUTO_TEST_CASE(existing_data_reindex)\n {\n     // We're going to share this fs::path between two wrappers\n-    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+    fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n@@ -197,7 +197,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n \n BOOST_AUTO_TEST_CASE(iterator_ordering)\n {\n-    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+    fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n     CDBWrapper dbw(ph, (1 << 20), true, false, false);\n     for (int x=0x00; x<256; ++x) {\n         uint8_t key = x;\n@@ -275,7 +275,7 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n {\n     char buf[10];\n \n-    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n+    fs::path ph = fsbridge::unit_test_directory() / fs::unique_path();\n     CDBWrapper dbw(ph, (1 << 20), true, false, false);\n     for (int x=0x00; x<10; ++x) {\n         for (int y = 0; y < 10; y++) {"
      },
      {
        "sha": "ee0902a6b5bdf6cb54c9b15bd5221f7d008af422",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7904ed828768101268c825fba3e84915c2507739/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7904ed828768101268c825fba3e84915c2507739/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=7904ed828768101268c825fba3e84915c2507739",
        "patch": "@@ -68,7 +68,7 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n \n         RegisterAllCoreRPCCommands(tableRPC);\n         ClearDatadirCache();\n-        pathTemp = fs::temp_directory_path() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(InsecureRandRange(100000)));\n+        fs::path pathTemp = fsbridge::unit_test_directory() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(InsecureRandRange(100000)));\n         fs::create_directories(pathTemp);\n         gArgs.ForceSetArg(\"-datadir\", pathTemp.string());\n "
      },
      {
        "sha": "e8f8271450a261bb4494a7dcef8b6f9efb0ca0fe",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7904ed828768101268c825fba3e84915c2507739/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7904ed828768101268c825fba3e84915c2507739/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=7904ed828768101268c825fba3e84915c2507739",
        "patch": "@@ -714,7 +714,7 @@ static void TestOtherProcess(fs::path dirname, std::string lockname, int fd)\n \n BOOST_AUTO_TEST_CASE(test_LockDirectory)\n {\n-    fs::path dirname = fs::temp_directory_path() / fs::unique_path();\n+    fs::path dirname = fsbridge::unit_test_directory() / fs::unique_path();\n     const std::string lockname = \".lock\";\n #ifndef WIN32\n     // Revert SIGCHLD to default, otherwise boost.test will catch and fail on"
      }
    ]
  }
]