[
  {
    "sha": "8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
    "node_id": "C_kwDOABII59oAKDg2MTU1MDdhNGU1MTBiYzc5N2IwMWM0YmJlNDVkYzFmOTFlMGJmYTA",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2021-09-30T21:31:06Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2021-09-30T22:02:32Z"
      },
      "message": "scripted-diff: rename DBErrors::RESCAN_REQUIRED to NEED_RESCAN\n\n-BEGIN VERIFY SCRIPT-\ngit grep -l 'RESCAN_REQUIRED' src | xargs sed -i 's/RESCAN_REQUIRED/NEED_RESCAN/g'\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "f8b3a3b0affa754cf75a0b0e0b270e0eba8f6009",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8b3a3b0affa754cf75a0b0e0b270e0eba8f6009"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "571bb94dfb5047c9be8fcbae5dae71de7256b86c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/571bb94dfb5047c9be8fcbae5dae71de7256b86c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/571bb94dfb5047c9be8fcbae5dae71de7256b86c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "1c18cdb1bc9a869a9ac6460cb6574721954675a2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
        "patch": "@@ -2560,7 +2560,7 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         {\n             error = strprintf(_(\"Wallet needed to be rewritten: restart %s to complete\"), PACKAGE_NAME);\n             return nullptr;\n-        } else if (nLoadWalletRet == DBErrors::RESCAN_REQUIRED) {\n+        } else if (nLoadWalletRet == DBErrors::NEED_RESCAN) {\n             warnings.push_back(strprintf(_(\"Error reading %s! Transaction data may be missing or incorrect.\"\n                                            \" Rescanning wallet.\"), walletFile));\n             rescan_required = true;"
      },
      {
        "sha": "528f77b14cd2663887e5a7846ec07f5a9feedab2",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
        "patch": "@@ -861,7 +861,7 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n     }\n \n     if (rescan_required && result == DBErrors::LOAD_OK) {\n-        result = DBErrors::RESCAN_REQUIRED;\n+        result = DBErrors::NEED_RESCAN;\n     } else if (fNoncriticalErrors && result == DBErrors::LOAD_OK) {\n         result = DBErrors::NONCRITICAL_ERROR;\n     }"
      },
      {
        "sha": "715d9012ed3a3bf85eac43e8b4ad0288638236f8",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
        "patch": "@@ -49,7 +49,7 @@ enum class DBErrors\n     TOO_NEW,\n     LOAD_FAIL,\n     NEED_REWRITE,\n-    RESCAN_REQUIRED\n+    NEED_RESCAN\n };\n \n namespace DBKeys {"
      },
      {
        "sha": "e3cb5cee5d7481c300b7ef28fcab4c1cbbd8ac22",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8615507a4e510bc797b01c4bbe45dc1f91e0bfa0/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=8615507a4e510bc797b01c4bbe45dc1f91e0bfa0",
        "patch": "@@ -76,7 +76,7 @@ static std::shared_ptr<CWallet> MakeWallet(const std::string& name, const fs::pa\n         } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n             tfm::format(std::cerr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n             return nullptr;\n-        } else if (load_wallet_ret == DBErrors::RESCAN_REQUIRED) {\n+        } else if (load_wallet_ret == DBErrors::NEED_RESCAN) {\n             tfm::format(std::cerr, \"Error reading %s! Some transaction data might be missing or\"\n                            \" incorrect. Wallet requires a rescan.\",\n                 name);"
      }
    ]
  }
]