[
  {
    "sha": "798a589aff64b83a0844688a661f4bd987c3340c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OThhNTg5YWZmNjRiODNhMDg0NDY4OGE2NjFmNGJkOTg3YzMzNDBj",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-08-29T10:58:18Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-08-29T11:34:20Z"
      },
      "message": "wallet: extract PubKey from P2PK script with Solver\n\nThe function ExtractPubKey() checks if a given script matches the P2PK pattern\n(<PubKey> OP_CHECKSIG), extracts the PubKey and additionally checks if it is\ncryptographically valid (full validation with ECC library via .IsFullyValid()).\n\nCurrently this is done manually in the following order:\n    1) check if first script OP is data push with valid PubKey length\n       (first part of pattern match), extract PubKey\n    2) create CPubKey object with extracted PubKey\n    3) fully validate public key\n    4) check if last script OP is OP_CHECKSIG\n       (second part of pattern match)\n\nUsing Solver, the pattern matching and PubKey extraction can be done via a\nsingle step, leading to the following simplified order with shorter code:\n    1) check if given script matches P2PK pattern with Solver\n       (also contains valid PubKey length check), extracts Pubkey\n    2) create CPubKey object with extracted Pubkey\n    3) fully validate public key",
      "tree": {
        "sha": "119eb7a50c726b702febbe97969fd57e78cb7b5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/119eb7a50c726b702febbe97969fd57e78cb7b5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/798a589aff64b83a0844688a661f4bd987c3340c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/798a589aff64b83a0844688a661f4bd987c3340c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/798a589aff64b83a0844688a661f4bd987c3340c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/798a589aff64b83a0844688a661f4bd987c3340c/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc5b756bae26db5e88bd6ed15e2eb45b05e76bdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc5b756bae26db5e88bd6ed15e2eb45b05e76bdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc5b756bae26db5e88bd6ed15e2eb45b05e76bdd"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 3,
      "deletions": 12
    },
    "files": [
      {
        "sha": "f4992e5ab64db317219cf3e44721473d474076d7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 12,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/798a589aff64b83a0844688a661f4bd987c3340c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/798a589aff64b83a0844688a661f4bd987c3340c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=798a589aff64b83a0844688a661f4bd987c3340c",
        "patch": "@@ -523,18 +523,9 @@ bool CWallet::LoadCScript(const CScript& redeemScript)\n \n static bool ExtractPubKey(const CScript &dest, CPubKey& pubKeyOut)\n {\n-    //TODO: Use Solver to extract this?\n-    CScript::const_iterator pc = dest.begin();\n-    opcodetype opcode;\n-    std::vector<unsigned char> vch;\n-    if (!dest.GetOp(pc, opcode, vch) || !CPubKey::ValidSize(vch))\n-        return false;\n-    pubKeyOut = CPubKey(vch);\n-    if (!pubKeyOut.IsFullyValid())\n-        return false;\n-    if (!dest.GetOp(pc, opcode, vch) || opcode != OP_CHECKSIG || dest.GetOp(pc, opcode, vch))\n-        return false;\n-    return true;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    return Solver(dest, solutions) == TX_PUBKEY &&\n+        (pubKeyOut = CPubKey(solutions[0])).IsFullyValid();\n }\n \n bool CWallet::AddWatchOnlyInMem(const CScript &dest)"
      }
    ]
  }
]