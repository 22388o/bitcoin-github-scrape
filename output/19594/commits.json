[
  {
    "sha": "adc08e1bdcd092b07a349908c22a82a9ad7adeea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGMwOGUxYmRjZDA5MmIwN2EzNDk5MDhjMjJhODJhOWFkN2FkZWVh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-07-26T20:43:01Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-07-26T21:03:16Z"
      },
      "message": "refactor: Make mapBlocksUnknownParent local, and rename it",
      "tree": {
        "sha": "b1786e8bf35f47e30791e8fc8fa2a3238e0da9ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1786e8bf35f47e30791e8fc8fa2a3238e0da9ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/adc08e1bdcd092b07a349908c22a82a9ad7adeea",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8d75QACgkQQQEIES5+\nqB9RPBAApXh4RB3IyZAFixEyPZBEd82rmmTMPpR3llf3JdPiX0a5IZ4Z/+yyP3i/\nxHepqrFmgMj+bbrEf/FetKUK8OqOXN6T0JnIUrwhe9VBxsacSo0/zPLcTx+23f6v\nr4QfXqXOZecrrHSujNZl0wNaNwQf3mkCi2hyf7wxOPwVOtdhNFefCg9HBs6gKxIn\nRIf+1eCTb0u5PJ7TB+sabdJFkqgAr9VTZYgEu05kvptcAC4hHgHMgO/IRO2ex/Bp\nvEJwTAHIA0zNK0+8h6CLDokFCv1kjWT9o6WUTLDwbHsAVfm/rLUfXotJIY8P1bCH\n9wHcdtux/99RD6QSxeNM7cICu+VZVy1c8mooCNGr0gNXTDy/C+nbMTVV+FL+NbS5\n4WI9YbM9LfVPC5iU4baXqQQlg8aQok+gIiANgtS4J0pYZoQwv/hMSf5eKmLSf12H\nshXSRo3fIYsxThactIygc90GKijixiEr1Z/9d9cgEI9N2UPP9slvP+ali/rZ+OqE\nbMnzZFzy0G8mmQ24jArnRXze4dVmnwCzp49L992H1OUc0OQgUJYjCsggFbGWOFCA\nQ6q0dkbnx+8c1PbS7j1VTkLspN/dNKnfzMfKur/BL8frJijOa25TkaU64I2WisIT\nvjbN541OSDcSW5UQR2pWJNrdCsUW0pTXZiFMeMiPum90i+IUELw=\n=EDMq\n-----END PGP SIGNATURE-----",
        "payload": "tree b1786e8bf35f47e30791e8fc8fa2a3238e0da9ee\nparent 31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1595796181 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1595797396 +0300\n\nrefactor: Make mapBlocksUnknownParent local, and rename it\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adc08e1bdcd092b07a349908c22a82a9ad7adeea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/adc08e1bdcd092b07a349908c22a82a9ad7adeea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adc08e1bdcd092b07a349908c22a82a9ad7adeea/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 32,
      "deletions": 12
    },
    "files": [
      {
        "sha": "2fb19d3b95521971001f05f188810624f356818f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=adc08e1bdcd092b07a349908c22a82a9ad7adeea",
        "patch": "@@ -62,6 +62,7 @@\n #include <walletinitinterface.h>\n \n #include <functional>\n+#include <map>\n #include <set>\n #include <stdint.h>\n #include <stdio.h>\n@@ -693,6 +694,7 @@ static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImp\n     // -reindex\n     if (fReindex) {\n         int nFile = 0;\n+        std::multimap<uint256, FlatFilePos> blocks_with_unknown_parent;\n         while (true) {\n             FlatFilePos pos(nFile, 0);\n             if (!fs::exists(GetBlockPosFilename(pos)))\n@@ -701,7 +703,7 @@ static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImp\n             if (!file)\n                 break; // This error is logged in OpenBlockFile\n             LogPrintf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n-            LoadExternalBlockFile(chainparams, file, &pos);\n+            LoadExternalBlockFile(chainparams, file, &pos, &blocks_with_unknown_parent);\n             if (ShutdownRequested()) {\n                 LogPrintf(\"Shutdown requested. Exit %s\\n\", __func__);\n                 return;"
      },
      {
        "sha": "dcedbc7ad096afe3dbe9bec2426f8fe04ab11005",
        "filename": "src/test/fuzz/load_external_block_file.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/test/fuzz/load_external_block_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/test/fuzz/load_external_block_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/load_external_block_file.cpp?ref=adc08e1bdcd092b07a349908c22a82a9ad7adeea",
        "patch": "@@ -11,6 +11,7 @@\n #include <validation.h>\n \n #include <cstdint>\n+#include <map>\n #include <vector>\n \n void initialize()\n@@ -26,6 +27,11 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     if (fuzzed_block_file == nullptr) {\n         return;\n     }\n-    FlatFilePos flat_file_pos;\n-    LoadExternalBlockFile(Params(), fuzzed_block_file, fuzzed_data_provider.ConsumeBool() ? &flat_file_pos : nullptr);\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        FlatFilePos flat_file_pos;\n+        std::multimap<uint256, FlatFilePos> blocks_with_unknown_parent;\n+        LoadExternalBlockFile(Params(), fuzzed_block_file, &flat_file_pos, &blocks_with_unknown_parent);\n+    } else {\n+        LoadExternalBlockFile(Params(), fuzzed_block_file);\n+    }\n }"
      },
      {
        "sha": "719ac18951a3f4c62301ca77d50de669eaddde60",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 8,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=adc08e1bdcd092b07a349908c22a82a9ad7adeea",
        "patch": "@@ -48,6 +48,7 @@\n #include <validationinterface.h>\n #include <warnings.h>\n \n+#include <cassert>\n #include <string>\n \n #include <boost/algorithm/string/replace.hpp>\n@@ -4670,10 +4671,14 @@ bool LoadGenesisBlock(const CChainParams& chainparams)\n     return ::ChainstateActive().LoadGenesisBlock(chainparams);\n }\n \n-void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFilePos* dbp)\n+void LoadExternalBlockFile(\n+    const CChainParams& chainparams,\n+    FILE* fileIn,\n+    FlatFilePos* dbp,\n+    std::multimap<uint256, FlatFilePos>* blocks_with_unknown_parent)\n {\n-    // Map of disk positions for blocks with unknown parent (only used for reindex)\n-    static std::multimap<uint256, FlatFilePos> mapBlocksUnknownParent;\n+    assert((dbp && blocks_with_unknown_parent) || (!dbp && !blocks_with_unknown_parent));\n+\n     int64_t nStart = GetTimeMillis();\n \n     int nLoaded = 0;\n@@ -4722,8 +4727,9 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n                                 block.hashPrevBlock.ToString());\n-                        if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                        if (dbp && blocks_with_unknown_parent) {\n+                            blocks_with_unknown_parent->emplace(block.hashPrevBlock, *dbp);\n+                        }\n                         continue;\n                     }\n \n@@ -4752,15 +4758,17 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n \n                 NotifyHeaderTip();\n \n+                if (!blocks_with_unknown_parent) continue;\n+\n                 // Recursively process earlier encountered successors of this block\n                 std::deque<uint256> queue;\n                 queue.push_back(hash);\n                 while (!queue.empty()) {\n                     uint256 head = queue.front();\n                     queue.pop_front();\n-                    std::pair<std::multimap<uint256, FlatFilePos>::iterator, std::multimap<uint256, FlatFilePos>::iterator> range = mapBlocksUnknownParent.equal_range(head);\n+                    auto range = blocks_with_unknown_parent->equal_range(head);\n                     while (range.first != range.second) {\n-                        std::multimap<uint256, FlatFilePos>::iterator it = range.first;\n+                        auto it = range.first;\n                         std::shared_ptr<CBlock> pblockrecursive = std::make_shared<CBlock>();\n                         if (ReadBlockFromDisk(*pblockrecursive, it->second, chainparams.GetConsensus()))\n                         {\n@@ -4775,7 +4783,7 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                             }\n                         }\n                         range.first++;\n-                        mapBlocksUnknownParent.erase(it);\n+                        blocks_with_unknown_parent->erase(it);\n                         NotifyHeaderTip();\n                     }\n                 }"
      },
      {
        "sha": "538240cb31e43fe5892587f407b0270598e1324d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adc08e1bdcd092b07a349908c22a82a9ad7adeea/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=adc08e1bdcd092b07a349908c22a82a9ad7adeea",
        "patch": "@@ -157,7 +157,11 @@ FILE* OpenBlockFile(const FlatFilePos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n fs::path GetBlockPosFilename(const FlatFilePos &pos);\n /** Import blocks from an external file */\n-void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFilePos* dbp = nullptr);\n+void LoadExternalBlockFile(\n+    const CChainParams& chainparams,\n+    FILE* fileIn,\n+    FlatFilePos* dbp = nullptr,\n+    std::multimap<uint256, FlatFilePos>* blocks_with_unknown_parent = nullptr);\n /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */\n bool LoadGenesisBlock(const CChainParams& chainparams);\n /** Unload database information */"
      }
    ]
  }
]