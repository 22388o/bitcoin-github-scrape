hebasto,2020-07-26 21:18:56,Friendly ping @LarryRuane :),https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-664041834,664041834,
DrahtBot,2020-07-27 03:25:32,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20750 ([Bundle 2/n] Prune g_chainman usage in mempool-related validation functions by dongcarl)\n* #20749 ([Bundle 1/n] P",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-664099094,664099094,
practicalswift,2020-08-14 15:26:00,Concept ACK: local is easier to reason about :),https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-674128637,674128637,
hebasto,2020-08-14 19:08:44,"@LarryRuane \n> Here's a slightly tangential suggestion, as long as you're changing this code, to eliminate one level of looping:\n\nLet's keep this PR diff minimal and focused :)",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-674230166,674230166,
dongcarl,2020-10-19 21:17:07,"~~Concept ACK. This is a necessary change for [`2f2e8a2` (#20158)](https://github.com/bitcoin/bitcoin/pull/20158/commits/2f2e8a23959ad8f5dcd9d568af0019274a2757df) to work correctly.~~\nSorry, looking at this again now. It doesn't seem like it's fixing anything that's not working. If the concern is ""what happens if the map is not empty at the end of reindexing,"" then we should write a test case fo",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-712447328,712447328,
amitiuttarwar,2020-11-03 02:40:41,"code review ACK adc08e1bdcd092b07a349908c22a82a9ad7adeea\n\nbut I think OP should be updated. code currently is a pure refactor to maintain less global state. however, OP also has section that asks ""what happens if there are leftover entries in this map after reindexing has completed"", which I don't believe is addressed in this PR? \n\ntangential question: is `-loadblock` still used, or mostly",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-720874585,720874585,
LarryRuane,2020-11-03 17:33:37,"@amitiuttarwar :\n> ... I don't believe is addressed in this PR\n\nThe OP does mention logging if there are entries leftover entries, and I think that would be a good idea. But no other recovery is necessary, because the client will download the missing blocks from peers (I've verified this).\n\nWhile working on zcash, I recently looked into the `-loadblock` argument and concluded that it sho",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-721274248,721274248,
LarryRuane,2020-11-03 18:06:45,"me:\n> I could make a small PR to remove `-loadblock`\n\nOn further thought, we shouldn't do this, because I can easily imagine that it may be currently used for testing (outside of our repo), for example, with `regtest`.",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-721291371,721291371,
sipa,2020-11-03 18:07:31,"@amitiuttarwar The purpose of `-loadblock` is loading external blocks from e.g. a bootstrap.dat file. I don't know if those see much use still, but we distribute the script to produce bootstrap.dat files still (see https://github.com/bitcoin/bitcoin/tree/master/contrib/linearize).",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-721291751,721291751,
MarcoFalke,2020-11-03 18:39:37,It should also be possible to specify all block files of another datadir via multiple `-loadblock`. (sync via local disk),https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-721307311,721307311,
LarryRuane,2020-11-03 19:09:38,"> It should also be possible to specify all block files of another datadir via multiple `-loadblock`\n\nNo, because when using `-loadblock` (as opposed to `-reindex`), there is no unknown parent map. When `-loadblock` encounters a block whose parent hasn't yet been seen, which is very common beginning with headers-first download, it's silently ignored.\n\nWe could add an unknown parents map to",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-721321744,721321744,
amitiuttarwar,2020-11-03 23:00:15,"@LarryRuane \n\n> The OP does mention logging if there are entries leftover entries, and I think that would be a good idea. But no other recovery is necessary, because the client will download the missing blocks from peers (I've verified this).\n\nright, sure, I think logging would make sense, but I'm talking about the difference between OP and code changes. Unless I'm mistaken, the code doesn",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-721418603,721418603,
DrahtBot,2021-02-01 13:10:35,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-770845820,770845820,
LarryRuane,2021-04-24 04:51:37,"@hebasto, I rebased this PR's commit as part of #20331. Feel free to cherry-pick it back to here. (A review of #20331 would be appreciated, BTW.)",https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-826034289,826034289,
MarcoFalke,2021-11-03 10:01:09,This will also fix an issue where the fuzz test goes OOM when running too long,https://github.com/bitcoin/bitcoin/pull/19594#issuecomment-958801638,958801638,
LarryRuane,2020-08-14 16:31:59,Nice! It was hard to understand the previous code when `!dbp`.,https://github.com/bitcoin/bitcoin/pull/19594#discussion_r470730393,470730393,src/validation.cpp
LarryRuane,2020-08-14 17:10:35,"```suggestion\n                        range.first = blocks_with_unknown_parent->erase(it);\n```\nAs written this is [safe](https://stackoverflow.com/questions/6438086/iterator-invalidation-rules/54004916#54004916) with this container type, but the assignment makes fewer assumptions (and is one less line of code!).",https://github.com/bitcoin/bitcoin/pull/19594#discussion_r470749547,470749547,src/validation.cpp
LarryRuane,2020-08-14 18:05:29,"You could test either variable here (probably `blocks_with_unknown_parent` would be best), but I assume you're testing both since the code references both. The only downside is it could lead the casual reader to think that only one of these could be `nullptr` and not the other. The `emplace` simplification is nice here.",https://github.com/bitcoin/bitcoin/pull/19594#discussion_r470776156,470776156,src/validation.cpp
hebasto,2020-08-14 18:54:05,"> ... but I assume you're testing both since the code references both.\n\nCorrect.",https://github.com/bitcoin/bitcoin/pull/19594#discussion_r470811473,470811473,src/validation.cpp
hebasto,2020-08-14 19:06:34,Agree. But current diff is minimal :),https://github.com/bitcoin/bitcoin/pull/19594#discussion_r470816995,470816995,src/validation.cpp
