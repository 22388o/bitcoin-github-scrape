[
  {
    "sha": "b3643d9bdf0458e970779b1bcd537c836197b5b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzY0M2Q5YmRmMDQ1OGU5NzA3NzliMWJjZDUzN2M4MzYxOTdiNWI5",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-06-13T22:34:53Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-06-13T22:34:53Z"
      },
      "message": "Remove unused ResendWalletTransactions notification",
      "tree": {
        "sha": "053d8a73e8f4062b8cf0a55f14394b4d9e545220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/053d8a73e8f4062b8cf0a55f14394b4d9e545220"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3643d9bdf0458e970779b1bcd537c836197b5b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3643d9bdf0458e970779b1bcd537c836197b5b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3643d9bdf0458e970779b1bcd537c836197b5b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3643d9bdf0458e970779b1bcd537c836197b5b9/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7296bcea0c942abefcb3243e3e558b95933c082",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7296bcea0c942abefcb3243e3e558b95933c082",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7296bcea0c942abefcb3243e3e558b95933c082"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 0,
      "deletions": 27
    },
    "files": [
      {
        "sha": "2161f9f7ab897bf18c8f720c276c645af2a0ad14",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=b3643d9bdf0458e970779b1bcd537c836197b5b9",
        "patch": "@@ -19,7 +19,6 @@ void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.BlockDisconnected.connect(boost::bind(&CValidationInterface::BlockDisconnected, pwalletIn, _1));\n     g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n-    g_signals.Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, _1, _2));\n     g_signals.BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n     g_signals.ScriptForMining.connect(boost::bind(&CValidationInterface::GetScriptForMining, pwalletIn, _1));\n     g_signals.NewPoWValidBlock.connect(boost::bind(&CValidationInterface::NewPoWValidBlock, pwalletIn, _1, _2));\n@@ -28,7 +27,6 @@ void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.ScriptForMining.disconnect(boost::bind(&CValidationInterface::GetScriptForMining, pwalletIn, _1));\n     g_signals.BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n-    g_signals.Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, _1, _2));\n     g_signals.Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n     g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.TransactionAddedToMempool.disconnect(boost::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, _1));"
      },
      {
        "sha": "7c7f32e34f63b4ac12ef0eb289f24cd8b62571eb",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=b3643d9bdf0458e970779b1bcd537c836197b5b9",
        "patch": "@@ -38,7 +38,6 @@ class CValidationInterface {\n     virtual void BlockDisconnected(const std::shared_ptr<const CBlock> &block) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void Inventory(const uint256 &hash) {}\n-    virtual void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) {}\n     virtual void BlockChecked(const CBlock&, const CValidationState&) {}\n     virtual void GetScriptForMining(std::shared_ptr<CReserveScript>&) {};\n     virtual void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& block) {};"
      },
      {
        "sha": "7e419e926b6713a6ad78815aa28da84700105efc",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b3643d9bdf0458e970779b1bcd537c836197b5b9",
        "patch": "@@ -1823,29 +1823,6 @@ std::vector<uint256> CWallet::ResendWalletTransactionsBefore(int64_t nTime, CCon\n     return result;\n }\n \n-void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman)\n-{\n-    // Do this infrequently and randomly to avoid giving away\n-    // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions)\n-        return;\n-    bool fFirst = (nNextResend == 0);\n-    nNextResend = GetTime() + GetRand(30 * 60);\n-    if (fFirst)\n-        return;\n-\n-    // Only do it if there's been a new block since last time\n-    if (nBestBlockTime < nLastResend)\n-        return;\n-    nLastResend = GetTime();\n-\n-    // Rebroadcast unconfirmed txes older than 5 minutes before the last\n-    // block was found:\n-    std::vector<uint256> relayed = ResendWalletTransactionsBefore(nBestBlockTime-5*60, connman);\n-    if (!relayed.empty())\n-        LogPrintf(\"%s: rebroadcast %u unconfirmed transactions\\n\", __func__, relayed.size());\n-}\n-\n /** @} */ // end of mapWallet\n \n "
      },
      {
        "sha": "269aa3193d5aa7669db3cd61fcd47af469ee01b8",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3643d9bdf0458e970779b1bcd537c836197b5b9/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b3643d9bdf0458e970779b1bcd537c836197b5b9",
        "patch": "@@ -920,7 +920,6 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n     CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;"
      }
    ]
  }
]