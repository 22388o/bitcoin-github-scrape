[
  {
    "sha": "cba2800e8c4e73c2eddff76880b55d930c5010f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmEyODAwZThjNGU3M2MyZWRkZmY3Njg4MGI1NWQ5MzBjNTAxMGY2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-28T20:15:01Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-11T09:49:04Z"
      },
      "message": "Increase signal-to-noise ratio in debug.log by adjusting log level when logging failed non-manual connect():s\n\nBefore this patch:\n\n```\n$ src/bitcoind -printtoconsole\n\u2026\n2018-02-28 18:42:51 UpdateTip: new best=0000000000005448b10a219683d34b770a28044e1cc421032dea1a79ff548948 height=1286903 version=0x20000000 log2_work=69.791313 tx=17408546 date='2018-02-28 18:42:46' progress=1.000000 cache=0.0MiB(173txo)\n2018-02-28T18:37:52Z connect() 10.11.21.34:18333 failed after select(): Connection refused (111)\n2018-02-28 18:43:22 connect() to 10.11.43.14:18333 failed after select(): Network is unreachable (101)\n2018-02-28 18:44:49 UpdateTip: new best=000000000000029a521ff2803e1441b09413b876accff5084a4cccf7747d798b height=1286904 version=0x20000000 log2_work=69.791345 tx=17408559 date='2018-02-28 18:44:51' progress=1.000000 cache=0.1MiB(502txo)\n2018-02-28 18:46:54 connect() to [2001:0:9d38:78ff:1234:1234:1234:1234]:18333 failed: Network is unreachable (101)\n2018-02-28 18:48:56 connect() to [2001:0:9d38:6aff:1234:1234:1234:1234]:18333 failed: Network is unreachable (101)\n2018-02-28 18:49:11 UpdateTip: new best=000000000000000206b79eb235e5dd907b6369de0e5d764330bf40ec0d460311 height=1286905 version=0x20000000 log2_work=69.791377 tx=17408577 date='2018-02-28 18:49:12' progress=1.000000 cache=1.0MiB(5245txo)\n```\n\nAfter this patch:\n\n```\n$ src/bitcoind -printtoconsole\n\u2026\n2018-02-28 18:42:51 UpdateTip: new best=0000000000005448b10a219683d34b770a28044e1cc421032dea1a79ff548948 height=1286903 version=0x20000000 log2_work=69.791313 tx=17408546 date='2018-02-28 18:42:46' progress=1.000000 cache=0.0MiB(173txo)\n2018-02-28 18:44:49 UpdateTip: new best=000000000000029a521ff2803e1441b09413b876accff5084a4cccf7747d798b height=1286904 version=0x20000000 log2_work=69.791345 tx=17408559 date='2018-02-28 18:44:51' progress=1.000000 cache=0.1MiB(502txo)\n2018-02-28 18:49:11 UpdateTip: new best=000000000000000206b79eb235e5dd907b6369de0e5d764330bf40ec0d460311 height=1286905 version=0x20000000 log2_work=69.791377 tx=17408577 date='2018-02-28 18:49:12' progress=1.000000 cache=1.0MiB(5245txo)\n```\n\nPlease note that \"manual connect():s\" (invoked via `-connect`, `-proxy` or `addnode`) are still reported as usual:\n\n```\n$ src/bitcoind -printtoconsole -connect=10.11.12.13\n\u2026\n2018-02-28 18:33:13 connect() to 10.11.12.13:18333 failed after select(): Connection refused (111)\n$ src/bitcoind -printtoconsole -proxy=10.11.12.13\n\u2026\n2018-02-28 18:32:32 connect() to 10.11.12.13:9050 failed after select(): Connection refused (111)\n$ src/bitcoind -printtoconsole &\n$ src/bitcoin-cli addnode \"10.11.12.13\" onetry\n\u2026\n2018-02-28 18:34:40 connect() to 10.11.12.13:18333 failed after select(): Connection refused (111)\n```",
      "tree": {
        "sha": "02c5d5d8590e4a923765b1f7ee5fee5a2bb08407",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02c5d5d8590e4a923765b1f7ee5fee5a2bb08407"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cba2800e8c4e73c2eddff76880b55d930c5010f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cba2800e8c4e73c2eddff76880b55d930c5010f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cba2800e8c4e73c2eddff76880b55d930c5010f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cba2800e8c4e73c2eddff76880b55d930c5010f6/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29fad97c320c892ab6a480c81e2078ec22ab354b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29fad97c320c892ab6a480c81e2078ec22ab354b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29fad97c320c892ab6a480c81e2078ec22ab354b"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 21,
      "deletions": 9
    },
    "files": [
      {
        "sha": "01db30f90869817a2ff31aa84eb82e0c480159a2",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=cba2800e8c4e73c2eddff76880b55d930c5010f6",
        "patch": "@@ -367,7 +367,7 @@ static CAddress GetBindAddress(SOCKET sock)\n     return addr_bind;\n }\n \n-CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure)\n+CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection)\n {\n     if (pszDest == nullptr) {\n         if (IsLocal(addrConnect))\n@@ -431,7 +431,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n             if (hSocket == INVALID_SOCKET) {\n                 return nullptr;\n             }\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout);\n+            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, manual_connection);\n         }\n         if (!proxyConnectionFailed) {\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n@@ -1991,7 +1991,7 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n     } else if (FindNode(std::string(pszDest)))\n         return;\n \n-    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure);\n+    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure, manual_connection);\n \n     if (!pnode)\n         return;"
      },
      {
        "sha": "b86e8a586774ab499a54b995eaa476eba1a3765c",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=cba2800e8c4e73c2eddff76880b55d930c5010f6",
        "patch": "@@ -338,7 +338,7 @@ class CConnman\n     CNode* FindNode(const CService& addr);\n \n     bool AttemptToEvictConnection();\n-    CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure);\n+    CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection);\n     bool IsWhitelistedRange(const CNetAddr &addr);\n \n     void DeleteNode(CNode* pnode);"
      },
      {
        "sha": "dd32110932b2beeff5c18ec4786431d7a53378cf",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=cba2800e8c4e73c2eddff76880b55d930c5010f6",
        "patch": "@@ -9,6 +9,7 @@\n #include <sync.h>\n #include <uint256.h>\n #include <random.h>\n+#include <tinyformat.h>\n #include <util.h>\n #include <utilstrencodings.h>\n \n@@ -468,7 +469,17 @@ SOCKET CreateSocket(const CService &addrConnect)\n     return hSocket;\n }\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, int nTimeout)\n+template<typename... Args>\n+static void LogConnectFailure(bool manual_connection, const char* fmt, const Args&... args) {\n+    std::string error_message = tfm::format(fmt, args...);\n+    if (manual_connection) {\n+        LogPrintf(\"%s\\n\", error_message);\n+    } else {\n+        LogPrint(BCLog::NET, \"%s\\n\", error_message);\n+    }\n+}\n+\n+bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, int nTimeout, bool manual_connection)\n {\n     struct sockaddr_storage sockaddr;\n     socklen_t len = sizeof(sockaddr);\n@@ -513,7 +524,7 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             }\n             if (nRet != 0)\n             {\n-                LogPrintf(\"connect() to %s failed after select(): %s\\n\", addrConnect.ToString(), NetworkErrorString(nRet));\n+                LogConnectFailure(manual_connection, \"connect() to %s failed after select(): %s\", addrConnect.ToString(), NetworkErrorString(nRet));\n                 return false;\n             }\n         }\n@@ -523,7 +534,7 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n         else\n #endif\n         {\n-            LogPrintf(\"connect() to %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            LogConnectFailure(manual_connection, \"connect() to %s failed: %s\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n             return false;\n         }\n     }\n@@ -581,7 +592,7 @@ bool IsProxy(const CNetAddr &addr) {\n bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, const SOCKET& hSocket, int nTimeout, bool *outProxyConnectionFailed)\n {\n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy.proxy, hSocket, nTimeout)) {\n+    if (!ConnectSocketDirectly(proxy.proxy, hSocket, nTimeout, true)) {\n         if (outProxyConnectionFailed)\n             *outProxyConnectionFailed = true;\n         return false;\n@@ -601,6 +612,7 @@ bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int\n     }\n     return true;\n }\n+\n bool LookupSubNet(const char* pszName, CSubNet& ret)\n {\n     std::string strSubnet(pszName);"
      },
      {
        "sha": "50d4bc54faeef4ff8f788727c48a11da346e2daf",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cba2800e8c4e73c2eddff76880b55d930c5010f6/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=cba2800e8c4e73c2eddff76880b55d930c5010f6",
        "patch": "@@ -52,7 +52,7 @@ bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault,\n CService LookupNumeric(const char *pszName, int portDefault = 0);\n bool LookupSubNet(const char *pszName, CSubNet& subnet);\n SOCKET CreateSocket(const CService &addrConnect);\n-bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocketRet, int nTimeout);\n+bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocketRet, int nTimeout, bool manual_connection);\n bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, const SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed);\n /** Return readable error string for a network error code */\n std::string NetworkErrorString(int err);"
      }
    ]
  }
]