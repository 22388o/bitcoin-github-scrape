sipa,2021-11-04 14:57:58,"Oh, `std::byte` is already in C++17!",https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-961114306,961114306,
MarcoFalke,2021-11-04 16:06:27,"There seems to be a bug on msvc, because it doesn't eat the code I prepared. There is also no error. Any ideas @sipsorcery ?",https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-961189440,961189440,
DrahtBot,2021-11-05 06:19:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#19690](https://github.com/bitcoin/bitcoin/pull/19690) (util: improve FindByte() performance by LarryRuane)\n* [#16981](h",https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-961653551,961653551,
sipsorcery,2021-11-06 20:44:55,"> There seems to be a bug on msvc, because it doesn't eat the code I prepared. There is also no error. Any ideas @sipsorcery ?\n\nSeems to be a const change for a `bitcoinconsensus_verify_script_with_amount` parameter.\n\nChanging this [line](https://github.com/bitcoin/bitcoin/blob/77a2f5d30c5ecb764b8a7c098492e1f5cdec90f0/build_msvc/testconsensus/testconsensus.cpp#L48) to the below fixes it (I",https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-962507565,962507565,
sipa,2021-11-04 15:03:27,"This probably needs `std::enable_if_t<std::is_const_v<T>, Span<std::byte>>` as return type, to prevent using this on const spans.",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742926098,742926098,src/span.h
sipa,2021-11-04 15:13:02,"Post-#23413, this could also be written as `s.write(AsBytes(Span{&obj,1}));`. Before it's a bit uglier.\n\nI'm not sure it's better, but it does avoid the need to explicitly list the size of the type.",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742935246,742935246,src/serialize.h
MarcoFalke,2021-11-04 15:25:37,"`reinterpret_cast` can not be used to remove constness. This will fail with something like:\n\n```\n./span.h:249:13: error: reinterpret_cast from 'const unsigned char *' to 'std::byte *' casts away qualifiers\n    return {reinterpret_cast<std::byte*>(s.data()), s.size_bytes()};\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnote: in instantiation of function template specialization 'As",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742947533,742947533,src/span.h
sipa,2021-11-04 15:28:37,"Interesting, I wasn't aware of that.\n\nStill, the C++20 `std::as_writable_bytes` definition (at least on cppreference) does state:\n\n> as_writable_bytes only participates in overload resolution if `std::is_const_v<T>` is `false`.\n\nSo I don't think this really changes behavior in any way, but the error you'd get is different (the c++20 one will fail to match the function; the current code",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742950474,742950474,src/span.h
MarcoFalke,2021-11-04 15:29:17,"Yeah, the current version is closer to a refactor (only touching the type of the pointer). Happy to adjust though, if #23413 makes it in in the meantime. I think both versions are equally acceptable.",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742951110,742951110,src/serialize.h
sipa,2021-11-06 04:09:21,I think this could just be `s.ignore(len);`.,https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744072184,744072184,src/pubkey.h
sipa,2021-11-06 04:09:56,Any plan to make hash interfaces also use `Span<std::byte>` based arguments?,https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744072273,744072273,src/hash.h
MarcoFalke,2021-11-06 08:59:01,"Maybe if I am bored over the holiday season, but not now and not in this pull :sweat_smile: ",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744102216,744102216,src/hash.h
MarcoFalke,2021-11-06 18:05:52,Good idea. Done in https://github.com/bitcoin/bitcoin/pull/23451,https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744152394,744152394,src/pubkey.h
MarcoFalke,2021-11-22 09:18:07,"This has been pulled out into https://github.com/bitcoin/bitcoin/pull/23451/files#diff-f9b6e49de18c8395f9f521ead7ac2c688ed91826ebcecea0b7440b6d659c5abcR244 \n\n@sipa Let me know there, if you are against it.",https://github.com/bitcoin/bitcoin/pull/23438#discussion_r754077736,754077736,src/span.h
