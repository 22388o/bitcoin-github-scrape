[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/961114306",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-961114306",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23438",
    "id": 961114306,
    "node_id": "IC_kwDOABII5845SXDC",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T14:57:58Z",
    "updated_at": "2021-11-04T14:57:58Z",
    "author_association": "MEMBER",
    "body": "Oh, `std::byte` is already in C++17!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/961114306/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/961189440",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-961189440",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23438",
    "id": 961189440,
    "node_id": "IC_kwDOABII5845SpZA",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T16:06:27Z",
    "updated_at": "2021-11-04T16:06:27Z",
    "author_association": "MEMBER",
    "body": "There seems to be a bug on msvc, because it doesn't eat the code I prepared. There is also no error. Any ideas @sipsorcery ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/961189440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/961653551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-961653551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23438",
    "id": 961653551,
    "node_id": "IC_kwDOABII5845Uasv",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-05T06:19:41Z",
    "updated_at": "2021-11-24T17:21:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#19690](https://github.com/bitcoin/bitcoin/pull/19690) (util: improve FindByte() performance by LarryRuane)\n* [#16981](https://github.com/bitcoin/bitcoin/pull/16981) (Improve runtime performance of --reindex by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/961653551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/962507565",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#issuecomment-962507565",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23438",
    "id": 962507565,
    "node_id": "IC_kwDOABII5845XrMt",
    "user": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?u=56479352d085f0d392512768d25957b0b3b770b4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-06T20:44:55Z",
    "updated_at": "2021-11-06T20:44:55Z",
    "author_association": "MEMBER",
    "body": "> There seems to be a bug on msvc, because it doesn't eat the code I prepared. There is also no error. Any ideas @sipsorcery ?\r\n\r\nSeems to be a const change for a `bitcoinconsensus_verify_script_with_amount` parameter.\r\n\r\nChanging this [line](https://github.com/bitcoin/bitcoin/blob/77a2f5d30c5ecb764b8a7c098492e1f5cdec90f0/build_msvc/testconsensus/testconsensus.cpp#L48) to the below fixes it (I added the const cast):\r\n\r\n`auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)stream.data(), stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);`\r\n\r\nBut perhaps a better thing to do would be to remove the [build_msvc/testconsensus](https://github.com/bitcoin/bitcoin/tree/master/build_msvc/testconsensus) directory completely. It's a test app that, in hindsight, would have been better put into a unit test somewhere. I suspect no one ever uses it. I haven't looked at it in the 4 years since I first wrote it... I'll submit a PR to remove it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/962507565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742926098",
    "pull_request_review_id": 797865865,
    "id": 742926098,
    "node_id": "PRRC_kwDOABII584sSCcS",
    "diff_hunk": "@@ -236,11 +237,35 @@ T& SpanPopBack(Span<T>& span)\n     return back;\n }\n \n+// From C++20 as_bytes and as_writeable_bytes\n+template <typename T>\n+Span<const std::byte> AsBytes(Span<T> s) noexcept\n+{\n+    return {reinterpret_cast<const std::byte*>(s.data()), s.size_bytes()};\n+}\n+template <typename T>\n+Span<std::byte> AsWriteableBytes(Span<T> s) noexcept",
    "path": "src/span.h",
    "position": null,
    "original_position": 19,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fab18b8b12c3d2351f9927fc728b0510afe92cda",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This probably needs `std::enable_if_t<std::is_const_v<T>, Span<std::byte>>` as return type, to prevent using this on const spans.",
    "created_at": "2021-11-04T15:03:27Z",
    "updated_at": "2021-11-04T15:03:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742926098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742926098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742926098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742926098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 247,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742935246",
    "pull_request_review_id": 797879027,
    "id": 742935246,
    "node_id": "PRRC_kwDOABII584sSErO",
    "diff_hunk": "@@ -47,87 +47,85 @@ static const unsigned int MAX_VECTOR_ALLOCATE = 5000000;\n struct deserialize_type {};\n constexpr deserialize_type deserialize {};\n \n-//! Safely convert odd char pointer types to standard ones.\n-inline char* CharCast(char* c) { return c; }\n-inline char* CharCast(unsigned char* c) { return (char*)c; }\n-inline const char* CharCast(const char* c) { return c; }\n-inline const char* CharCast(const unsigned char* c) { return (const char*)c; }\n+//! Safely convert a data pointer to a std::byte data pointer.\n+inline std::byte* BytePtr(void* data) { return reinterpret_cast<std::byte*>(data); }\n+inline const std::byte* BytePtr(const void* data) { return reinterpret_cast<const std::byte*>(data); }\n \n /*\n  * Lowest-level serialization and conversion.\n  * @note Sizes of these types are verified in the tests\n  */\n template<typename Stream> inline void ser_writedata8(Stream &s, uint8_t obj)\n {\n-    s.write((char*)&obj, 1);\n+    s.write({BytePtr(&obj), 1});\n }\n template<typename Stream> inline void ser_writedata16(Stream &s, uint16_t obj)\n {\n     obj = htole16(obj);\n-    s.write((char*)&obj, 2);\n+    s.write({BytePtr(&obj), 2});\n }\n template<typename Stream> inline void ser_writedata16be(Stream &s, uint16_t obj)\n {\n     obj = htobe16(obj);\n-    s.write((char*)&obj, 2);\n+    s.write({BytePtr(&obj), 2});\n }\n template<typename Stream> inline void ser_writedata32(Stream &s, uint32_t obj)\n {\n     obj = htole32(obj);\n-    s.write((char*)&obj, 4);\n+    s.write({BytePtr(&obj), 4});\n }\n template<typename Stream> inline void ser_writedata32be(Stream &s, uint32_t obj)\n {\n     obj = htobe32(obj);\n-    s.write((char*)&obj, 4);\n+    s.write({BytePtr(&obj), 4});\n }\n template<typename Stream> inline void ser_writedata64(Stream &s, uint64_t obj)\n {\n     obj = htole64(obj);\n-    s.write((char*)&obj, 8);\n+    s.write({BytePtr(&obj), 8});",
    "path": "src/serialize.h",
    "position": 50,
    "original_position": 50,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fa441780ee51250df4b8c50852ebe3b83d158f21",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Post-#23413, this could also be written as `s.write(AsBytes(Span{&obj,1}));`. Before it's a bit uglier.\r\n\r\nI'm not sure it's better, but it does avoid the need to explicitly list the size of the type.",
    "created_at": "2021-11-04T15:13:02Z",
    "updated_at": "2021-11-04T15:13:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742935246",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742935246"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742935246"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742935246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 85,
    "original_line": 85,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742947533",
    "pull_request_review_id": 797896552,
    "id": 742947533,
    "node_id": "PRRC_kwDOABII584sSHrN",
    "diff_hunk": "@@ -236,11 +237,35 @@ T& SpanPopBack(Span<T>& span)\n     return back;\n }\n \n+// From C++20 as_bytes and as_writeable_bytes\n+template <typename T>\n+Span<const std::byte> AsBytes(Span<T> s) noexcept\n+{\n+    return {reinterpret_cast<const std::byte*>(s.data()), s.size_bytes()};\n+}\n+template <typename T>\n+Span<std::byte> AsWriteableBytes(Span<T> s) noexcept",
    "path": "src/span.h",
    "position": null,
    "original_position": 19,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fab18b8b12c3d2351f9927fc728b0510afe92cda",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`reinterpret_cast` can not be used to remove constness. This will fail with something like:\r\n\r\n```\r\n./span.h:249:13: error: reinterpret_cast from 'const unsigned char *' to 'std::byte *' casts away qualifiers\r\n    return {reinterpret_cast<std::byte*>(s.data()), s.size_bytes()};\r\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nnote: in instantiation of function template specialization 'AsWriteableBytes<const unsigned char>' requested here\r\n",
    "created_at": "2021-11-04T15:25:37Z",
    "updated_at": "2021-11-04T15:25:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742947533",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742947533"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742947533"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742947533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 247,
    "side": "RIGHT",
    "in_reply_to_id": 742926098
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742950474",
    "pull_request_review_id": 797900701,
    "id": 742950474,
    "node_id": "PRRC_kwDOABII584sSIZK",
    "diff_hunk": "@@ -236,11 +237,35 @@ T& SpanPopBack(Span<T>& span)\n     return back;\n }\n \n+// From C++20 as_bytes and as_writeable_bytes\n+template <typename T>\n+Span<const std::byte> AsBytes(Span<T> s) noexcept\n+{\n+    return {reinterpret_cast<const std::byte*>(s.data()), s.size_bytes()};\n+}\n+template <typename T>\n+Span<std::byte> AsWriteableBytes(Span<T> s) noexcept",
    "path": "src/span.h",
    "position": null,
    "original_position": 19,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fab18b8b12c3d2351f9927fc728b0510afe92cda",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Interesting, I wasn't aware of that.\r\n\r\nStill, the C++20 `std::as_writable_bytes` definition (at least on cppreference) does state:\r\n\r\n> as_writable_bytes only participates in overload resolution if `std::is_const_v<T>` is `false`.\r\n\r\nSo I don't think this really changes behavior in any way, but the error you'd get is different (the c++20 one will fail to match the function; the current code here will fail at substitution).",
    "created_at": "2021-11-04T15:28:37Z",
    "updated_at": "2021-11-04T15:28:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742950474",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742950474"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742950474"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742950474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 247,
    "side": "RIGHT",
    "in_reply_to_id": 742926098
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742951110",
    "pull_request_review_id": 797901624,
    "id": 742951110,
    "node_id": "PRRC_kwDOABII584sSIjG",
    "diff_hunk": "@@ -47,87 +47,85 @@ static const unsigned int MAX_VECTOR_ALLOCATE = 5000000;\n struct deserialize_type {};\n constexpr deserialize_type deserialize {};\n \n-//! Safely convert odd char pointer types to standard ones.\n-inline char* CharCast(char* c) { return c; }\n-inline char* CharCast(unsigned char* c) { return (char*)c; }\n-inline const char* CharCast(const char* c) { return c; }\n-inline const char* CharCast(const unsigned char* c) { return (const char*)c; }\n+//! Safely convert a data pointer to a std::byte data pointer.\n+inline std::byte* BytePtr(void* data) { return reinterpret_cast<std::byte*>(data); }\n+inline const std::byte* BytePtr(const void* data) { return reinterpret_cast<const std::byte*>(data); }\n \n /*\n  * Lowest-level serialization and conversion.\n  * @note Sizes of these types are verified in the tests\n  */\n template<typename Stream> inline void ser_writedata8(Stream &s, uint8_t obj)\n {\n-    s.write((char*)&obj, 1);\n+    s.write({BytePtr(&obj), 1});\n }\n template<typename Stream> inline void ser_writedata16(Stream &s, uint16_t obj)\n {\n     obj = htole16(obj);\n-    s.write((char*)&obj, 2);\n+    s.write({BytePtr(&obj), 2});\n }\n template<typename Stream> inline void ser_writedata16be(Stream &s, uint16_t obj)\n {\n     obj = htobe16(obj);\n-    s.write((char*)&obj, 2);\n+    s.write({BytePtr(&obj), 2});\n }\n template<typename Stream> inline void ser_writedata32(Stream &s, uint32_t obj)\n {\n     obj = htole32(obj);\n-    s.write((char*)&obj, 4);\n+    s.write({BytePtr(&obj), 4});\n }\n template<typename Stream> inline void ser_writedata32be(Stream &s, uint32_t obj)\n {\n     obj = htobe32(obj);\n-    s.write((char*)&obj, 4);\n+    s.write({BytePtr(&obj), 4});\n }\n template<typename Stream> inline void ser_writedata64(Stream &s, uint64_t obj)\n {\n     obj = htole64(obj);\n-    s.write((char*)&obj, 8);\n+    s.write({BytePtr(&obj), 8});",
    "path": "src/serialize.h",
    "position": 50,
    "original_position": 50,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fa441780ee51250df4b8c50852ebe3b83d158f21",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, the current version is closer to a refactor (only touching the type of the pointer). Happy to adjust though, if #23413 makes it in in the meantime. I think both versions are equally acceptable.",
    "created_at": "2021-11-04T15:29:17Z",
    "updated_at": "2021-11-04T15:29:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742951110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742951110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r742951110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742951110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 85,
    "original_line": 85,
    "side": "RIGHT",
    "in_reply_to_id": 742935246
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744072184",
    "pull_request_review_id": 799414412,
    "id": 744072184,
    "node_id": "PRRC_kwDOABII584sWaP4",
    "diff_hunk": "@@ -136,22 +136,22 @@ class CPubKey\n     {\n         unsigned int len = size();\n         ::WriteCompactSize(s, len);\n-        s.write((char*)vch, len);\n+        s.write({BytePtr(vch), len});\n     }\n     template <typename Stream>\n     void Unserialize(Stream& s)\n     {\n         unsigned int len = ::ReadCompactSize(s);\n         if (len <= SIZE) {\n-            s.read((char*)vch, len);\n+            s.read({BytePtr(vch), len});\n             if (len != size()) {\n                 Invalidate();\n             }\n         } else {\n             // invalid pubkey, skip available data",
    "path": "src/pubkey.h",
    "position": null,
    "original_position": 18,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fa6bde9649bc2ca640a65a9f59cedb8d7e73d1b7",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this could just be `s.ignore(len);`.",
    "created_at": "2021-11-06T04:09:21Z",
    "updated_at": "2021-11-06T04:09:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744072184",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744072184"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744072184"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744072184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 151,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744072273",
    "pull_request_review_id": 799414471,
    "id": 744072273,
    "node_id": "PRRC_kwDOABII584sWaRR",
    "diff_hunk": "@@ -111,8 +111,9 @@ class CHashWriter\n     int GetType() const { return nType; }\n     int GetVersion() const { return nVersion; }\n \n-    void write(const char *pch, size_t size) {\n-        ctx.Write((const unsigned char*)pch, size);\n+    void write(Span<const std::byte> src)\n+    {\n+        ctx.Write(UCharCast(src.data()), src.size());",
    "path": "src/hash.h",
    "position": 8,
    "original_position": 8,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fa6bde9649bc2ca640a65a9f59cedb8d7e73d1b7",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any plan to make hash interfaces also use `Span<std::byte>` based arguments?",
    "created_at": "2021-11-06T04:09:56Z",
    "updated_at": "2021-11-06T04:09:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744072273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744072273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744072273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744072273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 116,
    "original_line": 116,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744102216",
    "pull_request_review_id": 799429500,
    "id": 744102216,
    "node_id": "PRRC_kwDOABII584sWhlI",
    "diff_hunk": "@@ -111,8 +111,9 @@ class CHashWriter\n     int GetType() const { return nType; }\n     int GetVersion() const { return nVersion; }\n \n-    void write(const char *pch, size_t size) {\n-        ctx.Write((const unsigned char*)pch, size);\n+    void write(Span<const std::byte> src)\n+    {\n+        ctx.Write(UCharCast(src.data()), src.size());",
    "path": "src/hash.h",
    "position": 8,
    "original_position": 8,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fa6bde9649bc2ca640a65a9f59cedb8d7e73d1b7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe if I am bored over the holiday season, but not now and not in this pull :sweat_smile: ",
    "created_at": "2021-11-06T08:59:01Z",
    "updated_at": "2021-11-06T08:59:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744102216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744102216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744102216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744102216/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 116,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 744072273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744152394",
    "pull_request_review_id": 799464996,
    "id": 744152394,
    "node_id": "PRRC_kwDOABII584sWt1K",
    "diff_hunk": "@@ -136,22 +136,22 @@ class CPubKey\n     {\n         unsigned int len = size();\n         ::WriteCompactSize(s, len);\n-        s.write((char*)vch, len);\n+        s.write({BytePtr(vch), len});\n     }\n     template <typename Stream>\n     void Unserialize(Stream& s)\n     {\n         unsigned int len = ::ReadCompactSize(s);\n         if (len <= SIZE) {\n-            s.read((char*)vch, len);\n+            s.read({BytePtr(vch), len});\n             if (len != size()) {\n                 Invalidate();\n             }\n         } else {\n             // invalid pubkey, skip available data",
    "path": "src/pubkey.h",
    "position": null,
    "original_position": 18,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fa6bde9649bc2ca640a65a9f59cedb8d7e73d1b7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea. Done in https://github.com/bitcoin/bitcoin/pull/23451",
    "created_at": "2021-11-06T18:05:52Z",
    "updated_at": "2021-11-06T18:05:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744152394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744152394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r744152394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744152394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 151,
    "side": "RIGHT",
    "in_reply_to_id": 744072184
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754077736",
    "pull_request_review_id": 812254088,
    "id": 754077736,
    "node_id": "PRRC_kwDOABII584s8lAo",
    "diff_hunk": "@@ -236,11 +237,35 @@ T& SpanPopBack(Span<T>& span)\n     return back;\n }\n \n+// From C++20 as_bytes and as_writeable_bytes\n+template <typename T>\n+Span<const std::byte> AsBytes(Span<T> s) noexcept\n+{\n+    return {reinterpret_cast<const std::byte*>(s.data()), s.size_bytes()};\n+}\n+template <typename T>\n+Span<std::byte> AsWriteableBytes(Span<T> s) noexcept",
    "path": "src/span.h",
    "position": null,
    "original_position": 19,
    "commit_id": "facf8c332cacec39ff52db6f821e51c1bd7f92c7",
    "original_commit_id": "fab18b8b12c3d2351f9927fc728b0510afe92cda",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This has been pulled out into https://github.com/bitcoin/bitcoin/pull/23451/files#diff-f9b6e49de18c8395f9f521ead7ac2c688ed91826ebcecea0b7440b6d659c5abcR244 \r\n\r\n@sipa Let me know there, if you are against it.",
    "created_at": "2021-11-22T09:18:07Z",
    "updated_at": "2021-11-22T09:18:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r754077736",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754077736"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23438#discussion_r754077736"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23438"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754077736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 247,
    "side": "RIGHT",
    "in_reply_to_id": 742926098
  }
]