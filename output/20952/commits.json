[
  {
    "sha": "ad57fb756b1c2df625790bd9c296ec28daa93740",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDU3ZmI3NTZiMWMyZGY2MjU3OTBiZDljMjk2ZWMyOGRhYTkzNzQw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-17T16:21:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-17T17:10:20Z"
      },
      "message": "wallet: Add BerkeleyDB version sanity check at init time\n\nDetect version conflicts between the run-time BerkeleyDB library and the one used during compilation.\n\nThis is very unsafe (can result in anything from crashes to corruption) so shut down when one is detected.",
      "tree": {
        "sha": "5046596f65379b72d6f563ebe8c95bdf586e1735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5046596f65379b72d6f563ebe8c95bdf586e1735"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad57fb756b1c2df625790bd9c296ec28daa93740",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57fb756b1c2df625790bd9c296ec28daa93740",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57fb756b1c2df625790bd9c296ec28daa93740",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57fb756b1c2df625790bd9c296ec28daa93740/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30e664dcce1a9adb9ba9a29e4f0cf809767870dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30e664dcce1a9adb9ba9a29e4f0cf809767870dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30e664dcce1a9adb9ba9a29e4f0cf809767870dd"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c0d107bf3937a061d2bc78687f6d6e107475d419",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad57fb756b1c2df625790bd9c296ec28daa93740/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad57fb756b1c2df625790bd9c296ec28daa93740/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=ad57fb756b1c2df625790bd9c296ec28daa93740",
        "patch": "@@ -723,6 +723,23 @@ bool BerkeleyBatch::TxnAbort()\n     return (ret == 0);\n }\n \n+bool BerkeleyDatabaseSanityCheck()\n+{\n+    int major, minor;\n+    DbEnv::version(&major, &minor, nullptr);\n+\n+    /* If the major version differs, or the minor version of library is *older*\n+     * than the header that was compiled against, flag an error.\n+     */\n+    if (major != DB_VERSION_MAJOR || minor < DB_VERSION_MINOR) {\n+        LogPrintf(\"BerkeleyDB database version conflict: header version is %d.%d, library version is %d.%d\\n\",\n+            DB_VERSION_MAJOR, DB_VERSION_MINOR, major, minor);\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n std::string BerkeleyDatabaseVersion()\n {\n     return DbEnv::version(nullptr, nullptr, nullptr);"
      },
      {
        "sha": "a8209587d7d061e2401c9c7f218f49570cef57d0",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad57fb756b1c2df625790bd9c296ec28daa93740/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad57fb756b1c2df625790bd9c296ec28daa93740/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=ad57fb756b1c2df625790bd9c296ec28daa93740",
        "patch": "@@ -223,6 +223,10 @@ class BerkeleyBatch : public DatabaseBatch\n \n std::string BerkeleyDatabaseVersion();\n \n+/** Perform sanity check of runtime BDB version versus linked BDB version.\n+ */\n+bool BerkeleyDatabaseSanityCheck();\n+\n //! Return object giving access to Berkeley database at specified path.\n std::unique_ptr<BerkeleyDatabase> MakeBerkeleyDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\n "
      },
      {
        "sha": "0d2be64dfba96f5ece5dad281ddaeb594037a383",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad57fb756b1c2df625790bd9c296ec28daa93740/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad57fb756b1c2df625790bd9c296ec28daa93740/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=ad57fb756b1c2df625790bd9c296ec28daa93740",
        "patch": "@@ -86,6 +86,11 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n \n bool WalletInit::ParameterInteraction() const\n {\n+#ifdef USE_BDB\n+     if (!BerkeleyDatabaseSanityCheck()) {\n+         return InitError(Untranslated(\"A version conflict was detected between the run-time BerkeleyDB library and the one used during compilation.\"));\n+     }\n+#endif\n     if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         for (const std::string& wallet : gArgs.GetArgs(\"-wallet\")) {\n             LogPrintf(\"%s: parameter interaction: -disablewallet -> ignoring -wallet=%s\\n\", __func__, wallet);"
      }
    ]
  }
]