[
  {
    "sha": "9514cb04aee235677c70ebefa3504ef16c37594e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTE0Y2IwNGFlZTIzNTY3N2M3MGViZWZhMzUwNGVmMTZjMzc1OTRl",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2014-11-13T07:32:44Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2014-11-13T07:32:44Z"
      },
      "message": "Check PoW in AcceptBlockHeader and not LoadBlockIndex.\n\nAdd a check for the PoW's validity to AcceptBlockHeader, and disable the\ncheck during LoadBlockIndex.  Previously, if a peer sends headers with\ninvalid PoW, they would be accepted to the on-disk block index, but then\nloading it on the next start would fail.",
      "tree": {
        "sha": "f8780b796f919861aa01250337a9c08300ddae32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8780b796f919861aa01250337a9c08300ddae32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9514cb04aee235677c70ebefa3504ef16c37594e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9514cb04aee235677c70ebefa3504ef16c37594e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9514cb04aee235677c70ebefa3504ef16c37594e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9514cb04aee235677c70ebefa3504ef16c37594e/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60672a61ff7bd9679e1c7683c28ecdf0f02daaeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60672a61ff7bd9679e1c7683c28ecdf0f02daaeb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60672a61ff7bd9679e1c7683c28ecdf0f02daaeb"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "218ad1e412981bc976599c3b9ed00f95077cba26",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9514cb04aee235677c70ebefa3504ef16c37594e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9514cb04aee235677c70ebefa3504ef16c37594e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9514cb04aee235677c70ebefa3504ef16c37594e",
        "patch": "@@ -2363,7 +2363,8 @@ bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBloc\n \n         // Check proof of work\n         if ((!Params().SkipProofOfWorkCheck()) &&\n-           (block.nBits != GetNextWorkRequired(pindexPrev, &block)))\n+           (block.nBits != GetNextWorkRequired(pindexPrev, &block)\n+            || !CheckProofOfWork(block.GetHash(), block.nBits)))\n             return state.DoS(100, error(\"%s : incorrect proof of work\", __func__),\n                              REJECT_INVALID, \"bad-diffbits\");\n "
      },
      {
        "sha": "76c0c88f92953bebe74e4be13b631ed09934deea",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9514cb04aee235677c70ebefa3504ef16c37594e/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9514cb04aee235677c70ebefa3504ef16c37594e/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=9514cb04aee235677c70ebefa3504ef16c37594e",
        "patch": "@@ -212,9 +212,6 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits))\n-                    return error(\"LoadBlockIndex() : CheckProofOfWork failed: %s\", pindexNew->ToString());\n-\n                 pcursor->Next();\n             } else {\n                 break; // if shutdown requested or finished loading block index"
      }
    ]
  }
]