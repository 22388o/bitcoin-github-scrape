[
  {
    "sha": "da73f1513a637a9f347b64de66564d6cdb2541f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTczZjE1MTNhNjM3YTlmMzQ3YjY0ZGU2NjU2NGQ2Y2RiMjU0MWY4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-27T18:29:20Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-13T13:14:04Z"
      },
      "message": "qt: Fix shutdown when waitfor* cmds are called from RPC console",
      "tree": {
        "sha": "80576a5b81b17858d82b11f2d0163c12303b13bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80576a5b81b17858d82b11f2d0163c12303b13bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da73f1513a637a9f347b64de66564d6cdb2541f8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl678p4ACgkQQQEIES5+\nqB/hWBAAqf7WShzKJtqV7/ZNh5pbT9RfbHOOqufkwAnWdVqSgG2YcczP8Do3X/2T\n9yZUci/jY71RX5eaF3uH5T+umiXBpkQyAv/BjV2x1yfDOG0pAQXLh5zYY38nTYLr\ngrMoP0D3oQsGtaT24I4ZwzVrKQt/AHeR1nP/Ix6rit8pl5L87A+DcLaEsNl2KCAB\npLHLFuQhoTg2eF3ed17a3M0CGqM5AzIYXYzWa1RrGOj1CFwUHTQ+XSux+DznMB24\nQ+3De2B3XFv0oHAD5HKQjNb/9vNybb4bD9RTY3JpmpmOcNzh85YWuG+ornssdNKx\n7qC9OhMXkSvfRgLcFK5x4hRfRRFCaGScD6E6r41UHFrM1aaChaFrLxneR3+Cc7cx\nyYBH9vlnidTx3H7YazRtQFFJwEMaoMmmsCXdESE6lsortpHYS59K/LtxN5rxbg+j\ncyQXjIppmGAFPDFamWNKLvEFA22HyMW0bFe5buhTRYVd8k2Ow1Dp2aDLAc44XE4m\nwX7KBhOu9ggVZkD3XuxBLaJiQczIa1wQZRsY23qG/kO9O0zC0wTgOVXLYrSbHQy/\na9eYrRv8w0VXvT8lKVRGs5GbzC3sk3lOUKfQh/SofZJtI3N492aSBjBryFJL6I/p\nlfeeQC1I4hticpwGd9ZjPSLkIqXlAib6O+XAr6Jy/XoYQxu6AVc=\n=DpdO\n-----END PGP SIGNATURE-----",
        "payload": "tree 80576a5b81b17858d82b11f2d0163c12303b13bd\nparent a33901cb6d82e2f75aab67f80a8852b7e6e9817a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1585333760 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589375644 +0300\n\nqt: Fix shutdown when waitfor* cmds are called from RPC console\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da73f1513a637a9f347b64de66564d6cdb2541f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da73f1513a637a9f347b64de66564d6cdb2541f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da73f1513a637a9f347b64de66564d6cdb2541f8/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a33901cb6d82e2f75aab67f80a8852b7e6e9817a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a33901cb6d82e2f75aab67f80a8852b7e6e9817a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a33901cb6d82e2f75aab67f80a8852b7e6e9817a"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 27,
      "deletions": 8
    },
    "files": [
      {
        "sha": "91ed1dc72f2f6c7410848f7fa1a1888115869624",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da73f1513a637a9f347b64de66564d6cdb2541f8/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da73f1513a637a9f347b64de66564d6cdb2541f8/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=da73f1513a637a9f347b64de66564d6cdb2541f8",
        "patch": "@@ -87,7 +87,15 @@ class NodeImpl : public Node\n         Interrupt(m_context);\n         Shutdown(m_context);\n     }\n-    void startShutdown() override { StartShutdown(); }\n+    void startShutdown() override\n+    {\n+        StartShutdown();\n+        // Stop RPC for clean shutdown if any of waitfor* commands is executed.\n+        if (gArgs.GetBoolArg(\"-server\", false)) {\n+            InterruptRPC();\n+            StopRPC();\n+        }\n+    }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n     void mapPort(bool use_upnp) override\n     {"
      },
      {
        "sha": "9b7412cb769a7db8da92f5c7cf3219a79706a3e4",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 7,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da73f1513a637a9f347b64de66564d6cdb2541f8/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da73f1513a637a9f347b64de66564d6cdb2541f8/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=da73f1513a637a9f347b64de66564d6cdb2541f8",
        "patch": "@@ -15,11 +15,15 @@\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n \n+#include <cassert>\n #include <memory> // for unique_ptr\n+#include <mutex>\n #include <unordered_map>\n \n static RecursiveMutex cs_rpcWarmup;\n static std::atomic<bool> g_rpc_running{false};\n+static std::once_flag g_rpc_interrupt_flag;\n+static std::once_flag g_rpc_stop_flag;\n static bool fRPCInWarmup GUARDED_BY(cs_rpcWarmup) = true;\n static std::string rpcWarmupStatus GUARDED_BY(cs_rpcWarmup) = \"RPC server started\";\n /* Timer-creating functions */\n@@ -291,17 +295,24 @@ void StartRPC()\n \n void InterruptRPC()\n {\n-    LogPrint(BCLog::RPC, \"Interrupting RPC\\n\");\n-    // Interrupt e.g. running longpolls\n-    g_rpc_running = false;\n+    // This function could be called twice if the GUI has been started with -server=1.\n+    std::call_once(g_rpc_interrupt_flag, []() {\n+        LogPrint(BCLog::RPC, \"Interrupting RPC\\n\");\n+        // Interrupt e.g. running longpolls\n+        g_rpc_running = false;\n+    });\n }\n \n void StopRPC()\n {\n-    LogPrint(BCLog::RPC, \"Stopping RPC\\n\");\n-    WITH_LOCK(g_deadline_timers_mutex, deadlineTimers.clear());\n-    DeleteAuthCookie();\n-    g_rpcSignals.Stopped();\n+    // This function could be called twice if the GUI has been started with -server=1.\n+    assert(!g_rpc_running);\n+    std::call_once(g_rpc_stop_flag, []() {\n+        LogPrint(BCLog::RPC, \"Stopping RPC\\n\");\n+        WITH_LOCK(g_deadline_timers_mutex, deadlineTimers.clear());\n+        DeleteAuthCookie();\n+        g_rpcSignals.Stopped();\n+    });\n }\n \n bool IsRPCRunning()"
      }
    ]
  }
]