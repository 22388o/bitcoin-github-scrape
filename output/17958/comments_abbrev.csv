brakmic,2020-01-18 19:22:05,"> -0.1 on adding this. I'm not sure what the use case is; there are already calls like `bitcoin-cli -version` and `bitcoin-cli -getinfo`, and unless I'm missing something the user knows any custom dir settings either from having set them in the .conf file or from passing them as startup option args. Perhaps as additions to -getinfo, if really desired? See also #17314.\n\nIf there is any problem ",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-575930599,575930599,
jonatack,2020-01-18 20:15:46,I understand better now what the use case is after @msafi's explanation.,https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-575934613,575934613,
DrahtBot,2020-01-18 21:32:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#18038](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18038.html) (P2P: Mempool tracks locally submitted trans",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-575940282,575940282,
emilengler,2020-01-19 16:29:26,Why isn't the BerkeleyDB version included?,https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576021694,576021694,
brakmic,2020-01-19 16:35:03,"> Why isn't the BerkeleyDB version included?\n\nBecause it wasn't asked for in the feature request. \nHowever, this shouldn't be a problem to include later. But first I'll wait for more ACKs/NACKs regarding the PR itself before changing anything.",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576022213,576022213,
emilengler,2020-01-19 16:36:00,"> Because it wasn't asked for in the feature request.\n\nIf we display the GUI stuff in text form we should display it all including the BDB version",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576022315,576022315,
brakmic,2020-01-19 16:37:05,"> > Because it wasn't asked for in the feature request.\n> \n> If we display the GUI stuff in text form we should display it all including the BDB version\n\nNo problem, this can be included. However, first we should wait for more reviews.",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576022426,576022426,
msafi,2020-01-19 16:53:09,"@MarcoFalke `startuptime` can be derived from `uptime` and `useragent` seems to be the same as `subversion` in `networkinfo` so I guess these two could be removed.\n\nBut the following data is missing from `getnetworkinfo`:\n\n* Version build number and suffix\n* `datadir`\n* `blocksdir`\n* BerkeleyDB version (if we wanna include that)",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576023845,576023845,
MarcoFalke,2020-01-19 20:26:11,"> Version build number and suffix\n\nIt is in `getnetworkinfo` (as an int, and not a str unfortunately)\n\n> datadir, blocksdir\n\nWhat would the use case be?\n\n> BerkeleyDB version (if we wanna include that)\n\nThis should go in `getwalletinfo`, but I can't see a use case for that",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576043259,576043259,
emilengler,2020-01-19 20:29:12,"> This should go in getwalletinfo, but I can't see a use case for that\n\nWhy is it included in the GUI then? IMO everything which accessible through the GUI should be accessible through the RPC interface as well. Why even bother about a concept that is already implemented in some way?",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576043545,576043545,
jonatack,2020-01-19 21:08:06,"Sure, it's a large, legacy codebase and there are inconsistencies. Meanwhile, is a regression or CVE getting past review somewhere? WRT external wallets using the RPC interface, I agree more feedback on the use cases may be helpful.",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576047480,576047480,
msafi,2020-01-19 22:59:41,"@MarcoFalke The use-case is to build a GUI that works fully through RPC.\n\nJonas Schnelli [said this](https://github.com/bitcoin/bitcoin/issues/17395#issuecomment-552166858):\n\n>If I would have some wishes open, one of them would be that the GUI works perfectly asynchronous over the RPC interface\n\nI'm working on such a GUI. But regardless of what I'm working on, if there's a desire to re",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576057284,576057284,
jonasschnelli,2020-01-20 05:35:13,"General Concept ACK.\n\nI think it can be useful to get the `Version build number and suffix` through RPC. Also, it should not hurt to add the `blocksdir` and `datadir` to an existing RPC call (though not sure where it would fit, `getnetworkinfo` or `getblockchaininfo` may suit best). Unsure about adding a new call.\n\nIf there is a use case for the BDB version info (is there?), it should (mus",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576114077,576114077,
msafi,2020-01-20 07:36:24,"Because the BDB version is available on the GUI and it's easy to add, I think it should be included.\n\nI think it might help avoid subjectivity and decision fatigue if we were to establish some general criteria/guidelines for what is allowed to be added to RPC.",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576144394,576144394,
jonasschnelli,2020-01-20 07:49:04,"> Because the BDB version is available on the GUI and it's easy to add, I think it should be included.\n\nThe GUI isn't perfect and a pure 1:1 replication through the RPC API is maybe not the best approach.\n\nI would rather think about possible use cases why someone would want to know the Berkley-DB version (wallet file incompatibility?).\n\n> I think it might help avoid subjectivity and de",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576148393,576148393,
jonatack,2020-01-20 08:32:43,"I agree. If I had to give a general guideline as an exercise, I'd say, in roughly decreasing order of priority: fixing bugs, improving security/test coverage, addressing real use cases, doing nothing or doing less/removing code, doing more/adding code.",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576164241,576164241,
fanquake,2020-01-20 09:56:31,"> I think it might help avoid subjectivity and decision fatigue if we were to establish some general criteria/guidelines for what is allowed to be added to RPC.\n\n@msafi In my opinion, even though it may have happened in the past, the bar for adding a new RPC to `bitcoind` is currently far higher than a single developer (or two) wanting it for a (proof-of-concept) project.\n\nNew RPCs come wi",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576196490,576196490,
promag,2020-01-20 10:13:33,"Agree with @fanquake.\n\n@msafi my suggestion is to keep working on the gui-over-rpc and skip this detail. With that you'll be in a better position to request these changes.\n\n> > This should go in getwalletinfo, but I can't see a use case for that\n> \n> Why is it included in the GUI then? IMO everything which accessible through the GUI should be accessible through the RPC interface as wel",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576203253,576203253,
emilengler,2020-01-20 13:01:25,"> @emilengler it's a different case, the GUI is the node.\n\nThe question was not what's the node. I was more referring to the way how the/a node can be accessed (RPC, GUI)",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576264285,576264285,
promag,2020-01-20 14:00:40,"> how the/a node can be accessed\n\nRight, either you access a remote node or the local node. The existing GUI is to access the local node, and in that case makes sense to see the datadir. But for remote access, the datadir is not that relevant, or is it?",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576286907,576286907,
msafi,2020-01-20 18:27:35,">the bar for adding a new RPC to `bitcoind` is currently far higher than a single developer (or two) wanting it for a (proof-of-concept) project.\n\nI agree. That's how it should be. That's why I didn't want this feature request to be about my project because in that case it's not worth the overhead for Bitcoin Core. But my being the only one to request it doesn't mean I'm the only one wanting i",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576387406,576387406,
emilengler,2020-01-20 19:24:56,"> But for remote access, the datadir is not that relevant, or is it?\n\nIt is. The RPC interface is also used by the admins with bitcoin-cli who might wanna know where it is located",https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-576402757,576402757,
DrahtBot,2020-02-02 08:55:44,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-581113259,581113259,
fanquake,2020-02-03 05:37:58,Going to close this for now. Maybe we can revisit it in the future.,https://github.com/bitcoin/bitcoin/pull/17958#issuecomment-581246526,581246526,
msafi,2020-01-18 18:13:49,"Is it better to move this function to [`server.cpp`](https://github.com/bitcoin/bitcoin/blob/a654626f076a72416a3d354218d7107571d6caaf/src/rpc/server.cpp) since that file contains the majority of `control` commands, like `getrpcinfo` and `uptime`?",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368240462,368240462,src/rpc/misc.cpp
msafi,2020-01-18 18:20:22,"In my opinion, it would be more helpful to show values here that look like the real ones, like this\n\n```json\n{\n  ""clientversion"": ""v0.19.99.0-a654626f0-dirty"",\n  ""useragent"": ""/Satoshi:0.19.99/"",\n  ""datadir"": ""/Users/brakmic/Library/Application Support/Bitcoin/regtest"",\n  ""blocksdir"": ""/Users/brakmic/Library/Application Support/Bitcoin/regtest/blocks"",\n  ""startuptime"": ""2020-01-18T",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368240813,368240813,src/rpc/misc.cpp
msafi,2020-01-18 18:22:34,`uptime` in `server.cpp` returns type `int64_t`. I think for consistency it would be better for `startuptime` to return the same thing. The consumer of the timestamp can choose how to format it.,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368240918,368240918,src/rpc/misc.cpp
brakmic,2020-01-18 18:25:12,"I could move them there. Actually, I put them in misc.cpp because I wasn't sure where to put it best. Maybe we should wait for additional input from others before changing the current variant?",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368241047,368241047,src/rpc/misc.cpp
brakmic,2020-01-18 18:25:47,"Yeah, I will put more realistic values in there. ",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368241076,368241076,src/rpc/misc.cpp
brakmic,2020-01-18 18:27:32,"Well, the GUI shows a properly formatted / localized time. Returning a numeric value would maybe collide with user expectations? Or we could simply return two values (raw number and localized one). In any case, this should not be a big problem. Let's wait for more input, shall we? :)",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368241174,368241174,src/rpc/misc.cpp
jonatack,2020-01-18 18:47:00,"I think this should not contain values, just types and description. See the code for other rpcs.",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368242199,368242199,src/rpc/misc.cpp
jonatack,2020-01-18 18:49:15,"Do you need a clean chain? If not, use False to use the cached data; see test/functional/README.md: \n```text\nSet the `self.setup_clean_chain` variable in `set_test_params()`\nto control whether or not to use the cached data directories.\n```",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368242323,368242323,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-18 18:50:21,Please use a docstring and/or logging.,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368242375,368242375,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-18 19:03:16,"perhaps\n```python\n    def skip_test_if_missing_module(self):\n        self.skip_if_no_cli()\n```\nalso, does the test require the wallet being built and loaded to function?",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368242971,368242971,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-18 19:06:15,Perhaps add these tests into an existing testfile like interface_bitcoin_cli.py.,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368243096,368243096,test/functional/rpc_getgeneralinfo.py
brakmic,2020-01-18 19:18:35,"I have consulted other RPC's and I must admit that there is no consistency, imo. Some examples use dummy values (for example: getaddednodeinfo) while others show potential values like ""true|false"" or data types like ""n"" (for example: getnettotals). All in all, I don't know what's the right way, but I will follow your advice and simply put some short info entries for every field. ",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368243658,368243658,src/rpc/misc.cpp
brakmic,2020-01-18 19:25:31,"Yes, many thanks!",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368244002,368244002,test/functional/rpc_getgeneralinfo.py
brakmic,2020-01-18 19:28:03,Would this mean that I should remove rpc_getgeneralinfo.py? Shouldn't every RPC call have its own test file?,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368244138,368244138,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-18 19:41:59,"Oh right, never mind, here it's implemented as an RPC and not the CLI. I conflated the two since it seemed like a CLI call :) About separate tests: We want the functional tests to run as quickly as possible, so if it's feasible to add this small test in a logical place in an existing setup, it might be better. That said, I wouldn't worry about it unless this PR gets Concept ACKs and others say the",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368244706,368244706,test/functional/rpc_getgeneralinfo.py
brakmic,2020-01-18 19:56:21,"Thanks!\nOk, then I'll leave it as it is for now and will then come back when/if this PR gets enough ACKs.",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368245366,368245366,test/functional/rpc_getgeneralinfo.py
emilengler,2020-01-19 16:37:45,Please use `#` if it's a one line comment,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368306556,368306556,test/functional/rpc_getgeneralinfo.py
emilengler,2020-01-19 16:38:02,Why not put this into a tuple,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368306573,368306573,test/functional/rpc_getgeneralinfo.py
brakmic,2020-01-19 16:39:39,"Please, check previous reviews from @jonatack \nI have already changed those comments from # to doctype. \n",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368306660,368306660,test/functional/rpc_getgeneralinfo.py
brakmic,2020-01-19 16:41:02,"I don't understand the context. However, I am not that experienced in python so it could be that my code is not following best-practices.",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368306742,368306742,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-19 17:28:36,"As a general thought, I'd humbly suggest spending time looking at existing tests here, reviewing, practising writing PRs without opening them, and polishing PRs more before adding them to the stack of open PRs to review. Maybe I'm doing this wrong, but I have dozens of finished commits that I've written locally without opening PRs to (a) to learn the codebase, and (b) to maintain a ratio of 5-15 P",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368309394,368309394,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-19 17:29:55,I agree with @emilengler and would suggest spending some time looking at the other tests and the PEP8 style guide.,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368309459,368309459,test/functional/rpc_getgeneralinfo.py
brakmic,2020-01-19 17:35:12,"Well, the best way to learn something is by doing it. Reading docs is fine, sure, but in the end you have to ""say something"" so others can hear you (and give you a proper critique). Docs don't correct you if you get something wrong. Anyway, I think it's best to close this PR, just to make the PR-mountain a bit smaller. This RPC call isn't that important anyway, I think.",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368309731,368309731,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-19 17:38:45,"I have a lot to learn but these two articles based on the past ten months might be helpful:\n- https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core\n- https://jonatack.github.io/articles/how-to-contribute-pull-requests-to-bitcoin-core",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368309965,368309965,test/functional/rpc_getgeneralinfo.py
msafi,2020-01-19 17:39:10,"@jonatack Is this PR really that bad? I spent a few weeks looking at the codebase and tests and I would have raised a similar PR.\n\nWill read the articles, thanks!",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368309996,368309996,test/functional/rpc_getgeneralinfo.py
jonatack,2020-01-19 17:56:15,"> @jonatack Is this PR really that bad? I spent a few weeks looking at the codebase and tests and I would have raised a similar PR.\n\nWell, we all do. I think the best way for you to answer your question is to review a few dozen of the open PRs. Here are the high-priority ones that really need review: https://github.com/bitcoin/bitcoin/projects/8\n",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r368310863,368310863,test/functional/rpc_getgeneralinfo.py
luke-jr,2020-01-27 17:33:28,"Times should be seconds-since-epoch Numbers, not formatted strings.",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r371380728,371380728,src/rpc/misc.cpp
brakmic,2020-01-27 17:36:45,"I tried to imitate the output in the UI, hence the formatting. However, this is no problem, I can return it as seconds-since-epoch. But I think this PR will never get into the code anyway (please, check previous discussion if not done already).  ",https://github.com/bitcoin/bitcoin/pull/17958#discussion_r371382328,371382328,src/rpc/misc.cpp
brakmic,2020-01-27 17:47:58,Have updated the code. Thanks for the hint. ,https://github.com/bitcoin/bitcoin/pull/17958#discussion_r371387973,371387973,src/rpc/misc.cpp
