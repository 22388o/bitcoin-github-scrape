[
  {
    "sha": "7901647d722bcc5b0554ad73b14481cbe73608e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTAxNjQ3ZDcyMmJjYzViMDU1NGFkNzNiMTQ0ODFjYmU3MzYwOGU0",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-13T13:57:20Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-23T19:02:35Z"
      },
      "message": "refactor: rename active_chainstate in VerifyDB\n\nTo prepare VerifyDB semantics for multiple\nchainstate use.",
      "tree": {
        "sha": "b7c04b460bbc1cfe5f208c1e3672e7301d8af1a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7c04b460bbc1cfe5f208c1e3672e7301d8af1a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7901647d722bcc5b0554ad73b14481cbe73608e4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmCDGc0ACgkQepNdrbLE\nTwWqvhAAiDKCbvxlj03p1n918a8w4p5JrmRbnbI/3t2I5Q0USW/ZUVW0L1qbIrDs\nqtv1VUBh8xOH5MCqLxnKh1v7YpG82mOW/H7jZDQjpcXONITEgA1qrFxBq7n08fIQ\ncdfdUFRpF5o8AwxseoaxdOij0nsiMY8wSVsX9c1P+/OoFYrJCo1I8vG4bp8wagxJ\nbOsxuCCEMrbAS6xGNhq5ZtuFelo3Hd41kaSsIJ9uoj6l4PSQsOe/ZqCsPFTtm+g4\ngmIB2jG5a3T3w1gl+ZHQEG9ZitwSb9XkasUNpDgKLPliUutMoYAWZmhrd9OR0R9q\nl0VOB6+UfBkLIpBwi/DFarWMt42DvGBmt7+BfKYXU+NyG67C2W14Wu+bniRldY3g\nnhlPsil1RjvYVN8vtKgGOaQGwK8Se2J9+QAo6vOG2QAEXKeGNPG/ZvYU0OzzD85o\nD8CifwM5r5tovy5rfXm0DBHE+ce9dB0EJPbTLrypTgiIr3lsf61IhTQszKwOkoWD\nhOKjlCod12HUIKfq2KHKTmUM2iDtwK4Wv9meNSh7njTsAZ9g945SNQPzfoYKaNB8\nNown5t7QpV6PChr+1td+aJnWTZL9Et/FdEhul+k5vAgy4i0/YhFKSMSYIX+vRE21\n17S7TnLaC5uNdmNmUSAPUC92SqeFT3yryy9g20WW0k74aRQ3OkQ=\n=fZQP\n-----END PGP SIGNATURE-----",
        "payload": "tree b7c04b460bbc1cfe5f208c1e3672e7301d8af1a7\nparent 66fd3b28e85c167f3955b5603496daf8d91abcad\nauthor James O'Beirne <james.obeirne@pm.me> 1618322240 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1619204555 -0400\n\nrefactor: rename active_chainstate in VerifyDB\n\nTo prepare VerifyDB semantics for multiple\nchainstate use.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7901647d722bcc5b0554ad73b14481cbe73608e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7901647d722bcc5b0554ad73b14481cbe73608e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7901647d722bcc5b0554ad73b14481cbe73608e4/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66fd3b28e85c167f3955b5603496daf8d91abcad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66fd3b28e85c167f3955b5603496daf8d91abcad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66fd3b28e85c167f3955b5603496daf8d91abcad"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 30,
      "deletions": 19
    },
    "files": [
      {
        "sha": "ccf3680817388a79dd129980e6888a9292f0d19f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7901647d722bcc5b0554ad73b14481cbe73608e4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7901647d722bcc5b0554ad73b14481cbe73608e4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7901647d722bcc5b0554ad73b14481cbe73608e4",
        "patch": "@@ -1554,7 +1554,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                         // work when we allow VerifyDB to be parameterized by chainstate.\n                         if (&::ChainstateActive() == chainstate &&\n                             !CVerifyDB().VerifyDB(\n-                                chainparams, *chainstate, &chainstate->CoinsDB(),\n+                                *chainstate, chainparams, &chainstate->CoinsDB(),\n                                 args.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n                                 args.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                             strLoadError = _(\"Corrupted block database detected\");"
      },
      {
        "sha": "8e029b134bfe34a35926b62fd4e29b5dd69ee669",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7901647d722bcc5b0554ad73b14481cbe73608e4/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7901647d722bcc5b0554ad73b14481cbe73608e4/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=7901647d722bcc5b0554ad73b14481cbe73608e4",
        "patch": "@@ -1239,7 +1239,7 @@ static RPCHelpMan verifychain()\n     LOCK(cs_main);\n \n     CChainState& active_chainstate = chainman.ActiveChainstate();\n-    return CVerifyDB().VerifyDB(Params(), active_chainstate, &active_chainstate.CoinsTip(), check_level, check_depth);\n+    return CVerifyDB().VerifyDB(active_chainstate, Params(), &active_chainstate.CoinsTip(), check_level, check_depth);\n },\n     };\n }"
      },
      {
        "sha": "6fe096465afdf8fa0a2f7004ec0c93076543b055",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 16,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7901647d722bcc5b0554ad73b14481cbe73608e4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7901647d722bcc5b0554ad73b14481cbe73608e4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=7901647d722bcc5b0554ad73b14481cbe73608e4",
        "patch": "@@ -4101,17 +4101,21 @@ CVerifyDB::~CVerifyDB()\n     uiInterface.ShowProgress(\"\", 100, false);\n }\n \n-bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n+bool CVerifyDB::VerifyDB(\n+    CChainState& chainstate,\n+    const CChainParams& chainparams,\n+    CCoinsView* coinsview,\n+    int nCheckLevel, int nCheckDepth)\n {\n     AssertLockHeld(cs_main);\n \n-    assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n-    if (active_chainstate.m_chain.Tip() == nullptr || active_chainstate.m_chain.Tip()->pprev == nullptr)\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(chainstate));\n+    if (chainstate.m_chain.Tip() == nullptr || chainstate.m_chain.Tip()->pprev == nullptr)\n         return true;\n \n     // Verify blocks in the best chain\n-    if (nCheckDepth <= 0 || nCheckDepth > active_chainstate.m_chain.Height())\n-        nCheckDepth = active_chainstate.m_chain.Height();\n+    if (nCheckDepth <= 0 || nCheckDepth > chainstate.m_chain.Height())\n+        nCheckDepth = chainstate.m_chain.Height();\n     nCheckLevel = std::max(0, std::min(4, nCheckLevel));\n     LogPrintf(\"Verifying last %i blocks at level %i\\n\", nCheckDepth, nCheckLevel);\n     CCoinsViewCache coins(coinsview);\n@@ -4121,15 +4125,15 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_ch\n     BlockValidationState state;\n     int reportDone = 0;\n     LogPrintf(\"[0%%]...\"); /* Continued */\n-    for (pindex = active_chainstate.m_chain.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n-        const int percentageDone = std::max(1, std::min(99, (int)(((double)(active_chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n+    for (pindex = chainstate.m_chain.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n+        const int percentageDone = std::max(1, std::min(99, (int)(((double)(chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n         if (reportDone < percentageDone/10) {\n             // report every 10% step\n             LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n             reportDone = percentageDone/10;\n         }\n         uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n-        if (pindex->nHeight <= active_chainstate.m_chain.Height()-nCheckDepth)\n+        if (pindex->nHeight <= chainstate.m_chain.Height()-nCheckDepth)\n             break;\n         if (fPruneMode && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             // If pruning, only go back as far as we have data.\n@@ -4154,9 +4158,11 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_ch\n             }\n         }\n         // check level 3: check for inconsistencies during memory-only disconnect of tip blocks\n-        if (nCheckLevel >= 3 && (coins.DynamicMemoryUsage() + active_chainstate.CoinsTip().DynamicMemoryUsage()) <= active_chainstate.m_coinstip_cache_size_bytes) {\n+        int64_t curr_coins_usage = coins.DynamicMemoryUsage() + chainstate.CoinsTip().DynamicMemoryUsage();\n+\n+        if (nCheckLevel >= 3 && static_cast<unsigned long>(curr_coins_usage) <= chainstate.m_coinstip_cache_size_bytes) {\n             assert(coins.GetBestBlock() == pindex->GetBlockHash());\n-            DisconnectResult res = active_chainstate.DisconnectBlock(block, pindex, coins);\n+            DisconnectResult res = chainstate.DisconnectBlock(block, pindex, coins);\n             if (res == DISCONNECT_FAILED) {\n                 return error(\"VerifyDB(): *** irrecoverable inconsistency in block data at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n             }\n@@ -4170,26 +4176,26 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_ch\n         if (ShutdownRequested()) return true;\n     }\n     if (pindexFailure)\n-        return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", active_chainstate.m_chain.Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n+        return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", chainstate.m_chain.Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n \n     // store block count as we move pindex at check level >= 4\n-    int block_count = active_chainstate.m_chain.Height() - pindex->nHeight;\n+    int block_count = chainstate.m_chain.Height() - pindex->nHeight;\n \n     // check level 4: try reconnecting blocks\n     if (nCheckLevel >= 4) {\n-        while (pindex != active_chainstate.m_chain.Tip()) {\n-            const int percentageDone = std::max(1, std::min(99, 100 - (int)(((double)(active_chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * 50)));\n+        while (pindex != chainstate.m_chain.Tip()) {\n+            const int percentageDone = std::max(1, std::min(99, 100 - (int)(((double)(chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * 50)));\n             if (reportDone < percentageDone/10) {\n                 // report every 10% step\n                 LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n                 reportDone = percentageDone/10;\n             }\n             uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n-            pindex = active_chainstate.m_chain.Next(pindex);\n+            pindex = chainstate.m_chain.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n                 return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n-            if (!active_chainstate.ConnectBlock(block, state, pindex, coins, chainparams))\n+            if (!chainstate.ConnectBlock(block, state, pindex, coins, chainparams))\n                 return error(\"VerifyDB(): *** found unconnectable block at %d, hash=%s (%s)\", pindex->nHeight, pindex->GetBlockHash().ToString(), state.ToString());\n             if (ShutdownRequested()) return true;\n         }"
      },
      {
        "sha": "b4e1c080fe19c603ac5253d56a3374479390cd36",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7901647d722bcc5b0554ad73b14481cbe73608e4/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7901647d722bcc5b0554ad73b14481cbe73608e4/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=7901647d722bcc5b0554ad73b14481cbe73608e4",
        "patch": "@@ -329,7 +329,12 @@ class CVerifyDB {\n public:\n     CVerifyDB();\n     ~CVerifyDB();\n-    bool VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool VerifyDB(\n+        CChainState& chainstate,\n+        const CChainParams& chainparams,\n+        CCoinsView* coinsview,\n+        int nCheckLevel,\n+        int nCheckDepth) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n };\n \n enum DisconnectResult"
      }
    ]
  },
  {
    "sha": "9b604c0207b526c008617cdca210f35db5e344db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjYwNGMwMjA3YjUyNmMwMDg2MTdjZGNhMjEwZjM1ZGI1ZTM0NGRi",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-13T14:05:28Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-23T19:06:48Z"
      },
      "message": "validation: prepare VerifyDB for assumeutxo\n\nRemoves assumptions of use only on the active chainstate.",
      "tree": {
        "sha": "c144b73559ae20405ce9cbccb95fef580284d1e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c144b73559ae20405ce9cbccb95fef580284d1e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b604c0207b526c008617cdca210f35db5e344db",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmCDGssACgkQepNdrbLE\nTwWPgA//SUvlXis1N/Cf5urV+aGhyxE5Q7kqlpNqaKD02E4aBZUmCWa2DYoDwVQ/\ncGYf4WfishDUGq8aS/u7JCEqg3HbF10MU/zMc3EO6brFgsSi4Mgq9trSCBnCJf3a\nac8ckf0sVvFUZBiw1qRhuEyrh62YOq6UET1kOi5tF0dIt+GmN+WHkiF/+gNA/9H4\ndfdUS3DB9Xo7FVpKjcq3WRc7+L9wzMdthxp9+a0fagvHLa9WqF7A5WxbIV2QSG46\nfpBMa5gjpaLvSOj6+cIB4/FzDcmeYZzLb55iDSUlLsePfV4cWmnfb7NrXFPIJaXI\naMXZwO0NHdB5qLSPNhvWXSSM35U7hgIVdY4j4Ov1a32FLB+CcoclXwJyhWIriOpl\nwr4j5s2y2T2b2gla5dGiB1B0YNApiHN3/sKqFHpuseN+NUPASW+oClxu6O3UlQHZ\n9D4TC5W64PoeSjGwPC9My9hzt8SqCkDPWPjDWGJka2IXWUVHiA18v/1IcRM1wJ0h\n+/VLwkwc26f9lEy1+8mVO+do/09KzhOUga9W3jGtz4bI/p1dWwE85dIo0KcHZ30h\nZsUvjoLmDlGCSQwrhsMeDzSyOFIk8Ue2CUEcD5VSqZ66dfN6T7xHey5Imvpx02xd\nMgYEFYRPIgI4ISi2zD53fmL8YA5etywx/YdtJpFFRYvK3bPuRe0=\n=XJRr\n-----END PGP SIGNATURE-----",
        "payload": "tree c144b73559ae20405ce9cbccb95fef580284d1e8\nparent 7901647d722bcc5b0554ad73b14481cbe73608e4\nauthor James O'Beirne <james.obeirne@pm.me> 1618322728 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1619204808 -0400\n\nvalidation: prepare VerifyDB for assumeutxo\n\nRemoves assumptions of use only on the active chainstate.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b604c0207b526c008617cdca210f35db5e344db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b604c0207b526c008617cdca210f35db5e344db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b604c0207b526c008617cdca210f35db5e344db/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7901647d722bcc5b0554ad73b14481cbe73608e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7901647d722bcc5b0554ad73b14481cbe73608e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7901647d722bcc5b0554ad73b14481cbe73608e4"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 15,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2b1cd3e2aa9804357eb0e18904b4ac4142ac5ef3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b604c0207b526c008617cdca210f35db5e344db/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b604c0207b526c008617cdca210f35db5e344db/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9b604c0207b526c008617cdca210f35db5e344db",
        "patch": "@@ -1550,11 +1550,8 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                             break;\n                         }\n \n-                        // Only verify the DB of the active chainstate. This is fixed in later\n-                        // work when we allow VerifyDB to be parameterized by chainstate.\n-                        if (&::ChainstateActive() == chainstate &&\n-                            !CVerifyDB().VerifyDB(\n-                                *chainstate, chainparams, &chainstate->CoinsDB(),\n+                        if (!CVerifyDB().VerifyDB(\n+                                *chainstate, chainparams, chainstate->CoinsDB(),\n                                 args.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n                                 args.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                             strLoadError = _(\"Corrupted block database detected\");"
      },
      {
        "sha": "d36814716bbbef0da5757f7baa2165570708d04b",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b604c0207b526c008617cdca210f35db5e344db/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b604c0207b526c008617cdca210f35db5e344db/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=9b604c0207b526c008617cdca210f35db5e344db",
        "patch": "@@ -1239,7 +1239,8 @@ static RPCHelpMan verifychain()\n     LOCK(cs_main);\n \n     CChainState& active_chainstate = chainman.ActiveChainstate();\n-    return CVerifyDB().VerifyDB(active_chainstate, Params(), &active_chainstate.CoinsTip(), check_level, check_depth);\n+    return CVerifyDB().VerifyDB(\n+        active_chainstate, Params(), active_chainstate.CoinsTip(), check_level, check_depth);\n },\n     };\n }"
      },
      {
        "sha": "332a38119aaecb848d7c0af3e7fb26a6718dc1d5",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b604c0207b526c008617cdca210f35db5e344db/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b604c0207b526c008617cdca210f35db5e344db/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9b604c0207b526c008617cdca210f35db5e344db",
        "patch": "@@ -4104,7 +4104,7 @@ CVerifyDB::~CVerifyDB()\n bool CVerifyDB::VerifyDB(\n     CChainState& chainstate,\n     const CChainParams& chainparams,\n-    CCoinsView* coinsview,\n+    CCoinsView& coinsview,\n     int nCheckLevel, int nCheckDepth)\n {\n     AssertLockHeld(cs_main);\n@@ -4118,13 +4118,16 @@ bool CVerifyDB::VerifyDB(\n         nCheckDepth = chainstate.m_chain.Height();\n     nCheckLevel = std::max(0, std::min(4, nCheckLevel));\n     LogPrintf(\"Verifying last %i blocks at level %i\\n\", nCheckDepth, nCheckLevel);\n-    CCoinsViewCache coins(coinsview);\n+    CCoinsViewCache coins(&coinsview);\n     CBlockIndex* pindex;\n     CBlockIndex* pindexFailure = nullptr;\n     int nGoodTransactions = 0;\n     BlockValidationState state;\n     int reportDone = 0;\n     LogPrintf(\"[0%%]...\"); /* Continued */\n+\n+    bool is_snapshot_cs = !chainstate.m_from_snapshot_blockhash.IsNull();\n+\n     for (pindex = chainstate.m_chain.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n         const int percentageDone = std::max(1, std::min(99, (int)(((double)(chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n         if (reportDone < percentageDone/10) {\n@@ -4135,8 +4138,9 @@ bool CVerifyDB::VerifyDB(\n         uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n         if (pindex->nHeight <= chainstate.m_chain.Height()-nCheckDepth)\n             break;\n-        if (fPruneMode && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            // If pruning, only go back as far as we have data.\n+        if ((fPruneMode || is_snapshot_cs) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+            // If pruning or running under an assumeutxo snapshot, only go\n+            // back as far as we have data.\n             LogPrintf(\"VerifyDB(): block verification stopping at height %d (pruning, no data)\\n\", pindex->nHeight);\n             break;\n         }\n@@ -4158,9 +4162,9 @@ bool CVerifyDB::VerifyDB(\n             }\n         }\n         // check level 3: check for inconsistencies during memory-only disconnect of tip blocks\n-        int64_t curr_coins_usage = coins.DynamicMemoryUsage() + chainstate.CoinsTip().DynamicMemoryUsage();\n+        size_t curr_coins_usage = coins.DynamicMemoryUsage() + chainstate.CoinsTip().DynamicMemoryUsage();\n \n-        if (nCheckLevel >= 3 && static_cast<unsigned long>(curr_coins_usage) <= chainstate.m_coinstip_cache_size_bytes) {\n+        if (nCheckLevel >= 3 && curr_coins_usage <= chainstate.m_coinstip_cache_size_bytes) {\n             assert(coins.GetBestBlock() == pindex->GetBlockHash());\n             DisconnectResult res = chainstate.DisconnectBlock(block, pindex, coins);\n             if (res == DISCONNECT_FAILED) {"
      },
      {
        "sha": "d3341f491ec64b692025465e819791aacc53cadf",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b604c0207b526c008617cdca210f35db5e344db/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b604c0207b526c008617cdca210f35db5e344db/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=9b604c0207b526c008617cdca210f35db5e344db",
        "patch": "@@ -332,7 +332,7 @@ class CVerifyDB {\n     bool VerifyDB(\n         CChainState& chainstate,\n         const CChainParams& chainparams,\n-        CCoinsView* coinsview,\n+        CCoinsView& coinsview,\n         int nCheckLevel,\n         int nCheckDepth) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n };"
      }
    ]
  },
  {
    "sha": "844ad0eccaa1dbfefc30d19804d95d67c3d5f06d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDRhZDBlY2NhYTFkYmZlZmMzMGQxOTgwNGQ5NWQ2N2MzZDVmMDZk",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-13T14:49:54Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-23T19:06:54Z"
      },
      "message": "doc: IsSnapshotActive",
      "tree": {
        "sha": "384744de1f42e5589fe46de90ceef11b057372e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/384744de1f42e5589fe46de90ceef11b057372e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/844ad0eccaa1dbfefc30d19804d95d67c3d5f06d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmCDGs4ACgkQepNdrbLE\nTwUDrhAAnYIsiUl45sADbflbv9T6S/Pltsm9CmMJTWIjjq1dh6PdKYb0gouOxaza\n1o4ydzzwW8icoYK/XkuzaMAWIEAzYc+YL//B+DMLnFOvG1UwwkfAX4wz8wVU2Vn4\nzQi+YzQBswVyESuqVU52cOIoRi3JmQKHKU3PT03JJDTOBd5IRROMJ7IdbnRTf/AD\nCnXjNfvKlKxRe6T5K2SmXCEymZLPazhaRDrTqlm/L6HZT4Zx+UwYVu6YL5wpIOyb\nIuxQPzqA1BiuojQrCYyz4nLotgBJMgMKxM0tjGOrds4RBJyKlvWlGV57GLK6ZNDB\n3cjCw+Uo+aueJgLdcAeb5RdrjO2mLp/9iKukGDuB4vrbax2TEgee5KliAYtgGH6P\n+Jx0JZDuvemujdn+Tgg2Ss6vtbx/+Gtoqs4mFBqzIHudWFauYnlszevQH2Ar8xD5\nmswnjTQgI5OFoIJFlz59rmh9DydnmTPqaY4Cn/KlORgrN/2a2nWNRJ65+x9Jt8zv\n/upFxn9MG6Pm3NZzA8hTm4+dlvrBnyVkE4WcHmXNd1TplwzZETUk9cIu+4YKyKlE\n0D1RmWmkQvdGmj+jk4GFGsaCQes3+bgr38TvRXsA/EvQUfvbO98NOuoBKaenudYw\nW7A1qSJuA7N9epWEb7e81eu7K8wH5SVMq74BrJ1Px1vAZpeLORA=\n=CyFH\n-----END PGP SIGNATURE-----",
        "payload": "tree 384744de1f42e5589fe46de90ceef11b057372e0\nparent 9b604c0207b526c008617cdca210f35db5e344db\nauthor James O'Beirne <james.obeirne@pm.me> 1618325394 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1619204814 -0400\n\ndoc: IsSnapshotActive\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/844ad0eccaa1dbfefc30d19804d95d67c3d5f06d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/844ad0eccaa1dbfefc30d19804d95d67c3d5f06d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/844ad0eccaa1dbfefc30d19804d95d67c3d5f06d/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b604c0207b526c008617cdca210f35db5e344db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b604c0207b526c008617cdca210f35db5e344db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b604c0207b526c008617cdca210f35db5e344db"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d901cdc15f12aeff886e2b4e73ccf5b256968088",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/844ad0eccaa1dbfefc30d19804d95d67c3d5f06d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/844ad0eccaa1dbfefc30d19804d95d67c3d5f06d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=844ad0eccaa1dbfefc30d19804d95d67c3d5f06d",
        "patch": "@@ -919,6 +919,8 @@ class ChainstateManager\n         return m_blockman.m_block_index;\n     }\n \n+    //! @returns true if a snapshot-based chainstate is in use. Also implies\n+    //!          that a background validation chainstate is also in use.\n     bool IsSnapshotActive() const;\n \n     std::optional<uint256> SnapshotBlockhash() const;"
      }
    ]
  }
]