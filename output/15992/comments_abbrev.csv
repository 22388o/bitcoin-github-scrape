promag,2019-05-09 16:38:46,"utACK d48c4bf, nice and simple refactor.",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-490977828,490977828,
DrahtBot,2019-05-09 17:52:43,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15945](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15945.html) (net: Log unknown CInv in PushInventory by B",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-491002705,491002705,
gmaxwell,2019-05-10 02:43:18,"I don't see what value this adds, particularly doing things like creating functions to encapsulate single lines of code.",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-491134778,491134778,
Empact,2019-05-10 04:38:17,"As noted I wrote this to enable the logging introduced here: https://github.com/bitcoin/bitcoin/commit/389709e02c165ef06db35986e1619c16824f880f\n\nIn terms of justifying it independently, in the first case, having a single implementation protects against unintentional divergence going forward (the DRY principle), also simplifies by removing a layer of indirection relative to CConnman.\n\n~Drop",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-491152887,491152887,
Empact,2019-05-10 05:29:10,"On second look, consider #15945. `PushInventory` currently silently ignores unrecognized INV types, which is a potential point of failure / confusion for ineffective callers. This narrows the `Push*Inventory` calls to those which can and will be handled. Restored the initial version.",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-491161293,491161293,
sdaftuar,2019-05-11 16:08:38,"IMO it makes more sense to refactor transaction/block relay logic out of net.cpp and into net_processing.cpp.  So further consolidating this in connman seems like a small step in the wrong direction, and not worth the friction of changing around how this logic works.",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-491523714,491523714,
Empact,2019-05-16 18:41:32,"@sdaftuar Not sure what you have in mind, but it's now in a separate file rather than on `CConnman`.",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-493185539,493185539,
sdaftuar,2019-05-16 19:26:05,"IMO it doesn't seem like this accomplishes anything, and it conflicts with some other PRs, so I would tend to NACK.",https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-493200116,493200116,
MarcoFalke,2019-05-16 19:37:48,Seems too controversial for a simple change such as this. Going to close this for now.,https://github.com/bitcoin/bitcoin/pull/15992#issuecomment-493204004,493204004,
MarcoFalke,2019-05-10 15:18:42,Could keep the implementation inlined in the header to keep the diff smaller?,https://github.com/bitcoin/bitcoin/pull/15992#discussion_r282928576,282928576,src/net.h
