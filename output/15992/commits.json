[
  {
    "sha": "174109efb66a1b69e354a49aa82a5b08a3bc855c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzQxMDllZmI2NmExYjY5ZTM1NGE0OWFhODJhNWIwOGEzYmM4NTVj",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-01-25T03:27:36Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-05-16T18:39:29Z"
      },
      "message": "[moveonly] net: Extract RelayTransaction\n\nNote the hashes passed more closely match the surrounding code.",
      "tree": {
        "sha": "73ad7fd16a4d15c95c8985b05287f33a43e107e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73ad7fd16a4d15c95c8985b05287f33a43e107e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/174109efb66a1b69e354a49aa82a5b08a3bc855c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJc3a5mAAoJEG7l83hfeLNFAcgH/jdiy/QvL8UZdZc1GeD5Fvob\n6NRizhPq5a4RMNVRZUbZl5VIyvlOjntgqFeucr29ivb3cvgDdFFQ/kcb5/wb7DDP\nHmCwhGAnrdb2ghb768su1nDWkzYoVB9I1PUJ4LgobnREgujbGwP1xLfx7Hufj1gb\n1EYg8xTR+BzkNA+pFf00pQOP9GTVuez41WdQuJ7k8+7ejiH9AwW/WTExfK4bcvop\nIPUqwKOQPLiS3MjM2gExe3jVnGhYTEObgncCZtlYftNKsoJt/KgHy3jaKhvdjU+w\njfxfKE/tg0aEoofycTS4vWGyVxh70+PrTOTbJ6Ayqqnp+v2WsdMcXhDeZMMTrmU=\n=9wJX\n-----END PGP SIGNATURE-----",
        "payload": "tree 73ad7fd16a4d15c95c8985b05287f33a43e107e9\nparent 2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f\nauthor Ben Woosley <ben.woosley@gmail.com> 1548386856 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1558031969 -0400\n\n[moveonly] net: Extract RelayTransaction\n\nNote the hashes passed more closely match the surrounding code.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/174109efb66a1b69e354a49aa82a5b08a3bc855c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/174109efb66a1b69e354a49aa82a5b08a3bc855c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/174109efb66a1b69e354a49aa82a5b08a3bc855c/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 39,
      "deletions": 18
    },
    "files": [
      {
        "sha": "cc6c1fd3337273a92743c1aa1921985106ff82e8",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "patch": "@@ -170,6 +170,7 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   psbt.h \\\n   random.h \\\n+  relay.h \\\n   reverse_iterator.h \\\n   reverselock.h \\\n   rpc/blockchain.h \\\n@@ -280,6 +281,7 @@ libbitcoin_server_a_SOURCES = \\\n   policy/rbf.cpp \\\n   policy/settings.cpp \\\n   pow.cpp \\\n+  relay.cpp \\\n   rest.cpp \\\n   rpc/blockchain.cpp \\\n   rpc/mining.cpp \\"
      },
      {
        "sha": "d4978643677d23ed1cf9d16f564f4887583a530c",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "patch": "@@ -17,6 +17,7 @@\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n #include <protocol.h>\n+#include <relay.h>\n #include <rpc/protocol.h>\n #include <rpc/server.h>\n #include <shutdown.h>\n@@ -296,8 +297,7 @@ class ChainImpl : public Chain\n     }\n     void relayTransaction(const uint256& txid) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        RelayTransaction(txid, g_connman);\n     }\n     void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n     {"
      },
      {
        "sha": "af6135ce0bae5f9307c55ff335bc7add317da468",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 12,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "patch": "@@ -21,6 +21,7 @@\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n #include <random.h>\n+#include <relay.h>\n #include <reverse_iterator.h>\n #include <scheduler.h>\n #include <tinyformat.h>\n@@ -1292,15 +1293,6 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n     return true;\n }\n \n-static void RelayTransaction(const CTransaction& tx, CConnman* connman)\n-{\n-    CInv inv(MSG_TX, tx.GetHash());\n-    connman->ForEachNode([&inv](CNode* pnode)\n-    {\n-        pnode->PushInventory(inv);\n-    });\n-}\n-\n static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connman)\n {\n     unsigned int nRelayNodes = fReachable ? 2 : 1; // limited relaying of addresses outside our network(s)\n@@ -1786,7 +1778,7 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n         if (setMisbehaving.count(fromPeer)) continue;\n         if (AcceptToMemoryPool(mempool, orphan_state, porphanTx, &fMissingInputs2, &removed_txn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n-            RelayTransaction(orphanTx, connman);\n+            RelayTransaction(orphanHash, connman);\n             for (unsigned int i = 0; i < orphanTx.vout.size(); i++) {\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(orphanHash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n@@ -2473,7 +2465,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (!AlreadyHave(inv) &&\n             AcceptToMemoryPool(mempool, state, ptx, &fMissingInputs, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             mempool.check(pcoinsTip.get());\n-            RelayTransaction(tx, connman);\n+            RelayTransaction(inv.hash, connman);\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(inv.hash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n@@ -2552,7 +2544,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\n                 } else {\n                     LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\n-                    RelayTransaction(tx, connman);\n+                    RelayTransaction(tx.GetHash(), connman);\n                 }\n             }\n         }"
      },
      {
        "sha": "8f9e6f6f43572ee648facbd9a77cb6d99b5366a3",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <consensus/validation.h>\n #include <net.h>\n+#include <relay.h>\n #include <txmempool.h>\n #include <util/validation.h>\n #include <validation.h>\n@@ -69,10 +70,7 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n         return TransactionError::P2P_DISABLED;\n     }\n \n-    CInv inv(MSG_TX, hashTx);\n-    g_connman->ForEachNode([&inv](CNode* pnode) {\n-        pnode->PushInventory(inv);\n-    });\n+    RelayTransaction(hashTx, g_connman);\n \n     return TransactionError::OK;\n }"
      },
      {
        "sha": "2d366f760006ce91525a5af5d556d1391ccd6a48",
        "filename": "src/relay.cpp",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/relay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/relay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/relay.cpp?ref=174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "patch": "@@ -0,0 +1,14 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <relay.h>\n+\n+void RelayTransaction(const uint256& txid, CConnman* connman)\n+{\n+    CInv inv(MSG_TX, txid);\n+    connman.ForEachNode([&inv](CNode* node) {\n+        node->PushInventory(inv);\n+    });\n+}"
      },
      {
        "sha": "5bd6a9f6e7746dcd4ab6c40ae1b3e973aa60ad99",
        "filename": "src/relay.h",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/relay.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/174109efb66a1b69e354a49aa82a5b08a3bc855c/src/relay.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/relay.h?ref=174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "patch": "@@ -0,0 +1,15 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RELAY_H\n+#define BITCOIN_RELAY_H\n+\n+#include <net.h>\n+#include <uint256.h>\n+\n+/** Announce transaction to all peers */\n+void RelayTransaction(const uint256& txid, CConnman* connman);\n+\n+#endif // BITCOIN_RELAY_H"
      }
    ]
  },
  {
    "sha": "8da550d0b61b4a67a67313faad3d81be4d1b2042",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGE1NTBkMGI2MWI0YTY3YTY3MzEzZmFhZDNkODFiZTRkMWIyMDQy",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-05T07:01:59Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-05-16T18:39:56Z"
      },
      "message": "[moveonly] net: Split CNode::PushInventory into Block and Transaction variants\n\nOnly 3 callers, and in each case they're explicit about which they are doing.",
      "tree": {
        "sha": "4f7f484084868a056322b722eaaec47b85e7e491",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f7f484084868a056322b722eaaec47b85e7e491"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8da550d0b61b4a67a67313faad3d81be4d1b2042",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJc3a58AAoJEG7l83hfeLNFfF4H/0tsG+JmHqrORk4xegPFoiRK\nBA8OeN2uXlVxFL1fAlVR9sbXq9e3gFN+NkZ0KgCjMcX1nyYY8kRNeUoDHdyB1FQU\nnwIlrcr5fB+P1QSMSggQDcT7Gpfv9XoNxdxv3RlNOYwQ6DaNMODgzPqyySi6vAJZ\nszPCDLtaGJqZFKeLRWb3/y/Q7J3bSUGntEtzp6Smbi+i7hDWRYzpBzl9K9irwI0q\ni1BtgwS9T22X1PCpOqqu/DdE5a+hgXEJ+kdUxJE4NXrmgsVUog5BKXn2ODjWOAtQ\n/YWvQFViitoqQ76EtqxYg9zHyW4RfvJTbxMgMOF6jF11/6l/fhBRU+jietOiv40=\n=i5gi\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f7f484084868a056322b722eaaec47b85e7e491\nparent 174109efb66a1b69e354a49aa82a5b08a3bc855c\nauthor Ben Woosley <ben.woosley@gmail.com> 1551769319 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1558031996 -0400\n\n[moveonly] net: Split CNode::PushInventory into Block and Transaction variants\n\nOnly 3 callers, and in each case they're explicit about which they are doing.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da550d0b61b4a67a67313faad3d81be4d1b2042",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8da550d0b61b4a67a67313faad3d81be4d1b2042",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da550d0b61b4a67a67313faad3d81be4d1b2042/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/174109efb66a1b69e354a49aa82a5b08a3bc855c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/174109efb66a1b69e354a49aa82a5b08a3bc855c"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 16,
      "deletions": 13
    },
    "files": [
      {
        "sha": "7052f0a50e2f610eb58d3f1c52ee07e587eaafd4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da550d0b61b4a67a67313faad3d81be4d1b2042/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da550d0b61b4a67a67313faad3d81be4d1b2042/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=8da550d0b61b4a67a67313faad3d81be4d1b2042",
        "patch": "@@ -839,18 +839,22 @@ class CNode\n         }\n     }\n \n-    void PushInventory(const CInv& inv)\n+    //! Pushes a tx inv to this peer, unless already known\n+    void PushTransactionInventory(const uint256& txid)\n     {\n         LOCK(cs_inventory);\n-        if (inv.type == MSG_TX) {\n-            if (!filterInventoryKnown.contains(inv.hash)) {\n-                setInventoryTxToSend.insert(inv.hash);\n-            }\n-        } else if (inv.type == MSG_BLOCK) {\n-            vInventoryBlockToSend.push_back(inv.hash);\n+        if (!filterInventoryKnown.contains(txid)) {\n+            setInventoryTxToSend.insert(txid);\n         }\n     }\n \n+    //! Pushes a block inv to this peer\n+    void PushBlockInventory(const uint256& blockhash)\n+    {\n+        LOCK(cs_inventory);\n+        vInventoryBlockToSend.push_back(blockhash);\n+    }\n+\n     void PushBlockHash(const uint256 &hash)\n     {\n         LOCK(cs_inventory);"
      },
      {
        "sha": "85faa9b8504c9c0a318c3c04817fa75f1ec6c4a3",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da550d0b61b4a67a67313faad3d81be4d1b2042/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da550d0b61b4a67a67313faad3d81be4d1b2042/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=8da550d0b61b4a67a67313faad3d81be4d1b2042",
        "patch": "@@ -1473,7 +1473,7 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n         // Trigger the peer node to send a getblocks request for the next batch of inventory\n         if (inv.hash == pfrom->hashContinue)\n         {\n-            // Bypass PushInventory, this must send even if redundant,\n+            // Bypass PushBlockInventory, this must send even if redundant,\n             // and we want it right after the last block so they don't\n             // wait for other stuff first.\n             std::vector<CInv> vInv;\n@@ -2305,7 +2305,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 LogPrint(BCLog::NET, \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }\n-            pfrom->PushInventory(CInv(MSG_BLOCK, pindex->GetBlockHash()));\n+            pfrom->PushBlockInventory(pindex->GetBlockHash());\n             if (--nLimit <= 0)\n             {\n                 // When this block is requested, we'll send an inv that'll\n@@ -3706,7 +3706,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n \n                     // If the peer's chain has this block, don't inv it back.\n                     if (!PeerHasHeader(&state, pindex)) {\n-                        pto->PushInventory(CInv(MSG_BLOCK, hashToAnnounce));\n+                        pto->PushBlockInventory(hashToAnnounce);\n                         LogPrint(BCLog::NET, \"%s: sending inv peer=%d hash=%s\\n\", __func__,\n                             pto->GetId(), hashToAnnounce.ToString());\n                     }"
      },
      {
        "sha": "ce46b30a0fc2bb611a5b24df0a2b6ef8c79f3269",
        "filename": "src/relay.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da550d0b61b4a67a67313faad3d81be4d1b2042/src/relay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da550d0b61b4a67a67313faad3d81be4d1b2042/src/relay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/relay.cpp?ref=8da550d0b61b4a67a67313faad3d81be4d1b2042",
        "patch": "@@ -7,8 +7,7 @@\n \n void RelayTransaction(const uint256& txid, CConnman* connman)\n {\n-    CInv inv(MSG_TX, txid);\n-    connman.ForEachNode([&inv](CNode* node) {\n-        node->PushInventory(inv);\n+    connman.ForEachNode([&txid](CNode* node) {\n+        node->PushTransactionInventory(txid);\n     });\n }"
      }
    ]
  }
]