[
  {
    "sha": "fa613ca0a8f99c4771859de9e571878530d3ecb5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYxM2NhMGE4Zjk5YzQ3NzE4NTlkZTllNTcxODc4NTMwZDNlY2I1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-23T21:32:29Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-18T18:48:11Z"
      },
      "message": "chainparams: Remove unused fMineBlocksOnDemand\n\nIt is equal to consensus.fPowNoRetargeting",
      "tree": {
        "sha": "93adc9e4d8274e3b6fa8055973e2206d9c9d695e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93adc9e4d8274e3b6fa8055973e2206d9c9d695e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa613ca0a8f99c4771859de9e571878530d3ecb5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjbpQwAsVRZ/cMGJI9z+aQRAVrKlygoKQO2LXl/7NRXFBhNwPVNJmqc3ezJjFpP\nY2+7iOGsWO0e76GKh6t6shZf1W+ADzKMWOj1QyV3FQuAz0DRH53KsuzcZPsK0wxN\nTXKcdGaPm/l6ATF6JoG9i4KWdJpDokSUTg/jdQsPxIzFHA61bXX4QTrRDssmvIAe\nFLP4iwKfnsv1Lz3jEa/Qh95BN6EhFSSZlImizPuYeOp1UjuGiJO29RpqHrv6jcOy\ne9ex9cc3m/C6LzvF92w/njmxU7m4HLEpaCXDp2N4BM0saJ9PivXtnGeqXqk6ilDF\nFVoXx5ZbSIHguwnYUNZTYb9K4x8frE6Nt/VhpmTmPzvqGykjdlxOjF8pP3GN7FUN\n7Ni9ghxBfi6kD/ngOQekacXSSKap6Sl5yrB2933ClUIo3yvNNgU33ALgMbh1zRx5\nBOGx7GotiYWWxNfABrgLFjk611gY2S+/9atNp2eap5VvdwzgFYKZ9b4MKfLB7txb\nofJTsBRu\n=3CEW\n-----END PGP SIGNATURE-----",
        "payload": "tree 93adc9e4d8274e3b6fa8055973e2206d9c9d695e\nparent 6c9d3c704f38600c68f897b1dff3ce19c1620be4\nauthor MarcoFalke <falke.marco@gmail.com> 1556055149 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1560883691 -0400\n\nchainparams: Remove unused fMineBlocksOnDemand\n\nIt is equal to consensus.fPowNoRetargeting\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa613ca0a8f99c4771859de9e571878530d3ecb5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa613ca0a8f99c4771859de9e571878530d3ecb5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa613ca0a8f99c4771859de9e571878530d3ecb5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c9d3c704f38600c68f897b1dff3ce19c1620be4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c9d3c704f38600c68f897b1dff3ce19c1620be4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c9d3c704f38600c68f897b1dff3ce19c1620be4"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 2,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5c0d75fca6ec1826b7d3dabd9678a5ffac3f5183",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa613ca0a8f99c4771859de9e571878530d3ecb5/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa613ca0a8f99c4771859de9e571878530d3ecb5/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fa613ca0a8f99c4771859de9e571878530d3ecb5",
        "patch": "@@ -141,7 +141,6 @@ class CMainParams : public CChainParams {\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n-        fMineBlocksOnDemand = false;\n \n         checkpointData = {\n             {\n@@ -247,7 +246,6 @@ class CTestNetParams : public CChainParams {\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n-        fMineBlocksOnDemand = false;\n \n \n         checkpointData = {\n@@ -325,7 +323,6 @@ class CRegTestParams : public CChainParams {\n \n         fDefaultConsistencyChecks = true;\n         fRequireStandard = false;\n-        fMineBlocksOnDemand = true;\n \n         checkpointData = {\n             {"
      },
      {
        "sha": "efca8d184b819c80547f9c47b012d5852a13e087",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa613ca0a8f99c4771859de9e571878530d3ecb5/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa613ca0a8f99c4771859de9e571878530d3ecb5/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=fa613ca0a8f99c4771859de9e571878530d3ecb5",
        "patch": "@@ -71,8 +71,8 @@ class CChainParams\n     uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }\n     /** Minimum free space (in GB) needed for data directory when pruned; Does not include prune target*/\n     uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }\n-    /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n-    bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n+    /** Whether it is possible to mine blocks on demand (no retargeting) */\n+    bool MineBlocksOnDemand() const { return consensus.fPowNoRetargeting; }\n     /** Return the BIP70 network string (main, test or regtest) */\n     std::string NetworkIDString() const { return strNetworkID; }\n     /** Return true if the fallback fee is by default enabled for this network */\n@@ -101,7 +101,6 @@ class CChainParams\n     std::vector<SeedSpec6> vFixedSeeds;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n-    bool fMineBlocksOnDemand;\n     CCheckpointData checkpointData;\n     ChainTxData chainTxData;\n     bool m_fallback_fee_enabled;"
      }
    ]
  },
  {
    "sha": "fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTliNDE5MTYwOWMzZWY3NWU2OWQzOTFlYjkxZTRkNWMxZTBiY2Y1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-25T13:32:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-18T18:48:17Z"
      },
      "message": "test: Add test that mainnet requires standard txs",
      "tree": {
        "sha": "90d08f2ed053b600fbc9a08fbc51d61b6923aeac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90d08f2ed053b600fbc9a08fbc51d61b6923aeac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgOgAv/etUQJ/8RcvOuIUG9UPNVhsakypZWYnmfoso8UrOjGJyM8Y+qHbDQuzuT\nOL/9xJAAFHa0NoRKZb60XMfj9wqgVxFC2kJPDsaVm3tgl2buqKyrPJthJgGiyHw/\npl6qJNTBv2jNOrrorXG4GgalEbmN+oRKyY9vG195VbrxYLCTZr3XjWfnaLssK6nj\nbrR8gV3nyTOAhy/Dokr/5HzWst+VgkL28286Po2fOe5Cmvaki4RhDwRjlfQcbvIt\n5ISaC6Np7b1EEC0j7eye3bi5wO5fYBd7X0400az+76AFt1x57t2wPojKD/2aqQPS\ndNIA0VaDOMPa+ISkZ3shCCmMViPkd5QivLQ8eVPDfykg0uMQoP9ByfcsD2uqMG8A\nAgRCUURG2RkTew2l+AIE+OFL0r7BF7OnNL3pdcIwFXDU1brxpAxdp//HUex0yoV0\nFOhOQP6qIPXez1BOEoqnN2IfqJVqITJo1LVg+mkzSweMw0BPLWPaFYYUg61oChHm\negKaSMSC\n=JRob\n-----END PGP SIGNATURE-----",
        "payload": "tree 90d08f2ed053b600fbc9a08fbc51d61b6923aeac\nparent fa613ca0a8f99c4771859de9e571878530d3ecb5\nauthor MarcoFalke <falke.marco@gmail.com> 1556199155 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1560883697 -0400\n\ntest: Add test that mainnet requires standard txs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa613ca0a8f99c4771859de9e571878530d3ecb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa613ca0a8f99c4771859de9e571878530d3ecb5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa613ca0a8f99c4771859de9e571878530d3ecb5"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ed29c3c7af55c368734400a3c260521cf7c80c6a",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
        "patch": "@@ -29,6 +29,11 @@ def test_config_file_parser(self):\n             conf.write(\"wallet=foo\\n\")\n         self.nodes[0].assert_start_raises_init_error(expected_msg='Error: Config setting for -wallet only applied on regtest network when in [regtest] section.')\n \n+        with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n+            conf.write('regtest=0\\n') # mainnet\n+            conf.write('acceptnonstdtxn=1\\n')\n+        self.nodes[0].assert_start_raises_init_error(expected_msg='Error: acceptnonstdtxn is not currently supported for main chain')\n+\n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n             conf.write('nono\\n')\n         self.nodes[0].assert_start_raises_init_error(expected_msg='Error reading configuration file: parse error on line 1: nono, if you intended to specify a negated option, use nono=1 instead')"
      }
    ]
  },
  {
    "sha": "fa89badf887dcc01e5bdece248b5e7d234fee227",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTg5YmFkZjg4N2RjYzAxZTViZGVjZTI0OGI1ZTdkMjM0ZmVlMjI3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-24T21:55:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-21T20:45:16Z"
      },
      "message": "test: Require standard txs in regtest",
      "tree": {
        "sha": "67297d1686f89e7f202979cdda735132f9a65bdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67297d1686f89e7f202979cdda735132f9a65bdf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa89badf887dcc01e5bdece248b5e7d234fee227",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhJeAv9HNhlZO8rU2m3bGq6bNb5YeNyKjkDzHKSDLCybA5bgJRfEsZlETjWJnSu\nAS6G01XDJ3lnishvj45E87kK3MkpqCewCrzZ1ULqUzI+DR13y+24bMjjP1IGNBPE\ng6OTkpsrYrv67xIZILYCuUjZde1kvVOuMV+sRVDxDQFbrGcjcacrDC/7b2MGv5ET\no7PTZCDAvPE4xVAWpiVJ4n1I1AbtmU1vCvUswlVPPhadQRcMz78oRWQ1Hw82teAl\nMFxsGmaXlAJGimW56eFvSMY0gtIpDGLzTt0JxbG3K2ja/+DGjZXJi485Kz5LUrTK\n2/daTH1FHdBsc6zWgnddlUPxIjy9sZT/19Qk0kHv3aaS/Mn74ZycevzSkGn8mW2M\n9+dunB6PSwFAi0/7PQWFleIm8nJwgRy9Z39Gyyri8ACQFpWsUZySp+ys6dgliLz/\nFrmDDP9Qg2WcgMQlku8aeKLCqXSTeb55tbkNwbW0yrPE9YOd8g+nLDfPocmrCM3s\nqIi9Ipk9\n=aSyS\n-----END PGP SIGNATURE-----",
        "payload": "tree 67297d1686f89e7f202979cdda735132f9a65bdf\nparent fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5\nauthor MarcoFalke <falke.marco@gmail.com> 1556142958 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1561149916 -0400\n\ntest: Require standard txs in regtest\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa89badf887dcc01e5bdece248b5e7d234fee227",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa89badf887dcc01e5bdece248b5e7d234fee227",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa89badf887dcc01e5bdece248b5e7d234fee227/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9b4191609c3ef75e69d391eb91e4d5c1e0bcf5"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 61,
      "deletions": 11
    },
    "files": [
      {
        "sha": "83c84d34c9238bee3db8cc40c3c0efc2eb660ada",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -103,6 +103,20 @@ Low-level Changes section below.\n Low-level changes\n =================\n \n+RPC\n+---\n+\n+\n+Tests\n+-----\n+\n+- The regression test chain, that can be enabled by the `-regtest` command line\n+  flag, now requires transactions to not violate standard policy by default.\n+  Making the default the same as for mainnet, makes it easier to test mainnet\n+  behavior on regtest. Be reminded that the testnet still allows non-standard\n+  txs by default and that the policy can be locally adjusted with the\n+  `-acceptnonstdtxn` command line flag for both test chains.\n+\n Configuration\n ------------\n "
      },
      {
        "sha": "f937e2754bf161b0da3a99c2089c2f0e4e51997b",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -141,6 +141,7 @@ class CMainParams : public CChainParams {\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n+        m_is_test_chain = false;\n \n         checkpointData = {\n             {\n@@ -246,6 +247,7 @@ class CTestNetParams : public CChainParams {\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n+        m_is_test_chain = true;\n \n \n         checkpointData = {\n@@ -322,7 +324,8 @@ class CRegTestParams : public CChainParams {\n         vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n \n         fDefaultConsistencyChecks = true;\n-        fRequireStandard = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = true;\n \n         checkpointData = {\n             {"
      },
      {
        "sha": "b3fcd77cea99ddb81d9776cdb0ae08671cdcca05",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -66,6 +66,8 @@ class CChainParams\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n     bool RequireStandard() const { return fRequireStandard; }\n+    /** If this is a test chain */\n+    bool IsTestChain() const { return m_is_test_chain; }\n     uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n     /** Minimum free space (in GB) needed for data directory */\n     uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }\n@@ -101,6 +103,7 @@ class CChainParams\n     std::vector<SeedSpec6> vFixedSeeds;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n+    bool m_is_test_chain;\n     CCheckpointData checkpointData;\n     ChainTxData chainTxData;\n     bool m_fallback_fee_enabled;"
      },
      {
        "sha": "be11a019b4ff41998dded80d7e6435dc97fbb3a3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -1150,8 +1150,9 @@ bool AppInitParameterInteraction()\n     }\n \n     fRequireStandard = !gArgs.GetBoolArg(\"-acceptnonstdtxn\", !chainparams.RequireStandard());\n-    if (chainparams.RequireStandard() && !fRequireStandard)\n+    if (!chainparams.IsTestChain() && !fRequireStandard) {\n         return InitError(strprintf(\"acceptnonstdtxn is not currently supported for %s chain\", chainparams.NetworkIDString()));\n+    }\n     nBytesPerSigOp = gArgs.GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n     if (!g_wallet_init_interface.ParameterInteraction()) return false;"
      },
      {
        "sha": "f0bf09e1720111c726a2b0d2be79a78c38a2fd1c",
        "filename": "test/functional/feature_bip68_sequence.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_bip68_sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_bip68_sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_bip68_sequence.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -29,7 +29,10 @@\n class BIP68Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n-        self.extra_args = [[], [\"-acceptnonstdtxn=0\"]]\n+        self.extra_args = [\n+            [\"-acceptnonstdtxn=1\"],\n+            [\"-acceptnonstdtxn=0\"],\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      },
      {
        "sha": "b5eac88ba751f5be6f0ce30a06fa8989ab251ea2",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -78,7 +78,7 @@ class FullBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n-        self.extra_args = [[]]\n+        self.extra_args = [['-acceptnonstdtxn=1']]  # This is a consensus block test, we don't care about tx policy\n \n     def run_test(self):\n         node = self.nodes[0]  # convenience reference to the node"
      },
      {
        "sha": "ef038ff2fa8d26cebd3c40efadc5c89e502de55f",
        "filename": "test/functional/feature_cltv.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_cltv.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -57,7 +57,11 @@ def cltv_validate(node, tx, height):\n class BIP65Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['-whitelist=127.0.0.1', '-par=1']]  # Use only one script thread to get the exact reject reason for testing\n+        self.extra_args = [[\n+            '-whitelist=127.0.0.1',\n+            '-par=1',  # Use only one script thread to get the exact reject reason for testing\n+            '-acceptnonstdtxn=1',  # cltv_invalidate is nonstandard\n+        ]]\n         self.setup_clean_chain = True\n         self.rpc_timeout = 120\n "
      },
      {
        "sha": "180ea0e51d71ddbbf128939dc7c96f4fa84a6aa1",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -35,7 +35,7 @@ class MaxUploadTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [[\"-maxuploadtarget=800\"]]\n+        self.extra_args = [[\"-maxuploadtarget=800\", \"-acceptnonstdtxn=1\"]]\n \n         # Cache for utxos, as the listunspent may take a long time later in the test\n         self.utxo_cache = []"
      },
      {
        "sha": "fd79df0b072f7de9163eb4ba666cde4454740f11",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -67,8 +67,8 @@ def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [\n             [\n+                \"-acceptnonstdtxn=1\",\n                 \"-maxorphantx=1000\",\n-                \"-whitelist=127.0.0.1\",\n                 \"-limitancestorcount=50\",\n                 \"-limitancestorsize=101\",\n                 \"-limitdescendantcount=200\","
      },
      {
        "sha": "a71d4071d5d40dab9219ec5f3074c49cf2fb8f1c",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -53,17 +53,20 @@ def set_test_params(self):\n         # This test tests SegWit both pre and post-activation, so use the normal BIP9 activation.\n         self.extra_args = [\n             [\n+                \"-acceptnonstdtxn=1\",\n                 \"-rpcserialversion=0\",\n                 \"-vbparams=segwit:0:999999999999\",\n                 \"-addresstype=legacy\",\n             ],\n             [\n+                \"-acceptnonstdtxn=1\",\n                 \"-blockversion=4\",\n                 \"-rpcserialversion=1\",\n                 \"-vbparams=segwit:0:999999999999\",\n                 \"-addresstype=legacy\",\n             ],\n             [\n+                \"-acceptnonstdtxn=1\",\n                 \"-blockversion=536870915\",\n                 \"-vbparams=segwit:0:999999999999\",\n                 \"-addresstype=legacy\","
      },
      {
        "sha": "209a222004031bc78671e9f9434c1e16f5b296cd",
        "filename": "test/functional/mempool_accept.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/mempool_accept.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/mempool_accept.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_accept.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -36,7 +36,6 @@ def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [[\n             '-txindex',\n-            '-acceptnonstdtxn=0',  # Try to mimic main-net\n         ]] * self.num_nodes\n \n     def skip_test_if_missing_module(self):"
      },
      {
        "sha": "edf206993316dcc1943a8ad5beedc5e137bbbf43",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -13,7 +13,11 @@ class MempoolLimitTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [[\"-maxmempool=5\", \"-spendzeroconfchange=0\"]]\n+        self.extra_args = [[\n+            \"-acceptnonstdtxn=1\",\n+            \"-maxmempool=5\",\n+            \"-spendzeroconfchange=0\",\n+        ]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      },
      {
        "sha": "7e05a8e6c876a1471673df38355e799a152e3b15",
        "filename": "test/functional/mining_prioritisetransaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/mining_prioritisetransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/mining_prioritisetransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_prioritisetransaction.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -14,7 +14,10 @@ class PrioritiseTransactionTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n-        self.extra_args = [[\"-printpriority=1\"], [\"-printpriority=1\"]]\n+        self.extra_args = [[\n+            \"-printpriority=1\",\n+            \"-acceptnonstdtxn=1\",\n+        ]] * self.num_nodes\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      },
      {
        "sha": "eb3336bd3be48d85c736470477541db62f35db1c",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -95,6 +95,9 @@ class CompactBlocksTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n+        self.extra_args = [[\n+            \"-acceptnonstdtxn=1\",\n+        ]]\n         self.utxos = []\n \n     def skip_test_if_missing_module(self):"
      },
      {
        "sha": "3cca2d78dbfd7f8f504fad27b0549c1413fad1a0",
        "filename": "test/functional/p2p_invalid_tx.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/p2p_invalid_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/p2p_invalid_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_tx.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -25,6 +25,9 @@\n class InvalidTxRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[\n+            \"-acceptnonstdtxn=1\",\n+        ]]\n         self.setup_clean_chain = True\n \n     def bootstrap_p2p(self, *, num_connections=1):"
      },
      {
        "sha": "dca71aec43f14d78a77bfd2fa704da043beb617a",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -184,7 +184,11 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 3\n         # This test tests SegWit both pre and post-activation, so use the normal BIP9 activation.\n-        self.extra_args = [[\"-whitelist=127.0.0.1\", \"-vbparams=segwit:0:999999999999\"], [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\", \"-vbparams=segwit:0:999999999999\"], [\"-whitelist=127.0.0.1\", \"-vbparams=segwit:0:0\"]]\n+        self.extra_args = [\n+            [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=1\", \"-vbparams=segwit:0:999999999999\"],\n+            [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\", \"-vbparams=segwit:0:999999999999\"],\n+            [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=1\", \"-vbparams=segwit:0:0\"],\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      },
      {
        "sha": "34e84fcf559e78a9b1a6a38fbc27fde542e0d5e0",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa89badf887dcc01e5bdece248b5e7d234fee227/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=fa89badf887dcc01e5bdece248b5e7d234fee227",
        "patch": "@@ -20,6 +20,9 @@\n class WalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 4\n+        self.extra_args = [[\n+            \"-acceptnonstdtxn=1\",\n+        ]] * self.num_nodes\n         self.setup_clean_chain = True\n \n     def skip_test_if_missing_module(self):"
      }
    ]
  }
]