[
  {
    "sha": "9a19c9ada53e84d1ee8521b48f656faad48b737a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTE5YzlhZGE1M2U4NGQxZWU4NTIxYjQ4ZjY1NmZhYWQ0OGI3Mzdh",
    "commit": {
      "author": {
        "name": "Craig Andrews",
        "email": "candrews@integralblue.com",
        "date": "2019-08-07T15:38:11Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-09-20T19:15:40Z"
      },
      "message": "Always define the raii_event_tests test suite\n\nThe test suite must always be defined (even when EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED is not defined) so that the test harness doesn't fail due to not being able to find the raii_event_tests test.\n\nThis improves upon 95f97f4 actually fixing https://github.com/bitcoin/bitcoin/issues/9493",
      "tree": {
        "sha": "ff5ac83be4d0433c5f1807978bd79de2eb23ac1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff5ac83be4d0433c5f1807978bd79de2eb23ac1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a19c9ada53e84d1ee8521b48f656faad48b737a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a19c9ada53e84d1ee8521b48f656faad48b737a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a19c9ada53e84d1ee8521b48f656faad48b737a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a19c9ada53e84d1ee8521b48f656faad48b737a/comments",
    "author": {
      "login": "candrews",
      "id": 194713,
      "node_id": "MDQ6VXNlcjE5NDcxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/194713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/candrews",
      "html_url": "https://github.com/candrews",
      "followers_url": "https://api.github.com/users/candrews/followers",
      "following_url": "https://api.github.com/users/candrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/candrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/candrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/candrews/subscriptions",
      "organizations_url": "https://api.github.com/users/candrews/orgs",
      "repos_url": "https://api.github.com/users/candrews/repos",
      "events_url": "https://api.github.com/users/candrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/candrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9828f9a9962c1bee5c343847030b9cfd87a40a5e"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6f03ad6fedc7d11581a1c0c8aa53f62035047dec",
        "filename": "src/test/raii_event_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a19c9ada53e84d1ee8521b48f656faad48b737a/src/test/raii_event_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a19c9ada53e84d1ee8521b48f656faad48b737a/src/test/raii_event_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/raii_event_tests.cpp?ref=9a19c9ada53e84d1ee8521b48f656faad48b737a",
        "patch": "@@ -4,9 +4,6 @@\n \n #include <event2/event.h>\n \n-#ifdef EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED\n-// It would probably be ideal to define dummy test(s) that report skipped, but boost::test doesn't seem to make that practical (at least not in versions available with common distros)\n-\n #include <map>\n #include <stdlib.h>\n \n@@ -18,6 +15,10 @@\n \n #include <boost/test/unit_test.hpp>\n \n+BOOST_FIXTURE_TEST_SUITE(raii_event_tests, BasicTestingSetup)\n+\n+#ifdef EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED\n+\n static std::map<void*, short> tags;\n static std::map<void*, uint16_t> orders;\n static uint16_t tagSequence = 0;\n@@ -36,8 +37,6 @@ static void tag_free(void* mem) {\n     free(mem);\n }\n \n-BOOST_FIXTURE_TEST_SUITE(raii_event_tests, BasicTestingSetup)\n-\n BOOST_AUTO_TEST_CASE(raii_event_creation)\n {\n     event_set_mem_functions(tag_malloc, realloc, tag_free);\n@@ -89,6 +88,14 @@ BOOST_AUTO_TEST_CASE(raii_event_order)\n     event_set_mem_functions(malloc, realloc, free);\n }\n \n-BOOST_AUTO_TEST_SUITE_END()\n+#else\n+\n+BOOST_AUTO_TEST_CASE(raii_event_tests_SKIPPED)\n+{\n+    // It would probably be ideal to report skipped, but boost::test doesn't seem to make that practical (at least not in versions available with common distros)\n+    BOOST_TEST_MESSAGE(\"Skipping raii_event_tess: libevent doesn't support event_set_mem_functions\");\n+}\n \n #endif  // EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]