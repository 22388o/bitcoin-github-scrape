[
  {
    "sha": "1bc879be9500c1cccf96ff3aa94df48c24af3963",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmM4NzliZTk1MDBjMWNjY2Y5NmZmM2FhOTRkZjQ4YzI0YWYzOTYz",
    "commit": {
      "author": {
        "name": "mb300sd",
        "email": "mb300sd@github",
        "date": "2013-02-09T22:50:40Z"
      },
      "committer": {
        "name": "mb300sd",
        "email": "mb300sd@github",
        "date": "2013-06-11T01:00:36Z"
      },
      "message": "add filters to listaddressgroupings, output object",
      "tree": {
        "sha": "eefdabe5dfff26e29aa70266506360a2365a28aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eefdabe5dfff26e29aa70266506360a2365a28aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bc879be9500c1cccf96ff3aa94df48c24af3963",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bc879be9500c1cccf96ff3aa94df48c24af3963",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bc879be9500c1cccf96ff3aa94df48c24af3963",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bc879be9500c1cccf96ff3aa94df48c24af3963/comments",
    "author": {
      "login": "mb300sd",
      "id": 1869901,
      "node_id": "MDQ6VXNlcjE4Njk5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1869901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mb300sd",
      "html_url": "https://github.com/mb300sd",
      "followers_url": "https://api.github.com/users/mb300sd/followers",
      "following_url": "https://api.github.com/users/mb300sd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mb300sd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mb300sd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mb300sd/subscriptions",
      "organizations_url": "https://api.github.com/users/mb300sd/orgs",
      "repos_url": "https://api.github.com/users/mb300sd/repos",
      "events_url": "https://api.github.com/users/mb300sd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mb300sd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mb300sd",
      "id": 1869901,
      "node_id": "MDQ6VXNlcjE4Njk5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1869901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mb300sd",
      "html_url": "https://github.com/mb300sd",
      "followers_url": "https://api.github.com/users/mb300sd/followers",
      "following_url": "https://api.github.com/users/mb300sd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mb300sd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mb300sd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mb300sd/subscriptions",
      "organizations_url": "https://api.github.com/users/mb300sd/orgs",
      "repos_url": "https://api.github.com/users/mb300sd/repos",
      "events_url": "https://api.github.com/users/mb300sd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mb300sd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1020b780a1493c6a709f70756b2af54a7126f40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1020b780a1493c6a709f70756b2af54a7126f40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1020b780a1493c6a709f70756b2af54a7126f40"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 27,
      "deletions": 10
    },
    "files": [
      {
        "sha": "65687e396251343498ca203d74410cad2d3fd9a7",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1198,6 +1198,8 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n     if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n+    if (strMethod == \"listaddressgroupings\"   && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"listaddressgroupings\"   && n > 1) ConvertTo<bool>(params[1]);\n \n     return params;\n }"
      },
      {
        "sha": "10500aee32265bb11e6749c78c91079a3940e473",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 10,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -283,29 +283,44 @@ Value listaddressgroupings(const Array& params, bool fHelp)\n {\n     if (fHelp)\n         throw runtime_error(\n-            \"listaddressgroupings\\n\"\n+            \"listaddressgroupings [showemptygroups=true] [showemptyaddresses=true]\\n\"\n             \"Lists groups of addresses which have had their common ownership\\n\"\n             \"made public by common use as inputs or as the resulting change\\n\"\n-            \"in past transactions\");\n+            \"in past transactions\\n\"\n+            \"[showemptygroups] hides groups with zero balance if set to false\\n\"\n+            \"[showemptyaddresses] hides addresses with zero balance if false\");\n+\n+    bool showEmptyGroups = true;\n+    bool showEmptyAddresses = true;\n+    if (params.size() > 0)\n+        showEmptyGroups = params[0].get_bool();\n+    if (params.size() > 1)\n+        showEmptyAddresses = params[1].get_bool();\n \n     Array jsonGroupings;\n     map<CTxDestination, int64> balances = pwalletMain->GetAddressBalances();\n     BOOST_FOREACH(set<CTxDestination> grouping, pwalletMain->GetAddressGroupings())\n     {\n         Array jsonGrouping;\n+        int64 groupBalance = 0;\n         BOOST_FOREACH(CTxDestination address, grouping)\n         {\n-            Array addressInfo;\n-            addressInfo.push_back(CBitcoinAddress(address).ToString());\n-            addressInfo.push_back(ValueFromAmount(balances[address]));\n+            if (showEmptyAddresses || balances[address] > 0)\n             {\n-                LOCK(pwalletMain->cs_wallet);\n-                if (pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get()) != pwalletMain->mapAddressBook.end())\n-                    addressInfo.push_back(pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get())->second);\n+                Object addressInfo;\n+                addressInfo.push_back(Pair(\"address\", CBitcoinAddress(address).ToString()));\n+                addressInfo.push_back(Pair(\"balance\", ValueFromAmount(balances[address])));\n+                {\n+                    LOCK(pwalletMain->cs_wallet);\n+                    if (pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get()) != pwalletMain->mapAddressBook.end())\n+                        addressInfo.push_back(Pair(\"account\", pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get())->second));\n+                }\n+                jsonGrouping.push_back(addressInfo);\n+                groupBalance += balances[address];\n             }\n-            jsonGrouping.push_back(addressInfo);\n         }\n-        jsonGroupings.push_back(jsonGrouping);\n+        if (showEmptyGroups || groupBalance > 0)\n+            jsonGroupings.push_back(jsonGrouping);\n     }\n     return jsonGroupings;\n }"
      }
    ]
  },
  {
    "sha": "4c4c4d79046cc6523fcfa300485146a2bfead319",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzRjNGQ3OTA0NmNjNjUyM2ZjZmEzMDA0ODUxNDZhMmJmZWFkMzE5",
    "commit": {
      "author": {
        "name": "mb300sd",
        "email": "mb300sd@github",
        "date": "2013-10-07T04:29:09Z"
      },
      "committer": {
        "name": "mb300sd",
        "email": "mb300sd@github",
        "date": "2013-10-07T04:29:09Z"
      },
      "message": "Merge branch 'master' into filteraddrgroups\n\nConflicts:\n\tsrc/bitcoinrpc.cpp\n\tsrc/rpcwallet.cpp",
      "tree": {
        "sha": "bbc57e4550d30a9c3fd63d555f6727c37632ec70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbc57e4550d30a9c3fd63d555f6727c37632ec70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c4c4d79046cc6523fcfa300485146a2bfead319",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c4c4d79046cc6523fcfa300485146a2bfead319",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c4c4d79046cc6523fcfa300485146a2bfead319",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c4c4d79046cc6523fcfa300485146a2bfead319/comments",
    "author": {
      "login": "mb300sd",
      "id": 1869901,
      "node_id": "MDQ6VXNlcjE4Njk5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1869901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mb300sd",
      "html_url": "https://github.com/mb300sd",
      "followers_url": "https://api.github.com/users/mb300sd/followers",
      "following_url": "https://api.github.com/users/mb300sd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mb300sd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mb300sd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mb300sd/subscriptions",
      "organizations_url": "https://api.github.com/users/mb300sd/orgs",
      "repos_url": "https://api.github.com/users/mb300sd/repos",
      "events_url": "https://api.github.com/users/mb300sd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mb300sd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mb300sd",
      "id": 1869901,
      "node_id": "MDQ6VXNlcjE4Njk5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1869901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mb300sd",
      "html_url": "https://github.com/mb300sd",
      "followers_url": "https://api.github.com/users/mb300sd/followers",
      "following_url": "https://api.github.com/users/mb300sd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mb300sd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mb300sd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mb300sd/subscriptions",
      "organizations_url": "https://api.github.com/users/mb300sd/orgs",
      "repos_url": "https://api.github.com/users/mb300sd/repos",
      "events_url": "https://api.github.com/users/mb300sd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mb300sd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bc879be9500c1cccf96ff3aa94df48c24af3963"
      },
      {
        "sha": "695a722003a2565f79cc337668e52d5c941fde10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/695a722003a2565f79cc337668e52d5c941fde10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/695a722003a2565f79cc337668e52d5c941fde10"
      }
    ],
    "stats": {
      "total": 64414,
      "additions": 52931,
      "deletions": 11483
    },
    "files": [
      {
        "sha": "ba6842acaa08d772e355c41d50debb5bfe11ca37",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 64,
        "deletions": 1,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,7 +1,46 @@\n+*.tar.gz\n+\n+*.exe\n src/*.exe\n+src/*/*.exe\n src/bitcoin\n src/bitcoind\n-src/test_bitcoin\n+src/test/test_bitcoin\n+src/qt/test/test_bitcoin-qt\n+\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+config.log\n+config.status\n+configure\n+src/.deps/\n+src/Makefile.in\n+src/bitcoin-config.h\n+src/bitcoin-config.h.in\n+src/build-aux/\n+src/qt/Makefile.in\n+src/stamp-h1\n+share/setup.nsi\n+share/qt/Info.plist\n+\n+src/leveldb/.deps/\n+\n+src/test/.deps\n+src/test/.dirstamp\n+\n+src/qt/.deps/\n+src/qt/.dirstamp\n+src/qt/*.moc\n+src/qt/moc_*.cpp\n+src/qt/forms/ui_*.h\n+\n+src/qt/test/.deps/\n+src/qt/test/.dirstamp\n+src/qt/test/moc*.cpp\n+src/qt/res/.deps/\n+src/qt/res/.dirstamp\n+\n .*.swp\n *.*~*\n *.bak\n@@ -10,6 +49,16 @@ src/test_bitcoin\n *.o\n *.patch\n .bitcoin\n+*.a\n+*.pb.cc\n+*.pb.h\n+\n+*.log\n+*.trs\n+*.dmg\n+\n+*.json.h\n+*.raw.h\n \n # Compilation and Qt preprocessor part\n *.qm\n@@ -31,4 +80,18 @@ qrc_*.cpp\n .DS_Store\n build\n \n+#lcov\n+*.gcno\n+/*.info\n+test_bitcoin.coverage/\n+total.coverage/\n+coverage_percent.txt\n+\n+#build tests\n+linux-coverage-build\n+linux-build\n+win32-build\n+qa/pull-tester/run-bitcoind-for-test.sh\n+qa/pull-tester/build-tests.sh\n+\n !src/leveldb-*/Makefile"
      },
      {
        "sha": "4d931e2b5b652a20a9c4ecfb02aa6f97a9329f1e",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,9 +1,9 @@\n Building Bitcoin\n \n-See doc/readme-qt.rst for instructions on building Bitcoin-Qt,\n+See doc/readme-qt.md for instructions on building Bitcoin-Qt,\n the intended-for-end-users, nice-graphical-interface, reference\n implementation of Bitcoin.\n \n-See doc/build-*.txt for instructions on building bitcoind,\n+See doc/build-*.md for instructions on building bitcoind,\n the intended-for-services, no-graphical-interface, reference\n implementation of Bitcoin.\n\\ No newline at end of file"
      },
      {
        "sha": "b4ea94ad62d9496f75f2f14a1ae6d0f4ce6813b0",
        "filename": "Makefile.am",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,159 @@\n+ACLOCAL_AMFLAGS = -I src/m4\n+SUBDIRS = src\n+.PHONY: deploy\n+\n+GZIP_ENV=\"-9n\"\n+\n+BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win32-setup$(EXEEXT)\n+\n+OSX_APP=Bitcoin-Qt.app\n+OSX_DMG=Bitcoin-Qt.dmg\n+OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/background.png\n+\n+COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n+  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info block_test_filtered.info \\\n+  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+\n+dist-hook:\n+\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n+\t-$(GIT) archive --format=tar HEAD -- src/version.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+distcheck-hook:\n+\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n+\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n+\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n+\n+distcleancheck:\n+\t@:\n+\n+$(BITCOIN_WIN_INSTALLER): $(BITCOIND_BIN) $(BITCOIN_QT_BIN)\n+\t$(MAKE) distdir\n+\t$(MKDIR_P) $(top_builddir)/release\n+\t$(INSTALL_STRIP_PROGRAM) $(top_builddir)/src/bitcoind$(EXEEXT) $(top_builddir)/release\n+\t$(INSTALL_STRIP_PROGRAM) $(top_builddir)/src/qt/bitcoin-qt$(EXEEXT) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n+\t  echo error: could not build $@\n+\n+$(BITCOIND_BIN):\n+\tmake -C $(top_srcdir)/src bitcoind$(EXEEXT)\n+\n+$(BITCOIN_QT_BIN):\n+\tmake -C $(top_srcdir)/src/qt bitcoin-qt$(EXEEXT)\n+\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@\n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_STRIP_PROGRAM)  $< $@\n+\n+OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+\trm -rf $(OSX_APP)\n+\n+\n+if TARGET_DARWIN\n+deploy: $(OSX_DMG)\n+endif\n+if TARGET_WINDOWS\n+deploy: $(BITCOIN_WIN_INSTALLER)\n+endif\n+\n+if USE_LCOV\n+\n+baseline.info:\n+\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+baseline_filtered.info: baseline.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+leveldb_baseline.info: baseline_filtered.info\n+\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n+\n+leveldb_baseline_filtered.info: leveldb_baseline.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n+\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n+\n+test_bitcoin.info: baseline_filtered_combined.info\n+\t$(MAKE) -C src/ check\n+\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+test_bitcoin_filtered.info: test_bitcoin.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+block_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -Xmx2G -jar $(JAVA_COMPARISON_TOOL) 1 18444\n+\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+block_test_filtered.info: block_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+\n+total_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+\t$(GENHTML) -s $< -o $(@D)\n+\t@touch $@\n+\n+total.coverage/.dirstamp: total_coverage.info\n+\t$(GENHTML) -s $< -o $(@D)\n+\t@touch $@\n+\n+cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+\n+endif\n+\n+if USE_COMPARISON_TOOL\n+check-local:\n+\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -Xmx2G -jar $(JAVA_COMPARISON_TOOL) 1 18444\n+endif\n+\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/pull-tester.sh $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+.INTERMEDIATE: $(OSX_APP_BUILT) $(COVERAGE_INFO)\n+\n+clean-local:\n+\trm -rf test_bitcoin.coverage/ total.coverage/"
      },
      {
        "sha": "0ac3222328493ba4cb5d4eefe1b0a1bdbae6fd0d",
        "filename": "README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 11,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -15,7 +15,7 @@ out collectively by the network. Bitcoin is also the name of the open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin client sofware, see http://www.bitcoin.org.\n+the Bitcoin client software, see http://www.bitcoin.org.\n \n License\n -------\n@@ -38,7 +38,7 @@ submitter will be asked to start a discussion (if they haven't already) on the\n \n The patch will be accepted if there is broad consensus that it is a good thing.\n Developers should expect to rework and resubmit patches if the code doesn't\n-match the project's coding conventions (see `doc/coding.txt`) or are\n+match the project's coding conventions (see `doc/coding.md`) or are\n controversial.\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n@@ -58,15 +58,8 @@ lots of money.\n Developers are strongly encouraged to write unit tests for new code, and to\n submit new unit tests for old code.\n \n-Unit tests for the core code are in `src/test/`. To compile and run them:\n-\n-    cd src; make -f makefile.unix test\n-\n-Unit tests for the GUI code are in `src/qt/test/`. To compile and run them:\n-\n-    qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro\n-    make -f Makefile.test\n-    ./bitcoin-qt_test\n+Unit tests can be compiled and run (assuming they weren't disabled in configure) with:\n+  make check\n \n Every pull request is built for both Windows and Linux on a dedicated server,\n and unit and sanity tests are automatically run. The binaries produced may be"
      },
      {
        "sha": "4e7011a59658c80bd81d28ea744da0e4405181e6",
        "filename": "autogen.sh",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1 @@\n+autoreconf -vif"
      },
      {
        "sha": "8f49dccee39e8621396333b693af89ee32c82c5a",
        "filename": "bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 428,
        "changes": 428,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,428 +0,0 @@\n-TEMPLATE = app\n-TARGET = bitcoin-qt\n-macx:TARGET = \"Bitcoin-Qt\"\n-VERSION = 0.8.2\n-INCLUDEPATH += src src/json src/qt\n-QT += core gui network\n-greaterThan(QT_MAJOR_VERSION, 4): QT += widgets\n-DEFINES += BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n-CONFIG += no_include_pwd\n-CONFIG += thread\n-\n-# for boost 1.37, add -mt to the boost libraries\n-# use: qmake BOOST_LIB_SUFFIX=-mt\n-# for boost thread win32 with _win32 sufix\n-# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n-# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-4.8\n-\n-# Dependency library locations can be customized with:\n-#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n-#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH respectively\n-\n-OBJECTS_DIR = build\n-MOC_DIR = build\n-UI_DIR = build\n-\n-# use: qmake \"RELEASE=1\"\n-contains(RELEASE, 1) {\n-    # Mac: compile for maximum compatibility (10.5, 32-bit)\n-    macx:QMAKE_CXXFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-    macx:QMAKE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-    macx:QMAKE_OBJECTIVE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-\n-    !win32:!macx {\n-        # Linux: static link and extra security (see: https://wiki.debian.org/Hardening)\n-        LIBS += -Wl,-Bstatic -Wl,-z,relro -Wl,-z,now\n-    }\n-}\n-\n-!win32 {\n-    # for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n-    QMAKE_CXXFLAGS *= -fstack-protector-all\n-    QMAKE_LFLAGS *= -fstack-protector-all\n-    # Exclude on Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n-    # This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n-}\n-# for extra security (see: https://wiki.debian.org/Hardening): this flag is GCC compiler-specific\n-QMAKE_CXXFLAGS *= -D_FORTIFY_SOURCE=2\n-# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n-win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n-# on Windows: enable GCC large address aware linker flag\n-win32:QMAKE_LFLAGS *= -Wl,--large-address-aware\n-\n-# use: qmake \"USE_QRCODE=1\"\n-# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n-contains(USE_QRCODE, 1) {\n-    message(Building with QRCode support)\n-    DEFINES += USE_QRCODE\n-    LIBS += -lqrencode\n-}\n-\n-# use: qmake \"USE_UPNP=1\" ( enabled by default; default)\n-#  or: qmake \"USE_UPNP=0\" (disabled by default)\n-#  or: qmake \"USE_UPNP=-\" (not supported)\n-# miniupnpc (http://miniupnp.free.fr/files/) must be installed for support\n-contains(USE_UPNP, -) {\n-    message(Building without UPNP support)\n-} else {\n-    message(Building with UPNP support)\n-    count(USE_UPNP, 0) {\n-        USE_UPNP=1\n-    }\n-    DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n-    INCLUDEPATH += $$MINIUPNPC_INCLUDE_PATH\n-    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,) -lminiupnpc\n-    win32:LIBS += -liphlpapi\n-}\n-\n-# use: qmake \"USE_DBUS=1\"\n-contains(USE_DBUS, 1) {\n-    message(Building with DBUS (Freedesktop notifications) support)\n-    DEFINES += USE_DBUS\n-    QT += dbus\n-}\n-\n-# use: qmake \"USE_IPV6=1\" ( enabled by default; default)\n-#  or: qmake \"USE_IPV6=0\" (disabled by default)\n-#  or: qmake \"USE_IPV6=-\" (not supported)\n-contains(USE_IPV6, -) {\n-    message(Building without IPv6 support)\n-} else {\n-    count(USE_IPV6, 0) {\n-        USE_IPV6=1\n-    }\n-    DEFINES += USE_IPV6=$$USE_IPV6\n-}\n-\n-contains(BITCOIN_NEED_QT_PLUGINS, 1) {\n-    DEFINES += BITCOIN_NEED_QT_PLUGINS\n-    QTPLUGIN += qcncodecs qjpcodecs qtwcodecs qkrcodecs qtaccessiblewidgets\n-}\n-\n-INCLUDEPATH += src/leveldb/include src/leveldb/helpers\n-LIBS += $$PWD/src/leveldb/libleveldb.a $$PWD/src/leveldb/libmemenv.a\n-!win32 {\n-    # we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a\n-} else {\n-    # make an educated guess about what the ranlib command is called\n-    isEmpty(QMAKE_RANLIB) {\n-        QMAKE_RANLIB = $$replace(QMAKE_STRIP, strip, ranlib)\n-    }\n-    LIBS += -lshlwapi\n-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libleveldb.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libmemenv.a\n-}\n-genleveldb.target = $$PWD/src/leveldb/libleveldb.a\n-genleveldb.depends = FORCE\n-PRE_TARGETDEPS += $$PWD/src/leveldb/libleveldb.a\n-QMAKE_EXTRA_TARGETS += genleveldb\n-# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n-QMAKE_CLEAN += $$PWD/src/leveldb/libleveldb.a; cd $$PWD/src/leveldb ; $(MAKE) clean\n-\n-# regenerate src/build.h\n-!win32|contains(USE_BUILD_INFO, 1) {\n-    genbuild.depends = FORCE\n-    genbuild.commands = cd $$PWD; /bin/sh share/genbuild.sh $$OUT_PWD/build/build.h\n-    genbuild.target = $$OUT_PWD/build/build.h\n-    PRE_TARGETDEPS += $$OUT_PWD/build/build.h\n-    QMAKE_EXTRA_TARGETS += genbuild\n-    DEFINES += HAVE_BUILD_INFO\n-}\n-\n-QMAKE_CXXFLAGS_WARN_ON = -fdiagnostics-show-option -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wstack-protector\n-\n-# Input\n-DEPENDPATH += src src/json src/qt\n-HEADERS += src/qt/bitcoingui.h \\\n-    src/qt/transactiontablemodel.h \\\n-    src/qt/addresstablemodel.h \\\n-    src/qt/optionsdialog.h \\\n-    src/qt/sendcoinsdialog.h \\\n-    src/qt/addressbookpage.h \\\n-    src/qt/signverifymessagedialog.h \\\n-    src/qt/aboutdialog.h \\\n-    src/qt/editaddressdialog.h \\\n-    src/qt/bitcoinaddressvalidator.h \\\n-    src/alert.h \\\n-    src/addrman.h \\\n-    src/base58.h \\\n-    src/bignum.h \\\n-    src/checkpoints.h \\\n-    src/compat.h \\\n-    src/sync.h \\\n-    src/util.h \\\n-    src/hash.h \\\n-    src/uint256.h \\\n-    src/serialize.h \\\n-    src/core.h \\\n-    src/main.h \\\n-    src/net.h \\\n-    src/key.h \\\n-    src/db.h \\\n-    src/walletdb.h \\\n-    src/script.h \\\n-    src/init.h \\\n-    src/bloom.h \\\n-    src/mruset.h \\\n-    src/checkqueue.h \\\n-    src/json/json_spirit_writer_template.h \\\n-    src/json/json_spirit_writer.h \\\n-    src/json/json_spirit_value.h \\\n-    src/json/json_spirit_utils.h \\\n-    src/json/json_spirit_stream_reader.h \\\n-    src/json/json_spirit_reader_template.h \\\n-    src/json/json_spirit_reader.h \\\n-    src/json/json_spirit_error_position.h \\\n-    src/json/json_spirit.h \\\n-    src/qt/clientmodel.h \\\n-    src/qt/guiutil.h \\\n-    src/qt/transactionrecord.h \\\n-    src/qt/guiconstants.h \\\n-    src/qt/optionsmodel.h \\\n-    src/qt/monitoreddatamapper.h \\\n-    src/qt/transactiondesc.h \\\n-    src/qt/transactiondescdialog.h \\\n-    src/qt/bitcoinamountfield.h \\\n-    src/wallet.h \\\n-    src/keystore.h \\\n-    src/qt/transactionfilterproxy.h \\\n-    src/qt/transactionview.h \\\n-    src/qt/walletmodel.h \\\n-    src/qt/walletview.h \\\n-    src/qt/walletstack.h \\\n-    src/qt/walletframe.h \\\n-    src/bitcoinrpc.h \\\n-    src/qt/overviewpage.h \\\n-    src/qt/csvmodelwriter.h \\\n-    src/crypter.h \\\n-    src/qt/sendcoinsentry.h \\\n-    src/qt/qvalidatedlineedit.h \\\n-    src/qt/bitcoinunits.h \\\n-    src/qt/qvaluecombobox.h \\\n-    src/qt/askpassphrasedialog.h \\\n-    src/protocol.h \\\n-    src/qt/notificator.h \\\n-    src/qt/paymentserver.h \\\n-    src/allocators.h \\\n-    src/ui_interface.h \\\n-    src/qt/rpcconsole.h \\\n-    src/version.h \\\n-    src/netbase.h \\\n-    src/clientversion.h \\\n-    src/txdb.h \\\n-    src/leveldb.h \\\n-    src/threadsafety.h \\\n-    src/limitedmap.h \\\n-    src/qt/splashscreen.h\n-\n-SOURCES += src/qt/bitcoin.cpp \\\n-    src/qt/bitcoingui.cpp \\\n-    src/qt/transactiontablemodel.cpp \\\n-    src/qt/addresstablemodel.cpp \\\n-    src/qt/optionsdialog.cpp \\\n-    src/qt/sendcoinsdialog.cpp \\\n-    src/qt/addressbookpage.cpp \\\n-    src/qt/signverifymessagedialog.cpp \\\n-    src/qt/aboutdialog.cpp \\\n-    src/qt/editaddressdialog.cpp \\\n-    src/qt/bitcoinaddressvalidator.cpp \\\n-    src/alert.cpp \\\n-    src/version.cpp \\\n-    src/sync.cpp \\\n-    src/util.cpp \\\n-    src/hash.cpp \\\n-    src/netbase.cpp \\\n-    src/key.cpp \\\n-    src/script.cpp \\\n-    src/core.cpp \\\n-    src/main.cpp \\\n-    src/init.cpp \\\n-    src/net.cpp \\\n-    src/bloom.cpp \\\n-    src/checkpoints.cpp \\\n-    src/addrman.cpp \\\n-    src/db.cpp \\\n-    src/walletdb.cpp \\\n-    src/qt/clientmodel.cpp \\\n-    src/qt/guiutil.cpp \\\n-    src/qt/transactionrecord.cpp \\\n-    src/qt/optionsmodel.cpp \\\n-    src/qt/monitoreddatamapper.cpp \\\n-    src/qt/transactiondesc.cpp \\\n-    src/qt/transactiondescdialog.cpp \\\n-    src/qt/bitcoinstrings.cpp \\\n-    src/qt/bitcoinamountfield.cpp \\\n-    src/wallet.cpp \\\n-    src/keystore.cpp \\\n-    src/qt/transactionfilterproxy.cpp \\\n-    src/qt/transactionview.cpp \\\n-    src/qt/walletmodel.cpp \\\n-    src/qt/walletview.cpp \\\n-    src/qt/walletstack.cpp \\\n-    src/qt/walletframe.cpp \\\n-    src/bitcoinrpc.cpp \\\n-    src/rpcdump.cpp \\\n-    src/rpcnet.cpp \\\n-    src/rpcmining.cpp \\\n-    src/rpcwallet.cpp \\\n-    src/rpcblockchain.cpp \\\n-    src/rpcrawtransaction.cpp \\\n-    src/qt/overviewpage.cpp \\\n-    src/qt/csvmodelwriter.cpp \\\n-    src/crypter.cpp \\\n-    src/qt/sendcoinsentry.cpp \\\n-    src/qt/qvalidatedlineedit.cpp \\\n-    src/qt/bitcoinunits.cpp \\\n-    src/qt/qvaluecombobox.cpp \\\n-    src/qt/askpassphrasedialog.cpp \\\n-    src/protocol.cpp \\\n-    src/qt/notificator.cpp \\\n-    src/qt/paymentserver.cpp \\\n-    src/qt/rpcconsole.cpp \\\n-    src/noui.cpp \\\n-    src/leveldb.cpp \\\n-    src/txdb.cpp \\\n-    src/qt/splashscreen.cpp\n-\n-RESOURCES += src/qt/bitcoin.qrc\n-\n-FORMS += src/qt/forms/sendcoinsdialog.ui \\\n-    src/qt/forms/addressbookpage.ui \\\n-    src/qt/forms/signverifymessagedialog.ui \\\n-    src/qt/forms/aboutdialog.ui \\\n-    src/qt/forms/editaddressdialog.ui \\\n-    src/qt/forms/transactiondescdialog.ui \\\n-    src/qt/forms/overviewpage.ui \\\n-    src/qt/forms/sendcoinsentry.ui \\\n-    src/qt/forms/askpassphrasedialog.ui \\\n-    src/qt/forms/rpcconsole.ui \\\n-    src/qt/forms/optionsdialog.ui\n-\n-contains(USE_QRCODE, 1) {\n-HEADERS += src/qt/qrcodedialog.h\n-SOURCES += src/qt/qrcodedialog.cpp\n-FORMS += src/qt/forms/qrcodedialog.ui\n-}\n-\n-contains(BITCOIN_QT_TEST, 1) {\n-SOURCES += src/qt/test/test_main.cpp \\\n-    src/qt/test/uritests.cpp\n-HEADERS += src/qt/test/uritests.h\n-DEPENDPATH += src/qt/test\n-QT += testlib\n-TARGET = bitcoin-qt_test\n-DEFINES += BITCOIN_QT_TEST\n-  macx: CONFIG -= app_bundle\n-}\n-\n-# Todo: Remove this line when switching to Qt5, as that option was removed\n-CODECFORTR = UTF-8\n-\n-# for lrelease/lupdate\n-# also add new translations to src/qt/bitcoin.qrc under translations/\n-TRANSLATIONS = $$files(src/qt/locale/bitcoin_*.ts)\n-\n-isEmpty(QMAKE_LRELEASE) {\n-    win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]\\\\lrelease.exe\n-    else:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n-}\n-isEmpty(QM_DIR):QM_DIR = $$PWD/src/qt/locale\n-# automatically build translations, so they can be included in resource file\n-TSQM.name = lrelease ${QMAKE_FILE_IN}\n-TSQM.input = TRANSLATIONS\n-TSQM.output = $$QM_DIR/${QMAKE_FILE_BASE}.qm\n-TSQM.commands = $$QMAKE_LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n-TSQM.CONFIG = no_link\n-QMAKE_EXTRA_COMPILERS += TSQM\n-\n-# \"Other files\" to show in Qt Creator\n-OTHER_FILES += README.md \\\n-    doc/*.rst \\\n-    doc/*.txt \\\n-    doc/*.md \\\n-    src/bitcoind.cpp \\\n-    src/qt/res/bitcoin-qt.rc \\\n-    src/test/*.cpp \\\n-    src/test/*.h \\\n-    src/qt/test/*.cpp \\\n-    src/qt/test/*.h\n-\n-# platform specific defaults, if not overridden on command line\n-isEmpty(BOOST_LIB_SUFFIX) {\n-    macx:BOOST_LIB_SUFFIX = -mt\n-    win32:BOOST_LIB_SUFFIX = -mgw44-mt-s-1_50\n-}\n-\n-isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n-    BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n-}\n-\n-isEmpty(BDB_LIB_PATH) {\n-    macx:BDB_LIB_PATH = /opt/local/lib/db48\n-}\n-\n-isEmpty(BDB_LIB_SUFFIX) {\n-    macx:BDB_LIB_SUFFIX = -4.8\n-}\n-\n-isEmpty(BDB_INCLUDE_PATH) {\n-    macx:BDB_INCLUDE_PATH = /opt/local/include/db48\n-}\n-\n-isEmpty(BOOST_LIB_PATH) {\n-    macx:BOOST_LIB_PATH = /opt/local/lib\n-}\n-\n-isEmpty(BOOST_INCLUDE_PATH) {\n-    macx:BOOST_INCLUDE_PATH = /opt/local/include\n-}\n-\n-win32:DEFINES += WIN32\n-win32:RC_FILE = src/qt/res/bitcoin-qt.rc\n-\n-win32:!contains(MINGW_THREAD_BUGFIX, 0) {\n-    # At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n-    # thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n-    # work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n-    # it is prepended to QMAKE_LIBS_QT_ENTRY.\n-    # It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n-    # any problems on some untested qmake profile now or in the future.\n-    DEFINES += _MT\n-    QMAKE_LIBS_QT_ENTRY = -lmingwthrd $$QMAKE_LIBS_QT_ENTRY\n-}\n-\n-!win32:!macx {\n-    DEFINES += LINUX\n-    LIBS += -lrt\n-    # _FILE_OFFSET_BITS=64 lets 32-bit fopen transparently support large files.\n-    DEFINES += _FILE_OFFSET_BITS=64\n-}\n-\n-macx:HEADERS += src/qt/macdockiconhandler.h src/qt/macnotificationhandler.h\n-macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm src/qt/macnotificationhandler.mm\n-macx:LIBS += -framework Foundation -framework ApplicationServices -framework AppKit -framework CoreServices\n-macx:DEFINES += MAC_OSX MSG_NOSIGNAL=0\n-macx:ICON = src/qt/res/icons/bitcoin.icns\n-macx:QMAKE_CFLAGS_THREAD += -pthread\n-macx:QMAKE_LFLAGS_THREAD += -pthread\n-macx:QMAKE_CXXFLAGS_THREAD += -pthread\n-macx:QMAKE_INFO_PLIST = share/qt/Info.plist\n-\n-# Set libraries and includes at end, to use platform-defined defaults if not overridden\n-INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n-LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n-LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n-# -lgdi32 has to happen after -lcrypto (see  #681)\n-win32:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX\n-win32:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n-macx:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n-\n-contains(RELEASE, 1) {\n-    !win32:!macx {\n-        # Linux: turn dynamic linking back on for c/c++ runtime libraries\n-        LIBS += -Wl,-Bdynamic\n-    }\n-}\n-\n-system($$QMAKE_LRELEASE -silent $$TRANSLATIONS)"
      },
      {
        "sha": "d9ed86f6fc4f168a44329afe5df1531087736d6a",
        "filename": "configure.ac",
        "status": "added",
        "additions": 716,
        "deletions": 0,
        "changes": 716,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,716 @@\n+dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n+AC_PREREQ([2.60])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 8)\n+define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_COPYRIGHT_YEAR, 2013)\n+AC_INIT([Bitcoin],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n+AC_CONFIG_AUX_DIR([src/build-aux])\n+AC_CONFIG_MACRO_DIR([src/m4])\n+AC_CANONICAL_HOST\n+AH_TOP([#ifndef BITCOIN_CONFIG_H])\n+AH_TOP([#define BITCOIN_CONFIG_H])\n+AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+\n+# This m4 will only be used if a system copy cannot be found. This is helpful\n+# on systems where autotools are installed but the pkg-config macros are not in\n+# a default location. It is currently used for building on OSX where autotools\n+# are preinstalled but pkg-config comes from macports or homebrew. It should\n+# probably be removed when building on <= 10.6 is no longer supported.\n+m4_include([pkg.m4])\n+\n+dnl faketime breaks configure and is only needed for make. Disable it here.\n+unset FAKETIME\n+\n+dnl ==============================================================\n+dnl Setup for automake\n+dnl ==============================================================\n+\n+AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n+\n+dnl faketime messes with timestamps and causes configure to be re-run.\n+dnl --disable-maintainer-mode can be used to bypass this.\n+AM_MAINTAINER_MODE([enable])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$withval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+dnl enable ipv6 support\n+AC_ARG_ENABLE([ipv6],\n+  [AS_HELP_STRING([--enable-ipv6],\n+  [enable ipv6 (default is yes)])],\n+  [use_ipv6=$enableval],\n+  [use_ipv6=yes])\n+\n+dnl enable qt support\n+AC_ARG_WITH([qt],\n+  [AS_HELP_STRING([--with-qt],\n+  [enable qt (default is yes)])],\n+  [use_qt=$withval],\n+  [use_qt=yes])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_WITH([comparison-tool],\n+    AS_HELP_STRING([with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n+    [use_comparison_tool=$withval],\n+    [use_comparison_tool=no])\n+\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n+  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$withval],\n+  [use_qr=auto])\n+\n+AC_ARG_WITH([qtdbus],\n+  [AS_HELP_STRING([--with-qtdbus],\n+  [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+  [use_dbus=$withval],\n+  [use_dbus=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--enable-hardening],\n+  [attempt to harden the resulting executables (default is yes)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=yes])\n+\n+AC_ARG_ENABLE([ccache],\n+  [AS_HELP_STRING([--enable-ccache],\n+  [enable building with ccache (default is yes if ccache is found)])],\n+  [use_ccache=$enableval],\n+  [use_ccache=auto])\n+\n+AC_ARG_ENABLE([lcov],\n+  [AS_HELP_STRING([--enable-lcov],\n+  [enable lcov testing (default is no)])],\n+  [use_lcov=yes],\n+  [use_lcov=no])\n+\n+AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n+\n+\n+AC_CONFIG_SRCDIR([src])\n+AC_CONFIG_HEADERS([src/bitcoin-config.h])\n+\n+dnl Checks for programs.\n+AC_PROG_CXX\n+AC_PROG_CC\n+AC_PROG_CPP\n+AC_PROG_CXXCPP\n+AC_PROG_INSTALL\n+AC_PROG_OBJC\n+m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n+AC_PROG_MKDIR_P\n+AC_PROG_SED\n+AC_PATH_TOOL(AR, ar)\n+AC_PATH_TOOL(RANLIB, ranlib)\n+AC_PATH_TOOL(STRIP, strip)\n+AC_PATH_TOOL(GCOV, gcov)\n+AC_PATH_PROG(LCOV, lcov)\n+AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROG(GENHTML, genhtml)\n+AC_PATH_PROG([GIT], [git])\n+AC_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n+AC_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n+AC_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n+AC_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n+AC_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n+AC_PATH_PROG([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n+AC_PATH_PROG(CCACHE,ccache)\n+AC_PATH_PROG(XGETTEXT,xgettext)\n+AC_PATH_PROG(HEXDUMP,hexdump)\n+PKG_PROG_PKG_CONFIG\n+\n+## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n+##       compatibility with the legacy buildsystem.\n+##\n+CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n+CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO\"\n+\n+AC_LANG_PUSH([C++])\n+\n+use_pkgconfig=yes\n+case $host in\n+  *mingw*)\n+\n+     #pkgconfig does more harm than good with mingw\n+     use_pkgconfig=no\n+\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n+\n+     AX_CHECK_LINK_FLAG([[-static-libgcc]],[LDFLAGS=\"$LDFLAGS -static-libgcc\"])\n+     AX_CHECK_LINK_FLAG([[-static-libstdc++]],[LDFLAGS=\"$LDFLAGS -static-libstdc++\"])\n+\n+     AC_PATH_PROG([MAKENSIS], [makensis], none)\n+     if test x$MAKENSIS = xnone; then\n+       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n+     fi\n+\n+     AC_PATH_TOOL(WINDRES, windres, none)\n+     if test x$WINDRES = xnone; then\n+       AC_MSG_ERROR(\"windres not found\")\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     CXXFLAGS=\"$CXXFLAGS -w\"\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     if  test x$cross_compiling != xyes; then\n+       AC_CHECK_PROG([PORT],port, port)\n+       if test x$PORT = xport; then\n+         dnl add default macports paths\n+         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n+         LIBS=\"$LIBS -L/opt/local/lib -L/opt/local/lib/db48\"\n+       fi\n+\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl add default homebrew paths\n+         openssl_prefix=`$BREW --prefix openssl`\n+         bdb_prefix=`$BREW --prefix berkeley-db4`\n+         export PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+         CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n+         LIBS=\"$LIBS -L/$bdb_prefix/lib\"\n+       fi\n+     fi\n+\n+     if test x$use_qt = xyes; then\n+       MOC_DEFS=\"-DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[LIBS=\"$LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     ;;\n+   *)\n+     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     ;;\n+esac\n+\n+if test x$use_comparison_tool != xno; then\n+  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n+fi\n+\n+if test x$use_lcov == xyes; then\n+  if test x$LCOV == x; then\n+    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n+  fi\n+  if test x$GCOV == x; then\n+    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n+  fi\n+  if test x$JAVA == x; then\n+    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n+  fi\n+  if test x$GENHTML == x; then\n+    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n+  fi\n+  if test x$use_comparison_tool == x; then\n+    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n+  fi\n+  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n+  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+fi\n+\n+dnl Require little endian\n+AC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+INCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n+\n+# The following macro will add the necessary defines to bitcoin-config.h, but\n+# they also need to be passed down to any subprojects. Pull the results out of\n+# the cache and add them to CPPFLAGS.\n+AC_SYS_LARGEFILE\n+\n+if test x$ac_cv_sys_file_offset_bits != x &&\n+   test x$ac_cv_sys_file_offset_bits != xno &&\n+   test x$ac_cv_sys_file_offset_bits != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n+fi\n+\n+if test x$ac_cv_sys_large_files != x &&\n+   test x$ac_cv_sys_large_files != xno &&\n+   test x$ac_cv_sys_large_files != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n+fi\n+\n+AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n+\n+if test x$use_hardening != xno; then\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+\n+  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"])\n+\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [LDFLAGS=\"-Wl,-z,relro\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [LDFLAGS=\"-Wl,-z,now\"])\n+\n+  if test x$TARGET_OS != xwindows; then\n+    # -fstack-protector-all can produce broken binaries with mingw\n+    AX_CHECK_COMPILE_FLAG([-fno-stack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fno-stack-protector\"])\n+    AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+\n+    # -pie will link successfully with mingw, but it's unsupported and leads to undeterministic binaries\n+    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n+  fi\n+\n+  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n+  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n+  OBJCXXFLAGS=\"$CXXFLAGS\"\n+fi\n+\n+dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+fi\n+\n+AC_CHECK_HEADERS([stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h])\n+\n+dnl Check for MSG_NOSIGNAL\n+AC_MSG_CHECKING(for MSG_NOSIGNAL)\n+AC_TRY_COMPILE([#include <sys/socket.h>],\n+ [ int f = MSG_NOSIGNAL; ],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for libdb_cxx\n+BITCOIN_FIND_BDB48\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_LIB([miniupnpc], [main],, [have_miniupnpc=no])\n+fi\n+\n+dnl Check for boost libs\n+AX_BOOST_BASE\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_PROGRAM_OPTIONS\n+AX_BOOST_THREAD\n+AX_BOOST_CHRONO\n+\n+if test x$use_tests = xyes; then\n+\n+  if test x$HEXDUMP = x; then\n+    AC_MSG_ERROR(hexdump is required for tests)\n+  fi\n+\n+\n+  AX_BOOST_UNIT_TEST_FRAMEWORK\n+fi\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n+BOOST_INCLUDES=\"$BOOST_CPPFLAGS\"\n+\n+dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n+dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n+dnl a working version is available, else fall back to sleep. sleep was removed\n+dnl after 1.56.\n+dnl If neither is available, abort.\n+dnl If sleep_for is used, boost_chrono becomes a requirement.\n+if test x$ax_cv_boost_chrono = xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$LIBS $BOOST_LIBS $BOOST_CHRONO_LIB\"\n+AC_TRY_LINK([\n+  #include <boost/thread/thread.hpp>\n+  #include <boost/version.hpp>\n+  ],[\n+  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n+      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ],\n+  [boost_sleep=yes; BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\";\n+     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$LIBS $BOOST_LIBS\"\n+AC_TRY_LINK([\n+  #include <boost/version.hpp>\n+  #include <boost/thread.hpp>\n+  #include <boost/date_time/posix_time/posix_time_types.hpp>\n+  ],[\n+  #if BOOST_VERSION <= 105600\n+      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ],\n+  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+  AC_MSG_ERROR(No working boost sleep implementation found)\n+fi\n+\n+if test x$use_pkgconfig = xyes; then\n+\n+  if test x$PKG_CONFIG == x; then\n+    AC_MSG_ERROR(pkg-config not found.)\n+  fi\n+\n+  : #NOP\n+  m4_ifdef(\n+    [PKG_CHECK_MODULES],\n+    [\n+      PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$INCLUDES $CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n+\n+      if test x$use_qt = xyes; then\n+        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+        if test x$use_tests = xyes; then\n+          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+        fi\n+        if test x$use_dbus != xno; then\n+          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+        fi\n+        if test x$use_qr != xno; then\n+          PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])\n+        fi\n+        PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [AC_MSG_ERROR(libprotobuf not found.)])\n+      fi\n+    ]\n+  )\n+else\n+  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n+  AC_CHECK_LIB([crypto],      [main],, AC_MSG_ERROR(libcrypto missing))\n+\n+  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n+  AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n+\n+  if test x$use_qt = xyes; then\n+    TEMP_LIBS=\"$LIBS\"\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n+      LIBS=\"$QT_LIBS\"\n+    fi\n+    if test x$qt_plugin_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+      LIBS=\"$QT_LIBS\"\n+    fi\n+\n+    if test x$TARGET_OS == xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, AC_MSG_ERROR(libimm32 not found. Install it or use --without-qt.))\n+    fi\n+\n+    #TODO: These are only needed when they're linked directly to parent libs. It really has nothing to do with windows.\n+    #Instead, check for missing functions in parent libs and assume static if they're absent.\n+    if test x$TARGET_OS == xwindows; then\n+      AC_CHECK_LIB([qcncodecs],      [main],, AC_MSG_ERROR(libqcncodecs not found. Install it or use --without-qt.))\n+      AC_CHECK_LIB([qjpcodecs],      [main],, AC_MSG_ERROR(libqjpcodecs not found. Install it or use --without-qt.))\n+      AC_CHECK_LIB([qkrcodecs],      [main],, AC_MSG_ERROR(libqkrcodecs not found. Install it or use --without-qt.))\n+      AC_CHECK_LIB([qtwcodecs],      [main],, AC_MSG_ERROR(libqtwcodecs not found. Install it or use --without-qt.))\n+    fi\n+\n+    AC_CHECK_LIB([QtCore],      [main],, AC_MSG_ERROR(libQtCore not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([QtGui],      [main],, AC_MSG_ERROR(libQtGui not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([QtNetwork],      [main],, AC_MSG_ERROR(libQtNetwork not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([protobuf],      [main],, AC_MSG_ERROR(libprotobuf not found. Install it or use --without-qt.))\n+    QT_LIBS=\"$LIBS\"\n+    LIBS=\"$TEMP_LIBS\"\n+\n+    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n+    fi\n+    AC_CHECK_HEADER([QtPlugin],, AC_MSG_ERROR(QtCore headers missing. Install them or use --without-qt.),)\n+    AC_CHECK_HEADER([QApplication],, AC_MSG_ERROR(QtGUI headers missing. Install them or use --without-qt.),)\n+    AC_CHECK_HEADER([QLocalSocket],, AC_MSG_ERROR(QtNetwork headers missing. Install them or use --without-qt.),)\n+\n+    if test x$use_tests = xyes; then\n+      TEMP_LIBS=\"$LIBS\"\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n+      AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+      QT_TEST_LIBS=\"$LIBS\"\n+      LIBS=\"$TEMP_LIBS\"\n+    fi\n+    if test x$use_dbus != xno; then\n+      TEMP_LIBS=\"$LIBS\"\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+      LIBS=\"$TEMP_LIBS\"\n+    fi\n+    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+    if test x$use_qr != xno; then\n+      AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n+      AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n+    fi\n+  fi\n+fi\n+\n+if test x$use_ipv6 = xyes; then\n+  dnl Check for ipv6 build requirements\n+  AC_MSG_CHECKING(for IPV6 build support)\n+  AC_TRY_LINK([\n+  #if defined(_WINDOWS)\n+  #include <winsock2.h>\n+  #else\n+  #include <sys/types.h>\n+  #include <sys/socket.h>\n+  #include <netinet/in.h>\n+  #endif\n+  ],[\n+  #if !defined(_WINDOWS)\n+  struct in6_addr ipv6Addr;\n+  struct sockaddr_in6 addr;\n+  #endif\n+  int temp = socket(AF_INET6, SOCK_STREAM, 0);],\n+  [AC_MSG_RESULT(yes); have_ipv6=yes; AC_DEFINE(HAVE_IPV6, 1, [Define this symbol if you have ipv6 build support])],\n+  [AC_MSG_RESULT(no)]; have_ipv6=no)\n+fi\n+AC_LANG_POP\n+\n+if test \"x$use_ccache\" != \"xno\"; then\n+  AC_MSG_CHECKING(if ccache should be enabled)\n+  if test x$CCACHE = x; then\n+    if test \"x$use_ccache\" = \"xyes\"; then\n+      AC_MSG_ERROR([ccache not found.]);\n+    else\n+      AC_MSG_NOTICE([ccache not found. Falling back to default CC])\n+      use_ccache=no\n+    fi\n+  else\n+    use_ccache=yes\n+    CC=\"$ac_cv_path_CCACHE $CC\"\n+    CXX=\"$ac_cv_path_CCACHE $CXX\"\n+  fi\n+  AC_MSG_RESULT($use_ccache)\n+fi\n+\n+dnl enable ipv6 support\n+AC_MSG_CHECKING([if ipv6 should be enabled])\n+if test x$have_ipv6 = xno; then\n+  if test x$use_ipv6 = xyes; then\n+     AC_MSG_ERROR(\"ipv6 requested but cannot be built. use --disable-ipv6\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_ipv6 = xyes; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_IPV6],[1],[Define if ipv6 support should be compiled in])\n+  else\n+      AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([if upnp should be enabled])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"upnp requested but cannot be built. use --without-miniupnpc\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([if upnp should be on by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[Define to 1 for upnp runtime support])\n+    if test x$TARGET_OS = xwindows; then\n+      CPPFLAGS=\"$CPPFLAGS -DSTATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable qt support\n+AC_MSG_CHECKING([if qt should be enabled])\n+if test x$use_qt = xyes; then\n+  if test x$have_qt = xno; then\n+     AC_MSG_ERROR(\"qt support requested but qt could not be located. use --without-qt\")\n+  fi\n+  if test x$MOC = x; then\n+    AC_MSG_ERROR(\"qt support requested but moc was not found. use --without-qt\")\n+  fi\n+  if test x$PROTOC = x; then\n+    AC_MSG_ERROR(\"qt support requested but protoc was not found. use --without-qt\")\n+  fi\n+  if test x$UIC = x; then\n+    AC_MSG_ERROR(\"qt support requested but uic was not found. use --without-qt\")\n+  fi\n+  if test x$RCC = x; then\n+    AC_MSG_ERROR(\"qt support requested but rcc was not found. use --without-qt\")\n+  fi\n+  if test x$LRELEASE = x; then\n+    AC_MSG_ERROR(\"qt support requested but lrelease was not found. use --without-qt\")\n+  fi\n+  if test x$use_tests = xyes; then\n+    if test x$have_qt_test = xno; then\n+      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n+    fi\n+  fi\n+  if test x$have_qt_dbus = xno;  then\n+    use_dbus=no\n+    if test x$use_dbus = xyes; then\n+      AC_MSG_ERROR(\"libQtDBus not found. Use --without-qtdbus.\")\n+    fi\n+  fi\n+  if test x$XGETTEXT == x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+  if test x$LUPDATE == x; then\n+    AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+  fi\n+\n+  BUILD_QT=qt\n+else\n+  use_qt=no\n+fi\n+\n+AC_MSG_RESULT($use_qt)\n+\n+dnl these are only used when qt is enabled\n+if test x$use_qt = xyes; then\n+\n+  dnl enable dbus support\n+  AC_MSG_CHECKING([if dbus should be enabled])\n+  if test x$use_dbus != xno; then\n+    use_dbus=yes\n+    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+  else\n+    use_dbus=no\n+  fi\n+  AC_MSG_RESULT($use_dbus)\n+\n+  dnl enable qr support\n+  AC_MSG_CHECKING([if qr should be enabled])\n+  if test x$have_qrencode = xno; then\n+    if test x$use_qr == xyes; then\n+     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+    fi\n+    AC_MSG_RESULT(no)\n+  else\n+    if test x$use_qr != xno; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+      use_qr=yes\n+    else\n+      AC_MSG_RESULT(no)\n+    fi\n+  fi\n+\n+  if test x$use_tests = xyes; then\n+    BUILD_TEST_QT=\"test\"\n+  fi\n+fi\n+\n+if test x$use_tests = xyes; then\n+  BUILD_TEST=\"test\"\n+fi\n+\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+AM_CONDITIONAL([USE_LCOV],[test x$use_lcov == xyes])\n+AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n+AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n+AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n+AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n+AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n+AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+\n+\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(USE_IPV6)\n+AC_SUBST(INCLUDES)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(MOC_DEFS)\n+AC_SUBST(QT_INCLUDES)\n+AC_SUBST(QT_TEST_LIBS)\n+AC_SUBST(QT_LIBS)\n+AC_SUBST(QT_DBUS_LIBS)\n+AC_SUBST(QT_DBUS_INCLUDES)\n+AC_SUBST(QT_TEST_INCLUDES)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(LEVELDB_TARGET_FLAGS)\n+AC_SUBST(BUILD_QT)\n+AC_SUBST(BUILD_TEST)\n+AC_SUBST(BUILD_TEST_QT)\n+AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n+AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n+AC_CONFIG_FILES([qa/pull-tester/build-tests.sh],[chmod +x qa/pull-tester/build-tests.sh])\n+AC_OUTPUT"
      },
      {
        "sha": "0b181ef449aa903c788f95019edcc1a8a9989b27",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,17 @@\n+FORMS += \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/qrcodedialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/aboutdialog.ui\n+\n+RESOURCES += \\\n+    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "1cb9b75fbdeb01760815c5154c160cc2fd4c1179",
        "filename": "contrib/debian/README",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/debian/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/debian/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,20 @@\n+This directory contains files used to package bitcoind/bitcoin-qt\n+for Debian-based Linux systems.\n+\n+If you compile bitcoind/bitcoin-qt yourself, there are some\n+useful files here:\n+\n+bitcoin: URI support\n+--------------------\n+\n+bitcoin-qt.desktop  (Gnome / Open Desktop)\n+To install:\n+  sudo desktop-file-install bitcoin-qt.desktop\n+  sudo update-desktop-database\n+\n+If you build yourself, you will either need to modify the paths in\n+the .desktop file or copy or symlink your bitcoin-qt binary to /usr/bin\n+and the ../../share/pixmaps/bitcoin128.png to /usr/share/pixmaps\n+\n+bitcoin-qt.protocol (KDE)\n+"
      },
      {
        "sha": "82bc80a7341f8b45be155ac8f2733d0f0167fbe9",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -4,9 +4,9 @@ Name=Bitcoin\n Comment=Bitcoin P2P Cryptocurrency\n Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/bitcoin-qt\n+Exec=/usr/bin/bitcoin-qt %u\n Terminal=false\n Type=Application\n Icon=/usr/share/pixmaps/bitcoin128.png\n MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;\n+Categories=Office;Finance;"
      },
      {
        "sha": "bd6b42dc514d3d474e1a89f5028414f94f1f5cc0",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,3 +1,27 @@\n+bitcoin (0.8.5-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n+\n+bitcoin (0.8.4-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n+\n+bitcoin (0.8.3-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n+\n+bitcoin (0.8.2-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n+\n bitcoin (0.8.1-natty3) natty; urgency=low\n \n   * New pixmaps"
      },
      {
        "sha": "e9c7d4efc2a57a20e86a6842d2d5e56e1da817d3",
        "filename": "contrib/gitian-descriptors/README",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -31,7 +31,8 @@ Once you've got the right hardware and software:\n     wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n     wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'\n     wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.9/libpng-1.5.9.tar.gz'\n-    wget 'http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+    wget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+    wget 'http://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n     cd ../..\n \n     cd gitian-builder\n@@ -50,6 +51,7 @@ Once you've got the right hardware and software:\n     ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n     ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n     ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n+    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/protobuf-win32.yml\n \n     # Build Win32 release:\n     ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml"
      },
      {
        "sha": "b421cbe8c59eea0b61eabaff934eb0658e2de617",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "modified",
        "additions": 50,
        "deletions": 22,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,38 +1,66 @@\n ---\n name: \"boost\"\n suites:\n-- \"lucid\"\n+- \"precise\"\n architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n - \"faketime\"\n - \"zip\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"boost_1_50_0.tar.bz2\"\n+- \"boost_1_54_0.tar.bz2\"\n+- \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n script: |\n-  TMPDIR=\"$HOME/tmpdir\"\n-  mkdir -p $TMPDIR/bin/$GBUILD_BITS $TMPDIR/include\n-  tar xjf boost_1_50_0.tar.bz2\n-  cd boost_1_50_0\n-  echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n+  # Defines\n+  INSTALLPREFIX=\"$OUTDIR/staging/boost\"\n+  HOST=i686-w64-mingw32\n+  # Input Integrity Check\n+  echo \"047e927de336af106a24bceba30069980c191529fd76b8dff8eb9a328b48ae1d  boost_1_54_0.tar.bz2\" | shasum -c\n+  echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" | shasum -c\n+\n+  mkdir -p \"$INSTALLPREFIX\"\n+  tar xjf boost_1_54_0.tar.bz2\n+  cd boost_1_54_0\n+  GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n+  echo \"using gcc : $GCCVERSION : $HOST-g++\n         :\n-        <rc>i586-mingw32msvc-windres\n-        <archiver>i586-mingw32msvc-ar\n+        <rc>$HOST-windres\n+        <archiver>$HOST-ar\n         <cxxflags>-frandom-seed=boost1\n+        <ranlib>$HOST-ranlib\n   ;\" > user-config.jam\n   ./bootstrap.sh --without-icu\n-  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n-  for lib in chrono date_time exception filesystem graph iostreams math_c99f math_c99l math_c99 math_tr1f math_tr1l math_tr1 prg_exec_monitor program_options random regex serialization signals system test_exec_monitor thread_win32 unit_test_framework wave wserialization; do\n-      mkdir $lib\n-      (cd $lib ; ar xf ../stage/lib/libboost_${lib}-mt-s.a)\n-      mv $lib $TMPDIR/bin/$GBUILD_BITS\n-  done\n-  cp -a boost $TMPDIR/include\n-  cd $TMPDIR\n+\n+  # Workaround: Upstream boost dev refuses to include patch that would allow Free Software cross-compile toolchain to work\n+  #             This patch was authored by the Fedora package developer and ships in Fedora's mingw32-boost.\n+  #             Please obtain the exact patch that matches the above sha256sum from one of the following mirrors.\n+  #\n+  # Read History:   https://svn.boost.org/trac/boost/ticket/7262\n+  # History Mirror: http://rose.makesad.us/~paulproteus/mirrors/7262%20Boost.Context%20fails%20to%20build%20using%20MinGW.html\n+  #\n+  # Patch:          https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch\n+  # Patch Mirror:   http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch\n+  # Patch Mirror:   http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch\n+  # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n+  patch -p0 < ../boost-mingw-gas-cross-compile-2013-03-03.patch\n+\n+  # Bug Workaround: boost-1.54.0 broke the ability to disable zlib\n+  # https://svn.boost.org/trac/boost/ticket/9156\n+  sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n+  sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n+\n+  # http://statmt.org/~s0565741/software/boost_1_52_0/libs/context/doc/html/context/requirements.html\n+  # Note: Might need these options in the future for 64bit builds.\n+  # \"Please note that address-model=64 must be given to bjam command line on 64bit Windows for 64bit build; otherwise 32bit code will be generated.\"\n+  # \"For cross-compiling the lib you must specify certain additional properties at bjam command line: target-os, abi, binary-format, architecture and address-model.\"\n+  ./bjam toolset=gcc binary-format=pe target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete --prefix=\"$INSTALLPREFIX\" $MAKEOPTS install\n+\n+  cd \"$INSTALLPREFIX\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.50.0-gitian2.zip *\n-  cp boost-win32-1.50.0-gitian2.zip $OUTDIR\n+  zip -r boost-win32-1.54.0-gitian-r6.zip *\n+  cp boost-win32-1.54.0-gitian-r6.zip $OUTDIR"
      },
      {
        "sha": "7ad00fcb0198c221b673aba212cd51db68f0355b",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "modified",
        "additions": 43,
        "deletions": 22,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,15 +1,15 @@\n ---\n name: \"bitcoin-deps\"\n suites:\n-- \"lucid\"\n+- \"precise\"\n architectures:\n-- \"i386\"\n+- \"amd64\"\n packages:\n-- \"mingw32\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n - \"git-core\"\n - \"zip\"\n - \"faketime\"\n-- \"wine\"\n - \"psmisc\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n@@ -25,48 +25,69 @@ script: |\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n+  export INSTALLPREFIX=$OUTDIR/staging/deps\n+  export HOST=i686-w64-mingw32\n   #\n+  mkdir -p $INSTALLPREFIX\n+\n   tar xzf openssl-1.0.1c.tar.gz\n   cd openssl-1.0.1c\n-  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw\n+  ./Configure --cross-compile-prefix=$HOST- mingw --openssldir=$INSTALLPREFIX\n   make\n+  make install_sw\n   cd ..\n   #\n   tar xzf db-4.8.30.NC.tar.gz\n   cd db-4.8.30.NC/build_unix\n-  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n-  make $MAKEOPTS\n+  ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx --host=$HOST --disable-shared\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n   cd ../..\n   #\n   tar xzf miniupnpc-1.6.tar.gz\n   cd miniupnpc-1.6\n-  sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n-  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n-  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n+  echo \"\n+  --- miniupnpc-1.6/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n+  +++ miniupnpc-1.6/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n+  @@ -67,8 +67,8 @@\n+   \n+   wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n+   \n+  -miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n+  -\twingenminiupnpcstrings \\$< \\$@\n+  +miniupnpcstrings.h: miniupnpcstrings.h.in \n+  +\tsed -e 's|OS/version|MSWindows/5.1.2600|' -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"VERSIONHERE\\\"|' \\$< > \\$@\n+   \n+   minixml.o:\tminixml.c minixml.h miniupnpcstrings.h\n+   \n+  \" | sed \"s/VERSIONHERE/$(cat VERSION)/\" | patch -p1\n+  mkdir -p dll\n+  make -f Makefile.mingw CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a\n+  install -d $INSTALLPREFIX/include/miniupnpc\n+  install *.h $INSTALLPREFIX/include/miniupnpc\n+  install libminiupnpc.a  $INSTALLPREFIX/lib\n   cd ..\n-  mv miniupnpc-1.6 miniupnpc\n   #\n   tar xzf zlib-1.2.6.tar.gz\n   cd zlib-1.2.6\n-  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS\n+  CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n+  make\n+  make install\n   cd ..\n   #\n   tar xzf libpng-1.5.9.tar.gz\n   cd libpng-1.5.9\n-  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS=\"-L../zlib-1.2.6/\" CFLAGS=\"-I../zlib-1.2.6/\"\n+  CFLAGS=\"-I$INSTALLPREFIX/include\" LDFLAGS=\"-L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n   make $MAKEOPTS\n+  make install\n   cd ..\n   #\n   tar xjf qrencode-3.2.0.tar.bz2\n   cd qrencode-3.2.0\n-  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS=\"../libpng-1.5.9/.libs/libpng15.a ../zlib-1.2.6/libz.a\" png_CFLAGS=\"-I../libpng-1.5.9\"\n-  make $MAKEOPTS\n+  png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=$HOST\n+  make\n+  make install\n   cd ..\n   #\n-  zip -r $OUTDIR/bitcoin-deps-0.0.5.zip \\\n-    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \\\n-    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \\\n-    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \\\n-    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)\n-  # Kill wine processes as gitian won't figure out we are done otherwise\n-  killall wineserver services.exe explorer.exe winedevice.exe\n+  cd $INSTALLPREFIX\n+  zip -r $OUTDIR/bitcoin-deps-win32-gitian-r9.zip include lib"
      },
      {
        "sha": "a8a823cac0540337879381babf55c7fb75695aec",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 39,
        "deletions": 52,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,74 +1,61 @@\n ---\n name: \"bitcoin\"\n suites:\n-- \"lucid\"\n+- \"precise\"\n architectures:\n-- \"i386\"\n+- \"amd64\"\n packages:\n-- \"mingw32\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n - \"git-core\"\n - \"unzip\"\n - \"nsis\"\n - \"faketime\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n+- \"pkg-config\"\n+- \"bsdmainutils\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"qt-win32-4.8.3-gitian-r1.zip\"\n-- \"boost-win32-1.50.0-gitian2.zip\"\n-- \"bitcoin-deps-0.0.5.zip\"\n+- \"qt-win32-4.8.3-gitian-r4.zip\"\n+- \"boost-win32-1.54.0-gitian-r6.zip\"\n+- \"bitcoin-deps-win32-gitian-r9.zip\"\n+- \"protobuf-win32-2.5.0-gitian-r3.zip\"\n script: |\n   #\n-  mkdir $HOME/qt\n-  cd $HOME/qt\n-  unzip ../build/qt-win32-4.8.3-gitian-r1.zip\n-  cd $HOME/build/\n-  export PATH=$HOME/qt/bin/:$PATH\n-  #\n-  mkdir boost_1_50_0\n-  cd boost_1_50_0\n-  mkdir -p stage/lib\n-  unzip ../boost-win32-1.50.0-gitian2.zip\n-  cd bin/$GBUILD_BITS\n-  for lib in *; do\n-    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o\n-    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a\n-  done\n-  cd ../..\n-  mv include/boost .\n-  cd ..\n-  #\n-  unzip bitcoin-deps-0.0.5.zip\n+  STAGING=$HOME/staging\n+  HOST=i686-w64-mingw32\n   #\n-  find -type f | xargs touch --date=\"$REFERENCE_DATETIME\"\n+  mkdir -p $STAGING\n+  cd $STAGING\n+  unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n+  unzip ../build/boost-win32-1.54.0-gitian-r6.zip\n+  unzip ../build/bitcoin-deps-win32-gitian-r9.zip\n+  unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip\n+  cd $HOME/build/\n   #\n   cd bitcoin\n-  mkdir -p $OUTDIR/src\n-  git archive HEAD | tar -x -C $OUTDIR/src\n-  cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n-  cp $OUTDIR/src/COPYING $OUTDIR/COPYING.txt\n+  export PATH=$STAGING/host/bin:$PATH\n+  export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n+  ./autogen.sh\n+  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  make dist\n+  mkdir -p distsrc\n+  cd distsrc\n+  tar --strip-components=1 -xf ../bitcoin-*.tar.*\n+  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=i686-w64-mingw32 --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n-  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_50_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_50_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1c OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1c/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n   make $MAKEOPTS\n-  cp release/bitcoin-qt.exe $OUTDIR/\n-  #\n-  cd src\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build bitcoind.exe USE_UPNP=0 DEBUGFLAGS=\"-frandom-seed=bitcoin\"\n-  i586-mingw32msvc-strip bitcoind.exe\n-  mkdir $OUTDIR/daemon\n-  cp bitcoind.exe $OUTDIR/daemon\n-  cd ..\n-  mkdir nsis\n-  git archive HEAD | tar -x -C nsis\n-  cd nsis/src\n-  mkdir ../release\n-  cp ../../release/* ../release/\n-  cp ../../src/*.exe .\n-  makensis ../share/setup.nsi\n-  cp ../share/bitcoin-*-win32-setup.exe $OUTDIR/\n+  make deploy\n+  make install-strip\n+  cp -f bitcoin-*setup*.exe $OUTDIR/\n+\n+  mkdir -p $OUTDIR/src\n+  cp -f ../bitcoin-*.tar.* $OUTDIR/src"
      },
      {
        "sha": "18e4cc2803ba3fe6e569a116747c8039d9e907da",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 33,
        "deletions": 18,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -13,43 +13,58 @@ packages:\n - \"libboost-filesystem-dev\"\n - \"libboost-program-options-dev\"\n - \"libboost-thread-dev\"\n+- \"libboost-test-dev\"\n - \"libssl-dev\"\n - \"git-core\"\n - \"unzip\"\n - \"pkg-config\"\n - \"libpng12-dev\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n - \"miniupnpc-1.6.tar.gz\"\n - \"qrencode-3.2.0.tar.bz2\"\n+- \"protobuf-2.5.0.tar.bz2\"\n script: |\n-  INSTDIR=\"$HOME/install\"\n-  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  STAGING=\"$HOME/install\"\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n   #\n-  tar xzf miniupnpc-1.6.tar.gz\n+  tar xzfm miniupnpc-1.6.tar.gz\n   cd miniupnpc-1.6\n-  INSTALLPREFIX=$INSTDIR make $MAKEOPTS install\n+  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n   cd ..\n   #\n-  tar xjf qrencode-3.2.0.tar.bz2\n+  tar xjfm qrencode-3.2.0.tar.bz2\n   cd qrencode-3.2.0\n-  ./configure --prefix=$INSTDIR --enable-static --disable-shared\n+  sed -i 's/@LIBPTHREAD@//' libqrencode.pc.in\n+  ./configure --prefix=$STAGING --enable-static --disable-shared\n   make $MAKEOPTS install\n   cd ..\n   #\n-  cd bitcoin\n-  mkdir -p $OUTDIR/src\n-  git archive HEAD | tar -x -C $OUTDIR/src\n-  cp $OUTDIR/src/doc/README.md $OUTDIR\n-  cp $OUTDIR/src/COPYING $OUTDIR\n-  cd src\n-  make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$INSTDIR/include\" OPENSSL_LIB_PATH=\"$INSTDIR/lib\" $MAKEOPTS bitcoind USE_UPNP=0 DEBUGFLAGS=\n-  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n-  install -s bitcoind $OUTDIR/bin/$GBUILD_BITS\n+  tar xjfm protobuf-2.5.0.tar.bz2\n+  cd protobuf-2.5.0\n+  mkdir -p $STAGING/host/bin\n+  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared\n+  make $MAKEOPTS install\n   cd ..\n-  qmake INCLUDEPATH=\"$INSTDIR/include\" LIBS=\"-L$INSTDIR/lib\" RELEASE=1 USE_QRCODE=1\n+  #\n+  cd bitcoin\n+  export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n+  ./autogen.sh\n+  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  make dist\n+  mkdir -p distsrc\n+  cd distsrc\n+  tar --strip-components=1 -xf ../bitcoin-*.tar.*\n+  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n   make $MAKEOPTS\n-  install bitcoin-qt $OUTDIR/bin/$GBUILD_BITS\n+  make $MAKEOPTS install-strip\n+  mkdir -p $OUTDIR/src\n+  cp ../bitcoin-*.tar.* $OUTDIR/src"
      },
      {
        "sha": "35f261e1a24877f9a68fd517d387c4a5c7802312",
        "filename": "contrib/gitian-descriptors/protobuf-win32.yml",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/protobuf-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/protobuf-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/protobuf-win32.yml?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,42 @@\n+---\n+name: \"protobuf-win32\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"zip\"\n+- \"faketime\"\n+reference_datetime: \"2013-04-15 00:00:00\"\n+remotes: []\n+files:\n+- \"protobuf-2.5.0.tar.bz2\"\n+script: |\n+  #\n+  export TZ=UTC\n+  export INSTALLPREFIX=$OUTDIR/staging/deps\n+  export HOST=i686-w64-mingw32\n+  #\n+  #\n+  mkdir -p $INSTALLPREFIX\n+\n+  tar xjf protobuf-2.5.0.tar.bz2\n+  cd protobuf-2.5.0\n+  # First: build a native (linux) protoc\n+  ./configure --enable-shared=no --disable-dependency-tracking\n+  make\n+  mkdir -p $INSTALLPREFIX/host/bin\n+  cp src/protoc $INSTALLPREFIX/host/bin\n+  # Now recompile with the mingw cross-compiler:\n+  make distclean\n+  ./configure --prefix=$INSTALLPREFIX --enable-shared=no --disable-dependency-tracking --with-protoc=$INSTALLPREFIX/host/bin/protoc --host=$HOST CXXFLAGS=-frandom-seed=11\n+  make\n+  make install\n+  cd $INSTALLPREFIX\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  zip -r $OUTDIR/protobuf-win32-2.5.0-gitian-r3.zip include lib host\n+  unset LD_PRELOAD\n+  unset FAKETIME"
      },
      {
        "sha": "1fc6f861e05073929c65ad318cd5f4621b47e024",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "modified",
        "additions": 25,
        "deletions": 16,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,54 +1,63 @@\n ---\n name: \"qt\"\n suites:\n-- \"lucid\"\n+- \"precise\"\n architectures:\n-- \"i386\"\n+- \"amd64\"\n packages: \n-- \"mingw32\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n - \"zip\"\n+- \"unzip\"\n - \"faketime\"\n+- \"unzip\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n - \"qt-everywhere-opensource-src-4.8.3.tar.gz\"\n+- \"bitcoin-deps-win32-gitian-r9.zip\"\n script: |\n+  #\n+  HOST=i686-w64-mingw32\n   INSTDIR=\"$HOME/qt/\"\n+  #\n   mkdir $INSTDIR\n-  SRCDIR=\"$INSTDIR/src/\"\n-  mkdir $SRCDIR\n+  mkdir -p $INSTDIR/host/bin\n+  #\n+  # Need mingw-compiled openssl from bitcoin-deps:\n+  unzip bitcoin-deps-win32-gitian-r9.zip\n+  DEPSDIR=`pwd`\n   #\n   tar xzf qt-everywhere-opensource-src-4.8.3.tar.gz\n   cd qt-everywhere-opensource-src-4.8.3\n   sed 's/$TODAY/2011-01-30/' -i configure\n-  sed 's/i686-pc-mingw32-/i586-mingw32msvc-/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/i586-mingw32msvc/include/ -frandom-seed=qtbuild|' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed \"s/i686-pc-mingw32-/$HOST-/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/$HOST/include/ -frandom-seed=qtbuild|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n   sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n   sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_MOC\\t\\t= i586-mingw32msvc-moc/QMAKE_MOC\\t\\t= moc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_RCC\\t\\t= i586-mingw32msvc-rcc/QMAKE_RCC\\t\\t= rcc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_UIC\\t\\t= i586-mingw32msvc-uic/QMAKE_UIC\\t\\t= uic/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s/QMAKE_MOC\\t\\t= $HOST-moc/QMAKE_MOC\\t\\t= moc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s/QMAKE_RCC\\t\\t= $HOST-rcc/QMAKE_RCC\\t\\t= rcc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s/QMAKE_UIC\\t\\t= $HOST-uic/QMAKE_UIC\\t\\t= uic/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n   # ar adds timestamps to every object file included in the static library\n   # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n   # which somehow cannot be combined with other flags.\n   # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n-  sed --posix \"s|QMAKE_LIB\\t\\t= i586-mingw32msvc-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s|QMAKE_LIB\\t\\t= $HOST-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n   echo '#!/bin/bash' > $HOME/ar\n   echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n-  echo 'i586-mingw32msvc-ar \"$@\"' >> $HOME/ar\n+  echo \"$HOST-ar \\\"\\$@\\\"\" >> $HOME/ar\n   chmod +x $HOME/ar\n   #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n-  ./configure -prefix $INSTDIR -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs -no-feature-style-plastique -no-feature-style-cleanlooks -no-feature-style-motif -no-feature-style-cde -no-feature-style-windowsce -no-feature-style-windowsmobile -no-feature-style-s60\n+  # Compile static libraries, and use statically linked openssl (-openssl-linked):\n+  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTDIR -bindir $INSTDIR/host/bin -I $DEPSDIR/include  -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs -no-feature-style-plastique -no-feature-style-cleanlooks -no-feature-style-motif -no-feature-style-cde -no-feature-style-windowsce -no-feature-style-windowsmobile -no-feature-style-s60 -openssl-linked\n   find . -name *.prl | xargs -l sed 's|/\\.||' -i\n   find . -name *.prl | xargs -l sed 's|/$||' -i\n   make $MAKEOPTS install\n-  cp -a bin $SRCDIR/\n   cd $INSTDIR\n   find . -name *.prl | xargs -l sed 's|/$||' -i\n-  #sed 's|QMAKE_PRL_LIBS.*|QMAKE_PRL_LIBS = -lQtDeclarative -lQtScript -lQtSvg -lQtSql -lQtXmlPatterns -lQtGui -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtNetwork -lQtCore -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32|' -i imports/Qt/labs/particles/qmlparticlesplugin.prl\n \n   # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  zip -r $OUTDIR/qt-win32-4.8.3-gitian-r1.zip *\n+  zip -r $OUTDIR/qt-win32-4.8.3-gitian-r4.zip *"
      },
      {
        "sha": "ae0377a704b77b5dd66d62863525cae1f0f04db3",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -35,4 +35,12 @@ signers:\n     weight: 40\n     name: \"Wladimir J. van der Laan\"\n     key: laanwj\n+  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n+    weight: 40\n+    name: \"Warren Togami\"\n+    key: wtogami\n+  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n+    weight: 1\n+    name: michagogo\n+    key: michagogo\n minimum_weight: 120"
      },
      {
        "sha": "bc20629fa0384a3b9cc7810fcb3a2c85090afefa",
        "filename": "contrib/gitian-downloader/michagogo-key.pgp",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/michagogo-key.pgp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,27 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: SKS 1.1.0\n+\n+mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ9lfeXiEf\n+n72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0N4jBa9a1csFyCyrE\n+kPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXIT9HwJrpjRth3u4uKG968JBTE\n+yAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wMLXcQz8+dYsoskT3KRdkowLHxAfj1BNyNc\n+1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwAlKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEB\n+AAG0IU1pY2hhZ29nbyA8bWljaGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIb\n+AwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym\n+2f72z0t6a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n+7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl0alwjtQY\n+gyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM0wyNYRiUkIfUBvB8\n+sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw8NBw3yuYzWyPuoa4PR5ZmS9F\n+11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLkBDQRRnqieAQgAxZoEe6BBpBRQeal57jWB\n+atZ1BgwIdHSzbQA9yehDMVGRF3Zqfg0BycOv3g0UGhvRG4zWYXsnG1VKCPCtmP2duvB0Lnhr\n+iBCCb+nGWF6F3Vgmww+H5xzDVF9sDZaQ6lsW+zzVBLX1PYSN4Jhxpa+TohId4ldOromYOJ9q\n+21j24+OZuSyc78KQq1APqS3JfV48NnGo2kk43Vx5PYL10wqOrNmUt/90OJfsbs2adTBjcz0B\n+wEjCrMHnEiSpGIOlvCOVrFZT3fWvKEAnPzX8+wT8N9TEVUf0heRQDKml8ebi8IIVXRwdonC1\n+EbDrSZQnz/FtOoAe8kvjB+OSav6MQUYiQQARAQABiQEfBBgBAgAJBQJRnqieAhsMAAoJEILF\n+wAlijs8ME+MIAMuiAnJwWfZdo0rvpXcuexeo3+ZKSmYAfTVfFdpjADXmNcDEOFU1aVOLd7OB\n+Ni2LRjSTZD0FR27dT3+HRj2rLzD2hzGpoMIMqoGIsarNMQ+T3Ss1a3548E06/2QBXXHEj5r8\n+uf4W2NIHkP/ps3Wy9O/sWk+fCSKBuZ8kgyoZglXjr4Q2bVzFQIRFgQzxIIfx/bBLgYDIGa83\n+xNY96vNNqol3kLOlrWnVpUNUTfSKtWcyIurvfwYnxCESNKTv1sCjmXVy03phVKGpKHu7k9wO\n++DferdBvS2VYoWGxKDvj3OSGhzwVeVS3kd0wdS554x1X/xcIvHJxsudJDVo3GzMhA2o=\n+=YdfZ\n+-----END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "1ead2fddcb872f90917c4636c11e6134594c3875",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -35,4 +35,12 @@ signers:\n     weight: 40\n     name: \"Wladimir J. van der Laan\"\n     key: laanwj\n+  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n+    weight: 40\n+    name: \"Warren Togami\"\n+    key: wtogami\n+  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n+    weight: 1\n+    name: michagogo\n+    key: michagogo\n minimum_weight: 120"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-downloader/wtogami-key.pgp",
        "status": "added",
        "additions": 131,
        "deletions": 0,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/gitian-downloader/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/wtogami-key.pgp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,131 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.13 (GNU/Linux)\n+\n+mQQNBFHOzpUBIADYwJ1vC5npnYCthOtiSna/siS6tdol0OXc82QRgK4Q2YeFCkpN\n+Fw/T5YK34BLVGWDHPoafG2+r1nXIuMZnJIiGw6QVOL2sP9f7PrMmzck5KJPHD14Y\n+GRd9BPkhmt3dXzOCjhig7jI6hKEYayfJNUNs9nlZEvl4QWIBMmk+IyqQz3f1HMfl\n+/GkFDShBYF8Ny7Ktlx7AaXymajm4DCrTkbj5V2ZDqJgyQM549EoPSwXBQYrEjye3\n+g2viC8rUFRFWFjdnx7jFEb1uhx71YGuqiLxKihUW9pbSNK2cLweFazHSVmh+B/pz\n+fxHfUn+ijLSIAnprTmc/rq89un/iiPt0O/mspcCZ6hE5pFIyX+SC+9PrGz+bFSmw\n+PkMOZzG489G8k4t/uZsit6helkl0emg6JiXLTmS/oTuT7B9Z9/MeEhOXFcxUb0fr\n+2aZkEmH5d1oxSBis3D5nylmNJXOUSCpJAZ8E5Sr/5FbF9IPR+NSzosVacqCx5Dxj\n+vJ7HpZKn6pJfmwrghVXQv04NRTcxbHNmwd98cofBtWX8yBO8M2M+jZrU+BVDUbb/\n+A1oAyIbUUswBP768Oh11bELhCly774VwBqTojm2yodLGSyysx4zoa6qL7myfor0m\n+a+K29y8WH9XGmKGMdUOg+q9z+ODky9aToGvEo2eVhKIlJsk0aFAGy/8awy6qRIIj\n+UqLMq6XoFcYlE7SmnFUDDDPlBK/NkFFqySpFhKNRyt69Ea9kYXOxDnf/EnBwHn8m\n+PiFQpeZqgnmhyj8Nk1SSQBgUi07NyXdQ/WIYpWmqqqfHRVQgSE9C1920T1zg/E97\n+n5yYjI/gQQwq9wikkJmog6Ny7MSiwIU4LYV0pTUdI4//EJMId2FH8YEUfvG5ds+F\n+H/o/D4CAJ86KjspizfH8jEjhn0Rm/OtrxLz1rwA1gtF//P3TYNWw5qruL4stP3Rx\n+9Gve8Bm7oCBU73UT2ZJomEsWE3oqXinLRl3YCsjGDg/d3ySD6i0/BBROLIeXkh3M\n+M1CNCqREDGLA0vxQi1o7Zi7ZA4gWPSzvi/8KtSzY1iAQODxWUmOICRP7KQODWJmt\n+roTqhKgZ39wlR6eqkO8ZfAvRYsjvkL+EZFbbKbHxVJLhKchd2qHS+/Q3ov4SFzWY\n+/cE0ChOPDM587Jkps2bynKQAzQ6810FXmJc0ztrPeD3PEbuyY4KNJV8HGViRDJXi\n+wvs8eqfvTDGDPl4aLYVCKO9VqZ2OJvqhRhh71LQ2xRrX1LGnYLnUGCMuEQYKvMcI\n+TSssM/VAfeWAPJDklD0lVNJ7d9Z5ugvJHFc01SaaB47Aod2SPWp5DeiY4A8dcy2w\n+7f4Wx6FcdP1RXqaRZKCapBooN04vsvGllCshABEBAAG0KFdhcnJlbiBUb2dhbWkg\n+KDIwMTMpIDx3dG9nYW1pQGdtYWlsLmNvbT6JBDgEEwECACIFAlHOzpUCGwMGCwkI\n+BwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJELEXnrc0fcENY4Ef/23L9iC/39ekJ8Is\n+1IZdCoDD7/DgVaZqydDcy/ha9uaDFY4MQ0h9RZYo1axVBth/Yxzh1XnvitW8HFKn\n+DXn5wJI++KWpdLMUsTrc2iWsjAGgicmN5bkQvfTnRwn2pF17EUUEhZ8YyE3qMSVD\n+rDBECLAswT4Oiq9r9yw3VCFsRaxz5bhk9AAzWjam4H7mAfaEAOUvuX221v+KGSDM\n+UsGAAe+GjMPL8KnGgEbISlSUF1Ubcw3EChcqjf3BID2gMLkAnGAoxlCZSYievytg\n+71mcHyIf9yF861QrGcrCh6/objtRdt4IDUVwo9wapunRmYCdZux4ApD0Hit8nAsm\n+QtxftSK6FWBTOCIRoOQTjwE8qj9GYTIbUFppX66Dzh00td5NKkWz0PVze7YSk2hC\n+KCVBYyUYHgkQYVlYLZw7dBrXSXv7ph95vc93RDS031cU7tPOrthqnMmhtg1WAwzH\n+xc2v3az9Gsw1RyxBAOVpkB0AFODiEiVg46xqmxaBPXfQOg/buZA2l4gK4U/pVUZH\n+72lle2CbBw6FoSx40Y3GYZWB2uEdXBTNLlhX7q2Jvo8WdeTxEv5ACZsjI7K/wrzt\n+nmvCHefOmVf4tefkXy1MyEvBt2+Ek9bHmHDL1BSk/JdJzJtam2uaP5pGum/PwIUW\n+KBatmHKZUKwgOIml9btB413C4zSK3GQmC5Y/+TxYybACIdxTDqPSczVZ5Q+jSywX\n+shdOoLXDRyrYhT2sHjZ1W29B8ebokqwousF77EA94sqfQvDDnmFpvfq9+m0WYtOh\n+PFF/yxOtlbPJYX7mnC8+dUgobSA4AR5Yrclt+levgivIyNuBwzevHRDMreMZKl2J\n+uiOT8tkuu66fAwEltIowjjV7TBRfij4QLXl/zfFo8jKU8efL3xluXoRn7g+E5FZ3\n+19KTF/DWMcttfeTUYVnv0QTnstb1RGnVj7w8JMy90mKdMQFpl7IzHd2n6LrhEw1V\n+1AaPF7EcQBOlvsvlZdIFQrFyhKozKoGi3wRrl/bNdebxjIjPzfN9GgbiufFjz2d7\n+DMR9GFXfUMVxLncaqBBy1X7MV17ZF7K4uw6DET4fRoecb4N5mJVUxvYq4iZApnNP\n+npgGdmlcyPD6o3ynx/vkw78m13Gfgw8i2OaUY7xBdOyNVEvkJZBLaC2hw+TKLaZa\n+v0RExtAO0i0QO4Y1eo78Pl9jOpz0wkJ4KG0270l1Jza4IyaIhYRDWagWOfOp/cXU\n+cvKKiuJhLOsX1Bapz+O2Aor9+EwWRdPd3BzE2ABdmKHPwrKobNp75wrCpQ5mZifn\n+DSTJRMPQQJV3wGfB2sP0NE47U8w5CCmVK8gEuqYr6wBl/CCq5tjiRc63VM+to5V4\n+tVNTCJWIRgQQEQIABgUCUc7PqwAKCRBr3f6OVKKs8cYAAKCFCLJ5wc+iAVCFRevh\n+xTcJct0fiQCePHpY37CIeP8s9BH8GqCDftUqh8SIRgQQEQIABgUCUc7YwAAKCRDd\n+f+mrhdawLOVxAJ9Tjud26LtbM2mWcPj2eT7dhqgZrQCdGyMwMMVzp40lsCK44PrV\n++mpFO7KJAhwEEAECAAYFAlHO0BkACgkQw35HI5aSdvXfLw//c2zZxXg4bI2W7gkB\n+ZQJIOWnmPZfhrXQNeFuetyGoWTm4ZWxW362AdDGiQSGNNkXqeBPOitKOkRyZP/Z3\n+h1vwkLkwdFZyWXK00BzYBKfjThWV1BAnArQLewSiLlE7qSnsPEY6FW0PNv711cbL\n+lXSUP1/lW25Nx7L76GAF6sHreoIdglE8YH5y310JuFnqPa0uaJG+qDo8Mb+WkyLy\n+Q2A3Atws1tIB9vHsq2FCt9ACyAEA3AqtHR4uMFmIWpUYy77fJAZdzLZTWf0X5XYw\n+XILNPOl/I0iZrq3LYQAvJfIwjWAC/lm6uTLlvkIJHKyhcIT+RocjMV7bY9ezrC5i\n+Cag3gaOZ7USMt0h59KdmBaHHNa32n3PSHg9XWljqoWMRjuaRdcA7ofK0BHDJbHWE\n+cldKXC09laWOXbyNmJsfug/23vNE7fS/cAKSIgEWszEwHJCahB2i/HqOQF0DUGpq\n+3s5oIXs2xIuN0yT6yIIiQnTU/FkWDDu4D1OZNrDW6QG3cde0PRak/0fr4Kv4iB3E\n+CAzlsRBlWKNu/eE4QBx6cbvLqjriijhGAF+8Y1zvRKNKPr96hSsETfVytuKDTp6F\n+u7PAarrSATGXI92Hy3ThAZla0VOYUyeWPktqUMDNq90tIBZbwKpOMMqvJmZfgdOU\n+4ldDq1f5+2WhAt1aTL1GJVCuYcCJAhwEEAECAAYFAlHO3MQACgkQnSOpPExjO3Gi\n+jxAAsD+luooqqoz3A28ZxwfCDV+ovazQ4Bw6hVU0zKKZIz/2H4jwmLtLSHtucCRM\n+xRksZmnqf1p2nn+BKBXDInx9vI9HziMu7fWkzhuovAIf9+X/l6EYV1kQx0bIM1qU\n+BxXWPgGdrgSZZHl9Qff/BOBnrI8NJmVBDzOh3BSs0BrSR7aFbkSNbjk/JcP0JEyk\n+j6wDKQsop/Ca5AboLL0uQPgTvhxCu4VROKjhu7o3s7G3xlxTpimwYklDQuYFaGKj\n+ZNIGFq2orfIMBnj7ZEQVXzhWltlHcgPVP5TDfgd4pVUbyUB6ras7odJWWIHnUFmj\n+1l5bGidIwRXGFusE4iR8pR528LG2KxNDNQYipsKRY9m+wH+N7gbSgK8DxmocvieV\n+vcILFS5VrPLbEO2oC13NMljmvua3ovDB0CEh9rybaH+/oA+VDS2L3pkgATTju+Vx\n+6+mVdlvnrA4mJ5BoLHzrleKybS4ZkbtVBh1KOYmo95NgVifRvpVPB6hKzwqcjYFV\n+fVYBxTryTBRyd9MLsqpPKnGLBENTFvKDxRCK3iioNyVhXdS0z/UyF1C2hwNTpnjY\n+pGCu+Es3SILJg2TvQcwLM0OoYBA1bcONm2XbkTrdCpTOtQcSewQSkijREunx14iu\n+pvNSWeNmbjQU7gNYhvwcBgh90tWgNCfqTtSa5xSe46tmv0SJAhwEEAECAAYFAlHQ\n+1hgACgkQZwn/QC8Dr2hT/g/+OFUYPXfWo0+ILdxyTGP/v2mSw/X3dBCEYUqefWxD\n+umcwnksey+thEGFBlxbwpyOfAoTzZLUupaG6BacVgRUvv8bTne4v2H1d22aBXyjC\n+HMtQPhupn/giamu8q8hCPFrDp6inIAeFuz1GmQaH6xWO5eYBuYXQtxlvZLWBsuMT\n+74en4e3vjczxGmJu/nvM9ugcYsexA/zcN6SRGr7t2pV4ZElPzPBRyAzhYqhP1YlB\n+Rydz60OjgcWYEoJKWhJOfmFJ3ZoNGAz4TGoBkDIq4olCF0/cxqrtHN+ZnEOLwiZ7\n+4ZX90avcjEFtM+Wb5dBHNpni4ISoHcVI1X0ye6tuAOOt7RywbET/0oIW5iSNMgJ0\n+X4XYgOIQ2+a8yjGBjo9I57k0vp1mL6Ji/eaa0dlppcCGnzvSHss+O0qO212pg5Yk\n+GGfjX1y1ZeSP3ca9C2XyOGIVw2d2Iu7OyqAv/N81xt6ZgG3qixQC0nmgOmn7Kh2B\n+20W12KpLxKS8RQdHawGau3MBGKeqbfK6/eAzm22yD4/yJAoW4hKgm84z3FbKUN8w\n+ulYMK9hS2c4egpoDAOJ/QZLLXFWiyi7/sHZz69G2AweWCjOJh28Otg0cUHoLo7jw\n+oO/L0rCsOQMbUuIumYXBPHNnDwv1xfv2lT8tVzf6GksFJBAw0DybxOMTaOg45Lhz\n+jGS5BA0EUc7OlQEgAN6t+BV705uoCsdHtQBq/HKGGD5tBiOzy7Wd4nF/c6EWzET4\n+QUnmw6bDnqjxrk9MWniPDf1O9MvuB4qIY6g9kEjZ+VSQpWUZpZ5bMXCNHrfh9J2Q\n+6oLWqDmpeZv2OI0O9wxT62QaFei2qBtimSnBudLSCnvmU3S0h1PflmJsbj+tVcko\n+w2yOh2bjH1jkVAODHvEbxqyD6fiZhbfUVbPC49SBmXv8Gv0UywNSkP+iqJdwZAb0\n+XtjRx4WjZCkTwJAnbM4CJ63+5Hd83BtWZAZbGAh76XY/cSkDirXtXC+2LNUmP5W2\n+QY+ur5Bvz8LHaqJMXLAtePdkv5kpd+jXBrZieXUtqovxZaQTinl7C3L2TZd/ivxD\n+F3Rko9BFDuXXcdZrxBY5b3146IvSPp1y0WmHRxhAPb+RuiHQMt8K92nOhPyvtWXB\n+mWz0GnW9L6+CW4LKSPRSnE057hyxYNP/DcDd+fWFH+MmhU9noqHfJXSaLVzdI5PI\n+L8N44AndPIojnlxrxRs7Ik/nW6cTV9H3agg+24yyTdFkACbfIS6wWXOHeHuBzmO6\n+VI7pXOZJ9vZT7zI7M/hVci0R3putsGqgRfByRWWQ2DNeyrwUHexZNR/NYz1uhvA6\n+dBfKcuAwqxbdSrW/BxJ+iJWdkgYGCV67VLlO6S9sO33HgOanpPr5R9V1KsFVh4dN\n+j6BjZ4ALE5FPNW+iONnuXvtZbN2cBlBzMDeFC9oZoYCs1Pkmk8xUY2sAXPUt1R0G\n+D/miIb7ig1N52j9P6vv6fPs1ghmc/hGkhaXyjS54B5T33V6M9g+yba9mIgi8ZxZa\n+G+4rlFFKA4HS7wYYRJoqMvnc/qBYvoWLaPu3Xq6AXrJyuAaN+e3L8++cWbYHBXF9\n+qt+Q2RFL0FNiYUQuwkiaerysnm1a0H7ZtJ4zjl4ZgA1Ej7QcylTIbgFW3L7FnyMH\n+/5weLLN2wdjAtzjhRPYJLbV6V/gFbbpCpr+caDUaxSNizQuhhzVI5UrJegaHCCrx\n+DCiwWRFYzN5pqhtgzcaImK76DmPIk+Yrsum5KJZQeGfzKxvF0YnwxU0bxFzcDZJD\n+X2oCJn828Aw2j0nIlVlrrao0JMkvTBeZehO/11U68M2vKGEqrsQOb/BTXyLCeZwn\n+UGow1WvYfRxEZTrhhiYw94EH06gbqmKG1xsuV4LDI5z63/6ACcQW3orMbMymJCky\n+4HiNVZ7SNeGoYe380CJCwv6GN1opKTAWp84cr2KzhAzONGqNWNpUhznAXlI+GzCc\n+D2H330L1atMqZHjgpEfrkowvJ7WBM5KFKDfylaTKhYvfZcTOZs5OmRZSW3U54wRD\n+RMP0d2+k3vRililNhHIErHbjhYFc6zubVbBhvUMAEQEAAYkEHwQYAQIACQUCUc7O\n+lQIbDAAKCRCxF563NH3BDSX2IACugAdZqX+o/+pTkSrj+NEAcP0ZMci8w5nm/yOP\n+VlGyY6PXGuQKcBtvz3LWtIDdddMc/bD/zmZPwSzTx1MMOWc+gjR0azXe2RrdMHYk\n+8pb4X4Op2Nkasoc/8hNsRKaU24WUAQMqrRREIVBEOuHGl1A52Lj+aFB04rRHrkMl\n+AqjB5bwArPorIBdM417EEl4hjEZ9BpQxbUgBhTgGTZuc1u9PsKz1YvQ79YJIRmSH\n+n72Zaf35zY55eOQeoVBzGmFPq+/UFqtRNWA7jmRhHvMz/yR33B/RSxyTJuPb79zi\n+2mIZOrViG3X/UNL4qtOc1cKXQBi+FjHAMlGrCc+D5lnyOhEvqoEuvQic7V6C8Pvk\n+9q+jngn2Gs4pdJO8FOnwaC5xp/ZNE0v7x/KtAHyBA6iKcaepgoRQPSt1ONiHyfh1\n+iGgJn+Y6IHx4YDYKEY0UIzHhCfWUl8XZWcf4wLGEbGztkRbkCFqrsja5IeaO7umB\n+i6C4f95uSGjV7SiIMJOE8xo/m2g4VCnnmk7U996JwtBMKREMMqa3ABK4trfBL3Kq\n+P6I6ZTlA/C5svkVUVwWOMZau9kLDsxv8keGrFteZtfYa1KPAROFwNuBU82UW0KtX\n+QQbZoBKt1o3LhqEu+hXU3iKocYWSbBThH8u6vPNgSnW2Qcv3gcUU3jGmYeHrGiUO\n+SuEWxwlKUxCxBNfmz1FGswlwve1LsS3RTz/XB/L6Ubhq5L7FevrXz8152kuMqnpy\n+m93sXkL1eJVo07hH+otcRnMzy4vUar9z/N12t3hfTffx29PBKUCc2PKPVpLfJX2i\n+hieHk23fhLnptjc3lm9S+bHO3rqEWHqgNgNp9bpuwiLRsIy6qTtmC8jxXkGXvQrS\n++2Hv6+jRfDcqEAK3vqi1XL7Td81KRjnheBtsKpjS2PFatK3uTo6v1oRWJCdRCxg1\n+HT6a9KvZ+DNKcxlQISKAOLX72qpziaDl4CpBdQy4Zg2pr9oYkLdlfkaDK/OH4J3M\n+wJiVf/uNPPd+yy6xZXK0SPZHf+mf5Yt+Sim93hIbdS9AMdvHKB5n3DR27H+/okPj\n+w3J9z85hxgP5KspizQR6t77AWddPRy/l3BBZeb+HiaeKGBJeSNWXpkPXHkdjLW8U\n+QStzFR8r15FWJTmamIknjJ3XNbytMCpu8cj2ZVZdyjPcHEBL3WbNYYtauSuYmyUO\n+yXBaecM/KoTdvHiERU/mMuf7f1ftftCHehZoNaP+BeIbIud9IHIdrSQBCW+RC1Y1\n+8opDLMtnIOX3OnyCN38ELYcuNLMJxBqnQgi7MVDVcT1+BN/+lFQtG44+rPUkK+T1\n+Jk1/tIJqcyc1BfY6uFHFXWWnqQnjl0XpZo+/bMDxTVy8yND2\n+=icdI\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "1001f29065ff3018129abe49d13bfacb1ad0e899",
        "filename": "contrib/homebrew/bitcoin.qt.pro.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/contrib/homebrew/bitcoin.qt.pro.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/contrib/homebrew/bitcoin.qt.pro.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/homebrew/bitcoin.qt.pro.patch?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,32 +0,0 @@\n-diff --git a/bitcoin-qt.pro b/bitcoin-qt.pro\n-index d938c07..e1dd4ec 100644\n---- a/bitcoin-qt.pro\n-+++ b/bitcoin-qt.pro\n-@@ -353,7 +353,7 @@\n- }\n- \n- isEmpty(BDB_LIB_PATH) {\n--    macx:BDB_LIB_PATH = /opt/local/lib/db48\n-+    macx:BDB_LIB_PATH = /usr/local/opt/berkeley-db4/lib\n- }\n- \n- isEmpty(BDB_LIB_SUFFIX) {\n-@@ -361,15 +361,15 @@\n- }\n- \n- isEmpty(BDB_INCLUDE_PATH) {\n--    macx:BDB_INCLUDE_PATH = /opt/local/include/db48\n-+    macx:BDB_INCLUDE_PATH = /usr/local/opt/berkeley-db4/include\n- }\n- \n- isEmpty(BOOST_LIB_PATH) {\n--    macx:BOOST_LIB_PATH = /opt/local/lib\n-+    macx:BOOST_LIB_PATH = /usr/local/opt/boost/lib\n- }\n- \n- isEmpty(BOOST_INCLUDE_PATH) {\n--    macx:BOOST_INCLUDE_PATH = /opt/local/include\n-+    macx:BOOST_INCLUDE_PATH = /usr/local/opt/boost/include\n- }\n- \n- win32:DEFINES += WIN32"
      },
      {
        "sha": "340de0efdfe9bd9602c8eebc990e343946bf8f9d",
        "filename": "contrib/homebrew/makefile.osx.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 47,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/contrib/homebrew/makefile.osx.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/contrib/homebrew/makefile.osx.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/homebrew/makefile.osx.patch?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,47 +0,0 @@\n-diff --git a/src/makefile.osx b/src/makefile.osx\n-index 8b7c559..8a0560c 100644\n---- a/src/makefile.osx\n-+++ b/src/makefile.osx\n-@@ -7,17 +7,21 @@\n- # Originally by Laszlo Hanyecz (solar@heliacal.net)\n- \n- CXX=llvm-g++\n--DEPSDIR=/opt/local\n-+DEPSDIR=/usr/local\n-+DB4DIR=/usr/local/opt/berkeley-db4\n-+OPENSSLDIR=/usr/local/opt/openssl\n- \n- INCLUDEPATHS= \\\n-  -I\"$(CURDIR)\" \\\n-- -I\"$(CURDIR)\"/obj \\\n-+ -I\"$(CURDIR)/obj\" \\\n-  -I\"$(DEPSDIR)/include\" \\\n-- -I\"$(DEPSDIR)/include/db48\"\n-+ -I\"$(DB4DIR)/include\" \\\n-+ -I\"$(OPENSSLDIR)/include\"\n- \n- LIBPATHS= \\\n-  -L\"$(DEPSDIR)/lib\" \\\n-- -L\"$(DEPSDIR)/lib/db48\"\n-+ -L\"$(DB4DIR)/lib\" \\\n-+ -L\"$(OPENSSLDIR)/lib\"\n- \n- USE_UPNP:=1\n- USE_IPV6:=1\n-@@ -31,13 +35,13 @@ ifdef STATIC\n- TESTLIBS += \\\n-  $(DEPSDIR)/lib/libboost_unit_test_framework-mt.a\n- LIBS += \\\n-- $(DEPSDIR)/lib/db48/libdb_cxx-4.8.a \\\n-+ $(DB4DIR)/lib/libdb_cxx-4.8.a \\\n-  $(DEPSDIR)/lib/libboost_system-mt.a \\\n-  $(DEPSDIR)/lib/libboost_filesystem-mt.a \\\n-  $(DEPSDIR)/lib/libboost_program_options-mt.a \\\n-  $(DEPSDIR)/lib/libboost_thread-mt.a \\\n-- $(DEPSDIR)/lib/libssl.a \\\n-- $(DEPSDIR)/lib/libcrypto.a \\\n-+ $(OPENSSLDIR)/lib/libssl.a \\\n-+ $(OPENSSLDIR)/lib/libcrypto.a \\\n-  -lz\n- else\n- TESTLIBS += \\"
      },
      {
        "sha": "533be6cffaf5e1c9d0eb287ffbdcbb831dc6074f",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -651,6 +651,23 @@ elif config.sign:\n # ------------------------------------------------\n \n if config.dmg is not None:\n+\n+    #Patch in check_output for Python 2.6\n+    if \"check_output\" not in dir( subprocess ):\n+        def f(*popenargs, **kwargs):\n+            if 'stdout' in kwargs:\n+                raise ValueError('stdout argument not allowed, it will be overridden.')\n+            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n+            output, unused_err = process.communicate()\n+            retcode = process.poll()\n+            if retcode:\n+                cmd = kwargs.get(\"args\")\n+                if cmd is None:\n+                    cmd = popenargs[0]\n+                raise CalledProcessError(retcode, cmd)\n+            return output\n+        subprocess.check_output = f\n+\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if kwargs.has_key(\"capture_stdout\"):"
      },
      {
        "sha": "e7f62c4a3964d98741c036a0dde2983c556801c7",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "modified",
        "additions": 6,
        "deletions": 18,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,26 +1,14 @@\n-\n-macdeployqtplus works best on OS X Lion, for Snow Leopard you'd need to install\n-Python 2.7 and make it your default Python installation.\n-\n You will need the appscript package for the fancy disk image creation to work.\n Install it by invoking \"sudo easy_install appscript\".\n \n-This script should be invoked in the target directory like this:\n-$source_dir/contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n+For Snow Leopard (which uses Python 2.6), you will need the param_parser package.\n+Install it by invoking \"sudo easy_install argparse\"\n+\n+This script should not be run manually, instead, after building as usual:\n+\"make deploy\"\n \n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-You can also set up Qt Creator for invoking the script. For this, go to the\n-\"Projects\" tab on the left side, switch to \"Run Settings\" above and add a\n-deploy configuration. Next add a deploy step choosing \"Custom Process Step\".\n-Fill in the following.\n-\n-Enable custom process step: [x]\n-Command: %{sourceDir}/contrib/macdeploy/macdeployqtplus\n-Working directory: %{buildDir}\n-Command arguments: Bitcoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n-\n-After that you can start the deployment process through the menu with\n-Build -> Deploy Project \"bitcoin-qt\"\n+When finished, it will produce Bitcoin-Qt.dmg.\n "
      },
      {
        "sha": "9e5aa404c27aaa16152de579529c9352d26485ba",
        "filename": "contrib/misc/example-linearize.cfg",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/misc/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/misc/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/misc/example-linearize.cfg?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,12 @@\n+\n+# bitcoind RPC settings\n+rpcuser=someuser\n+rpcpass=somepassword\n+host=127.0.0.1\n+port=8332\n+\n+# bootstrap.dat settings\n+netmagic=f9beb4d9\n+max_height=250000\n+output=bootstrap.dat\n+"
      },
      {
        "sha": "2d8509f83c1c30a3368ae8432d472a22ba340201",
        "filename": "contrib/misc/linearize.py",
        "status": "added",
        "additions": 129,
        "deletions": 0,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/misc/linearize.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/contrib/misc/linearize.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/misc/linearize.py?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,129 @@\n+#!/usr/bin/python\n+#\n+# linearize.py:  Construct a linear, no-fork, best version of the blockchain.\n+#\n+#\n+# Copyright (c) 2013 The Bitcoin developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+import json\n+import struct\n+import re\n+import base64\n+import httplib\n+import sys\n+\n+ERR_SLEEP = 15\n+MAX_NONCE = 1000000L\n+\n+settings = {}\n+\n+class BitcoinRPC:\n+\tOBJID = 1\n+\n+\tdef __init__(self, host, port, username, password):\n+\t\tauthpair = \"%s:%s\" % (username, password)\n+\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n+\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n+\tdef rpc(self, method, params=None):\n+\t\tself.OBJID += 1\n+\t\tobj = { 'version' : '1.1',\n+\t\t\t'method' : method,\n+\t\t\t'id' : self.OBJID }\n+\t\tif params is None:\n+\t\t\tobj['params'] = []\n+\t\telse:\n+\t\t\tobj['params'] = params\n+\t\tself.conn.request('POST', '/', json.dumps(obj),\n+\t\t\t{ 'Authorization' : self.authhdr,\n+\t\t\t  'Content-type' : 'application/json' })\n+\n+\t\tresp = self.conn.getresponse()\n+\t\tif resp is None:\n+\t\t\tprint \"JSON-RPC: no response\"\n+\t\t\treturn None\n+\n+\t\tbody = resp.read()\n+\t\tresp_obj = json.loads(body)\n+\t\tif resp_obj is None:\n+\t\t\tprint \"JSON-RPC: cannot JSON-decode body\"\n+\t\t\treturn None\n+\t\tif 'error' in resp_obj and resp_obj['error'] != None:\n+\t\t\treturn resp_obj['error']\n+\t\tif 'result' not in resp_obj:\n+\t\t\tprint \"JSON-RPC: no result in object\"\n+\t\t\treturn None\n+\n+\t\treturn resp_obj['result']\n+\tdef getblock(self, hash, verbose=True):\n+\t\treturn self.rpc('getblock', [hash, verbose])\n+\tdef getblockhash(self, index):\n+\t\treturn self.rpc('getblockhash', [index])\n+\n+def getblock(rpc, settings, n):\n+\thash = rpc.getblockhash(n)\n+\thexdata = rpc.getblock(hash, False)\n+\tdata = hexdata.decode('hex')\n+\n+\treturn data\n+\n+def get_blocks(settings):\n+\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\t\t\t settings['rpcuser'], settings['rpcpass'])\n+\n+\toutf = open(settings['output'], 'wb')\n+\n+\tfor height in xrange(settings['max_height']+1):\n+\t\tdata = getblock(rpc, settings, height)\n+\n+\t\touthdr = settings['netmagic']\n+\t\touthdr += struct.pack(\"<i\", len(data))\n+\n+\t\toutf.write(outhdr)\n+\t\toutf.write(data)\n+\n+\t\tif (height % 1000) == 0:\n+\t\t\tsys.stdout.write(\"Wrote block \" + str(height) + \"\\n\")\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint \"Usage: linearize.py CONFIG-FILE\"\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'netmagic' not in settings:\n+\t\tsettings['netmagic'] = 'f9beb4d9'\n+\tif 'output' not in settings:\n+\t\tsettings['output'] = 'bootstrap.dat'\n+\tif 'host' not in settings:\n+\t\tsettings['host'] = '127.0.0.1'\n+\tif 'port' not in settings:\n+\t\tsettings['port'] = 8332\n+\tif 'max_height' not in settings:\n+\t\tsettings['max_height'] = 250000\n+\tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n+\t\tprint \"Missing username and/or password in cfg file\"\n+\t\tsys.exit(1)\n+\n+\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n+\tsettings['port'] = int(settings['port'])\n+\tsettings['max_height'] = int(settings['max_height'])\n+\n+\tget_blocks(settings)\n+\n+"
      },
      {
        "sha": "f82b102e2aa105174f57554b4a387e32b95f7e2a",
        "filename": "contrib/test-patches/bitcoind-comparison.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 196,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/contrib/test-patches/bitcoind-comparison.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/contrib/test-patches/bitcoind-comparison.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/bitcoind-comparison.patch?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,196 +0,0 @@\n-diff --git a/contrib/test-patches/bitcoind-comparison.patch b/contrib/test-patches/bitcoind-comparison.patch\n-index 04a8618..519429a 100644\n---- a/src/main.cpp\n-+++ b/src/main.cpp\n-@@ -31,8 +31,8 @@ CTxMemPool mempool;\n- \n- map<uint256, CBlockIndex*> mapBlockIndex;\n- std::vector<CBlockIndex*> vBlockIndexByHeight;\n--uint256 hashGenesisBlock(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\");\n--static CBigNum bnProofOfWorkLimit(~uint256(0) >> 32);\n-+uint256 hashGenesisBlock(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\");\n-+static CBigNum bnProofOfWorkLimit(~uint256(0) >> 1);\n- CBlockIndex* pindexGenesisBlock = NULL;\n- int nBestHeight = -1;\n- uint256 nBestChainWork = 0;\n-@@ -1055,7 +1055,7 @@ int64 static GetBlockValue(int nHeight, int64 nFees)\n-     int64 nSubsidy = 50 * COIN;\n- \n-     // Subsidy is cut in half every 210000 blocks, which will occur approximately every 4 years\n--    nSubsidy >>= (nHeight / 210000);\n-+    nSubsidy >>= (nHeight / 150);\n- \n-     return nSubsidy + nFees;\n- }\n-@@ -2736,9 +2736,9 @@ bool InitBlockIndex() {\n-         block.hashPrevBlock = 0;\n-         block.hashMerkleRoot = block.BuildMerkleTree();\n-         block.nVersion = 1;\n--        block.nTime    = 1231006505;\n--        block.nBits    = 0x1d00ffff;\n--        block.nNonce   = 2083236893;\n-+        block.nTime    = 1296688602;\n-+        block.nBits    = 0x207fffff;\n-+        block.nNonce   = 2;\n- \n-         if (fTestNet)\n-         {\n-@@ -3024,7 +3024,7 @@ bool static AlreadyHave(const CInv& inv)\n- // The message start string is designed to be unlikely to occur in normal data.\n- // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n- // a large 4-byte int at any alignment.\n--unsigned char pchMessageStart[4] = { 0xf9, 0xbe, 0xb4, 0xd9 };\n-+unsigned char pchMessageStart[4] = { 0xfa, 0xbf, 0xb5, 0xda };\n- \n- \n- void static ProcessGetData(CNode* pfrom)\n-diff --git a/src/test/miner_tests.cpp b/src/test/miner_tests.cpp\n-index af28465..ee9a4db 100644\n---- a/src/test/miner_tests.cpp\n-+++ b/src/test/miner_tests.cpp\n-@@ -15,34 +15,117 @@ struct {\n-     unsigned char extranonce;\n-     unsigned int nonce;\n- } blockinfo[] = {\n--    {4, 0xa4a3e223}, {2, 0x15c32f9e}, {1, 0x0375b547}, {1, 0x7004a8a5},\n--    {2, 0xce440296}, {2, 0x52cfe198}, {1, 0x77a72cd0}, {2, 0xbb5d6f84},\n--    {2, 0x83f30c2c}, {1, 0x48a73d5b}, {1, 0xef7dcd01}, {2, 0x6809c6c4},\n--    {2, 0x0883ab3c}, {1, 0x087bbbe2}, {2, 0x2104a814}, {2, 0xdffb6daa},\n--    {1, 0xee8a0a08}, {2, 0xba4237c1}, {1, 0xa70349dc}, {1, 0x344722bb},\n--    {3, 0xd6294733}, {2, 0xec9f5c94}, {2, 0xca2fbc28}, {1, 0x6ba4f406},\n--    {2, 0x015d4532}, {1, 0x6e119b7c}, {2, 0x43e8f314}, {2, 0x27962f38},\n--    {2, 0xb571b51b}, {2, 0xb36bee23}, {2, 0xd17924a8}, {2, 0x6bc212d9},\n--    {1, 0x630d4948}, {2, 0x9a4c4ebb}, {2, 0x554be537}, {1, 0xd63ddfc7},\n--    {2, 0xa10acc11}, {1, 0x759a8363}, {2, 0xfb73090d}, {1, 0xe82c6a34},\n--    {1, 0xe33e92d7}, {3, 0x658ef5cb}, {2, 0xba32ff22}, {5, 0x0227a10c},\n--    {1, 0xa9a70155}, {5, 0xd096d809}, {1, 0x37176174}, {1, 0x830b8d0f},\n--    {1, 0xc6e3910e}, {2, 0x823f3ca8}, {1, 0x99850849}, {1, 0x7521fb81},\n--    {1, 0xaacaabab}, {1, 0xd645a2eb}, {5, 0x7aea1781}, {5, 0x9d6e4b78},\n--    {1, 0x4ce90fd8}, {1, 0xabdc832d}, {6, 0x4a34f32a}, {2, 0xf2524c1c},\n--    {2, 0x1bbeb08a}, {1, 0xad47f480}, {1, 0x9f026aeb}, {1, 0x15a95049},\n--    {2, 0xd1cb95b2}, {2, 0xf84bbda5}, {1, 0x0fa62cd1}, {1, 0xe05f9169},\n--    {1, 0x78d194a9}, {5, 0x3e38147b}, {5, 0x737ba0d4}, {1, 0x63378e10},\n--    {1, 0x6d5f91cf}, {2, 0x88612eb8}, {2, 0xe9639484}, {1, 0xb7fabc9d},\n--    {2, 0x19b01592}, {1, 0x5a90dd31}, {2, 0x5bd7e028}, {2, 0x94d00323},\n--    {1, 0xa9b9c01a}, {1, 0x3a40de61}, {1, 0x56e7eec7}, {5, 0x859f7ef6},\n--    {1, 0xfd8e5630}, {1, 0x2b0c9f7f}, {1, 0xba700e26}, {1, 0x7170a408},\n--    {1, 0x70de86a8}, {1, 0x74d64cd5}, {1, 0x49e738a1}, {2, 0x6910b602},\n--    {0, 0x643c565f}, {1, 0x54264b3f}, {2, 0x97ea6396}, {2, 0x55174459},\n--    {2, 0x03e8779a}, {1, 0x98f34d8f}, {1, 0xc07b2b07}, {1, 0xdfe29668},\n--    {1, 0x3141c7c1}, {1, 0xb3b595f4}, {1, 0x735abf08}, {5, 0x623bfbce},\n--    {2, 0xd351e722}, {1, 0xf4ca48c9}, {1, 0x5b19c670}, {1, 0xa164bf0e},\n--    {2, 0xbbbeb305}, {2, 0xfe1c810a},\n-+{4, 2762203683},\n-+{2, 365113248},\n-+{1, 58045772},\n-+{1, 1879353512},\n-+{2, 3460563607},\n-+{2, 1389355416},\n-+{1, 2007444690},\n-+{2, 3143462790},\n-+{2, 2213743660},\n-+{1, 1218919771},\n-+{1, 4017999107},\n-+{2, 1745471173},\n-+{2, 142846780},\n-+{1, 142326754},\n-+{2, 553953301},\n-+{2, 3757796778},\n-+{1, 4002023946},\n-+{2, 3124901826},\n-+{1, 2802010589},\n-+{1, 877077181},\n-+{3, 3593029427},\n-+{2, 3969866902},\n-+{2, 3392125996},\n-+{1, 1805972490},\n-+{2, 22889779},\n-+{1, 1846647676},\n-+{2, 1139340052},\n-+{2, 664153912},\n-+{2, 3044128027},\n-+{2, 3010194979},\n-+{2, 3514377385},\n-+{2, 1807880922},\n-+{1, 1661815113},\n-+{2, 2588692156},\n-+{2, 1431037239},\n-+{1, 3594379210},\n-+{2, 2701839377},\n-+{1, 1973060452},\n-+{2, 4218620174},\n-+{1, 3895224884},\n-+{1, 3812528857},\n-+{3, 1703867851},\n-+{2, 3123904294},\n-+{5, 36151564},\n-+{1, 2846294357},\n-+{5, 3499546633},\n-+{1, 924279160},\n-+{1, 2198572304},\n-+{1, 3336802574},\n-+{2, 2185182379},\n-+{1, 2575632458},\n-+{1, 1965161345},\n-+{1, 2865408940},\n-+{1, 3594887915},\n-+{5, 2062161796},\n-+{5, 2641251194},\n-+{1, 1290342362},\n-+{1, 2883355438},\n-+{6, 1244984107},\n-+{2, 4065479712},\n-+{2, 465481866},\n-+{1, 2907174016},\n-+{1, 2667735788},\n-+{1, 363417673},\n-+{2, 3519780275},\n-+{2, 4165713317},\n-+{1, 262548689},\n-+{1, 3764359529},\n-+{1, 2027001003},\n-+{5, 1043862655},\n-+{5, 1937481940},\n-+{1, 1664585233},\n-+{1, 1834979792},\n-+{2, 2288070330},\n-+{2, 3915617412},\n-+{1, 3086662813},\n-+{2, 430970259},\n-+{1, 1519443249},\n-+{2, 1540874280},\n-+{2, 2496660261},\n-+{1, 2847522842},\n-+{1, 977329763},\n-+{1, 1458040519},\n-+{5, 2241822454},\n-+{1, 4253963824},\n-+{1, 722247551},\n-+{1, 3127905834},\n-+{1, 1903207432},\n-+{1, 1893631657},\n-+{1, 1960201429},\n-+{1, 1239890082},\n-+{2, 1762702850},\n-+{0, 1681675873},\n-+{1, 1411795775},\n-+{2, 2548720534},\n-+{2, 1427588186},\n-+{2, 65566621},\n-+{1, 2566081936},\n-+{1, 3229297415},\n-+{1, 3756168812},\n-+{1, 826394561},\n-+{1, 3015022068},\n-+{1, 1935326986},\n-+{5, 1648098256},\n-+{2, 3545360164},\n-+{1, 4106897609},\n-+{1, 1528415857},\n-+{1, 2707734286},\n-+{2, 3149837061},\n-+{2, 4263280906},\n-+\n- };\n- \n- // NOTE: These tests rely on CreateNewBlock doing its own self-validation!"
      },
      {
        "sha": "1238033fb7e0652fb80be21660f7d74fc43053a0",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 35,
        "deletions": 11,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,10 +1,9 @@\n-Bitcoin 0.8.2 BETA\n+Bitcoin 0.8.2 BETA \n ====================\n \n Copyright (c) 2009-2013 Bitcoin Developers\n \n-Distributed under the MIT/X11 software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+Distributed under the [MIT/X11 software license](http://www.opensource.org/licenses/mit-license.php).\n This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n \n@@ -19,8 +18,13 @@ with each other, with the help of a P2P network to check for double-spending.\n \n Setup\n ---------------------\n+[Bitcoin-Qt](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions; depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+\n+### Unix\n+\n You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n-\t`sudo apt-get install libqtgui4`\n+\n+\tsudo apt-get install libqtgui4\n \n Unpack the files into a directory and run:\n \n@@ -29,18 +33,38 @@ Unpack the files into a directory and run:\n - bin/64/bitcoin-qt (GUI, 64-bit)\n - bin/64/bitcoind (headless, 64-bit)\n \n-See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n-for help and more information.\n \n \n-Other Pages\n+### Windows\n+\n+Unpack the files into a directory and run bitcoin-qt.exe.\n+\n+### Need Help?\n+\n+* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+for help and more information.\n+* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n+* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums.\n+\n+Building\n ---------------------\n-- [Unix Build Notes](build-unix.md)\n+- [Bitcoin-Qt Readme](readme-qt.md)\n - [OSX Build Notes](build-osx.md)\n+- [Unix Build Notes](build-unix.md)\n - [Windows Build Notes](build-msw.md)\n+\n+Development\n+---------------------\n - [Coding Guidelines](coding.md)\n-- [Release Process](release-process.md)\n-- [Release Notes](release-notes.md)\n - [Multiwallet Qt Development](multiwallet-qt.md)\n+- [Release Notes](release-notes.md)\n+- [Release Process](release-process.md)\n+- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Translation Process](translation_process.md)\n - [Unit Tests](unit-tests.md)\n-- [Translation Process](translation_process.md)\n\\ No newline at end of file\n+\n+Other Pages\n+---------------------\n+- [Assets Attribution](assets-attribution.md)\n+- [Files](files.md)\n+- [Tor Support](tor.md)\n\\ No newline at end of file"
      },
      {
        "sha": "386e3b54666ccd1e2262ae2d28d96bcb9fcccbc6",
        "filename": "doc/Tor.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/doc/Tor.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/doc/Tor.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Tor.txt?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,92 +0,0 @@\n-TOR SUPPORT IN BITCOIN\n-======================\n-\n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n-\n-The following directions assume you have a Tor proxy running on port 9050. Many distributions\n-default to having a SOCKS proxy listening on port 9050, but others may not.\n-In particular, the Tor Browser Bundle defaults to listening on a random port. See\n-https://www.torproject.org/docs/faq.html.en#TBBSocksPort for how to properly\n-configure Tor.\n-\n-\n-1. Run bitcoin behind a Tor proxy\n----------------------------------\n-\n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n-outgoing connections be anonimized, but more is possible.\n-\n--socks=5        SOCKS5 supports connecting-to-hostname, which can be used instead\n-                of doing a (leaking) local DNS lookup. SOCKS5 is the default,\n-                but SOCKS4 does not support this. (SOCKS4a does, but isn't\n-                implemented).\n-\n--proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n-                server will be used to try to reach .onion addresses as well.\n-\n--tor=ip:port    Set the proxy server to use for tor hidden services. You do not\n-                need to set this if it's the same as -proxy. You can use -notor\n-                to explicitly disable access to hidden service.\n-\n--listen         When using -proxy, listening is disabled by default. If you want\n-                to run a hidden service (see next section), you'll need to enable\n-                it explicitly.\n-\n--connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n--addnode=X      of IP addresses or hostnames in these parameters. It requires\n--seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n-                other P2P nodes.\n-\n-In a typical situation, this suffices to run behind a Tor proxy:\n-\n-  ./bitcoin -proxy=127.0.0.1:9050\n-\n-\n-2. Run a bitcoin hidden server\n-------------------------------\n-\n-If you configure your Tor system accordingly, it is possible to make your node also\n-reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n-config file):\n-\n-  HiddenServiceDir /var/lib/tor/bitcoin-service/\n-  HiddenServicePort 8333 127.0.0.1:8333\n-\n-The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n-\n--externalip=X   You can tell bitcoin about its publicly reachable address using\n-                this option, and this can be a .onion address. Given the above\n-                configuration, you can find your onion address in\n-                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n-                preference for your node to advertize itself with, for connections\n-                coming from unroutable addresses (such as 127.0.0.1, where the\n-                Tor proxy typically runs).\n-\n--listen         You'll need to enable listening for incoming connections, as this\n-                is off by default behind a proxy.\n-\n--discover       When -externalip is specified, no attempt is made to discover local\n-                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n-                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n-                other addresses using -externalip, or explicitly enable -discover.\n-                Note that both addresses of a dual-stack system may be easily\n-                linkable using traffic analysis.\n-\n-In a typical situation, where you're only reachable via Tor, this should suffice:\n-\n-  ./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n-\n-(obviously, replace the Onion address with your own). If you don't care too much\n-about hiding your node, and want to be reachable on IPv4 as well, additionally\n-specify:\n-\n-  ./bitcoind ... -discover\n-\n-and open port 8333 on your firewall (or use -upnp).\n-\n-If you only want to use Tor to reach onion addresses, but not use it as a proxy\n-for normal IPv4/IPv6 communication, use:\n-\n-  ./bitcoin -tor=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n-"
      },
      {
        "sha": "e85e74522df2ca149a9ab4e1e43152b99df1a34d",
        "filename": "doc/assets-attribution.md",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,104 @@\n+The following is a list of assets used in the bitcoin source and their proper attribution.\n+\n+[Wladimir van der Laan](https://github.com/laanwj)\n+-----------------------\n+#### Info\n+* License: MIT\n+### Assets Used\n+\n+\t\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n+\t\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n+\t\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n+\t\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n+\t\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n+\n+[David Vignoni](www.icon-king.com)\n+-----------------------\n+\n+### Info\n+* Icon Pack: NUVOLA ICON THEME for KDE 3.x\n+* Designer: David Vignoni (david@icon-king.com)\n+* License: LGPL\n+* Site: [http://www.icon-king.com/projects/nuvola/](http://www.icon-king.com/projects/nuvola/)\n+\n+### Assets Used\n+\t  src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n+      src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n+      src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n+      src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n+      src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n+\n+schollidesign\n+-----------------------\n+\n+### Info\n+* Icon Pack: Human-O2\n+* Designer: schollidesign\n+* License: GNU/GPL\n+* Site: [http://findicons.com/icon/93743/blocks_gnome_netstatus_0](http://findicons.com/icon/93743/blocks_gnome_netstatus_0)\n+\n+### Assets Used\n+\t src/qt/res/icons/connect*.png\n+\n+md2k7\n+-----------------------\n+\n+### Info\n+* Designer: md2k7\n+* Site: https://bitcointalk.org/index.php?topic=15276.0\n+* License: You are free to do with these icons as you wish, including selling,\n+ copying, modifying etc.\n+* License: MIT\n+\n+### Assets Used\n+\tsrc/qt/res/icons/transaction*.png\n+\n+[Everaldo.com](http://www.everaldo.com)\n+-----------------------\n+\n+### Info\n+* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n+* Icon Pack: Crystal SVG\n+* License: LGPL\n+\n+### Assets Used\n+\tsrc/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n+    src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n+    src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n+    src/qt/res/icons/remove.png (edited)\n+\n+Everaldo (Everaldo Coelho)\n+-----------------------\n+\n+### Info\n+* Icon Pack: Kids\n+* Designer: Everaldo (Everaldo Coelho)\n+* License: GNU/GPL \n+* Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n+### Assets Used\n+\tscripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n+\n+[Vignoni David](http://www.oxygen-icons.org/)\n+-----------------------\n+\n+### Info\n+* Designer: Vignoni David\n+* Site: http://www.oxygen-icons.org/\n+* License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n+\n+### Assets Used\n+\tsrc/qt/res/icons/debugwindow.png\n+\n+Jonas Schnelli\n+-----------------------\n+\n+### Info\n+* Designer: Jonas Schnelli (based on the original bitcoin logo from Bitboy)\n+* License: MIT\n+\n+### Assets Used\n+\tsrc/qt/res/icons/bitcoin.icns, src/qt/res/src/bitcoin.svg,\n+\tsrc/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n+\tsrc/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n+\tsrc/qt/res/icons/toolbar.png, src/qt/res/icons/toolbar_testnet.png,\n+\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n\\ No newline at end of file"
      },
      {
        "sha": "2069c5d6e0418bf0a3e3175f57f41a4815bd8dac",
        "filename": "doc/assets-attribution.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/doc/assets-attribution.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/doc/assets-attribution.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.txt?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,58 +0,0 @@\n-Icon: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-      src/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n-      src/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n-      src/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n-      src/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n-Designer: Wladimir van der Laan\n-License: MIT\n-\n-Icon: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-      src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-      src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-      src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-      src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Icon Pack: NUVOLA ICON THEME for KDE 3.x\n-Designer: David Vignoni (david@icon-king.com)\n-          ICON KING - www.icon-king.com\n-License: LGPL\n-Site: http://www.icon-king.com/projects/nuvola/\n-\n-Icon: src/qt/res/icons/connect*.png\n-Icon Pack: Human-O2\n-Designer: schollidesign\n-License: GNU/GPL\n-Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Icon: src/qt/res/icons/transaction*.png\n-Designer: md2k7\n-Site: https://bitcointalk.org/index.php?topic=15276.0\n-License: You are free to do with these icons as you wish, including selling,\n- copying, modifying etc.\n-License: MIT\n-\n-Icon: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png (edited)\n-Designer: http://www.everaldo.com\n-Icon Pack: Crystal SVG\n-License: LGPL\n-\n-Icon:  scripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n-Icon Pack: Kids\n-Designer: Everaldo (Everaldo Coelho)\n-License: GNU/GPL \n-Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Icon: src/qt/res/icons/debugwindow.png\n-Designer: Vignoni David\n-Site: http://www.oxygen-icons.org/\n-License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n-\n-Icon: src/qt/res/icons/bitcoin.icns, src/qt/res/src/bitcoin.svg,\n-      src/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n-      src/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n-      src/qt/res/icons/toolbar.png, src/qt/res/icons/toolbar_testnet.png,\n-      src/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n-Designer: Jonas Schnelli (based on the original bitcoin logo from Bitboy)\n-License: MIT"
      },
      {
        "sha": "d348ad7cc3e48ac827dc48b3cea6d6e31fdf38cd",
        "filename": "doc/build-msw.md",
        "status": "modified",
        "additions": 9,
        "deletions": 16,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,17 +1,9 @@\n-Copyright (c) 2009-2013 Bitcoin Developers\n-\n-Distributed under the MIT/X11 software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n-cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n-\n-\n-See readme-qt.rst for instructions on building Bitcoin-Qt, the\n-graphical user interface.\n-\n WINDOWS BUILD NOTES\n ===================\n \n+See [readme-qt.md](readme-qt.md) for instructions on building Bitcoin-Qt, the\n+graphical user interface.\n+\n Compilers Supported\n -------------------\n TODO: What works?\n@@ -22,11 +14,12 @@ Dependencies\n ------------\n Libraries you need to download separately and build:\n \n-                default path               download\n-OpenSSL         \\openssl-1.0.1c-mgw        http://www.openssl.org/source/\n-Berkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n-Boost           \\boost-1.50.0-mgw          http://www.boost.org/users/download/\n-miniupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n+\tname            default path               download\n+\t--------------------------------------------------------------------------------------------------------------------\n+\tOpenSSL         \\openssl-1.0.1c-mgw        http://www.openssl.org/source/\n+\tBerkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n+\tBoost           \\boost-1.50.0-mgw          http://www.boost.org/users/download/\n+\tminiupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n \n Their licenses:\n "
      },
      {
        "sha": "271f8f55bda627ed26cc2d09c071a47b955203cb",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 5,
        "deletions": 28,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,38 +1,15 @@\n-Mac OS X bitcoind build instructions\n+Mac OS X Build Instructions and Notes\n ====================================\n-\n-Authors\n--------\n-\n-* Laszlo Hanyecz <solar@heliacal.net>\n-* Douglas Huff <dhuff@jrbobdobbs.org>\n-* Colin Dean <cad@cad.cx>\n-* Gavin Andresen <gavinandresen@gmail.com>\n-\n-License\n--------\n-\n-Copyright (c) 2009-2012 Bitcoin Developers\n-\n-Distributed under the MIT/X11 software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-This product includes software developed by the OpenSSL Project for use in\n-the OpenSSL Toolkit (http://www.openssl.org/).\n-\n-This product includes cryptographic software written by\n-Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.\n+This guide will show you how to build bitcoind(headless client) for OSX.\n \n Notes\n -----\n \n-See `doc/readme-qt.rst` for instructions on building Bitcoin-Qt, the\n+* See [readme-qt.md](readme-qt.md) for instructions on building Bitcoin-Qt, the\n graphical user interface.\n-\n-Tested on OS X 10.5 through 10.8 on Intel processors only. PPC is not\n+* Tested on OS X 10.5 through 10.8 on Intel processors only. PPC is not\n supported because it is big-endian.\n-\n-All of the commands should be executed in a Terminal application. The\n+* All of the commands should be executed in a Terminal application. The\n built-in one is located in `/Applications/Utilities`.\n \n Preparation"
      },
      {
        "sha": "579341d2d9cb859a0f0897f246e7ebdbfe102788",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 19,
        "deletions": 36,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,20 +1,16 @@\n-Copyright (c) 2009-2013 Bitcoin Developers\n-\n-Distributed under the MIT/X11 software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n-cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n-\n UNIX BUILD NOTES\n ====================\n+Some notes on how to build Bitcoin in Unix. \n \n To Build\n ---------------------\n \n-\tcd src/\n-\tmake -f makefile.unix\t\t# Headless bitcoin\n+\t./autogen.sh\n+\t./configure\n+\tmake\n \n-See readme-qt.rst for instructions on building Bitcoin-Qt, the graphical user interface.\n+This will build bitcoin-qt as well if the dependencies are met.\n+See [readme-qt.md](readme-qt.md) for more information.\n \n Dependencies\n ---------------------\n@@ -28,15 +24,15 @@ Dependencies\n \n [miniupnpc](http://miniupnp.free.fr/) may be used for UPnP port mapping.  It can be downloaded from [here](\n http://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n-turned off by default.  Set USE_UPNP to a different value to control this:\n+turned off by default.  See the configure options for upnp behavior desired:\n \n-\tUSE_UPNP=     No UPnP support miniupnp not required\n-\tUSE_UPNP=0    (the default) UPnP support turned off by default at runtime\n-\tUSE_UPNP=1    UPnP support turned on by default at runtime\n+\t--with-miniupnpc         No UPnP support miniupnp not required\n+\t--disable-upnp-default   (the default) UPnP support turned off by default at runtime\n+\t--enable-upnp-default    UPnP support turned on by default at runtime\n \n IPv6 support may be disabled by setting:\n \n-\tUSE_IPV6=0    Disable IPv6 support\n+\t--disable-ipv6           Disable IPv6 support\n \n Licenses of statically linked libraries:\n  Berkeley DB   New BSD license with additional requirement that linked\n@@ -76,22 +72,7 @@ for other Ubuntu & Debian:\n \n Optional:\n \n-\tsudo apt-get install libminiupnpc-dev (see USE_UPNP compile flag)\n-\n-\n-Dependency Build Instructions: Gentoo\n--------------------------------------\n-\n-Note: If you just want to install bitcoind on Gentoo, you can add the Bitcoin overlay and use your package manager:\n-\n-\tlayman -a bitcoin && emerge bitcoind\n-\temerge -av1 --noreplace boost glib openssl sys-libs/db:4.8\n-\n-Take the following steps to build (no UPnP support):\n-\n-\tcd ${BITCOIN_DIR}/src\n-\tmake -f makefile.unix USE_UPNP= USE_IPV6=1 BDB_INCLUDE_PATH='/usr/include/db4.8'\n-\tstrip bitcoind\n+\tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n \n Notes\n@@ -129,7 +110,13 @@ If you need to build Boost yourself:\n Security\n --------\n To help make your bitcoin installation more secure by making certain attacks impossible to\n-exploit even if a vulnerability is found, you can take the following measures:\n+exploit even if a vulnerability is found, binaries are hardened by default.\n+This can be disabled with:\n+\n+./configure --enable-hardening\n+\n+\n+Hardening enables the following features:\n \n * Position Independent Executable\n     Build position independent code to take advantage of Address Space Layout Randomization\n@@ -141,10 +128,6 @@ exploit even if a vulnerability is found, you can take the following measures:\n     On an Amd64 processor where a library was not compiled with -fPIC, this will cause an error\n     such as: \"relocation R_X86_64_32 against `......' can not be used when making a shared object;\"\n \n-    To build with PIE, use:\n-\n-    \tmake -f makefile.unix ... -e PIE=1\n-\n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n     \tscanelf -e ./bitcoin"
      },
      {
        "sha": "80195535bb7483e7b0a52030160d20beee350b49",
        "filename": "doc/files.md",
        "status": "renamed",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,4 +1,5 @@\n-Used in 0.8.0:\n+Used in 0.8.0\n+---------------------\n * wallet.dat: personal wallet (BDB) with keys and transactions\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n@@ -7,13 +8,16 @@ Used in 0.8.0:\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n \n-Only used in pre-0.8.0:\n+Only used in pre-0.8.0\n+---------------------\n * blktree/*; block chain index (LevelDB); since pre-0.8, replaced by blocks/index/* in 0.8.0\n * coins/*; unspent transaction output database (LevelDB); since pre-0.8, replaced by chainstate/* in 0.8.0\n \n-Only used before 0.8.0:\n+Only used before 0.8.0\n+---------------------\n * blkindex.dat: block chain index database (BDB); replaced by {chainstate/*,blocks/index/*,blocks/rev000??.dat} in 0.8.0\n * blk000?.dat: block data (custom, 2 GiB per file); replaced by blocks/blk000??.dat in 0.8.0\n \n-Only used before 0.7.0:\n+Only used before 0.7.0\n+---------------------\n * addr.dat: peer IP address database (BDB); replaced by peers.dat in 0.7.0",
        "previous_filename": "doc/files.txt"
      },
      {
        "sha": "5aa849af106c738c528a3d2a965e993912b81eca",
        "filename": "doc/readme-qt.md",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/readme-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/readme-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,101 @@\n+Bitcoin-Qt Readme\n+===============================\n+Contains build and configuration instructions for Bitcoin-Qt (Qt4 GUI for Bitcoin).\n+\n+Build Instructions\n+---------------------\n+\n+### Debian\n+\n+\n+First, make sure that the required packages for Qt4 development of your\n+distribution are installed, these are\n+\n+\n+\n+for Debian and Ubuntu  <= 11.10 :\n+\n+\n+    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n+        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n+        libssl-dev libdb4.8++-dev libprotobuf-dev protobuf-compiler\n+\n+for Ubuntu >= 12.04 (please read the 'Berkely DB version warning' below):\n+\n+    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n+        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n+        libssl-dev libdb++-dev libminiupnpc-dev libprotobuf-dev protobuf-compiler\n+\n+For Qt 5 you need the following, otherwise you get an error with lrelease when running qmake:\n+\n+\n+    apt-get install qt5-qmake libqt5gui5 libqt5core5 libqt5dbus5 qttools5-dev-tools\n+\n+Once these are installed, they will be found by configure and bitcoin-qt will be\n+built by default.\n+\n+\n+### Mac OS X\n+\n+* Download and install the [Qt Mac OS X SDK](https://qt-project.org/downloads). It is recommended to also install Apple's Xcode with UNIX tools.\n+* Download and install either [MacPorts](https://www.macports.org/) or [HomeBrew](http://mxcl.github.io/homebrew/).\n+* Execute the following commands in a terminal to get the dependencies using MacPorts\n+\n+\t\tsudo port selfupdate\n+\t\tsudo port install boost db48 miniupnpc protobuf-cpp\n+\n+* Execute the following commands in a terminal to get the dependencies using HomeBrew:\n+\n+\t\tbrew update\n+\t\tbrew install boost miniupnpc openssl berkeley-db4 protobuf\n+\n+Build Configuration Options\n+---------------------\n+\n+### UPnP port forwarding\n+\n+UPnP support is compiled in when possible and turned off by default.  See the\n+configure options for upnp behavior desired:\n+\n+        --with-miniupnpc         No UPnP support miniupnp not required\n+        --disable-upnp-default   (the default) UPnP support turned off by default at runtime\n+        --enable-upnp-default    UPnP support turned on by default at runtime\n+\n+### Notification support for recent (k)ubuntu versions\n+\n+DBUS support is enabled by default if dependencies are met.\n+\n+See the --with-qtdbus configure option.\n+\n+### Generation of QR codes\n+\n+[libqrencode](http://fukuchi.org/works/qrencode/) may be used to generate QRCode images for payment requests.\n+\n+QR code support is enabled by default if dependencies are met.\n+\n+See the --with-qrencode configure option.\n+\n+Warnings\n+---------------------\n+\n+### Berkely DB Version Warning\n+\n+\n+A warning for people using the *static binary* version of Bitcoin on a Linux/UNIX-ish system (tl;dr: **Berkely DB databases are not forward compatible**).\n+\n+The static binary version of Bitcoin is linked against libdb4.8 (see also [this Debian issue](http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=621425)).\n+\n+Now the nasty thing is that databases from 5.X are not compatible with 4.X.\n+\n+If the globally installed development package of Berkely DB installed on your system is 5.X, any source you build yourself will be linked against that. The first time you run with a 5.X version the database will be upgraded, and 4.X cannot open the new format. This means that you cannot go back to the old statically linked version without significant hassle!\n+\n+###  Ubuntu 11.10 Warning\n+\n+\n+Ubuntu 11.10 has a package called 'qt-at-spi' installed by default.  At the time of writing, having that package installed causes bitcoin-qt to crash intermittently.  The issue has been reported as [launchpad bug 857790](https://bugs.launchpad.net/ubuntu/+source/qt-at-spi/+bug/857790), but\n+isn't yet fixed.\n+\n+Until the bug is fixed, you can remove the qt-at-spi package to work around the problem, though this will presumably disable screen reader functionality for Qt apps:\n+\n+    sudo apt-get remove qt-at-spi\n+"
      },
      {
        "sha": "95cb33650f62ecff7e98c2c7918514a675b2353e",
        "filename": "doc/readme-qt.rst",
        "status": "removed",
        "additions": 0,
        "deletions": 163,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/doc/readme-qt.rst",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/doc/readme-qt.rst",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.rst?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,163 +0,0 @@\n-Bitcoin-Qt: Qt4 GUI for Bitcoin\n-===============================\n-\n-Build instructions\n-===================\n-\n-Debian\n--------\n-\n-First, make sure that the required packages for Qt4 development of your\n-distribution are installed, these are\n-\n-::\n-\n-for Debian and Ubuntu  <= 11.10 :\n-\n-::\n-\n-    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n-        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n-        libssl-dev libdb4.8++-dev\n-\n-for Ubuntu >= 12.04 (please read the 'Berkely DB version warning' below):\n-\n-::\n-\n-    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n-        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n-        libssl-dev libdb++-dev libminiupnpc-dev\n-\n-For Qt 5 you need the following, otherwise you get an error with lrelease when running qmake:\n-\n-::\n-\n-    apt-get install qt5-qmake libqt5gui5 libqt5core5 libqt5dbus5 qttools5-dev-tools\n-\n-then execute the following:\n-\n-::\n-\n-    qmake\n-    make\n-\n-Alternatively, install `Qt Creator`_ and open the `bitcoin-qt.pro` file.\n-\n-An executable named `bitcoin-qt` will be built.\n-\n-.. _`Qt Creator`: http://qt-project.org/downloads/\n-\n-Mac OS X\n---------\n-\n-- Download and install the `Qt Mac OS X SDK`_. It is recommended to also install Apple's Xcode with UNIX tools.\n-\n-- Download and install either `MacPorts`_ or `HomeBrew`_.\n-\n-- Execute the following commands in a terminal to get the dependencies using MacPorts:\n-\n-::\n-\n-\tsudo port selfupdate\n-\tsudo port install boost db48 miniupnpc\n-\n-- Execute the following commands in a terminal to get the dependencies using HomeBrew:\n-\n-::\n-\n-\tbrew update\n-\tbrew install boost miniupnpc openssl berkeley-db4\n-\n-- If using HomeBrew,  edit `bitcoin-qt.pro` to account for library location differences. There's a diff in `contrib/homebrew/bitcoin-qt-pro.patch` that shows what you need to change, or you can just patch by doing\n-\n-        patch -p1 < contrib/homebrew/bitcoin.qt.pro.patch\n-\n-- Open the bitcoin-qt.pro file in Qt Creator and build as normal (cmd-B)\n-\n-.. _`Qt Mac OS X SDK`: http://qt-project.org/downloads/\n-.. _`MacPorts`: http://www.macports.org/install.php\n-.. _`HomeBrew`: http://mxcl.github.io/homebrew/\n-\n-\n-Build configuration options\n-============================\n-\n-UPnP port forwarding\n----------------------\n-\n-To use UPnP for port forwarding behind a NAT router (recommended, as more connections overall allow for a faster and more stable bitcoin experience), pass the following argument to qmake:\n-\n-::\n-\n-    qmake \"USE_UPNP=1\"\n-\n-(in **Qt Creator**, you can find the setting for additional qmake arguments under \"Projects\" -> \"Build Settings\" -> \"Build Steps\", then click \"Details\" next to **qmake**)\n-\n-This requires miniupnpc for UPnP port mapping.  It can be downloaded from\n-http://miniupnp.tuxfamily.org/files/.  UPnP support is not compiled in by default.\n-\n-Set USE_UPNP to a different value to control this:\n-\n-+------------+--------------------------------------------------------------------------+\n-| USE_UPNP=- | no UPnP support, miniupnpc not required;                                 |\n-+------------+--------------------------------------------------------------------------+\n-| USE_UPNP=0 | (the default) built with UPnP, support turned off by default at runtime; |\n-+------------+--------------------------------------------------------------------------+\n-| USE_UPNP=1 | build with UPnP support turned on by default at runtime.                 |\n-+------------+--------------------------------------------------------------------------+\n-\n-Notification support for recent (k)ubuntu versions\n----------------------------------------------------\n-\n-To see desktop notifications on (k)ubuntu versions starting from 10.04, enable usage of the\n-FreeDesktop notification interface through DBUS using the following qmake option:\n-\n-::\n-\n-    qmake \"USE_DBUS=1\"\n-\n-Generation of QR codes\n------------------------\n-\n-libqrencode may be used to generate QRCode images for payment requests.\n-It can be downloaded from http://fukuchi.org/works/qrencode/index.html.en, or installed via your package manager. Pass the USE_QRCODE\n-flag to qmake to control this:\n-\n-+--------------+--------------------------------------------------------------------------+\n-| USE_QRCODE=0 | (the default) No QRCode support - libarcode not required                 |\n-+--------------+--------------------------------------------------------------------------+\n-| USE_QRCODE=1 | QRCode support enabled                                                   |\n-+--------------+--------------------------------------------------------------------------+\n-\n-\n-Berkely DB version warning\n-==========================\n-\n-A warning for people using the *static binary* version of Bitcoin on a Linux/UNIX-ish system (tl;dr: **Berkely DB databases are not forward compatible**).\n-\n-The static binary version of Bitcoin is linked against libdb4.8 (see also `this Debian issue`_).\n-\n-Now the nasty thing is that databases from 5.X are not compatible with 4.X.\n-\n-If the globally installed development package of Berkely DB installed on your system is 5.X, any source you\n-build yourself will be linked against that. The first time you run with a 5.X version the database will be upgraded,\n-and 4.X cannot open the new format. This means that you cannot go back to the old statically linked version without\n-significant hassle!\n-\n-.. _`this Debian issue`: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=621425\n-\n-Ubuntu 11.10 warning\n-====================\n-\n-Ubuntu 11.10 has a package called 'qt-at-spi' installed by default.  At the time of writing, having that package\n-installed causes bitcoin-qt to crash intermittently.  The issue has been reported as `launchpad bug 857790`_, but\n-isn't yet fixed.\n-\n-Until the bug is fixed, you can remove the qt-at-spi package to work around the problem, though this will presumably\n-disable screen reader functionality for Qt apps:\n-\n-::\n-\n-    sudo apt-get remove qt-at-spi\n-\n-.. _`launchpad bug 857790`: https://bugs.launchpad.net/ubuntu/+source/qt-at-spi/+bug/857790"
      },
      {
        "sha": "9e0b860a8c7a5ce16c9a8a8224049a2fecd75a97",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 22,
        "deletions": 13,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -31,40 +31,49 @@ Release Process\n   \n \texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n-\tcd ./gitian-builder\n+\tpushd ./bitcoin\n+\tgit checkout v${VERSION}\n+\tpopd\n+\tpushd ./gitian-builder\n \n  Fetch and build inputs: (first time, or when dependency versions change)\n \n \tmkdir -p inputs; cd inputs/\n \twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.6.tar.gz' -O miniupnpc-1.6.tar.gz\n-\twget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n+\twget 'https://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n \twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-\twget 'http://zlib.net/zlib-1.2.6.tar.gz'\n-\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng-1.5.9.tar.gz'\n-\twget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-\twget 'http://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n-\twget 'http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/history/zlib/zlib-1.2.6.tar.gz'\n+\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/history/libpng15/libpng-1.5.9.tar.gz'\n+\twget 'https://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n+\twget 'https://downloads.sourceforge.net/project/boost/boost/1.54.0/boost_1_54_0.tar.bz2'\n+\twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n+\t     boost-mingw-gas-cross-compile-2013-03-03.patch\n+\twget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+\twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n-\tmv build/out/boost-win32-1.50.0-gitian2.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n-\tmv build/out/qt-win32-4.8.3-gitian-r1.zip inputs/\n+\tmv build/out/boost-win32-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n-\tmv build/out/bitcoin-deps-0.0.5.zip inputs/\n+\tmv build/out/bitcoin-deps-*.zip inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n+\tmv build/out/qt-win32-*.zip inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/protobuf-win32.yml\n+\tmv build/out/protobuf-win32-*.zip inputs/\n \n  Build bitcoind and bitcoin-qt on Linux32, Linux64, and Win32:\n   \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian.yml\n \tpushd build/out\n \tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n-\tmv bitcoin-${VERSION}-linux-gitian.zip ../../\n+\tmv bitcoin-${VERSION}-linux-gitian.zip ../../../\n \tpopd\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win32 --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n \tpushd build/out\n \tzip -r bitcoin-${VERSION}-win32-gitian.zip *\n-\tmv bitcoin-${VERSION}-win32-gitian.zip ../../\n+\tmv bitcoin-${VERSION}-win32-gitian.zip ../../../\n+\tpopd\n \tpopd\n \n   Build output expected:"
      },
      {
        "sha": "86d56cffd5003d39504c90e3ed5d308febb629e4",
        "filename": "doc/tor.md",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,89 @@\n+TOR SUPPORT IN BITCOIN\n+======================\n+\n+It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+\n+The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on a random port. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n+configure Tor.\n+\n+\n+1. Run bitcoin behind a Tor proxy\n+---------------------------------\n+\n+The first step is running Bitcoin behind a Tor proxy. This will already make all\n+outgoing connections be anonimized, but more is possible.\n+\n+\t-socks=5        SOCKS5 supports connecting-to-hostname, which can be used instead\n+\t                of doing a (leaking) local DNS lookup. SOCKS5 is the default,\n+\t                but SOCKS4 does not support this. (SOCKS4a does, but isn't\n+\t                implemented).\n+\t\n+\t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n+\t                server will be used to try to reach .onion addresses as well.\n+\t\n+\t-tor=ip:port    Set the proxy server to use for tor hidden services. You do not\n+\t                need to set this if it's the same as -proxy. You can use -notor\n+\t                to explicitly disable access to hidden service.\n+\t\n+\t-listen         When using -proxy, listening is disabled by default. If you want\n+\t                to run a hidden service (see next section), you'll need to enable\n+\t                it explicitly.\n+\t\n+\t-connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n+\t-addnode=X      of IP addresses or hostnames in these parameters. It requires\n+\t-seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n+\t                other P2P nodes.\n+\n+In a typical situation, this suffices to run behind a Tor proxy:\n+\n+\t./bitcoin -proxy=127.0.0.1:9050\n+\n+\n+2. Run a bitcoin hidden server\n+------------------------------\n+\n+If you configure your Tor system accordingly, it is possible to make your node also\n+reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n+config file):\n+\n+\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n+\tHiddenServicePort 8333 127.0.0.1:8333\n+\n+The directory can be different of course, but (both) port numbers should be equal to\n+your bitcoind's P2P listen port (8333 by default).\n+\n+\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n+\t                this option, and this can be a .onion address. Given the above\n+\t                configuration, you can find your onion address in\n+\t                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+\t                preference for your node to advertize itself with, for connections\n+\t                coming from unroutable addresses (such as 127.0.0.1, where the\n+\t                Tor proxy typically runs).\n+\t\n+\t-listen         You'll need to enable listening for incoming connections, as this\n+\t                is off by default behind a proxy.\n+\t\n+\t-discover       When -externalip is specified, no attempt is made to discover local\n+\t                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n+\t                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n+\t                other addresses using -externalip, or explicitly enable -discover.\n+\t                Note that both addresses of a dual-stack system may be easily\n+\t                linkable using traffic analysis.\n+\n+In a typical situation, where you're only reachable via Tor, this should suffice:\n+\n+\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\n+(obviously, replace the Onion address with your own). If you don't care too much\n+about hiding your node, and want to be reachable on IPv4 as well, additionally\n+specify:\n+\n+\t./bitcoind ... -discover\n+\n+and open port 8333 on your firewall (or use -upnp).\n+\n+If you only want to use Tor to reach onion addresses, but not use it as a proxy\n+for normal IPv4/IPv6 communication, use:\n+\n+\t./bitcoin -tor=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+"
      },
      {
        "sha": "006726b953bab874492eecfe62827638a39a5c40",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -32,14 +32,13 @@ This directory contains all translations. Filenames must adhere to this format:\n \n `src/qt/locale/bitcoin_en.ts` is treated in a special way. It is used as the\n source for all other translations. Whenever a string in the code is changed\n-this file must be updated to reflect those changes. This can be accomplished\n-by running `lupdate` (included in the Qt SDK). Also, a custom script is used\n+this file must be updated to reflect those changes. A  custom script is used\n to extract strings from the non-Qt parts. This script makes use of `gettext`,\n so make sure that utility is installed (ie, `apt-get install gettext` on \n-Ubuntu/Debian):\n-\n-    python share/qt/extract_strings_qt.py\n-    lupdate bitcoin-qt.pro -no-obsolete -locations relative -ts src/qt/locale/bitcoin_en.ts\n+Ubuntu/Debian). Once this has been updated, lupdate (included in the Qt SDK)\n+is used to update bitcoin_en.ts. This process has been automated, from src/qt,\n+simply run:\n+    make translate\n     \n ##### Handling of plurals in the source file\n "
      },
      {
        "sha": "2c991eb03aa25f173f4275d72f2b66c246e219e1",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 10,
        "deletions": 27,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,35 +1,18 @@\n-Compiling/running bitcoind unit tests\n+Compiling/running unit tests\n ------------------------------------\n \n-bitcoind unit tests are in the `src/test/` directory; they\n-use the Boost::Test unit-testing framework.\n+Unit tests will be automatically compiled if dependencies were met in configure\n+and tests weren't explicitly disabled.\n \n-To compile and run the tests:\n+After configuring, they can be run with 'make check'.\n \n-\tcd src\n-\tmake -f makefile.unix test_bitcoin  # Replace makefile.unix if you're not on unix\n-\t./test_bitcoin   # Runs the unit tests\n+To run the bitcoind tests manually, launch src/test/test_bitcoin .\n \n-If all tests succeed the last line of output will be:\n-`*** No errors detected`\n-\n-To add more tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n+To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the test/ directory or add new .cpp files that\n-implement new BOOST_AUTO_TEST_SUITE sections (the makefiles are\n-set up to add test/*.cpp to test_bitcoin automatically).\n-\n-\n-Compiling/running Bitcoin-Qt unit tests\n----------------------------------------\n-\n-Bitcoin-Qt unit tests are in the src/qt/test/ directory; they\n-use the Qt unit-testing framework.\n-\n-To compile and run the tests:\n+implement new BOOST_AUTO_TEST_SUITE sections.\n \n-\tqmake bitcoin-qt.pro BITCOIN_QT_TEST=1\n-\tmake\n-\t./bitcoin-qt_test\n+To run the bitcoin-qt tests manualy, launch src/qt/test/bitcoin-qt_test\n \n-To add more tests, add them to the `src/qt/test/` directory,\n-the `src/qt/test/test_main.cpp` file, and bitcoin-qt.pro.\n+To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n+the `src/qt/test/test_main.cpp` file."
      },
      {
        "sha": "c5b26b52e6cdb5891332f7e87addae9306ba7107",
        "filename": "pkg.m4",
        "status": "added",
        "additions": 214,
        "deletions": 0,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/pkg.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/pkg.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pkg.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,214 @@\n+# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-\n+# serial 1 (pkg-config-0.24)\n+# \n+# Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n+# ----------------------------------\n+AC_DEFUN([PKG_PROG_PKG_CONFIG],\n+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n+m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\n+m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\n+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\n+AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\n+AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n+\n+if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n+\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n+fi\n+if test -n \"$PKG_CONFIG\"; then\n+\t_pkg_min_version=m4_default([$1], [0.9.0])\n+\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n+\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n+\t\tAC_MSG_RESULT([yes])\n+\telse\n+\t\tAC_MSG_RESULT([no])\n+\t\tPKG_CONFIG=\"\"\n+\tfi\n+fi[]dnl\n+])# PKG_PROG_PKG_CONFIG\n+\n+# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# Check to see whether a particular set of modules exists.  Similar\n+# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n+#\n+# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n+# only at the first occurence in configure.ac, so if the first place\n+# it's called might be skipped (such as if it is within an \"if\", you\n+# have to call PKG_CHECK_EXISTS manually\n+# --------------------------------------------------------------\n+AC_DEFUN([PKG_CHECK_EXISTS],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+if test -n \"$PKG_CONFIG\" && \\\n+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n+  m4_default([$2], [:])\n+m4_ifvaln([$3], [else\n+  $3])dnl\n+fi])\n+\n+# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n+# ---------------------------------------------\n+m4_define([_PKG_CONFIG],\n+[if test -n \"$$1\"; then\n+    pkg_cv_[]$1=\"$$1\"\n+ elif test -n \"$PKG_CONFIG\"; then\n+    PKG_CHECK_EXISTS([$3],\n+                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n+\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n+\t\t     [pkg_failed=yes])\n+ else\n+    pkg_failed=untried\n+fi[]dnl\n+])# _PKG_CONFIG\n+\n+# _PKG_SHORT_ERRORS_SUPPORTED\n+# -----------------------------\n+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n+        _pkg_short_errors_supported=yes\n+else\n+        _pkg_short_errors_supported=no\n+fi[]dnl\n+])# _PKG_SHORT_ERRORS_SUPPORTED\n+\n+\n+# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n+# [ACTION-IF-NOT-FOUND])\n+#\n+#\n+# Note that if there is a possibility the first call to\n+# PKG_CHECK_MODULES might not happen, you should be sure to include an\n+# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n+#\n+#\n+# --------------------------------------------------------------\n+AC_DEFUN([PKG_CHECK_MODULES],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n+\n+pkg_failed=no\n+AC_MSG_CHECKING([for $1])\n+\n+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n+_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n+\n+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n+and $1[]_LIBS to avoid the need to call pkg-config.\n+See the pkg-config man page for more details.])\n+\n+if test $pkg_failed = yes; then\n+   \tAC_MSG_RESULT([no])\n+        _PKG_SHORT_ERRORS_SUPPORTED\n+        if test $_pkg_short_errors_supported = yes; then\n+\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n+        else \n+\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n+        fi\n+\t# Put the nasty error message in config.log where it belongs\n+\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n+\n+\tm4_default([$4], [AC_MSG_ERROR(\n+[Package requirements ($2) were not met:\n+\n+$$1_PKG_ERRORS\n+\n+Consider adjusting the PKG_CONFIG_PATH environment variable if you\n+installed software in a non-standard prefix.\n+\n+_PKG_TEXT])[]dnl\n+        ])\n+elif test $pkg_failed = untried; then\n+     \tAC_MSG_RESULT([no])\n+\tm4_default([$4], [AC_MSG_FAILURE(\n+[The pkg-config script could not be found or is too old.  Make sure it\n+is in your PATH or set the PKG_CONFIG environment variable to the full\n+path to pkg-config.\n+\n+_PKG_TEXT\n+\n+To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n+        ])\n+else\n+\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n+\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n+        AC_MSG_RESULT([yes])\n+\t$3\n+fi[]dnl\n+])# PKG_CHECK_MODULES\n+\n+\n+# PKG_INSTALLDIR(DIRECTORY)\n+# -------------------------\n+# Substitutes the variable pkgconfigdir as the location where a module\n+# should install pkg-config .pc files. By default the directory is\n+# $libdir/pkgconfig, but the default can be changed by passing\n+# DIRECTORY. The user can override through the --with-pkgconfigdir\n+# parameter.\n+AC_DEFUN([PKG_INSTALLDIR],\n+[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\n+m4_pushdef([pkg_description],\n+    [pkg-config installation directory @<:@]pkg_default[@:>@])\n+AC_ARG_WITH([pkgconfigdir],\n+    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n+    [with_pkgconfigdir=]pkg_default)\n+AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\n+m4_popdef([pkg_default])\n+m4_popdef([pkg_description])\n+]) dnl PKG_INSTALLDIR\n+\n+\n+# PKG_NOARCH_INSTALLDIR(DIRECTORY)\n+# -------------------------\n+# Substitutes the variable noarch_pkgconfigdir as the location where a\n+# module should install arch-independent pkg-config .pc files. By\n+# default the directory is $datadir/pkgconfig, but the default can be\n+# changed by passing DIRECTORY. The user can override through the\n+# --with-noarch-pkgconfigdir parameter.\n+AC_DEFUN([PKG_NOARCH_INSTALLDIR],\n+[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\n+m4_pushdef([pkg_description],\n+    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\n+AC_ARG_WITH([noarch-pkgconfigdir],\n+    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n+    [with_noarch_pkgconfigdir=]pkg_default)\n+AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\n+m4_popdef([pkg_default])\n+m4_popdef([pkg_description])\n+]) dnl PKG_NOARCH_INSTALLDIR\n+\n+\n+# PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n+# [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+# -------------------------------------------\n+# Retrieves the value of the pkg-config variable for the given module.\n+AC_DEFUN([PKG_CHECK_VAR],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n+\n+_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\n+AS_VAR_COPY([$1], [pkg_cv_][$1])\n+\n+AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n+])# PKG_CHECK_VAR"
      },
      {
        "sha": "b353c57909d4aa0c74228df8d5d95f83f68dd8e8",
        "filename": "qa/pull-tester/build-tests.sh.in",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/build-tests.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/build-tests.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/build-tests.sh.in?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,45 @@\n+#!/bin/bash\n+# Param1: The prefix to mingw staging\n+# Param2: Path to java comparison tool\n+# Param3: Number of make jobs. Defaults to 1.\n+\n+set -e\n+set -o xtrace\n+\n+MINGWPREFIX=$1\n+JAVA_COMPARISON_TOOL=$2\n+JOBS=${3-1}\n+\n+if [ $# -lt 2 ]; then\n+  echo \"Usage: $0 [mingw-prefix] [java-comparison-tool] <make jobs>\"\n+  exit 1\n+fi\n+\n+DISTDIR=@PACKAGE@-@VERSION@\n+\n+cd @abs_top_srcdir@\n+make distdir\n+mv $DISTDIR linux-build\n+cd linux-build\n+./configure --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\"\n+make -j$JOBS\n+make check\n+\n+#Test code coverage\n+cd @abs_top_srcdir@\n+make distdir\n+mv $DISTDIR linux-coverage-build\n+cd linux-coverage-build\n+./configure --enable-lcov --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\"\n+make -j$JOBS\n+make cov\n+\n+# win32 build disabled until pull-tester has updated dependencies\n+##Test win32 build\n+#cd @abs_top_srcdir@\n+#make distdir\n+#mv $DISTDIR win32-build\n+#cd win32-build\n+#./configure --prefix=$MINGWPREFIX --host=i586-mingw32msvc --with-qt-bindir=$MINGWPREFIX/host/bin --with-qt-plugindir=$MINGWPREFIX/plugins --with-qt-incdir=$MINGWPREFIX/include --with-boost=$MINGWPREFIX --with-protoc-bindir=$MINGWPREFIX/host/bin --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\" CPPFLAGS=-I$MINGWPREFIX/include LDFLAGS=-L$MINGWPREFIX/lib\n+#make -j$JOBS\n+#make check"
      },
      {
        "sha": "fe50177a24fb87ffbea5910ff5279fe93477d54e",
        "filename": "qa/pull-tester/pull-tester.py",
        "status": "added",
        "additions": 182,
        "deletions": 0,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/pull-tester.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/pull-tester.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/pull-tester.py?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,182 @@\n+#!/usr/bin/python\n+import json\n+from urllib import urlopen\n+import requests\n+import getpass\n+from string import Template\n+import sys\n+import os\n+import subprocess\n+\n+class RunError(Exception):\n+    def __init__(self, value):\n+        self.value = value\n+    def __str__(self):\n+        return repr(self.value)\n+\n+def run(command, **kwargs):\n+    fail_hard = kwargs.pop(\"fail_hard\", True)\n+    # output to /dev/null by default:\n+    kwargs.setdefault(\"stdout\", open('/dev/null', 'w'))\n+    kwargs.setdefault(\"stderr\", open('/dev/null', 'w'))\n+    command = Template(command).substitute(os.environ)\n+    if \"TRACE\" in os.environ:\n+        if 'cwd' in kwargs:\n+            print(\"[cwd=%s] %s\"%(kwargs['cwd'], command))\n+        else: print(command)\n+    try:\n+        process = subprocess.Popen(command.split(' '), **kwargs)\n+        process.wait()\n+    except KeyboardInterrupt:\n+        process.terminate()\n+        raise\n+    if process.returncode != 0 and fail_hard:\n+        raise RunError(\"Failed: \"+command)\n+    return process.returncode\n+\n+def checkout_pull(clone_url, commit, out):\n+    # Init\n+    build_dir=os.environ[\"BUILD_DIR\"]\n+    run(\"umount ${CHROOT_COPY}/proc\", fail_hard=False)\n+    run(\"rsync --delete -apv ${CHROOT_MASTER} ${CHROOT_COPY}\")\n+    run(\"rm -rf ${CHROOT_COPY}${SCRIPTS_DIR}\")\n+    run(\"cp -a ${SCRIPTS_DIR} ${CHROOT_COPY}${SCRIPTS_DIR}\")\n+    # Merge onto upstream/master\n+    run(\"rm -rf ${BUILD_DIR}\")\n+    run(\"mkdir -p ${BUILD_DIR}\")\n+    run(\"git clone ${CLONE_URL} ${BUILD_DIR}\")\n+    run(\"git remote add pull \"+clone_url, cwd=build_dir, stdout=out, stderr=out)\n+    run(\"git fetch pull\", cwd=build_dir, stdout=out, stderr=out)\n+    if run(\"git merge \"+ commit, fail_hard=False, cwd=build_dir, stdout=out, stderr=out) != 0:\n+        return False\n+    run(\"chown -R ${BUILD_USER}:${BUILD_GROUP} ${BUILD_DIR}\", stdout=out, stderr=out)\n+    run(\"mount --bind /proc ${CHROOT_COPY}/proc\")\n+    return True\n+\n+def commentOn(commentUrl, success, inMerge, needTests, linkUrl):\n+    common_message = \"\"\"\n+This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\n+Contact BlueMatt on freenode if something looks broken.\"\"\"\n+\n+    # Remove old BitcoinPullTester comments (I'm being lazy and not paginating here)\n+    recentcomments = requests.get(commentUrl+\"?sort=created&direction=desc\",\n+                                  auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"])).json\n+    for comment in recentcomments:\n+        if comment[\"user\"][\"login\"] == os.environ[\"GITHUB_USER\"] and common_message in comment[\"body\"]:\n+            requests.delete(comment[\"url\"],\n+                                  auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"]))\n+\n+    if success == True:\n+        post_data = { \"body\" : \"Automatic sanity-testing: PASSED, see \" + linkUrl + \" for binaries and test log.\" + common_message}\n+    elif inMerge:\n+        post_data = { \"body\" : \"Automatic sanity-testing: FAILED MERGE, see \" + linkUrl + \" for test log.\" + \"\"\"\n+\n+This pull does not merge cleanly onto current master\"\"\" + common_message}\n+    else:\n+        post_data = { \"body\" : \"Automatic sanity-testing: FAILED BUILD/TEST, see \" + linkUrl + \" for binaries and test log.\" + \"\"\"\n+\n+This could happen for one of several reasons:\n+1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/pull-tester)\n+2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n+3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n+4. The test suite fails on either Linux i386 or Win32\n+5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n+\n+If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n+\"\"\" + common_message}\n+\n+    resp = requests.post(commentUrl, json.dumps(post_data), auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"]))\n+\n+def testpull(number, comment_url, clone_url, commit):\n+    print(\"Testing pull %d: %s : %s\"%(number, clone_url,commit))\n+\n+    dir = os.environ[\"RESULTS_DIR\"] + \"/\" + commit + \"/\"\n+    print(\" ouput to %s\"%dir)\n+    if os.path.exists(dir):\n+        os.system(\"rm -r \" + dir)\n+    os.makedirs(dir)\n+    currentdir = os.environ[\"RESULTS_DIR\"] + \"/current\"\n+    os.system(\"rm -r \"+currentdir)\n+    os.system(\"ln -s \" + dir + \" \" + currentdir)\n+    out = open(dir + \"test.log\", 'w+')\n+\n+    resultsurl = os.environ[\"RESULTS_URL\"] + commit\n+    checkedout = checkout_pull(clone_url, commit, out)\n+    if checkedout != True:\n+        print(\"Failed to test pull - sending comment to: \" + comment_url)\n+        commentOn(comment_url, False, True, False, resultsurl)\n+        open(os.environ[\"TESTED_DB\"], \"a\").write(commit + \"\\n\")\n+        return\n+\n+    # New: pull-tester.sh script(s) are in the tree:\n+    script = os.environ[\"BUILD_PATH\"]+\"/qa/pull-tester/pull-tester.sh\"\n+    script += \" ${BUILD_PATH} ${MINGW_DEPS_DIR} ${SCRIPTS_DIR}/BitcoindComparisonTool.jar 1\"\n+    returncode = run(\"chroot ${CHROOT_COPY} sudo -u ${BUILD_USER} -H timeout ${TEST_TIMEOUT} \"+script,\n+                     fail_hard=False, stdout=out, stderr=out)\n+\n+    run(\"mv ${BUILD_DIR} \" + dir)\n+    # TODO: FIXME \n+    # Idea: have run-script save interesting output...\n+    #    run(\"cp /mnt/chroot-tmp/home/ubuntu/.bitcoin/regtest/debug.log \" + dir)\n+    #    os.system(\"chmod +r \" + dir + \"/debug.log\")\n+    if returncode == 42:\n+        print(\"Successfully tested pull (needs tests) - sending comment to: \" + comment_url)\n+        commentOn(comment_url, True, False, True, resultsurl)\n+    elif returncode != 0:\n+        print(\"Failed to test pull - sending comment to: \" + comment_url)\n+        commentOn(comment_url, False, False, False, resultsurl)\n+    else:\n+        print(\"Successfully tested pull - sending comment to: \" + comment_url)\n+        commentOn(comment_url, True, False, False, resultsurl)\n+    open(os.environ[\"TESTED_DB\"], \"a\").write(commit + \"\\n\")\n+\n+def environ_default(setting, value):\n+    if not setting in os.environ:\n+        os.environ[setting] = value\n+\n+if getpass.getuser() != \"root\":\n+\tprint(\"Run me as root!\")\n+\tsys.exit(1)\n+\n+if \"GITHUB_USER\" not in os.environ or \"GITHUB_AUTH_TOKEN\" not in os.environ:\n+    print(\"GITHUB_USER and/or GITHUB_AUTH_TOKEN environment variables not set\")\n+    sys.exit(1)\n+\n+environ_default(\"CLONE_URL\", \"https://github.com/bitcoin/bitcoin.git\")\n+environ_default(\"MINGW_DEPS_DIR\", \"/mnt/w32deps\")\n+environ_default(\"SCRIPTS_DIR\", \"/mnt/test-scripts\")\n+environ_default(\"CHROOT_COPY\", \"/mnt/chroot-tmp\")\n+environ_default(\"CHROOT_MASTER\", \"/mnt/chroot\")\n+environ_default(\"BUILD_PATH\", \"/mnt/bitcoin\")\n+os.environ[\"BUILD_DIR\"] = os.environ[\"CHROOT_COPY\"] + os.environ[\"BUILD_PATH\"]\n+environ_default(\"RESULTS_DIR\", \"/mnt/www/pull-tester\")\n+environ_default(\"RESULTS_URL\", \"http://jenkins.bluematt.me/pull-tester/\")\n+environ_default(\"GITHUB_REPO\", \"bitcoin/bitcoin\")\n+environ_default(\"TESTED_DB\", \"/mnt/commits-tested.txt\")\n+environ_default(\"BUILD_USER\", \"matt\")\n+environ_default(\"BUILD_GROUP\", \"matt\")\n+environ_default(\"TEST_TIMEOUT\", str(60*60*2))\n+\n+print(\"Optional usage: pull-tester.py 2112\")\n+\n+f = open(os.environ[\"TESTED_DB\"])\n+tested = set( line.rstrip() for line in f.readlines() )\n+f.close()\n+\n+if len(sys.argv) > 1:\n+    pull = requests.get(\"https://api.github.com/repos/\"+os.environ[\"GITHUB_REPO\"]+\"/pulls/\"+sys.argv[1],\n+                        auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"])).json\n+    testpull(pull[\"number\"], pull[\"_links\"][\"comments\"][\"href\"],\n+             pull[\"head\"][\"repo\"][\"clone_url\"], pull[\"head\"][\"sha\"])\n+\n+else:\n+    for page in range(1,100):\n+        result = requests.get(\"https://api.github.com/repos/\"+os.environ[\"GITHUB_REPO\"]+\"/pulls?state=open&page=%d\"%(page,),\n+                              auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"])).json\n+        if len(result) == 0: break;\n+        for pull in result:\n+            if pull[\"head\"][\"sha\"] in tested:\n+                print(\"Pull %d already tested\"%(pull[\"number\"],))\n+                continue\n+            testpull(pull[\"number\"], pull[\"_links\"][\"comments\"][\"href\"],\n+                     pull[\"head\"][\"repo\"][\"clone_url\"], pull[\"head\"][\"sha\"])"
      },
      {
        "sha": "13c800c16ac27b1758d4c2d8f4868e15d596cc0f",
        "filename": "qa/pull-tester/pull-tester.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/pull-tester.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/pull-tester.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/pull-tester.sh?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,15 @@\n+#!/bin/sh\n+# Helper script for pull-tester.\n+#Param 1: path to bitcoin srcroot\n+#Param ...: arguments for build-test.sh\n+\n+if [ $# -lt 1 ]; then\n+  echo \"usage: $0 [bitcoin srcroot] build-test arguments...\"\n+fi\n+\n+cd $1\n+shift\n+\n+./autogen.sh\n+./configure\n+./qa/pull-tester/build-tests.sh \"$@\""
      },
      {
        "sha": "e02fef3b56c7d36d46ec584a011e27dfc6c0804b",
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,27 @@\n+#!/bin/bash\n+DATADIR=\"@abs_top_builddir@/.bitcoin\"\n+rm -rf \"$DATADIR\"\n+mkdir -p \"$DATADIR\"/regtest\n+touch \"$DATADIR/regtest/debug.log\"\n+tail -q -n 1 -F \"$DATADIR/regtest/debug.log\" | grep -m 1 -q \"Done loading\" &\n+WAITER=$!\n+\"@abs_top_builddir@/src/bitcoind@EXEEXT@\" -connect=0.0.0.0 -datadir=\"$DATADIR\" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -logtimestamps -port=18444 -regtest &\n+BITCOIND=$!\n+\n+#Install a watchdog.\n+(sleep 10 && kill -0 $WAITER 2>/dev/null && kill -9 $BITCOIND $$)&\n+wait $WAITER\n+\n+if [ -n \"$TIMEOUT\" ]; then\n+  timeout \"$TIMEOUT\"s \"$@\"\n+  RETURN=$?\n+else\n+  \"$@\"\n+  RETURN=$?\n+fi\n+\n+(sleep 15 && kill -0 $BITCOIND 2>/dev/null && kill -9 $BITCOIND $$)&\n+kill $BITCOIND && wait $BITCOIND\n+\n+# timeout returns 124 on timeout, otherwise the return value of the child\n+exit $RETURN"
      },
      {
        "sha": "da50b0d1099d4337c967e85dfe2f6c25e5d9924f",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,17 +1,19 @@\n #!/bin/sh\n-\n+if [ $# -gt 1 ]; then\n+    cd \"$2\"\n+fi\n if [ $# -gt 0 ]; then\n     FILE=\"$1\"\n     shift\n     if [ -f \"$FILE\" ]; then\n         INFO=\"$(head -n 1 \"$FILE\")\"\n     fi\n else\n-    echo \"Usage: $0 <filename>\"\n+    echo \"Usage: $0 <filename> <srcroot>\"\n     exit 1\n fi\n \n-if [ -e \"$(which git)\" ]; then\n+if [ -e \"$(which git)\" -a -d \".git\" ]; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      },
      {
        "sha": "6f64c3164b191686c2f3a2fc64c9f5b1e68bbdf3",
        "filename": "share/qt/Info.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/share/qt/Info.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/share/qt/Info.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist SYSTEM \"file://localhost/System/Library/DTDs/PropertyList.dtd\">\n-<plist version=\"0.9\">\n-<dict>\n-\t<key>CFBundleIconFile</key>\n-\t<string>bitcoin.icns</string>\n-\t<key>CFBundlePackageType</key>\n-\t<string>APPL</string>\n-\t<key>CFBundleGetInfoString</key>\n-\t<string>$VERSION, Copyright \u00a9 2009-$YEAR The Bitcoin developers</string>\n-\t<key>CFBundleShortVersionString</key>\n-\t<string>$VERSION</string>\n-\t<key>CFBundleVersion</key>\n-\t<string>$VERSION</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n-\t<key>CFBundleExecutable</key>\n-\t<string>Bitcoin-Qt</string>\n-\t<key>CFBundleIdentifier</key>\n-\t<string>org.bitcoinfoundation.Bitcoin-Qt</string>\n-        <key>CFBundleURLTypes</key>\n-        <array>\n-          <dict>\n-            <key>CFBundleTypeRole</key>\n-            <string>Editor</string>\n-            <key>CFBundleURLName</key>\n-            <string>org.bitcoinfoundation.BitcoinPayment</string>\n-            <key>CFBundleURLSchemes</key>\n-            <array>\n-              <string>bitcoin</string>\n-            </array>\n-          </dict>\n-        </array>\n-\t<key>NSHighResolutionCapable</key>\n-\t<true/>\n-</dict>\n-</plist>"
      },
      {
        "sha": "d0dd796561eeaefe0818d793d16773d3e31a691d",
        "filename": "share/qt/Info.plist.in",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist SYSTEM \"file://localhost/System/Library/DTDs/PropertyList.dtd\">\n+<plist version=\"0.9\">\n+<dict>\n+  <key>CFBundleIconFile</key>\n+  <string>bitcoin.icns</string>\n+  <key>CFBundlePackageType</key>\n+  <string>APPL</string>\n+  <key>CFBundleGetInfoString</key>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin developers</string>\n+  <key>CFBundleShortVersionString</key>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>\n+  <key>CFBundleVersion</key>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>\n+  <key>CFBundleSignature</key>\n+  <string>????</string>\n+  <key>CFBundleExecutable</key>\n+  <string>Bitcoin-Qt</string>\n+  <key>CFBundleIdentifier</key>\n+  <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n+\n+  <key>CFBundleURLTypes</key>\n+  <array>\n+    <dict>\n+      <key>CFBundleTypeRole</key>\n+      <string>Editor</string>\n+      <key>CFBundleURLName</key>\n+      <string>org.bitcoin.BitcoinPayment</string>\n+      <key>CFBundleURLSchemes</key>\n+      <array>\n+        <string>bitcoin</string>\n+      </array>\n+    </dict>\n+  </array>\n+\n+  <key>UTExportedTypeDeclarations</key>\n+  <array>\n+    <dict>\n+      <key>UTTypeIdentifier</key>\n+      <string>org.bitcoin.paymentrequest</string>\n+      <key>UTTypeDescription</key>\n+      <string>Bitcoin payment request</string>\n+      <key>UTTypeConformsTo</key>\n+      <array>\n+        <string>public.data</string>\n+      </array>\n+      <key>UTTypeTagSpecification</key>\n+      <dict>\n+        <key>public.mime-type</key>\n+        <string>application/x-bitcoin-payment-request</string>\n+        <key>public.filename-extension</key>\n+        <array>\n+          <string>bitcoinpaymentrequest</string>\n+        </array>\n+      </dict>\n+    </dict>\n+  </array>\n+\n+  <key>CFBundleDocumentTypes</key>\n+  <array>\n+    <dict>\n+      <key>CFBundleTypeRole</key>\n+      <string>Editor</string>\n+      <key>LSItemContentTypes</key>\n+      <array>\n+        <string>org.bitcoin.paymentrequest</string>\n+      </array>\n+      <key>LSHandlerRank</key>\n+      <string>Owner</string>\n+    </dict>\n+  </array>\n+  <key>NSHighResolutionCapable</key>\n+  <true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "c9a96b21fea7956221b918c5f31032910f6ad49e",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -6,6 +6,7 @@\n from subprocess import Popen, PIPE\n import glob\n import operator\n+import os\n \n OUT_CPP=\"src/qt/bitcoinstrings.cpp\"\n EMPTY=['\"\"']\n@@ -49,7 +50,8 @@ def parse_po(text):\n files = glob.glob('src/*.cpp') + glob.glob('src/*.h') \n \n # xgettext -n --keyword=_ $FILES\n-child = Popen(['xgettext','--output=-','-n','--keyword=_'] + files, stdout=PIPE)\n+XGETTEXT=os.getenv('XGETTEXT', 'xgettext')\n+child = Popen([XGETTEXT,'--output=-','-n','--keyword=_'] + files, stdout=PIPE)\n (out, err) = child.communicate()\n \n messages = parse_po(out) "
      },
      {
        "sha": "865fe865550ae21f2eec4bb7c8f8c1817bdf1bce",
        "filename": "share/qt/protobuf.pri",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/share/qt/protobuf.pri",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/share/qt/protobuf.pri",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/protobuf.pri?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,35 @@\n+# Based on: http://code.google.com/p/ostinato/source/browse/protobuf.pri\n+#\n+# Qt qmake integration with Google Protocol Buffers compiler protoc\n+#\n+# To compile protocol buffers with qt qmake, specify PROTOS variable and\n+# include this file\n+#\n+# Example:\n+# PROTOS = a.proto b.proto\n+# include(protobuf.pri)\n+#\n+# Set PROTO_PATH if you need to set the protoc --proto_path search path\n+# Set PROTOC to the path to the protoc compiler if it is not in your $PATH\n+#\n+\n+isEmpty(PROTO_DIR):PROTO_DIR = .\n+isEmpty(PROTOC):PROTOC = protoc\n+\n+PROTOPATHS =\n+for(p, PROTO_PATH):PROTOPATHS += --proto_path=$${p}\n+\n+protobuf_decl.name  = protobuf header\n+protobuf_decl.input = PROTOS\n+protobuf_decl.output  = $${PROTO_DIR}/${QMAKE_FILE_BASE}.pb.h\n+protobuf_decl.commands = $${PROTOC} --cpp_out=\"$${PROTO_DIR}\" $${PROTOPATHS} --proto_path=${QMAKE_FILE_IN_PATH} ${QMAKE_FILE_NAME}\n+protobuf_decl.variable_out = GENERATED_FILES\n+QMAKE_EXTRA_COMPILERS += protobuf_decl\n+\n+protobuf_impl.name  = protobuf implementation\n+protobuf_impl.input = PROTOS\n+protobuf_impl.output  = $${PROTO_DIR}/${QMAKE_FILE_BASE}.pb.cc\n+protobuf_impl.depends  = $${PROTO_DIR}/${QMAKE_FILE_BASE}.pb.h\n+protobuf_impl.commands = $$escape_expand(\\\\n)\n+protobuf_impl.variable_out = GENERATED_SOURCES\n+QMAKE_EXTRA_COMPILERS += protobuf_impl"
      },
      {
        "sha": "dd378623823a7b4280edeb7e3f67a291003b9d81",
        "filename": "share/setup.nsi.in",
        "status": "renamed",
        "additions": 162,
        "deletions": 162,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,162 +1,162 @@\n-Name Bitcoin\r\n-\r\n-RequestExecutionLevel highest\r\n-SetCompressor /SOLID lzma\r\n-\r\n-# General Symbol Definitions\r\n-!define REGKEY \"SOFTWARE\\$(^Name)\"\r\n-!define VERSION 0.8.2\r\n-!define COMPANY \"Bitcoin project\"\r\n-!define URL http://www.bitcoin.org/\r\n-\r\n-# MUI Symbol Definitions\r\n-!define MUI_ICON \"../share/pixmaps/bitcoin.ico\"\r\n-!define MUI_WELCOMEFINISHPAGE_BITMAP \"../share/pixmaps/nsis-wizard.bmp\"\r\n-!define MUI_HEADERIMAGE\r\n-!define MUI_HEADERIMAGE_RIGHT\r\n-!define MUI_HEADERIMAGE_BITMAP \"../share/pixmaps/nsis-header.bmp\"\r\n-!define MUI_FINISHPAGE_NOAUTOCLOSE\r\n-!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM\r\n-!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\r\n-!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\r\n-!define MUI_STARTMENUPAGE_DEFAULTFOLDER Bitcoin\r\n-!define MUI_FINISHPAGE_RUN $INSTDIR\\bitcoin-qt.exe\r\n-!define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\r\n-!define MUI_UNWELCOMEFINISHPAGE_BITMAP \"../share/pixmaps/nsis-wizard.bmp\"\r\n-!define MUI_UNFINISHPAGE_NOAUTOCLOSE\r\n-\r\n-# Included files\r\n-!include Sections.nsh\r\n-!include MUI2.nsh\r\n-\r\n-# Variables\r\n-Var StartMenuGroup\r\n-\r\n-# Installer pages\r\n-!insertmacro MUI_PAGE_WELCOME\r\n-!insertmacro MUI_PAGE_DIRECTORY\r\n-!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup\r\n-!insertmacro MUI_PAGE_INSTFILES\r\n-!insertmacro MUI_PAGE_FINISH\r\n-!insertmacro MUI_UNPAGE_CONFIRM\r\n-!insertmacro MUI_UNPAGE_INSTFILES\r\n-\r\n-# Installer languages\r\n-!insertmacro MUI_LANGUAGE English\r\n-\r\n-# Installer attributes\r\n-OutFile bitcoin-0.8.2-win32-setup.exe\r\n-InstallDir $PROGRAMFILES\\Bitcoin\r\n-CRCCheck on\r\n-XPStyle on\r\n-BrandingText \" \"\r\n-ShowInstDetails show\r\n-VIProductVersion 0.8.2.2\r\n-VIAddVersionKey ProductName Bitcoin\r\n-VIAddVersionKey ProductVersion \"${VERSION}\"\r\n-VIAddVersionKey CompanyName \"${COMPANY}\"\r\n-VIAddVersionKey CompanyWebsite \"${URL}\"\r\n-VIAddVersionKey FileVersion \"${VERSION}\"\r\n-VIAddVersionKey FileDescription \"\"\r\n-VIAddVersionKey LegalCopyright \"\"\r\n-InstallDirRegKey HKCU \"${REGKEY}\" Path\r\n-ShowUninstDetails show\r\n-\r\n-# Installer sections\r\n-Section -Main SEC0000\r\n-    SetOutPath $INSTDIR\r\n-    SetOverwrite on\r\n-    File ../release/bitcoin-qt.exe\r\n-    File /oname=COPYING.txt ../COPYING\r\n-    File /oname=readme.txt ../doc/README_windows.txt\r\n-    SetOutPath $INSTDIR\\daemon\r\n-    File ../src/bitcoind.exe\r\n-    SetOutPath $INSTDIR\\src\r\n-    File /r /x *.exe /x *.o ../src\\*.*\r\n-    SetOutPath $INSTDIR\r\n-    WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\r\n-\r\n-    # Remove old wxwidgets-based-bitcoin executable and locales:\r\n-    Delete /REBOOTOK $INSTDIR\\bitcoin.exe\r\n-    RMDir /r /REBOOTOK $INSTDIR\\locale\r\n-SectionEnd\r\n-\r\n-Section -post SEC0001\r\n-    WriteRegStr HKCU \"${REGKEY}\" Path $INSTDIR\r\n-    SetOutPath $INSTDIR\r\n-    WriteUninstaller $INSTDIR\\uninstall.exe\r\n-    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\r\n-    CreateDirectory $SMPROGRAMS\\$StartMenuGroup\r\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\" $INSTDIR\\bitcoin-qt.exe\r\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\" $INSTDIR\\uninstall.exe\r\n-    !insertmacro MUI_STARTMENU_WRITE_END\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"${VERSION}\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" Publisher \"${COMPANY}\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" URLInfoAbout \"${URL}\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\uninstall.exe\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\r\n-    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\r\n-    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\r\n-    WriteRegStr HKCR \"bitcoin\" \"URL Protocol\" \"\"\r\n-    WriteRegStr HKCR \"bitcoin\" \"\" \"URL:Bitcoin\"\r\n-    WriteRegStr HKCR \"bitcoin\\DefaultIcon\" \"\" $INSTDIR\\bitcoin-qt.exe\r\n-    WriteRegStr HKCR \"bitcoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\bitcoin-qt.exe\" \"%1\"'\r\n-SectionEnd\r\n-\r\n-# Macro for selecting uninstaller sections\r\n-!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID\r\n-    Push $R0\r\n-    ReadRegStr $R0 HKCU \"${REGKEY}\\Components\" \"${SECTION_NAME}\"\r\n-    StrCmp $R0 1 0 next${UNSECTION_ID}\r\n-    !insertmacro SelectSection \"${UNSECTION_ID}\"\r\n-    GoTo done${UNSECTION_ID}\r\n-next${UNSECTION_ID}:\r\n-    !insertmacro UnselectSection \"${UNSECTION_ID}\"\r\n-done${UNSECTION_ID}:\r\n-    Pop $R0\r\n-!macroend\r\n-\r\n-# Uninstaller sections\r\n-Section /o -un.Main UNSEC0000\r\n-    Delete /REBOOTOK $INSTDIR\\bitcoin-qt.exe\r\n-    Delete /REBOOTOK $INSTDIR\\COPYING.txt\r\n-    Delete /REBOOTOK $INSTDIR\\readme.txt\r\n-    RMDir /r /REBOOTOK $INSTDIR\\daemon\r\n-    RMDir /r /REBOOTOK $INSTDIR\\src\r\n-    DeleteRegValue HKCU \"${REGKEY}\\Components\" Main\r\n-SectionEnd\r\n-\r\n-Section -un.post UNSEC0001\r\n-    DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\r\n-    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\"\r\n-    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\"\r\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\r\n-    Delete /REBOOTOK $INSTDIR\\uninstall.exe\r\n-    Delete /REBOOTOK $INSTDIR\\debug.log\r\n-    Delete /REBOOTOK $INSTDIR\\db.log\r\n-    DeleteRegValue HKCU \"${REGKEY}\" StartMenuGroup\r\n-    DeleteRegValue HKCU \"${REGKEY}\" Path\r\n-    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\\Components\"\r\n-    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\"\r\n-    DeleteRegKey HKCR \"bitcoin\"\r\n-    RmDir /REBOOTOK $SMPROGRAMS\\$StartMenuGroup\r\n-    RmDir /REBOOTOK $INSTDIR\r\n-    Push $R0\r\n-    StrCpy $R0 $StartMenuGroup 1\r\n-    StrCmp $R0 \">\" no_smgroup\r\n-no_smgroup:\r\n-    Pop $R0\r\n-SectionEnd\r\n-\r\n-# Installer functions\r\n-Function .onInit\r\n-    InitPluginsDir\r\n-FunctionEnd\r\n-\r\n-# Uninstaller functions\r\n-Function un.onInit\r\n-    ReadRegStr $INSTDIR HKCU \"${REGKEY}\" Path\r\n-    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuGroup\r\n-    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}\r\n-FunctionEnd\r\n+Name @PACKAGE_NAME@\n+\n+RequestExecutionLevel highest\n+SetCompressor /SOLID lzma\n+\n+# General Symbol Definitions\n+!define REGKEY \"SOFTWARE\\$(^Name)\"\n+!define VERSION @CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@\n+!define COMPANY \"Bitcoin project\"\n+!define URL http://www.bitcoin.org/\n+\n+# MUI Symbol Definitions\n+!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/bitcoin.ico\"\n+!define MUI_WELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n+!define MUI_HEADERIMAGE\n+!define MUI_HEADERIMAGE_RIGHT\n+!define MUI_HEADERIMAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-header.bmp\"\n+!define MUI_FINISHPAGE_NOAUTOCLOSE\n+!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM\n+!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\n+!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\n+!define MUI_STARTMENUPAGE_DEFAULTFOLDER @PACKAGE_NAME@\n+!define MUI_FINISHPAGE_RUN $INSTDIR\\bitcoin-qt.exe\n+!define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\n+!define MUI_UNWELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n+!define MUI_UNFINISHPAGE_NOAUTOCLOSE\n+\n+# Included files\n+!include Sections.nsh\n+!include MUI2.nsh\n+\n+# Variables\n+Var StartMenuGroup\n+\n+# Installer pages\n+!insertmacro MUI_PAGE_WELCOME\n+!insertmacro MUI_PAGE_DIRECTORY\n+!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup\n+!insertmacro MUI_PAGE_INSTFILES\n+!insertmacro MUI_PAGE_FINISH\n+!insertmacro MUI_UNPAGE_CONFIRM\n+!insertmacro MUI_UNPAGE_INSTFILES\n+\n+# Installer languages\n+!insertmacro MUI_LANGUAGE English\n+\n+# Installer attributes\n+OutFile @abs_top_srcdir@/bitcoin-${VERSION}-win32-setup.exe\n+InstallDir $PROGRAMFILES\\Bitcoin\n+CRCCheck on\n+XPStyle on\n+BrandingText \" \"\n+ShowInstDetails show\n+VIProductVersion ${VERSION}.@CLIENT_VERSION_BUILD@\n+VIAddVersionKey ProductName Bitcoin\n+VIAddVersionKey ProductVersion \"${VERSION}\"\n+VIAddVersionKey CompanyName \"${COMPANY}\"\n+VIAddVersionKey CompanyWebsite \"${URL}\"\n+VIAddVersionKey FileVersion \"${VERSION}\"\n+VIAddVersionKey FileDescription \"\"\n+VIAddVersionKey LegalCopyright \"\"\n+InstallDirRegKey HKCU \"${REGKEY}\" Path\n+ShowUninstDetails show\n+\n+# Installer sections\n+Section -Main SEC0000\n+    SetOutPath $INSTDIR\n+    SetOverwrite on\n+    File @abs_top_srcdir@/release/bitcoin-qt.exe\n+    File /oname=COPYING.txt @abs_top_srcdir@/COPYING\n+    File /oname=readme.txt @abs_top_srcdir@/doc/README_windows.txt\n+    SetOutPath $INSTDIR\\daemon\n+    File @abs_top_srcdir@/release/bitcoind.exe\n+    SetOutPath $INSTDIR\\src\n+    File /r @abs_top_srcdir@/@PACKAGE@-@VERSION@/src\\*.*\n+    SetOutPath $INSTDIR\n+    WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\n+\n+    # Remove old wxwidgets-based-bitcoin executable and locales:\n+    Delete /REBOOTOK $INSTDIR\\bitcoin.exe\n+    RMDir /r /REBOOTOK $INSTDIR\\locale\n+SectionEnd\n+\n+Section -post SEC0001\n+    WriteRegStr HKCU \"${REGKEY}\" Path $INSTDIR\n+    SetOutPath $INSTDIR\n+    WriteUninstaller $INSTDIR\\uninstall.exe\n+    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\n+    CreateDirectory $SMPROGRAMS\\$StartMenuGroup\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\" $INSTDIR\\bitcoin-qt.exe\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\" $INSTDIR\\uninstall.exe\n+    !insertmacro MUI_STARTMENU_WRITE_END\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"${VERSION}\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" Publisher \"${COMPANY}\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" URLInfoAbout \"${URL}\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\uninstall.exe\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\n+    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n+    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n+    WriteRegStr HKCR \"bitcoin\" \"URL Protocol\" \"\"\n+    WriteRegStr HKCR \"bitcoin\" \"\" \"URL:Bitcoin\"\n+    WriteRegStr HKCR \"bitcoin\\DefaultIcon\" \"\" $INSTDIR\\bitcoin-qt.exe\n+    WriteRegStr HKCR \"bitcoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\bitcoin-qt.exe\" \"%1\"'\n+SectionEnd\n+\n+# Macro for selecting uninstaller sections\n+!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID\n+    Push $R0\n+    ReadRegStr $R0 HKCU \"${REGKEY}\\Components\" \"${SECTION_NAME}\"\n+    StrCmp $R0 1 0 next${UNSECTION_ID}\n+    !insertmacro SelectSection \"${UNSECTION_ID}\"\n+    GoTo done${UNSECTION_ID}\n+next${UNSECTION_ID}:\n+    !insertmacro UnselectSection \"${UNSECTION_ID}\"\n+done${UNSECTION_ID}:\n+    Pop $R0\n+!macroend\n+\n+# Uninstaller sections\n+Section /o -un.Main UNSEC0000\n+    Delete /REBOOTOK $INSTDIR\\bitcoin-qt.exe\n+    Delete /REBOOTOK $INSTDIR\\COPYING.txt\n+    Delete /REBOOTOK $INSTDIR\\readme.txt\n+    RMDir /r /REBOOTOK $INSTDIR\\daemon\n+    RMDir /r /REBOOTOK $INSTDIR\\src\n+    DeleteRegValue HKCU \"${REGKEY}\\Components\" Main\n+SectionEnd\n+\n+Section -un.post UNSEC0001\n+    DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n+    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK $INSTDIR\\uninstall.exe\n+    Delete /REBOOTOK $INSTDIR\\debug.log\n+    Delete /REBOOTOK $INSTDIR\\db.log\n+    DeleteRegValue HKCU \"${REGKEY}\" StartMenuGroup\n+    DeleteRegValue HKCU \"${REGKEY}\" Path\n+    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\\Components\"\n+    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\"\n+    DeleteRegKey HKCR \"bitcoin\"\n+    RmDir /REBOOTOK $SMPROGRAMS\\$StartMenuGroup\n+    RmDir /REBOOTOK $INSTDIR\n+    Push $R0\n+    StrCpy $R0 $StartMenuGroup 1\n+    StrCmp $R0 \">\" no_smgroup\n+no_smgroup:\n+    Pop $R0\n+SectionEnd\n+\n+# Installer functions\n+Function .onInit\n+    InitPluginsDir\n+FunctionEnd\n+\n+# Uninstaller functions\n+Function un.onInit\n+    ReadRegStr $INSTDIR HKCU \"${REGKEY}\" Path\n+    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuGroup\n+    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}\n+FunctionEnd",
        "previous_filename": "share/setup.nsi"
      },
      {
        "sha": "c45f62adf5df873265466780afef4dae33512871",
        "filename": "src/.gitignore",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.gitignore?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,3 @@\n+\n+test_bitcoin\n+"
      },
      {
        "sha": "c0687ae2e68edb794580a07233aef33fb15b4d12",
        "filename": "src/Makefile.am",
        "status": "added",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,78 @@\n+include Makefile.include\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src/leveldb/helpers \\\n+  -I$(builddir) $(BOOST_INCLUDES) $(BDB_CPPFLAGS)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+\n+noinst_LIBRARIES = libbitcoin.a\n+\n+bin_PROGRAMS = bitcoind\n+\n+SUBDIRS = . $(BUILD_QT) $(BUILD_TEST)\n+DIST_SUBDIRS = . qt test\n+.PHONY: FORCE\n+# bitcoin core #\n+BITCOIN_CORE_H = addrman.h alert.h allocators.h base58.h bignum.h \\\n+  bitcoinrpc.h bloom.h chainparams.h checkpoints.h checkqueue.h \\\n+  clientversion.h compat.h core.h crypter.h db.h hash.h init.h \\\n+  key.h keystore.h leveldb.h limitedmap.h main.h miner.h mruset.h \\\n+  netbase.h net.h protocol.h script.h serialize.h sync.h threadsafety.h \\\n+  txdb.h ui_interface.h uint256.h util.h version.h walletdb.h wallet.h\n+\n+JSON_H = json/json_spirit.h json/json_spirit_error_position.h \\\n+  json/json_spirit_reader.h json/json_spirit_reader_template.h \\\n+  json/json_spirit_stream_reader.h json/json_spirit_utils.h \\\n+  json/json_spirit_value.h json/json_spirit_writer.h \\\n+  json/json_spirit_writer_template.h\n+\n+obj/build.h: FORCE\n+\t@$(MKDIR_P) $(abs_top_builddir)/src/obj\n+\t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n+\t  $(abs_top_srcdir)\n+version.o: obj/build.h\n+\n+libbitcoin_a_SOURCES = addrman.cpp alert.cpp bitcoinrpc.cpp bloom.cpp \\\n+  chainparams.cpp checkpoints.cpp core.cpp crypter.cpp db.cpp hash.cpp \\\n+  init.cpp key.cpp keystore.cpp leveldb.cpp main.cpp miner.cpp \\\n+  netbase.cpp net.cpp noui.cpp protocol.cpp rpcblockchain.cpp rpcdump.cpp \\\n+  rpcmining.cpp rpcnet.cpp rpcrawtransaction.cpp rpcwallet.cpp script.cpp \\\n+  sync.cpp txdb.cpp util.cpp version.cpp wallet.cpp walletdb.cpp $(JSON_H) \\\n+  $(BITCOIN_CORE_H)\n+\n+nodist_libbitcoin_a_SOURCES = $(top_srcdir)/src/obj/build.h\n+#\n+\n+# bitcoind binary #\n+bitcoind_LDADD = libbitcoin.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n+  $(BOOST_LIBS)\n+bitcoind_SOURCES = bitcoind.cpp\n+#\n+\n+if TARGET_WINDOWS\n+bitcoind_SOURCES += bitcoind-res.rc\n+endif\n+\n+AM_CPPFLAGS += $(BDB_CPPFLAGS)\n+bitcoind_LDADD += $(BDB_LIBS)\n+\n+leveldb/libleveldb.a: leveldb/libmemenv.a\n+\n+leveldb/%.a:\n+\t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n+\t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n+\t  OPT=\"$(CXXFLAGS) $(CPPFLAGS)\"\n+\n+qt/bitcoinstrings.cpp: $(libbitcoin_a_SOURCES)\n+\t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n+\t@cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py\n+\n+CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n+\n+DISTCLEANFILES = obj/build.h\n+\n+EXTRA_DIST = leveldb Makefile.include\n+\n+clean-local:\n+\t-$(MAKE) -C leveldb clean\n+\trm -f leveldb/port/*.gcno leveldb/db/*.gcno leveldb/table/*.gcno leveldb/helpers/*.gcno\n+\trm -f leveldb/util/*.gcno leveldb/helpers/memenv/*.gcno"
      },
      {
        "sha": "352471061d3394d52546470d5d4201087243a144",
        "filename": "src/Makefile.include",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,65 @@\n+# Helper for rules and subdir Makefiles to find parent targets.\n+# Flags and other non-target variables should not be set here.\n+\n+LIBBITCOIN=$(top_builddir)/src/libbitcoin.a\n+LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n+LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n+LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n+\n+$(LIBBITCOIN):\n+\t$(MAKE) -C $(top_builddir)/src $(@F)\n+\n+$(LIBLEVELDB) $(LIBMEMENV):\n+\t$(MAKE) -C $(top_builddir)/src leveldb/$(@F)\n+\n+$(LIBBITCOINQT):\n+\t$(MAKE) -C $(top_builddir)/src/qt $(@F)\n+\n+.mm.o:\n+\t$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\n+.rc.o:\n+\t@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \\\n+          echo error: could not build $@\n+\n+ui_%.h: %.ui\n+\t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n+\t@test -f $(UIC) && $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n+\t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n+\t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n+\n+%.moc: %.cpp\n+\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n+\t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n+\n+moc_%.cpp: %.h\n+\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n+\t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n+\n+%.qm: %.ts\n+\t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n+\t@test -f $(LRELEASE) && $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n+\t echo error: could not build $(abs_builddir)/$@\n+\n+%.pb.cc %.pb.h: %.proto\n+\ttest -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \\\n+\t  echo error: could not build $@\n+\n+%.json.h: %.json\n+\t@$(MKDIR_P) $(@D)\n+\t@echo \"namespace json_tests{\" > $@\n+\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n+\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n+\t@echo \"};};\" >> $@\n+\t@echo \"Generated $@\"\n+\n+%.raw.h: %.raw\n+\t@$(MKDIR_P) $(@D)\n+\t@echo \"namespace alert_tests{\" > $@\n+\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n+\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n+\t@echo \"};};\" >> $@\n+\t@echo \"Generated $@\""
      },
      {
        "sha": "731ff2abed33b78f3f89b595dd8c191dc4024a95",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -261,8 +261,6 @@ void CAddrMan::MakeTried(CAddrInfo& info, int nId, int nOrigin)\n \n void CAddrMan::Good_(const CService &addr, int64 nTime)\n {\n-//    printf(\"Good: addr=%s\\n\", addr.ToString().c_str());\n-\n     int nId;\n     CAddrInfo *pinfo = Find(addr, &nId);\n \n@@ -304,7 +302,7 @@ void CAddrMan::Good_(const CService &addr, int64 nTime)\n     // TODO: maybe re-add the node, but for now, just bail out\n     if (nUBucket == -1) return;\n \n-    printf(\"Moving %s to tried\\n\", addr.ToString().c_str());\n+    LogPrint(\"addrman\", \"Moving %s to tried\\n\", addr.ToString().c_str());\n \n     // move nId to the tried tables\n     MakeTried(info, nId, nUBucket);\n@@ -351,7 +349,6 @@ bool CAddrMan::Add_(const CAddress &addr, const CNetAddr& source, int64 nTimePen\n     } else {\n         pinfo = Create(addr, source, &nId);\n         pinfo->nTime = max((int64)0, (int64)pinfo->nTime - nTimePenalty);\n-//        printf(\"Added %s [nTime=%fhr]\\n\", pinfo->ToString().c_str(), (GetAdjustedTime() - pinfo->nTime) / 3600.0);\n         nNew++;\n         fNew = true;\n     }"
      },
      {
        "sha": "081543ace40e9a50dd02f10967e0c813a8e81180",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -403,7 +403,7 @@ class CAddrMan\n             LOCK(cs);\n             int err;\n             if ((err=Check_()))\n-                printf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n+                LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n         }\n #endif\n     }\n@@ -419,7 +419,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            printf(\"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addr\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n         return fRet;\n     }\n \n@@ -435,7 +435,7 @@ class CAddrMan\n             Check();\n         }\n         if (nAdd)\n-            printf(\"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addr\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "c9cde179551d309f97b21c004e8f09e233862423",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -19,9 +19,6 @@ using namespace std;\n map<uint256, CAlert> mapAlerts;\n CCriticalSection cs_mapAlerts;\n \n-static const char* pszMainKey = \"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\";\n-static const char* pszTestKey = \"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\";\n-\n void CUnsignedAlert::SetNull()\n {\n     nVersion = 1;\n@@ -79,7 +76,7 @@ std::string CUnsignedAlert::ToString() const\n \n void CUnsignedAlert::print() const\n {\n-    printf(\"%s\", ToString().c_str());\n+    LogPrintf(\"%s\", ToString().c_str());\n }\n \n void CAlert::SetNull()\n@@ -144,7 +141,7 @@ bool CAlert::RelayTo(CNode* pnode) const\n \n bool CAlert::CheckSignature() const\n {\n-    CPubKey key(ParseHex(fTestNet ? pszTestKey : pszMainKey));\n+    CPubKey key(Params().AlertKey());\n     if (!key.Verify(Hash(vchMsg.begin(), vchMsg.end()), vchSig))\n         return error(\"CAlert::CheckSignature() : verify signature failed\");\n \n@@ -203,13 +200,13 @@ bool CAlert::ProcessAlert(bool fThread)\n             const CAlert& alert = (*mi).second;\n             if (Cancels(alert))\n             {\n-                printf(\"cancelling alert %d\\n\", alert.nID);\n+                LogPrint(\"alert\", \"cancelling alert %d\\n\", alert.nID);\n                 uiInterface.NotifyAlertChanged((*mi).first, CT_DELETED);\n                 mapAlerts.erase(mi++);\n             }\n             else if (!alert.IsInEffect())\n             {\n-                printf(\"expiring alert %d\\n\", alert.nID);\n+                LogPrint(\"alert\", \"expiring alert %d\\n\", alert.nID);\n                 uiInterface.NotifyAlertChanged((*mi).first, CT_DELETED);\n                 mapAlerts.erase(mi++);\n             }\n@@ -223,7 +220,7 @@ bool CAlert::ProcessAlert(bool fThread)\n             const CAlert& alert = item.second;\n             if (alert.Cancels(*this))\n             {\n-                printf(\"alert already cancelled by %d\\n\", alert.nID);\n+                LogPrint(\"alert\", \"alert already cancelled by %d\\n\", alert.nID);\n                 return false;\n             }\n         }\n@@ -261,6 +258,6 @@ bool CAlert::ProcessAlert(bool fThread)\n         }\n     }\n \n-    printf(\"accepted alert %d, AppliesToMe()=%d\\n\", nID, AppliesToMe());\n+    LogPrint(\"alert\", \"accepted alert %d, AppliesToMe()=%d\\n\", nID, AppliesToMe());\n     return true;\n }"
      },
      {
        "sha": "aabae8de88e7ec48519deb749e57698eeeb8a242",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 65,
        "deletions": 100,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -18,6 +18,7 @@\n #include <string>\n #include <vector>\n \n+#include \"chainparams.h\"\n #include \"bignum.h\"\n #include \"key.h\"\n #include \"script.h\"\n@@ -176,47 +177,47 @@ inline bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>\n class CBase58Data\n {\n protected:\n-    // the version byte\n-    unsigned char nVersion;\n+    // the version byte(s)\n+    std::vector<unsigned char> vchVersion;\n \n     // the actually encoded data\n     typedef std::vector<unsigned char, zero_after_free_allocator<unsigned char> > vector_uchar;\n     vector_uchar vchData;\n \n     CBase58Data()\n     {\n-        nVersion = 0;\n+        vchVersion.clear();\n         vchData.clear();\n     }\n \n-    void SetData(int nVersionIn, const void* pdata, size_t nSize)\n+    void SetData(const std::vector<unsigned char> &vchVersionIn, const void* pdata, size_t nSize)\n     {\n-        nVersion = nVersionIn;\n+        vchVersion = vchVersionIn;\n         vchData.resize(nSize);\n         if (!vchData.empty())\n             memcpy(&vchData[0], pdata, nSize);\n     }\n \n-    void SetData(int nVersionIn, const unsigned char *pbegin, const unsigned char *pend)\n+    void SetData(const std::vector<unsigned char> &vchVersionIn, const unsigned char *pbegin, const unsigned char *pend)\n     {\n-        SetData(nVersionIn, (void*)pbegin, pend - pbegin);\n+        SetData(vchVersionIn, (void*)pbegin, pend - pbegin);\n     }\n \n public:\n-    bool SetString(const char* psz)\n+    bool SetString(const char* psz, unsigned int nVersionBytes = 1)\n     {\n         std::vector<unsigned char> vchTemp;\n         DecodeBase58Check(psz, vchTemp);\n-        if (vchTemp.empty())\n+        if (vchTemp.size() < nVersionBytes)\n         {\n             vchData.clear();\n-            nVersion = 0;\n+            vchVersion.clear();\n             return false;\n         }\n-        nVersion = vchTemp[0];\n-        vchData.resize(vchTemp.size() - 1);\n+        vchVersion.assign(vchTemp.begin(), vchTemp.begin() + nVersionBytes);\n+        vchData.resize(vchTemp.size() - nVersionBytes);\n         if (!vchData.empty())\n-            memcpy(&vchData[0], &vchTemp[1], vchData.size());\n+            memcpy(&vchData[0], &vchTemp[nVersionBytes], vchData.size());\n         OPENSSL_cleanse(&vchTemp[0], vchData.size());\n         return true;\n     }\n@@ -228,15 +229,15 @@ class CBase58Data\n \n     std::string ToString() const\n     {\n-        std::vector<unsigned char> vch(1, nVersion);\n+        std::vector<unsigned char> vch = vchVersion;\n         vch.insert(vch.end(), vchData.begin(), vchData.end());\n         return EncodeBase58Check(vch);\n     }\n \n     int CompareTo(const CBase58Data& b58) const\n     {\n-        if (nVersion < b58.nVersion) return -1;\n-        if (nVersion > b58.nVersion) return  1;\n+        if (vchVersion < b58.vchVersion) return -1;\n+        if (vchVersion > b58.vchVersion) return  1;\n         if (vchData < b58.vchData)   return -1;\n         if (vchData > b58.vchData)   return  1;\n         return 0;\n@@ -270,21 +271,13 @@ class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n class CBitcoinAddress : public CBase58Data\n {\n public:\n-    enum\n-    {\n-        PUBKEY_ADDRESS = 0,\n-        SCRIPT_ADDRESS = 5,\n-        PUBKEY_ADDRESS_TEST = 111,\n-        SCRIPT_ADDRESS_TEST = 196,\n-    };\n-\n     bool Set(const CKeyID &id) {\n-        SetData(fTestNet ? PUBKEY_ADDRESS_TEST : PUBKEY_ADDRESS, &id, 20);\n+        SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n         return true;\n     }\n \n     bool Set(const CScriptID &id) {\n-        SetData(fTestNet ? SCRIPT_ADDRESS_TEST : SCRIPT_ADDRESS, &id, 20);\n+        SetData(Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS), &id, 20);\n         return true;\n     }\n \n@@ -295,32 +288,10 @@ class CBitcoinAddress : public CBase58Data\n \n     bool IsValid() const\n     {\n-        unsigned int nExpectedSize = 20;\n-        bool fExpectTestNet = false;\n-        switch(nVersion)\n-        {\n-            case PUBKEY_ADDRESS:\n-                nExpectedSize = 20; // Hash of public key\n-                fExpectTestNet = false;\n-                break;\n-            case SCRIPT_ADDRESS:\n-                nExpectedSize = 20; // Hash of CScript\n-                fExpectTestNet = false;\n-                break;\n-\n-            case PUBKEY_ADDRESS_TEST:\n-                nExpectedSize = 20;\n-                fExpectTestNet = true;\n-                break;\n-            case SCRIPT_ADDRESS_TEST:\n-                nExpectedSize = 20;\n-                fExpectTestNet = true;\n-                break;\n-\n-            default:\n-                return false;\n-        }\n-        return fExpectTestNet == fTestNet && vchData.size() == nExpectedSize;\n+        bool fCorrectSize = vchData.size() == 20;\n+        bool fKnownVersion = vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n+                             vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+        return fCorrectSize && fKnownVersion;\n     }\n \n     CBitcoinAddress()\n@@ -345,48 +316,27 @@ class CBitcoinAddress : public CBase58Data\n     CTxDestination Get() const {\n         if (!IsValid())\n             return CNoDestination();\n-        switch (nVersion) {\n-        case PUBKEY_ADDRESS:\n-        case PUBKEY_ADDRESS_TEST: {\n-            uint160 id;\n-            memcpy(&id, &vchData[0], 20);\n+        uint160 id;\n+        memcpy(&id, &vchData[0], 20);\n+        if (vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n             return CKeyID(id);\n-        }\n-        case SCRIPT_ADDRESS:\n-        case SCRIPT_ADDRESS_TEST: {\n-            uint160 id;\n-            memcpy(&id, &vchData[0], 20);\n+        else if (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS))\n             return CScriptID(id);\n-        }\n-        }\n-        return CNoDestination();\n+        else\n+            return CNoDestination();\n     }\n \n     bool GetKeyID(CKeyID &keyID) const {\n-        if (!IsValid())\n+        if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n             return false;\n-        switch (nVersion) {\n-        case PUBKEY_ADDRESS:\n-        case PUBKEY_ADDRESS_TEST: {\n-            uint160 id;\n-            memcpy(&id, &vchData[0], 20);\n-            keyID = CKeyID(id);\n-            return true;\n-        }\n-        default: return false;\n-        }\n+        uint160 id;\n+        memcpy(&id, &vchData[0], 20);\n+        keyID = CKeyID(id);\n+        return true;\n     }\n \n     bool IsScript() const {\n-        if (!IsValid())\n-            return false;\n-        switch (nVersion) {\n-        case SCRIPT_ADDRESS:\n-        case SCRIPT_ADDRESS_TEST: {\n-            return true;\n-        }\n-        default: return false;\n-        }\n+        return IsValid() && vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n     }\n };\n \n@@ -401,7 +351,7 @@ class CBitcoinSecret : public CBase58Data\n     void SetKey(const CKey& vchSecret)\n     {\n         assert(vchSecret.IsValid());\n-        SetData(fTestNet ? 239 : 128, vchSecret.begin(), vchSecret.size());\n+        SetData(Params().Base58Prefix(CChainParams::SECRET_KEY), vchSecret.begin(), vchSecret.size());\n         if (vchSecret.IsCompressed())\n             vchData.push_back(1);\n     }\n@@ -415,20 +365,9 @@ class CBitcoinSecret : public CBase58Data\n \n     bool IsValid() const\n     {\n-        bool fExpectTestNet = false;\n-        switch(nVersion)\n-        {\n-            case 128:\n-                break;\n-\n-            case 239:\n-                fExpectTestNet = true;\n-                break;\n-\n-            default:\n-                return false;\n-        }\n-        return fExpectTestNet == fTestNet && (vchData.size() == 32 || (vchData.size() == 33 && vchData[32] == 1));\n+        bool fExpectedFormat = vchData.size() == 32 || (vchData.size() == 33 && vchData[32] == 1);\n+        bool fCorrectVersion = vchVersion == Params().Base58Prefix(CChainParams::SECRET_KEY);\n+        return fExpectedFormat && fCorrectVersion;\n     }\n \n     bool SetString(const char* pszSecret)\n@@ -451,4 +390,30 @@ class CBitcoinSecret : public CBase58Data\n     }\n };\n \n+\n+template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtKeyBase : public CBase58Data\n+{\n+public:\n+    void SetKey(const K &key) {\n+        unsigned char vch[Size];\n+        key.Encode(vch);\n+        SetData(Params().Base58Prefix(Type), vch, vch+Size);\n+    }\n+\n+    K GetKey() {\n+        K ret;\n+        ret.Decode(&vchData[0], &vchData[Size]);\n+        return ret;\n+    }\n+\n+    CBitcoinExtKeyBase(const K &key) {\n+        SetKey(key);\n+    }\n+\n+    CBitcoinExtKeyBase() {}\n+};\n+\n+typedef CBitcoinExtKeyBase<CExtKey, 74, CChainParams::EXT_SECRET_KEY> CBitcoinExtKey;\n+typedef CBitcoinExtKeyBase<CExtPubKey, 74, CChainParams::EXT_PUBLIC_KEY> CBitcoinExtPubKey;\n+\n #endif // BITCOIN_BASE58_H"
      },
      {
        "sha": "202b7ab352a2317264c65cde2ba8b8a123324635",
        "filename": "src/bitcoind-res.rc",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoind-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoind-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind-res.rc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,36 @@\n+#include <windows.h>             // needed for VERSIONINFO\n+#include \"clientversion.h\"       // holds the needed client version information\n+\n+#define VER_PRODUCTVERSION     CLIENT_VERSION_MAJOR,CLIENT_VERSION_MINOR,CLIENT_VERSION_REVISION,CLIENT_VERSION_BUILD\n+#define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n+#define VER_FILEVERSION        VER_PRODUCTVERSION\n+#define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n+#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin developers\"\n+\n+VS_VERSION_INFO VERSIONINFO\n+FILEVERSION     VER_FILEVERSION\n+PRODUCTVERSION  VER_PRODUCTVERSION\n+FILEOS          VOS_NT_WINDOWS32\n+FILETYPE        VFT_APP\n+BEGIN\n+    BLOCK \"StringFileInfo\"\n+    BEGIN\n+        BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n+        BEGIN\n+            VALUE \"CompanyName\",        \"Bitcoin\"\n+            VALUE \"FileDescription\",    \"Bitcoind (OSS daemon/client for Bitcoin)\"\n+            VALUE \"FileVersion\",        VER_FILEVERSION_STR\n+            VALUE \"InternalName\",       \"bitcoind\"\n+            VALUE \"LegalCopyright\",     COPYRIGHT_STR\n+            VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n+            VALUE \"OriginalFilename\",   \"bitcoind.exe\"\n+            VALUE \"ProductName\",        \"Bitcoind\"\n+            VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n+        END\n+    END\n+\n+    BLOCK \"VarFileInfo\"\n+    BEGIN\n+        VALUE \"Translation\", 0x0, 1252 // language neutral - multilingual (decimal)\n+    END\n+END"
      },
      {
        "sha": "02e4e7d6e7c7db4a43705170095654a46cc3838b",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -39,10 +39,15 @@ bool AppInit(int argc, char* argv[])\n         ParseParameters(argc, argv);\n         if (!boost::filesystem::is_directory(GetDataDir(false)))\n         {\n-            fprintf(stderr, \"Error: Specified directory does not exist\\n\");\n-            Shutdown();\n+            fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", mapArgs[\"-datadir\"].c_str());\n+            return false;\n         }\n         ReadConfigFile(mapArgs, mapMultiArgs);\n+        // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n+        if (!SelectParamsFromCommandLine()) {\n+            fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+            return false;\n+        }\n \n         if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n         {\n@@ -70,7 +75,7 @@ bool AppInit(int argc, char* argv[])\n             int ret = CommandLineRPC(argc, argv);\n             exit(ret);\n         }\n-#if !defined(WIN32)\n+#ifndef WIN32\n         fDaemon = GetBoolArg(\"-daemon\", false);\n         if (fDaemon)\n         {"
      },
      {
        "sha": "a58b85c643cc7cff02a80303e7bc9cfbcb68bfeb",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 128,
        "deletions": 83,
        "changes": 211,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -3,6 +3,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"chainparams.h\"\n #include \"init.h\"\n #include \"util.h\"\n #include \"sync.h\"\n@@ -38,11 +39,6 @@ static map<string, boost::shared_ptr<deadline_timer> > deadlineTimers;\n static ssl::context* rpc_ssl_context = NULL;\n static boost::thread_group* rpc_worker_group = NULL;\n \n-static inline unsigned short GetDefaultRPCPort()\n-{\n-    return GetBoolArg(\"-testnet\", false) ? 18332 : 8332;\n-}\n-\n Object JSONRPCError(int code, const string& message)\n {\n     Object error;\n@@ -117,6 +113,34 @@ std::string HexBits(unsigned int nBits)\n     return HexStr(BEGIN(uBits.cBits), END(uBits.cBits));\n }\n \n+uint256 ParseHashV(const Value& v, string strName)\n+{\n+    string strHex;\n+    if (v.type() == str_type)\n+        strHex = v.get_str();\n+    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strName+\" must be hexadecimal string (not '\"+strHex+\"')\");\n+    uint256 result;\n+    result.SetHex(strHex);\n+    return result;\n+}\n+uint256 ParseHashO(const Object& o, string strKey)\n+{\n+    return ParseHashV(find_value(o, strKey), strKey);\n+}\n+vector<unsigned char> ParseHexV(const Value& v, string strName)\n+{\n+    string strHex;\n+    if (v.type() == str_type)\n+        strHex = v.get_str();\n+    if (!IsHex(strHex))\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strName+\" must be hexadecimal string (not '\"+strHex+\"')\");\n+    return ParseHex(strHex);\n+}\n+vector<unsigned char> ParseHexO(const Object& o, string strKey)\n+{\n+    return ParseHexV(find_value(o, strKey), strKey);\n+}\n \n \n ///\n@@ -136,6 +160,9 @@ string CRPCTable::help(string strCommand) const\n             continue;\n         if (strCommand != \"\" && strMethod != strCommand)\n             continue;\n+        if (pcmd->reqWallet && !pwalletMain)\n+            continue;\n+\n         try\n         {\n             Array params;\n@@ -194,70 +221,77 @@ Value stop(const Array& params, bool fHelp)\n \n \n static const CRPCCommand vRPCCommands[] =\n-{ //  name                      actor (function)         okSafeMode threadSafe\n-  //  ------------------------  -----------------------  ---------- ----------\n-    { \"help\",                   &help,                   true,      true },\n-    { \"stop\",                   &stop,                   true,      true },\n-    { \"getblockcount\",          &getblockcount,          true,      false },\n-    { \"getconnectioncount\",     &getconnectioncount,     true,      false },\n-    { \"getpeerinfo\",            &getpeerinfo,            true,      false },\n-    { \"addnode\",                &addnode,                true,      true },\n-    { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true },\n-    { \"getdifficulty\",          &getdifficulty,          true,      false },\n-    { \"getgenerate\",            &getgenerate,            true,      false },\n-    { \"setgenerate\",            &setgenerate,            true,      false },\n-    { \"gethashespersec\",        &gethashespersec,        true,      false },\n-    { \"getinfo\",                &getinfo,                true,      false },\n-    { \"getmininginfo\",          &getmininginfo,          true,      false },\n-    { \"getnewaddress\",          &getnewaddress,          true,      false },\n-    { \"getaccountaddress\",      &getaccountaddress,      true,      false },\n-    { \"setaccount\",             &setaccount,             true,      false },\n-    { \"getaccount\",             &getaccount,             false,     false },\n-    { \"getaddressesbyaccount\",  &getaddressesbyaccount,  true,      false },\n-    { \"sendtoaddress\",          &sendtoaddress,          false,     false },\n-    { \"getreceivedbyaddress\",   &getreceivedbyaddress,   false,     false },\n-    { \"getreceivedbyaccount\",   &getreceivedbyaccount,   false,     false },\n-    { \"listreceivedbyaddress\",  &listreceivedbyaddress,  false,     false },\n-    { \"listreceivedbyaccount\",  &listreceivedbyaccount,  false,     false },\n-    { \"backupwallet\",           &backupwallet,           true,      false },\n-    { \"keypoolrefill\",          &keypoolrefill,          true,      false },\n-    { \"walletpassphrase\",       &walletpassphrase,       true,      false },\n-    { \"walletpassphrasechange\", &walletpassphrasechange, false,     false },\n-    { \"walletlock\",             &walletlock,             true,      false },\n-    { \"encryptwallet\",          &encryptwallet,          false,     false },\n-    { \"validateaddress\",        &validateaddress,        true,      false },\n-    { \"getbalance\",             &getbalance,             false,     false },\n-    { \"move\",                   &movecmd,                false,     false },\n-    { \"sendfrom\",               &sendfrom,               false,     false },\n-    { \"sendmany\",               &sendmany,               false,     false },\n-    { \"addmultisigaddress\",     &addmultisigaddress,     false,     false },\n-    { \"createmultisig\",         &createmultisig,         true,      true  },\n-    { \"getrawmempool\",          &getrawmempool,          true,      false },\n-    { \"getblock\",               &getblock,               false,     false },\n-    { \"getblockhash\",           &getblockhash,           false,     false },\n-    { \"gettransaction\",         &gettransaction,         false,     false },\n-    { \"listtransactions\",       &listtransactions,       false,     false },\n-    { \"listaddressgroupings\",   &listaddressgroupings,   false,     false },\n-    { \"signmessage\",            &signmessage,            false,     false },\n-    { \"verifymessage\",          &verifymessage,          false,     false },\n-    { \"getwork\",                &getwork,                true,      false },\n-    { \"listaccounts\",           &listaccounts,           false,     false },\n-    { \"settxfee\",               &settxfee,               false,     false },\n-    { \"getblocktemplate\",       &getblocktemplate,       true,      false },\n-    { \"submitblock\",            &submitblock,            false,     false },\n-    { \"listsinceblock\",         &listsinceblock,         false,     false },\n-    { \"dumpprivkey\",            &dumpprivkey,            true,      false },\n-    { \"importprivkey\",          &importprivkey,          false,     false },\n-    { \"listunspent\",            &listunspent,            false,     false },\n-    { \"getrawtransaction\",      &getrawtransaction,      false,     false },\n-    { \"createrawtransaction\",   &createrawtransaction,   false,     false },\n-    { \"decoderawtransaction\",   &decoderawtransaction,   false,     false },\n-    { \"signrawtransaction\",     &signrawtransaction,     false,     false },\n-    { \"sendrawtransaction\",     &sendrawtransaction,     false,     false },\n-    { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false },\n-    { \"gettxout\",               &gettxout,               true,      false },\n-    { \"lockunspent\",            &lockunspent,            false,     false },\n-    { \"listlockunspent\",        &listlockunspent,        false,     false },\n+{ //  name                      actor (function)         okSafeMode threadSafe reqWallet\n+  //  ------------------------  -----------------------  ---------- ---------- ---------\n+    { \"help\",                   &help,                   true,      true,       false },\n+    { \"stop\",                   &stop,                   true,      true,       false },\n+    { \"getblockcount\",          &getblockcount,          true,      false,      false },\n+    { \"getbestblockhash\",       &getbestblockhash,       true,      false,      false },\n+    { \"getconnectioncount\",     &getconnectioncount,     true,      false,      false },\n+    { \"getpeerinfo\",            &getpeerinfo,            true,      false,      false },\n+    { \"addnode\",                &addnode,                true,      true,       false },\n+    { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n+    { \"getdifficulty\",          &getdifficulty,          true,      false,      false },\n+    { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n+    { \"getgenerate\",            &getgenerate,            true,      false,      false },\n+    { \"setgenerate\",            &setgenerate,            true,      false,      true },\n+    { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n+    { \"getinfo\",                &getinfo,                true,      false,      false },\n+    { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n+    { \"getnewaddress\",          &getnewaddress,          true,      false,      true },\n+    { \"getaccountaddress\",      &getaccountaddress,      true,      false,      true },\n+    { \"getrawchangeaddress\",    &getrawchangeaddress,    true,      false,      true },\n+    { \"setaccount\",             &setaccount,             true,      false,      true },\n+    { \"getaccount\",             &getaccount,             false,     false,      true },\n+    { \"getaddressesbyaccount\",  &getaddressesbyaccount,  true,      false,      true },\n+    { \"sendtoaddress\",          &sendtoaddress,          false,     false,      true },\n+    { \"getreceivedbyaddress\",   &getreceivedbyaddress,   false,     false,      true },\n+    { \"getreceivedbyaccount\",   &getreceivedbyaccount,   false,     false,      true },\n+    { \"listreceivedbyaddress\",  &listreceivedbyaddress,  false,     false,      true },\n+    { \"listreceivedbyaccount\",  &listreceivedbyaccount,  false,     false,      true },\n+    { \"backupwallet\",           &backupwallet,           true,      false,      true },\n+    { \"keypoolrefill\",          &keypoolrefill,          true,      false,      true },\n+    { \"walletpassphrase\",       &walletpassphrase,       true,      false,      true },\n+    { \"walletpassphrasechange\", &walletpassphrasechange, false,     false,      true },\n+    { \"walletlock\",             &walletlock,             true,      false,      true },\n+    { \"encryptwallet\",          &encryptwallet,          false,     false,      true },\n+    { \"validateaddress\",        &validateaddress,        true,      false,      false },\n+    { \"getbalance\",             &getbalance,             false,     false,      true },\n+    { \"move\",                   &movecmd,                false,     false,      true },\n+    { \"sendfrom\",               &sendfrom,               false,     false,      true },\n+    { \"sendmany\",               &sendmany,               false,     false,      true },\n+    { \"addmultisigaddress\",     &addmultisigaddress,     false,     false,      true },\n+    { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n+    { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n+    { \"getblock\",               &getblock,               false,     false,      false },\n+    { \"getblockhash\",           &getblockhash,           false,     false,      false },\n+    { \"gettransaction\",         &gettransaction,         false,     false,      true },\n+    { \"listtransactions\",       &listtransactions,       false,     false,      true },\n+    { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n+    { \"signmessage\",            &signmessage,            false,     false,      true },\n+    { \"verifymessage\",          &verifymessage,          false,     false,      false },\n+    { \"getwork\",                &getwork,                true,      false,      true },\n+    { \"listaccounts\",           &listaccounts,           false,     false,      true },\n+    { \"settxfee\",               &settxfee,               false,     false,      true },\n+    { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n+    { \"submitblock\",            &submitblock,            false,     false,      false },\n+    { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n+    { \"dumpprivkey\",            &dumpprivkey,            true,      false,      true },\n+    { \"dumpwallet\",             &dumpwallet,             true,      false,      true },\n+    { \"importprivkey\",          &importprivkey,          false,     false,      true },\n+    { \"importwallet\",           &importwallet,           false,     false,      true },\n+    { \"listunspent\",            &listunspent,            false,     false,      true },\n+    { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n+    { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n+    { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n+    { \"decodescript\",           &decodescript,           false,     false,      false },\n+    { \"signrawtransaction\",     &signrawtransaction,     false,     false,      false },\n+    { \"sendrawtransaction\",     &sendrawtransaction,     false,     false,      false },\n+    { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n+    { \"gettxout\",               &gettxout,               true,      false,      false },\n+    { \"lockunspent\",            &lockunspent,            false,     false,      true },\n+    { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n+    { \"verifychain\",            &verifychain,            true,      false,      false },\n };\n \n CRPCTable::CRPCTable()\n@@ -414,7 +448,7 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n int ReadHTTPHeaders(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet)\n {\n     int nLen = 0;\n-    loop\n+    while (true)\n     {\n         string str;\n         std::getline(stream, str);\n@@ -476,7 +510,7 @@ bool HTTPAuthorized(map<string, string>& mapHeaders)\n         return false;\n     string strUserPass64 = strAuth.substr(6); boost::trim(strUserPass64);\n     string strUserPass = DecodeBase64(strUserPass64);\n-    return strUserPass == strRPCUserColonPass;\n+    return TimingResistantEqual(strUserPass, strRPCUserColonPass);\n }\n \n //\n@@ -724,8 +758,8 @@ static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol,\n void StartRPCThreads()\n {\n     strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    if ((mapArgs[\"-rpcpassword\"] == \"\") ||\n-        (mapArgs[\"-rpcuser\"] == mapArgs[\"-rpcpassword\"]))\n+    if (((mapArgs[\"-rpcpassword\"] == \"\") ||\n+         (mapArgs[\"-rpcuser\"] == mapArgs[\"-rpcpassword\"])) && Params().RequireRPCPassword())\n     {\n         unsigned char rand_pwd[32];\n         RAND_bytes(rand_pwd, 32);\n@@ -766,12 +800,12 @@ void StartRPCThreads()\n         filesystem::path pathCertFile(GetArg(\"-rpcsslcertificatechainfile\", \"server.cert\"));\n         if (!pathCertFile.is_complete()) pathCertFile = filesystem::path(GetDataDir()) / pathCertFile;\n         if (filesystem::exists(pathCertFile)) rpc_ssl_context->use_certificate_chain_file(pathCertFile.string());\n-        else printf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string().c_str());\n+        else LogPrintf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string().c_str());\n \n         filesystem::path pathPKFile(GetArg(\"-rpcsslprivatekeyfile\", \"server.pem\"));\n         if (!pathPKFile.is_complete()) pathPKFile = filesystem::path(GetDataDir()) / pathPKFile;\n         if (filesystem::exists(pathPKFile)) rpc_ssl_context->use_private_key_file(pathPKFile.string(), ssl::context::pem);\n-        else printf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string().c_str());\n+        else LogPrintf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string().c_str());\n \n         string strCiphers = GetArg(\"-rpcsslciphers\", \"TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\");\n         SSL_CTX_set_cipher_list(rpc_ssl_context->impl(), strCiphers.c_str());\n@@ -780,7 +814,7 @@ void StartRPCThreads()\n     // Try a dual IPv6/IPv4 socket, falling back to separate IPv4 and IPv6 sockets\n     const bool loopback = !mapArgs.count(\"-rpcallowip\");\n     asio::ip::address bindAddress = loopback ? asio::ip::address_v6::loopback() : asio::ip::address_v6::any();\n-    ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", GetDefaultRPCPort()));\n+    ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", Params().RPCPort()));\n     boost::system::error_code v6_only_error;\n     boost::shared_ptr<ip::tcp::acceptor> acceptor(new ip::tcp::acceptor(*rpc_io_service));\n \n@@ -901,7 +935,7 @@ void JSONRequest::parse(const Value& valRequest)\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Method must be a string\");\n     strMethod = valMethod.get_str();\n     if (strMethod != \"getwork\" && strMethod != \"getblocktemplate\")\n-        printf(\"ThreadRPCServer method=%s\\n\", strMethod.c_str());\n+        LogPrint(\"rpc\", \"ThreadRPCServer method=%s\\n\", strMethod.c_str());\n \n     // Parse params\n     Value valParams = find_value(request, \"params\");\n@@ -975,10 +1009,10 @@ void ServiceConnection(AcceptedConnection *conn)\n         }\n         if (!HTTPAuthorized(mapHeaders))\n         {\n-            printf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string().c_str());\n+            LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string().c_str());\n             /* Deter brute-forcing short passwords.\n-               If this results in a DOS the user really\n-               shouldn't have their RPC port exposed.*/\n+               If this results in a DoS the user really\n+               shouldn't have their RPC port exposed. */\n             if (mapArgs[\"-rpcpassword\"].size() < 20)\n                 MilliSleep(250);\n \n@@ -1034,6 +1068,8 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     const CRPCCommand *pcmd = tableRPC[strMethod];\n     if (!pcmd)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+    if (pcmd->reqWallet && !pwalletMain)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found (disabled)\");\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n@@ -1048,7 +1084,10 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n         {\n             if (pcmd->threadSafe)\n                 result = pcmd->actor(params, false);\n-            else {\n+            else if (!pwalletMain) {\n+                LOCK(cs_main);\n+                result = pcmd->actor(params, false);\n+            } else {\n                 LOCK2(cs_main, pwalletMain->cs_wallet);\n                 result = pcmd->actor(params, false);\n             }\n@@ -1078,7 +1117,7 @@ Object CallRPC(const string& strMethod, const Array& params)\n     asio::ssl::stream<asio::ip::tcp::socket> sslStream(io_service, context);\n     SSLIOStreamDevice<asio::ip::tcp> d(sslStream, fUseSSL);\n     iostreams::stream< SSLIOStreamDevice<asio::ip::tcp> > stream(d);\n-    if (!d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(GetDefaultRPCPort()))))\n+    if (!d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(Params().RPCPort()))))\n         throw runtime_error(\"couldn't connect to server\");\n \n     // HTTP basic authentication\n@@ -1158,6 +1197,8 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n     if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n     if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n@@ -1193,13 +1234,17 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n     if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n     if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n+    if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n     if (strMethod == \"gettxout\"               && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n     if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n     if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n     if (strMethod == \"listaddressgroupings\"   && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"listaddressgroupings\"   && n > 1) ConvertTo<bool>(params[1]);\n+    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<boost::int64_t>(params[0]);\n \n     return params;\n }\n@@ -1288,7 +1333,7 @@ int main(int argc, char *argv[])\n     {\n         if (argc >= 2 && string(argv[1]) == \"-server\")\n         {\n-            printf(\"server ready\\n\");\n+            LogPrintf(\"server ready\\n\");\n             ThreadRPCServer(NULL);\n         }\n         else"
      },
      {
        "sha": "ce1c0e68b7b584c49488aa3e7f71c3046d421330",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -104,6 +104,7 @@ class CRPCCommand\n     rpcfn_type actor;\n     bool okSafeMode;\n     bool threadSafe;\n+    bool reqWallet;\n };\n \n /**\n@@ -130,6 +131,15 @@ class CRPCTable\n \n extern const CRPCTable tableRPC;\n \n+//\n+// Utilities: convert hex-encoded Values\n+// (throws error if not hex).\n+//\n+extern uint256 ParseHashV(const json_spirit::Value& v, std::string strName);\n+extern uint256 ParseHashO(const json_spirit::Object& o, std::string strKey);\n+extern std::vector<unsigned char> ParseHexV(const json_spirit::Value& v, std::string strName);\n+extern std::vector<unsigned char> ParseHexO(const json_spirit::Object& o, std::string strKey);\n+\n extern void InitRPCMining();\n extern void ShutdownRPCMining();\n \n@@ -145,11 +155,15 @@ extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, b\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n+\n extern json_spirit::Value dumpprivkey(const json_spirit::Array& params, bool fHelp); // in rpcdump.cpp\n extern json_spirit::Value importprivkey(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value dumpwallet(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value importwallet(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getgenerate(const json_spirit::Array& params, bool fHelp); // in rpcmining.cpp\n extern json_spirit::Value setgenerate(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getnetworkhashps(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value gethashespersec(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getmininginfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getwork(const json_spirit::Array& params, bool fHelp);\n@@ -158,6 +172,7 @@ extern json_spirit::Value submitblock(const json_spirit::Array& params, bool fHe\n \n extern json_spirit::Value getnewaddress(const json_spirit::Array& params, bool fHelp); // in rpcwallet.cpp\n extern json_spirit::Value getaccountaddress(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getrawchangeaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value setaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddressesbyaccount(const json_spirit::Array& params, bool fHelp);\n@@ -194,16 +209,19 @@ extern json_spirit::Value lockunspent(const json_spirit::Array& params, bool fHe\n extern json_spirit::Value listlockunspent(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value createrawtransaction(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value decoderawtransaction(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value decodescript(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value signrawtransaction(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendrawtransaction(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getblockcount(const json_spirit::Array& params, bool fHelp); // in rpcblockchain.cpp\n+extern json_spirit::Value getbestblockhash(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getdifficulty(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value settxfee(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getrawmempool(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getblockhash(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getblock(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value gettxoutsetinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value gettxout(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value verifychain(const json_spirit::Array& params, bool fHelp);\n \n #endif"
      },
      {
        "sha": "8e8d8fa06b920def8e79284d88deeb12ac5e3752",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 3,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -5,7 +5,7 @@\n #include <stdlib.h>\n \n #include \"bloom.h\"\n-#include \"main.h\"\n+#include \"core.h\"\n #include \"script.h\"\n \n #define LN2SQUARED 0.4804530139182014246671025263266649717305529515945455\n@@ -23,6 +23,8 @@ vData(min((unsigned int)(-1  / LN2SQUARED * nElements * log(nFPRate)), MAX_BLOOM\n // The ideal number of hash functions is filter size * ln(2) / number of elements\n // Again, we ignore filter parameters which will create a bloom filter with more hash functions than the protocol limits\n // See http://en.wikipedia.org/wiki/Bloom_filter for an explanation of these formulas\n+isFull(false),\n+isEmpty(false),\n nHashFuncs(min((unsigned int)(vData.size() * 8 / nElements * LN2), MAX_HASH_FUNCS)),\n nTweak(nTweakIn),\n nFlags(nFlagsIn)\n@@ -37,14 +39,15 @@ inline unsigned int CBloomFilter::Hash(unsigned int nHashNum, const std::vector<\n \n void CBloomFilter::insert(const vector<unsigned char>& vKey)\n {\n-    if (vData.size() == 1 && vData[0] == 0xff)\n+    if (isFull)\n         return;\n     for (unsigned int i = 0; i < nHashFuncs; i++)\n     {\n         unsigned int nIndex = Hash(i, vKey);\n         // Sets bit nIndex of vData\n         vData[nIndex >> 3] |= bit_mask[7 & nIndex];\n     }\n+    isEmpty = false;\n }\n \n void CBloomFilter::insert(const COutPoint& outpoint)\n@@ -63,8 +66,10 @@ void CBloomFilter::insert(const uint256& hash)\n \n bool CBloomFilter::contains(const vector<unsigned char>& vKey) const\n {\n-    if (vData.size() == 1 && vData[0] == 0xff)\n+    if (isFull)\n         return true;\n+    if (isEmpty)\n+        return false;\n     for (unsigned int i = 0; i < nHashFuncs; i++)\n     {\n         unsigned int nIndex = Hash(i, vKey);\n@@ -99,6 +104,10 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& ha\n     bool fFound = false;\n     // Match if the filter contains the hash of tx\n     //  for finding tx when they appear in a block\n+    if (isFull)\n+        return true;\n+    if (isEmpty)\n+        return false;\n     if (contains(hash))\n         fFound = true;\n \n@@ -158,3 +167,16 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& ha\n \n     return false;\n }\n+\n+void CBloomFilter::UpdateEmptyFull()\n+{\n+    bool full = true;\n+    bool empty = true;\n+    for (unsigned int i = 0; i < vData.size(); i++)\n+    {\n+        full &= vData[i] == 0xff;\n+        empty &= vData[i] == 0;\n+    }\n+    isFull = full;\n+    isEmpty = empty;\n+}"
      },
      {
        "sha": "f482bfcc10d2932467f815d4c9acaadceebebdf7",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -42,6 +42,8 @@ class CBloomFilter\n {\n private:\n     std::vector<unsigned char> vData;\n+    bool isFull;\n+    bool isEmpty;\n     unsigned int nHashFuncs;\n     unsigned int nTweak;\n     unsigned char nFlags;\n@@ -57,9 +59,7 @@ class CBloomFilter\n     // It should generally always be a random value (and is largely only exposed for unit testing)\n     // nFlags should be one of the BLOOM_UPDATE_* enums (not _MASK)\n     CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweak, unsigned char nFlagsIn);\n-    // Using a filter initialized with this results in undefined behavior\n-    // Should only be used for deserialization\n-    CBloomFilter() {}\n+    CBloomFilter() : isFull(true) {}\n \n     IMPLEMENT_SERIALIZE\n     (\n@@ -83,6 +83,9 @@ class CBloomFilter\n \n     // Also adds any outputs which match the filter to the filter (to match their spending txes)\n     bool IsRelevantAndUpdate(const CTransaction& tx, const uint256& hash);\n+\n+    // Checks for empty and full filters to avoid wasting cpu\n+    void UpdateEmptyFull();\n };\n \n #endif /* BITCOIN_BLOOM_H */"
      },
      {
        "sha": "0795f09765b9b9b3cab9095a92e02f1f521de49d",
        "filename": "src/chainparams.cpp",
        "status": "added",
        "additions": 290,
        "deletions": 0,
        "changes": 290,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,290 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"assert.h\"\n+\n+#include \"chainparams.h\"\n+#include \"core.h\"\n+#include \"protocol.h\"\n+#include \"util.h\"\n+\n+#include <boost/assign/list_of.hpp>\n+\n+using namespace boost::assign;\n+\n+//\n+// Main network\n+//\n+\n+unsigned int pnSeed[] =\n+{\n+    0xe473042e, 0xb177f2ad, 0xd63f3fb2, 0xf864f736, 0x44a23ac7, 0xcf6d9650, 0xd648042e, 0x0536f447,\n+    0x3c654ed0, 0x3e16a5bc, 0xa38e09b0, 0xdfae795b, 0xabfeca5b, 0x94ad7840, 0xf3b9f1c7, 0xbe70e0ad,\n+    0x3bbd09b0, 0x8d0c7dd5, 0x3b2a7332, 0x1a06175e, 0x581f175e, 0xca0d2dcc, 0x0fdbc658, 0xcf591ec7,\n+    0x295a12b2, 0xb4707bce, 0x68bb09b0, 0x4e735747, 0x89709553, 0x05a7814e, 0x5b8ec658, 0x402c5512,\n+    0xe80d0905, 0x17681a5e, 0xc02aa748, 0x9f811741, 0x5f321cb0, 0x23e1ee47, 0xaf7f170c, 0xaa240ab0,\n+    0xedea6257, 0x76106bc1, 0x2cf310cc, 0x08612acb, 0x9c682e4e, 0x8e963c6c, 0x443c795b, 0x22e246b8,\n+    0xfa1f2dcc, 0x90118140, 0x3821042e, 0x33c3fd2e, 0x10046d5b, 0x40d14b3e, 0x7fb8f8ce, 0x67696550,\n+    0xeeecbe58, 0x4f341745, 0x46b8fbd5, 0xc8463932, 0x6b73e862, 0x4c715932, 0x4a6785d5, 0xce3a64c2,\n+    0xde9604c7, 0x9b06884f, 0x18002a45, 0xea9bc345, 0xc4f1c658, 0xe475c1c7, 0xdd3e795b, 0x9722175e,\n+    0x34562f4e, 0x66c46e4e, 0x40bb1243, 0x7d9171d0, 0x17b8dbd5, 0x63cbfd2e, 0x1a08b8d8, 0x6175a73b,\n+    0x228d2660, 0x8627c658, 0x9c566644, 0x38cca5bc, 0x3089de5b, 0x92e25f5d, 0xa393f73f, 0xcc92dc3e,\n+    0x27487446, 0x62cbfd2e, 0x9d983b45, 0xf72a09b0, 0xf75f042e, 0x6434bb6a, 0xb29e77d8, 0x19be4fd9,\n+    0x76443243, 0x9dd72645, 0x694cef43, 0x89c2efd5, 0x5f1c5058, 0x46c6e45b, 0xe1391b40, 0x77ccefd5,\n+    0x472e5a6d, 0x85709553, 0xdd4f5d4c, 0x64ef5a46, 0x7f0ae502, 0xcf08d850, 0x3460042e, 0xeafa2d42,\n+    0x793c9044, 0x9d094746, 0x1ab9b153, 0xbfe9a5bc, 0x34771fb0, 0xb7722e32, 0x1168964b, 0x19b06ab8,\n+    0x19243b25, 0x13188045, 0xb4070905, 0x728ebb5d, 0x44f24ac8, 0xa317fead, 0x642f6a57, 0x3d951f32,\n+    0x3d312e4e, 0xfac4d048, 0xefc4dd50, 0x52b9f1c7, 0xc14d3cc3, 0x0219ea44, 0x3b79d058, 0xfa217242,\n+    0x39c80647, 0xfb697252, 0x1d495a42, 0x0aa81f4e, 0x58249ab8, 0xe6a8e6c3, 0x2bc4dad8, 0x85963c6c,\n+    0xa4ce09b0, 0x2005f536, 0x5cc2703e, 0x1992de43, 0x74e86b4c, 0xe7085653, 0xf5e15a51, 0xb4872b60,\n+    0x29e2b162, 0xa07ea053, 0x8229fd18, 0x4562ec4d, 0x8dec814e, 0x36cfa4cf, 0x96461032, 0x3c8770de,\n+    0xd10a1f5f, 0x95934641, 0x97cd65d0, 0x2e35324a, 0x2566ba1f, 0x1ca1a9d1, 0xb808b8d5, 0xf9a24a5d,\n+    0xafc8d431, 0xe4b8d9b2, 0x0f5321b2, 0x330bc658, 0x74b347ce, 0x972babd5, 0x044f7d4f, 0x06562f4e,\n+    0x8b8d3c6c, 0x3507c658, 0xe4174e4d, 0xf1c009b0, 0x52249ab8, 0x27211772, 0xf6a9ba59, 0x7a391b40,\n+    0x855dc6c0, 0x291f20b2, 0xe29bc345, 0x90963c6c, 0x0af70732, 0x4242a91f, 0x4c531d48, 0xa32df948,\n+    0x627e3044, 0x65be1f54, 0x1a0cbf83, 0x6a443532, 0x8d5f1955, 0xbafa8132, 0x3534bdd5, 0xca019dd9,\n+    0x8a0d9332, 0x5584e7d8, 0x7cd1f25e, 0xeabe3fb2, 0x2945d0d1, 0x46415718, 0x70d6042e, 0x99eb76d0,\n+    0x9ece09b0, 0xb3777418, 0x5e5e91d9, 0x237a3ab0, 0xf512b62e, 0x45dec347, 0x59b7f862, 0x4c443b25,\n+    0x3cc6484b, 0x9a8ec6d1, 0x021eea44, 0xc9483944, 0xfd567e32, 0xfd204bb2, 0xc5330bcc, 0x5202894e,\n+    0xf9e309b0, 0x4cc17557, 0xdb9064ae, 0xe19e77d8, 0x25857f60, 0xeb4a15ad, 0x1f47f554, 0xea4472d9,\n+    0xd20de593, 0xf5733b25, 0x11892b54, 0x5729d35f, 0xe6188cd1, 0x488b132e, 0x541c534a, 0xa8e854ae,\n+    0xa255a66c, 0x33688763, 0xc6629ac6, 0xc20a6265, 0xcd92a059, 0x72029d3b, 0x4c298f5e, 0x51452e4e,\n+    0xbb065058, 0x15fd2dcc, 0xf40c135e, 0x615a0bad, 0x0c6a6805, 0x4971a7ad, 0x17f2a5d5, 0xf8babf47,\n+    0xb61f50ad, 0x4e1451b1, 0xf72d9252, 0x5c2abe58, 0xbd987c61, 0x084ae5cf, 0x20781fb0, 0x38b0f160,\n+    0x18aac705, 0x14f86dc1, 0x5556f481, 0x0a36c144, 0xeb446e4c, 0x2c1c0d6c, 0xbd0ff860, 0x869f92db,\n+    0x36c94f4c, 0x05502444, 0x148fe55b, 0xd5301e59, 0xd57a8f45, 0x110dc04a, 0x8670fc36, 0xee733b25,\n+    0xca56f481, 0x2a5c3bae, 0x844b0905, 0x1e51fe53, 0x0241c244, 0x59c0614e, 0x94e70a55, 0x7312fead,\n+    0xb735be44, 0xa55d0905, 0x2f63962e, 0x14a4e15b, 0x63f8f05c, 0x62d0d262, 0x3cab41ad, 0x87f1b1cb,\n+    0x018da6b8, 0xb3967dd5, 0xcb56f481, 0x685ad718, 0x3b4aeeca, 0x8d106bc1, 0x51180905, 0x72660f48,\n+    0x1521a243, 0x5b56f481, 0x6390e560, 0xdd61464e, 0x58353b25, 0x553fc062, 0x27c45d59, 0xacc62e4e,\n+    0x0d5a1cd9, 0x7f65f442, 0xbdeef660, 0xf1bd1855, 0xf8473cae, 0x13b120b2, 0x442440d0, 0x53fd4352,\n+    0xa305fc57, 0x458be84d, 0x639ce1c3, 0xebaaee47, 0x95e2c247, 0xf056f481, 0x6256f481, 0x1d87c65e,\n+    0x0a453418, 0x5beb175e, 0xd64f1618, 0xc360795b, 0x2fbf5753, 0xa8c58e53, 0x651cec52, 0x9d37b043,\n+    0x124a9758, 0x5242e4a9, 0x89913c6c, 0x880efe2e, 0x2f2f2f0c, 0x72b26751, 0x2896e46d, 0x80f4166c,\n+    0x320d59ad, 0xc50151d0, 0x11a8aa43, 0xccf56057, 0x5fbad118, 0x4719b151, 0x2b5f4bc0, 0x4d7a4a50,\n+    0xad06e047, 0x62ef5a46, 0x5aebde58, 0xdf7aa66c, 0x851acb50, 0x66b9a559, 0x3e9bb153, 0xcc512f2e,\n+    0xc073b08e, 0xd519be58, 0xe981ea4d, 0x12fd50cb, 0x378739ad, 0x06683cae, 0xa22310b2, 0xc185c705,\n+    0x8741b545, 0xa26c8318, 0x22d5bc43, 0x39201ec0, 0x68581e3e, 0xdc9bcf62, 0xd508cc82, 0xb149675b,\n+    0x4c9609b0, 0x84feb84c, 0x08291e2e, 0xfd2253b2, 0x1fd269c1, 0xc9483932, 0x4d641fb0, 0x7d37c918,\n+    0xa9de20ad, 0x77e2d655, 0x6d421b59, 0xd7668f80, 0xced09b62, 0xa9e5a5bc, 0xa4074e18, 0x60fc5ecc,\n+    0x01300148, 0x68062444, 0xb4224847, 0xed3aa443, 0xb772fb43, 0x9f56f481, 0x220dfd18, 0x8e1c3d6c,\n+    0xc44f09b0, 0x7df2bb73, 0xe22fb844, 0xea534242, 0xb6a755d4, 0xa036654b, 0x138ece5b, 0xda65d3c3,\n+    0x955871bc, 0x792124b0, 0xfc82594c, 0x851d494b, 0x2c7aee47, 0x26af46b8, 0x1416252e, 0xa8abb944,\n+    0x36c49d25, 0x674f645d, 0x363646b8, 0x9e1a2942, 0x66d0c154, 0xc6c2a545, 0x3570f2ad, 0xe7d547c7,\n+    0x7d104932, 0x18cb9c18, 0x1dcfa4cf, 0xd156f481, 0x2a02b91f, 0x3eeb3fa8, 0xcac4175e, 0x34146d42,\n+    0x994c4d46, 0x5666f440, 0x85d6713e, 0x5ecb296c, 0x0ea0ae46, 0x87e69f42, 0xc58409b0, 0x1f3436ae,\n+    0x21dc6a57, 0x4ad1cd42, 0xfb8c1a4c, 0x52d3dab2, 0x3769894b, 0xb52f1c62, 0x3677916d, 0x82b3fe57,\n+    0x493d4ac6, 0x9f963c6c, 0x5d91ff60, 0x458e0dad, 0xa49d0947, 0x491a3e18, 0x4aadcd5b, 0x0e46494b,\n+    0x1d1610ad, 0x1a10af5d, 0x4956f481, 0x207a3eae, 0x77e73244, 0xfa3b8742, 0x3261fc36, 0xfcebf536,\n+    0x1662e836, 0xf655f636, 0xa2dbd0ad, 0x23036693, 0x30448432, 0xa2b03463, 0x30730344, 0x8e4a6882,\n+    0x0c50a1cb, 0xc8d8c06b, 0xc9cd6191, 0xf443db50, 0xa9553c50, 0x23145847, 0xc35da66c, 0x29c12a60,\n+    0x55c2b447, 0x7434f75c, 0x61660640, 0xde2a7018, 0xc639494c, 0x1c306fce, 0x19b89244, 0xd29a6462,\n+    0x462cd1b2, 0x29902f44, 0x2817fa53, 0x21a30905, 0x7777ae46, 0x288443a1, 0x7bee5148, 0xc2a8b043,\n+    0xf5c3d35f, 0x2311ef84, 0x57de08a4, 0x6b221bb2, 0xf2625846, 0x4b9e09b0, 0xa24f880e, 0x22b11447,\n+    0xb3a0c744, 0x919e77d8, 0xec8b64ae, 0xff5c8d45, 0x7b15b484, 0x32679a5f, 0xba80b62e, 0x05c25c61,\n+    0x60014746, 0x5e8fb04c, 0xe67c0905, 0x4329c658, 0xac8fe555, 0xf875e647, 0x67406386, 0x35ceea18,\n+    0xbb79484b, 0xd7b9fa62, 0x238209b0, 0x208a1d32, 0x9630995e, 0x039c1318, 0x6e48006c, 0x60582344,\n+    0xadbb0150, 0x853fd462, 0x03772e4e, 0x652ce960, 0x49b630ad, 0x9993af43, 0x3735b34b, 0x548a07d9,\n+    0x55a44aad, 0xa23d1bcc, 0xfdbb2f4e, 0x530b24a0, 0x0a44b451, 0x6827c657, 0x1f66494b, 0x4e680a47,\n+    0x77e7b747, 0xa5eb3fa8, 0x6649764a, 0xd4e76c4b, 0x2c691fb0, 0xf1292e44, 0xc6d6c774, 0x85d23775,\n+    0x28275f4d, 0x259ae46d, 0x02424e81, 0x5f16be58, 0xe707c658, 0x49eae5c7, 0xd5d147ad, 0x9a7abdc3,\n+    0xe8ac7fc7, 0x84ec3aae, 0xc24942d0, 0x294aa318, 0x08ac3d18, 0x8894042e, 0xb24609b0, 0x9bcaab58,\n+    0xc400f712, 0xd5c512b8, 0x2c02cc62, 0x25080fd8, 0xed74a847, 0x18a5ec5e, 0x9850ec6d, 0xf8909758,\n+    0x7f56f481, 0x4496f23c, 0xae27784f, 0xcb7cd93e, 0x06e32860, 0x50b9a84f, 0x3660434a, 0x09161f5f,\n+    0x900486bc, 0x08055459, 0xe7ec1017, 0x7e39494c, 0x4f443b25, 0x14751a8a, 0x717d03d4, 0xbd0e24d8,\n+    0x054b6f56, 0x854c496c, 0xd92a454a, 0xc39bd054, 0x6093614b, 0x9dbad754, 0x5bf0604a, 0x99f22305\n+};\n+\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        // The message start string is designed to be unlikely to occur in normal data.\n+        // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+        // a large 4-byte int at any alignment.\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        vAlertPubKey = ParseHex(\"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\");\n+        nDefaultPort = 8333;\n+        nRPCPort = 8332;\n+        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 32);\n+        nSubsidyHalvingInterval = 210000;\n+\n+        // Build the genesis block. Note that the output of the genesis coinbase cannot\n+        // be spent as it did not originally exist in the database.\n+        //\n+        // CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+        //   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+        //     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+        //     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+        //   vMerkleTree: 4a5e1e\n+        const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+        CTransaction txNew;\n+        txNew.vin.resize(1);\n+        txNew.vout.resize(1);\n+        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(4) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+        txNew.vout[0].nValue = 50 * COIN;\n+        txNew.vout[0].scriptPubKey = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+        genesis.vtx.push_back(txNew);\n+        genesis.hashPrevBlock = 0;\n+        genesis.hashMerkleRoot = genesis.BuildMerkleTree();\n+        genesis.nVersion = 1;\n+        genesis.nTime    = 1231006505;\n+        genesis.nBits    = 0x1d00ffff;\n+        genesis.nNonce   = 2083236893;\n+\n+        hashGenesisBlock = genesis.GetHash();\n+        assert(hashGenesisBlock == uint256(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vSeeds.push_back(CDNSSeedData(\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\"));\n+        vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"dnsseed.bluematt.me\"));\n+        vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\"));\n+        vSeeds.push_back(CDNSSeedData(\"xf2.org\", \"bitseed.xf2.org\"));\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = list_of(0);\n+        base58Prefixes[SCRIPT_ADDRESS] = list_of(5);\n+        base58Prefixes[SECRET_KEY] =     list_of(128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = list_of(0x04)(0x88)(0xB2)(0x1E);\n+        base58Prefixes[EXT_SECRET_KEY] = list_of(0x04)(0x88)(0xAD)(0xE4);\n+\n+        // Convert the pnSeeds array into usable address objects.\n+        for (unsigned int i = 0; i < ARRAYLEN(pnSeed); i++)\n+        {\n+            // It'll only connect to one or two seed nodes because once it connects,\n+            // it'll get a pile of addresses with newer timestamps.\n+            // Seed nodes are given a random 'last seen time' of between one and two\n+            // weeks ago.\n+            const int64 nOneWeek = 7*24*60*60;\n+            struct in_addr ip;\n+            memcpy(&ip, &pnSeed[i], sizeof(ip));\n+            CAddress addr(CService(ip, GetDefaultPort()));\n+            addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n+            vFixedSeeds.push_back(addr);\n+        }\n+    }\n+\n+    virtual const CBlock& GenesisBlock() const { return genesis; }\n+    virtual Network NetworkID() const { return CChainParams::MAIN; }\n+\n+    virtual const vector<CAddress>& FixedSeeds() const {\n+        return vFixedSeeds;\n+    }\n+protected:\n+    CBlock genesis;\n+    vector<CAddress> vFixedSeeds;\n+};\n+static CMainParams mainParams;\n+\n+\n+//\n+// Testnet (v3)\n+//\n+class CTestNetParams : public CMainParams {\n+public:\n+    CTestNetParams() {\n+        // The message start string is designed to be unlikely to occur in normal data.\n+        // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+        // a large 4-byte int at any alignment.\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n+        nDefaultPort = 18333;\n+        nRPCPort = 18332;\n+        strDataDir = \"testnet3\";\n+\n+        // Modify the testnet genesis block so the timestamp is valid for a later start.\n+        genesis.nTime = 1296688602;\n+        genesis.nNonce = 414098458;\n+        hashGenesisBlock = genesis.GetHash();\n+        assert(hashGenesisBlock == uint256(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        vSeeds.push_back(CDNSSeedData(\"bitcoin.petertodd.org\", \"testnet-seed.bitcoin.petertodd.org\"));\n+        vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"testnet-seed.bluematt.me\"));\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = list_of(111);\n+        base58Prefixes[SCRIPT_ADDRESS] = list_of(196);\n+        base58Prefixes[SECRET_KEY]     = list_of(239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = list_of(0x04)(0x35)(0x87)(0xCF);\n+        base58Prefixes[EXT_SECRET_KEY] = list_of(0x04)(0x35)(0x83)(0x94);\n+    }\n+    virtual Network NetworkID() const { return CChainParams::TESTNET; }\n+};\n+static CTestNetParams testNetParams;\n+\n+\n+//\n+// Regression test\n+//\n+class CRegTestParams : public CTestNetParams {\n+public:\n+    CRegTestParams() {\n+        pchMessageStart[0] = 0xfa;\n+        pchMessageStart[1] = 0xbf;\n+        pchMessageStart[2] = 0xb5;\n+        pchMessageStart[3] = 0xda;\n+        nSubsidyHalvingInterval = 150;\n+        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 1);\n+        genesis.nTime = 1296688602;\n+        genesis.nBits = 0x207fffff;\n+        genesis.nNonce = 2;\n+        hashGenesisBlock = genesis.GetHash();\n+        nDefaultPort = 18444;\n+        strDataDir = \"regtest\";\n+        assert(hashGenesisBlock == uint256(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n+\n+        vSeeds.clear();  // Regtest mode doesn't have any DNS seeds.\n+    }\n+\n+    virtual bool RequireRPCPassword() const { return false; }\n+    virtual Network NetworkID() const { return CChainParams::REGTEST; }\n+};\n+static CRegTestParams regTestParams;\n+\n+static CChainParams *pCurrentParams = &mainParams;\n+\n+const CChainParams &Params() {\n+    return *pCurrentParams;\n+}\n+\n+void SelectParams(CChainParams::Network network) {\n+    switch (network) {\n+        case CChainParams::MAIN:\n+            pCurrentParams = &mainParams;\n+            break;\n+        case CChainParams::TESTNET:\n+            pCurrentParams = &testNetParams;\n+            break;\n+        case CChainParams::REGTEST:\n+            pCurrentParams = &regTestParams;\n+            break;\n+        default:\n+            assert(false && \"Unimplemented network\");\n+            return;\n+    }\n+}\n+\n+bool SelectParamsFromCommandLine() {\n+    bool fRegTest = GetBoolArg(\"-regtest\", false);\n+    bool fTestNet = GetBoolArg(\"-testnet\", false);\n+\n+    if (fTestNet && fRegTest) {\n+        return false;\n+    }\n+\n+    if (fRegTest) {\n+        SelectParams(CChainParams::REGTEST);\n+    } else if (fTestNet) {\n+        SelectParams(CChainParams::TESTNET);\n+    } else {\n+        SelectParams(CChainParams::MAIN);\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "ce3c14306df37bb4223269c1aa50e5bca3f977f2",
        "filename": "src/chainparams.h",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CHAIN_PARAMS_H\n+#define BITCOIN_CHAIN_PARAMS_H\n+\n+#include \"bignum.h\"\n+#include \"uint256.h\"\n+#include \"util.h\"\n+\n+#include <vector>\n+\n+using namespace std;\n+\n+#define MESSAGE_START_SIZE 4\n+typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n+\n+class CAddress;\n+class CBlock;\n+\n+struct CDNSSeedData {\n+    string name, host;\n+    CDNSSeedData(const string &strName, const string &strHost) : name(strName), host(strHost) {}\n+};\n+\n+/**\n+ * CChainParams defines various tweakable parameters of a given instance of the\n+ * Bitcoin system. There are three: the main network on which people trade goods\n+ * and services, the public test network which gets reset from time to time and\n+ * a regression test mode which is intended for private networks only. It has\n+ * minimal difficulty to ensure that blocks can be found instantly.\n+ */\n+class CChainParams\n+{\n+public:\n+    enum Network {\n+        MAIN,\n+        TESTNET,\n+        REGTEST,\n+\n+        MAX_NETWORK_TYPES\n+    };\n+\n+    enum Base58Type {\n+        PUBKEY_ADDRESS,\n+        SCRIPT_ADDRESS,\n+        SECRET_KEY,\n+        EXT_PUBLIC_KEY,\n+        EXT_SECRET_KEY,\n+\n+        MAX_BASE58_TYPES\n+    };\n+\n+    const uint256& HashGenesisBlock() const { return hashGenesisBlock; }\n+    const MessageStartChars& MessageStart() const { return pchMessageStart; }\n+    const vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n+    int GetDefaultPort() const { return nDefaultPort; }\n+    const CBigNum& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n+    int SubsidyHalvingInterval() const { return nSubsidyHalvingInterval; }\n+    virtual const CBlock& GenesisBlock() const = 0;\n+    virtual bool RequireRPCPassword() const { return true; }\n+    const string& DataDir() const { return strDataDir; }\n+    virtual Network NetworkID() const = 0;\n+    const vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char> &Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    virtual const vector<CAddress>& FixedSeeds() const = 0;\n+    int RPCPort() const { return nRPCPort; }\n+protected:\n+    CChainParams() {};\n+\n+    uint256 hashGenesisBlock;\n+    MessageStartChars pchMessageStart;\n+    // Raw pub key bytes for the broadcast alert signing key.\n+    vector<unsigned char> vAlertPubKey;\n+    int nDefaultPort;\n+    int nRPCPort;\n+    CBigNum bnProofOfWorkLimit;\n+    int nSubsidyHalvingInterval;\n+    string strDataDir;\n+    vector<CDNSSeedData> vSeeds;\n+    std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+};\n+\n+/**\n+ * Return the currently selected parameters. This won't change after app startup\n+ * outside of the unit tests.\n+ */\n+const CChainParams &Params();\n+\n+/** Sets the params returned by Params() to those for the given network. */\n+void SelectParams(CChainParams::Network network);\n+\n+/**\n+ * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n+ * Returns false if an invalid combination is given.\n+ */\n+bool SelectParamsFromCommandLine();\n+\n+inline bool TestNet() {\n+    // Note: it's deliberate that this returns \"false\" for regression test mode.\n+    return Params().NetworkID() == CChainParams::TESTNET;\n+}\n+\n+inline bool RegTest() {\n+    return Params().NetworkID() == CChainParams::REGTEST;\n+}\n+\n+#endif"
      },
      {
        "sha": "bb551501f1273556198b90116a22dddb6f27b861",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 5,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -47,16 +47,17 @@ namespace Checkpoints\n         (210000, uint256(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\"))\n         (216116, uint256(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\"))\n         (225430, uint256(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n+        (250000, uint256(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\"))\n         ;\n     static const CCheckpointData data = {\n         &mapCheckpoints,\n-        1363044259, // * UNIX timestamp of last checkpoint block\n-        14264869,   // * total number of transactions between genesis and last checkpoint\n+        1375533383, // * UNIX timestamp of last checkpoint block\n+        21491097,   // * total number of transactions between genesis and last checkpoint\n                     //   (the tx=... number in the SetBestChain debug.log lines)\n         60000.0     // * estimated number of transactions per day after checkpoint\n     };\n \n-    static MapCheckpoints mapCheckpointsTestnet = \n+    static MapCheckpoints mapCheckpointsTestnet =\n         boost::assign::map_list_of\n         ( 546, uint256(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\"))\n         ;\n@@ -67,11 +68,24 @@ namespace Checkpoints\n         300\n     };\n \n+    static MapCheckpoints mapCheckpointsRegtest =\n+        boost::assign::map_list_of\n+        ( 0, uint256(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n+        ;\n+    static const CCheckpointData dataRegtest = {\n+        &mapCheckpointsRegtest,\n+        0,\n+        0,\n+        0\n+    };\n+\n     const CCheckpointData &Checkpoints() {\n-        if (fTestNet)\n+        if (Params().NetworkID() == CChainParams::TESTNET)\n             return dataTestnet;\n-        else\n+        else if (Params().NetworkID() == CChainParams::MAIN)\n             return data;\n+        else\n+            return dataRegtest;\n     }\n \n     bool CheckBlock(int nHeight, const uint256& hash)"
      },
      {
        "sha": "b376a67c8a763f150dc57458719a85b11d3d61f2",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,6 +1,9 @@\n #ifndef CLIENTVERSION_H\n #define CLIENTVERSION_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#else\n //\n // client versioning and copyright year\n //\n@@ -18,6 +21,8 @@\n // Todo: update this when changing our copyright comments in the source\n #define COPYRIGHT_YEAR 2013\n \n+#endif //HAVE_CONFIG_H\n+\n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!\n #define STRINGIZE(X) DO_STRINGIZE(X)"
      },
      {
        "sha": "9caf5e481071f0902cf88ae38e0d7deabe1b306e",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -3,7 +3,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #ifndef _BITCOIN_COMPAT_H\n-#define _BITCOIN_COMPAT_H 1\n+#define _BITCOIN_COMPAT_H\n \n #ifdef WIN32\n #define _WIN32_WINNT 0x0501\n@@ -13,7 +13,6 @@\n #endif\n #define FD_SETSIZE 1024 // max number of fds in fd_set\n #include <winsock2.h>\n-#include <mswsock.h>\n #include <ws2tcpip.h>\n #else\n #include <sys/types.h>\n@@ -26,12 +25,10 @@\n #include <ifaddrs.h>\n #endif\n \n-typedef u_int SOCKET;\n #ifdef WIN32\n-#define MSG_NOSIGNAL        0\n #define MSG_DONTWAIT        0\n-typedef int socklen_t;\n #else\n+typedef u_int SOCKET;\n #include \"errno.h\"\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL"
      },
      {
        "sha": "99b5c6641a54d7a9cae8711629d7d63395034583",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 294,
        "deletions": 0,
        "changes": 294,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -4,4 +4,298 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"core.h\"\n+#include \"util.h\"\n \n+std::string COutPoint::ToString() const\n+{\n+    return strprintf(\"COutPoint(%s, %u)\", hash.ToString().substr(0,10).c_str(), n);\n+}\n+\n+void COutPoint::print() const\n+{\n+    LogPrintf(\"%s\\n\", ToString().c_str());\n+}\n+\n+CTxIn::CTxIn(COutPoint prevoutIn, CScript scriptSigIn, unsigned int nSequenceIn)\n+{\n+    prevout = prevoutIn;\n+    scriptSig = scriptSigIn;\n+    nSequence = nSequenceIn;\n+}\n+\n+CTxIn::CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn, unsigned int nSequenceIn)\n+{\n+    prevout = COutPoint(hashPrevTx, nOut);\n+    scriptSig = scriptSigIn;\n+    nSequence = nSequenceIn;\n+}\n+\n+std::string CTxIn::ToString() const\n+{\n+    std::string str;\n+    str += \"CTxIn(\";\n+    str += prevout.ToString();\n+    if (prevout.IsNull())\n+        str += strprintf(\", coinbase %s\", HexStr(scriptSig).c_str());\n+    else\n+        str += strprintf(\", scriptSig=%s\", scriptSig.ToString().substr(0,24).c_str());\n+    if (nSequence != std::numeric_limits<unsigned int>::max())\n+        str += strprintf(\", nSequence=%u\", nSequence);\n+    str += \")\";\n+    return str;\n+}\n+\n+void CTxIn::print() const\n+{\n+    LogPrintf(\"%s\\n\", ToString().c_str());\n+}\n+\n+CTxOut::CTxOut(int64 nValueIn, CScript scriptPubKeyIn)\n+{\n+    nValue = nValueIn;\n+    scriptPubKey = scriptPubKeyIn;\n+}\n+\n+uint256 CTxOut::GetHash() const\n+{\n+    return SerializeHash(*this);\n+}\n+\n+std::string CTxOut::ToString() const\n+{\n+    if (scriptPubKey.size() < 6)\n+        return \"CTxOut(error)\";\n+    return strprintf(\"CTxOut(nValue=%\"PRI64d\".%08\"PRI64d\", scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30).c_str());\n+}\n+\n+void CTxOut::print() const\n+{\n+    LogPrintf(\"%s\\n\", ToString().c_str());\n+}\n+\n+uint256 CTransaction::GetHash() const\n+{\n+    return SerializeHash(*this);\n+}\n+\n+bool CTransaction::IsNewerThan(const CTransaction& old) const\n+{\n+    if (vin.size() != old.vin.size())\n+        return false;\n+    for (unsigned int i = 0; i < vin.size(); i++)\n+        if (vin[i].prevout != old.vin[i].prevout)\n+            return false;\n+\n+    bool fNewer = false;\n+    unsigned int nLowest = std::numeric_limits<unsigned int>::max();\n+    for (unsigned int i = 0; i < vin.size(); i++)\n+    {\n+        if (vin[i].nSequence != old.vin[i].nSequence)\n+        {\n+            if (vin[i].nSequence <= nLowest)\n+            {\n+                fNewer = false;\n+                nLowest = vin[i].nSequence;\n+            }\n+            if (old.vin[i].nSequence < nLowest)\n+            {\n+                fNewer = true;\n+                nLowest = old.vin[i].nSequence;\n+            }\n+        }\n+    }\n+    return fNewer;\n+}\n+\n+std::string CTransaction::ToString() const\n+{\n+    std::string str;\n+    str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%\"PRIszu\", vout.size=%\"PRIszu\", nLockTime=%u)\\n\",\n+        GetHash().ToString().substr(0,10).c_str(),\n+        nVersion,\n+        vin.size(),\n+        vout.size(),\n+        nLockTime);\n+    for (unsigned int i = 0; i < vin.size(); i++)\n+        str += \"    \" + vin[i].ToString() + \"\\n\";\n+    for (unsigned int i = 0; i < vout.size(); i++)\n+        str += \"    \" + vout[i].ToString() + \"\\n\";\n+    return str;\n+}\n+\n+void CTransaction::print() const\n+{\n+    LogPrintf(\"%s\", ToString().c_str());\n+}\n+\n+// Amount compression:\n+// * If the amount is 0, output 0\n+// * first, divide the amount (in base units) by the largest power of 10 possible; call the exponent e (e is max 9)\n+// * if e<9, the last digit of the resulting number cannot be 0; store it as d, and drop it (divide by 10)\n+//   * call the result n\n+//   * output 1 + 10*(9*n + d - 1) + e\n+// * if e==9, we only know the resulting number is not zero, so output 1 + 10*(n - 1) + 9\n+// (this is decodable, as d is in [1-9] and e is in [0-9])\n+\n+uint64 CTxOutCompressor::CompressAmount(uint64 n)\n+{\n+    if (n == 0)\n+        return 0;\n+    int e = 0;\n+    while (((n % 10) == 0) && e < 9) {\n+        n /= 10;\n+        e++;\n+    }\n+    if (e < 9) {\n+        int d = (n % 10);\n+        assert(d >= 1 && d <= 9);\n+        n /= 10;\n+        return 1 + (n*9 + d - 1)*10 + e;\n+    } else {\n+        return 1 + (n - 1)*10 + 9;\n+    }\n+}\n+\n+uint64 CTxOutCompressor::DecompressAmount(uint64 x)\n+{\n+    // x = 0  OR  x = 1+10*(9*n + d - 1) + e  OR  x = 1+10*(n - 1) + 9\n+    if (x == 0)\n+        return 0;\n+    x--;\n+    // x = 10*(9*n + d - 1) + e\n+    int e = x % 10;\n+    x /= 10;\n+    uint64 n = 0;\n+    if (e < 9) {\n+        // x = 9*n + d - 1\n+        int d = (x % 9) + 1;\n+        x /= 9;\n+        // x = n\n+        n = x*10 + d;\n+    } else {\n+        n = x+1;\n+    }\n+    while (e) {\n+        n *= 10;\n+        e--;\n+    }\n+    return n;\n+}\n+\n+// calculate number of bytes for the bitmask, and its number of non-zero bytes\n+// each bit in the bitmask represents the availability of one output, but the\n+// availabilities of the first two outputs are encoded separately\n+void CCoins::CalcMaskSize(unsigned int &nBytes, unsigned int &nNonzeroBytes) const {\n+    unsigned int nLastUsedByte = 0;\n+    for (unsigned int b = 0; 2+b*8 < vout.size(); b++) {\n+        bool fZero = true;\n+        for (unsigned int i = 0; i < 8 && 2+b*8+i < vout.size(); i++) {\n+            if (!vout[2+b*8+i].IsNull()) {\n+                fZero = false;\n+                continue;\n+            }\n+        }\n+        if (!fZero) {\n+            nLastUsedByte = b + 1;\n+            nNonzeroBytes++;\n+        }\n+    }\n+    nBytes += nLastUsedByte;\n+}\n+\n+bool CCoins::Spend(const COutPoint &out, CTxInUndo &undo) {\n+    if (out.n >= vout.size())\n+        return false;\n+    if (vout[out.n].IsNull())\n+        return false;\n+    undo = CTxInUndo(vout[out.n]);\n+    vout[out.n].SetNull();\n+    Cleanup();\n+    if (vout.size() == 0) {\n+        undo.nHeight = nHeight;\n+        undo.fCoinBase = fCoinBase;\n+        undo.nVersion = this->nVersion;\n+    }\n+    return true;\n+}\n+\n+bool CCoins::Spend(int nPos) {\n+    CTxInUndo undo;\n+    COutPoint out(0, nPos);\n+    return Spend(out, undo);\n+}\n+\n+uint256 CBlockHeader::GetHash() const\n+{\n+    return Hash(BEGIN(nVersion), END(nNonce));\n+}\n+\n+uint256 CBlock::BuildMerkleTree() const\n+{\n+    vMerkleTree.clear();\n+    BOOST_FOREACH(const CTransaction& tx, vtx)\n+        vMerkleTree.push_back(tx.GetHash());\n+    int j = 0;\n+    for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n+    {\n+        for (int i = 0; i < nSize; i += 2)\n+        {\n+            int i2 = std::min(i+1, nSize-1);\n+            vMerkleTree.push_back(Hash(BEGIN(vMerkleTree[j+i]),  END(vMerkleTree[j+i]),\n+                                       BEGIN(vMerkleTree[j+i2]), END(vMerkleTree[j+i2])));\n+        }\n+        j += nSize;\n+    }\n+    return (vMerkleTree.empty() ? 0 : vMerkleTree.back());\n+}\n+\n+std::vector<uint256> CBlock::GetMerkleBranch(int nIndex) const\n+{\n+    if (vMerkleTree.empty())\n+        BuildMerkleTree();\n+    std::vector<uint256> vMerkleBranch;\n+    int j = 0;\n+    for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n+    {\n+        int i = std::min(nIndex^1, nSize-1);\n+        vMerkleBranch.push_back(vMerkleTree[j+i]);\n+        nIndex >>= 1;\n+        j += nSize;\n+    }\n+    return vMerkleBranch;\n+}\n+\n+uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex)\n+{\n+    if (nIndex == -1)\n+        return 0;\n+    BOOST_FOREACH(const uint256& otherside, vMerkleBranch)\n+    {\n+        if (nIndex & 1)\n+            hash = Hash(BEGIN(otherside), END(otherside), BEGIN(hash), END(hash));\n+        else\n+            hash = Hash(BEGIN(hash), END(hash), BEGIN(otherside), END(otherside));\n+        nIndex >>= 1;\n+    }\n+    return hash;\n+}\n+\n+void CBlock::print() const\n+{\n+    LogPrintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\n+        GetHash().ToString().c_str(),\n+        nVersion,\n+        hashPrevBlock.ToString().c_str(),\n+        hashMerkleRoot.ToString().c_str(),\n+        nTime, nBits, nNonce,\n+        vtx.size());\n+    for (unsigned int i = 0; i < vtx.size(); i++)\n+    {\n+        LogPrintf(\"  \");\n+        vtx[i].print();\n+    }\n+    LogPrintf(\"  vMerkleTree: \");\n+    for (unsigned int i = 0; i < vMerkleTree.size(); i++)\n+        LogPrintf(\"%s \", vMerkleTree[i].ToString().c_str());\n+    LogPrintf(\"\\n\");\n+}"
      },
      {
        "sha": "ce21acd59e8f9946371ffe1c1b1e7ae756fce5fd",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 90,
        "deletions": 162,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -7,7 +7,6 @@\n \n #include \"uint256.h\"\n #include \"serialize.h\"\n-#include \"util.h\"\n #include \"script.h\"\n \n #include <stdio.h>\n@@ -42,15 +41,8 @@ class COutPoint\n         return !(a == b);\n     }\n \n-    std::string ToString() const\n-    {\n-        return strprintf(\"COutPoint(%s, %u)\", hash.ToString().substr(0,10).c_str(), n);\n-    }\n-\n-    void print() const\n-    {\n-        printf(\"%s\\n\", ToString().c_str());\n-    }\n+    std::string ToString() const;\n+    void print() const;\n };\n \n /** An inpoint - a combination of a transaction and an index n into its vin */\n@@ -82,19 +74,8 @@ class CTxIn\n         nSequence = std::numeric_limits<unsigned int>::max();\n     }\n \n-    explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=std::numeric_limits<unsigned int>::max())\n-    {\n-        prevout = prevoutIn;\n-        scriptSig = scriptSigIn;\n-        nSequence = nSequenceIn;\n-    }\n-\n-    CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=std::numeric_limits<unsigned int>::max())\n-    {\n-        prevout = COutPoint(hashPrevTx, nOut);\n-        scriptSig = scriptSigIn;\n-        nSequence = nSequenceIn;\n-    }\n+    explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=std::numeric_limits<unsigned int>::max());\n+    CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=std::numeric_limits<unsigned int>::max());\n \n     IMPLEMENT_SERIALIZE\n     (\n@@ -120,25 +101,8 @@ class CTxIn\n         return !(a == b);\n     }\n \n-    std::string ToString() const\n-    {\n-        std::string str;\n-        str += \"CTxIn(\";\n-        str += prevout.ToString();\n-        if (prevout.IsNull())\n-            str += strprintf(\", coinbase %s\", HexStr(scriptSig).c_str());\n-        else\n-            str += strprintf(\", scriptSig=%s\", scriptSig.ToString().substr(0,24).c_str());\n-        if (nSequence != std::numeric_limits<unsigned int>::max())\n-            str += strprintf(\", nSequence=%u\", nSequence);\n-        str += \")\";\n-        return str;\n-    }\n-\n-    void print() const\n-    {\n-        printf(\"%s\\n\", ToString().c_str());\n-    }\n+    std::string ToString() const;\n+    void print() const;\n };\n \n \n@@ -158,11 +122,7 @@ class CTxOut\n         SetNull();\n     }\n \n-    CTxOut(int64 nValueIn, CScript scriptPubKeyIn)\n-    {\n-        nValue = nValueIn;\n-        scriptPubKey = scriptPubKeyIn;\n-    }\n+    CTxOut(int64 nValueIn, CScript scriptPubKeyIn);\n \n     IMPLEMENT_SERIALIZE\n     (\n@@ -181,21 +141,18 @@ class CTxOut\n         return (nValue == -1);\n     }\n \n-    uint256 GetHash() const\n-    {\n-        return SerializeHash(*this);\n-    }\n+    uint256 GetHash() const;\n \n     bool IsDust(int64 nMinRelayTxFee) const\n     {\n         // \"Dust\" is defined in terms of CTransaction::nMinRelayTxFee,\n         // which has units satoshis-per-kilobyte.\n         // If you'd pay more than 1/3 in fees\n         // to spend something, then we consider it dust.\n-        // A typical txout is 33 bytes big, and will\n+        // A typical txout is 34 bytes big, and will\n         // need a CTxIn of at least 148 bytes to spend,\n         // so dust is a txout less than 54 uBTC\n-        // (5430 satoshis) with default nMinRelayTxFee\n+        // (5460 satoshis) with default nMinRelayTxFee\n         return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n     }\n \n@@ -210,17 +167,8 @@ class CTxOut\n         return !(a == b);\n     }\n \n-    std::string ToString() const\n-    {\n-        if (scriptPubKey.size() < 6)\n-            return \"CTxOut(error)\";\n-        return strprintf(\"CTxOut(nValue=%\"PRI64d\".%08\"PRI64d\", scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30).c_str());\n-    }\n-\n-    void print() const\n-    {\n-        printf(\"%s\\n\", ToString().c_str());\n-    }\n+    std::string ToString() const;\n+    void print() const;\n };\n \n \n@@ -265,39 +213,8 @@ class CTransaction\n         return (vin.empty() && vout.empty());\n     }\n \n-    uint256 GetHash() const\n-    {\n-        return SerializeHash(*this);\n-    }\n-\n-    bool IsNewerThan(const CTransaction& old) const\n-    {\n-        if (vin.size() != old.vin.size())\n-            return false;\n-        for (unsigned int i = 0; i < vin.size(); i++)\n-            if (vin[i].prevout != old.vin[i].prevout)\n-                return false;\n-\n-        bool fNewer = false;\n-        unsigned int nLowest = std::numeric_limits<unsigned int>::max();\n-        for (unsigned int i = 0; i < vin.size(); i++)\n-        {\n-            if (vin[i].nSequence != old.vin[i].nSequence)\n-            {\n-                if (vin[i].nSequence <= nLowest)\n-                {\n-                    fNewer = false;\n-                    nLowest = vin[i].nSequence;\n-                }\n-                if (old.vin[i].nSequence < nLowest)\n-                {\n-                    fNewer = true;\n-                    nLowest = old.vin[i].nSequence;\n-                }\n-            }\n-        }\n-        return fNewer;\n-    }\n+    uint256 GetHash() const;\n+    bool IsNewerThan(const CTransaction& old) const;\n \n     bool IsCoinBase() const\n     {\n@@ -318,26 +235,8 @@ class CTransaction\n     }\n \n \n-    std::string ToString() const\n-    {\n-        std::string str;\n-        str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%\"PRIszu\", vout.size=%\"PRIszu\", nLockTime=%u)\\n\",\n-            GetHash().ToString().substr(0,10).c_str(),\n-            nVersion,\n-            vin.size(),\n-            vout.size(),\n-            nLockTime);\n-        for (unsigned int i = 0; i < vin.size(); i++)\n-            str += \"    \" + vin[i].ToString() + \"\\n\";\n-        for (unsigned int i = 0; i < vout.size(); i++)\n-            str += \"    \" + vout[i].ToString() + \"\\n\";\n-        return str;\n-    }\n-\n-    void print() const\n-    {\n-        printf(\"%s\", ToString().c_str());\n-    }\n+    std::string ToString() const;\n+    void print() const;\n };\n \n /** wrapper for CTxOut that provides a more compact serialization */\n@@ -490,7 +389,9 @@ class CCoins\n     int nVersion;\n \n     // construct a CCoins from a CTransaction, at a given height\n-    CCoins(const CTransaction &tx, int nHeightIn) : fCoinBase(tx.IsCoinBase()), vout(tx.vout), nHeight(nHeightIn), nVersion(tx.nVersion) { }\n+    CCoins(const CTransaction &tx, int nHeightIn) : fCoinBase(tx.IsCoinBase()), vout(tx.vout), nHeight(nHeightIn), nVersion(tx.nVersion) {\n+        ClearUnspendable();\n+    }\n \n     // empty constructor\n     CCoins() : fCoinBase(false), vout(0), nHeight(0), nVersion(0) { }\n@@ -503,6 +404,14 @@ class CCoins\n             std::vector<CTxOut>().swap(vout);\n     }\n \n+    void ClearUnspendable() {\n+        BOOST_FOREACH(CTxOut &txout, vout) {\n+            if (txout.scriptPubKey.IsUnspendable())\n+                txout.SetNull();\n+        }\n+        Cleanup();\n+    }\n+\n     void swap(CCoins &to) {\n         std::swap(to.fCoinBase, fCoinBase);\n         to.vout.swap(vout);\n@@ -521,26 +430,7 @@ class CCoins\n         return !(a == b);\n     }\n \n-    // calculate number of bytes for the bitmask, and its number of non-zero bytes\n-    // each bit in the bitmask represents the availability of one output, but the\n-    // availabilities of the first two outputs are encoded separately\n-    void CalcMaskSize(unsigned int &nBytes, unsigned int &nNonzeroBytes) const {\n-        unsigned int nLastUsedByte = 0;\n-        for (unsigned int b = 0; 2+b*8 < vout.size(); b++) {\n-            bool fZero = true;\n-            for (unsigned int i = 0; i < 8 && 2+b*8+i < vout.size(); i++) {\n-                if (!vout[2+b*8+i].IsNull()) {\n-                    fZero = false;\n-                    continue;\n-                }\n-            }\n-            if (!fZero) {\n-                nLastUsedByte = b + 1;\n-                nNonzeroBytes++;\n-            }\n-        }\n-        nBytes += nLastUsedByte;\n-    }\n+    void CalcMaskSize(unsigned int &nBytes, unsigned int &nNonzeroBytes) const;\n \n     bool IsCoinBase() const {\n         return fCoinBase;\n@@ -633,28 +523,10 @@ class CCoins\n     }\n \n     // mark an outpoint spent, and construct undo information\n-    bool Spend(const COutPoint &out, CTxInUndo &undo) {\n-        if (out.n >= vout.size())\n-            return false;\n-        if (vout[out.n].IsNull())\n-            return false;\n-        undo = CTxInUndo(vout[out.n]);\n-        vout[out.n].SetNull();\n-        Cleanup();\n-        if (vout.size() == 0) {\n-            undo.nHeight = nHeight;\n-            undo.fCoinBase = fCoinBase;\n-            undo.nVersion = this->nVersion;\n-        }\n-        return true;\n-    }\n+    bool Spend(const COutPoint &out, CTxInUndo &undo);\n \n     // mark a vout spent\n-    bool Spend(int nPos) {\n-        CTxInUndo undo;\n-        COutPoint out(0, nPos);\n-        return Spend(out, undo);\n-    }\n+    bool Spend(int nPos);\n \n     // check whether a particular output is still available\n     bool IsAvailable(unsigned int nPos) const {\n@@ -722,15 +594,71 @@ class CBlockHeader\n         return (nBits == 0);\n     }\n \n-    uint256 GetHash() const\n-    {\n-        return Hash(BEGIN(nVersion), END(nNonce));\n-    }\n+    uint256 GetHash() const;\n \n     int64 GetBlockTime() const\n     {\n         return (int64)nTime;\n     }\n };\n \n+\n+class CBlock : public CBlockHeader\n+{\n+public:\n+    // network and disk\n+    std::vector<CTransaction> vtx;\n+\n+    // memory only\n+    mutable std::vector<uint256> vMerkleTree;\n+\n+    CBlock()\n+    {\n+        SetNull();\n+    }\n+\n+    CBlock(const CBlockHeader &header)\n+    {\n+        SetNull();\n+        *((CBlockHeader*)this) = header;\n+    }\n+\n+    IMPLEMENT_SERIALIZE\n+    (\n+        READWRITE(*(CBlockHeader*)this);\n+        READWRITE(vtx);\n+    )\n+\n+    void SetNull()\n+    {\n+        CBlockHeader::SetNull();\n+        vtx.clear();\n+        vMerkleTree.clear();\n+    }\n+\n+    CBlockHeader GetBlockHeader() const\n+    {\n+        CBlockHeader block;\n+        block.nVersion       = nVersion;\n+        block.hashPrevBlock  = hashPrevBlock;\n+        block.hashMerkleRoot = hashMerkleRoot;\n+        block.nTime          = nTime;\n+        block.nBits          = nBits;\n+        block.nNonce         = nNonce;\n+        return block;\n+    }\n+\n+    uint256 BuildMerkleTree() const;\n+\n+    const uint256 &GetTxHash(unsigned int nIndex) const {\n+        assert(vMerkleTree.size() > 0); // BuildMerkleTree must have been called first\n+        assert(nIndex < vtx.size());\n+        return vMerkleTree[nIndex];\n+    }\n+\n+    std::vector<uint256> GetMerkleBranch(int nIndex) const;\n+    static uint256 CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex);\n+    void print() const;\n+};\n+\n #endif"
      },
      {
        "sha": "754de536a90863f5ff19e27cffd0ef46f2190eba",
        "filename": "src/crypter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -6,9 +6,6 @@\n #include <openssl/evp.h>\n #include <vector>\n #include <string>\n-#ifdef WIN32\n-#include <windows.h>\n-#endif\n \n #include \"crypter.h\"\n "
      },
      {
        "sha": "f722c52e930dbf5d04cee1d987f25c68e14e6bfe",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 22,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -3,11 +3,11 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"chainparams.h\"\n #include \"db.h\"\n #include \"util.h\"\n #include \"hash.h\"\n #include \"addrman.h\"\n-#include <boost/version.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n #include <openssl/rand.h>\n@@ -38,7 +38,7 @@ void CDBEnv::EnvShutdown()\n     fDbEnvInit = false;\n     int ret = dbenv.close(0);\n     if (ret != 0)\n-        printf(\"EnvShutdown exception: %s (%d)\\n\", DbEnv::strerror(ret), ret);\n+        LogPrintf(\"EnvShutdown exception: %s (%d)\\n\", DbEnv::strerror(ret), ret);\n     if (!fMockDb)\n         DbEnv(0).remove(path.string().c_str(), 0);\n }\n@@ -70,7 +70,7 @@ bool CDBEnv::Open(const boost::filesystem::path& pathIn)\n     filesystem::path pathLogDir = path / \"database\";\n     filesystem::create_directory(pathLogDir);\n     filesystem::path pathErrorFile = path / \"db.log\";\n-    printf(\"dbenv.open LogDir=%s ErrorFile=%s\\n\", pathLogDir.string().c_str(), pathErrorFile.string().c_str());\n+    LogPrintf(\"dbenv.open LogDir=%s ErrorFile=%s\\n\", pathLogDir.string().c_str(), pathErrorFile.string().c_str());\n \n     unsigned int nEnvFlags = 0;\n     if (GetBoolArg(\"-privdb\", true))\n@@ -111,7 +111,7 @@ void CDBEnv::MakeMock()\n \n     boost::this_thread::interruption_point();\n \n-    printf(\"CDBEnv::MakeMock()\\n\");\n+    LogPrint(\"db\", \"CDBEnv::MakeMock()\\n\");\n \n     dbenv.set_cachesize(1, 0, 1);\n     dbenv.set_lg_bsize(10485760*4);\n@@ -168,16 +168,16 @@ bool CDBEnv::Salvage(std::string strFile, bool fAggressive,\n     int result = db.verify(strFile.c_str(), NULL, &strDump, flags);\n     if (result == DB_VERIFY_BAD)\n     {\n-        printf(\"Error: Salvage found errors, all data may not be recoverable.\\n\");\n+        LogPrintf(\"Error: Salvage found errors, all data may not be recoverable.\\n\");\n         if (!fAggressive)\n         {\n-            printf(\"Error: Rerun with aggressive mode to ignore errors and continue.\\n\");\n+            LogPrintf(\"Error: Rerun with aggressive mode to ignore errors and continue.\\n\");\n             return false;\n         }\n     }\n     if (result != 0 && result != DB_VERIFY_BAD)\n     {\n-        printf(\"ERROR: db salvage failed: %d\\n\",result);\n+        LogPrintf(\"ERROR: db salvage failed: %d\\n\",result);\n         return false;\n     }\n \n@@ -348,7 +348,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                 bitdb.mapFileUseCount.erase(strFile);\n \n                 bool fSuccess = true;\n-                printf(\"Rewriting %s...\\n\", strFile.c_str());\n+                LogPrintf(\"Rewriting %s...\\n\", strFile.c_str());\n                 string strFileRes = strFile + \".rewrite\";\n                 { // surround usage of db with extra {}\n                     CDB db(strFile.c_str(), \"r\");\n@@ -362,7 +362,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                                             0);\n                     if (ret > 0)\n                     {\n-                        printf(\"Cannot create database file %s\\n\", strFileRes.c_str());\n+                        LogPrintf(\"Cannot create database file %s\\n\", strFileRes.c_str());\n                         fSuccess = false;\n                     }\n \n@@ -418,7 +418,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                         fSuccess = false;\n                 }\n                 if (!fSuccess)\n-                    printf(\"Rewriting of %s FAILED!\\n\", strFileRes.c_str());\n+                    LogPrintf(\"Rewriting of %s FAILED!\\n\", strFileRes.c_str());\n                 return fSuccess;\n             }\n         }\n@@ -433,7 +433,7 @@ void CDBEnv::Flush(bool fShutdown)\n     int64 nStart = GetTimeMillis();\n     // Flush log data to the actual data file\n     //  on all files that are not in use\n-    printf(\"Flush(%s)%s\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\");\n+    LogPrint(\"db\", \"Flush(%s)%s\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\");\n     if (!fDbEnvInit)\n         return;\n     {\n@@ -443,23 +443,23 @@ void CDBEnv::Flush(bool fShutdown)\n         {\n             string strFile = (*mi).first;\n             int nRefCount = (*mi).second;\n-            printf(\"%s refcount=%d\\n\", strFile.c_str(), nRefCount);\n+            LogPrint(\"db\", \"%s refcount=%d\\n\", strFile.c_str(), nRefCount);\n             if (nRefCount == 0)\n             {\n                 // Move log data to the dat file\n                 CloseDb(strFile);\n-                printf(\"%s checkpoint\\n\", strFile.c_str());\n+                LogPrint(\"db\", \"%s checkpoint\\n\", strFile.c_str());\n                 dbenv.txn_checkpoint(0, 0, 0);\n-                printf(\"%s detach\\n\", strFile.c_str());\n+                LogPrint(\"db\", \"%s detach\\n\", strFile.c_str());\n                 if (!fMockDb)\n                     dbenv.lsn_reset(strFile.c_str(), 0);\n-                printf(\"%s closed\\n\", strFile.c_str());\n+                LogPrint(\"db\", \"%s closed\\n\", strFile.c_str());\n                 mapFileUseCount.erase(mi++);\n             }\n             else\n                 mi++;\n         }\n-        printf(\"DBFlush(%s)%s ended %15\"PRI64d\"ms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\", GetTimeMillis() - nStart);\n+        LogPrint(\"db\", \"DBFlush(%s)%s ended %15\"PRI64d\"ms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\", GetTimeMillis() - nStart);\n         if (fShutdown)\n         {\n             char** listp;\n@@ -488,8 +488,6 @@ void CDBEnv::Flush(bool fShutdown)\n // CAddrDB\n //\n \n-unsigned char CAddrDB::pchMessageStart[4] = { 0x00, 0x00, 0x00, 0x00 };\n-\n CAddrDB::CAddrDB()\n {\n     pathAddr = GetDataDir() / \"peers.dat\";\n@@ -504,7 +502,7 @@ bool CAddrDB::Write(const CAddrMan& addr)\n \n     // serialize addresses, checksum data up to that point, then append csum\n     CDataStream ssPeers(SER_DISK, CLIENT_VERSION);\n-    ssPeers << FLATDATA(CAddrDB::pchMessageStart);\n+    ssPeers << FLATDATA(Params().MessageStart());\n     ssPeers << addr;\n     uint256 hash = Hash(ssPeers.begin(), ssPeers.end());\n     ssPeers << hash;\n@@ -569,11 +567,11 @@ bool CAddrDB::Read(CAddrMan& addr)\n \n     unsigned char pchMsgTmp[4];\n     try {\n-        // de-serialize file header (CAddrDB::pchMessageStart magic number) and\n+        // de-serialize file header (network specific magic number) and ..\n         ssPeers >> FLATDATA(pchMsgTmp);\n \n-        // verify the network matches ours\n-        if (memcmp(pchMsgTmp, CAddrDB::pchMessageStart, sizeof(pchMsgTmp)))\n+        // ... verify the network matches ours\n+        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n             return error(\"CAddrman::Read() : invalid network magic number\");\n \n         // de-serialize address data into one CAddrMan object"
      },
      {
        "sha": "b3f269f3dabbe5f8c9f8ae08ba498ec330ebca74",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -318,14 +318,10 @@ class CAddrDB\n {\n private:\n     boost::filesystem::path pathAddr;\n-    static unsigned char pchMessageStart[4];\n-\n public:\n     CAddrDB();\n     bool Write(const CAddrMan& addr);\n     bool Read(CAddrMan& addr);\n-\n-    static void SetMessageStart(unsigned char _pchMessageStart[]) { memcpy(CAddrDB::pchMessageStart, _pchMessageStart, sizeof(CAddrDB::pchMessageStart)); }\n };\n \n #endif // BITCOIN_DB_H"
      },
      {
        "sha": "7b054bd1545d51fef9e742c5fa1289bd379ee2b5",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -56,3 +56,44 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n     return h1;\n }\n+\n+int HMAC_SHA512_Init(HMAC_SHA512_CTX *pctx, const void *pkey, size_t len)\n+{\n+    unsigned char key[128];\n+    if (len <= 128)\n+    {\n+        memcpy(key, pkey, len);\n+        memset(key + len, 0, 128-len);\n+    }\n+    else\n+    {\n+        SHA512_CTX ctxKey;\n+        SHA512_Init(&ctxKey);\n+        SHA512_Update(&ctxKey, pkey, len);\n+        SHA512_Final(key, &ctxKey);\n+        memset(key + 64, 0, 64);\n+    }\n+\n+    for (int n=0; n<128; n++)\n+        key[n] ^= 0x5c;\n+    SHA512_Init(&pctx->ctxOuter);\n+    SHA512_Update(&pctx->ctxOuter, key, 128);\n+\n+    for (int n=0; n<128; n++)\n+        key[n] ^= 0x5c ^ 0x36;\n+    SHA512_Init(&pctx->ctxInner);\n+    return SHA512_Update(&pctx->ctxInner, key, 128);\n+}\n+\n+int HMAC_SHA512_Update(HMAC_SHA512_CTX *pctx, const void *pdata, size_t len)\n+{\n+    return SHA512_Update(&pctx->ctxInner, pdata, len);\n+}\n+\n+int HMAC_SHA512_Final(unsigned char *pmd, HMAC_SHA512_CTX *pctx)\n+{\n+    unsigned char buf[64];\n+    SHA512_Final(buf, &pctx->ctxInner);\n+    SHA512_Update(&pctx->ctxOuter, buf, 64);\n+    return SHA512_Final(pmd, &pctx->ctxOuter);\n+}"
      },
      {
        "sha": "880468a2d205537f659005a0dc56fc86144bc8a8",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -123,4 +123,14 @@ inline uint160 Hash160(const std::vector<unsigned char>& vch)\n \n unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char>& vDataToHash);\n \n+typedef struct\n+{\n+    SHA512_CTX ctxInner;\n+    SHA512_CTX ctxOuter;\n+} HMAC_SHA512_CTX;\n+\n+int HMAC_SHA512_Init(HMAC_SHA512_CTX *pctx, const void *pkey, size_t len);\n+int HMAC_SHA512_Update(HMAC_SHA512_CTX *pctx, const void *pdata, size_t len);\n+int HMAC_SHA512_Final(unsigned char *pmd, HMAC_SHA512_CTX *pctx);\n+\n #endif"
      },
      {
        "sha": "e75e981a578d02479797a0941b0e51367f6beb11",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 99,
        "deletions": 66,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -3,14 +3,20 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"init.h\"\n #include \"main.h\"\n #include \"core.h\"\n+#include \"chainparams.h\"\n #include \"txdb.h\"\n #include \"walletdb.h\"\n #include \"bitcoinrpc.h\"\n #include \"net.h\"\n #include \"util.h\"\n+#include \"miner.h\"\n #include \"ui_interface.h\"\n #include \"checkpoints.h\"\n \n@@ -28,6 +34,7 @@\n using namespace std;\n using namespace boost;\n \n+std::string strWalletFile;\n CWallet* pwalletMain;\n CClientUIInterface uiInterface;\n \n@@ -93,6 +100,7 @@ static CCoinsViewDB *pcoinsdbview;\n \n void Shutdown()\n {\n+    LogPrintf(\"Shutdown : In progress...\\n\");\n     static CCriticalSection cs_Shutdown;\n     TRY_LOCK(cs_Shutdown, lockShutdown);\n     if (!lockShutdown) return;\n@@ -101,7 +109,8 @@ void Shutdown()\n     nTransactionsUpdated++;\n     StopRPCThreads();\n     ShutdownRPCMining();\n-    bitdb.Flush(false);\n+    if (pwalletMain)\n+        bitdb.Flush(false);\n     GenerateBitcoins(false, NULL);\n     StopNode();\n     {\n@@ -116,10 +125,13 @@ void Shutdown()\n         delete pcoinsdbview; pcoinsdbview = NULL;\n         delete pblocktree; pblocktree = NULL;\n     }\n-    bitdb.Flush(true);\n+    if (pwalletMain)\n+        bitdb.Flush(true);\n     boost::filesystem::remove(GetPidFile());\n-    UnregisterWallet(pwalletMain);\n-    delete pwalletMain;\n+    UnregisterAllWallets();\n+    if (pwalletMain)\n+        delete pwalletMain;\n+    LogPrintf(\"Shutdown : done\\n\");\n }\n \n //\n@@ -168,6 +180,7 @@ std::string HelpMessage()\n     strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n     strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n+    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n     strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n@@ -210,6 +223,8 @@ std::string HelpMessage()\n     strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n+    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n #ifdef WIN32\n     strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n@@ -222,7 +237,7 @@ std::string HelpMessage()\n     strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n     strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n+    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n     strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n     strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n@@ -234,12 +249,12 @@ std::string HelpMessage()\n     strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n     strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n \n-    strUsage += \"\\n\"; _(\"Block creation options:\") + \"\\n\";\n+    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n     strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n     strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n \n-    strUsage += \"\\n\"; _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n+    strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\";\n     strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + _(\"Server private key (default: server.pem)\") + \"\\n\";\n@@ -274,13 +289,13 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n             FILE *file = OpenBlockFile(pos, true);\n             if (!file)\n                 break;\n-            printf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n+            LogPrintf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n             LoadExternalBlockFile(file, &pos);\n             nFile++;\n         }\n         pblocktree->WriteReindexing(false);\n         fReindex = false;\n-        printf(\"Reindexing finished\\n\");\n+        LogPrintf(\"Reindexing finished\\n\");\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n         InitBlockIndex();\n     }\n@@ -292,7 +307,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         if (file) {\n             CImportingNow imp;\n             filesystem::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n-            printf(\"Importing bootstrap.dat...\\n\");\n+            LogPrintf(\"Importing bootstrap.dat...\\n\");\n             LoadExternalBlockFile(file);\n             RenameOver(pathBootstrap, pathBootstrapOld);\n         }\n@@ -303,7 +318,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         FILE *file = fopen(path.string().c_str(), \"rb\");\n         if (file) {\n             CImportingNow imp;\n-            printf(\"Importing %s...\\n\", path.string().c_str());\n+            LogPrintf(\"Importing %s...\\n\", path.string().c_str());\n             LoadExternalBlockFile(file);\n         }\n     }\n@@ -329,8 +344,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // Minimum supported OS versions: WinXP SP3, WinVista >= SP1, Win Server 2008\n     // A failure is non-critical and needs no further attention!\n #ifndef PROCESS_DEP_ENABLE\n-// We define this here, because GCCs winbase.h limits this to _WIN32_WINNT >= 0x0601 (Windows 7),\n-// which is not correct. Can be removed, when GCCs winbase.h is fixed!\n+    // We define this here, because GCCs winbase.h limits this to _WIN32_WINNT >= 0x0601 (Windows 7),\n+    // which is not correct. Can be removed, when GCCs winbase.h is fixed!\n #define PROCESS_DEP_ENABLE 0x00000001\n #endif\n     typedef BOOL (WINAPI *PSETPROCDEPPOL)(DWORD);\n@@ -362,13 +377,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n     sigemptyset(&sa_hup.sa_mask);\n     sa_hup.sa_flags = 0;\n     sigaction(SIGHUP, &sa_hup, NULL);\n+\n+#if defined (__SVR4) && defined (__sun)\n+    // ignore SIGPIPE on Solaris\n+    signal(SIGPIPE, SIG_IGN);\n+#endif\n #endif\n \n     // ********************************************************* Step 2: parameter interactions\n \n-    fTestNet = GetBoolArg(\"-testnet\", false);\n-    Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);\n-\n     if (mapArgs.count(\"-bind\")) {\n         // when specifying an explicit binding address, you want to listen on it\n         // even when -connect or -proxy is specified\n@@ -414,8 +431,10 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n-    fDebug = GetBoolArg(\"-debug\", false);\n+    if (mapMultiArgs.count(\"-debug\")) fDebug = true;\n     fBenchmark = GetBoolArg(\"-benchmark\", false);\n+    mempool.fChecks = GetBoolArg(\"-checkmempool\", RegTest());\n+    Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", 0);\n@@ -488,10 +507,16 @@ bool AppInit2(boost::thread_group& threadGroup)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n+    strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     std::string strDataDir = GetDataDir().string();\n \n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+        return InitError(strprintf(_(\"Wallet %s resides outside data directory %s\"), strWalletFile.c_str(), strDataDir.c_str()));\n+\n     // Make sure only a single Bitcoin process is using the data directory.\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n@@ -502,21 +527,21 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     if (GetBoolArg(\"-shrinkdebugfile\", !fDebug))\n         ShrinkDebugFile();\n-    printf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n-    printf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n-    printf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n+    LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n+    LogPrintf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n+    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n     if (!fLogTimestamps)\n-        printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n-    printf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n-    printf(\"Using data directory %s\\n\", strDataDir.c_str());\n-    printf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n+        LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n+    LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n+    LogPrintf(\"Using data directory %s\\n\", strDataDir.c_str());\n+    LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n     if (fDaemon)\n         fprintf(stdout, \"Bitcoin server starting\\n\");\n \n     if (nScriptCheckThreads) {\n-        printf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n+        LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n         for (int i=0; i<nScriptCheckThreads-1; i++)\n             threadGroup.create_thread(&ThreadScriptCheck);\n     }\n@@ -534,7 +559,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         boost::filesystem::path pathDatabaseBak = GetDataDir() / strprintf(\"database.%\"PRI64d\".bak\", GetTime());\n         try {\n             boost::filesystem::rename(pathDatabase, pathDatabaseBak);\n-            printf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string().c_str(), pathDatabaseBak.string().c_str());\n+            LogPrintf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string().c_str(), pathDatabaseBak.string().c_str());\n         } catch(boost::filesystem::filesystem_error &error) {\n              // failure is ok (well, not really, but it's not worse than what we started with)\n         }\n@@ -550,13 +575,13 @@ bool AppInit2(boost::thread_group& threadGroup)\n     if (GetBoolArg(\"-salvagewallet\", false))\n     {\n         // Recover readable keypairs:\n-        if (!CWalletDB::Recover(bitdb, \"wallet.dat\", true))\n+        if (!CWalletDB::Recover(bitdb, strWalletFile, true))\n             return false;\n     }\n \n-    if (filesystem::exists(GetDataDir() / \"wallet.dat\"))\n+    if (filesystem::exists(GetDataDir() / strWalletFile))\n     {\n-        CDBEnv::VerifyResult r = bitdb.Verify(\"wallet.dat\", CWalletDB::Recover);\n+        CDBEnv::VerifyResult r = bitdb.Verify(strWalletFile, CWalletDB::Recover);\n         if (r == CDBEnv::RECOVER_OK)\n         {\n             string msg = strprintf(_(\"Warning: wallet.dat corrupt, data salvaged!\"\n@@ -572,7 +597,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // ********************************************************* Step 6: network initialization\n \n     RegisterNodeSignals(GetNodeSignals());\n- \n+\n     int nSocksVersion = GetArg(\"-socks\", 5);\n     if (nSocksVersion != 4 && nSocksVersion != 5)\n         return InitError(strprintf(_(\"Unknown -socks proxy version requested: %i\"), nSocksVersion));\n@@ -685,12 +710,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n             filesystem::path dest = blocksDir / strprintf(\"blk%05u.dat\", i-1);\n             try {\n                 filesystem::create_hard_link(source, dest);\n-                printf(\"Hardlinked %s -> %s\\n\", source.string().c_str(), dest.string().c_str());\n+                LogPrintf(\"Hardlinked %s -> %s\\n\", source.string().c_str(), dest.string().c_str());\n                 linked = true;\n             } catch (filesystem::filesystem_error & e) {\n                 // Note: hardlink creation failing is not a disaster, it just means\n                 // blocks will get re-downloaded from peers.\n-                printf(\"Error hardlinking blk%04u.dat : %s\\n\", i, e.what());\n+                LogPrintf(\"Error hardlinking blk%04u.dat : %s\\n\", i, e.what());\n                 break;\n             }\n         }\n@@ -750,12 +775,20 @@ bool AppInit2(boost::thread_group& threadGroup)\n                     break;\n                 }\n \n+                // Check for changed -txindex state\n+                if (fTxIndex != GetBoolArg(\"-txindex\", false)) {\n+                    strLoadError = _(\"You need to rebuild the database using -reindex to change -txindex\");\n+                    break;\n+                }\n+\n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n-                if (!VerifyDB()) {\n+                if (!VerifyDB(GetArg(\"-checklevel\", 3),\n+                              GetArg(\"-checkblocks\", 288))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n                 }\n             } catch(std::exception &e) {\n+                if (fDebug) LogPrintf(\"%s\\n\", e.what());\n                 strLoadError = _(\"Error opening block database\");\n                 break;\n             }\n@@ -767,12 +800,13 @@ bool AppInit2(boost::thread_group& threadGroup)\n             // first suggest a reindex\n             if (!fReset) {\n                 bool fRet = uiInterface.ThreadSafeMessageBox(\n-                    strLoadError + \".\\n\" + _(\"Do you want to rebuild the block database now?\"),\n+                    strLoadError + \".\\n\\n\" + _(\"Do you want to rebuild the block database now?\"),\n                     \"\", CClientUIInterface::MSG_ERROR | CClientUIInterface::BTN_ABORT);\n                 if (fRet) {\n                     fReindex = true;\n                     fRequestShutdown = false;\n                 } else {\n+                    LogPrintf(\"Aborted block database rebuild. Exiting.\\n\");\n                     return false;\n                 }\n             } else {\n@@ -781,18 +815,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n         }\n     }\n \n-    if (mapArgs.count(\"-txindex\") && fTxIndex != GetBoolArg(\"-txindex\", false))\n-        return InitError(_(\"You need to rebuild the databases using -reindex to change -txindex\"));\n-\n     // as LoadBlockIndex can take several minutes, it's possible the user\n     // requested to kill bitcoin-qt during the last operation. If so, exit.\n     // As the program has not fully started yet, Shutdown() is possibly overkill.\n     if (fRequestShutdown)\n     {\n-        printf(\"Shutdown requested. Exiting.\\n\");\n+        LogPrintf(\"Shutdown requested. Exiting.\\n\");\n         return false;\n     }\n-    printf(\" block index %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+    LogPrintf(\" block index %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n \n     if (GetBoolArg(\"-printblockindex\", false) || GetBoolArg(\"-printblocktree\", false))\n     {\n@@ -811,15 +842,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n             {\n                 CBlockIndex* pindex = (*mi).second;\n                 CBlock block;\n-                block.ReadFromDisk(pindex);\n+                ReadBlockFromDisk(block, pindex);\n                 block.BuildMerkleTree();\n                 block.print();\n-                printf(\"\\n\");\n+                LogPrintf(\"\\n\");\n                 nFound++;\n             }\n         }\n         if (nFound == 0)\n-            printf(\"No blocks matching %s were found\\n\", strMatch.c_str());\n+            LogPrintf(\"No blocks matching %s were found\\n\", strMatch.c_str());\n         return false;\n     }\n \n@@ -829,7 +860,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     nStart = GetTimeMillis();\n     bool fFirstRun = true;\n-    pwalletMain = new CWallet(\"wallet.dat\");\n+    pwalletMain = new CWallet(strWalletFile);\n     DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n     if (nLoadWalletRet != DB_LOAD_OK)\n     {\n@@ -846,7 +877,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         else if (nLoadWalletRet == DB_NEED_REWRITE)\n         {\n             strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin to complete\") << \"\\n\";\n-            printf(\"%s\", strErrors.str().c_str());\n+            LogPrintf(\"%s\", strErrors.str().c_str());\n             return InitError(strErrors.str());\n         }\n         else\n@@ -858,12 +889,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n         int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n         if (nMaxVersion == 0) // the -upgradewallet without argument case\n         {\n-            printf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n+            LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n             nMaxVersion = CLIENT_VERSION;\n             pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n         }\n         else\n-            printf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n+            LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n         if (nMaxVersion < pwalletMain->GetVersion())\n             strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n         pwalletMain->SetMaxVersion(nMaxVersion);\n@@ -875,17 +906,17 @@ bool AppInit2(boost::thread_group& threadGroup)\n         RandAddSeedPerfmon();\n \n         CPubKey newDefaultKey;\n-        if (pwalletMain->GetKeyFromPool(newDefaultKey, false)) {\n+        if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n             pwalletMain->SetDefaultKey(newDefaultKey);\n-            if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n+            if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n                 strErrors << _(\"Cannot write default address\") << \"\\n\";\n         }\n \n         pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n     }\n \n-    printf(\"%s\", strErrors.str().c_str());\n-    printf(\" wallet      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+    LogPrintf(\"%s\", strErrors.str().c_str());\n+    LogPrintf(\" wallet      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n \n     RegisterWallet(pwalletMain);\n \n@@ -894,7 +925,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         pindexRescan = pindexGenesisBlock;\n     else\n     {\n-        CWalletDB walletdb(\"wallet.dat\");\n+        CWalletDB walletdb(strWalletFile);\n         CBlockLocator locator;\n         if (walletdb.ReadBestBlock(locator))\n             pindexRescan = locator.GetBlockIndex();\n@@ -904,10 +935,10 @@ bool AppInit2(boost::thread_group& threadGroup)\n     if (pindexBest && pindexBest != pindexRescan)\n     {\n         uiInterface.InitMessage(_(\"Rescanning...\"));\n-        printf(\"Rescanning last %i blocks (from block %i)...\\n\", pindexBest->nHeight - pindexRescan->nHeight, pindexRescan->nHeight);\n+        LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", pindexBest->nHeight - pindexRescan->nHeight, pindexRescan->nHeight);\n         nStart = GetTimeMillis();\n         pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-        printf(\" rescan      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+        LogPrintf(\" rescan      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n         pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n         nWalletDBUpdated++;\n     }\n@@ -934,13 +965,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n     nStart = GetTimeMillis();\n \n     {\n-        CAddrDB::SetMessageStart(pchMessageStart);\n         CAddrDB adb;\n         if (!adb.Read(addrman))\n-            printf(\"Invalid or missing peers.dat; recreating\\n\");\n+            LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n     }\n \n-    printf(\"Loaded %i addresses from peers.dat  %\"PRI64d\"ms\\n\",\n+    LogPrintf(\"Loaded %i addresses from peers.dat  %\"PRI64d\"ms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n \n     // ********************************************************* Step 11: start node\n@@ -954,11 +984,11 @@ bool AppInit2(boost::thread_group& threadGroup)\n     RandAddSeedPerfmon();\n \n     //// debug print\n-    printf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n-    printf(\"nBestHeight = %d\\n\",                   nBestHeight);\n-    printf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain->setKeyPool.size());\n-    printf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain->mapWallet.size());\n-    printf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain->mapAddressBook.size());\n+    LogPrintf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n+    LogPrintf(\"nBestHeight = %d\\n\",                   nBestHeight);\n+    LogPrintf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n \n     StartNode(threadGroup);\n \n@@ -968,17 +998,20 @@ bool AppInit2(boost::thread_group& threadGroup)\n         StartRPCThreads();\n \n     // Generate coins in the background\n-    GenerateBitcoins(GetBoolArg(\"-gen\", false), pwalletMain);\n+    if (pwalletMain)\n+        GenerateBitcoins(GetBoolArg(\"-gen\", false), pwalletMain);\n \n     // ********************************************************* Step 12: finished\n \n     uiInterface.InitMessage(_(\"Done loading\"));\n \n-     // Add wallet transactions that aren't already in a block to mapTransactions\n-    pwalletMain->ReacceptWalletTransactions();\n+    if (pwalletMain) {\n+        // Add wallet transactions that aren't already in a block to mapTransactions\n+        pwalletMain->ReacceptWalletTransactions();\n \n-    // Run a thread to flush wallet periodically\n-    threadGroup.create_thread(boost::bind(&ThreadFlushWalletDB, boost::ref(pwalletMain->strWalletFile)));\n+        // Run a thread to flush wallet periodically\n+        threadGroup.create_thread(boost::bind(&ThreadFlushWalletDB, boost::ref(pwalletMain->strWalletFile)));\n+    }\n \n     return !fRequestShutdown;\n }"
      },
      {
        "sha": "a4d5a672524fac7689266fb4db4a0e6b0f1750dd",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"wallet.h\"\n \n+extern std::string strWalletFile;\n extern CWallet* pwalletMain;\n \n void StartShutdown();"
      },
      {
        "sha": "8ef1c414c4275b96ab94a328d7310d22a37e9738",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 203,
        "deletions": 3,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <openssl/bn.h>\n #include <openssl/ecdsa.h>\n #include <openssl/rand.h>\n #include <openssl/obj_mac.h>\n@@ -155,7 +156,8 @@ class CECKey {\n         BN_clear_free(&bn);\n     }\n \n-    void GetPrivKey(CPrivKey &privkey) {\n+    void GetPrivKey(CPrivKey &privkey, bool fCompressed) {\n+        EC_KEY_set_conv_form(pkey, fCompressed ? POINT_CONVERSION_COMPRESSED : POINT_CONVERSION_UNCOMPRESSED);\n         int nSize = i2d_ECPrivateKey(pkey, NULL);\n         assert(nSize);\n         privkey.resize(nSize);\n@@ -193,9 +195,28 @@ class CECKey {\n     }\n \n     bool Sign(const uint256 &hash, std::vector<unsigned char>& vchSig) {\n+        vchSig.clear();\n+        ECDSA_SIG *sig = ECDSA_do_sign((unsigned char*)&hash, sizeof(hash), pkey);\n+        if (sig == NULL)\n+            return false;\n+        BN_CTX *ctx = BN_CTX_new();\n+        BN_CTX_start(ctx);\n+        const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+        BIGNUM *order = BN_CTX_get(ctx);\n+        BIGNUM *halforder = BN_CTX_get(ctx);\n+        EC_GROUP_get_order(group, order, ctx);\n+        BN_rshift1(halforder, order);\n+        if (BN_cmp(sig->s, halforder) > 0) {\n+            // enforce low S values, by negating the value (modulo the order) if above order/2.\n+            BN_sub(sig->s, order, sig->s);\n+        }\n+        BN_CTX_end(ctx);\n+        BN_CTX_free(ctx);\n         unsigned int nSize = ECDSA_size(pkey);\n         vchSig.resize(nSize); // Make sure it is big enough\n-        assert(ECDSA_sign(0, (unsigned char*)&hash, sizeof(hash), &vchSig[0], &nSize, pkey));\n+        unsigned char *pos = &vchSig[0];\n+        nSize = i2d_ECDSA_SIG(sig, &pos);\n+        ECDSA_SIG_free(sig);\n         vchSig.resize(nSize); // Shrink to fit actual size\n         return true;\n     }\n@@ -253,6 +274,57 @@ class CECKey {\n         ECDSA_SIG_free(sig);\n         return ret;\n     }\n+\n+    static bool TweakSecret(unsigned char vchSecretOut[32], const unsigned char vchSecretIn[32], const unsigned char vchTweak[32])\n+    {\n+        bool ret = true;\n+        BN_CTX *ctx = BN_CTX_new();\n+        BN_CTX_start(ctx);\n+        BIGNUM *bnSecret = BN_CTX_get(ctx);\n+        BIGNUM *bnTweak = BN_CTX_get(ctx);\n+        BIGNUM *bnOrder = BN_CTX_get(ctx);\n+        EC_GROUP *group = EC_GROUP_new_by_curve_name(NID_secp256k1);\n+        EC_GROUP_get_order(group, bnOrder, ctx); // what a grossly inefficient way to get the (constant) group order...\n+        BN_bin2bn(vchTweak, 32, bnTweak);\n+        if (BN_cmp(bnTweak, bnOrder) >= 0)\n+            ret = false; // extremely unlikely\n+        BN_bin2bn(vchSecretIn, 32, bnSecret);\n+        BN_add(bnSecret, bnSecret, bnTweak);\n+        BN_nnmod(bnSecret, bnSecret, bnOrder, ctx);\n+        if (BN_is_zero(bnSecret))\n+            ret = false; // ridiculously unlikely\n+        int nBits = BN_num_bits(bnSecret);\n+        memset(vchSecretOut, 0, 32);\n+        BN_bn2bin(bnSecret, &vchSecretOut[32-(nBits+7)/8]);\n+        EC_GROUP_free(group);\n+        BN_CTX_end(ctx);\n+        BN_CTX_free(ctx);\n+        return ret;\n+    }\n+\n+    bool TweakPublic(const unsigned char vchTweak[32]) {\n+        bool ret = true;\n+        BN_CTX *ctx = BN_CTX_new();\n+        BN_CTX_start(ctx);\n+        BIGNUM *bnTweak = BN_CTX_get(ctx);\n+        BIGNUM *bnOrder = BN_CTX_get(ctx);\n+        BIGNUM *bnOne = BN_CTX_get(ctx);\n+        const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+        EC_GROUP_get_order(group, bnOrder, ctx); // what a grossly inefficient way to get the (constant) group order...\n+        BN_bin2bn(vchTweak, 32, bnTweak);\n+        if (BN_cmp(bnTweak, bnOrder) >= 0)\n+            ret = false; // extremely unlikely\n+        EC_POINT *point = EC_POINT_dup(EC_KEY_get0_public_key(pkey), group);\n+        BN_one(bnOne);\n+        EC_POINT_mul(group, point, bnTweak, point, bnOne, ctx);\n+        if (EC_POINT_is_at_infinity(group, point))\n+            ret = false; // ridiculously unlikely\n+        EC_KEY_set_public_key(pkey, point);\n+        EC_POINT_free(point);\n+        BN_CTX_end(ctx);\n+        BN_CTX_free(ctx);\n+        return ret;\n+    }\n };\n \n }; // end of anonymous namespace\n@@ -304,7 +376,7 @@ CPrivKey CKey::GetPrivKey() const {\n     CECKey key;\n     key.SetSecretBytes(vch);\n     CPrivKey privkey;\n-    key.GetPrivKey(privkey);\n+    key.GetPrivKey(privkey, fCompressed);\n     return privkey;\n }\n \n@@ -393,3 +465,131 @@ bool CPubKey::Decompress() {\n     key.GetPubKey(*this, false);\n     return true;\n }\n+\n+void static BIP32Hash(const unsigned char chainCode[32], unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64]) {\n+    unsigned char num[4];\n+    num[0] = (nChild >> 24) & 0xFF;\n+    num[1] = (nChild >> 16) & 0xFF;\n+    num[2] = (nChild >>  8) & 0xFF;\n+    num[3] = (nChild >>  0) & 0xFF;\n+    HMAC_SHA512_CTX ctx;\n+    HMAC_SHA512_Init(&ctx, chainCode, 32);\n+    HMAC_SHA512_Update(&ctx, &header, 1);\n+    HMAC_SHA512_Update(&ctx, data, 32);\n+    HMAC_SHA512_Update(&ctx, num, 4);\n+    HMAC_SHA512_Final(output, &ctx);\n+}\n+\n+bool CKey::Derive(CKey& keyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const {\n+    assert(IsValid());\n+    assert(IsCompressed());\n+    unsigned char out[64];\n+    LockObject(out);\n+    if ((nChild >> 31) == 0) {\n+        CPubKey pubkey = GetPubKey();\n+        assert(pubkey.begin() + 33 == pubkey.end());\n+        BIP32Hash(cc, nChild, *pubkey.begin(), pubkey.begin()+1, out);\n+    } else {\n+        assert(begin() + 32 == end());\n+        BIP32Hash(cc, nChild, 0, begin(), out);\n+    }\n+    memcpy(ccChild, out+32, 32);\n+    bool ret = CECKey::TweakSecret((unsigned char*)keyChild.begin(), begin(), out);\n+    UnlockObject(out);\n+    keyChild.fCompressed = true;\n+    keyChild.fValid = ret;\n+    return ret;\n+}\n+\n+bool CPubKey::Derive(CPubKey& pubkeyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const {\n+    assert(IsValid());\n+    assert((nChild >> 31) == 0);\n+    assert(begin() + 33 == end());\n+    unsigned char out[64];\n+    BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n+    memcpy(ccChild, out+32, 32);\n+    CECKey key;\n+    bool ret = key.SetPubKey(*this);\n+    ret &= key.TweakPublic(out);\n+    key.GetPubKey(pubkeyChild, true);\n+    return ret;\n+}\n+\n+bool CExtKey::Derive(CExtKey &out, unsigned int nChild) const {\n+    out.nDepth = nDepth + 1;\n+    CKeyID id = key.GetPubKey().GetID();\n+    memcpy(&out.vchFingerprint[0], &id, 4);\n+    out.nChild = nChild;\n+    return key.Derive(out.key, out.vchChainCode, nChild, vchChainCode);\n+}\n+\n+void CExtKey::SetMaster(const unsigned char *seed, unsigned int nSeedLen) {\n+    static const char hashkey[] = {'B','i','t','c','o','i','n',' ','s','e','e','d'};\n+    HMAC_SHA512_CTX ctx;\n+    HMAC_SHA512_Init(&ctx, hashkey, sizeof(hashkey));\n+    HMAC_SHA512_Update(&ctx, seed, nSeedLen);\n+    unsigned char out[64];\n+    LockObject(out);\n+    HMAC_SHA512_Final(out, &ctx);\n+    key.Set(&out[0], &out[32], true);\n+    memcpy(vchChainCode, &out[32], 32);\n+    UnlockObject(out);\n+    nDepth = 0;\n+    nChild = 0;\n+    memset(vchFingerprint, 0, sizeof(vchFingerprint));\n+}\n+\n+CExtPubKey CExtKey::Neuter() const {\n+    CExtPubKey ret;\n+    ret.nDepth = nDepth;\n+    memcpy(&ret.vchFingerprint[0], &vchFingerprint[0], 4);\n+    ret.nChild = nChild;\n+    ret.pubkey = key.GetPubKey();\n+    memcpy(&ret.vchChainCode[0], &vchChainCode[0], 32);\n+    return ret;\n+}\n+\n+void CExtKey::Encode(unsigned char code[74]) const {\n+    code[0] = nDepth;\n+    memcpy(code+1, vchFingerprint, 4);\n+    code[5] = (nChild >> 24) & 0xFF; code[6] = (nChild >> 16) & 0xFF;\n+    code[7] = (nChild >>  8) & 0xFF; code[8] = (nChild >>  0) & 0xFF;\n+    memcpy(code+9, vchChainCode, 32);\n+    code[41] = 0;\n+    assert(key.size() == 32);\n+    memcpy(code+42, key.begin(), 32);\n+}\n+\n+void CExtKey::Decode(const unsigned char code[74]) {\n+    nDepth = code[0];\n+    memcpy(vchFingerprint, code+1, 4);\n+    nChild = (code[5] << 24) | (code[6] << 16) | (code[7] << 8) | code[8];\n+    memcpy(vchChainCode, code+9, 32);\n+    key.Set(code+42, code+74, true);\n+}\n+\n+void CExtPubKey::Encode(unsigned char code[74]) const {\n+    code[0] = nDepth;\n+    memcpy(code+1, vchFingerprint, 4);\n+    code[5] = (nChild >> 24) & 0xFF; code[6] = (nChild >> 16) & 0xFF;\n+    code[7] = (nChild >>  8) & 0xFF; code[8] = (nChild >>  0) & 0xFF;\n+    memcpy(code+9, vchChainCode, 32);\n+    assert(pubkey.size() == 33);\n+    memcpy(code+41, pubkey.begin(), 33);\n+}\n+\n+void CExtPubKey::Decode(const unsigned char code[74]) {\n+    nDepth = code[0];\n+    memcpy(vchFingerprint, code+1, 4);\n+    nChild = (code[5] << 24) | (code[6] << 16) | (code[7] << 8) | code[8];\n+    memcpy(vchChainCode, code+9, 32);\n+    pubkey.Set(code+41, code+74);\n+}\n+\n+bool CExtPubKey::Derive(CExtPubKey &out, unsigned int nChild) const {\n+    out.nDepth = nDepth + 1;\n+    CKeyID id = pubkey.GetID();\n+    memcpy(&out.vchFingerprint[0], &id, 4);\n+    out.nChild = nChild;\n+    return pubkey.Derive(out.pubkey, out.vchChainCode, nChild, vchChainCode);\n+}"
      },
      {
        "sha": "75431e944f264d892355a726084e30c3fe8d9390",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -161,6 +161,9 @@ class CPubKey {\n \n     // Turn this public key into an uncompressed public key.\n     bool Decompress();\n+\n+    // Derive BIP32 child pubkey.\n+    bool Derive(CPubKey& pubkeyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const;\n };\n \n \n@@ -201,6 +204,10 @@ class CKey {\n         UnlockObject(vch);\n     }\n \n+    friend bool operator==(const CKey &a, const CKey &b) {\n+        return a.fCompressed == b.fCompressed && memcmp(&a.vch[0], &b.vch[0], 32);\n+    }\n+\n     // Initialize using begin and end iterators to byte data.\n     template<typename T>\n     void Set(const T pbegin, const T pend, bool fCompressedIn) {\n@@ -251,6 +258,45 @@ class CKey {\n     //                  0x1D = second key with even y, 0x1E = second key with odd y,\n     //                  add 0x04 for compressed keys.\n     bool SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig) const;\n+\n+    // Derive BIP32 child key.\n+    bool Derive(CKey& keyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const;\n+};\n+\n+struct CExtPubKey {\n+    unsigned char nDepth;\n+    unsigned char vchFingerprint[4];\n+    unsigned int nChild;\n+    unsigned char vchChainCode[32];\n+    CPubKey pubkey;\n+\n+    friend bool operator==(const CExtPubKey &a, const CExtPubKey &b) {\n+        return a.nDepth == b.nDepth && memcmp(&a.vchFingerprint[0], &b.vchFingerprint[0], 4) == 0 && a.nChild == b.nChild &&\n+               memcmp(&a.vchChainCode[0], &b.vchChainCode[0], 32) == 0 && a.pubkey == b.pubkey;\n+    }\n+\n+    void Encode(unsigned char code[74]) const;\n+    void Decode(const unsigned char code[74]);\n+    bool Derive(CExtPubKey &out, unsigned int nChild) const;\n+};\n+\n+struct CExtKey {\n+    unsigned char nDepth;\n+    unsigned char vchFingerprint[4];\n+    unsigned int nChild;\n+    unsigned char vchChainCode[32];\n+    CKey key;\n+\n+    friend bool operator==(const CExtKey &a, const CExtKey &b) {\n+        return a.nDepth == b.nDepth && memcmp(&a.vchFingerprint[0], &b.vchFingerprint[0], 4) == 0 && a.nChild == b.nChild &&\n+               memcmp(&a.vchChainCode[0], &b.vchChainCode[0], 32) == 0 && a.key == b.key;\n+    }\n+\n+    void Encode(unsigned char code[74]) const;\n+    void Decode(const unsigned char code[74]);\n+    bool Derive(CExtKey &out, unsigned int nChild) const;\n+    CExtPubKey Neuter() const;\n+    void SetMaster(const unsigned char *seed, unsigned int nSeedLen);\n };\n \n #endif"
      },
      {
        "sha": "fb202367c4db61f8c7d921c02a67fb28e9932bcd",
        "filename": "src/leveldb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -15,6 +15,7 @@\n void HandleError(const leveldb::Status &status) throw(leveldb_error) {\n     if (status.ok())\n         return;\n+    LogPrintf(\"%s\\n\", status.ToString().c_str());\n     if (status.IsCorruption())\n         throw leveldb_error(\"Database corrupted\");\n     if (status.IsIOError())\n@@ -47,16 +48,15 @@ CLevelDB::CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool\n         options.env = penv;\n     } else {\n         if (fWipe) {\n-            printf(\"Wiping LevelDB in %s\\n\", path.string().c_str());\n+            LogPrintf(\"Wiping LevelDB in %s\\n\", path.string().c_str());\n             leveldb::DestroyDB(path.string(), options);\n         }\n         boost::filesystem::create_directory(path);\n-        printf(\"Opening LevelDB in %s\\n\", path.string().c_str());\n+        LogPrintf(\"Opening LevelDB in %s\\n\", path.string().c_str());\n     }\n     leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n-    if (!status.ok())\n-        throw std::runtime_error(strprintf(\"CLevelDB(): error opening database environment %s\", status.ToString().c_str()));\n-    printf(\"Opened LevelDB successfully\\n\");\n+    HandleError(status);\n+    LogPrintf(\"Opened LevelDB successfully\\n\");\n }\n \n CLevelDB::~CLevelDB() {\n@@ -72,10 +72,6 @@ CLevelDB::~CLevelDB() {\n \n bool CLevelDB::WriteBatch(CLevelDBBatch &batch, bool fSync) throw(leveldb_error) {\n     leveldb::Status status = pdb->Write(fSync ? syncoptions : writeoptions, &batch.batch);\n-    if (!status.ok()) {\n-        printf(\"LevelDB write failure: %s\\n\", status.ToString().c_str());\n-        HandleError(status);\n-        return false;\n-    }\n+    HandleError(status);\n     return true;\n }"
      },
      {
        "sha": "7daddeb493261c94dca66c38c1853a3bdc96b50e",
        "filename": "src/leveldb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -5,6 +5,7 @@\n #define BITCOIN_LEVELDB_H\n \n #include \"serialize.h\"\n+#include \"util.h\"\n \n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n@@ -91,7 +92,7 @@ class CLevelDB\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            printf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n             HandleError(status);\n         }\n         try {\n@@ -120,7 +121,7 @@ class CLevelDB\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            printf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n             HandleError(status);\n         }\n         return true;"
      },
      {
        "sha": "71d87a4eeb60b9599e6a7a23d61a659c7befa553",
        "filename": "src/leveldb/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/.gitignore?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -6,6 +6,7 @@ build_config.mk\n *.so.*\n *_test\n db_bench\n+leveldbutil\n Release\n Debug\n Benchmark"
      },
      {
        "sha": "fc40194ab94f41405bd48d085b9f3fcbe1704234",
        "filename": "src/leveldb/AUTHORS",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/AUTHORS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/AUTHORS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/AUTHORS?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -6,3 +6,6 @@ Google Inc.\n # Initial version authors:\n Jeffrey Dean <jeff@google.com>\n Sanjay Ghemawat <sanjay@google.com>\n+\n+# Partial list of contributors:\n+Kevin Regan <kevin.d.regan@gmail.com>"
      },
      {
        "sha": "96af7765be41edc6b8e83c646efcdb3b9c99d025",
        "filename": "src/leveldb/Makefile",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -12,7 +12,7 @@ OPT ?= -O2 -DNDEBUG       # (A) Production use (optimized mode)\n #-----------------------------------------------\n \n # detect what platform we're building on\n-$(shell CC=$(CC) CXX=$(CXX) TARGET_OS=$(TARGET_OS) \\\n+$(shell CC=\"$(CC)\" CXX=\"$(CXX)\" TARGET_OS=\"$(TARGET_OS)\" \\\n     ./build_detect_platform build_config.mk ./)\n # this file is generated by the previous line to set build flags and sources\n include build_config.mk\n@@ -42,6 +42,7 @@ TESTS = \\\n \tenv_test \\\n \tfilename_test \\\n \tfilter_block_test \\\n+\tissue178_test \\\n \tlog_test \\\n \tmemenv_test \\\n \tskiplist_test \\\n@@ -69,7 +70,7 @@ SHARED = $(SHARED1)\n else\n # Update db.h if you change these.\n SHARED_MAJOR = 1\n-SHARED_MINOR = 9\n+SHARED_MINOR = 12\n SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)\n SHARED2 = $(SHARED1).$(SHARED_MAJOR)\n SHARED3 = $(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)\n@@ -146,6 +147,9 @@ filename_test: db/filename_test.o $(LIBOBJECTS) $(TESTHARNESS)\n filter_block_test: table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS)\n \t$(CXX) $(LDFLAGS) table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n \n+issue178_test: issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS)\n+\t$(CXX) $(LDFLAGS) issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n+\n log_test: db/log_test.o $(LIBOBJECTS) $(TESTHARNESS)\n \t$(CXX) $(LDFLAGS) db/log_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n "
      },
      {
        "sha": "bdfd64172cd1b9ca15dd436d96b9dba8904c281b",
        "filename": "src/leveldb/build_detect_platform",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -44,6 +44,10 @@ if test -z \"$CXX\"; then\n     CXX=g++\n fi\n \n+if test -z \"$TMPDIR\"; then\n+    TMPDIR=/tmp\n+fi\n+\n # Detect OS\n if test -z \"$TARGET_OS\"; then\n     TARGET_OS=`uname -s`\n@@ -94,6 +98,12 @@ case \"$TARGET_OS\" in\n         PLATFORM_LIBS=\"-lpthread\"\n         PORT_FILE=port/port_posix.cc\n         ;;\n+    GNU/kFreeBSD)\n+        PLATFORM=OS_KFREEBSD\n+        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_KFREEBSD\"\n+        PLATFORM_LIBS=\"-lpthread\"\n+        PORT_FILE=port/port_posix.cc\n+        ;;\n     NetBSD)\n         PLATFORM=OS_NETBSD\n         COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_NETBSD\"\n@@ -163,8 +173,10 @@ if [ \"$CROSS_COMPILE\" = \"true\" ]; then\n     # Cross-compiling; do not try any compilation tests.\n     true\n else\n+    CXXOUTPUT=\"${TMPDIR}/leveldb_build_detect_platform-cxx.$$\"\n+\n     # If -std=c++0x works, use <cstdatomic>.  Otherwise use port_posix.h.\n-    $CXX $CXXFLAGS -std=c++0x -x c++ - -o /dev/null 2>/dev/null  <<EOF\n+    $CXX $CXXFLAGS -std=c++0x -x c++ - -o $CXXOUTPUT 2>/dev/null  <<EOF\n       #include <cstdatomic>\n       int main() {}\n EOF\n@@ -176,12 +188,14 @@ EOF\n     fi\n \n     # Test whether tcmalloc is available\n-    $CXX $CXXFLAGS -x c++ - -o /dev/null -ltcmalloc 2>/dev/null  <<EOF\n+    $CXX $CXXFLAGS -x c++ - -o $CXXOUTPUT -ltcmalloc 2>/dev/null  <<EOF\n       int main() {}\n EOF\n     if [ \"$?\" = 0 ]; then\n         PLATFORM_LIBS=\"$PLATFORM_LIBS -ltcmalloc\"\n     fi\n+\n+    rm -f $CXXOUTPUT 2>/dev/null\n fi\n \n PLATFORM_CCFLAGS=\"$PLATFORM_CCFLAGS $COMMON_FLAGS\""
      },
      {
        "sha": "395d3172ad3a16b24552057599c776228bf84917",
        "filename": "src/leveldb/db/db_impl.cc",
        "status": "modified",
        "additions": 29,
        "deletions": 11,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/db_impl.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/db_impl.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -35,6 +35,8 @@\n \n namespace leveldb {\n \n+const int kNumNonTableCacheFiles = 10;\n+\n // Information kept for every waiting writer\n struct DBImpl::Writer {\n   Status status;\n@@ -92,9 +94,9 @@ Options SanitizeOptions(const std::string& dbname,\n   Options result = src;\n   result.comparator = icmp;\n   result.filter_policy = (src.filter_policy != NULL) ? ipolicy : NULL;\n-  ClipToRange(&result.max_open_files,            20,     50000);\n-  ClipToRange(&result.write_buffer_size,         64<<10, 1<<30);\n-  ClipToRange(&result.block_size,                1<<10,  4<<20);\n+  ClipToRange(&result.max_open_files,    64 + kNumNonTableCacheFiles, 50000);\n+  ClipToRange(&result.write_buffer_size, 64<<10,                      1<<30);\n+  ClipToRange(&result.block_size,        1<<10,                       4<<20);\n   if (result.info_log == NULL) {\n     // Open a log file in the same directory as the db\n     src.env->CreateDir(dbname);  // In case it does not exist\n@@ -130,12 +132,13 @@ DBImpl::DBImpl(const Options& options, const std::string& dbname)\n       log_(NULL),\n       tmp_batch_(new WriteBatch),\n       bg_compaction_scheduled_(false),\n-      manual_compaction_(NULL) {\n+      manual_compaction_(NULL),\n+      consecutive_compaction_errors_(0) {\n   mem_->Ref();\n   has_imm_.Release_Store(NULL);\n \n   // Reserve ten files or so for other uses and give the rest to TableCache.\n-  const int table_cache_size = options.max_open_files - 10;\n+  const int table_cache_size = options.max_open_files - kNumNonTableCacheFiles;\n   table_cache_ = new TableCache(dbname_, &options_, table_cache_size);\n \n   versions_ = new VersionSet(dbname_, &options_, table_cache_,\n@@ -310,16 +313,24 @@ Status DBImpl::Recover(VersionEdit* edit) {\n     if (!s.ok()) {\n       return s;\n     }\n+    std::set<uint64_t> expected;\n+    versions_->AddLiveFiles(&expected);\n     uint64_t number;\n     FileType type;\n     std::vector<uint64_t> logs;\n     for (size_t i = 0; i < filenames.size(); i++) {\n-      if (ParseFileName(filenames[i], &number, &type)\n-          && type == kLogFile\n-          && ((number >= min_log) || (number == prev_log))) {\n-        logs.push_back(number);\n+      if (ParseFileName(filenames[i], &number, &type)) {\n+        expected.erase(number);\n+        if (type == kLogFile && ((number >= min_log) || (number == prev_log)))\n+          logs.push_back(number);\n       }\n     }\n+    if (!expected.empty()) {\n+      char buf[50];\n+      snprintf(buf, sizeof(buf), \"%d missing files; e.g.\",\n+               static_cast<int>(expected.size()));\n+      return Status::Corruption(buf, TableFileName(dbname_, *(expected.begin())));\n+    }\n \n     // Recover in the order in which the logs were generated\n     std::sort(logs.begin(), logs.end());\n@@ -611,6 +622,7 @@ void DBImpl::BackgroundCall() {\n     Status s = BackgroundCompaction();\n     if (s.ok()) {\n       // Success\n+      consecutive_compaction_errors_ = 0;\n     } else if (shutting_down_.Acquire_Load()) {\n       // Error most likely due to shutdown; do not wait\n     } else {\n@@ -622,7 +634,12 @@ void DBImpl::BackgroundCall() {\n       Log(options_.info_log, \"Waiting after background compaction error: %s\",\n           s.ToString().c_str());\n       mutex_.Unlock();\n-      env_->SleepForMicroseconds(1000000);\n+      ++consecutive_compaction_errors_;\n+      int seconds_to_sleep = 1;\n+      for (int i = 0; i < 3 && i < consecutive_compaction_errors_ - 1; ++i) {\n+        seconds_to_sleep *= 2;\n+      }\n+      env_->SleepForMicroseconds(seconds_to_sleep * 1000000);\n       mutex_.Lock();\n     }\n   }\n@@ -1268,10 +1285,11 @@ Status DBImpl::MakeRoomForWrite(bool force) {\n     } else if (imm_ != NULL) {\n       // We have filled up the current memtable, but the previous\n       // one is still being compacted, so we wait.\n+      Log(options_.info_log, \"Current memtable full; waiting...\\n\");\n       bg_cv_.Wait();\n     } else if (versions_->NumLevelFiles(0) >= config::kL0_StopWritesTrigger) {\n       // There are too many level-0 files.\n-      Log(options_.info_log, \"waiting...\\n\");\n+      Log(options_.info_log, \"Too many L0 files; waiting...\\n\");\n       bg_cv_.Wait();\n     } else {\n       // Attempt to switch to a new memtable and trigger compaction of old"
      },
      {
        "sha": "3c8d711ae06de2b41dc6d9a3717808947663c09b",
        "filename": "src/leveldb/db/db_impl.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/db_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/db_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -163,6 +163,7 @@ class DBImpl : public DB {\n \n   // Have we encountered a background error in paranoid mode?\n   Status bg_error_;\n+  int consecutive_compaction_errors_;\n \n   // Per level compaction stats.  stats_[level] stores the stats for\n   // compactions that produced data for the specified \"level\"."
      },
      {
        "sha": "49aae04dbd3bac4b8d057fd490751f71a2d5b294",
        "filename": "src/leveldb/db/db_test.cc",
        "status": "modified",
        "additions": 75,
        "deletions": 10,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/db_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/db_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_test.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -33,8 +33,11 @@ class AtomicCounter {\n  public:\n   AtomicCounter() : count_(0) { }\n   void Increment() {\n+    IncrementBy(1);\n+  }\n+  void IncrementBy(int count) {\n     MutexLock l(&mu_);\n-    count_++;\n+    count_ += count;\n   }\n   int Read() {\n     MutexLock l(&mu_);\n@@ -45,6 +48,10 @@ class AtomicCounter {\n     count_ = 0;\n   }\n };\n+\n+void DelayMilliseconds(int millis) {\n+  Env::Default()->SleepForMicroseconds(millis * 1000);\n+}\n }\n \n // Special Env used to delay background operations\n@@ -69,6 +76,7 @@ class SpecialEnv : public EnvWrapper {\n   AtomicCounter random_read_counter_;\n \n   AtomicCounter sleep_counter_;\n+  AtomicCounter sleep_time_counter_;\n \n   explicit SpecialEnv(Env* base) : EnvWrapper(base) {\n     delay_sstable_sync_.Release_Store(NULL);\n@@ -103,7 +111,7 @@ class SpecialEnv : public EnvWrapper {\n       Status Flush() { return base_->Flush(); }\n       Status Sync() {\n         while (env_->delay_sstable_sync_.Acquire_Load() != NULL) {\n-          env_->SleepForMicroseconds(100000);\n+          DelayMilliseconds(100);\n         }\n         return base_->Sync();\n       }\n@@ -174,8 +182,9 @@ class SpecialEnv : public EnvWrapper {\n \n   virtual void SleepForMicroseconds(int micros) {\n     sleep_counter_.Increment();\n-    target()->SleepForMicroseconds(micros);\n+    sleep_time_counter_.IncrementBy(micros);\n   }\n+\n };\n \n class DBTest {\n@@ -461,6 +470,20 @@ class DBTest {\n     }\n     return result;\n   }\n+\n+  bool DeleteAnSSTFile() {\n+    std::vector<std::string> filenames;\n+    ASSERT_OK(env_->GetChildren(dbname_, &filenames));\n+    uint64_t number;\n+    FileType type;\n+    for (size_t i = 0; i < filenames.size(); i++) {\n+      if (ParseFileName(filenames[i], &number, &type) && type == kTableFile) {\n+        ASSERT_OK(env_->DeleteFile(TableFileName(dbname_, number)));\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n };\n \n TEST(DBTest, Empty) {\n@@ -611,7 +634,7 @@ TEST(DBTest, GetEncountersEmptyLevel) {\n     }\n \n     // Step 4: Wait for compaction to finish\n-    env_->SleepForMicroseconds(1000000);\n+    DelayMilliseconds(1000);\n \n     ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n   } while (ChangeOptions());\n@@ -1295,7 +1318,7 @@ TEST(DBTest, L0_CompactionBug_Issue44_a) {\n   Reopen();\n   Reopen();\n   ASSERT_EQ(\"(a->v)\", Contents());\n-  env_->SleepForMicroseconds(1000000);  // Wait for compaction to finish\n+  DelayMilliseconds(1000);  // Wait for compaction to finish\n   ASSERT_EQ(\"(a->v)\", Contents());\n }\n \n@@ -1311,7 +1334,7 @@ TEST(DBTest, L0_CompactionBug_Issue44_b) {\n   Put(\"\",\"\");\n   Reopen();\n   Put(\"\",\"\");\n-  env_->SleepForMicroseconds(1000000);  // Wait for compaction to finish\n+  DelayMilliseconds(1000);  // Wait for compaction to finish\n   Reopen();\n   Put(\"d\",\"dv\");\n   Reopen();\n@@ -1321,7 +1344,7 @@ TEST(DBTest, L0_CompactionBug_Issue44_b) {\n   Delete(\"b\");\n   Reopen();\n   ASSERT_EQ(\"(->)(c->cv)\", Contents());\n-  env_->SleepForMicroseconds(1000000);  // Wait for compaction to finish\n+  DelayMilliseconds(1000);  // Wait for compaction to finish\n   ASSERT_EQ(\"(->)(c->cv)\", Contents());\n }\n \n@@ -1506,6 +1529,30 @@ TEST(DBTest, NoSpace) {\n   ASSERT_GE(env_->sleep_counter_.Read(), 5);\n }\n \n+TEST(DBTest, ExponentialBackoff) {\n+  Options options = CurrentOptions();\n+  options.env = env_;\n+  Reopen(&options);\n+\n+  ASSERT_OK(Put(\"foo\", \"v1\"));\n+  ASSERT_EQ(\"v1\", Get(\"foo\"));\n+  Compact(\"a\", \"z\");\n+  env_->non_writable_.Release_Store(env_);  // Force errors for new files\n+  env_->sleep_counter_.Reset();\n+  env_->sleep_time_counter_.Reset();\n+  for (int i = 0; i < 5; i++) {\n+    dbfull()->TEST_CompactRange(2, NULL, NULL);\n+  }\n+  env_->non_writable_.Release_Store(NULL);\n+\n+  // Wait for compaction to finish\n+  DelayMilliseconds(1000);\n+\n+  ASSERT_GE(env_->sleep_counter_.Read(), 5);\n+  ASSERT_LT(env_->sleep_counter_.Read(), 10);\n+  ASSERT_GE(env_->sleep_time_counter_.Read(), 10e6);\n+}\n+\n TEST(DBTest, NonWritableFileSystem) {\n   Options options = CurrentOptions();\n   options.write_buffer_size = 1000;\n@@ -1519,7 +1566,7 @@ TEST(DBTest, NonWritableFileSystem) {\n     fprintf(stderr, \"iter %d; errors %d\\n\", i, errors);\n     if (!Put(\"foo\", big).ok()) {\n       errors++;\n-      env_->SleepForMicroseconds(100000);\n+      DelayMilliseconds(100);\n     }\n   }\n   ASSERT_GT(errors, 0);\n@@ -1567,6 +1614,24 @@ TEST(DBTest, ManifestWriteError) {\n   }\n }\n \n+TEST(DBTest, MissingSSTFile) {\n+  ASSERT_OK(Put(\"foo\", \"bar\"));\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+\n+  // Dump the memtable to disk.\n+  dbfull()->TEST_CompactMemTable();\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+\n+  Close();\n+  ASSERT_TRUE(DeleteAnSSTFile());\n+  Options options = CurrentOptions();\n+  options.paranoid_checks = true;\n+  Status s = TryReopen(&options);\n+  ASSERT_TRUE(!s.ok());\n+  ASSERT_TRUE(s.ToString().find(\"issing\") != std::string::npos)\n+      << s.ToString();\n+}\n+\n TEST(DBTest, FilesDeletedAfterCompaction) {\n   ASSERT_OK(Put(\"foo\", \"v2\"));\n   Compact(\"a\", \"z\");\n@@ -1711,13 +1776,13 @@ TEST(DBTest, MultiThreaded) {\n     }\n \n     // Let them run for a while\n-    env_->SleepForMicroseconds(kTestSeconds * 1000000);\n+    DelayMilliseconds(kTestSeconds * 1000);\n \n     // Stop the threads and wait for them to finish\n     mt.stop.Release_Store(&mt);\n     for (int id = 0; id < kNumThreads; id++) {\n       while (mt.thread_done[id].Acquire_Load() == NULL) {\n-        env_->SleepForMicroseconds(100000);\n+        DelayMilliseconds(100);\n       }\n     }\n   } while (ChangeOptions());"
      },
      {
        "sha": "20a7ca44626050c01b7bde718581c663d38f42a9",
        "filename": "src/leveldb/db/dbformat.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/dbformat.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/dbformat.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/dbformat.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -26,7 +26,7 @@ std::string ParsedInternalKey::DebugString() const {\n            (unsigned long long) sequence,\n            int(type));\n   std::string result = \"'\";\n-  result += user_key.ToString();\n+  result += EscapeString(user_key.ToString());\n   result += buf;\n   return result;\n }"
      },
      {
        "sha": "5a26da4728f6a0934f12d37d84e845ef6a00e8af",
        "filename": "src/leveldb/db/filename_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/filename_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/filename_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename_test.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -70,7 +70,7 @@ TEST(FileNameTest, Parse) {\n   for (int i = 0; i < sizeof(errors) / sizeof(errors[0]); i++) {\n     std::string f = errors[i];\n     ASSERT_TRUE(!ParseFileName(f, &number, &type)) << f;\n-  };\n+  }\n }\n \n TEST(FileNameTest, Construction) {"
      },
      {
        "sha": "4fd1ddef21011ffb379019b65ce64464ad8ca54c",
        "filename": "src/leveldb/db/version_set.cc",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/version_set.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/db/version_set.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1331,14 +1331,19 @@ Compaction* VersionSet::CompactRange(\n   }\n \n   // Avoid compacting too much in one shot in case the range is large.\n-  const uint64_t limit = MaxFileSizeForLevel(level);\n-  uint64_t total = 0;\n-  for (size_t i = 0; i < inputs.size(); i++) {\n-    uint64_t s = inputs[i]->file_size;\n-    total += s;\n-    if (total >= limit) {\n-      inputs.resize(i + 1);\n-      break;\n+  // But we cannot do this for level-0 since level-0 files can overlap\n+  // and we must not pick one file and drop another older file if the\n+  // two files overlap.\n+  if (level > 0) {\n+    const uint64_t limit = MaxFileSizeForLevel(level);\n+    uint64_t total = 0;\n+    for (size_t i = 0; i < inputs.size(); i++) {\n+      uint64_t s = inputs[i]->file_size;\n+      total += s;\n+      if (total >= limit) {\n+        inputs.resize(i + 1);\n+        break;\n+      }\n     }\n   }\n "
      },
      {
        "sha": "da8b11a8c05b054ef231ba34d88ef51ec1e55eb0",
        "filename": "src/leveldb/include/leveldb/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/include/leveldb/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/include/leveldb/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/db.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -14,7 +14,7 @@ namespace leveldb {\n \n // Update Makefile if you change these\n static const int kMajorVersion = 1;\n-static const int kMinorVersion = 9;\n+static const int kMinorVersion = 12;\n \n struct Options;\n struct ReadOptions;"
      },
      {
        "sha": "1b1cf8bb28da5cf6a117ffdc4cb6527ef1585d6b",
        "filename": "src/leveldb/issues/issue178_test.cc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/issues/issue178_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/issues/issue178_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/issues/issue178_test.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,92 @@\n+// Copyright (c) 2013 The LevelDB Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style license that can be\n+// found in the LICENSE file. See the AUTHORS file for names of contributors.\n+\n+// Test for issue 178: a manual compaction causes deleted data to reappear.\n+#include <iostream>\n+#include <sstream>\n+#include <cstdlib>\n+\n+#include \"leveldb/db.h\"\n+#include \"leveldb/write_batch.h\"\n+#include \"util/testharness.h\"\n+\n+namespace {\n+\n+const int kNumKeys = 1100000;\n+\n+std::string Key1(int i) {\n+  char buf[100];\n+  snprintf(buf, sizeof(buf), \"my_key_%d\", i);\n+  return buf;\n+}\n+\n+std::string Key2(int i) {\n+  return Key1(i) + \"_xxx\";\n+}\n+\n+class Issue178 { };\n+\n+TEST(Issue178, Test) {\n+  // Get rid of any state from an old run.\n+  std::string dbpath = leveldb::test::TmpDir() + \"/leveldb_cbug_test\";\n+  DestroyDB(dbpath, leveldb::Options());\n+\n+  // Open database.  Disable compression since it affects the creation\n+  // of layers and the code below is trying to test against a very\n+  // specific scenario.\n+  leveldb::DB* db;\n+  leveldb::Options db_options;\n+  db_options.create_if_missing = true;\n+  db_options.compression = leveldb::kNoCompression;\n+  ASSERT_OK(leveldb::DB::Open(db_options, dbpath, &db));\n+\n+  // create first key range\n+  leveldb::WriteBatch batch;\n+  for (size_t i = 0; i < kNumKeys; i++) {\n+    batch.Put(Key1(i), \"value for range 1 key\");\n+  }\n+  ASSERT_OK(db->Write(leveldb::WriteOptions(), &batch));\n+\n+  // create second key range\n+  batch.Clear();\n+  for (size_t i = 0; i < kNumKeys; i++) {\n+    batch.Put(Key2(i), \"value for range 2 key\");\n+  }\n+  ASSERT_OK(db->Write(leveldb::WriteOptions(), &batch));\n+\n+  // delete second key range\n+  batch.Clear();\n+  for (size_t i = 0; i < kNumKeys; i++) {\n+    batch.Delete(Key2(i));\n+  }\n+  ASSERT_OK(db->Write(leveldb::WriteOptions(), &batch));\n+\n+  // compact database\n+  std::string start_key = Key1(0);\n+  std::string end_key = Key1(kNumKeys - 1);\n+  leveldb::Slice least(start_key.data(), start_key.size());\n+  leveldb::Slice greatest(end_key.data(), end_key.size());\n+\n+  // commenting out the line below causes the example to work correctly\n+  db->CompactRange(&least, &greatest);\n+\n+  // count the keys\n+  leveldb::Iterator* iter = db->NewIterator(leveldb::ReadOptions());\n+  size_t num_keys = 0;\n+  for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n+    num_keys++;\n+  }\n+  delete iter;\n+  ASSERT_EQ(kNumKeys, num_keys) << \"Bad number of keys\";\n+\n+  // close database\n+  delete db;\n+  DestroyDB(dbpath, leveldb::Options());\n+}\n+\n+}  // anonymous namespace\n+\n+int main(int argc, char** argv) {\n+  return leveldb::test::RunAllTests();\n+}"
      },
      {
        "sha": "21c845e211ff06389ffbe7fef65db44079706134",
        "filename": "src/leveldb/port/port_posix.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/port/port_posix.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/port/port_posix.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -62,12 +62,16 @@\n #define fflush_unlocked fflush\n #endif\n \n-#if defined(OS_MACOSX) || defined(OS_FREEBSD) ||\\\n+#if defined(OS_FREEBSD) ||\\\n     defined(OS_OPENBSD) || defined(OS_DRAGONFLYBSD)\n // Use fsync() on platforms without fdatasync()\n #define fdatasync fsync\n #endif\n \n+#if defined(OS_MACOSX)\n+#define fdatasync(fd) fcntl(fd, F_FULLFSYNC, 0)\n+#endif\n+\n #if defined(OS_ANDROID) && __ANDROID_API__ < 9\n // fdatasync() was only introduced in API level 9 on Android. Use fsync()\n // when targetting older platforms."
      },
      {
        "sha": "1b0f060a19caabfbb5dffe8ef87f1d90536d44f2",
        "filename": "src/leveldb/port/port_win.cc",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/port/port_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/port/port_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_win.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -109,12 +109,10 @@ void CondVar::Signal() {\n \n void CondVar::SignalAll() {\n   wait_mtx_.Lock();\n-  for(long i = 0; i < waiting_; ++i) {\n-    ::ReleaseSemaphore(sem1_, 1, NULL);\n-    while(waiting_ > 0) {\n-      --waiting_;\n-      ::WaitForSingleObject(sem2_, INFINITE);\n-    }\n+  ::ReleaseSemaphore(sem1_, waiting_, NULL);\n+  while(waiting_ > 0) {\n+    --waiting_;\n+    ::WaitForSingleObject(sem2_, INFINITE);\n   }\n   wait_mtx_.Unlock();\n }"
      },
      {
        "sha": "79ea9d9ee5fe8af28eb07f48b9534c2979fe842a",
        "filename": "src/leveldb/table/block.cc",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/table/block.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/table/block.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/block.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -16,7 +16,7 @@\n namespace leveldb {\n \n inline uint32_t Block::NumRestarts() const {\n-  assert(size_ >= 2*sizeof(uint32_t));\n+  assert(size_ >= sizeof(uint32_t));\n   return DecodeFixed32(data_ + size_ - sizeof(uint32_t));\n }\n \n@@ -27,11 +27,12 @@ Block::Block(const BlockContents& contents)\n   if (size_ < sizeof(uint32_t)) {\n     size_ = 0;  // Error marker\n   } else {\n-    restart_offset_ = size_ - (1 + NumRestarts()) * sizeof(uint32_t);\n-    if (restart_offset_ > size_ - sizeof(uint32_t)) {\n-      // The size is too small for NumRestarts() and therefore\n-      // restart_offset_ wrapped around.\n+    size_t max_restarts_allowed = (size_-sizeof(uint32_t)) / sizeof(uint32_t);\n+    if (NumRestarts() > max_restarts_allowed) {\n+      // The size is too small for NumRestarts()\n       size_ = 0;\n+    } else {\n+      restart_offset_ = size_ - (1 + NumRestarts()) * sizeof(uint32_t);\n     }\n   }\n }\n@@ -253,7 +254,7 @@ class Block::Iter : public Iterator {\n };\n \n Iterator* Block::NewIterator(const Comparator* cmp) {\n-  if (size_ < 2*sizeof(uint32_t)) {\n+  if (size_ < sizeof(uint32_t)) {\n     return NewErrorIterator(Status::Corruption(\"bad block contents\"));\n   }\n   const uint32_t num_restarts = NumRestarts();"
      },
      {
        "sha": "71c1756e5f440c38c3e712e0359886fe22d6d5a0",
        "filename": "src/leveldb/table/table.cc",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/table/table.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/table/table.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/table.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -228,7 +228,6 @@ Status Table::InternalGet(const ReadOptions& options, const Slice& k,\n         !filter->KeyMayMatch(handle.offset(), k)) {\n       // Not found\n     } else {\n-      Slice handle = iiter->value();\n       Iterator* block_iter = BlockReader(this, options, iiter->value());\n       block_iter->Seek(k);\n       if (block_iter->Valid()) {"
      },
      {
        "sha": "c723bf84cf5f55fae9b56ab324ebfdc83ba9be52",
        "filename": "src/leveldb/table/table_test.cc",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/table/table_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/table/table_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/table_test.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -644,6 +644,36 @@ class Harness {\n   Constructor* constructor_;\n };\n \n+// Test empty table/block.\n+TEST(Harness, Empty) {\n+  for (int i = 0; i < kNumTestArgs; i++) {\n+    Init(kTestArgList[i]);\n+    Random rnd(test::RandomSeed() + 1);\n+    Test(&rnd);\n+  }\n+}\n+\n+// Special test for a block with no restart entries.  The C++ leveldb\n+// code never generates such blocks, but the Java version of leveldb\n+// seems to.\n+TEST(Harness, ZeroRestartPointsInBlock) {\n+  char data[sizeof(uint32_t)];\n+  memset(data, 0, sizeof(data));\n+  BlockContents contents;\n+  contents.data = Slice(data, sizeof(data));\n+  contents.cachable = false;\n+  contents.heap_allocated = false;\n+  Block block(contents);\n+  Iterator* iter = block.NewIterator(BytewiseComparator());\n+  iter->SeekToFirst();\n+  ASSERT_TRUE(!iter->Valid());\n+  iter->SeekToLast();\n+  ASSERT_TRUE(!iter->Valid());\n+  iter->Seek(\"foo\");\n+  ASSERT_TRUE(!iter->Valid());\n+  delete iter;\n+}\n+\n // Test the empty key\n TEST(Harness, SimpleEmptyKey) {\n   for (int i = 0; i < kNumTestArgs; i++) {"
      },
      {
        "sha": "8b197bc02a98e639dc72a58bd7de59603ab77cbc",
        "filename": "src/leveldb/util/cache.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/cache.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/cache.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/cache.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -116,7 +116,6 @@ class HandleTable {\n       LRUHandle* h = list_[i];\n       while (h != NULL) {\n         LRUHandle* next = h->next_hash;\n-        Slice key = h->key();\n         uint32_t hash = h->hash;\n         LRUHandle** ptr = &new_list[hash & (new_length - 1)];\n         h->next_hash = *ptr;\n@@ -160,7 +159,6 @@ class LRUCache {\n   // mutex_ protects the following state.\n   port::Mutex mutex_;\n   size_t usage_;\n-  uint64_t last_id_;\n \n   // Dummy head of LRU list.\n   // lru.prev is newest entry, lru.next is oldest entry.\n@@ -170,8 +168,7 @@ class LRUCache {\n };\n \n LRUCache::LRUCache()\n-    : usage_(0),\n-      last_id_(0) {\n+    : usage_(0) {\n   // Make empty circular linked list\n   lru_.next = &lru_;\n   lru_.prev = &lru_;"
      },
      {
        "sha": "fb5726e33521d01270b481b93d9c5490c6f0b53f",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -109,7 +109,7 @@ TEST(Coding, Varint64) {\n     values.push_back(power);\n     values.push_back(power-1);\n     values.push_back(power+1);\n-  };\n+  }\n \n   std::string s;\n   for (int i = 0; i < values.size(); i++) {"
      },
      {
        "sha": "6badfdc230f52f235ec7f7523e213dba9d628451",
        "filename": "src/leveldb/util/env_posix.cc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/env_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/env_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_posix.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -386,7 +386,7 @@ class PosixEnv : public Env {\n   PosixEnv();\n   virtual ~PosixEnv() {\n     fprintf(stderr, \"Destroying Env::Default()\\n\");\n-    exit(1);\n+    abort();\n   }\n \n   virtual Status NewSequentialFile(const std::string& fname,\n@@ -467,23 +467,23 @@ class PosixEnv : public Env {\n       result = IOError(fname, errno);\n     }\n     return result;\n-  };\n+  }\n \n   virtual Status CreateDir(const std::string& name) {\n     Status result;\n     if (mkdir(name.c_str(), 0755) != 0) {\n       result = IOError(name, errno);\n     }\n     return result;\n-  };\n+  }\n \n   virtual Status DeleteDir(const std::string& name) {\n     Status result;\n     if (rmdir(name.c_str()) != 0) {\n       result = IOError(name, errno);\n     }\n     return result;\n-  };\n+  }\n \n   virtual Status GetFileSize(const std::string& fname, uint64_t* size) {\n     Status s;\n@@ -589,7 +589,7 @@ class PosixEnv : public Env {\n   void PthreadCall(const char* label, int result) {\n     if (result != 0) {\n       fprintf(stderr, \"pthread %s: %s\\n\", label, strerror(result));\n-      exit(1);\n+      abort();\n     }\n   }\n "
      },
      {
        "sha": "07cf022060d41ea2139a438886d268a92cb586af",
        "filename": "src/leveldb/util/hash.cc",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/hash.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/leveldb/util/hash.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/hash.cc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -6,6 +6,13 @@\n #include \"util/coding.h\"\n #include \"util/hash.h\"\n \n+// The FALLTHROUGH_INTENDED macro can be used to annotate implicit fall-through\n+// between switch labels. The real definition should be provided externally.\n+// This one is a fallback version for unsupported compilers.\n+#ifndef FALLTHROUGH_INTENDED\n+#define FALLTHROUGH_INTENDED do { } while (0)\n+#endif\n+\n namespace leveldb {\n \n uint32_t Hash(const char* data, size_t n, uint32_t seed) {\n@@ -28,10 +35,10 @@ uint32_t Hash(const char* data, size_t n, uint32_t seed) {\n   switch (limit - data) {\n     case 3:\n       h += data[2] << 16;\n-      // fall through\n+      FALLTHROUGH_INTENDED;\n     case 2:\n       h += data[1] << 8;\n-      // fall through\n+      FALLTHROUGH_INTENDED;\n     case 1:\n       h += data[0];\n       h *= m;"
      },
      {
        "sha": "54a2a1bee74e97f9c20eae32667dc6cf66c05bdd",
        "filename": "src/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 258,
        "deletions": 0,
        "changes": 258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_base.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,258 @@\n+# ===========================================================================\n+#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+    if test \"$withval\" = \"no\"; then\n+        want_boost=\"no\"\n+    elif test \"$withval\" = \"yes\"; then\n+        want_boost=\"yes\"\n+        ac_boost_path=\"\"\n+    else\n+        want_boost=\"yes\"\n+        ac_boost_path=\"$withval\"\n+    fi\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n+        [\n+        if test -d \"$withval\"\n+        then\n+                ac_boost_lib_path=\"$withval\"\n+        else\n+                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n+        fi\n+        ],\n+        [ac_boost_lib_path=\"\"]\n+)\n+\n+if test \"x$want_boost\" = \"xyes\"; then\n+    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n+    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n+    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n+        boost_lib_version_req_sub_minor=\"0\"\n+        fi\n+    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n+    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+    succeeded=no\n+\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    libsubdirs=\"lib\"\n+    ax_arch=`uname -m`\n+    if test $ax_arch = x86_64 -o $ax_arch = ppc64 -o $ax_arch = s390x -o $ax_arch = sparc64; then\n+        libsubdirs=\"lib64 lib lib64\"\n+    fi\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    if test \"$ac_boost_path\" != \"\"; then\n+        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n+        for ac_boost_path_tmp in $libsubdirs; do\n+                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n+                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n+                        break\n+                fi\n+        done\n+    elif test \"$cross_compiling\" != yes; then\n+        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    fi\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    if test \"$ac_boost_lib_path\" != \"\"; then\n+       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n+    fi\n+\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    @%:@include <boost/version.hpp>\n+    ]], [[\n+    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+    // Everything is okay\n+    #else\n+    #  error Boost version is too old\n+    #endif\n+    ]])],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\"; then\n+        _version=0\n+        if test \"$ac_boost_path\" != \"\"; then\n+            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"$V_CHECK\" = \"1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+            fi\n+        else\n+            if test \"$cross_compiling\" != yes; then\n+                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"$V_CHECK\" = \"1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$ac_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test \"$ac_boost_lib_path\" = \"\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test \"x$BOOST_ROOT\" != \"x\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        @%:@include <boost/version.hpp>\n+        ]], [[\n+        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+        // Everything is okay\n+        #else\n+        #  error Boost version is too old\n+        #endif\n+        ]])],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"$succeeded\" != \"yes\" ; then\n+        if test \"$_version\" = \"0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_SUBST(BOOST_CPPFLAGS)\n+        AC_SUBST(BOOST_LDFLAGS)\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+fi\n+\n+])"
      },
      {
        "sha": "9b3958ec74d2c32a02a0d32b7b23cba46e9fc383",
        "filename": "src/m4/ax_boost_chrono.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_chrono.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_CHRONO\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CHRONO_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_CHRONO\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 1\n+\n+AC_DEFUN([AX_BOOST_CHRONO],\n+[\n+\tAC_ARG_WITH([boost-chrono],\n+\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n+                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_chrono_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_chrono_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n+\t\t\t\t\t   ax_cv_boost_chrono,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n+                                   [[boost::chrono::system_clock::time_point time;]])],\n+                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_chrono\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                   [link_chrono=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "2a62da8d89f9e284edbe4f00a0988cc984dce23d",
        "filename": "src/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_filesystem.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 21\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_filesystem*.so* $BOOSTLIBDIR/libboost_filesystem*.dylib* $BOOSTLIBDIR/libboost_filesystem*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_filesystem.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.a*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.dylib$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_filesystem*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_filesystem.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_filesystem.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d612f91da36a2d55f8676f958cb46397c4509135",
        "filename": "src/m4/ax_boost_program_options.m4",
        "status": "added",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_program_options.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,108 @@\n+# ============================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n+# ============================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROGRAM_OPTIONS\n+#\n+# DESCRIPTION\n+#\n+#   Test for program options library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROGRAM_OPTIONS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n+[\n+\tAC_ARG_WITH([boost-program-options],\n+\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n+                       [use the program options library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_program_options_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_program_options_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t    export want_boost\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n+\t\t\t\t\t   ax_cv_boost_program_options,\n+\t\t\t\t\t   [AC_LANG_PUSH(C++)\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+                                                          ]],\n+                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                   return 0;]])],\n+                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n+\t\t\t\t\tAC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n+\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n+                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                fi\n+                else\n+                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n+                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                   [link_program_options=\"no\"])\n+                  done\n+                fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n+\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n+\t\t\t\tfi\n+\t\tfi\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "7fbf6d360d7f2ab8e9811ce0cfb6d40cef64ed17",
        "filename": "src/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_system.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,120 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 14\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+                                   [[boost::system::system_category]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_system*.so* $BOOSTLIBDIR/libboost_system*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_system.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_system*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_system.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d9cd8a1d1d4bf04e121976a9989dccf4b5c88a38",
        "filename": "src/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_thread.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,153 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+\tAC_ARG_WITH([boost-thread],\n+\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_thread_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+\t\t\t\t\t   ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t # let us handle platform dependent issues in\n+\t\t\t # configure.ac\n+\n+\t\t\t # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t\t\t # \t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+\t\t\t # elif test \"x$build_os\" = \"xming32\" ; then\n+\t\t\t # \t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+\t\t\t # else\n+\t\t\t # \tCXXFLAGS=\"-pthread $CXXFLAGS\"\n+\t\t\t # fi\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n+                                   [[boost::thread_group thrds;\n+                                   return 0;]])],\n+                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+           # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+\t   # \t   elif test \"x$build_os\" = \"xming32\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+\t   # \t   else\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+\t   # \t   fi\n+\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+                        # case \"x$build_os\" in\n+                        #   *bsd* )\n+                        #        LDFLAGS=\"-pthread $LDFLAGS\"\n+                        #   break;\n+                        #   ;;\n+                        # esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_thread*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.a*$;\\1;'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_thread*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t# if test \"x$link_thread\" = \"xno\"; then\n+\t\t\t# \tAC_MSG_ERROR(Could not link against $ax_lib !)\n+                        # else\n+                        #    case \"x$build_os\" in\n+                        #       *bsd* )\n+\t\t\t# \tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        #       break;\n+                        #       ;;\n+                        #    esac\n+\n+\t\t\t# fi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "1115f551212ae50807a3ae7aefe9477418a0103e",
        "filename": "src/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_unit_test_framework.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,137 @@\n+# ================================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# ================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 19\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "src/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_compile_flag.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "src/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_link_flag.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,71 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "src/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_preproc_flag.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "6d400ed4e8e29dfc7a650e2ca704a228d0dc61ba",
        "filename": "src/m4/ax_pthread.m4",
        "status": "added",
        "additions": 317,
        "deletions": 0,
        "changes": 317,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_pthread.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,317 @@\n+# ===========================================================================\n+#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also link it with them as well. e.g. you should link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threads programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n+#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 20\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on True64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n+        AC_TRY_LINK_FUNC(pthread_join, ax_pthread_ok=yes)\n+        AC_MSG_RESULT($ax_pthread_ok)\n+        if test x\"$ax_pthread_ok\" = xno; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n+# -pthreads: Solaris/gcc\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads too;\n+#      also defines -D_REENTRANT)\n+#      ... -mt is also the pthreads flag for HP/aCC\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case ${host_os} in\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n+        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n+        # a function called by this macro, so we could check for that, but\n+        # who knows whether they'll stub that too in a future libc.)  So,\n+        # we'll just look for -pthreads and -lpthread first:\n+\n+        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+        ;;\n+\n+        darwin*)\n+        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+if test x\"$ax_pthread_ok\" = xno; then\n+for flag in $ax_pthread_flags; do\n+\n+        case $flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $flag])\n+                PTHREAD_CFLAGS=\"$flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG(ax_pthread_config, pthread-config, yes, no)\n+                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$flag])\n+                PTHREAD_LIBS=\"-l$flag\"\n+                ;;\n+        esac\n+\n+        save_LIBS=\"$LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+                [ax_pthread_ok=yes],\n+                [])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        AC_MSG_RESULT($ax_pthread_ok)\n+        if test \"x$ax_pthread_ok\" = xyes; then\n+                break;\n+        fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = xyes; then\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_MSG_CHECKING([for joinable pthread attribute])\n+        attr_name=unknown\n+        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                           [int attr = $attr; return attr /* ; */])],\n+                [attr_name=$attr; break],\n+                [])\n+        done\n+        AC_MSG_RESULT($attr_name)\n+        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n+            AC_DEFINE_UNQUOTED(PTHREAD_CREATE_JOINABLE, $attr_name,\n+                               [Define to necessary symbol if this constant\n+                                uses a non-standard name on your system.])\n+        fi\n+\n+        AC_MSG_CHECKING([if more special flags are required for pthreads])\n+        flag=no\n+        case ${host_os} in\n+            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n+            osf* | hpux*) flag=\"-D_REENTRANT\";;\n+            solaris*)\n+            if test \"$GCC\" = \"yes\"; then\n+                flag=\"-D_REENTRANT\"\n+            else\n+                flag=\"-mt -D_REENTRANT\"\n+            fi\n+            ;;\n+        esac\n+        AC_MSG_RESULT(${flag})\n+        if test \"x$flag\" != xno; then\n+            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n+        fi\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            ax_cv_PTHREAD_PRIO_INHERIT, [\n+                AC_LINK_IFELSE([\n+                    AC_LANG_PROGRAM([[#include <pthread.h>]], [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n+            AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], 1, [Have PTHREAD_PRIO_INHERIT.]))\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != xyes; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                  [#handle absolute path differently from PATH based program lookup\n+                   AS_CASE([\"x$CC\"],\n+                     [x/*],\n+                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST(PTHREAD_LIBS)\n+AC_SUBST(PTHREAD_CFLAGS)\n+AC_SUBST(PTHREAD_CC)\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test x\"$ax_pthread_ok\" = xyes; then\n+        ifelse([$1],,AC_DEFINE(HAVE_PTHREAD,1,[Define if you have POSIX threads libraries and header files.]),[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "72ec49b63530f1ad23f95e524717173aca7aa2e3",
        "filename": "src/m4/bitcoin_find_bdb48.m4",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_find_bdb48.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,66 @@\n+AC_DEFUN([BITCOIN_FIND_BDB48],[\n+  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+  BDB_CPPFLAGS=\n+  BDB_LIBS=\n+  bdbpath=X\n+  bdb48path=X\n+  bdbdirlist=\n+  for _vn in 4.8 48 4 5 ''; do\n+    for _pfx in b lib ''; do\n+      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+    done\n+  done\n+  for searchpath in $bdbdirlist ''; do\n+    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+    AC_TRY_COMPILE([\n+      #include <${searchpath}db_cxx.h>\n+    ],[\n+      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+        #error \"failed to find bdb 4.8+\"\n+      #endif\n+    ],[\n+      if test \"x$bdbpath\" = \"xX\"; then\n+        bdbpath=\"${searchpath}\"\n+      fi\n+    ],[\n+      continue\n+    ])\n+    AC_TRY_COMPILE([\n+      #include <${searchpath}db_cxx.h>\n+    ],[\n+      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+        #error \"failed to find bdb 4.8\"\n+      #endif\n+    ],[\n+      bdb48path=\"${searchpath}\"\n+      break\n+    ])\n+  done\n+  if test \"x$bdbpath\" = \"xX\"; then\n+    AC_MSG_RESULT([no])\n+    AC_MSG_ERROR(libdb_cxx headers missing)\n+  elif test \"x$bdb48path\" = \"xX\"; then\n+    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+    ],[\n+      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore)])\n+    ])\n+  else\n+    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+    bdbpath=\"${bdb48path}\"\n+  fi\n+  AC_SUBST(BDB_CPPFLAGS)\n+  \n+  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+  for searchlib in db_cxx-4.8 db_cxx; do\n+    AC_CHECK_LIB([$searchlib],[main],[\n+      BDB_LIBS=\"-l${searchlib}\"\n+      break\n+    ])\n+  done\n+  if test \"x$BDB_LIBS\" = \"x\"; then\n+      AC_MSG_ERROR(libdb_cxx missing)\n+  fi\n+  AC_SUBST(BDB_LIBS)\n+])"
      },
      {
        "sha": "66f106c7d47b9121576197c56f6a330e3972d188",
        "filename": "src/m4/bitcoin_subdir_to_include.m4",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_subdir_to_include.m4?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,14 @@\n+dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl SUBDIRECTORY-NAME must end with a path separator\n+AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+  if test \"x$2\" = \"x\"; then\n+    AC_MSG_RESULT([default])\n+  else\n+    echo \"#include <$2$3.h>\" >conftest.cpp\n+    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n+    AC_MSG_RESULT([${newinclpath}])\n+    if test \"x${newinclpath}\" != \"x\"; then\n+      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n+    fi\n+  fi\n+])"
      },
      {
        "sha": "dcf0ee01aed2097e5c5a5be763f7a251e16df00b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 570,
        "deletions": 1041,
        "changes": 1611,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "83b0d07f633076c9b9579a9eb39b10e2fd541cbb",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 55,
        "deletions": 304,
        "changes": 359,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -5,6 +5,10 @@\n #ifndef BITCOIN_MAIN_H\n #define BITCOIN_MAIN_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"core.h\"\n #include \"bignum.h\"\n #include \"sync.h\"\n@@ -52,6 +56,8 @@ static const int COINBASE_MATURITY = 100;\n static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n /** Maximum number of script-checking threads allowed */\n static const int MAX_SCRIPTCHECK_THREADS = 16;\n+/** Default amount of block size reserved for high-priority transactions (in bytes) */\n+static const int DEFAULT_BLOCK_PRIORITY_SIZE = 27000;\n #ifdef USE_UPNP\n static const int fHaveUPnP = true;\n #else\n@@ -70,7 +76,6 @@ extern CCriticalSection cs_main;\n extern std::map<uint256, CBlockIndex*> mapBlockIndex;\n extern std::vector<CBlockIndex*> vBlockIndexByHeight;\n extern std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid;\n-extern uint256 hashGenesisBlock;\n extern CBlockIndex* pindexGenesisBlock;\n extern int nBestHeight;\n extern uint256 nBestChainWork;\n@@ -81,12 +86,9 @@ extern unsigned int nTransactionsUpdated;\n extern uint64 nLastBlockTx;\n extern uint64 nLastBlockSize;\n extern const std::string strMessageMagic;\n-extern double dHashesPerSec;\n-extern int64 nHPSTimerStart;\n extern int64 nTimeBestReceived;\n extern CCriticalSection cs_setpwalletRegistered;\n extern std::set<CWallet*> setpwalletRegistered;\n-extern unsigned char pchMessageStart[4];\n extern bool fImporting;\n extern bool fReindex;\n extern bool fBenchmark;\n@@ -119,6 +121,8 @@ struct CBlockTemplate;\n void RegisterWallet(CWallet* pwalletIn);\n /** Unregister a wallet from core */\n void UnregisterWallet(CWallet* pwalletIn);\n+/** Unregister all wallets from core */\n+void UnregisterAllWallets();\n /** Push an updated transaction to all registered wallets */\n void SyncWithWallets(const uint256 &hash, const CTransaction& tx, const CBlock* pblock = NULL, bool fUpdate = false);\n \n@@ -146,7 +150,7 @@ bool LoadBlockIndex();\n /** Unload database information */\n void UnloadBlockIndex();\n /** Verify consistency of the block and coin databases */\n-bool VerifyDB();\n+bool VerifyDB(int nCheckLevel, int nCheckDepth);\n /** Print the loaded block tree */\n void PrintBlockTree();\n /** Find a block by height in the currently-connected chain */\n@@ -157,16 +161,6 @@ bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck();\n-/** Run the miner threads */\n-void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n-/** Generate a new block, without valid proof-of-work */\n-CBlockTemplate* CreateNewBlock(CReserveKey& reservekey);\n-/** Modify the extranonce in a block */\n-void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n-/** Do mining precalculation */\n-void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n-/** Check mined block */\n-bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);\n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n /** Calculate the minimum amount of work a received block needs, without knowing its direct parent */\n@@ -183,6 +177,8 @@ bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock, b\n bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew);\n /** Find the best known block, and make it the tip of the block chain */\n bool ConnectBestBlock(CValidationState &state);\n+int64 GetBlockValue(int nHeight, int64 nFees);\n+unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);\n \n void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev);\n \n@@ -262,12 +258,11 @@ struct CDiskTxPos : public CDiskBlockPos\n \n enum GetMinFee_mode\n {\n-    GMF_BLOCK,\n     GMF_RELAY,\n     GMF_SEND,\n };\n \n-int64 GetMinFee(const CTransaction& tx, unsigned int nBlockSize = 1, bool fAllowFree = true, enum GetMinFee_mode mode = GMF_BLOCK);\n+int64 GetMinFee(const CTransaction& tx, bool fAllowFree, enum GetMinFee_mode mode);\n \n //\n // Check transaction inputs, and make sure any\n@@ -317,15 +312,15 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n                  std::vector<CScriptCheck> *pvChecks = NULL);\n \n // Apply the effects of this transaction on the UTXO set represented by view\n-bool UpdateCoins(const CTransaction& tx, CCoinsViewCache &view, CTxUndo &txundo, int nHeight, const uint256 &txhash);\n+void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight, const uint256 &txhash);\n \n // Context-independent validity checks\n bool CheckTransaction(const CTransaction& tx, CValidationState& state);\n \n /** Check for standard transaction types\n     @return True if all outputs (scriptPubKeys) use only standard transaction forms\n */\n-bool IsStandardTx(const CTransaction& tx);\n+bool IsStandardTx(const CTransaction& tx, std::string& reason);\n \n bool IsFinalTx(const CTransaction &tx, int nBlockHeight = 0, int64 nBlockTime = 0);\n \n@@ -353,7 +348,7 @@ class CBlockUndo\n \n         // Write index header\n         unsigned int nSize = fileout.GetSerializeSize(*this);\n-        fileout << FLATDATA(pchMessageStart) << nSize;\n+        fileout << FLATDATA(Params().MessageStart()) << nSize;\n \n         // Write undo data\n         long fileOutPos = ftell(fileout);\n@@ -478,7 +473,7 @@ class CMerkleTx : public CTransaction\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }\n     int GetBlocksToMaturity() const;\n-    bool AcceptToMemoryPool(bool fCheckInputs=true, bool fLimitFree=true);\n+    bool AcceptToMemoryPool(bool fLimitFree=true);\n };\n \n \n@@ -582,204 +577,33 @@ class CPartialMerkleTree\n };\n \n \n-class CBlock : public CBlockHeader\n-{\n-public:\n-    // network and disk\n-    std::vector<CTransaction> vtx;\n-\n-    // memory only\n-    mutable std::vector<uint256> vMerkleTree;\n-\n-    CBlock()\n-    {\n-        SetNull();\n-    }\n-\n-    CBlock(const CBlockHeader &header)\n-    {\n-        SetNull();\n-        *((CBlockHeader*)this) = header;\n-    }\n-\n-    IMPLEMENT_SERIALIZE\n-    (\n-        READWRITE(*(CBlockHeader*)this);\n-        READWRITE(vtx);\n-    )\n-\n-    void SetNull()\n-    {\n-        CBlockHeader::SetNull();\n-        vtx.clear();\n-        vMerkleTree.clear();\n-    }\n-\n-    CBlockHeader GetBlockHeader() const\n-    {\n-        CBlockHeader block;\n-        block.nVersion       = nVersion;\n-        block.hashPrevBlock  = hashPrevBlock;\n-        block.hashMerkleRoot = hashMerkleRoot;\n-        block.nTime          = nTime;\n-        block.nBits          = nBits;\n-        block.nNonce         = nNonce;\n-        return block;\n-    }\n-\n-    uint256 BuildMerkleTree() const\n-    {\n-        vMerkleTree.clear();\n-        BOOST_FOREACH(const CTransaction& tx, vtx)\n-            vMerkleTree.push_back(tx.GetHash());\n-        int j = 0;\n-        for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n-        {\n-            for (int i = 0; i < nSize; i += 2)\n-            {\n-                int i2 = std::min(i+1, nSize-1);\n-                vMerkleTree.push_back(Hash(BEGIN(vMerkleTree[j+i]),  END(vMerkleTree[j+i]),\n-                                           BEGIN(vMerkleTree[j+i2]), END(vMerkleTree[j+i2])));\n-            }\n-            j += nSize;\n-        }\n-        return (vMerkleTree.empty() ? 0 : vMerkleTree.back());\n-    }\n-\n-    const uint256 &GetTxHash(unsigned int nIndex) const {\n-        assert(vMerkleTree.size() > 0); // BuildMerkleTree must have been called first\n-        assert(nIndex < vtx.size());\n-        return vMerkleTree[nIndex];\n-    }\n-\n-    std::vector<uint256> GetMerkleBranch(int nIndex) const\n-    {\n-        if (vMerkleTree.empty())\n-            BuildMerkleTree();\n-        std::vector<uint256> vMerkleBranch;\n-        int j = 0;\n-        for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n-        {\n-            int i = std::min(nIndex^1, nSize-1);\n-            vMerkleBranch.push_back(vMerkleTree[j+i]);\n-            nIndex >>= 1;\n-            j += nSize;\n-        }\n-        return vMerkleBranch;\n-    }\n-\n-    static uint256 CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex)\n-    {\n-        if (nIndex == -1)\n-            return 0;\n-        BOOST_FOREACH(const uint256& otherside, vMerkleBranch)\n-        {\n-            if (nIndex & 1)\n-                hash = Hash(BEGIN(otherside), END(otherside), BEGIN(hash), END(hash));\n-            else\n-                hash = Hash(BEGIN(hash), END(hash), BEGIN(otherside), END(otherside));\n-            nIndex >>= 1;\n-        }\n-        return hash;\n-    }\n-\n-    bool WriteToDisk(CDiskBlockPos &pos)\n-    {\n-        // Open history file to append\n-        CAutoFile fileout = CAutoFile(OpenBlockFile(pos), SER_DISK, CLIENT_VERSION);\n-        if (!fileout)\n-            return error(\"CBlock::WriteToDisk() : OpenBlockFile failed\");\n-\n-        // Write index header\n-        unsigned int nSize = fileout.GetSerializeSize(*this);\n-        fileout << FLATDATA(pchMessageStart) << nSize;\n-\n-        // Write block\n-        long fileOutPos = ftell(fileout);\n-        if (fileOutPos < 0)\n-            return error(\"CBlock::WriteToDisk() : ftell failed\");\n-        pos.nPos = (unsigned int)fileOutPos;\n-        fileout << *this;\n-\n-        // Flush stdio buffers and commit to disk before returning\n-        fflush(fileout);\n-        if (!IsInitialBlockDownload())\n-            FileCommit(fileout);\n-\n-        return true;\n-    }\n-\n-    bool ReadFromDisk(const CDiskBlockPos &pos)\n-    {\n-        SetNull();\n-\n-        // Open history file to read\n-        CAutoFile filein = CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n-        if (!filein)\n-            return error(\"CBlock::ReadFromDisk() : OpenBlockFile failed\");\n-\n-        // Read block\n-        try {\n-            filein >> *this;\n-        }\n-        catch (std::exception &e) {\n-            return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n-        }\n-\n-        // Check the header\n-        if (!CheckProofOfWork(GetHash(), nBits))\n-            return error(\"CBlock::ReadFromDisk() : errors in block header\");\n-\n-        return true;\n-    }\n-\n-\n-\n-    void print() const\n-    {\n-        printf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\n-            GetHash().ToString().c_str(),\n-            nVersion,\n-            hashPrevBlock.ToString().c_str(),\n-            hashMerkleRoot.ToString().c_str(),\n-            nTime, nBits, nNonce,\n-            vtx.size());\n-        for (unsigned int i = 0; i < vtx.size(); i++)\n-        {\n-            printf(\"  \");\n-            vtx[i].print();\n-        }\n-        printf(\"  vMerkleTree: \");\n-        for (unsigned int i = 0; i < vMerkleTree.size(); i++)\n-            printf(\"%s \", vMerkleTree[i].ToString().c_str());\n-        printf(\"\\n\");\n-    }\n-\n \n-    /** Undo the effects of this block (with given index) on the UTXO set represented by coins.\n-     *  In case pfClean is provided, operation will try to be tolerant about errors, and *pfClean\n-     *  will be true if no problems were found. Otherwise, the return value will be false in case\n-     *  of problems. Note that in any case, coins may be modified. */\n-    bool DisconnectBlock(CValidationState &state, CBlockIndex *pindex, CCoinsViewCache &coins, bool *pfClean = NULL);\n+/** Functions for disk access for blocks */\n+bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos);\n+bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos);\n+bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex);\n \n-    // Apply the effects of this block (with given index) on the UTXO set represented by coins\n-    bool ConnectBlock(CValidationState &state, CBlockIndex *pindex, CCoinsViewCache &coins, bool fJustCheck=false);\n \n-    // Read a block from disk\n-    bool ReadFromDisk(const CBlockIndex* pindex);\n+/** Functions for validating blocks and updating the block tree */\n \n-    // Add this block to the block index, and if necessary, switch the active block chain to this\n-    bool AddToBlockIndex(CValidationState &state, const CDiskBlockPos &pos);\n+/** Undo the effects of this block (with given index) on the UTXO set represented by coins.\n+ *  In case pfClean is provided, operation will try to be tolerant about errors, and *pfClean\n+ *  will be true if no problems were found. Otherwise, the return value will be false in case\n+ *  of problems. Note that in any case, coins may be modified. */\n+bool DisconnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& coins, bool* pfClean = NULL);\n \n-    // Context-independent validity checks\n-    bool CheckBlock(CValidationState &state, bool fCheckPOW=true, bool fCheckMerkleRoot=true) const;\n+// Apply the effects of this block (with given index) on the UTXO set represented by coins\n+bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& coins, bool fJustCheck = false);\n \n-    // Store block on disk\n-    // if dbp is provided, the file is known to already reside on disk\n-    bool AcceptBlock(CValidationState &state, CDiskBlockPos *dbp = NULL);\n-};\n+// Add this block to the block index, and if necessary, switch the active block chain to this\n+bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos& pos);\n \n+// Context-independent validity checks\n+bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n+// Store block on disk\n+// if dbp is provided, the file is known to already reside on disk\n+bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp = NULL);\n \n \n \n@@ -829,7 +653,7 @@ class CBlockFileInfo\n          if (nBlocks==0 || nTimeFirst > nTimeIn)\n              nTimeFirst = nTimeIn;\n          nBlocks++;\n-         if (nHeightIn > nHeightFirst)\n+         if (nHeightIn > nHeightLast)\n              nHeightLast = nHeightIn;\n          if (nTimeIn > nTimeLast)\n              nTimeLast = nTimeIn;\n@@ -1054,7 +878,7 @@ class CBlockIndex\n \n     void print() const\n     {\n-        printf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString().c_str());\n     }\n };\n \n@@ -1136,7 +960,7 @@ class CDiskBlockIndex : public CBlockIndex\n \n     void print() const\n     {\n-        printf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString().c_str());\n     }\n };\n \n@@ -1202,22 +1026,14 @@ class CBlockLocator\n protected:\n     std::vector<uint256> vHave;\n public:\n-\n-    CBlockLocator()\n-    {\n-    }\n+    CBlockLocator() {}\n \n     explicit CBlockLocator(const CBlockIndex* pindex)\n     {\n         Set(pindex);\n     }\n \n-    explicit CBlockLocator(uint256 hashBlock)\n-    {\n-        std::map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n-        if (mi != mapBlockIndex.end())\n-            Set((*mi).second);\n-    }\n+    explicit CBlockLocator(uint256 hashBlock);\n \n     CBlockLocator(const std::vector<uint256>& vHaveIn)\n     {\n@@ -1241,83 +1057,16 @@ class CBlockLocator\n         return vHave.empty();\n     }\n \n-    void Set(const CBlockIndex* pindex)\n-    {\n-        vHave.clear();\n-        int nStep = 1;\n-        while (pindex)\n-        {\n-            vHave.push_back(pindex->GetBlockHash());\n-\n-            // Exponentially larger steps back\n-            for (int i = 0; pindex && i < nStep; i++)\n-                pindex = pindex->pprev;\n-            if (vHave.size() > 10)\n-                nStep *= 2;\n-        }\n-        vHave.push_back(hashGenesisBlock);\n-    }\n-\n-    int GetDistanceBack()\n-    {\n-        // Retrace how far back it was in the sender's branch\n-        int nDistance = 0;\n-        int nStep = 1;\n-        BOOST_FOREACH(const uint256& hash, vHave)\n-        {\n-            std::map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hash);\n-            if (mi != mapBlockIndex.end())\n-            {\n-                CBlockIndex* pindex = (*mi).second;\n-                if (pindex->IsInMainChain())\n-                    return nDistance;\n-            }\n-            nDistance += nStep;\n-            if (nDistance > 10)\n-                nStep *= 2;\n-        }\n-        return nDistance;\n-    }\n-\n-    CBlockIndex* GetBlockIndex()\n-    {\n-        // Find the first block the caller has in the main chain\n-        BOOST_FOREACH(const uint256& hash, vHave)\n-        {\n-            std::map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hash);\n-            if (mi != mapBlockIndex.end())\n-            {\n-                CBlockIndex* pindex = (*mi).second;\n-                if (pindex->IsInMainChain())\n-                    return pindex;\n-            }\n-        }\n-        return pindexGenesisBlock;\n-    }\n-\n-    uint256 GetBlockHash()\n-    {\n-        // Find the first block the caller has in the main chain\n-        BOOST_FOREACH(const uint256& hash, vHave)\n-        {\n-            std::map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hash);\n-            if (mi != mapBlockIndex.end())\n-            {\n-                CBlockIndex* pindex = (*mi).second;\n-                if (pindex->IsInMainChain())\n-                    return hash;\n-            }\n-        }\n-        return hashGenesisBlock;\n-    }\n-\n-    int GetHeight()\n-    {\n-        CBlockIndex* pindex = GetBlockIndex();\n-        if (!pindex)\n-            return 0;\n-        return pindex->nHeight;\n-    }\n+    /** Given a block initialises the locator to that point in the chain. */\n+    void Set(const CBlockIndex* pindex);\n+    /** Returns the distance in blocks this locator is from our chain head. */\n+    int GetDistanceBack();\n+    /** Returns the first best-chain block the locator contains. */\n+    CBlockIndex* GetBlockIndex();\n+    /** Returns the hash of the first best chain block the locator contains. */\n+    uint256 GetBlockHash();\n+    /** Returns the height of the first best chain block the locator has. */\n+    int GetHeight();\n };\n \n \n@@ -1330,17 +1079,19 @@ class CBlockLocator\n class CTxMemPool\n {\n public:\n+    static bool fChecks;\n     mutable CCriticalSection cs;\n     std::map<uint256, CTransaction> mapTx;\n     std::map<COutPoint, CInPoint> mapNextTx;\n \n-    bool accept(CValidationState &state, CTransaction &tx, bool fCheckInputs, bool fLimitFree, bool* pfMissingInputs);\n-    bool addUnchecked(const uint256& hash, CTransaction &tx);\n+    bool accept(CValidationState &state, const CTransaction &tx, bool fLimitFree, bool* pfMissingInputs, bool fRejectInsaneFee = false);\n+    bool addUnchecked(const uint256& hash, const CTransaction &tx);\n     bool remove(const CTransaction &tx, bool fRecursive = false);\n     bool removeConflicts(const CTransaction &tx);\n     void clear();\n     void queryHashes(std::vector<uint256>& vtxid);\n     void pruneSpent(const uint256& hash, CCoins &coins);\n+    void check(CCoinsViewCache *pcoins) const;\n \n     unsigned long size()\n     {\n@@ -1461,7 +1212,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n         @see CTransaction::FetchInputs\n      */\n     int64 GetValueIn(const CTransaction& tx);\n-    \n+\n     // Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n     bool HaveInputs(const CTransaction& tx);\n "
      },
      {
        "sha": "9cfab5942a3ca309e334972b36dd57dbfce1bc72",
        "filename": "src/makefile.linux-mingw",
        "status": "removed",
        "additions": 0,
        "deletions": 133,
        "changes": 133,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,133 +0,0 @@\n-# Copyright (c) 2009-2010 Satoshi Nakamoto\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-DEPSDIR:=/usr/i586-mingw32msvc\n-\n-CC := i586-mingw32msvc-gcc\n-CXX := i586-mingw32msvc-g++\n-\n-USE_UPNP:=0\n-USE_IPV6:=1\n-\n-INCLUDEPATHS= \\\n- -I\"$(CURDIR)\" \\\n- -I\"$(CURDIR)\"/obj \\\n- -I\"$(DEPSDIR)/boost_1_50_0\" \\\n- -I\"$(DEPSDIR)/db-4.8.30.NC/build_unix\" \\\n- -I\"$(DEPSDIR)/openssl-1.0.1c/include\" \\\n- -I\"$(DEPSDIR)\"\n-\n-LIBPATHS= \\\n- -L\"$(DEPSDIR)/boost_1_50_0/stage/lib\" \\\n- -L\"$(DEPSDIR)/db-4.8.30.NC/build_unix\" \\\n- -L\"$(DEPSDIR)/openssl-1.0.1c\"\n-\n-LIBS= \\\n-  $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a \\\n- -l boost_system-mt-s \\\n- -l boost_filesystem-mt-s \\\n- -l boost_program_options-mt-s \\\n- -l boost_thread_win32-mt-s \\\n- -l boost_chrono-mt-s \\\n- -l db_cxx \\\n- -l ssl \\\n- -l crypto\n-\n-DEFS=-D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE\n-DEBUGFLAGS=-g\n-xCXXFLAGS=-O2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS) $(CXXFLAGS)\n-# enable: ASLR, DEP and large address aware\n-xLDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware $(LDFLAGS)\n-\n-TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n-\n-ifndef USE_UPNP\n-\toverride USE_UPNP = -\n-endif\n-ifneq (${USE_UPNP}, -)\n-\tLIBPATHS += -L\"$(DEPSDIR)/miniupnpc\"\n-\tLIBS += -l miniupnpc -l iphlpapi\n-\tDEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)\n-endif\n-\n-ifneq (${USE_IPV6}, -)\n-\tDEFS += -DUSE_IPV6=$(USE_IPV6)\n-endif\n-\n-LIBS += -l mingwthrd -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi\n-\n-# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are\n-HEADERS = $(wildcard *.h)\n-\n-OBJS= \\\n-    leveldb/libleveldb.a \\\n-    obj/alert.o \\\n-    obj/version.o \\\n-    obj/checkpoints.o \\\n-    obj/netbase.o \\\n-    obj/addrman.o \\\n-    obj/crypter.o \\\n-    obj/key.o \\\n-    obj/db.o \\\n-    obj/init.o \\\n-    obj/bitcoind.o \\\n-    obj/keystore.o \\\n-    obj/core.o \\\n-    obj/main.o \\\n-    obj/net.o \\\n-    obj/protocol.o \\\n-    obj/bitcoinrpc.o \\\n-    obj/rpcdump.o \\\n-    obj/rpcnet.o \\\n-    obj/rpcmining.o \\\n-    obj/rpcwallet.o \\\n-    obj/rpcblockchain.o \\\n-    obj/rpcrawtransaction.o \\\n-    obj/script.o \\\n-    obj/sync.o \\\n-    obj/util.o \\\n-    obj/wallet.o \\\n-    obj/walletdb.o \\\n-    obj/noui.o \\\n-    obj/hash.o \\\n-    obj/bloom.o \\\n-    obj/leveldb.o \\\n-    obj/txdb.o\n-\n-all: bitcoind.exe\n-\n-DEFS += -I\"$(CURDIR)/leveldb/include\"\n-DEFS += -I\"$(CURDIR)/leveldb/helpers\"\n-leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\" && cd leveldb && TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) CC=$(CC) CXX=$(CXX) OPT=\"$(xCXXFLAGS)\" libleveldb.a libmemenv.a && i586-mingw32msvc-ranlib libleveldb.a && i586-mingw32msvc-ranlib libmemenv.a && cd ..\n-\n-obj/build.h: FORCE\n-\t/bin/sh ../share/genbuild.sh obj/build.h\n-version.cpp: obj/build.h\n-DEFS += -DHAVE_BUILD_INFO\n-\n-obj/%.o: %.cpp $(HEADERS)\n-\t$(CXX) -c $(xCXXFLAGS) -o $@ $<\n-\n-bitcoind.exe: $(OBJS:obj/%=obj/%)\n-\t$(CXX) $(xCXXFLAGS) $(xLDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n-\n-TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))\n-\n-obj-test/%.o: test/%.cpp $(HEADERS)\n-\t$(CXX) -c $(TESTDEFS) $(xCXXFLAGS) -o $@ $<\n-\n-test_bitcoin.exe: $(TESTOBJS) $(filter-out obj/init.o obj/bitcoind.o,$(OBJS:obj/%=obj/%))\n-\t$(CXX) $(xCXXFLAGS) $(xLDFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework-mt-s $(LIBS)\n-\n-\n-clean:\n-\t-rm -f obj/*.o\n-\t-rm -f bitcoind.exe\n-\t-rm -f obj-test/*.o\n-\t-rm -f test_bitcoin.exe\n-\t-rm -f obj/build.h\n-\tcd leveldb && TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) clean && cd ..\n-\n-FORCE:"
      },
      {
        "sha": "33cc7e6b4a0145e4cb25ed3fbfa51fe2958159ec",
        "filename": "src/makefile.mingw",
        "status": "removed",
        "additions": 0,
        "deletions": 141,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,141 +0,0 @@\n-# Copyright (c) 2009-2010 Satoshi Nakamoto\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Makefile for the MinGW g++ compiler/toolchain\n-#\n-# Assumes Berkeley DB, Boost, and OpenSSL have all been compiled and installed\n-# into /usr/local (/usr/local/include, /usr/local/lib).\n-#\n-# If dependencies are somewhere else, run 'make DEPSDIR=/path/'\n-#\n-# Boost libraries are given wacky names that include the particular version of\n-# boost you're using; set BOOST_SUFFIX appropriately.\n-#\n-# 'make clean' assumes it is running inside a MSYS shell, and uses 'rm'\n-# to remove files.\n-\n-CXX ?= g++\n-\n-USE_UPNP:=-\n-USE_IPV6:=1\n-\n-DEPSDIR?=/usr/local\n-BOOST_SUFFIX?=-mgw46-mt-sd-1_52\n-\n-INCLUDEPATHS= \\\n- -I\"$(CURDIR)\" \\\n- -I\"$(DEPSDIR)/include\"\n-\n-LIBPATHS= \\\n- -L\"$(CURDIR)/leveldb\" \\\n- -L\"$(DEPSDIR)/lib\"\n-\n-LIBS= \\\n- -l leveldb \\\n- -l memenv \\\n- -l boost_system$(BOOST_SUFFIX) \\\n- -l boost_filesystem$(BOOST_SUFFIX) \\\n- -l boost_program_options$(BOOST_SUFFIX) \\\n- -l boost_thread$(BOOST_SUFFIX) \\\n- -l boost_chrono$(BOOST_SUFFIX) \\\n- -l db_cxx \\\n- -l ssl \\\n- -l crypto\n-\n-DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE\n-DEBUGFLAGS=-g\n-CFLAGS=-mthreads -O2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n-# enable: ASLR, DEP and large address aware\n-LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware\n-\n-TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n-\n-ifndef USE_UPNP\n-\toverride USE_UPNP = -\n-endif\n-ifneq (${USE_UPNP}, -)\n- LIBS += -l miniupnpc -l iphlpapi\n- DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)\n-endif\n-\n-ifneq (${USE_IPV6}, -)\n-\tDEFS += -DUSE_IPV6=$(USE_IPV6)\n-endif\n-\n-LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi\n-\n-# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are\n-HEADERS = $(wildcard *.h)\n-\n-OBJS= \\\n-    leveldb/libleveldb.a \\\n-    obj/alert.o \\\n-    obj/version.o \\\n-    obj/checkpoints.o \\\n-    obj/netbase.o \\\n-    obj/addrman.o \\\n-    obj/crypter.o \\\n-    obj/key.o \\\n-    obj/db.o \\\n-    obj/init.o \\\n-    obj/bitcoind.o \\\n-    obj/keystore.o \\\n-    obj/core.o \\\n-    obj/main.o \\\n-    obj/net.o \\\n-    obj/protocol.o \\\n-    obj/bitcoinrpc.o \\\n-    obj/rpcdump.o \\\n-    obj/rpcnet.o \\\n-    obj/rpcmining.o \\\n-    obj/rpcwallet.o \\\n-    obj/rpcblockchain.o \\\n-    obj/rpcrawtransaction.o \\\n-    obj/script.o \\\n-    obj/sync.o \\\n-    obj/util.o \\\n-    obj/wallet.o \\\n-    obj/walletdb.o \\\n-    obj/hash.o \\\n-    obj/bloom.o \\\n-    obj/noui.o \\\n-    obj/leveldb.o \\\n-    obj/txdb.o\n-\n-\n-all: bitcoind.exe\n-\n-test check: test_bitcoin.exe FORCE\n-\ttest_bitcoin.exe\n-\n-#\n-# LevelDB support\n-#\n-DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)\n-DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n-\n-leveldb/libleveldb.a:\n-\tcd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT=\"$(CFLAGS)\" TARGET_OS=NATIVE_WINDOWS libleveldb.a libmemenv.a && cd ..\n-\n-obj/%.o: %.cpp $(HEADERS)\n-\t$(CXX) -c $(CFLAGS) -o $@ $<\n-\n-bitcoind.exe: $(OBJS:obj/%=obj/%)\n-\t$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n-\n-TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))\n-\n-obj-test/%.o: test/%.cpp $(HEADERS)\n-\t$(CXX) -c $(TESTDEFS) $(CFLAGS) -o $@ $<\n-\n-test_bitcoin.exe: $(TESTOBJS) $(filter-out obj/init.o obj/bitcoind.o,$(OBJS:obj/%=obj/%))\n-\t$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework$(BOOST_SUFFIX) $(LIBS)\n-\n-clean:\n-\trm -f bitcoind.exe test_bitcoin.exe\n-\trm -f obj/*\n-\trm -f obj-test/*\n-\tcd leveldb && $(MAKE) TARGET_OS=NATIVE_WINDOWS clean && cd ..\n-\n-FORCE:"
      },
      {
        "sha": "bef0ef35182438100e7080620277daef2390ba25",
        "filename": "src/makefile.osx",
        "status": "removed",
        "additions": 0,
        "deletions": 179,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,179 +0,0 @@\n-# -*- mode: Makefile; -*-\n-# Copyright (c) 2011 Bitcoin Developers\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Mac OS X makefile for bitcoin\n-# Originally by Laszlo Hanyecz (solar@heliacal.net)\n-\n-CXX=llvm-g++\n-DEPSDIR=/opt/local\n-\n-INCLUDEPATHS= \\\n- -I\"$(CURDIR)\" \\\n- -I\"$(CURDIR)\"/obj \\\n- -I\"$(DEPSDIR)/include\" \\\n- -I\"$(DEPSDIR)/include/db48\"\n-\n-LIBPATHS= \\\n- -L\"$(DEPSDIR)/lib\" \\\n- -L\"$(DEPSDIR)/lib/db48\"\n-\n-USE_UPNP:=1\n-USE_IPV6:=1\n-\n-LIBS= -dead_strip\n-\n-TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n-\n-ifdef STATIC\n-# Build STATIC if you are redistributing the bitcoind binary\n-TESTLIBS += \\\n- $(DEPSDIR)/lib/libboost_unit_test_framework-mt.a\n-LIBS += \\\n- $(DEPSDIR)/lib/db48/libdb_cxx-4.8.a \\\n- $(DEPSDIR)/lib/libboost_system-mt.a \\\n- $(DEPSDIR)/lib/libboost_filesystem-mt.a \\\n- $(DEPSDIR)/lib/libboost_program_options-mt.a \\\n- $(DEPSDIR)/lib/libboost_thread-mt.a \\\n- $(DEPSDIR)/lib/libboost_chrono-mt.a \\\n- $(DEPSDIR)/lib/libssl.a \\\n- $(DEPSDIR)/lib/libcrypto.a \\\n- -lz\n-else\n-TESTLIBS += \\\n- -lboost_unit_test_framework-mt\n-LIBS += \\\n- -ldb_cxx-4.8 \\\n- -lboost_system-mt \\\n- -lboost_filesystem-mt \\\n- -lboost_program_options-mt \\\n- -lboost_thread-mt \\\n- -lboost_chrono-mt \\\n- -lssl \\\n- -lcrypto \\\n- -lz\n-TESTDEFS += -DBOOST_TEST_DYN_LINK\n-endif\n-\n-DEFS=-DMAC_OSX -DMSG_NOSIGNAL=0 -DBOOST_SPIRIT_THREADSAFE\n-\n-ifdef RELEASE\n-# Compile for maximum compatibility and smallest size.\n-# This requires that dependencies are compiled\n-# the same way.\n-CFLAGS = -mmacosx-version-min=10.5 -arch i386 -O3\n-else\n-DEBUGFLAGS = -g\n-endif\n-\n-# ppc doesn't work because we don't support big-endian\n-CFLAGS += -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \\\n-    $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n-\n-OBJS= \\\n-    leveldb/libleveldb.a \\\n-    obj/alert.o \\\n-    obj/version.o \\\n-    obj/checkpoints.o \\\n-    obj/netbase.o \\\n-    obj/addrman.o \\\n-    obj/crypter.o \\\n-    obj/key.o \\\n-    obj/db.o \\\n-    obj/init.o \\\n-    obj/bitcoind.o \\\n-    obj/keystore.o \\\n-    obj/core.o \\\n-    obj/main.o \\\n-    obj/net.o \\\n-    obj/protocol.o \\\n-    obj/bitcoinrpc.o \\\n-    obj/rpcdump.o \\\n-    obj/rpcnet.o \\\n-    obj/rpcmining.o \\\n-    obj/rpcwallet.o \\\n-    obj/rpcblockchain.o \\\n-    obj/rpcrawtransaction.o \\\n-    obj/script.o \\\n-    obj/sync.o \\\n-    obj/util.o \\\n-    obj/wallet.o \\\n-    obj/walletdb.o \\\n-    obj/hash.o \\\n-    obj/bloom.o \\\n-    obj/noui.o \\\n-    obj/leveldb.o \\\n-    obj/txdb.o\n-\n-ifndef USE_UPNP\n-\toverride USE_UPNP = -\n-endif\n-ifneq (${USE_UPNP}, -)\n-\tDEFS += -DUSE_UPNP=$(USE_UPNP)\n-ifdef STATIC\n-\tLIBS += $(DEPSDIR)/lib/libminiupnpc.a\n-else\n-\tLIBS += -lminiupnpc\n-endif\n-endif\n-\n-ifneq (${USE_IPV6}, -)\n-\tDEFS += -DUSE_IPV6=$(USE_IPV6)\n-endif\n-\n-all: bitcoind\n-\n-test check: test_bitcoin FORCE\n-\t./test_bitcoin\n-\n-#\n-# LevelDB support\n-#\n-LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a\n-DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)\n-DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n-leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\" && cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT=\"$(CFLAGS)\" libleveldb.a libmemenv.a && cd ..\n-\n-# auto-generated dependencies:\n--include obj/*.P\n--include obj-test/*.P\n-\n-obj/build.h: FORCE\n-\t/bin/sh ../share/genbuild.sh obj/build.h\n-version.cpp: obj/build.h\n-DEFS += -DHAVE_BUILD_INFO\n-\n-obj/%.o: %.cpp\n-\t$(CXX) -c $(CFLAGS) -MMD -MF $(@:%.o=%.d) -o $@ $<\n-\t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n-\t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n-\t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n-\t  rm -f $(@:%.o=%.d)\n-\n-bitcoind: $(OBJS:obj/%=obj/%)\n-\t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n-\n-TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))\n-\n-obj-test/%.o: test/%.cpp\n-\t$(CXX) -c $(TESTDEFS) $(CFLAGS) -MMD -MF $(@:%.o=%.d) -o $@ $<\n-\t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n-\t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n-\t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n-\t  rm -f $(@:%.o=%.d)\n-\n-test_bitcoin: $(TESTOBJS) $(filter-out obj/init.o obj/bitcoind.o,$(OBJS:obj/%=obj/%))\n-\t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) $(TESTLIBS)\n-\n-clean:\n-\t-rm -f bitcoind test_bitcoin\n-\t-rm -f obj/*.o\n-\t-rm -f obj-test/*.o\n-\t-rm -f obj/*.P\n-\t-rm -f obj-test/*.P\n-\t-rm -f obj/build.h\n-\t-cd leveldb && $(MAKE) clean || true\n-\n-FORCE:"
      },
      {
        "sha": "a83bab104749a66e95fba79e949367e103b51317",
        "filename": "src/makefile.unix",
        "status": "removed",
        "additions": 0,
        "deletions": 204,
        "changes": 204,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bc879be9500c1cccf96ff3aa94df48c24af3963/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=1bc879be9500c1cccf96ff3aa94df48c24af3963",
        "patch": "@@ -1,204 +0,0 @@\n-# Copyright (c) 2009-2010 Satoshi Nakamoto\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# :=0 --> UPnP support turned off by default at runtime\n-# :=1 --> UPnP support turned on by default at runtime\n-# :=- --> No UPnP support - miniupnp not required\n-USE_UPNP:=0\n-\n-# :=1 --> Enable IPv6 support\n-# :=0 --> Disable IPv6 support\n-USE_IPV6:=1\n-\n-LINK:=$(CXX)\n-\n-DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64\n-\n-DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))\n-LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))\n-\n-TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n-\n-LMODE = dynamic\n-LMODE2 = dynamic\n-ifdef STATIC\n-\tLMODE = static\n-\tifeq (${STATIC}, all)\n-\t\tLMODE2 = static\n-\tendif\n-else\n-\tTESTDEFS += -DBOOST_TEST_DYN_LINK\n-endif\n-\n-# for boost 1.37, add -mt to the boost libraries\n-LIBS += \\\n- -Wl,-B$(LMODE) \\\n-   -l boost_system$(BOOST_LIB_SUFFIX) \\\n-   -l boost_filesystem$(BOOST_LIB_SUFFIX) \\\n-   -l boost_program_options$(BOOST_LIB_SUFFIX) \\\n-   -l boost_thread$(BOOST_LIB_SUFFIX) \\\n-   -l db_cxx$(BDB_LIB_SUFFIX) \\\n-   -l ssl \\\n-   -l crypto\n-\n-TESTLIBS += \\\n- -Wl,-B$(LMODE) \\\n-   -l boost_unit_test_framework$(BOOST_LIB_SUFFIX)\n-\n-ifndef USE_UPNP\n-\toverride USE_UPNP = -\n-endif\n-ifneq (${USE_UPNP}, -)\n-\tLIBS += -l miniupnpc\n-\tDEFS += -DUSE_UPNP=$(USE_UPNP)\n-endif\n-\n-ifneq (${USE_IPV6}, -)\n-\tDEFS += -DUSE_IPV6=$(USE_IPV6)\n-endif\n-\n-LIBS+= \\\n- -Wl,-B$(LMODE2) \\\n-   -l z \\\n-   -l dl \\\n-   -l pthread\n-\n-\n-# Hardening\n-# Make some classes of vulnerabilities unexploitable in case one is discovered.\n-#\n-    # This is a workaround for Ubuntu bug #691722, the default -fstack-protector causes\n-    # -fstack-protector-all to be ignored unless -fno-stack-protector is used first.\n-    # see: https://bugs.launchpad.net/ubuntu/+source/gcc-4.5/+bug/691722\n-    HARDENING=-fno-stack-protector\n-\n-    # Stack Canaries\n-    # Put numbers at the beginning of each stack frame and check that they are the same.\n-    # If a stack buffer if overflowed, it writes over the canary number and then on return\n-    # when that number is checked, it won't be the same and the program will exit with\n-    # a \"Stack smashing detected\" error instead of being exploited.\n-    HARDENING+=-fstack-protector-all -Wstack-protector\n-\n-    # Make some important things such as the global offset table read only as soon as\n-    # the dynamic linker is finished building it. This will prevent overwriting of addresses\n-    # which would later be jumped to.\n-    LDHARDENING+=-Wl,-z,relro -Wl,-z,now\n-\n-    # Build position independent code to take advantage of Address Space Layout Randomization\n-    # offered by some kernels.\n-    # see doc/build-unix.txt for more information.\n-    ifdef PIE\n-        HARDENING+=-fPIE\n-        LDHARDENING+=-pie\n-    endif\n-\n-    # -D_FORTIFY_SOURCE=2 does some checking for potentially exploitable code patterns in\n-    # the source such overflowing a statically defined buffer.\n-    HARDENING+=-D_FORTIFY_SOURCE=2\n-#\n-\n-\n-DEBUGFLAGS=-g\n-\n-# CXXFLAGS can be specified on the make command line, so we use xCXXFLAGS that only\n-# adds some defaults in front. Unfortunately, CXXFLAGS=... $(CXXFLAGS) does not work.\n-xCXXFLAGS=-O2 -pthread -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \\\n-    $(DEBUGFLAGS) $(DEFS) $(HARDENING) $(CXXFLAGS)\n-\n-# LDFLAGS can be specified on the make command line, so we use xLDFLAGS that only\n-# adds some defaults in front. Unfortunately, LDFLAGS=... $(LDFLAGS) does not work.\n-xLDFLAGS=$(LDHARDENING) $(LDFLAGS)\n-\n-OBJS= \\\n-    leveldb/libleveldb.a \\\n-    obj/alert.o \\\n-    obj/version.o \\\n-    obj/checkpoints.o \\\n-    obj/netbase.o \\\n-    obj/addrman.o \\\n-    obj/crypter.o \\\n-    obj/key.o \\\n-    obj/db.o \\\n-    obj/init.o \\\n-    obj/bitcoind.o \\\n-    obj/keystore.o \\\n-    obj/core.o \\\n-    obj/main.o \\\n-    obj/net.o \\\n-    obj/protocol.o \\\n-    obj/bitcoinrpc.o \\\n-    obj/rpcdump.o \\\n-    obj/rpcnet.o \\\n-    obj/rpcmining.o \\\n-    obj/rpcwallet.o \\\n-    obj/rpcblockchain.o \\\n-    obj/rpcrawtransaction.o \\\n-    obj/script.o \\\n-    obj/sync.o \\\n-    obj/util.o \\\n-    obj/wallet.o \\\n-    obj/walletdb.o \\\n-    obj/hash.o \\\n-    obj/bloom.o \\\n-    obj/noui.o \\\n-    obj/leveldb.o \\\n-    obj/txdb.o\n-\n-\n-all: bitcoind\n-\n-test check: test_bitcoin FORCE\n-\t./test_bitcoin\n-\n-#\n-# LevelDB support\n-#\n-MAKEOVERRIDES =\n-LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a\n-DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)\n-DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n-leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\" && cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT=\"$(xCXXFLAGS)\" libleveldb.a libmemenv.a && cd ..\n-\n-# auto-generated dependencies:\n--include obj/*.P\n--include obj-test/*.P\n-\n-obj/build.h: FORCE\n-\t/bin/sh ../share/genbuild.sh obj/build.h\n-version.cpp: obj/build.h\n-DEFS += -DHAVE_BUILD_INFO\n-\n-obj/%.o: %.cpp\n-\t$(CXX) -c $(xCXXFLAGS) -MMD -MF $(@:%.o=%.d) -o $@ $<\n-\t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n-\t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n-\t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n-\t  rm -f $(@:%.o=%.d)\n-\n-bitcoind: $(OBJS:obj/%=obj/%)\n-\t$(LINK) $(xCXXFLAGS) -o $@ $^ $(xLDFLAGS) $(LIBS)\n-\n-TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))\n-\n-obj-test/%.o: test/%.cpp\n-\t$(CXX) -c $(TESTDEFS) $(xCXXFLAGS) -MMD -MF $(@:%.o=%.d) -o $@ $<\n-\t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n-\t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n-\t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n-\t  rm -f $(@:%.o=%.d)\n-\n-test_bitcoin: $(TESTOBJS) $(filter-out obj/init.o obj/bitcoind.o,$(OBJS:obj/%=obj/%))\n-\t$(LINK) $(xCXXFLAGS) -o $@ $(LIBPATHS) $^ $(TESTLIBS) $(xLDFLAGS) $(LIBS)\n-\n-clean:\n-\t-rm -f bitcoind test_bitcoin\n-\t-rm -f obj/*.o\n-\t-rm -f obj-test/*.o\n-\t-rm -f obj/*.P\n-\t-rm -f obj-test/*.P\n-\t-rm -f obj/build.h\n-\t-cd leveldb && $(MAKE) clean || true\n-\n-FORCE:"
      },
      {
        "sha": "30c600071f00d179173f4a6e4cb525dafca03dc9",
        "filename": "src/miner.cpp",
        "status": "added",
        "additions": 665,
        "deletions": 0,
        "changes": 665,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,665 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"miner.h\"\n+#include \"main.h\"\n+\n+double dHashesPerSec = 0.0;\n+int64 nHPSTimerStart = 0;\n+\n+//////////////////////////////////////////////////////////////////////////////\n+//\n+// BitcoinMiner\n+//\n+\n+int static FormatHashBlocks(void* pbuffer, unsigned int len)\n+{\n+    unsigned char* pdata = (unsigned char*)pbuffer;\n+    unsigned int blocks = 1 + ((len + 8) / 64);\n+    unsigned char* pend = pdata + 64 * blocks;\n+    memset(pdata + len, 0, 64 * blocks - len);\n+    pdata[len] = 0x80;\n+    unsigned int bits = len * 8;\n+    pend[-1] = (bits >> 0) & 0xff;\n+    pend[-2] = (bits >> 8) & 0xff;\n+    pend[-3] = (bits >> 16) & 0xff;\n+    pend[-4] = (bits >> 24) & 0xff;\n+    return blocks;\n+}\n+\n+static const unsigned int pSHA256InitState[8] =\n+{0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};\n+\n+void SHA256Transform(void* pstate, void* pinput, const void* pinit)\n+{\n+    SHA256_CTX ctx;\n+    unsigned char data[64];\n+\n+    SHA256_Init(&ctx);\n+\n+    for (int i = 0; i < 16; i++)\n+        ((uint32_t*)data)[i] = ByteReverse(((uint32_t*)pinput)[i]);\n+\n+    for (int i = 0; i < 8; i++)\n+        ctx.h[i] = ((uint32_t*)pinit)[i];\n+\n+    SHA256_Update(&ctx, data, sizeof(data));\n+    for (int i = 0; i < 8; i++)\n+        ((uint32_t*)pstate)[i] = ctx.h[i];\n+}\n+\n+//\n+// ScanHash scans nonces looking for a hash with at least some zero bits.\n+// It operates on big endian data.  Caller does the byte reversing.\n+// All input buffers are 16-byte aligned.  nNonce is usually preserved\n+// between calls, but periodically or if nNonce is 0xffff0000 or above,\n+// the block is rebuilt and nNonce starts over at zero.\n+//\n+unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n+{\n+    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n+    for (;;)\n+    {\n+        // Crypto++ SHA256\n+        // Hash pdata using pmidstate as the starting state into\n+        // pre-formatted buffer phash1, then hash phash1 into phash\n+        nNonce++;\n+        SHA256Transform(phash1, pdata, pmidstate);\n+        SHA256Transform(phash, phash1, pSHA256InitState);\n+\n+        // Return the nonce if the hash has at least some zero bits,\n+        // caller will check if it has enough to reach the target\n+        if (((unsigned short*)phash)[14] == 0)\n+            return nNonce;\n+\n+        // If nothing found after trying for a while, return -1\n+        if ((nNonce & 0xffff) == 0)\n+        {\n+            nHashesDone = 0xffff+1;\n+            return (unsigned int) -1;\n+        }\n+        if ((nNonce & 0xfff) == 0)\n+            boost::this_thread::interruption_point();\n+    }\n+}\n+\n+// Some explaining would be appreciated\n+class COrphan\n+{\n+public:\n+    CTransaction* ptx;\n+    set<uint256> setDependsOn;\n+    double dPriority;\n+    double dFeePerKb;\n+\n+    COrphan(CTransaction* ptxIn)\n+    {\n+        ptx = ptxIn;\n+        dPriority = dFeePerKb = 0;\n+    }\n+\n+    void print() const\n+    {\n+        LogPrintf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n+               ptx->GetHash().ToString().c_str(), dPriority, dFeePerKb);\n+        BOOST_FOREACH(uint256 hash, setDependsOn)\n+            LogPrintf(\"   setDependsOn %s\\n\", hash.ToString().c_str());\n+    }\n+};\n+\n+\n+uint64 nLastBlockTx = 0;\n+uint64 nLastBlockSize = 0;\n+\n+// We want to sort transactions by priority and fee, so:\n+typedef boost::tuple<double, double, CTransaction*> TxPriority;\n+class TxPriorityCompare\n+{\n+    bool byFee;\n+public:\n+    TxPriorityCompare(bool _byFee) : byFee(_byFee) { }\n+    bool operator()(const TxPriority& a, const TxPriority& b)\n+    {\n+        if (byFee)\n+        {\n+            if (a.get<1>() == b.get<1>())\n+                return a.get<0>() < b.get<0>();\n+            return a.get<1>() < b.get<1>();\n+        }\n+        else\n+        {\n+            if (a.get<0>() == b.get<0>())\n+                return a.get<1>() < b.get<1>();\n+            return a.get<0>() < b.get<0>();\n+        }\n+    }\n+};\n+\n+CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n+{\n+    // Create new block\n+    auto_ptr<CBlockTemplate> pblocktemplate(new CBlockTemplate());\n+    if(!pblocktemplate.get())\n+        return NULL;\n+    CBlock *pblock = &pblocktemplate->block; // pointer for convenience\n+\n+    // Create coinbase tx\n+    CTransaction txNew;\n+    txNew.vin.resize(1);\n+    txNew.vin[0].prevout.SetNull();\n+    txNew.vout.resize(1);\n+    txNew.vout[0].scriptPubKey = scriptPubKeyIn;\n+\n+    // Add our coinbase tx as first transaction\n+    pblock->vtx.push_back(txNew);\n+    pblocktemplate->vTxFees.push_back(-1); // updated at end\n+    pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n+\n+    // Largest block you're willing to create:\n+    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", MAX_BLOCK_SIZE_GEN/2);\n+    // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n+    nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n+\n+    // How much of the block should be dedicated to high-priority transactions,\n+    // included regardless of the fees they pay\n+    unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", DEFAULT_BLOCK_PRIORITY_SIZE);\n+    nBlockPrioritySize = std::min(nBlockMaxSize, nBlockPrioritySize);\n+\n+    // Minimum block size you want to create; block will be filled with free transactions\n+    // until there are no more or the block reaches this size:\n+    unsigned int nBlockMinSize = GetArg(\"-blockminsize\", 0);\n+    nBlockMinSize = std::min(nBlockMaxSize, nBlockMinSize);\n+\n+    // Collect memory pool transactions into the block\n+    int64 nFees = 0;\n+    {\n+        LOCK2(cs_main, mempool.cs);\n+        CBlockIndex* pindexPrev = pindexBest;\n+        CCoinsViewCache view(*pcoinsTip, true);\n+\n+        // Priority order to process transactions\n+        list<COrphan> vOrphan; // list memory doesn't move\n+        map<uint256, vector<COrphan*> > mapDependers;\n+        bool fPrintPriority = GetBoolArg(\"-printpriority\", false);\n+\n+        // This vector will be sorted into a priority queue:\n+        vector<TxPriority> vecPriority;\n+        vecPriority.reserve(mempool.mapTx.size());\n+        for (map<uint256, CTransaction>::iterator mi = mempool.mapTx.begin(); mi != mempool.mapTx.end(); ++mi)\n+        {\n+            CTransaction& tx = (*mi).second;\n+            if (tx.IsCoinBase() || !IsFinalTx(tx))\n+                continue;\n+\n+            COrphan* porphan = NULL;\n+            double dPriority = 0;\n+            int64 nTotalIn = 0;\n+            bool fMissingInputs = false;\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+            {\n+                // Read prev transaction\n+                if (!view.HaveCoins(txin.prevout.hash))\n+                {\n+                    // This should never happen; all transactions in the memory\n+                    // pool should connect to either transactions in the chain\n+                    // or other transactions in the memory pool.\n+                    if (!mempool.mapTx.count(txin.prevout.hash))\n+                    {\n+                        LogPrintf(\"ERROR: mempool transaction missing input\\n\");\n+                        if (fDebug) assert(\"mempool transaction missing input\" == 0);\n+                        fMissingInputs = true;\n+                        if (porphan)\n+                            vOrphan.pop_back();\n+                        break;\n+                    }\n+\n+                    // Has to wait for dependencies\n+                    if (!porphan)\n+                    {\n+                        // Use list for automatic deletion\n+                        vOrphan.push_back(COrphan(&tx));\n+                        porphan = &vOrphan.back();\n+                    }\n+                    mapDependers[txin.prevout.hash].push_back(porphan);\n+                    porphan->setDependsOn.insert(txin.prevout.hash);\n+                    nTotalIn += mempool.mapTx[txin.prevout.hash].vout[txin.prevout.n].nValue;\n+                    continue;\n+                }\n+                const CCoins &coins = view.GetCoins(txin.prevout.hash);\n+\n+                int64 nValueIn = coins.vout[txin.prevout.n].nValue;\n+                nTotalIn += nValueIn;\n+\n+                int nConf = pindexPrev->nHeight - coins.nHeight + 1;\n+\n+                dPriority += (double)nValueIn * nConf;\n+            }\n+            if (fMissingInputs) continue;\n+\n+            // Priority is sum(valuein * age) / txsize\n+            unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n+            dPriority /= nTxSize;\n+\n+            // This is a more accurate fee-per-kilobyte than is used by the client code, because the\n+            // client code rounds up the size to the nearest 1K. That's good, because it gives an\n+            // incentive to create smaller transactions.\n+            double dFeePerKb =  double(nTotalIn-GetValueOut(tx)) / (double(nTxSize)/1000.0);\n+\n+            if (porphan)\n+            {\n+                porphan->dPriority = dPriority;\n+                porphan->dFeePerKb = dFeePerKb;\n+            }\n+            else\n+                vecPriority.push_back(TxPriority(dPriority, dFeePerKb, &(*mi).second));\n+        }\n+\n+        // Collect transactions into block\n+        uint64 nBlockSize = 1000;\n+        uint64 nBlockTx = 0;\n+        int nBlockSigOps = 100;\n+        bool fSortedByFee = (nBlockPrioritySize <= 0);\n+\n+        TxPriorityCompare comparer(fSortedByFee);\n+        std::make_heap(vecPriority.begin(), vecPriority.end(), comparer);\n+\n+        while (!vecPriority.empty())\n+        {\n+            // Take highest priority transaction off the priority queue:\n+            double dPriority = vecPriority.front().get<0>();\n+            double dFeePerKb = vecPriority.front().get<1>();\n+            CTransaction& tx = *(vecPriority.front().get<2>());\n+\n+            std::pop_heap(vecPriority.begin(), vecPriority.end(), comparer);\n+            vecPriority.pop_back();\n+\n+            // Size limits\n+            unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n+            if (nBlockSize + nTxSize >= nBlockMaxSize)\n+                continue;\n+\n+            // Legacy limits on sigOps:\n+            unsigned int nTxSigOps = GetLegacySigOpCount(tx);\n+            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n+                continue;\n+\n+            // Skip free transactions if we're past the minimum block size:\n+            if (fSortedByFee && (dFeePerKb < CTransaction::nMinTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n+                continue;\n+\n+            // Prioritize by fee once past the priority size or we run out of high-priority\n+            // transactions:\n+            if (!fSortedByFee &&\n+                ((nBlockSize + nTxSize >= nBlockPrioritySize) || !AllowFree(dPriority)))\n+            {\n+                fSortedByFee = true;\n+                comparer = TxPriorityCompare(fSortedByFee);\n+                std::make_heap(vecPriority.begin(), vecPriority.end(), comparer);\n+            }\n+\n+            if (!view.HaveInputs(tx))\n+                continue;\n+\n+            int64 nTxFees = view.GetValueIn(tx)-GetValueOut(tx);\n+\n+            nTxSigOps += GetP2SHSigOpCount(tx, view);\n+            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n+                continue;\n+\n+            CValidationState state;\n+            if (!CheckInputs(tx, state, view, true, SCRIPT_VERIFY_P2SH))\n+                continue;\n+\n+            CTxUndo txundo;\n+            uint256 hash = tx.GetHash();\n+            UpdateCoins(tx, state, view, txundo, pindexPrev->nHeight+1, hash);\n+\n+            // Added\n+            pblock->vtx.push_back(tx);\n+            pblocktemplate->vTxFees.push_back(nTxFees);\n+            pblocktemplate->vTxSigOps.push_back(nTxSigOps);\n+            nBlockSize += nTxSize;\n+            ++nBlockTx;\n+            nBlockSigOps += nTxSigOps;\n+            nFees += nTxFees;\n+\n+            if (fPrintPriority)\n+            {\n+                LogPrintf(\"priority %.1f feeperkb %.1f txid %s\\n\",\n+                       dPriority, dFeePerKb, tx.GetHash().ToString().c_str());\n+            }\n+\n+            // Add transactions that depend on this one to the priority queue\n+            if (mapDependers.count(hash))\n+            {\n+                BOOST_FOREACH(COrphan* porphan, mapDependers[hash])\n+                {\n+                    if (!porphan->setDependsOn.empty())\n+                    {\n+                        porphan->setDependsOn.erase(hash);\n+                        if (porphan->setDependsOn.empty())\n+                        {\n+                            vecPriority.push_back(TxPriority(porphan->dPriority, porphan->dFeePerKb, porphan->ptx));\n+                            std::push_heap(vecPriority.begin(), vecPriority.end(), comparer);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        nLastBlockTx = nBlockTx;\n+        nLastBlockSize = nBlockSize;\n+        LogPrintf(\"CreateNewBlock(): total size %\"PRI64u\"\\n\", nBlockSize);\n+\n+        pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+        pblocktemplate->vTxFees[0] = -nFees;\n+\n+        // Fill in header\n+        pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n+        UpdateTime(*pblock, pindexPrev);\n+        pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock);\n+        pblock->nNonce         = 0;\n+        pblock->vtx[0].vin[0].scriptSig = CScript() << OP_0 << OP_0;\n+        pblocktemplate->vTxSigOps[0] = GetLegacySigOpCount(pblock->vtx[0]);\n+\n+        CBlockIndex indexDummy(*pblock);\n+        indexDummy.pprev = pindexPrev;\n+        indexDummy.nHeight = pindexPrev->nHeight + 1;\n+        CCoinsViewCache viewNew(*pcoinsTip, true);\n+        CValidationState state;\n+        if (!ConnectBlock(*pblock, state, &indexDummy, viewNew, true))\n+            throw std::runtime_error(\"CreateNewBlock() : ConnectBlock failed\");\n+    }\n+\n+    return pblocktemplate.release();\n+}\n+\n+CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n+{\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey))\n+        return NULL;\n+\n+    CScript scriptPubKey = CScript() << pubkey << OP_CHECKSIG;\n+    return CreateNewBlock(scriptPubKey);\n+}\n+\n+void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n+{\n+    // Update nExtraNonce\n+    static uint256 hashPrevBlock;\n+    if (hashPrevBlock != pblock->hashPrevBlock)\n+    {\n+        nExtraNonce = 0;\n+        hashPrevBlock = pblock->hashPrevBlock;\n+    }\n+    ++nExtraNonce;\n+    unsigned int nHeight = pindexPrev->nHeight+1; // Height first in coinbase required for block.version=2\n+    pblock->vtx[0].vin[0].scriptSig = (CScript() << nHeight << CBigNum(nExtraNonce)) + COINBASE_FLAGS;\n+    assert(pblock->vtx[0].vin[0].scriptSig.size() <= 100);\n+\n+    pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n+}\n+\n+\n+void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1)\n+{\n+    //\n+    // Pre-build hash buffers\n+    //\n+    struct\n+    {\n+        struct unnamed2\n+        {\n+            int nVersion;\n+            uint256 hashPrevBlock;\n+            uint256 hashMerkleRoot;\n+            unsigned int nTime;\n+            unsigned int nBits;\n+            unsigned int nNonce;\n+        }\n+        block;\n+        unsigned char pchPadding0[64];\n+        uint256 hash1;\n+        unsigned char pchPadding1[64];\n+    }\n+    tmp;\n+    memset(&tmp, 0, sizeof(tmp));\n+\n+    tmp.block.nVersion       = pblock->nVersion;\n+    tmp.block.hashPrevBlock  = pblock->hashPrevBlock;\n+    tmp.block.hashMerkleRoot = pblock->hashMerkleRoot;\n+    tmp.block.nTime          = pblock->nTime;\n+    tmp.block.nBits          = pblock->nBits;\n+    tmp.block.nNonce         = pblock->nNonce;\n+\n+    FormatHashBlocks(&tmp.block, sizeof(tmp.block));\n+    FormatHashBlocks(&tmp.hash1, sizeof(tmp.hash1));\n+\n+    // Byte swap all the input buffer\n+    for (unsigned int i = 0; i < sizeof(tmp)/4; i++)\n+        ((unsigned int*)&tmp)[i] = ByteReverse(((unsigned int*)&tmp)[i]);\n+\n+    // Precalc the first half of the first hash, which stays constant\n+    SHA256Transform(pmidstate, &tmp.block, pSHA256InitState);\n+\n+    memcpy(pdata, &tmp.block, 128);\n+    memcpy(phash1, &tmp.hash1, 64);\n+}\n+\n+\n+bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n+{\n+    uint256 hash = pblock->GetHash();\n+    uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n+\n+    if (hash > hashTarget)\n+        return false;\n+\n+    //// debug print\n+    LogPrintf(\"BitcoinMiner:\\n\");\n+    LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex().c_str(), hashTarget.GetHex().c_str());\n+    pblock->print();\n+    LogPrintf(\"generated %s\\n\", FormatMoney(pblock->vtx[0].vout[0].nValue).c_str());\n+\n+    // Found a solution\n+    {\n+        LOCK(cs_main);\n+        if (pblock->hashPrevBlock != hashBestChain)\n+            return error(\"BitcoinMiner : generated block is stale\");\n+\n+        // Remove key from key pool\n+        reservekey.KeepKey();\n+\n+        // Track how many getdata requests this block gets\n+        {\n+            LOCK(wallet.cs_wallet);\n+            wallet.mapRequestCount[pblock->GetHash()] = 0;\n+        }\n+\n+        // Process this block the same as if we had received it from another node\n+        CValidationState state;\n+        if (!ProcessBlock(state, NULL, pblock))\n+            return error(\"BitcoinMiner : ProcessBlock, block not accepted\");\n+    }\n+\n+    return true;\n+}\n+\n+void static BitcoinMiner(CWallet *pwallet)\n+{\n+    LogPrintf(\"BitcoinMiner started\\n\");\n+    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+    RenameThread(\"bitcoin-miner\");\n+\n+    // Each thread has its own key and counter\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    try { while (true) {\n+        if (Params().NetworkID() != CChainParams::REGTEST) {\n+            // Busy-wait for the network to come online so we don't waste time mining\n+            // on an obsolete chain. In regtest mode we expect to fly solo.\n+            while (vNodes.empty())\n+                MilliSleep(1000);\n+        }\n+\n+        //\n+        // Create new block\n+        //\n+        unsigned int nTransactionsUpdatedLast = nTransactionsUpdated;\n+        CBlockIndex* pindexPrev = pindexBest;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n+        if (!pblocktemplate.get())\n+            return;\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        LogPrintf(\"Running BitcoinMiner with %\"PRIszu\" transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n+               ::GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION));\n+\n+        //\n+        // Pre-build hash buffers\n+        //\n+        char pmidstatebuf[32+16]; char* pmidstate = alignup<16>(pmidstatebuf);\n+        char pdatabuf[128+16];    char* pdata     = alignup<16>(pdatabuf);\n+        char phash1buf[64+16];    char* phash1    = alignup<16>(phash1buf);\n+\n+        FormatHashBuffers(pblock, pmidstate, pdata, phash1);\n+\n+        unsigned int& nBlockTime = *(unsigned int*)(pdata + 64 + 4);\n+        unsigned int& nBlockBits = *(unsigned int*)(pdata + 64 + 8);\n+        unsigned int& nBlockNonce = *(unsigned int*)(pdata + 64 + 12);\n+\n+\n+        //\n+        // Search\n+        //\n+        int64 nStart = GetTime();\n+        uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n+        uint256 hashbuf[2];\n+        uint256& hash = *alignup<16>(hashbuf);\n+        while (true)\n+        {\n+            unsigned int nHashesDone = 0;\n+            unsigned int nNonceFound;\n+\n+            // Crypto++ SHA256\n+            nNonceFound = ScanHash_CryptoPP(pmidstate, pdata + 64, phash1,\n+                                            (char*)&hash, nHashesDone);\n+\n+            // Check if something found\n+            if (nNonceFound != (unsigned int) -1)\n+            {\n+                for (unsigned int i = 0; i < sizeof(hash)/4; i++)\n+                    ((unsigned int*)&hash)[i] = ByteReverse(((unsigned int*)&hash)[i]);\n+\n+                if (hash <= hashTarget)\n+                {\n+                    // Found a solution\n+                    pblock->nNonce = ByteReverse(nNonceFound);\n+                    assert(hash == pblock->GetHash());\n+\n+                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                    CheckWork(pblock, *pwallet, reservekey);\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+                    // In regression test mode, stop mining after a block is found. This\n+                    // allows developers to controllably generate a block on demand.\n+                    if (Params().NetworkID() == CChainParams::REGTEST)\n+                        throw boost::thread_interrupted();\n+\n+                    break;\n+                }\n+            }\n+\n+            // Meter hashes/sec\n+            static int64 nHashCounter;\n+            if (nHPSTimerStart == 0)\n+            {\n+                nHPSTimerStart = GetTimeMillis();\n+                nHashCounter = 0;\n+            }\n+            else\n+                nHashCounter += nHashesDone;\n+            if (GetTimeMillis() - nHPSTimerStart > 4000)\n+            {\n+                static CCriticalSection cs;\n+                {\n+                    LOCK(cs);\n+                    if (GetTimeMillis() - nHPSTimerStart > 4000)\n+                    {\n+                        dHashesPerSec = 1000.0 * nHashCounter / (GetTimeMillis() - nHPSTimerStart);\n+                        nHPSTimerStart = GetTimeMillis();\n+                        nHashCounter = 0;\n+                        static int64 nLogTime;\n+                        if (GetTime() - nLogTime > 30 * 60)\n+                        {\n+                            nLogTime = GetTime();\n+                            LogPrintf(\"hashmeter %6.0f khash/s\\n\", dHashesPerSec/1000.0);\n+                        }\n+                    }\n+                }\n+            }\n+\n+            // Check for stop or if block needs to be rebuilt\n+            boost::this_thread::interruption_point();\n+            if (vNodes.empty() && Params().NetworkID() != CChainParams::REGTEST)\n+                break;\n+            if (nBlockNonce >= 0xffff0000)\n+                break;\n+            if (nTransactionsUpdated != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n+                break;\n+            if (pindexPrev != pindexBest)\n+                break;\n+\n+            // Update nTime every few seconds\n+            UpdateTime(*pblock, pindexPrev);\n+            nBlockTime = ByteReverse(pblock->nTime);\n+            if (TestNet())\n+            {\n+                // Changing pblock->nTime can change work required on testnet:\n+                nBlockBits = ByteReverse(pblock->nBits);\n+                hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n+            }\n+        }\n+    } }\n+    catch (boost::thread_interrupted)\n+    {\n+        LogPrintf(\"BitcoinMiner terminated\\n\");\n+        throw;\n+    }\n+}\n+\n+void GenerateBitcoins(bool fGenerate, CWallet* pwallet)\n+{\n+    static boost::thread_group* minerThreads = NULL;\n+\n+    int nThreads = GetArg(\"-genproclimit\", -1);\n+    if (nThreads < 0) {\n+        if (Params().NetworkID() == CChainParams::REGTEST)\n+            nThreads = 1;\n+        else\n+            nThreads = boost::thread::hardware_concurrency();\n+    }\n+\n+    if (minerThreads != NULL)\n+    {\n+        minerThreads->interrupt_all();\n+        delete minerThreads;\n+        minerThreads = NULL;\n+    }\n+\n+    if (nThreads == 0 || !fGenerate)\n+        return;\n+\n+    minerThreads = new boost::thread_group();\n+    for (int i = 0; i < nThreads; i++)\n+        minerThreads->create_thread(boost::bind(&BitcoinMiner, pwallet));\n+}\n+\n+\n+"
      },
      {
        "sha": "7e60b9e53b4b4c14ccd588d5b9bb9e6e78d05bca",
        "filename": "src/miner.h",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_MINER_H\n+#define BITCOIN_MINER_H\n+\n+#include \"core.h\"\n+#include \"wallet.h\"\n+\n+/** Run the miner threads */\n+void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n+/** Generate a new block, without valid proof-of-work */\n+CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn);\n+CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey);\n+/** Modify the extranonce in a block */\n+void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n+/** Do mining precalculation */\n+void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n+/** Check mined block */\n+bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);\n+/** Base sha256 mining transform */\n+void SHA256Transform(void* pstate, void* pinput, const void* pinit);\n+\n+extern double dHashesPerSec;\n+extern int64 nHPSTimerStart;\n+\n+#endif // BITCOIN_MINER_H"
      },
      {
        "sha": "781dbfadca4a996f737a0ea3c08cd002698ac820",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 92,
        "deletions": 185,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -3,6 +3,11 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n+#include \"chainparams.h\"\n #include \"db.h\"\n #include \"net.h\"\n #include \"core.h\"\n@@ -14,13 +19,23 @@\n #include <string.h>\n #endif\n \n+#ifndef WIN32\n+#include <fcntl.h>\n+#endif\n+\n #ifdef USE_UPNP\n #include <miniupnpc/miniwget.h>\n #include <miniupnpc/miniupnpc.h>\n #include <miniupnpc/upnpcommands.h>\n #include <miniupnpc/upnperrors.h>\n #endif\n \n+// Dump addresses to peers.dat every 15 minutes (900s)\n+#define DUMP_ADDRESSES_INTERVAL 900\n+#if !defined(HAVE_MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n+\n using namespace std;\n using namespace boost;\n \n@@ -80,7 +95,7 @@ void AddOneShot(string strDest)\n \n unsigned short GetListenPort()\n {\n-    return (unsigned short)(GetArg(\"-port\", GetDefaultPort()));\n+    return (unsigned short)(GetArg(\"-port\", Params().GetDefaultPort()));\n }\n \n // find 'best' local address for a particular peer\n@@ -125,7 +140,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n     strLine = \"\";\n-    loop\n+    while (true)\n     {\n         char c;\n         int nBytes = recv(hSocket, &c, 1, 0);\n@@ -158,14 +173,14 @@ bool RecvLine(SOCKET hSocket, string& strLine)\n             if (nBytes == 0)\n             {\n                 // socket closed\n-                printf(\"socket closed\\n\");\n+                LogPrint(\"net\", \"socket closed\\n\");\n                 return false;\n             }\n             else\n             {\n                 // socket error\n                 int nErr = WSAGetLastError();\n-                printf(\"recv failed: %d\\n\", nErr);\n+                LogPrint(\"net\", \"recv failed: %d\\n\", nErr);\n                 return false;\n             }\n         }\n@@ -211,7 +226,7 @@ bool AddLocal(const CService& addr, int nScore)\n     if (IsLimited(addr))\n         return false;\n \n-    printf(\"AddLocal(%s,%i)\\n\", addr.ToString().c_str(), nScore);\n+    LogPrintf(\"AddLocal(%s,%i)\\n\", addr.ToString().c_str(), nScore);\n \n     {\n         LOCK(cs_mapLocalHost);\n@@ -297,7 +312,7 @@ bool GetMyExternalIP2(const CService& addrConnect, const char* pszGet, const cha\n     {\n         if (strLine.empty()) // HTTP response is separated from headers by blank line\n         {\n-            loop\n+            while (true)\n             {\n                 if (!RecvLine(hSocket, strLine))\n                 {\n@@ -319,7 +334,7 @@ bool GetMyExternalIP2(const CService& addrConnect, const char* pszGet, const cha\n             while (strLine.size() > 0 && isspace(strLine[strLine.size()-1]))\n                 strLine.resize(strLine.size()-1);\n             CService addr(strLine,0,true);\n-            printf(\"GetMyExternalIP() received [%s] %s\\n\", strLine.c_str(), addr.ToString().c_str());\n+            LogPrintf(\"GetMyExternalIP() received [%s] %s\\n\", strLine.c_str(), addr.ToString().c_str());\n             if (!addr.IsValid() || !addr.IsRoutable())\n                 return false;\n             ipRet.SetIP(addr);\n@@ -394,7 +409,7 @@ void ThreadGetMyExternalIP()\n     CNetAddr addrLocalHost;\n     if (GetMyExternalIP(addrLocalHost))\n     {\n-        printf(\"GetMyExternalIP() returned %s\\n\", addrLocalHost.ToStringIP().c_str());\n+        LogPrintf(\"GetMyExternalIP() returned %s\\n\", addrLocalHost.ToStringIP().c_str());\n         AddLocal(addrLocalHost, LOCAL_HTTP);\n     }\n }\n@@ -458,27 +473,26 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n \n \n     /// debug print\n-    printf(\"trying connection %s lastseen=%.1fhrs\\n\",\n+    LogPrint(\"net\", \"trying connection %s lastseen=%.1fhrs\\n\",\n         pszDest ? pszDest : addrConnect.ToString().c_str(),\n         pszDest ? 0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n     // Connect\n     SOCKET hSocket;\n-    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, GetDefaultPort()) : ConnectSocket(addrConnect, hSocket))\n+    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, Params().GetDefaultPort()) : ConnectSocket(addrConnect, hSocket))\n     {\n         addrman.Attempt(addrConnect);\n \n-        /// debug print\n-        printf(\"connected %s\\n\", pszDest ? pszDest : addrConnect.ToString().c_str());\n+        LogPrint(\"net\", \"connected %s\\n\", pszDest ? pszDest : addrConnect.ToString().c_str());\n \n         // Set to non-blocking\n #ifdef WIN32\n         u_long nOne = 1;\n         if (ioctlsocket(hSocket, FIONBIO, &nOne) == SOCKET_ERROR)\n-            printf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %d\\n\", WSAGetLastError());\n+            LogPrintf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %d\\n\", WSAGetLastError());\n #else\n         if (fcntl(hSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n-            printf(\"ConnectSocket() : fcntl non-blocking setting failed, error %d\\n\", errno);\n+            LogPrintf(\"ConnectSocket() : fcntl non-blocking setting failed, error %d\\n\", errno);\n #endif\n \n         // Add node\n@@ -504,7 +518,7 @@ void CNode::CloseSocketDisconnect()\n     fDisconnect = true;\n     if (hSocket != INVALID_SOCKET)\n     {\n-        printf(\"disconnecting node %s\\n\", addrName.c_str());\n+        LogPrint(\"net\", \"disconnecting node %s\\n\", addrName.c_str());\n         closesocket(hSocket);\n         hSocket = INVALID_SOCKET;\n     }\n@@ -531,9 +545,9 @@ void CNode::PushVersion()\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(\"0.0.0.0\",0)));\n     CAddress addrMe = GetLocalAddress(&addr);\n     RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-    printf(\"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString().c_str(), addrYou.ToString().c_str(), addr.ToString().c_str());\n+    LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString().c_str(), addrYou.ToString().c_str(), addr.ToString().c_str());\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n-                nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight);\n+                nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight, true);\n }\n \n \n@@ -568,15 +582,15 @@ bool CNode::Misbehaving(int howmuch)\n {\n     if (addr.IsLocal())\n     {\n-        printf(\"Warning: Local node %s misbehaving (delta: %d)!\\n\", addrName.c_str(), howmuch);\n+        LogPrintf(\"Warning: Local node %s misbehaving (delta: %d)!\\n\", addrName.c_str(), howmuch);\n         return false;\n     }\n \n     nMisbehavior += howmuch;\n     if (nMisbehavior >= GetArg(\"-banscore\", 100))\n     {\n         int64 banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n-        printf(\"Misbehaving: %s (%d -> %d) DISCONNECTING\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n+        LogPrintf(\"Misbehaving: %s (%d -> %d) DISCONNECTING\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n         {\n             LOCK(cs_setBanned);\n             if (setBanned[addr] < banTime)\n@@ -585,7 +599,7 @@ bool CNode::Misbehaving(int howmuch)\n         CloseSocketDisconnect();\n         return true;\n     } else\n-        printf(\"Misbehaving: %s (%d -> %d)\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n+        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n     return false;\n }\n \n@@ -716,7 +730,7 @@ void SocketSendData(CNode *pnode)\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                 {\n-                    printf(\"socket send error %d\\n\", nErr);\n+                    LogPrintf(\"socket send error %d\\n\", nErr);\n                     pnode->CloseSocketDisconnect();\n                 }\n             }\n@@ -737,7 +751,7 @@ static list<CNode*> vNodesDisconnected;\n void ThreadSocketHandler()\n {\n     unsigned int nPrevNodeCount = 0;\n-    loop\n+    while (true)\n     {\n         //\n         // Disconnect nodes\n@@ -876,7 +890,7 @@ void ThreadSocketHandler()\n             if (have_fds)\n             {\n                 int nErr = WSAGetLastError();\n-                printf(\"socket select error %d\\n\", nErr);\n+                LogPrintf(\"socket select error %d\\n\", nErr);\n                 for (unsigned int i = 0; i <= hSocketMax; i++)\n                     FD_SET(i, &fdsetRecv);\n             }\n@@ -904,7 +918,7 @@ void ThreadSocketHandler()\n \n             if (hSocket != INVALID_SOCKET)\n                 if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n-                    printf(\"Warning: Unknown socket family\\n\");\n+                    LogPrintf(\"Warning: Unknown socket family\\n\");\n \n             {\n                 LOCK(cs_vNodes);\n@@ -917,7 +931,7 @@ void ThreadSocketHandler()\n             {\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK)\n-                    printf(\"socket error accept failed: %d\\n\", nErr);\n+                    LogPrintf(\"socket error accept failed: %d\\n\", nErr);\n             }\n             else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n             {\n@@ -929,12 +943,12 @@ void ThreadSocketHandler()\n             }\n             else if (CNode::IsBanned(addr))\n             {\n-                printf(\"connection from %s dropped (banned)\\n\", addr.ToString().c_str());\n+                LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString().c_str());\n                 closesocket(hSocket);\n             }\n             else\n             {\n-                printf(\"accepted connection %s\\n\", addr.ToString().c_str());\n+                LogPrint(\"net\", \"accepted connection %s\\n\", addr.ToString().c_str());\n                 CNode* pnode = new CNode(hSocket, addr, \"\", true);\n                 pnode->AddRef();\n                 {\n@@ -984,7 +998,7 @@ void ThreadSocketHandler()\n                         {\n                             // socket closed gracefully\n                             if (!pnode->fDisconnect)\n-                                printf(\"socket closed\\n\");\n+                                LogPrint(\"net\", \"socket closed\\n\");\n                             pnode->CloseSocketDisconnect();\n                         }\n                         else if (nBytes < 0)\n@@ -994,7 +1008,7 @@ void ThreadSocketHandler()\n                             if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                             {\n                                 if (!pnode->fDisconnect)\n-                                    printf(\"socket recv error %d\\n\", nErr);\n+                                    LogPrintf(\"socket recv error %d\\n\", nErr);\n                                 pnode->CloseSocketDisconnect();\n                             }\n                         }\n@@ -1023,17 +1037,17 @@ void ThreadSocketHandler()\n             {\n                 if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n                 {\n-                    printf(\"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n+                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n                     pnode->fDisconnect = true;\n                 }\n                 else if (GetTime() - pnode->nLastSend > 90*60 && GetTime() - pnode->nLastSendEmpty > 90*60)\n                 {\n-                    printf(\"socket not sending\\n\");\n+                    LogPrintf(\"socket not sending\\n\");\n                     pnode->fDisconnect = true;\n                 }\n                 else if (GetTime() - pnode->nLastRecv > 90*60)\n                 {\n-                    printf(\"socket inactivity timeout\\n\");\n+                    LogPrintf(\"socket inactivity timeout\\n\");\n                     pnode->fDisconnect = true;\n                 }\n             }\n@@ -1085,23 +1099,23 @@ void ThreadMapPort()\n             char externalIPAddress[40];\n             r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n             if(r != UPNPCOMMAND_SUCCESS)\n-                printf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n             else\n             {\n                 if(externalIPAddress[0])\n                 {\n-                    printf(\"UPnP: ExternalIPAddress = %s\\n\", externalIPAddress);\n+                    LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", externalIPAddress);\n                     AddLocal(CNetAddr(externalIPAddress), LOCAL_UPNP);\n                 }\n                 else\n-                    printf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n             }\n         }\n \n         string strDesc = \"Bitcoin \" + FormatFullVersion();\n \n         try {\n-            loop {\n+            while (true) {\n #ifndef UPNPDISCOVER_SUCCESS\n                 /* miniupnpc 1.5 */\n                 r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n@@ -1113,24 +1127,24 @@ void ThreadMapPort()\n #endif\n \n                 if(r!=UPNPCOMMAND_SUCCESS)\n-                    printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n+                    LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n                         port.c_str(), port.c_str(), lanaddr, r, strupnperror(r));\n                 else\n-                    printf(\"UPnP Port Mapping successful.\\n\");;\n+                    LogPrintf(\"UPnP Port Mapping successful.\\n\");;\n \n                 MilliSleep(20*60*1000); // Refresh every 20 minutes\n             }\n         }\n         catch (boost::thread_interrupted)\n         {\n             r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n-            printf(\"UPNP_DeletePortMapping() returned : %d\\n\", r);\n+            LogPrintf(\"UPNP_DeletePortMapping() returned : %d\\n\", r);\n             freeUPNPDevlist(devlist); devlist = 0;\n             FreeUPNPUrls(&urls);\n             throw;\n         }\n     } else {\n-        printf(\"No valid UPnP IGDs found\\n\");\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n         freeUPNPDevlist(devlist); devlist = 0;\n         if (r != 0)\n             FreeUPNPUrls(&urls);\n@@ -1170,57 +1184,35 @@ void MapPort(bool)\n \n \n \n-\n-\n-\n-// DNS seeds\n-// Each pair gives a source name and a seed name.\n-// The first name is used as information source for addrman.\n-// The second name should resolve to a list of seed addresses.\n-static const char *strMainNetDNSSeed[][2] = {\n-    {\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\"},\n-    {\"bluematt.me\", \"dnsseed.bluematt.me\"},\n-    {\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\"},\n-    {\"xf2.org\", \"bitseed.xf2.org\"},\n-    {NULL, NULL}\n-};\n-\n-static const char *strTestNetDNSSeed[][2] = {\n-    {\"bitcoin.petertodd.org\", \"testnet-seed.bitcoin.petertodd.org\"},\n-    {\"bluematt.me\", \"testnet-seed.bluematt.me\"},\n-    {NULL, NULL}\n-};\n-\n void ThreadDNSAddressSeed()\n {\n-    static const char *(*strDNSSeed)[2] = fTestNet ? strTestNetDNSSeed : strMainNetDNSSeed;\n-\n+    const vector<CDNSSeedData> &vSeeds = Params().DNSSeeds();\n     int found = 0;\n \n-    printf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n+    LogPrintf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n \n-    for (unsigned int seed_idx = 0; strDNSSeed[seed_idx][0] != NULL; seed_idx++) {\n+    BOOST_FOREACH(const CDNSSeedData &seed, vSeeds) {\n         if (HaveNameProxy()) {\n-            AddOneShot(strDNSSeed[seed_idx][1]);\n+            AddOneShot(seed.host);\n         } else {\n-            vector<CNetAddr> vaddr;\n+            vector<CNetAddr> vIPs;\n             vector<CAddress> vAdd;\n-            if (LookupHost(strDNSSeed[seed_idx][1], vaddr))\n+            if (LookupHost(seed.host.c_str(), vIPs))\n             {\n-                BOOST_FOREACH(CNetAddr& ip, vaddr)\n+                BOOST_FOREACH(CNetAddr& ip, vIPs)\n                 {\n                     int nOneDay = 24*3600;\n-                    CAddress addr = CAddress(CService(ip, GetDefaultPort()));\n+                    CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()));\n                     addr.nTime = GetTime() - 3*nOneDay - GetRand(4*nOneDay); // use a random age between 3 and 7 days old\n                     vAdd.push_back(addr);\n                     found++;\n                 }\n             }\n-            addrman.Add(vAdd, CNetAddr(strDNSSeed[seed_idx][0], true));\n+            addrman.Add(vAdd, CNetAddr(seed.name, true));\n         }\n     }\n \n-    printf(\"%d addresses found from DNS seeds\\n\", found);\n+    LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n \n@@ -1234,93 +1226,14 @@ void ThreadDNSAddressSeed()\n \n \n \n-unsigned int pnSeed[] =\n-{\n-    0xe473042e, 0xb177f2ad, 0xd63f3fb2, 0xf864f736, 0x44a23ac7, 0xcf6d9650, 0xd648042e, 0x0536f447,\n-    0x3c654ed0, 0x3e16a5bc, 0xa38e09b0, 0xdfae795b, 0xabfeca5b, 0x94ad7840, 0xf3b9f1c7, 0xbe70e0ad,\n-    0x3bbd09b0, 0x8d0c7dd5, 0x3b2a7332, 0x1a06175e, 0x581f175e, 0xca0d2dcc, 0x0fdbc658, 0xcf591ec7,\n-    0x295a12b2, 0xb4707bce, 0x68bb09b0, 0x4e735747, 0x89709553, 0x05a7814e, 0x5b8ec658, 0x402c5512,\n-    0xe80d0905, 0x17681a5e, 0xc02aa748, 0x9f811741, 0x5f321cb0, 0x23e1ee47, 0xaf7f170c, 0xaa240ab0,\n-    0xedea6257, 0x76106bc1, 0x2cf310cc, 0x08612acb, 0x9c682e4e, 0x8e963c6c, 0x443c795b, 0x22e246b8,\n-    0xfa1f2dcc, 0x90118140, 0x3821042e, 0x33c3fd2e, 0x10046d5b, 0x40d14b3e, 0x7fb8f8ce, 0x67696550,\n-    0xeeecbe58, 0x4f341745, 0x46b8fbd5, 0xc8463932, 0x6b73e862, 0x4c715932, 0x4a6785d5, 0xce3a64c2,\n-    0xde9604c7, 0x9b06884f, 0x18002a45, 0xea9bc345, 0xc4f1c658, 0xe475c1c7, 0xdd3e795b, 0x9722175e,\n-    0x34562f4e, 0x66c46e4e, 0x40bb1243, 0x7d9171d0, 0x17b8dbd5, 0x63cbfd2e, 0x1a08b8d8, 0x6175a73b,\n-    0x228d2660, 0x8627c658, 0x9c566644, 0x38cca5bc, 0x3089de5b, 0x92e25f5d, 0xa393f73f, 0xcc92dc3e,\n-    0x27487446, 0x62cbfd2e, 0x9d983b45, 0xf72a09b0, 0xf75f042e, 0x6434bb6a, 0xb29e77d8, 0x19be4fd9,\n-    0x76443243, 0x9dd72645, 0x694cef43, 0x89c2efd5, 0x5f1c5058, 0x46c6e45b, 0xe1391b40, 0x77ccefd5,\n-    0x472e5a6d, 0x85709553, 0xdd4f5d4c, 0x64ef5a46, 0x7f0ae502, 0xcf08d850, 0x3460042e, 0xeafa2d42,\n-    0x793c9044, 0x9d094746, 0x1ab9b153, 0xbfe9a5bc, 0x34771fb0, 0xb7722e32, 0x1168964b, 0x19b06ab8,\n-    0x19243b25, 0x13188045, 0xb4070905, 0x728ebb5d, 0x44f24ac8, 0xa317fead, 0x642f6a57, 0x3d951f32,\n-    0x3d312e4e, 0xfac4d048, 0xefc4dd50, 0x52b9f1c7, 0xc14d3cc3, 0x0219ea44, 0x3b79d058, 0xfa217242,\n-    0x39c80647, 0xfb697252, 0x1d495a42, 0x0aa81f4e, 0x58249ab8, 0xe6a8e6c3, 0x2bc4dad8, 0x85963c6c,\n-    0xa4ce09b0, 0x2005f536, 0x5cc2703e, 0x1992de43, 0x74e86b4c, 0xe7085653, 0xf5e15a51, 0xb4872b60,\n-    0x29e2b162, 0xa07ea053, 0x8229fd18, 0x4562ec4d, 0x8dec814e, 0x36cfa4cf, 0x96461032, 0x3c8770de,\n-    0xd10a1f5f, 0x95934641, 0x97cd65d0, 0x2e35324a, 0x2566ba1f, 0x1ca1a9d1, 0xb808b8d5, 0xf9a24a5d,\n-    0xafc8d431, 0xe4b8d9b2, 0x0f5321b2, 0x330bc658, 0x74b347ce, 0x972babd5, 0x044f7d4f, 0x06562f4e,\n-    0x8b8d3c6c, 0x3507c658, 0xe4174e4d, 0xf1c009b0, 0x52249ab8, 0x27211772, 0xf6a9ba59, 0x7a391b40,\n-    0x855dc6c0, 0x291f20b2, 0xe29bc345, 0x90963c6c, 0x0af70732, 0x4242a91f, 0x4c531d48, 0xa32df948,\n-    0x627e3044, 0x65be1f54, 0x1a0cbf83, 0x6a443532, 0x8d5f1955, 0xbafa8132, 0x3534bdd5, 0xca019dd9,\n-    0x8a0d9332, 0x5584e7d8, 0x7cd1f25e, 0xeabe3fb2, 0x2945d0d1, 0x46415718, 0x70d6042e, 0x99eb76d0,\n-    0x9ece09b0, 0xb3777418, 0x5e5e91d9, 0x237a3ab0, 0xf512b62e, 0x45dec347, 0x59b7f862, 0x4c443b25,\n-    0x3cc6484b, 0x9a8ec6d1, 0x021eea44, 0xc9483944, 0xfd567e32, 0xfd204bb2, 0xc5330bcc, 0x5202894e,\n-    0xf9e309b0, 0x4cc17557, 0xdb9064ae, 0xe19e77d8, 0x25857f60, 0xeb4a15ad, 0x1f47f554, 0xea4472d9,\n-    0xd20de593, 0xf5733b25, 0x11892b54, 0x5729d35f, 0xe6188cd1, 0x488b132e, 0x541c534a, 0xa8e854ae,\n-    0xa255a66c, 0x33688763, 0xc6629ac6, 0xc20a6265, 0xcd92a059, 0x72029d3b, 0x4c298f5e, 0x51452e4e,\n-    0xbb065058, 0x15fd2dcc, 0xf40c135e, 0x615a0bad, 0x0c6a6805, 0x4971a7ad, 0x17f2a5d5, 0xf8babf47,\n-    0xb61f50ad, 0x4e1451b1, 0xf72d9252, 0x5c2abe58, 0xbd987c61, 0x084ae5cf, 0x20781fb0, 0x38b0f160,\n-    0x18aac705, 0x14f86dc1, 0x5556f481, 0x0a36c144, 0xeb446e4c, 0x2c1c0d6c, 0xbd0ff860, 0x869f92db,\n-    0x36c94f4c, 0x05502444, 0x148fe55b, 0xd5301e59, 0xd57a8f45, 0x110dc04a, 0x8670fc36, 0xee733b25,\n-    0xca56f481, 0x2a5c3bae, 0x844b0905, 0x1e51fe53, 0x0241c244, 0x59c0614e, 0x94e70a55, 0x7312fead,\n-    0xb735be44, 0xa55d0905, 0x2f63962e, 0x14a4e15b, 0x63f8f05c, 0x62d0d262, 0x3cab41ad, 0x87f1b1cb,\n-    0x018da6b8, 0xb3967dd5, 0xcb56f481, 0x685ad718, 0x3b4aeeca, 0x8d106bc1, 0x51180905, 0x72660f48,\n-    0x1521a243, 0x5b56f481, 0x6390e560, 0xdd61464e, 0x58353b25, 0x553fc062, 0x27c45d59, 0xacc62e4e,\n-    0x0d5a1cd9, 0x7f65f442, 0xbdeef660, 0xf1bd1855, 0xf8473cae, 0x13b120b2, 0x442440d0, 0x53fd4352,\n-    0xa305fc57, 0x458be84d, 0x639ce1c3, 0xebaaee47, 0x95e2c247, 0xf056f481, 0x6256f481, 0x1d87c65e,\n-    0x0a453418, 0x5beb175e, 0xd64f1618, 0xc360795b, 0x2fbf5753, 0xa8c58e53, 0x651cec52, 0x9d37b043,\n-    0x124a9758, 0x5242e4a9, 0x89913c6c, 0x880efe2e, 0x2f2f2f0c, 0x72b26751, 0x2896e46d, 0x80f4166c,\n-    0x320d59ad, 0xc50151d0, 0x11a8aa43, 0xccf56057, 0x5fbad118, 0x4719b151, 0x2b5f4bc0, 0x4d7a4a50,\n-    0xad06e047, 0x62ef5a46, 0x5aebde58, 0xdf7aa66c, 0x851acb50, 0x66b9a559, 0x3e9bb153, 0xcc512f2e,\n-    0xc073b08e, 0xd519be58, 0xe981ea4d, 0x12fd50cb, 0x378739ad, 0x06683cae, 0xa22310b2, 0xc185c705,\n-    0x8741b545, 0xa26c8318, 0x22d5bc43, 0x39201ec0, 0x68581e3e, 0xdc9bcf62, 0xd508cc82, 0xb149675b,\n-    0x4c9609b0, 0x84feb84c, 0x08291e2e, 0xfd2253b2, 0x1fd269c1, 0xc9483932, 0x4d641fb0, 0x7d37c918,\n-    0xa9de20ad, 0x77e2d655, 0x6d421b59, 0xd7668f80, 0xced09b62, 0xa9e5a5bc, 0xa4074e18, 0x60fc5ecc,\n-    0x01300148, 0x68062444, 0xb4224847, 0xed3aa443, 0xb772fb43, 0x9f56f481, 0x220dfd18, 0x8e1c3d6c,\n-    0xc44f09b0, 0x7df2bb73, 0xe22fb844, 0xea534242, 0xb6a755d4, 0xa036654b, 0x138ece5b, 0xda65d3c3,\n-    0x955871bc, 0x792124b0, 0xfc82594c, 0x851d494b, 0x2c7aee47, 0x26af46b8, 0x1416252e, 0xa8abb944,\n-    0x36c49d25, 0x674f645d, 0x363646b8, 0x9e1a2942, 0x66d0c154, 0xc6c2a545, 0x3570f2ad, 0xe7d547c7,\n-    0x7d104932, 0x18cb9c18, 0x1dcfa4cf, 0xd156f481, 0x2a02b91f, 0x3eeb3fa8, 0xcac4175e, 0x34146d42,\n-    0x994c4d46, 0x5666f440, 0x85d6713e, 0x5ecb296c, 0x0ea0ae46, 0x87e69f42, 0xc58409b0, 0x1f3436ae,\n-    0x21dc6a57, 0x4ad1cd42, 0xfb8c1a4c, 0x52d3dab2, 0x3769894b, 0xb52f1c62, 0x3677916d, 0x82b3fe57,\n-    0x493d4ac6, 0x9f963c6c, 0x5d91ff60, 0x458e0dad, 0xa49d0947, 0x491a3e18, 0x4aadcd5b, 0x0e46494b,\n-    0x1d1610ad, 0x1a10af5d, 0x4956f481, 0x207a3eae, 0x77e73244, 0xfa3b8742, 0x3261fc36, 0xfcebf536,\n-    0x1662e836, 0xf655f636, 0xa2dbd0ad, 0x23036693, 0x30448432, 0xa2b03463, 0x30730344, 0x8e4a6882,\n-    0x0c50a1cb, 0xc8d8c06b, 0xc9cd6191, 0xf443db50, 0xa9553c50, 0x23145847, 0xc35da66c, 0x29c12a60,\n-    0x55c2b447, 0x7434f75c, 0x61660640, 0xde2a7018, 0xc639494c, 0x1c306fce, 0x19b89244, 0xd29a6462,\n-    0x462cd1b2, 0x29902f44, 0x2817fa53, 0x21a30905, 0x7777ae46, 0x288443a1, 0x7bee5148, 0xc2a8b043,\n-    0xf5c3d35f, 0x2311ef84, 0x57de08a4, 0x6b221bb2, 0xf2625846, 0x4b9e09b0, 0xa24f880e, 0x22b11447,\n-    0xb3a0c744, 0x919e77d8, 0xec8b64ae, 0xff5c8d45, 0x7b15b484, 0x32679a5f, 0xba80b62e, 0x05c25c61,\n-    0x60014746, 0x5e8fb04c, 0xe67c0905, 0x4329c658, 0xac8fe555, 0xf875e647, 0x67406386, 0x35ceea18,\n-    0xbb79484b, 0xd7b9fa62, 0x238209b0, 0x208a1d32, 0x9630995e, 0x039c1318, 0x6e48006c, 0x60582344,\n-    0xadbb0150, 0x853fd462, 0x03772e4e, 0x652ce960, 0x49b630ad, 0x9993af43, 0x3735b34b, 0x548a07d9,\n-    0x55a44aad, 0xa23d1bcc, 0xfdbb2f4e, 0x530b24a0, 0x0a44b451, 0x6827c657, 0x1f66494b, 0x4e680a47,\n-    0x77e7b747, 0xa5eb3fa8, 0x6649764a, 0xd4e76c4b, 0x2c691fb0, 0xf1292e44, 0xc6d6c774, 0x85d23775,\n-    0x28275f4d, 0x259ae46d, 0x02424e81, 0x5f16be58, 0xe707c658, 0x49eae5c7, 0xd5d147ad, 0x9a7abdc3,\n-    0xe8ac7fc7, 0x84ec3aae, 0xc24942d0, 0x294aa318, 0x08ac3d18, 0x8894042e, 0xb24609b0, 0x9bcaab58,\n-    0xc400f712, 0xd5c512b8, 0x2c02cc62, 0x25080fd8, 0xed74a847, 0x18a5ec5e, 0x9850ec6d, 0xf8909758,\n-    0x7f56f481, 0x4496f23c, 0xae27784f, 0xcb7cd93e, 0x06e32860, 0x50b9a84f, 0x3660434a, 0x09161f5f,\n-    0x900486bc, 0x08055459, 0xe7ec1017, 0x7e39494c, 0x4f443b25, 0x14751a8a, 0x717d03d4, 0xbd0e24d8,\n-    0x054b6f56, 0x854c496c, 0xd92a454a, 0xc39bd054, 0x6093614b, 0x9dbad754, 0x5bf0604a, 0x99f22305\n-};\n-\n void DumpAddresses()\n {\n     int64 nStart = GetTimeMillis();\n \n     CAddrDB adb;\n     adb.Write(addrman);\n \n-    printf(\"Flushed %d addresses to peers.dat  %\"PRI64d\"ms\\n\",\n+    LogPrint(\"net\", \"Flushed %d addresses to peers.dat  %\"PRI64d\"ms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n }\n \n@@ -1365,7 +1278,7 @@ void ThreadOpenConnections()\n \n     // Initiate network connections\n     int64 nStart = GetTime();\n-    loop\n+    while (true)\n     {\n         ProcessOneShot();\n \n@@ -1374,24 +1287,14 @@ void ThreadOpenConnections()\n         CSemaphoreGrant grant(*semOutbound);\n         boost::this_thread::interruption_point();\n \n-        // Add seed nodes if IRC isn't working\n-        if (addrman.size()==0 && (GetTime() - nStart > 60) && !fTestNet)\n-        {\n-            std::vector<CAddress> vAdd;\n-            for (unsigned int i = 0; i < ARRAYLEN(pnSeed); i++)\n-            {\n-                // It'll only connect to one or two seed nodes because once it connects,\n-                // it'll get a pile of addresses with newer timestamps.\n-                // Seed nodes are given a random 'last seen time' of between one and two\n-                // weeks ago.\n-                const int64 nOneWeek = 7*24*60*60;\n-                struct in_addr ip;\n-                memcpy(&ip, &pnSeed[i], sizeof(ip));\n-                CAddress addr(CService(ip, GetDefaultPort()));\n-                addr.nTime = GetTime()-GetRand(nOneWeek)-nOneWeek;\n-                vAdd.push_back(addr);\n+        // Add seed nodes if DNS seeds are all down (an infrastructure attack?).\n+        if (addrman.size() == 0 && (GetTime() - nStart > 60)) {\n+            static bool done = false;\n+            if (!done) {\n+                LogPrintf(\"Adding fixed seed nodes as DNS doesn't seem to be available.\\n\");\n+                addrman.Add(Params().FixedSeeds(), CNetAddr(\"127.0.0.1\"));\n+                done = true;\n             }\n-            addrman.Add(vAdd, CNetAddr(\"127.0.0.1\"));\n         }\n \n         //\n@@ -1416,7 +1319,7 @@ void ThreadOpenConnections()\n         int64 nANow = GetAdjustedTime();\n \n         int nTries = 0;\n-        loop\n+        while (true)\n         {\n             // use an nUnkBias between 10 (no outgoing connections) and 90 (8 outgoing connections)\n             CAddress addr = addrman.Select(10 + min(nOutbound,8)*10);\n@@ -1440,7 +1343,7 @@ void ThreadOpenConnections()\n                 continue;\n \n             // do not allow non-default ports, unless after 50 invalid addresses selected already\n-            if (addr.GetPort() != GetDefaultPort() && nTries < 50)\n+            if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n                 continue;\n \n             addrConnect = addr;\n@@ -1490,7 +1393,7 @@ void ThreadOpenAddedConnections()\n         BOOST_FOREACH(string& strAddNode, lAddresses)\n         {\n             vector<CService> vservNode(0);\n-            if(Lookup(strAddNode.c_str(), vservNode, GetDefaultPort(), fNameLookup, 0))\n+            if(Lookup(strAddNode.c_str(), vservNode, Params().GetDefaultPort(), fNameLookup, 0))\n             {\n                 lservAddressesToAdd.push_back(vservNode);\n                 {\n@@ -1664,15 +1567,15 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n     {\n         strError = strprintf(\"Error: bind address family for %s not supported\", addrBind.ToString().c_str());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n     SOCKET hListenSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n     if (hListenSocket == INVALID_SOCKET)\n     {\n         strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %d)\", WSAGetLastError());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n@@ -1696,7 +1599,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n #endif\n     {\n         strError = strprintf(\"Error: Couldn't set properties on socket for incoming connections (error %d)\", WSAGetLastError());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n@@ -1705,8 +1608,12 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     // and enable it by default or not. Try to enable it, if possible.\n     if (addrBind.IsIPv6()) {\n #ifdef IPV6_V6ONLY\n+#ifdef WIN32\n+        setsockopt(hListenSocket, IPPROTO_IPV6, IPV6_V6ONLY, (const char*)&nOne, sizeof(int));\n+#else\n         setsockopt(hListenSocket, IPPROTO_IPV6, IPV6_V6ONLY, (void*)&nOne, sizeof(int));\n #endif\n+#endif\n #ifdef WIN32\n         int nProtLevel = 10 /* PROTECTION_LEVEL_UNRESTRICTED */;\n         int nParameterId = 23 /* IPV6_PROTECTION_LEVEl */;\n@@ -1723,16 +1630,16 @@ bool BindListenPort(const CService &addrBind, string& strError)\n             strError = strprintf(_(\"Unable to bind to %s on this computer. Bitcoin is probably already running.\"), addrBind.ToString().c_str());\n         else\n             strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %d, %s)\"), addrBind.ToString().c_str(), nErr, strerror(nErr));\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n-    printf(\"Bound to %s\\n\", addrBind.ToString().c_str());\n+    LogPrintf(\"Bound to %s\\n\", addrBind.ToString().c_str());\n \n     // Listen for incoming connections\n     if (listen(hListenSocket, SOMAXCONN) == SOCKET_ERROR)\n     {\n         strError = strprintf(\"Error: Listening for incoming connections failed (listen returned error %d)\", WSAGetLastError());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n@@ -1779,15 +1686,15 @@ void static Discover()\n                 struct sockaddr_in* s4 = (struct sockaddr_in*)(ifa->ifa_addr);\n                 CNetAddr addr(s4->sin_addr);\n                 if (AddLocal(addr, LOCAL_IF))\n-                    printf(\"IPv4 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n+                    LogPrintf(\"IPv4 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n             }\n #ifdef USE_IPV6\n             else if (ifa->ifa_addr->sa_family == AF_INET6)\n             {\n                 struct sockaddr_in6* s6 = (struct sockaddr_in6*)(ifa->ifa_addr);\n                 CNetAddr addr(s6->sin6_addr);\n                 if (AddLocal(addr, LOCAL_IF))\n-                    printf(\"IPv6 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n+                    LogPrintf(\"IPv6 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n             }\n #endif\n         }\n@@ -1818,7 +1725,7 @@ void StartNode(boost::thread_group& threadGroup)\n     //\n \n     if (!GetBoolArg(\"-dnsseed\", true))\n-        printf(\"DNS seeding disabled\\n\");\n+        LogPrintf(\"DNS seeding disabled\\n\");\n     else\n         threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"dnsseed\", &ThreadDNSAddressSeed));\n \n@@ -1840,12 +1747,12 @@ void StartNode(boost::thread_group& threadGroup)\n     threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"msghand\", &ThreadMessageHandler));\n \n     // Dump network addresses\n-    threadGroup.create_thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, 10000));\n+    threadGroup.create_thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, DUMP_ADDRESSES_INTERVAL * 1000));\n }\n \n bool StopNode()\n {\n-    printf(\"StopNode()\\n\");\n+    LogPrintf(\"StopNode()\\n\");\n     MapPort(false);\n     if (semOutbound)\n         for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n@@ -1871,7 +1778,7 @@ class CNetCleanup\n         BOOST_FOREACH(SOCKET hListenSocket, vhListenSocket)\n             if (hListenSocket != INVALID_SOCKET)\n                 if (closesocket(hListenSocket) == SOCKET_ERROR)\n-                    printf(\"closesocket(hListenSocket) failed with error %d\\n\", WSAGetLastError());\n+                    LogPrintf(\"closesocket(hListenSocket) failed with error %d\\n\", WSAGetLastError());\n \n         // clean up some globals (to help leak detection)\n         BOOST_FOREACH(CNode *pnode, vNodes)"
      },
      {
        "sha": "49415f6502683d8fe1c4d93de92e92770da8d3c3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 11,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -267,7 +267,7 @@ class CNode\n         nMisbehavior = 0;\n         fRelayTxes = false;\n         setInventoryKnown.max_size(SendBufferSize() / 1000);\n-        pfilter = NULL;\n+        pfilter = new CBloomFilter();\n \n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)\n@@ -372,8 +372,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        if (fDebugNet)\n-            printf(\"askfor %s   %\"PRI64d\" (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s   %\"PRI64d\" (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64 nNow = (GetTime() - 1) * 1000000;\n@@ -399,8 +398,7 @@ class CNode\n         ENTER_CRITICAL_SECTION(cs_vSend);\n         assert(ssSend.size() == 0);\n         ssSend << CMessageHeader(pszCommand, 0);\n-        if (fDebug)\n-            printf(\"sending: %s \", pszCommand);\n+        LogPrint(\"net\", \"sending: %s \", pszCommand);\n     }\n \n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n@@ -410,16 +408,15 @@ class CNode\n \n         LEAVE_CRITICAL_SECTION(cs_vSend);\n \n-        if (fDebug)\n-            printf(\"(aborted)\\n\");\n+        LogPrint(\"net\", \"(aborted)\\n\");\n     }\n \n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n     void EndMessage() UNLOCK_FUNCTION(cs_vSend)\n     {\n         if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n         {\n-            printf(\"dropmessages DROPPING SEND MESSAGE\\n\");\n+            LogPrint(\"net\", \"dropmessages DROPPING SEND MESSAGE\\n\");\n             AbortMessage();\n             return;\n         }\n@@ -438,9 +435,7 @@ class CNode\n         assert(ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum));\n         memcpy((char*)&ssSend[CMessageHeader::CHECKSUM_OFFSET], &nChecksum, sizeof(nChecksum));\n \n-        if (fDebug) {\n-            printf(\"(%d bytes)\\n\", nSize);\n-        }\n+        LogPrint(\"net\", \"(%d bytes)\\n\", nSize);\n \n         std::deque<CSerializeData>::iterator it = vSendMsg.insert(vSendMsg.end(), CSerializeData());\n         ssSend.GetAndClear(*it);"
      },
      {
        "sha": "360ecdd959391bb9a5727943714a3aa6184caf9c",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -9,12 +9,16 @@\n #include \"hash.h\"\n \n #ifndef WIN32\n-#include <sys/fcntl.h>\n+#include <fcntl.h>\n #endif\n \n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n \n+#if !defined(HAVE_MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n+\n using namespace std;\n \n // Settings\n@@ -165,7 +169,7 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n \n bool static Socks4(const CService &addrDest, SOCKET& hSocket)\n {\n-    printf(\"SOCKS4 connecting %s\\n\", addrDest.ToString().c_str());\n+    LogPrintf(\"SOCKS4 connecting %s\\n\", addrDest.ToString().c_str());\n     if (!addrDest.IsIPv4())\n     {\n         closesocket(hSocket);\n@@ -200,16 +204,16 @@ bool static Socks4(const CService &addrDest, SOCKET& hSocket)\n     {\n         closesocket(hSocket);\n         if (pchRet[1] != 0x5b)\n-            printf(\"ERROR: Proxy returned error %d\\n\", pchRet[1]);\n+            LogPrintf(\"ERROR: Proxy returned error %d\\n\", pchRet[1]);\n         return false;\n     }\n-    printf(\"SOCKS4 connected %s\\n\", addrDest.ToString().c_str());\n+    LogPrintf(\"SOCKS4 connected %s\\n\", addrDest.ToString().c_str());\n     return true;\n }\n \n bool static Socks5(string strDest, int port, SOCKET& hSocket)\n {\n-    printf(\"SOCKS5 connecting %s\\n\", strDest.c_str());\n+    LogPrintf(\"SOCKS5 connecting %s\\n\", strDest.c_str());\n     if (strDest.size() > 255)\n     {\n         closesocket(hSocket);\n@@ -305,7 +309,7 @@ bool static Socks5(string strDest, int port, SOCKET& hSocket)\n         closesocket(hSocket);\n         return error(\"Error reading from proxy\");\n     }\n-    printf(\"SOCKS5 connected %s\\n\", strDest.c_str());\n+    LogPrintf(\"SOCKS5 connected %s\\n\", strDest.c_str());\n     return true;\n }\n \n@@ -320,7 +324,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n #endif\n     socklen_t len = sizeof(sockaddr);\n     if (!addrConnect.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n-        printf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToString().c_str());\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToString().c_str());\n         return false;\n     }\n \n@@ -359,13 +363,13 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             int nRet = select(hSocket + 1, NULL, &fdset, NULL, &timeout);\n             if (nRet == 0)\n             {\n-                printf(\"connection timeout\\n\");\n+                LogPrint(\"net\", \"connection timeout\\n\");\n                 closesocket(hSocket);\n                 return false;\n             }\n             if (nRet == SOCKET_ERROR)\n             {\n-                printf(\"select() for connection failed: %i\\n\",WSAGetLastError());\n+                LogPrintf(\"select() for connection failed: %i\\n\",WSAGetLastError());\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -376,13 +380,13 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, &nRet, &nRetSize) == SOCKET_ERROR)\n #endif\n             {\n-                printf(\"getsockopt() for connection failed: %i\\n\",WSAGetLastError());\n+                LogPrintf(\"getsockopt() for connection failed: %i\\n\",WSAGetLastError());\n                 closesocket(hSocket);\n                 return false;\n             }\n             if (nRet != 0)\n             {\n-                printf(\"connect() failed after select(): %s\\n\",strerror(nRet));\n+                LogPrintf(\"connect() failed after select(): %s\\n\",strerror(nRet));\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -393,7 +397,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n         else\n #endif\n         {\n-            printf(\"connect() failed: %i\\n\",WSAGetLastError());\n+            LogPrintf(\"connect() failed: %i\\n\",WSAGetLastError());\n             closesocket(hSocket);\n             return false;\n         }\n@@ -860,7 +864,7 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n         nBits = 4;\n     }\n     // for he.net, use /36 groups\n-    else if (GetByte(15) == 0x20 && GetByte(14) == 0x11 && GetByte(13) == 0x04 && GetByte(12) == 0x70)\n+    else if (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70)\n         nBits = 36;\n     // for the rest of the IPv6 network, use /32 groups\n     else\n@@ -889,7 +893,7 @@ uint64 CNetAddr::GetHash() const\n \n void CNetAddr::print() const\n {\n-    printf(\"CNetAddr(%s)\\n\", ToString().c_str());\n+    LogPrintf(\"CNetAddr(%s)\\n\", ToString().c_str());\n }\n \n // private extensions to enum Network, only returned by GetExtNetwork,\n@@ -1130,7 +1134,7 @@ std::string CService::ToString() const\n \n void CService::print() const\n {\n-    printf(\"CService(%s)\\n\", ToString().c_str());\n+    LogPrintf(\"CService(%s)\\n\", ToString().c_str());\n }\n \n void CService::SetPort(unsigned short portIn)"
      },
      {
        "sha": "e1f80b4ee8e35fa50726eaf8e07abfa91c50f279",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -4,6 +4,10 @@\n #ifndef BITCOIN_NETBASE_H\n #define BITCOIN_NETBASE_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include <string>\n #include <vector>\n \n@@ -50,7 +54,7 @@ class CNetAddr\n         bool IsRFC3849() const; // IPv6 documentation address (2001:0DB8::/32)\n         bool IsRFC3927() const; // IPv4 autoconfig (169.254.0.0/16)\n         bool IsRFC3964() const; // IPv6 6to4 tunnelling (2002::/16)\n-        bool IsRFC4193() const; // IPv6 unique local (FC00::/15)\n+        bool IsRFC4193() const; // IPv6 unique local (FC00::/7)\n         bool IsRFC4380() const; // IPv6 Teredo tunnelling (2001::/32)\n         bool IsRFC4843() const; // IPv6 ORCHID (2001:10::/28)\n         bool IsRFC4862() const; // IPv6 autoconfig (FE80::/64)"
      },
      {
        "sha": "67eac944c6989b50a638fce6286ad3ce585e0395",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -27,7 +27,7 @@ static bool noui_ThreadSafeMessageBox(const std::string& message, const std::str\n         strCaption += caption; // Use supplied caption (can be empty)\n     }\n \n-    printf(\"%s: %s\\n\", strCaption.c_str(), message.c_str());\n+    LogPrintf(\"%s: %s\\n\", strCaption.c_str(), message.c_str());\n     fprintf(stderr, \"%s: %s\\n\", strCaption.c_str(), message.c_str());\n     return false;\n }\n@@ -39,7 +39,7 @@ static bool noui_ThreadSafeAskFee(int64 /*nFeeRequired*/)\n \n static void noui_InitMessage(const std::string &message)\n {\n-    printf(\"init message: %s\\n\", message.c_str());\n+    LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n \n void noui_connect()"
      },
      {
        "sha": "ba254be3e15ecb4333f227e1651d27eecc95bbf1",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -21,7 +21,7 @@ static const char* ppszTypeName[] =\n \n CMessageHeader::CMessageHeader()\n {\n-    memcpy(pchMessageStart, ::pchMessageStart, sizeof(pchMessageStart));\n+    memcpy(pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE);\n     memset(pchCommand, 0, sizeof(pchCommand));\n     pchCommand[1] = 1;\n     nMessageSize = -1;\n@@ -30,7 +30,7 @@ CMessageHeader::CMessageHeader()\n \n CMessageHeader::CMessageHeader(const char* pszCommand, unsigned int nMessageSizeIn)\n {\n-    memcpy(pchMessageStart, ::pchMessageStart, sizeof(pchMessageStart));\n+    memcpy(pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE);\n     strncpy(pchCommand, pszCommand, COMMAND_SIZE);\n     nMessageSize = nMessageSizeIn;\n     nChecksum = 0;\n@@ -47,7 +47,7 @@ std::string CMessageHeader::GetCommand() const\n bool CMessageHeader::IsValid() const\n {\n     // Check start string\n-    if (memcmp(pchMessageStart, ::pchMessageStart, sizeof(pchMessageStart)) != 0)\n+    if (memcmp(pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE) != 0)\n         return false;\n \n     // Check the command string for errors\n@@ -67,7 +67,7 @@ bool CMessageHeader::IsValid() const\n     // Message size\n     if (nMessageSize > MAX_SIZE)\n     {\n-        printf(\"CMessageHeader::IsValid() : (%s, %u bytes) nMessageSize > MAX_SIZE\\n\", GetCommand().c_str(), nMessageSize);\n+        LogPrintf(\"CMessageHeader::IsValid() : (%s, %u bytes) nMessageSize > MAX_SIZE\\n\", GetCommand().c_str(), nMessageSize);\n         return false;\n     }\n \n@@ -146,6 +146,6 @@ std::string CInv::ToString() const\n \n void CInv::print() const\n {\n-    printf(\"CInv(%s)\\n\", ToString().c_str());\n+    LogPrintf(\"CInv(%s)\\n\", ToString().c_str());\n }\n "
      },
      {
        "sha": "ae541dfdba13da60542e028663b372377b2b7749",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 10,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -10,20 +10,12 @@\n #ifndef __INCLUDED_PROTOCOL_H__\n #define __INCLUDED_PROTOCOL_H__\n \n+#include \"chainparams.h\"\n #include \"serialize.h\"\n #include \"netbase.h\"\n #include <string>\n #include \"uint256.h\"\n \n-extern bool fTestNet;\n-static inline unsigned short GetDefaultPort(const bool testnet = fTestNet)\n-{\n-    return testnet ? 18333 : 8333;\n-}\n-\n-\n-extern unsigned char pchMessageStart[4];\n-\n /** Message header.\n  * (4) message start.\n  * (12) command.\n@@ -50,7 +42,6 @@ class CMessageHeader\n     // TODO: make private (improves encapsulation)\n     public:\n         enum {\n-            MESSAGE_START_SIZE=sizeof(::pchMessageStart),\n             COMMAND_SIZE=12,\n             MESSAGE_SIZE_SIZE=sizeof(int),\n             CHECKSUM_SIZE=sizeof(int),"
      },
      {
        "sha": "248dcba0ec894408f0936a15cc2b485da8997864",
        "filename": "src/qt/Makefile.am",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,172 @@\n+include $(top_srcdir)/src/Makefile.include\n+\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src \\\n+  -I$(top_srcdir)/src/leveldb/helpers -I$(top_builddir)/src/qt \\\n+  -I$(top_builddir)/src/qt/forms $(BOOST_INCLUDES) $(PROTOBUF_CFLAGS) \\\n+  $(QR_CFLAGS) $(BDB_CPPFLAGS)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+bin_PROGRAMS = bitcoin-qt\n+noinst_LIBRARIES = libbitcoinqt.a\n+SUBDIRS = $(BUILD_TEST_QT)\n+DIST_SUBDIRS = test\n+\n+# bitcoin qt core #\n+QT_TS = locale/bitcoin_ach.ts locale/bitcoin_af_ZA.ts locale/bitcoin_ar.ts \\\n+  locale/bitcoin_be_BY.ts locale/bitcoin_bg.ts locale/bitcoin_bs.ts \\\n+  locale/bitcoin_ca_ES.ts locale/bitcoin_ca.ts locale/bitcoin_cs.ts \\\n+  locale/bitcoin_cy.ts locale/bitcoin_da.ts locale/bitcoin_de.ts \\\n+  locale/bitcoin_el_GR.ts locale/bitcoin_en.ts locale/bitcoin_eo.ts \\\n+  locale/bitcoin_es_CL.ts locale/bitcoin_es.ts locale/bitcoin_et.ts \\\n+  locale/bitcoin_eu_ES.ts locale/bitcoin_fa_IR.ts locale/bitcoin_fa.ts \\\n+  locale/bitcoin_fi.ts locale/bitcoin_fr_CA.ts locale/bitcoin_fr.ts \\\n+  locale/bitcoin_gu_IN.ts locale/bitcoin_he.ts locale/bitcoin_hi_IN.ts \\\n+  locale/bitcoin_hr.ts locale/bitcoin_hu.ts locale/bitcoin_id_ID.ts \\\n+  locale/bitcoin_it.ts locale/bitcoin_ja.ts locale/bitcoin_kk_KZ.ts \\\n+  locale/bitcoin_ko_KR.ts locale/bitcoin_la.ts locale/bitcoin_lt.ts \\\n+  locale/bitcoin_lv_LV.ts locale/bitcoin_ms_MY.ts locale/bitcoin_nb.ts \\\n+  locale/bitcoin_nl.ts locale/bitcoin_pl.ts locale/bitcoin_pt_BR.ts \\\n+  locale/bitcoin_pt_PT.ts locale/bitcoin_ro_RO.ts locale/bitcoin_ru.ts \\\n+  locale/bitcoin_sk.ts locale/bitcoin_sq.ts locale/bitcoin_sr.ts \\\n+  locale/bitcoin_sv.ts locale/bitcoin_th_TH.ts locale/bitcoin_tr.ts \\\n+  locale/bitcoin_uk.ts locale/bitcoin_vi.ts locale/bitcoin_vi_VN.ts \\\n+  locale/bitcoin_zh_CN.ts locale/bitcoin_zh_TW.ts\n+\n+QT_FORMS_UI = forms/aboutdialog.ui forms/addressbookpage.ui \\\n+  forms/askpassphrasedialog.ui forms/editaddressdialog.ui forms/intro.ui \\\n+  forms/optionsdialog.ui forms/overviewpage.ui forms/qrcodedialog.ui \\\n+  forms/rpcconsole.ui forms/sendcoinsdialog.ui forms/sendcoinsentry.ui \\\n+  forms/signverifymessagedialog.ui forms/transactiondescdialog.ui\n+\n+QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n+  moc_addresstablemodel.cpp moc_askpassphrasedialog.cpp \\\n+  moc_bitcoinaddressvalidator.cpp moc_bitcoinamountfield.cpp \\\n+  moc_bitcoingui.cpp moc_bitcoinunits.cpp moc_clientmodel.cpp \\\n+  moc_csvmodelwriter.cpp moc_editaddressdialog.cpp moc_guiutil.cpp \\\n+  moc_intro.cpp moc_macdockiconhandler.cpp moc_macnotificationhandler.cpp \\\n+  moc_monitoreddatamapper.cpp moc_notificator.cpp moc_optionsdialog.cpp \\\n+  moc_optionsmodel.cpp moc_overviewpage.cpp moc_paymentserver.cpp \\\n+  moc_qrcodedialog.cpp moc_qvalidatedlineedit.cpp moc_qvaluecombobox.cpp \\\n+  moc_rpcconsole.cpp moc_sendcoinsdialog.cpp moc_sendcoinsentry.cpp \\\n+  moc_signverifymessagedialog.cpp moc_splashscreen.cpp moc_transactiondesc.cpp \\\n+  moc_transactiondescdialog.cpp moc_transactionfilterproxy.cpp \\\n+  moc_transactiontablemodel.cpp moc_transactionview.cpp moc_walletframe.cpp \\\n+  moc_walletmodel.cpp moc_walletstack.cpp moc_walletview.cpp\n+\n+BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm\n+QR_CPP = qrcodedialog.cpp\n+\n+QT_MOC = intro.moc overviewpage.moc rpcconsole.moc\n+\n+QT_QRC_CPP = qrc_bitcoin.cpp\n+QT_QRC = bitcoin.qrc\n+\n+PROTOBUF_CC = paymentrequest.pb.cc\n+PROTOBUF_H = paymentrequest.pb.h\n+PROTOBUF_PROTO = paymentrequest.proto\n+\n+BITCOIN_QT_H  = aboutdialog.h addressbookpage.h addresstablemodel.h \\\n+  askpassphrasedialog.h bitcoinaddressvalidator.h bitcoinamountfield.h \\\n+  bitcoingui.h bitcoinunits.h clientmodel.h csvmodelwriter.h \\\n+  editaddressdialog.h guiconstants.h guiutil.h intro.h macdockiconhandler.h \\\n+  macnotificationhandler.h monitoreddatamapper.h notificator.h optionsdialog.h \\\n+  optionsmodel.h overviewpage.h paymentrequestplus.h paymentserver.h \\\n+  qrcodedialog.h qvalidatedlineedit.h qvaluecombobox.h rpcconsole.h \\\n+  sendcoinsdialog.h sendcoinsentry.h signverifymessagedialog.h splashscreen.h \\\n+  transactiondescdialog.h transactiondesc.h transactionfilterproxy.h \\\n+  transactionrecord.h transactiontablemodel.h transactionview.h walletframe.h \\\n+  walletmodel.h walletmodeltransaction.h walletstack.h walletview.h\n+\n+RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n+  res/icons/quit.png res/icons/send.png res/icons/toolbar.png \\\n+  res/icons/connect0_16.png res/icons/connect1_16.png \\\n+  res/icons/connect2_16.png res/icons/connect3_16.png \\\n+  res/icons/connect4_16.png res/icons/transaction0.png \\\n+  res/icons/transaction2.png res/icons/clock1.png res/icons/clock2.png \\\n+  res/icons/clock3.png res/icons/clock4.png res/icons/clock5.png \\\n+  res/icons/configure.png res/icons/receive.png res/icons/editpaste.png \\\n+  res/icons/editcopy.png res/icons/add.png res/icons/bitcoin_testnet.png \\\n+  res/icons/toolbar_testnet.png res/icons/edit.png res/icons/history.png \\\n+  res/icons/overview.png res/icons/export.png res/icons/synced.png \\\n+  res/icons/remove.png res/icons/tx_mined.png res/icons/tx_input.png \\\n+  res/icons/tx_output.png res/icons/tx_inout.png res/icons/lock_closed.png \\\n+  res/icons/lock_open.png res/icons/key.png res/icons/filesave.png \\\n+  res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \\\n+  res/icons/bitcoin_testnet.ico\n+\n+BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n+  addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \\\n+  bitcoinamountfield.cpp bitcoin.cpp bitcoingui.cpp \\\n+  bitcoinunits.cpp clientmodel.cpp csvmodelwriter.cpp editaddressdialog.cpp \\\n+  guiutil.cpp intro.cpp monitoreddatamapper.cpp notificator.cpp \\\n+  optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\\n+  paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \\\n+  rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n+  signverifymessagedialog.cpp splashscreen.cpp transactiondesc.cpp \\\n+  transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\\n+  transactiontablemodel.cpp transactionview.cpp walletframe.cpp \\\n+  walletmodel.cpp walletmodeltransaction.cpp walletstack.cpp walletview.cpp\n+\n+RES_IMAGES = res/images/about.png res/images/splash.png \\\n+  res/images/splash_testnet.png\n+\n+RES_MOVIES = res/movies/update_spinner.mng\n+\n+BITCOIN_RC = res/bitcoin-qt-res.rc\n+\n+libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n+  -I$(top_srcdir)/src/qt/forms $(QT_DBUS_INCLUDES)\n+libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n+  $(QT_QRC) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n+\n+nodist_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n+  $(PROTOBUF_H) $(QT_QRC_CPP)\n+\n+BUILT_SOURCES = $(nodist_libbitcoinqt_a_SOURCES)\n+\n+#Generating these with a half-written protobuf header leads to wacky results.\n+#This makes sure it's done.\n+$(QT_MOC): $(PROTOBUF_H)\n+$(QT_MOC_CPP): $(PROTOBUF_H)\n+\n+if TARGET_DARWIN\n+  libbitcoinqt_a_SOURCES += $(BITCOIN_MM)\n+endif\n+if TARGET_WINDOWS\n+  libbitcoinqt_a_SOURCES += $(BITCOIN_RC)\n+endif\n+if USE_QRCODE\n+  libbitcoinqt_a_SOURCES += $(QR_CPP)\n+endif\n+#\n+\n+# bitcoin-qt binary #\n+bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n+  -I$(top_srcdir)/src/qt/forms\n+bitcoin_qt_SOURCES = bitcoin.cpp\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n+\n+# forms/foo.h -> forms/ui_foo.h\n+QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n+\n+#locale/foo.ts -> locale/foo.qm\n+QT_QM=$(QT_TS:.ts=.qm)\n+\n+.PHONY: FORCE\n+.SECONDARY: $(QT_QM)\n+\n+bitcoinstrings.cpp: FORCE\n+\t$(MAKE) -C $(top_srcdir)/src qt/bitcoinstrings.cpp\n+\n+translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM) $(QR_CPP)\n+\t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n+\t@$(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n+\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n+\t@cd $(abs_srcdir); test -f $(RCC) && $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n+\t  echo error: could not build $@\n+\t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n+\t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n+\n+CLEANFILES = $(BUILT_SOURCES) $(QT_QM) $(QT_FORMS_H) *.gcda *.gcno"
      },
      {
        "sha": "5b8d44481e6461e39d1e95edb1d91aa0dad40238",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,3 +1,7 @@\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"addressbookpage.h\"\n #include \"ui_addressbookpage.h\"\n "
      },
      {
        "sha": "921c4443a9b6fbc18959b26a46b72cdd1462e060",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 29,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -7,6 +7,7 @@\n #include \"base58.h\"\n \n #include <QFont>\n+#include <QDebug>\n \n const QString AddressTableModel::Send = \"S\";\n const QString AddressTableModel::Receive = \"R\";\n@@ -15,7 +16,8 @@ struct AddressTableEntry\n {\n     enum Type {\n         Sending,\n-        Receiving\n+        Receiving,\n+        Hidden /* QSortFilterProxyModel will filter these out */\n     };\n \n     Type type;\n@@ -43,6 +45,20 @@ struct AddressTableEntryLessThan\n     }\n };\n \n+/* Determine address type from address purpose */\n+static AddressTableEntry::Type translateTransactionType(const QString &strPurpose, bool isMine)\n+{\n+    AddressTableEntry::Type addressType = AddressTableEntry::Hidden;\n+    // \"refund\" addresses aren't shown, and change addresses aren't in mapAddressBook at all.\n+    if (strPurpose == \"send\")\n+        addressType = AddressTableEntry::Sending;\n+    else if (strPurpose == \"receive\")\n+        addressType = AddressTableEntry::Receiving;\n+    else if (strPurpose == \"unknown\" || strPurpose == \"\") // if purpose not set, guess\n+        addressType = (isMine ? AddressTableEntry::Receiving : AddressTableEntry::Sending);\n+    return addressType;\n+}\n+\n // Private implementation\n class AddressTablePriv\n {\n@@ -59,21 +75,25 @@ class AddressTablePriv\n         cachedAddressTable.clear();\n         {\n             LOCK(wallet->cs_wallet);\n-            BOOST_FOREACH(const PAIRTYPE(CTxDestination, std::string)& item, wallet->mapAddressBook)\n+            BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& item, wallet->mapAddressBook)\n             {\n                 const CBitcoinAddress& address = item.first;\n-                const std::string& strName = item.second;\n                 bool fMine = IsMine(*wallet, address.Get());\n-                cachedAddressTable.append(AddressTableEntry(fMine ? AddressTableEntry::Receiving : AddressTableEntry::Sending,\n+                AddressTableEntry::Type addressType = translateTransactionType(\n+                        QString::fromStdString(item.second.purpose), fMine);\n+                const std::string& strName = item.second.name;\n+                cachedAddressTable.append(AddressTableEntry(addressType,\n                                   QString::fromStdString(strName),\n                                   QString::fromStdString(address.ToString())));\n             }\n         }\n         // qLowerBound() and qUpperBound() require our cachedAddressTable list to be sorted in asc order\n+        // Even though the map is already sorted this re-sorting step is needed because the originating map\n+        // is sorted by binary address, not by base58() address.\n         qSort(cachedAddressTable.begin(), cachedAddressTable.end(), AddressTableEntryLessThan());\n     }\n \n-    void updateEntry(const QString &address, const QString &label, bool isMine, int status)\n+    void updateEntry(const QString &address, const QString &label, bool isMine, const QString &purpose, int status)\n     {\n         // Find address / label in model\n         QList<AddressTableEntry>::iterator lower = qLowerBound(\n@@ -83,14 +103,14 @@ class AddressTablePriv\n         int lowerIndex = (lower - cachedAddressTable.begin());\n         int upperIndex = (upper - cachedAddressTable.begin());\n         bool inModel = (lower != upper);\n-        AddressTableEntry::Type newEntryType = isMine ? AddressTableEntry::Receiving : AddressTableEntry::Sending;\n+        AddressTableEntry::Type newEntryType = translateTransactionType(purpose, isMine);\n \n         switch(status)\n         {\n         case CT_NEW:\n             if(inModel)\n             {\n-                OutputDebugStringF(\"Warning: AddressTablePriv::updateEntry: Got CT_NOW, but entry is already in model\\n\");\n+                qDebug() << \"AddressTablePriv::updateEntry : Warning: Got CT_NOW, but entry is already in model\";\n                 break;\n             }\n             parent->beginInsertRows(QModelIndex(), lowerIndex, lowerIndex);\n@@ -100,7 +120,7 @@ class AddressTablePriv\n         case CT_UPDATED:\n             if(!inModel)\n             {\n-                OutputDebugStringF(\"Warning: AddressTablePriv::updateEntry: Got CT_UPDATED, but entry is not in model\\n\");\n+                qDebug() << \"AddressTablePriv::updateEntry : Warning: Got CT_UPDATED, but entry is not in model\";\n                 break;\n             }\n             lower->type = newEntryType;\n@@ -110,7 +130,7 @@ class AddressTablePriv\n         case CT_DELETED:\n             if(!inModel)\n             {\n-                OutputDebugStringF(\"Warning: AddressTablePriv::updateEntry: Got CT_DELETED, but entry is not in model\\n\");\n+                qDebug() << \"AddressTablePriv::updateEntry : Warning: Got CT_DELETED, but entry is not in model\";\n                 break;\n             }\n             parent->beginRemoveRows(QModelIndex(), lowerIndex, upperIndex-1);\n@@ -215,7 +235,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n     if(!index.isValid())\n         return false;\n     AddressTableEntry *rec = static_cast<AddressTableEntry*>(index.internalPointer());\n-\n+    std::string strPurpose = (rec->type == AddressTableEntry::Sending ? \"send\" : \"receive\");\n     editStatus = OK;\n \n     if(role == Qt::EditRole)\n@@ -229,7 +249,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n                 editStatus = NO_CHANGES;\n                 return false;\n             }\n-            wallet->SetAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get(), value.toString().toStdString());\n+            wallet->SetAddressBook(CBitcoinAddress(rec->address.toStdString()).Get(), value.toString().toStdString(), strPurpose);\n             break;\n         case Address:\n             // Do nothing, if old address == new address\n@@ -257,9 +277,9 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n                 {\n                     LOCK(wallet->cs_wallet);\n                     // Remove old entry\n-                    wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get());\n+                    wallet->DelAddressBook(CBitcoinAddress(rec->address.toStdString()).Get());\n                     // Add new entry with new address\n-                    wallet->SetAddressBookName(CBitcoinAddress(value.toString().toStdString()).Get(), rec->label.toStdString());\n+                    wallet->SetAddressBook(CBitcoinAddress(value.toString().toStdString()).Get(), rec->label.toStdString(), strPurpose);\n                 }\n             }\n             break;\n@@ -312,10 +332,11 @@ QModelIndex AddressTableModel::index(int row, int column, const QModelIndex &par\n     }\n }\n \n-void AddressTableModel::updateEntry(const QString &address, const QString &label, bool isMine, int status)\n+void AddressTableModel::updateEntry(const QString &address,\n+        const QString &label, bool isMine, const QString &purpose, int status)\n {\n     // Update address book model from Bitcoin core\n-    priv->updateEntry(address, label, isMine, status);\n+    priv->updateEntry(address, label, isMine, purpose, status);\n }\n \n QString AddressTableModel::addRow(const QString &type, const QString &label, const QString &address)\n@@ -345,18 +366,21 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n     else if(type == Receive)\n     {\n         // Generate a new address to associate with given label\n-        WalletModel::UnlockContext ctx(walletModel->requestUnlock());\n-        if(!ctx.isValid())\n-        {\n-            // Unlock wallet failed or was cancelled\n-            editStatus = WALLET_UNLOCK_FAILURE;\n-            return QString();\n-        }\n         CPubKey newKey;\n-        if(!wallet->GetKeyFromPool(newKey, true))\n+        if(!wallet->GetKeyFromPool(newKey))\n         {\n-            editStatus = KEY_GENERATION_FAILURE;\n-            return QString();\n+            WalletModel::UnlockContext ctx(walletModel->requestUnlock());\n+            if(!ctx.isValid())\n+            {\n+                // Unlock wallet failed or was cancelled\n+                editStatus = WALLET_UNLOCK_FAILURE;\n+                return QString();\n+            }\n+            if(!wallet->GetKeyFromPool(newKey))\n+            {\n+                editStatus = KEY_GENERATION_FAILURE;\n+                return QString();\n+            }\n         }\n         strAddress = CBitcoinAddress(newKey.GetID()).ToString();\n     }\n@@ -368,7 +392,8 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n     // Add entry\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->SetAddressBookName(CBitcoinAddress(strAddress).Get(), strLabel);\n+        wallet->SetAddressBook(CBitcoinAddress(strAddress).Get(), strLabel,\n+                               (type == Send ? \"send\" : \"receive\"));\n     }\n     return QString::fromStdString(strAddress);\n }\n@@ -385,7 +410,7 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex &parent\n     }\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get());\n+        wallet->DelAddressBook(CBitcoinAddress(rec->address.toStdString()).Get());\n     }\n     return true;\n }\n@@ -397,10 +422,10 @@ QString AddressTableModel::labelForAddress(const QString &address) const\n     {\n         LOCK(wallet->cs_wallet);\n         CBitcoinAddress address_parsed(address.toStdString());\n-        std::map<CTxDestination, std::string>::iterator mi = wallet->mapAddressBook.find(address_parsed.Get());\n+        std::map<CTxDestination, CAddressBookData>::iterator mi = wallet->mapAddressBook.find(address_parsed.Get());\n         if (mi != wallet->mapAddressBook.end())\n         {\n-            return QString::fromStdString(mi->second);\n+            return QString::fromStdString(mi->second.name);\n         }\n     }\n     return QString();"
      },
      {
        "sha": "6f532087fe05b7e0c83118a9f8b8c8eb8cf2c3cd",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -85,7 +85,7 @@ class AddressTableModel : public QAbstractTableModel\n public slots:\n     /* Update address list from core.\n      */\n-    void updateEntry(const QString &address, const QString &label, bool isMine, int status);\n+    void updateEntry(const QString &address, const QString &label, bool isMine, const QString &purpose, int status);\n \n     friend class AddressTablePriv;\n };"
      },
      {
        "sha": "2b7671f20947d43df3df58f992236db9afa375bf",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -16,6 +16,7 @@ AskPassphraseDialog::AskPassphraseDialog(Mode mode, QWidget *parent) :\n     fCapsLock(false)\n {\n     ui->setupUi(this);\n+\n     ui->passEdit1->setMaxLength(MAX_PASSPHRASE_SIZE);\n     ui->passEdit2->setMaxLength(MAX_PASSPHRASE_SIZE);\n     ui->passEdit3->setMaxLength(MAX_PASSPHRASE_SIZE);"
      },
      {
        "sha": "78693971daef2f2829257933ee9c9b09295a7cc3",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 122,
        "deletions": 51,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -2,8 +2,6 @@\n  * W.J. van der Laan 2011-2012\n  */\n \n-#include <QApplication>\n-\n #include \"bitcoingui.h\"\n #include \"clientmodel.h\"\n #include \"walletmodel.h\"\n@@ -15,7 +13,9 @@\n #include \"ui_interface.h\"\n #include \"paymentserver.h\"\n #include \"splashscreen.h\"\n+#include \"intro.h\"\n \n+#include <QApplication>\n #include <QMessageBox>\n #if QT_VERSION < 0x050000\n #include <QTextCodec>\n@@ -24,6 +24,7 @@\n #include <QTimer>\n #include <QTranslator>\n #include <QLibraryInfo>\n+#include <QSettings>\n \n #if defined(BITCOIN_NEED_QT_PLUGINS) && !defined(_BITCOIN_QT_PLUGINS_INCLUDED)\n #define _BITCOIN_QT_PLUGINS_INCLUDED\n@@ -61,7 +62,7 @@ static bool ThreadSafeMessageBox(const std::string& message, const std::string&\n     }\n     else\n     {\n-        printf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n+        LogPrintf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n         fprintf(stderr, \"%s: %s\\n\", caption.c_str(), message.c_str());\n         return false;\n     }\n@@ -90,7 +91,7 @@ static void InitMessage(const std::string &message)\n         splashref->showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));\n         qApp->processEvents();\n     }\n-    printf(\"init message: %s\\n\", message.c_str());\n+    LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n \n /*\n@@ -110,13 +111,82 @@ static void handleRunawayException(std::exception *e)\n     exit(1);\n }\n \n+/** Set up translations */\n+static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTranslator, QTranslator &translatorBase, QTranslator &translator)\n+{\n+    QSettings settings;\n+\n+    // Get desired locale (e.g. \"de_DE\")\n+    // 1) System default language\n+    QString lang_territory = QLocale::system().name();\n+    // 2) Language from QSettings\n+    QString lang_territory_qsettings = settings.value(\"language\", \"\").toString();\n+    if(!lang_territory_qsettings.isEmpty())\n+        lang_territory = lang_territory_qsettings;\n+    // 3) -lang command line argument\n+    lang_territory = QString::fromStdString(GetArg(\"-lang\", lang_territory.toStdString()));\n+\n+    // Convert to \"de\" only by truncating \"_DE\"\n+    QString lang = lang_territory;\n+    lang.truncate(lang_territory.lastIndexOf('_'));\n+\n+    // Load language files for configured locale:\n+    // - First load the translator for the base language, without territory\n+    // - Then load the more specific locale translator\n+\n+    // Load e.g. qt_de.qm\n+    if (qtTranslatorBase.load(\"qt_\" + lang, QLibraryInfo::location(QLibraryInfo::TranslationsPath)))\n+        QApplication::installTranslator(&qtTranslatorBase);\n+\n+    // Load e.g. qt_de_DE.qm\n+    if (qtTranslator.load(\"qt_\" + lang_territory, QLibraryInfo::location(QLibraryInfo::TranslationsPath)))\n+        QApplication::installTranslator(&qtTranslator);\n+\n+    // Load e.g. bitcoin_de.qm (shortcut \"de\" needs to be defined in bitcoin.qrc)\n+    if (translatorBase.load(lang, \":/translations/\"))\n+        QApplication::installTranslator(&translatorBase);\n+\n+    // Load e.g. bitcoin_de_DE.qm (shortcut \"de_DE\" needs to be defined in bitcoin.qrc)\n+    if (translator.load(lang_territory, \":/translations/\"))\n+        QApplication::installTranslator(&translator);\n+}\n+\n+/* qDebug() message handler --> debug.log */\n+#if QT_VERSION < 0x050000\n+void DebugMessageHandler(QtMsgType type, const char * msg)\n+{\n+    Q_UNUSED(type);\n+    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", msg);\n+}\n+#else\n+void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n+{\n+    Q_UNUSED(type);\n+    Q_UNUSED(context);\n+    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", qPrintable(msg));\n+}\n+#endif\n+\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n+    bool fMissingDatadir = false;\n+    bool fSelParFromCLFailed = false;\n+\n     fHaveGUI = true;\n \n     // Command-line options take precedence:\n     ParseParameters(argc, argv);\n+    // ... then bitcoin.conf:\n+    if (!boost::filesystem::is_directory(GetDataDir(false))) {\n+        fMissingDatadir = true;\n+    } else {\n+        ReadConfigFile(mapArgs, mapMultiArgs);\n+    }\n+    // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n+    if (!SelectParamsFromCommandLine()) {\n+        fSelParFromCLFailed = true;\n+    }\n \n #if QT_VERSION < 0x050000\n     // Internal string conversion is all UTF-8\n@@ -130,64 +200,54 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n-    // Do this early as we don't want to bother initializing if we are just calling IPC\n-    // ... but do it after creating app, so QCoreApplication::arguments is initialized:\n-    if (PaymentServer::ipcSendCommandLine())\n-        exit(0);\n-    PaymentServer* paymentServer = new PaymentServer(&app);\n-\n-    // Install global event filter that makes sure that long tooltips can be word-wrapped\n-    app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n-\n-    // ... then bitcoin.conf:\n-    if (!boost::filesystem::is_directory(GetDataDir(false)))\n-    {\n-        // This message can not be translated, as translation is not initialized yet\n-        // (which not yet possible because lang=XX can be overridden in bitcoin.conf in the data directory)\n-        QMessageBox::critical(0, \"Bitcoin\",\n-                              QString(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n-        return 1;\n-    }\n-    ReadConfigFile(mapArgs, mapMultiArgs);\n-\n     // Application identification (must be set before OptionsModel is initialized,\n     // as it is used to locate QSettings)\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n-    if (GetBoolArg(\"-testnet\", false)) // Separate UI settings for testnet\n+    if (TestNet()) // Separate UI settings for testnet\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n \n-    // ... then GUI settings:\n-    OptionsModel optionsModel;\n+    // Now that QSettings are accessible, initialize translations\n+    QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n+    initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n \n-    // Get desired locale (e.g. \"de_DE\") from command line or use system locale\n-    QString lang_territory = QString::fromStdString(GetArg(\"-lang\", QLocale::system().name().toStdString()));\n-    QString lang = lang_territory;\n-    // Convert to \"de\" only by truncating \"_DE\"\n-    lang.truncate(lang_territory.lastIndexOf('_'));\n+    // Do this early as we don't want to bother initializing if we are just calling IPC\n+    // ... but do it after creating app and setting up translations, so errors are\n+    // translated properly.\n+    if (PaymentServer::ipcSendCommandLine(argc, argv))\n+        exit(0);\n \n-    QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n-    // Load language files for configured locale:\n-    // - First load the translator for the base language, without territory\n-    // - Then load the more specific locale translator\n+    // Now that translations are initialized check for errors and allow a translatable error message\n+    if (fMissingDatadir) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n+        return 1;\n+    }\n+    else if (fSelParFromCLFailed) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n+        return 1;\n+    }\n \n-    // Load e.g. qt_de.qm\n-    if (qtTranslatorBase.load(\"qt_\" + lang, QLibraryInfo::location(QLibraryInfo::TranslationsPath)))\n-        app.installTranslator(&qtTranslatorBase);\n+    // Start up the payment server early, too, so impatient users that click on\n+    // bitcoin: links repeatedly have their payment requests routed to this process:\n+    PaymentServer* paymentServer = new PaymentServer(&app);\n \n-    // Load e.g. qt_de_DE.qm\n-    if (qtTranslator.load(\"qt_\" + lang_territory, QLibraryInfo::location(QLibraryInfo::TranslationsPath)))\n-        app.installTranslator(&qtTranslator);\n+    // User language is set up: pick a data directory\n+    Intro::pickDataDirectory(TestNet());\n \n-    // Load e.g. bitcoin_de.qm (shortcut \"de\" needs to be defined in bitcoin.qrc)\n-    if (translatorBase.load(lang, \":/translations/\"))\n-        app.installTranslator(&translatorBase);\n+    // Install global event filter that makes sure that long tooltips can be word-wrapped\n+    app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n+    // Install qDebug() message handler to route to debug.log\n+#if QT_VERSION < 0x050000\n+    qInstallMsgHandler(DebugMessageHandler);\n+#else\n+    qInstallMessageHandler(DebugMessageHandler);\n+#endif\n \n-    // Load e.g. bitcoin_de_DE.qm (shortcut \"de_DE\" needs to be defined in bitcoin.qrc)\n-    if (translator.load(lang_territory, \":/translations/\"))\n-        app.installTranslator(&translator);\n+    // ... now GUI settings:\n+    OptionsModel optionsModel;\n \n     // Subscribe to global signals from core\n     uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n@@ -226,7 +286,7 @@ int main(int argc, char *argv[])\n \n         boost::thread_group threadGroup;\n \n-        BitcoinGUI window(GetBoolArg(\"-testnet\", false), 0);\n+        BitcoinGUI window(TestNet(), 0);\n         guiref = &window;\n \n         QTimer* pollShutdownTimer = new QTimer(guiref);\n@@ -241,6 +301,10 @@ int main(int argc, char *argv[])\n \n                 optionsModel.Upgrade(); // Must be done after AppInit2\n \n+                PaymentServer::LoadRootCAs();\n+                paymentServer->setOptionsModel(&optionsModel);\n+                paymentServer->initNetManager();\n+\n                 if (splashref)\n                     splash.finish(&window);\n \n@@ -262,8 +326,15 @@ int main(int argc, char *argv[])\n                 }\n \n                 // Now that initialization/startup is done, process any command-line\n-                // bitcoin: URIs\n-                QObject::connect(paymentServer, SIGNAL(receivedURI(QString)), &window, SLOT(handleURI(QString)));\n+                // bitcoin: URIs or payment requests:\n+                QObject::connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n+                                 &window, SLOT(handlePaymentRequest(SendCoinsRecipient)));\n+                QObject::connect(&walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n+                                 paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n+                QObject::connect(paymentServer, SIGNAL(receivedPaymentACK(QString)),\n+                                 &window, SLOT(showPaymentACK(QString)));\n+                QObject::connect(paymentServer, SIGNAL(reportError(QString, QString, unsigned int)),\n+                                 guiref, SLOT(message(QString, QString, unsigned int)));\n                 QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n \n                 app.exec();"
      },
      {
        "sha": "3fac7dd0e34aea014e67db31bc8acbf51702d9e2",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -50,19 +50,21 @@\n         <file alias=\"update_spinner\">res/movies/update_spinner.mng</file>\n     </qresource>\n     <qresource prefix=\"/translations\">\n+        <file alias=\"ach\">locale/bitcoin_ach.qm</file>\n         <file alias=\"af_ZA\">locale/bitcoin_af_ZA.qm</file>\n         <file alias=\"ar\">locale/bitcoin_ar.qm</file>\n+        <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n         <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n-        <file alias=\"bs\">locale/bitcoin_bs.ts</file>\n-        <file alias=\"ca\">locale/bitcoin_ca.ts</file>\n+        <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n+        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n         <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n         <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n-        <file alias=\"cy\">locale/bitcoin_cy.ts</file>\n+        <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n         <file alias=\"da\">locale/bitcoin_da.qm</file>\n         <file alias=\"de\">locale/bitcoin_de.qm</file>\n         <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n         <file alias=\"en\">locale/bitcoin_en.qm</file>\n-        <file alias=\"eo\">locale/bitcoin_eo.ts</file>\n+        <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n         <file alias=\"es\">locale/bitcoin_es.qm</file>\n         <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n         <file alias=\"et\">locale/bitcoin_et.qm</file>\n@@ -72,16 +74,20 @@\n         <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n         <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n         <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n-        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.ts</file>\n+        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n         <file alias=\"he\">locale/bitcoin_he.qm</file>\n-        <file alias=\"hi_IN\">locale/bitcoin_hi_IN.ts</file>\n+        <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n         <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n         <file alias=\"hu\">locale/bitcoin_hu.qm</file>\n+        <file alias=\"id_ID\">locale/bitcoin_id_ID.qm</file>\n         <file alias=\"it\">locale/bitcoin_it.qm</file>\n-        <file alias=\"ja\">locale/bitcoin_ja.ts</file>\n-        <file alias=\"la\">locale/bitcoin_la.ts</file>\n+        <file alias=\"ja\">locale/bitcoin_ja.qm</file>\n+        <file alias=\"kk_KZ\">locale/bitcoin_kk_KZ.qm</file>\n+        <file alias=\"ko_KR\">locale/bitcoin_ko_KR.qm</file>\n+        <file alias=\"la\">locale/bitcoin_la.qm</file>\n         <file alias=\"lt\">locale/bitcoin_lt.qm</file>\n-        <file alias=\"lv_LV\">locale/bitcoin_lv_LV.ts</file>\n+        <file alias=\"lv_LV\">locale/bitcoin_lv_LV.qm</file>\n+        <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n         <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n         <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n         <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n@@ -90,11 +96,14 @@\n         <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n         <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n         <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n+        <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n         <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n         <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n-        <file alias=\"th_TH\">locale/bitcoin_th_TH.ts</file>\n+        <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n         <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n         <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n+        <file alias=\"vi\">locale/bitcoin_vi.qm</file>\n+        <file alias=\"vi_VN\">locale/bitcoin_vi_VN.qm</file>\n         <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n         <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n     </qresource>"
      },
      {
        "sha": "b7f4dfee96a98de266197533613d89431df69bc4",
        "filename": "src/qt/bitcoinaddressvalidator.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinaddressvalidator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinaddressvalidator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddressvalidator.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -3,8 +3,8 @@\n \n #include <QValidator>\n \n-/** Base48 entry widget validator.\n-   Corrects near-miss characters and refuses characters that are no part of base48.\n+/** Base58 entry widget validator.\n+   Corrects near-miss characters and refuses characters that are not part of base58.\n  */\n class BitcoinAddressValidator : public QValidator\n {"
      },
      {
        "sha": "d9d4e3b23da0fa644fdecb1f40aff2d29384766b",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -4,10 +4,11 @@\n #include \"bitcoinunits.h\"\n #include \"guiconstants.h\"\n \n+#include <QApplication>\n #include <QHBoxLayout>\n #include <QKeyEvent>\n #include <QDoubleSpinBox>\n-#include <QApplication>\n+\n #include <qmath.h> // for qPow()\n \n BitcoinAmountField::BitcoinAmountField(QWidget *parent):\n@@ -60,7 +61,9 @@ bool BitcoinAmountField::validate()\n     bool valid = true;\n     if (amount->value() == 0.0)\n         valid = false;\n-    if (valid && !BitcoinUnits::parse(currentUnit, text(), 0))\n+    else if (!BitcoinUnits::parse(currentUnit, text(), 0))\n+        valid = false;\n+    else if (amount->value() > BitcoinUnits::maxAmount(currentUnit))\n         valid = false;\n \n     setValid(valid);\n@@ -115,7 +118,7 @@ qint64 BitcoinAmountField::value(bool *valid_out) const\n {\n     qint64 val_out = 0;\n     bool valid = BitcoinUnits::parse(currentUnit, text(), &val_out);\n-    if(valid_out)\n+    if (valid_out)\n     {\n         *valid_out = valid;\n     }\n@@ -127,6 +130,11 @@ void BitcoinAmountField::setValue(qint64 value)\n     setText(BitcoinUnits::format(currentUnit, value));\n }\n \n+void BitcoinAmountField::setReadOnly(bool fReadeOnly)\n+{\n+    // TODO ...\n+}\n+\n void BitcoinAmountField::unitChanged(int idx)\n {\n     // Use description tooltip for current unit for the combobox\n@@ -145,12 +153,12 @@ void BitcoinAmountField::unitChanged(int idx)\n     amount->setDecimals(BitcoinUnits::decimals(currentUnit));\n     amount->setMaximum(qPow(10, BitcoinUnits::amountDigits(currentUnit)) - qPow(10, -amount->decimals()));\n \n-    if(currentUnit == BitcoinUnits::uBTC)\n+    if (currentUnit == BitcoinUnits::uBTC)\n         amount->setSingleStep(0.01);\n     else\n         amount->setSingleStep(0.001);\n \n-    if(valid)\n+    if (valid)\n     {\n         // If value was valid, re-place it in the widget with the new unit\n         setValue(currentValue);"
      },
      {
        "sha": "9c8be5a26a0dcc0055a6400a5ed336d40cb61c06",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -22,6 +22,9 @@ class BitcoinAmountField: public QWidget\n     qint64 value(bool *valid=0) const;\n     void setValue(qint64 value);\n \n+    /** Make read-only **/\n+    void setReadOnly(bool fReadOnly);\n+\n     /** Mark current value as invalid in UI. */\n     void setValid(bool valid);\n     /** Perform input validation, mark field as invalid if entered value is not valid. */"
      },
      {
        "sha": "66b0d6ace0bf436cb9c99bc51a25d8bfba1b38f4",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 49,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -5,8 +5,6 @@\n  * The Bitcoin Developers 2011-2012\n  */\n \n-#include <QApplication>\n-\n #include \"bitcoingui.h\"\n \n #include \"transactiontablemodel.h\"\n@@ -30,6 +28,7 @@\n #include \"macdockiconhandler.h\"\n #endif\n \n+#include <QApplication>\n #include <QMenuBar>\n #include <QMenu>\n #include <QIcon>\n@@ -46,11 +45,10 @@\n #include <QDragEnterEvent>\n #if QT_VERSION < 0x050000\n #include <QUrl>\n+#include <QTextDocument>\n #endif\n #include <QMimeData>\n #include <QStyle>\n-#include <QSettings>\n-#include <QDesktopWidget>\n #include <QListWidget>\n \n #include <iostream>\n@@ -68,7 +66,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     rpcConsole(0),\n     prevBlocks(0)\n {\n-    restoreWindowGeometry();\n+    GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n #ifndef Q_OS_MAC\n     if (!fIsTestnet)\n@@ -159,14 +157,16 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     rpcConsole = new RPCConsole(this);\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n+    // prevents an oben debug window from becoming stuck/unusable on client shutdown\n+    connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n     // Install event filter to be able to catch status tip events (QEvent::StatusTip)\n     this->installEventFilter(this);\n }\n \n BitcoinGUI::~BitcoinGUI()\n {\n-    saveWindowGeometry();\n+    GUIUtil::saveWindowGeometry(\"nWindow\", this);\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n #ifdef Q_OS_MAC\n@@ -425,28 +425,6 @@ void BitcoinGUI::trayIconActivated(QSystemTrayIcon::ActivationReason reason)\n }\n #endif\n \n-void BitcoinGUI::saveWindowGeometry()\n-{\n-    QSettings settings;\n-    settings.setValue(\"nWindowPos\", pos());\n-    settings.setValue(\"nWindowSize\", size());\n-}\n-\n-void BitcoinGUI::restoreWindowGeometry()\n-{\n-    QSettings settings;\n-    QPoint pos = settings.value(\"nWindowPos\").toPoint();\n-    QSize size = settings.value(\"nWindowSize\", QSize(850, 550)).toSize();\n-    if (!pos.x() && !pos.y())\n-    {\n-        QRect screen = QApplication::desktop()->screenGeometry();\n-        pos.setX((screen.width()-size.width())/2);\n-        pos.setY((screen.height()-size.height())/2);\n-    }\n-    resize(size);\n-    move(pos);\n-}\n-\n void BitcoinGUI::optionsClicked()\n {\n     if(!clientModel || !clientModel->getOptionsModel())\n@@ -614,21 +592,28 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n     int nMBoxIcon = QMessageBox::Information;\n     int nNotifyIcon = Notificator::Information;\n \n-    // Override title based on style\n     QString msgType;\n-    switch (style) {\n-    case CClientUIInterface::MSG_ERROR:\n-        msgType = tr(\"Error\");\n-        break;\n-    case CClientUIInterface::MSG_WARNING:\n-        msgType = tr(\"Warning\");\n-        break;\n-    case CClientUIInterface::MSG_INFORMATION:\n-        msgType = tr(\"Information\");\n-        break;\n-    default:\n-        msgType = title; // Use supplied title\n+\n+    // Prefer supplied title over style based title\n+    if (!title.isEmpty()) {\n+        msgType = title;\n     }\n+    else {\n+        switch (style) {\n+        case CClientUIInterface::MSG_ERROR:\n+            msgType = tr(\"Error\");\n+            break;\n+        case CClientUIInterface::MSG_WARNING:\n+            msgType = tr(\"Warning\");\n+            break;\n+        case CClientUIInterface::MSG_INFORMATION:\n+            msgType = tr(\"Information\");\n+            break;\n+        default:\n+            break;\n+        }\n+    }\n+    // Append title to \"Bitcoin - \"\n     if (!msgType.isEmpty())\n         strTitle += \" - \" + msgType;\n \n@@ -649,7 +634,7 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n         if (!(buttons = (QMessageBox::StandardButton)(style & CClientUIInterface::BTN_MASK)))\n             buttons = QMessageBox::Ok;\n \n-        QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons);\n+        QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons, this);\n         int r = mBox.exec();\n         if (ret != NULL)\n             *ret = r == QMessageBox::Ok;\n@@ -694,9 +679,12 @@ void BitcoinGUI::closeEvent(QCloseEvent *event)\n \n void BitcoinGUI::askFee(qint64 nFeeRequired, bool *payFee)\n {\n+    if (!clientModel || !clientModel->getOptionsModel())\n+        return;\n+\n     QString strMessage = tr(\"This transaction is over the size limit. You can still send it for a fee of %1, \"\n         \"which goes to the nodes that process your transaction and helps to support the network. \"\n-        \"Do you want to pay the fee?\").arg(BitcoinUnits::formatWithUnit(BitcoinUnits::BTC, nFeeRequired));\n+        \"Do you want to pay the fee?\").arg(BitcoinUnits::formatWithUnit(clientModel->getOptionsModel()->getDisplayUnit(), nFeeRequired));\n     QMessageBox::StandardButton retval = QMessageBox::question(\n           this, tr(\"Confirm transaction fee\"), strMessage,\n           QMessageBox::Yes|QMessageBox::Cancel, QMessageBox::Yes);\n@@ -732,7 +720,8 @@ void BitcoinGUI::dropEvent(QDropEvent *event)\n         QList<QUrl> uris = event->mimeData()->urls();\n         foreach(const QUrl &uri, uris)\n         {\n-            if (walletFrame->handleURI(uri.toString()))\n+            SendCoinsRecipient r;\n+            if (GUIUtil::parseBitcoinURI(uri, &r) && walletFrame->handlePaymentRequest(r))\n                 nValidUrisFound++;\n         }\n \n@@ -759,12 +748,14 @@ bool BitcoinGUI::eventFilter(QObject *object, QEvent *event)\n     return QMainWindow::eventFilter(object, event);\n }\n \n-void BitcoinGUI::handleURI(QString strURI)\n+void BitcoinGUI::handlePaymentRequest(const SendCoinsRecipient& recipient)\n+{\n+    walletFrame->handlePaymentRequest(recipient);\n+}\n+\n+void BitcoinGUI::showPaymentACK(const QString& msg)\n {\n-    // URI has to be valid\n-    if (!walletFrame->handleURI(strURI))\n-        message(tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n-                  CClientUIInterface::ICON_WARNING);\n+    message(tr(\"Payment acknowledged\"), GUIUtil::HtmlEscape(msg), CClientUIInterface::MODAL);\n }\n \n void BitcoinGUI::setEncryptionStatus(int status)"
      },
      {
        "sha": "e2dd5dc6bc7fc62f5a90033234d96ce01bda4209",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -15,6 +15,7 @@ class TransactionView;\n class OverviewPage;\n class AddressBookPage;\n class SendCoinsDialog;\n+class SendCoinsRecipient;\n class SignVerifyMessageDialog;\n class Notificator;\n class RPCConsole;\n@@ -122,10 +123,6 @@ class BitcoinGUI : public QMainWindow\n     void createTrayIcon(bool fIsTestnet);\n     /** Create system tray menu (or setup the dock menu) */\n     void createTrayIconMenu();\n-    /** Save window size and position */\n-    void saveWindowGeometry();\n-    /** Restore window size and position */\n-    void restoreWindowGeometry();\n \n public slots:\n     /** Set number of connections shown in the UI */\n@@ -155,7 +152,9 @@ public slots:\n       @param[out] payFee            true to pay the fee, false to not pay the fee\n     */\n     void askFee(qint64 nFeeRequired, bool *payFee);\n-    void handleURI(QString strURI);\n+\n+    void handlePaymentRequest(const SendCoinsRecipient& recipient);\n+    void showPaymentACK(const QString& msg);\n \n     /** Show incoming transaction notification for new transactions. */\n     void incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address);"
      },
      {
        "sha": "bfe9494b1786a8231226b5c58bf5e2ece960f293",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 6,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -33,15 +33,19 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot obtain a lock on data directory %s. Bitcoin is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Enter regression test mode, which uses a special chain in which blocks can \"\n+\"be solved instantly. This is intended for regression testing tools and app \"\n+\"development.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: The transaction was rejected! This might happen if some of the coins \"\n \"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n \"and coins were spent in the copy but not marked as spent here.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: This transaction requires a transaction fee of at least %s because of \"\n \"its amount, complexity, or use of recently received funds!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Execute command when a relevant alert is received (%s in cmd is replaced by \"\n-\"message)\"),\n+\"Execute command when a relevant alert is received or we see a really long \"\n+\"fork (%s in cmd is replaced by message)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when a wallet transaction changes (%s in cmd is replaced by \"\n \"TxID)\"),\n@@ -68,12 +72,15 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: -paytxfee is set very high! This is the transaction fee you will \"\n \"pay if you send a transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: Displayed transactions may not be correct! You may need to upgrade, \"\n-\"or other nodes may need to upgrade.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: Please check that your computer's date and time are correct! If \"\n \"your clock is wrong Bitcoin will not work properly.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Warning: The network does not appear to fully agree! Some miners appear to \"\n+\"be experiencing issues.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Warning: We do not appear to fully agree with our peers! You may need to \"\n+\"upgrade, or other nodes may need to upgrade.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: error reading wallet.dat! All keys read correctly, but transaction \"\n \"data or address book entries might be missing or incorrect.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -133,6 +140,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 288, 0 = all)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How thorough the block verification is (0-4, default: 3)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Insufficient funds\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address: '%s'\"),\n@@ -181,6 +189,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: bitcoin.\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify connection timeout in milliseconds (default: 5000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify data directory\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: bitcoind.pid)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify wallet file (within data directory)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"System error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n@@ -202,9 +211,10 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade required!\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the databases using -reindex to change -txindex\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };\n\\ No newline at end of file"
      },
      {
        "sha": "ae9791123d6ad55895ee059914aadbcc0ff49703",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -63,6 +63,17 @@ qint64 BitcoinUnits::factor(int unit)\n     }\n }\n \n+qint64 BitcoinUnits::maxAmount(int unit)\n+{\n+    switch(unit)\n+    {\n+    case BTC:  return Q_INT64_C(21000000);\n+    case mBTC: return Q_INT64_C(21000000000);\n+    case uBTC: return Q_INT64_C(21000000000000);\n+    default:   return 0;\n+    }\n+}\n+\n int BitcoinUnits::amountDigits(int unit)\n {\n     switch(unit)"
      },
      {
        "sha": "f6fdf6c7be60950972f725b1546f2b6d462e5614",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -38,6 +38,8 @@ class BitcoinUnits: public QAbstractListModel\n     static QString description(int unit);\n     //! Number of Satoshis (1e-8) per unit\n     static qint64 factor(int unit);\n+    //! Max amount per unit\n+    static qint64 maxAmount(int unit);\n     //! Number of amount digits (to represent max number of coins)\n     static int amountDigits(int unit);\n     //! Number of decimals left"
      },
      {
        "sha": "b33f534f7c19b63e0f86f2d778ad0ff4905c05d7",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -5,13 +5,15 @@\n #include \"addresstablemodel.h\"\n #include \"transactiontablemodel.h\"\n \n+#include \"chainparams.h\"\n #include \"alert.h\"\n #include \"main.h\"\n #include \"checkpoints.h\"\n #include \"ui_interface.h\"\n \n #include <QDateTime>\n #include <QTimer>\n+#include <QDebug>\n \n static const int64 nClientStartupTime = GetTime();\n \n@@ -22,9 +24,8 @@ ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     numBlocksAtStartup(-1), pollTimer(0)\n {\n     pollTimer = new QTimer(this);\n-    pollTimer->setInterval(MODEL_UPDATE_DELAY);\n-    pollTimer->start();\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n+    pollTimer->start(MODEL_UPDATE_DELAY);\n \n     subscribeToCoreSignals();\n }\n@@ -110,7 +111,7 @@ void ClientModel::updateAlert(const QString &hash, int status)\n \n bool ClientModel::isTestNet() const\n {\n-    return fTestNet;\n+    return TestNet();\n }\n \n bool ClientModel::inInitialBlockDownload() const\n@@ -179,14 +180,14 @@ static void NotifyBlocksChanged(ClientModel *clientmodel)\n \n static void NotifyNumConnectionsChanged(ClientModel *clientmodel, int newNumConnections)\n {\n-    // Too noisy: OutputDebugStringF(\"NotifyNumConnectionsChanged %i\\n\", newNumConnections);\n+    // Too noisy: qDebug() << \"NotifyNumConnectionsChanged : \" + QString::number(newNumConnections);\n     QMetaObject::invokeMethod(clientmodel, \"updateNumConnections\", Qt::QueuedConnection,\n                               Q_ARG(int, newNumConnections));\n }\n \n static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, ChangeType status)\n {\n-    OutputDebugStringF(\"NotifyAlertChanged %s status=%i\\n\", hash.GetHex().c_str(), status);\n+    qDebug() << \"NotifyAlertChanged : \" + QString::fromStdString(hash.GetHex()) + \" status=\" + QString::number(status);\n     QMetaObject::invokeMethod(clientmodel, \"updateAlert\", Qt::QueuedConnection,\n                               Q_ARG(QString, QString::fromStdString(hash.GetHex())),\n                               Q_ARG(int, status));"
      },
      {
        "sha": "15074300b46c7bf3f3da6aac94fdda44632ba27f",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -60,8 +60,8 @@ class ClientModel : public QObject\n \n     int cachedNumBlocks;\n     int cachedNumBlocksOfPeers;\n-\tbool cachedReindexing;\n-\tbool cachedImporting;\n+    bool cachedReindexing;\n+    bool cachedImporting;\n \n     int numBlocksAtStartup;\n "
      },
      {
        "sha": "ad8e0d618aed8717d9d1756217be876db36223b7",
        "filename": "src/qt/csvmodelwriter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/csvmodelwriter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/csvmodelwriter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -85,4 +85,3 @@ bool CSVModelWriter::write()\n \n     return file.error() == QFile::NoError;\n }\n-"
      },
      {
        "sha": "0f6ae5a7d0100f4b802e9c6ee9ab14323d57fcda",
        "filename": "src/qt/forms/intro.ui",
        "status": "added",
        "additions": 266,
        "deletions": 0,
        "changes": 266,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,266 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>Intro</class>\n+ <widget class=\"QDialog\" name=\"Intro\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>674</width>\n+    <height>363</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Welcome</string>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <item>\n+    <widget class=\"QLabel\" name=\"label_2\">\n+     <property name=\"styleSheet\">\n+      <string notr=\"true\">QLabel { font-style:italic; }</string>\n+     </property>\n+     <property name=\"text\">\n+      <string>Welcome to Bitcoin-Qt.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <spacer name=\"verticalSpacer_4\">\n+     <property name=\"orientation\">\n+      <enum>Qt::Vertical</enum>\n+     </property>\n+     <property name=\"sizeType\">\n+      <enum>QSizePolicy::Minimum</enum>\n+     </property>\n+     <property name=\"sizeHint\" stdset=\"0\">\n+      <size>\n+       <width>20</width>\n+       <height>15</height>\n+      </size>\n+     </property>\n+    </spacer>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"label_4\">\n+     <property name=\"text\">\n+      <string>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n+     <property name=\"text\">\n+      <string>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QRadioButton\" name=\"dataDirDefault\">\n+     <property name=\"text\">\n+      <string>Use the default data directory</string>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QRadioButton\" name=\"dataDirCustom\">\n+     <property name=\"text\">\n+      <string>Use a custom data directory:</string>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+     <property name=\"spacing\">\n+      <number>0</number>\n+     </property>\n+     <property name=\"sizeConstraint\">\n+      <enum>QLayout::SetDefaultConstraint</enum>\n+     </property>\n+     <item>\n+      <spacer name=\"horizontalSpacer\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeType\">\n+        <enum>QSizePolicy::Fixed</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>60</width>\n+         <height>20</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+       <property name=\"sizeConstraint\">\n+        <enum>QLayout::SetDefaultConstraint</enum>\n+       </property>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"dataDirectory\"/>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"ellipsisButton\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Minimum\" vsizetype=\"Fixed\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>30</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"text\">\n+            <string notr=\"true\">\u2026</string>\n+           </property>\n+           <property name=\"autoDefault\">\n+            <bool>false</bool>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_3\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeType\">\n+          <enum>QSizePolicy::Fixed</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>5</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+       <item>\n+        <widget class=\"QLabel\" name=\"freeSpace\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+           <horstretch>1</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"text\">\n+          <string/>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_2\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeType\">\n+          <enum>QSizePolicy::Fixed</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>5</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+       <item>\n+        <widget class=\"QLabel\" name=\"errorMessage\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::RichText</enum>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n+     </item>\n+    </layout>\n+   </item>\n+   <item>\n+    <spacer name=\"verticalSpacer\">\n+     <property name=\"orientation\">\n+      <enum>Qt::Vertical</enum>\n+     </property>\n+     <property name=\"sizeHint\" stdset=\"0\">\n+      <size>\n+       <width>20</width>\n+       <height>40</height>\n+      </size>\n+     </property>\n+    </spacer>\n+   </item>\n+   <item>\n+    <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n+     <property name=\"orientation\">\n+      <enum>Qt::Horizontal</enum>\n+     </property>\n+     <property name=\"standardButtons\">\n+      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>\n+     </property>\n+    </widget>\n+   </item>\n+  </layout>\n+ </widget>\n+ <resources/>\n+ <connections>\n+  <connection>\n+   <sender>buttonBox</sender>\n+   <signal>accepted()</signal>\n+   <receiver>Intro</receiver>\n+   <slot>accept()</slot>\n+   <hints>\n+    <hint type=\"sourcelabel\">\n+     <x>248</x>\n+     <y>254</y>\n+    </hint>\n+    <hint type=\"destinationlabel\">\n+     <x>157</x>\n+     <y>274</y>\n+    </hint>\n+   </hints>\n+  </connection>\n+  <connection>\n+   <sender>buttonBox</sender>\n+   <signal>rejected()</signal>\n+   <receiver>Intro</receiver>\n+   <slot>reject()</slot>\n+   <hints>\n+    <hint type=\"sourcelabel\">\n+     <x>316</x>\n+     <y>260</y>\n+    </hint>\n+    <hint type=\"destinationlabel\">\n+     <x>286</x>\n+     <y>274</y>\n+    </hint>\n+   </hints>\n+  </connection>\n+ </connections>\n+</ui>"
      },
      {
        "sha": "1e4335c6458a531314567b227b26847e343b2400",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -461,7 +461,7 @@\n  <customwidgets>\n   <customwidget>\n    <class>BitcoinAmountField</class>\n-   <extends>QSpinBox</extends>\n+   <extends>QLineEdit</extends>\n    <header>bitcoinamountfield.h</header>\n   </customwidget>\n   <customwidget>"
      },
      {
        "sha": "1cec9066f88a3ddf5ac9f7cf56eee48f1c30c012",
        "filename": "src/qt/forms/qrcodedialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/qrcodedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/qrcodedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/qrcodedialog.ui?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -186,7 +186,7 @@\n  <customwidgets>\n   <customwidget>\n    <class>BitcoinAmountField</class>\n-   <extends>QSpinBox</extends>\n+   <extends>QLineEdit</extends>\n    <header>bitcoinamountfield.h</header>\n   </customwidget>\n  </customwidgets>"
      },
      {
        "sha": "2a00fc54555b20e83d7ad531c9125e12787be300",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -28,7 +28,7 @@\n         <height>165</height>\n        </rect>\n       </property>\n-      <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\" stretch=\"0,1\">\n        <property name=\"margin\">\n         <number>0</number>\n        </property>"
      },
      {
        "sha": "2c1cec600cf6aaa698d5478d0c58dbc366baf182",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 663,
        "deletions": 127,
        "changes": 790,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,143 +1,679 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <ui version=\"4.0\">\n  <class>SendCoinsEntry</class>\n- <widget class=\"QFrame\" name=\"SendCoinsEntry\">\n+ <widget class=\"QStackedWidget\" name=\"SendCoinsEntry\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>\n     <y>0</y>\n     <width>729</width>\n-    <height>136</height>\n+    <height>150</height>\n    </rect>\n   </property>\n-  <property name=\"windowTitle\">\n-   <string>Form</string>\n+  <property name=\"autoFillBackground\">\n+   <bool>false</bool>\n   </property>\n-  <property name=\"frameShape\">\n-   <enum>QFrame::StyledPanel</enum>\n+  <property name=\"currentIndex\">\n+   <number>0</number>\n   </property>\n-  <property name=\"frameShadow\">\n-   <enum>QFrame::Sunken</enum>\n-  </property>\n-  <layout class=\"QGridLayout\" name=\"gridLayout\">\n-   <property name=\"spacing\">\n-    <number>12</number>\n+  <widget class=\"QFrame\" name=\"SendCoinsInsecure\">\n+   <property name=\"frameShape\">\n+    <enum>QFrame::StyledPanel</enum>\n+   </property>\n+   <property name=\"frameShadow\">\n+    <enum>QFrame::Sunken</enum>\n+   </property>\n+   <layout class=\"QGridLayout\" name=\"gridLayout\">\n+    <property name=\"spacing\">\n+     <number>12</number>\n+    </property>\n+    <item row=\"5\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"amountLabel\">\n+      <property name=\"text\">\n+       <string>A&amp;mount:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>payAmount</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"3\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"payToLabel\">\n+      <property name=\"text\">\n+       <string>Pay &amp;To:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>payTo</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"5\" column=\"1\">\n+     <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n+    </item>\n+    <item row=\"4\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"labellLabel\">\n+      <property name=\"text\">\n+       <string>&amp;Label:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>addAsLabel</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"3\" column=\"1\">\n+     <layout class=\"QHBoxLayout\" name=\"payToLayout\">\n+      <property name=\"spacing\">\n+       <number>0</number>\n+      </property>\n+      <item>\n+       <widget class=\"QValidatedLineEdit\" name=\"payTo\">\n+        <property name=\"toolTip\">\n+         <string>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</string>\n+        </property>\n+        <property name=\"maxLength\">\n+         <number>34</number>\n+        </property>\n+       </widget>\n+      </item>\n+      <item>\n+       <widget class=\"QToolButton\" name=\"addressBookButton\">\n+        <property name=\"toolTip\">\n+         <string>Choose address from address book</string>\n+        </property>\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"icon\">\n+         <iconset resource=\"../bitcoin.qrc\">\n+          <normaloff>:/icons/address-book</normaloff>:/icons/address-book</iconset>\n+        </property>\n+        <property name=\"shortcut\">\n+         <string>Alt+A</string>\n+        </property>\n+       </widget>\n+      </item>\n+      <item>\n+       <widget class=\"QToolButton\" name=\"pasteButton\">\n+        <property name=\"toolTip\">\n+         <string>Paste address from clipboard</string>\n+        </property>\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"icon\">\n+         <iconset resource=\"../bitcoin.qrc\">\n+          <normaloff>:/icons/editpaste</normaloff>:/icons/editpaste</iconset>\n+        </property>\n+        <property name=\"shortcut\">\n+         <string>Alt+P</string>\n+        </property>\n+       </widget>\n+      </item>\n+      <item>\n+       <widget class=\"QToolButton\" name=\"deleteButton\">\n+        <property name=\"toolTip\">\n+         <string>Remove this recipient</string>\n+        </property>\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"icon\">\n+         <iconset resource=\"../bitcoin.qrc\">\n+          <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n+    </item>\n+    <item row=\"4\" column=\"1\">\n+     <widget class=\"QValidatedLineEdit\" name=\"addAsLabel\">\n+      <property name=\"toolTip\">\n+       <string>Enter a label for this address to add it to your address book</string>\n+      </property>\n+     </widget>\n+    </item>\n+   </layout>\n+  </widget>\n+  <widget class=\"QFrame\" name=\"SendCoinsSecure\">\n+   <property name=\"palette\">\n+    <palette>\n+     <active>\n+      <colorrole role=\"WindowText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Button\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Light\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>230</red>\n+         <green>255</green>\n+         <blue>224</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Midlight\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>185</red>\n+         <green>243</green>\n+         <blue>171</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Dark\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>70</red>\n+         <green>116</green>\n+         <blue>59</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Mid\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>93</red>\n+         <green>155</green>\n+         <blue>79</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Text\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"BrightText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>155</red>\n+         <green>255</green>\n+         <blue>147</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ButtonText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Base\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>119</red>\n+         <green>255</green>\n+         <blue>233</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Window\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Shadow\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"AlternateBase\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>197</red>\n+         <green>243</green>\n+         <blue>187</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"NoRole\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>125</red>\n+         <green>194</green>\n+         <blue>122</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ToolTipBase\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>255</red>\n+         <green>255</green>\n+         <blue>220</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ToolTipText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+     </active>\n+     <inactive>\n+      <colorrole role=\"WindowText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Button\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Light\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>230</red>\n+         <green>255</green>\n+         <blue>224</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Midlight\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>185</red>\n+         <green>243</green>\n+         <blue>171</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Dark\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>70</red>\n+         <green>116</green>\n+         <blue>59</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Mid\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>93</red>\n+         <green>155</green>\n+         <blue>79</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Text\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"BrightText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>155</red>\n+         <green>255</green>\n+         <blue>147</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ButtonText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Base\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>119</red>\n+         <green>255</green>\n+         <blue>233</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Window\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Shadow\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"AlternateBase\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>197</red>\n+         <green>243</green>\n+         <blue>187</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"NoRole\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>125</red>\n+         <green>194</green>\n+         <blue>122</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ToolTipBase\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>255</red>\n+         <green>255</green>\n+         <blue>220</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ToolTipText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+     </inactive>\n+     <disabled>\n+      <colorrole role=\"WindowText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>70</red>\n+         <green>116</green>\n+         <blue>59</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Button\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Light\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>230</red>\n+         <green>255</green>\n+         <blue>224</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Midlight\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>185</red>\n+         <green>243</green>\n+         <blue>171</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Dark\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>70</red>\n+         <green>116</green>\n+         <blue>59</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Mid\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>93</red>\n+         <green>155</green>\n+         <blue>79</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Text\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>70</red>\n+         <green>116</green>\n+         <blue>59</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"BrightText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>155</red>\n+         <green>255</green>\n+         <blue>147</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ButtonText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>70</red>\n+         <green>116</green>\n+         <blue>59</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Base\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Window\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"Shadow\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"AlternateBase\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>140</red>\n+         <green>232</green>\n+         <blue>119</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"NoRole\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>125</red>\n+         <green>194</green>\n+         <blue>122</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ToolTipBase\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>255</red>\n+         <green>255</green>\n+         <blue>220</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+      <colorrole role=\"ToolTipText\">\n+       <brush brushstyle=\"SolidPattern\">\n+        <color alpha=\"255\">\n+         <red>0</red>\n+         <green>0</green>\n+         <blue>0</blue>\n+        </color>\n+       </brush>\n+      </colorrole>\n+     </disabled>\n+    </palette>\n+   </property>\n+   <property name=\"autoFillBackground\">\n+    <bool>true</bool>\n+   </property>\n+   <property name=\"frameShape\">\n+    <enum>QFrame::StyledPanel</enum>\n+   </property>\n+   <property name=\"frameShadow\">\n+    <enum>QFrame::Sunken</enum>\n    </property>\n-   <item row=\"5\" column=\"0\">\n-    <widget class=\"QLabel\" name=\"label\">\n-     <property name=\"text\">\n-      <string>A&amp;mount:</string>\n-     </property>\n-     <property name=\"alignment\">\n-      <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-     </property>\n-     <property name=\"buddy\">\n-      <cstring>payAmount</cstring>\n-     </property>\n-    </widget>\n-   </item>\n-   <item row=\"3\" column=\"0\">\n-    <widget class=\"QLabel\" name=\"label_2\">\n-     <property name=\"text\">\n-      <string>Pay &amp;To:</string>\n-     </property>\n-     <property name=\"alignment\">\n-      <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-     </property>\n-     <property name=\"buddy\">\n-      <cstring>payTo</cstring>\n-     </property>\n-    </widget>\n-   </item>\n-   <item row=\"5\" column=\"1\">\n-    <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n-   </item>\n-   <item row=\"4\" column=\"0\">\n-    <widget class=\"QLabel\" name=\"label_4\">\n-     <property name=\"text\">\n-      <string>&amp;Label:</string>\n-     </property>\n-     <property name=\"alignment\">\n-      <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-     </property>\n-     <property name=\"buddy\">\n-      <cstring>addAsLabel</cstring>\n-     </property>\n-    </widget>\n-   </item>\n-   <item row=\"3\" column=\"1\">\n-    <layout class=\"QHBoxLayout\" name=\"payToLayout\">\n-     <property name=\"spacing\">\n-      <number>0</number>\n-     </property>\n-     <item>\n-      <widget class=\"QValidatedLineEdit\" name=\"payTo\">\n-       <property name=\"toolTip\">\n-        <string>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</string>\n-       </property>\n-       <property name=\"maxLength\">\n-        <number>34</number>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QToolButton\" name=\"addressBookButton\">\n-       <property name=\"toolTip\">\n-        <string>Choose address from address book</string>\n-       </property>\n-       <property name=\"text\">\n-        <string/>\n-       </property>\n-       <property name=\"icon\">\n-        <iconset resource=\"../bitcoin.qrc\">\n-         <normaloff>:/icons/address-book</normaloff>:/icons/address-book</iconset>\n-       </property>\n-       <property name=\"shortcut\">\n-        <string>Alt+A</string>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QToolButton\" name=\"pasteButton\">\n-       <property name=\"toolTip\">\n-        <string>Paste address from clipboard</string>\n-       </property>\n-       <property name=\"text\">\n-        <string/>\n-       </property>\n-       <property name=\"icon\">\n-        <iconset resource=\"../bitcoin.qrc\">\n-         <normaloff>:/icons/editpaste</normaloff>:/icons/editpaste</iconset>\n-       </property>\n-       <property name=\"shortcut\">\n-        <string>Alt+P</string>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QToolButton\" name=\"deleteButton\">\n-       <property name=\"toolTip\">\n-        <string>Remove this recipient</string>\n-       </property>\n-       <property name=\"text\">\n-        <string/>\n-       </property>\n-       <property name=\"icon\">\n-        <iconset resource=\"../bitcoin.qrc\">\n-         <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n-       </property>\n-      </widget>\n-     </item>\n-    </layout>\n-   </item>\n-   <item row=\"4\" column=\"1\">\n-    <widget class=\"QValidatedLineEdit\" name=\"addAsLabel\">\n-     <property name=\"toolTip\">\n-      <string>Enter a label for this address to add it to your address book</string>\n-     </property>\n-    </widget>\n-   </item>\n-  </layout>\n+   <layout class=\"QGridLayout\" name=\"gridLayout_s\">\n+    <property name=\"spacing\">\n+     <number>12</number>\n+    </property>\n+    <item row=\"4\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"memoLabel_s\">\n+      <property name=\"text\">\n+       <string>Memo:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>addAsLabel</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"5\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"amountLabel_s\">\n+      <property name=\"text\">\n+       <string>A&amp;mount:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>payAmount</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"3\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"payToLabel_s\">\n+      <property name=\"text\">\n+       <string>Pay &amp;To:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>payTo_s</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"5\" column=\"2\">\n+     <widget class=\"BitcoinAmountField\" name=\"payAmount_s\">\n+      <property name=\"enabled\">\n+       <bool>false</bool>\n+      </property>\n+      <property name=\"acceptDrops\">\n+       <bool>false</bool>\n+      </property>\n+      <property name=\"readOnly\">\n+       <bool>true</bool>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"3\" column=\"2\">\n+     <layout class=\"QHBoxLayout\" name=\"payToLayout_s\">\n+      <property name=\"spacing\">\n+       <number>0</number>\n+      </property>\n+      <item>\n+       <widget class=\"QLabel\" name=\"payTo_s\">\n+        <property name=\"textFormat\">\n+         <enum>Qt::PlainText</enum>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n+    </item>\n+    <item row=\"4\" column=\"2\">\n+     <widget class=\"QLabel\" name=\"memoTextLabel_s\">\n+      <property name=\"textFormat\">\n+       <enum>Qt::PlainText</enum>\n+      </property>\n+     </widget>\n+    </item>\n+   </layout>\n+  </widget>\n  </widget>\n  <customwidgets>\n   <customwidget>"
      },
      {
        "sha": "2c72c01021999e97c10ab078673a0e38c982d3e9",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -28,6 +28,9 @@ static const int TOOLTIP_WRAP_THRESHOLD = 80;\n /* Maximum allowed URI length */\n static const int MAX_URI_LENGTH = 255;\n \n+/* Maximum somewhat-sane size of a payment request file */\n+static const int MAX_PAYMENT_REQUEST_SIZE = 50000; // bytes\n+\n /* QRCodeDialog -- size of exported QR Code image */\n #define EXPORT_IMAGE_SIZE 256\n "
      },
      {
        "sha": "c951b21b80c5676dbc0a556c8f70fe8e0ed92db0",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 3,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,5 +1,3 @@\n-#include <QApplication>\n-\n #include \"guiutil.h\"\n \n #include \"bitcoinaddressvalidator.h\"\n@@ -9,6 +7,7 @@\n #include \"util.h\"\n #include \"init.h\"\n \n+#include <QApplication>\n #include <QDateTime>\n #include <QDoubleValidator>\n #include <QFont>\n@@ -24,6 +23,8 @@\n #include <QFileDialog>\n #include <QDesktopServices>\n #include <QThread>\n+#include <QSettings>\n+#include <QDesktopWidget>\n \n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n@@ -147,6 +148,14 @@ bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)\n     return parseBitcoinURI(uriInstance, out);\n }\n \n+bool isDust(const QString& address, qint64 amount)\n+{\n+    CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n+    CScript script; script.SetDestination(dest);\n+    CTxOut txOut(amount, script);\n+    return txOut.IsDust(CTransaction::nMinRelayTxFee);\n+}\n+\n QString HtmlEscape(const QString& str, bool fMultiLine)\n {\n #if QT_VERSION < 0x050000\n@@ -487,6 +496,29 @@ bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n \n #endif\n \n+void saveWindowGeometry(const QString& strSetting, QWidget *parent)\n+{\n+    QSettings settings;\n+    settings.setValue(strSetting + \"Pos\", parent->pos());\n+    settings.setValue(strSetting + \"Size\", parent->size());\n+}\n+\n+void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize, QWidget *parent)\n+{\n+    QSettings settings;\n+    QPoint pos = settings.value(strSetting + \"Pos\").toPoint();\n+    QSize size = settings.value(strSetting + \"Size\", defaultSize).toSize();\n+\n+    if (!pos.x() && !pos.y()) {\n+        QRect screen = QApplication::desktop()->screenGeometry();\n+        pos.setX((screen.width() - size.width()) / 2);\n+        pos.setY((screen.height() - size.height()) / 2);\n+    }\n+\n+    parent->resize(size);\n+    parent->move(pos);\n+}\n+\n HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     QMessageBox(parent)\n {\n@@ -500,7 +532,8 @@ HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     uiOptions = tr(\"UI options\") + \":\\n\" +\n         \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n         \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n+        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\" +\n+        \"  -choosedatadir         \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\";\n \n     setWindowTitle(tr(\"Bitcoin-Qt\"));\n     setTextFormat(Qt::PlainText);"
      },
      {
        "sha": "8472700f48b4ab7a0dbe070278379efc5a8a235a",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -36,6 +36,9 @@ namespace GUIUtil\n     bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out);\n     bool parseBitcoinURI(QString uri, SendCoinsRecipient *out);\n \n+    // Returns true if given address+amount meets \"dust\" definition\n+    bool isDust(const QString& address, qint64 amount);\n+\n     // HTML escaping for rich text controls\n     QString HtmlEscape(const QString& str, bool fMultiLine=false);\n     QString HtmlEscape(const std::string& str, bool fMultiLine=false);\n@@ -96,6 +99,11 @@ namespace GUIUtil\n     bool GetStartOnSystemStartup();\n     bool SetStartOnSystemStartup(bool fAutoStart);\n \n+    /** Save window size and position */\n+    void saveWindowGeometry(const QString& strSetting, QWidget *parent);\n+    /** Restore window size and position */\n+    void restoreWindowGeometry(const QString& strSetting, const QSize &defaultSizeIn, QWidget *parent);\n+\n     /** Help message for Bitcoin-Qt, shown with --help. */\n     class HelpMessageBox : public QMessageBox\n     {"
      },
      {
        "sha": "4a02ff89e7ba91ac68e3fd64d813a735ee8d6d8d",
        "filename": "src/qt/intro.cpp",
        "status": "added",
        "additions": 283,
        "deletions": 0,
        "changes": 283,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,283 @@\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n+#include \"util.h\"\n+\n+#include <QFileDialog>\n+#include <QSettings>\n+#include <QMessageBox>\n+\n+#include <boost/filesystem.hpp>\n+\n+/* Minimum free space (in bytes) needed for data directory */\n+static const uint64 GB_BYTES = 1000000000LL;\n+static const uint64 BLOCK_CHAIN_SIZE = 10LL * GB_BYTES;\n+\n+/* Check free space asynchronously to prevent hanging the UI thread.\n+\n+   Up to one request to check a path is in flight to this thread; when the check()\n+   function runs, the current path is requested from the associated Intro object.\n+   The reply is sent back through a signal.\n+\n+   This ensures that no queue of checking requests is built up while the user is\n+   still entering the path, and that always the most recently entered path is checked as\n+   soon as the thread becomes available.\n+*/\n+class FreespaceChecker : public QObject\n+{\n+    Q_OBJECT\n+\n+public:\n+    FreespaceChecker(Intro *intro);\n+\n+    enum Status {\n+        ST_OK,\n+        ST_ERROR\n+    };\n+\n+public slots:\n+    void check();\n+\n+signals:\n+    void reply(int status, const QString &message, quint64 available);\n+\n+private:\n+    Intro *intro;\n+};\n+\n+#include \"intro.moc\"\n+\n+FreespaceChecker::FreespaceChecker(Intro *intro)\n+{\n+    this->intro = intro;\n+}\n+\n+void FreespaceChecker::check()\n+{\n+    namespace fs = boost::filesystem;\n+    QString dataDirStr = intro->getPathToCheck();\n+    fs::path dataDir = fs::path(dataDirStr.toStdString());\n+    uint64 freeBytesAvailable = 0;\n+    int replyStatus = ST_OK;\n+    QString replyMessage = tr(\"A new data directory will be created.\");\n+\n+    /* Find first parent that exists, so that fs::space does not fail */\n+    fs::path parentDir = dataDir;\n+    fs::path parentDirOld = fs::path();\n+    while(parentDir.has_parent_path() && !fs::exists(parentDir))\n+    {\n+        parentDir = parentDir.parent_path();\n+\n+        /* Check if we make any progress, break if not to prevent an infinite loop here */\n+        if (parentDirOld == parentDir)\n+            break;\n+\n+        parentDirOld = parentDir;\n+    }\n+\n+    try {\n+        freeBytesAvailable = fs::space(parentDir).available;\n+        if(fs::exists(dataDir))\n+        {\n+            if(fs::is_directory(dataDir))\n+            {\n+                QString separator = \"<code>\" + QDir::toNativeSeparators(\"/\") + tr(\"name\") + \"</code>\";\n+                replyStatus = ST_OK;\n+                replyMessage = tr(\"Directory already exists. Add %1 if you intend to create a new directory here.\").arg(separator);\n+            } else {\n+                replyStatus = ST_ERROR;\n+                replyMessage = tr(\"Path already exists, and is not a directory.\");\n+            }\n+        }\n+    } catch(fs::filesystem_error &e)\n+    {\n+        /* Parent directory does not exist or is not accessible */\n+        replyStatus = ST_ERROR;\n+        replyMessage = tr(\"Cannot create data directory here.\");\n+    }\n+    emit reply(replyStatus, replyMessage, freeBytesAvailable);\n+}\n+\n+\n+Intro::Intro(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::Intro),\n+    thread(0),\n+    signalled(false)\n+{\n+    ui->setupUi(this);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    startThread();\n+}\n+\n+Intro::~Intro()\n+{\n+    delete ui;\n+    /* Ensure thread is finished before it is deleted */\n+    emit stopThread();\n+    thread->wait();\n+}\n+\n+QString Intro::getDataDirectory()\n+{\n+    return ui->dataDirectory->text();\n+}\n+\n+void Intro::setDataDirectory(const QString &dataDir)\n+{\n+    ui->dataDirectory->setText(dataDir);\n+    if(dataDir == getDefaultDataDirectory())\n+    {\n+        ui->dataDirDefault->setChecked(true);\n+        ui->dataDirectory->setEnabled(false);\n+        ui->ellipsisButton->setEnabled(false);\n+    } else {\n+        ui->dataDirCustom->setChecked(true);\n+        ui->dataDirectory->setEnabled(true);\n+        ui->ellipsisButton->setEnabled(true);\n+    }\n+}\n+\n+QString Intro::getDefaultDataDirectory()\n+{\n+    return QString::fromStdString(GetDefaultDataDir().string());\n+}\n+\n+void Intro::pickDataDirectory(bool fIsTestnet)\n+{\n+    namespace fs = boost::filesystem;;\n+    QSettings settings;\n+    /* If data directory provided on command line, no need to look at settings\n+       or show a picking dialog */\n+    if(!GetArg(\"-datadir\", \"\").empty())\n+        return;\n+    /* 1) Default data directory for operating system */\n+    QString dataDir = getDefaultDataDirectory();\n+    /* 2) Allow QSettings to override default dir */\n+    dataDir = settings.value(\"strDataDir\", dataDir).toString();\n+\n+    if(!fs::exists(dataDir.toStdString()) || GetBoolArg(\"-choosedatadir\", false))\n+    {\n+        /* If current default data directory does not exist, let the user choose one */\n+        Intro intro;\n+        intro.setDataDirectory(dataDir);\n+        if (!fIsTestnet)\n+            intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n+        else\n+            intro.setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n+\n+        while(true)\n+        {\n+            if(!intro.exec())\n+            {\n+                /* Cancel clicked */\n+                exit(0);\n+            }\n+            dataDir = intro.getDataDirectory();\n+            try {\n+                fs::create_directory(dataDir.toStdString());\n+                break;\n+            } catch(fs::filesystem_error &e) {\n+                QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                                      QObject::tr(\"Error: Specified data directory \\\"%1\\\" can not be created.\").arg(dataDir));\n+                /* fall through, back to choosing screen */\n+            }\n+        }\n+\n+        settings.setValue(\"strDataDir\", dataDir);\n+    }\n+    SoftSetArg(\"-datadir\", dataDir.toStdString());\n+}\n+\n+void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)\n+{\n+    switch(status)\n+    {\n+    case FreespaceChecker::ST_OK:\n+        ui->errorMessage->setText(message);\n+        ui->errorMessage->setStyleSheet(\"\");\n+        break;\n+    case FreespaceChecker::ST_ERROR:\n+        ui->errorMessage->setText(tr(\"Error\") + \": \" + message);\n+        ui->errorMessage->setStyleSheet(\"QLabel { color: #800000 }\");\n+        break;\n+    }\n+    /* Indicate number of bytes available */\n+    if(status == FreespaceChecker::ST_ERROR)\n+    {\n+        ui->freeSpace->setText(\"\");\n+    } else {\n+        QString freeString = QString::number(bytesAvailable/GB_BYTES) + tr(\"GB of free space available\");\n+        if(bytesAvailable < BLOCK_CHAIN_SIZE)\n+        {\n+            freeString += \" \" + tr(\"(of %1GB needed)\").arg(BLOCK_CHAIN_SIZE/GB_BYTES);\n+            ui->freeSpace->setStyleSheet(\"QLabel { color: #800000 }\");\n+        } else {\n+            ui->freeSpace->setStyleSheet(\"\");\n+        }\n+        ui->freeSpace->setText(freeString + \".\");\n+    }\n+    /* Don't allow confirm in ERROR state */\n+    ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(status != FreespaceChecker::ST_ERROR);\n+}\n+\n+void Intro::on_dataDirectory_textChanged(const QString &dataDirStr)\n+{\n+    /* Disable OK button until check result comes in */\n+    ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(false);\n+    checkPath(dataDirStr);\n+}\n+\n+void Intro::on_ellipsisButton_clicked()\n+{\n+    QString dir = QFileDialog::getExistingDirectory(0, \"Choose data directory\", ui->dataDirectory->text());\n+    if(!dir.isEmpty())\n+        ui->dataDirectory->setText(dir);\n+}\n+\n+void Intro::on_dataDirDefault_clicked()\n+{\n+    setDataDirectory(getDefaultDataDirectory());\n+}\n+\n+void Intro::on_dataDirCustom_clicked()\n+{\n+    ui->dataDirectory->setEnabled(true);\n+    ui->ellipsisButton->setEnabled(true);\n+}\n+\n+void Intro::startThread()\n+{\n+    thread = new QThread(this);\n+    FreespaceChecker *executor = new FreespaceChecker(this);\n+    executor->moveToThread(thread);\n+\n+    connect(executor, SIGNAL(reply(int,QString,quint64)), this, SLOT(setStatus(int,QString,quint64)));\n+    connect(this, SIGNAL(requestCheck()), executor, SLOT(check()));\n+    /*  make sure executor object is deleted in its own thread */\n+    connect(this, SIGNAL(stopThread()), executor, SLOT(deleteLater()));\n+    connect(this, SIGNAL(stopThread()), thread, SLOT(quit()));\n+\n+    thread->start();\n+}\n+\n+void Intro::checkPath(const QString &dataDir)\n+{\n+    mutex.lock();\n+    pathToCheck = dataDir;\n+    if(!signalled)\n+    {\n+        signalled = true;\n+        emit requestCheck();\n+    }\n+    mutex.unlock();\n+}\n+\n+QString Intro::getPathToCheck()\n+{\n+    QString retval;\n+    mutex.lock();\n+    retval = pathToCheck;\n+    signalled = false; /* new request can be queued now */\n+    mutex.unlock();\n+    return retval;\n+}"
      },
      {
        "sha": "8b09847abdcdd107d76d6da3ee27895157a489c1",
        "filename": "src/qt/intro.h",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -0,0 +1,68 @@\n+#ifndef INTRO_H\n+#define INTRO_H\n+\n+#include <QDialog>\n+#include <QThread>\n+#include <QMutex>\n+\n+namespace Ui {\n+class Intro;\n+}\n+class FreespaceChecker;\n+\n+/** Introduction screen (pre-GUI startup).\n+  Allows the user to choose a data directory,\n+  in which the wallet and block chain will be stored.\n+ */\n+class Intro : public QDialog\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit Intro(QWidget *parent = 0);\n+    ~Intro();\n+\n+    QString getDataDirectory();\n+    void setDataDirectory(const QString &dataDir);\n+\n+    /**\n+     * Determine data directory. Let the user choose if the current one doesn't exist.\n+     *\n+     * @note do NOT call global GetDataDir() before calling this function, this\n+     * will cause the wrong path to be cached.\n+     */\n+    static void pickDataDirectory(bool fIsTestnet);\n+\n+    /**\n+     * Determine default data directory for operating system.\n+     */\n+    static QString getDefaultDataDirectory();\n+\n+signals:\n+    void requestCheck();\n+    void stopThread();\n+\n+public slots:\n+    void setStatus(int status, const QString &message, quint64 bytesAvailable);\n+\n+private slots:\n+    void on_dataDirectory_textChanged(const QString &arg1);\n+    void on_ellipsisButton_clicked();\n+    void on_dataDirDefault_clicked();\n+    void on_dataDirCustom_clicked();\n+\n+private:\n+    Ui::Intro *ui;\n+    QThread *thread;\n+    QMutex mutex;\n+    bool signalled;\n+    QString pathToCheck;\n+\n+    void startThread();\n+    void checkPath(const QString &dataDir);\n+    QString getPathToCheck();\n+\n+    friend class FreespaceChecker;\n+};\n+\n+#endif // INTRO_H"
      },
      {
        "sha": "cdb7b61a6c4c7bf8f3b9a83f801b2e49f2a0763c",
        "filename": "src/qt/locale/bitcoin_ach.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ach.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ach.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ach.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "02234d52afe26ee6f7f71e3bda48548cf7b7c8e8",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 239,
        "deletions": 104,
        "changes": 343,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,5 +1,4 @@\n <?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"af_ZA\" version=\"2.0\">\n-<defaultcodec>UTF-8</defaultcodec>\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -136,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Stuur &amp;Muntstukke</translation>\n     </message>\n     <message>\n-        <location line=\"+260\"/>\n+        <location line=\"+265\"/>\n         <source>Export Address Book Data</source>\n         <translation>Voer die Adresboek Data Uit</translation>\n     </message>\n@@ -318,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+233\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+254\"/>\n         <source>Sign &amp;message...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+280\"/>\n+        <location line=\"+246\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Sinchroniseer met die netwerk ...</translation>\n     </message>\n     <message>\n-        <location line=\"-349\"/>\n+        <location line=\"-321\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Oorsig</translation>\n     </message>\n@@ -368,7 +367,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Sluit af</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+7\"/>\n         <source>Show information about Bitcoin</source>\n         <translation>Wys inligting oor Bitcoin</translation>\n     </message>\n@@ -388,7 +387,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Opsies</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+9\"/>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +402,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+285\"/>\n+        <location line=\"+251\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -413,17 +412,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-347\"/>\n+        <location line=\"-319\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+49\"/>\n+        <location line=\"+52\"/>\n         <source>Modify configuration options for Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+12\"/>\n         <source>Backup wallet to another location</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -448,18 +447,20 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-165\"/>\n-        <location line=\"+530\"/>\n+        <location line=\"-183\"/>\n+        <location line=\"+6\"/>\n+        <location line=\"+508\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-530\"/>\n+        <location line=\"-514\"/>\n+        <location line=\"+6\"/>\n         <source>Wallet</source>\n         <translation>Beursie</translation>\n     </message>\n     <message>\n-        <location line=\"+101\"/>\n+        <location line=\"+107\"/>\n         <source>&amp;Send</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -474,12 +475,14 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n+        <location line=\"+23\"/>\n+        <location line=\"+2\"/>\n         <source>&amp;About Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+10\"/>\n+        <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -524,18 +527,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Blad nutsbalk</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <location line=\"+10\"/>\n+        <location line=\"-228\"/>\n+        <location line=\"+288\"/>\n         <source>[testnet]</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"-5\"/>\n+        <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+141\"/>\n+        <location line=\"+121\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform></translation>\n     </message>\n@@ -661,15 +665,15 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+111\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+104\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+105\"/>\n         <source>Network Alert</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -742,16 +746,44 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+61\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+424\"/>\n-        <location line=\"+12\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"+517\"/>\n+        <location line=\"+13\"/>\n         <source>Bitcoin-Qt</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-12\"/>\n+        <location line=\"-13\"/>\n         <source>version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -785,6 +817,59 @@ Address: %4\n         <source>Show splash screen on startup (default: 1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin-Qt.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+100\"/>\n+        <source>Error</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>OptionsDialog</name>\n@@ -959,7 +1044,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+53\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+54\"/>\n         <source>default</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1005,17 +1090,12 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+166\"/>\n+        <location line=\"+202\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-124\"/>\n-        <source>Balance:</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+29\"/>\n+        <location line=\"-131\"/>\n         <source>Unconfirmed:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1025,7 +1105,22 @@ Address: %4\n         <translation>Beursie</translation>\n     </message>\n     <message>\n-        <location line=\"+107\"/>\n+        <location line=\"+49\"/>\n+        <source>Confirmed:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>Your current spendable balance</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n         <source>Immature:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1035,18 +1130,18 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n-        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n+        <location line=\"+13\"/>\n+        <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-101\"/>\n-        <source>Your current balance</source>\n+        <location line=\"+16\"/>\n+        <source>Your current total balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n-        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>\n+        <location line=\"+53\"/>\n+        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1059,11 +1154,30 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+107\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+108\"/>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>QObject</name>\n+    <message>\n+        <location filename=\"../bitcoin.cpp\" line=\"+92\"/>\n+        <location filename=\"../intro.cpp\" line=\"-32\"/>\n+        <source>Bitcoin</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; does not exist.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>QRCodeDialog</name>\n     <message>\n@@ -1097,7 +1211,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../qrcodedialog.cpp\" line=\"+62\"/>\n+        <location filename=\"../qrcodedialog.cpp\" line=\"+64\"/>\n         <source>Error encoding URI into QR Code.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1139,7 +1253,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+339\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+345\"/>\n         <source>N/A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1273,7 +1387,7 @@ Address: %4\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+124\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+128\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n@@ -1324,12 +1438,13 @@ Address: %4\n         <translation>S&amp;tuur</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-59\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-62\"/>\n+        <location line=\"+2\"/>\n         <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Confirm send coins</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1440,7 +1555,7 @@ Address: %4\n     <message>\n         <location filename=\"../sendcoinsentry.cpp\" line=\"+1\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n </context>\n <context>\n@@ -1557,7 +1672,7 @@ Address: %4\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n     <message>\n         <location line=\"-2\"/>\n@@ -2058,7 +2173,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+139\"/>\n+        <location line=\"+143\"/>\n         <source>Export Transaction Data</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2134,7 +2249,7 @@ Address: %4\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+42\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2144,7 +2259,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+193\"/>\n+        <location line=\"+197\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2177,17 +2292,17 @@ Address: %4\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+94\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+98\"/>\n         <source>Bitcoin version</source>\n         <translation>Bitcoin weergawe</translation>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+104\"/>\n         <source>Usage:</source>\n         <translation>Gebruik:</translation>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-30\"/>\n         <source>Send command to -server or bitcoind</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2197,12 +2312,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-12\"/>\n+        <location line=\"-13\"/>\n         <source>Get help for a command</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+25\"/>\n         <source>Options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2237,12 +2352,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-48\"/>\n+        <location line=\"-49\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+82\"/>\n+        <location line=\"+84\"/>\n         <source>Specify your own public address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2252,17 +2367,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-134\"/>\n+        <location line=\"-136\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-33\"/>\n         <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+27\"/>\n+        <location line=\"+31\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2272,22 +2387,22 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n+        <location line=\"+77\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+37\"/>\n+        <location line=\"+38\"/>\n         <source>Use the test network</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-112\"/>\n+        <location line=\"-114\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-80\"/>\n+        <location line=\"-84\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2318,6 +2433,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+3\"/>\n+        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly. This is intended for regression testing tools and app development.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n         <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2512,7 +2632,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+2\"/>\n+        <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n         <source>Not enough file descriptors available.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2527,7 +2652,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"+7\"/>\n+        <source>Specify wallet file (within data directory)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2537,7 +2667,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-69\"/>\n+        <location line=\"+1\"/>\n+        <source>Wallet %s resides outside data directory %s</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>You need to rebuild the database using -reindex to change -txindex</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-76\"/>\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2547,7 +2687,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+77\"/>\n+        <location line=\"+78\"/>\n         <source>Information</source>\n         <translation>Informasie</translation>\n     </message>\n@@ -2652,7 +2792,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>System error: </source>\n         <translation>Sisteem fout:</translation>\n     </message>\n@@ -2692,7 +2832,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Warning</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2702,42 +2842,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>You need to rebuild the databases using -reindex to change -txindex</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-50\"/>\n+        <location line=\"-52\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-67\"/>\n+        <location line=\"-68\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n+        <location line=\"+77\"/>\n         <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-120\"/>\n+        <location line=\"-121\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+147\"/>\n+        <location line=\"+149\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-21\"/>\n+        <location line=\"-22\"/>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2747,12 +2882,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+36\"/>\n         <source>Use OpenSSL (https) for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-26\"/>\n+        <location line=\"-27\"/>\n         <source>Server certificate file (default: server.cert)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2762,12 +2897,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-151\"/>\n+        <location line=\"-156\"/>\n         <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+165\"/>\n+        <location line=\"+171\"/>\n         <source>This help message</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2777,7 +2912,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-91\"/>\n+        <location line=\"-93\"/>\n         <source>Connect through socks proxy</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2787,12 +2922,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+55\"/>\n+        <location line=\"+56\"/>\n         <source>Loading addresses...</source>\n         <translation>Laai adresse...</translation>\n     </message>\n     <message>\n-        <location line=\"-35\"/>\n+        <location line=\"-36\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2802,22 +2937,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+93\"/>\n+        <location line=\"+96\"/>\n         <source>Wallet needed to be rewritten: restart Bitcoin to complete</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n+        <location line=\"-98\"/>\n         <source>Error loading wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+29\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+56\"/>\n+        <location line=\"+57\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2827,7 +2962,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-96\"/>\n+        <location line=\"-98\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2837,7 +2972,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+44\"/>\n+        <location line=\"+45\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2857,7 +2992,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Laai blok indeks...</translation>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-58\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2872,12 +3007,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+20\"/>\n         <source>Loading wallet...</source>\n         <translation>Laai beursie...</translation>\n     </message>\n     <message>\n-        <location line=\"-52\"/>\n+        <location line=\"-53\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2887,22 +3022,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+64\"/>\n+        <location line=\"+65\"/>\n         <source>Rescanning...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-58\"/>\n         <source>Done loading</source>\n         <translation>Klaar gelaai</translation>\n     </message>\n     <message>\n-        <location line=\"+82\"/>\n+        <location line=\"+84\"/>\n         <source>To use the %s option</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-74\"/>\n+        <location line=\"-76\"/>\n         <source>Error</source>\n         <translation>Fout</translation>\n     </message>"
      },
      {
        "sha": "1a4a529621240d3ceb07de58f7ef8f0162ed1b8e",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 237,
        "deletions": 102,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "patch": "@@ -1,5 +1,4 @@\n <?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ar\" version=\"2.0\">\n-<defaultcodec>UTF-8</defaultcodec>\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -136,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+260\"/>\n+        <location line=\"+265\"/>\n         <source>Export Address Book Data</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -318,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+233\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+254\"/>\n         <source>Sign &amp;message...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+280\"/>\n+        <location line=\"+246\"/>\n         <source>Synchronizing with network...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-349\"/>\n+        <location line=\"-321\"/>\n         <source>&amp;Overview</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -368,7 +367,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+7\"/>\n         <source>Show information about Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -388,7 +387,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+9\"/>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +402,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+285\"/>\n+        <location line=\"+251\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -413,17 +412,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-347\"/>\n+        <location line=\"-319\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+49\"/>\n+        <location line=\"+52\"/>\n         <source>Modify configuration options for Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+12\"/>\n         <source>Backup wallet to another location</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -448,18 +447,20 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-165\"/>\n-        <location line=\"+530\"/>\n+        <location line=\"-183\"/>\n+        <location line=\"+6\"/>\n+        <location line=\"+508\"/>\n         <source>Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-530\"/>\n+        <location line=\"-514\"/>\n+        <location line=\"+6\"/>\n         <source>Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+101\"/>\n+        <location line=\"+107\"/>\n         <source>&amp;Send</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -474,12 +475,14 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n+        <location line=\"+23\"/>\n+        <location line=\"+2\"/>\n         <source>&amp;About Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+10\"/>\n+        <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -524,18 +527,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <location line=\"+10\"/>\n+        <location line=\"-228\"/>\n+        <location line=\"+288\"/>\n         <source>[testnet]</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"-5\"/>\n+        <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+141\"/>\n+        <location line=\"+121\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>\n     </message>\n@@ -661,15 +665,15 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+111\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+104\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+105\"/>\n         <source>Network Alert</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -742,16 +746,44 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+61\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+424\"/>\n-        <location line=\"+12\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"+517\"/>\n+        <location line=\"+13\"/>\n         <source>Bitcoin-Qt</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-12\"/>\n+        <location line=\"-13\"/>\n         <source>version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -785,6 +817,59 @@ Address: %4\n         <source>Show splash screen on startup (default: 1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin-Qt.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+100\"/>\n+        <source>Error</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>OptionsDialog</name>\n@@ -959,7 +1044,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+53\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+54\"/>\n         <source>default</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1005,17 +1090,12 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+166\"/>\n+        <location line=\"+202\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-124\"/>\n-        <source>Balance:</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+29\"/>\n+        <location line=\"-131\"/>\n         <source>Unconfirmed:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1025,7 +1105,22 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+107\"/>\n+        <location line=\"+49\"/>\n+        <source>Confirmed:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>Your current spendable balance</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n         <source>Immature:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1035,18 +1130,18 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n-        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n+        <location line=\"+13\"/>\n+        <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-101\"/>\n-        <source>Your current balance</source>\n+        <location line=\"+16\"/>\n+        <source>Your current total balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n-        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>\n+        <location line=\"+53\"/>\n+        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1059,11 +1154,30 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+107\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+108\"/>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>QObject</name>\n+    <message>\n+        <location filename=\"../bitcoin.cpp\" line=\"+92\"/>\n+        <location filename=\"../intro.cpp\" line=\"-32\"/>\n+        <source>Bitcoin</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; does not exist.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>QRCodeDialog</name>\n     <message>\n@@ -1097,7 +1211,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../qrcodedialog.cpp\" line=\"+62\"/>\n+        <location filename=\"../qrcodedialog.cpp\" line=\"+64\"/>\n         <source>Error encoding URI into QR Code.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1139,7 +1253,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+339\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+345\"/>\n         <source>N/A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1273,7 +1387,7 @@ Address: %4\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+124\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+128\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n@@ -1324,12 +1438,13 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-59\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-62\"/>\n+        <location line=\"+2\"/>\n         <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Confirm send coins</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2058,7 +2173,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+139\"/>\n+        <location line=\"+143\"/>\n         <source>Export Transaction Data</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2134,7 +2249,7 @@ Address: %4\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+42\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2144,7 +2259,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+193\"/>\n+        <location line=\"+197\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2177,17 +2292,17 @@ Address: %4\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+94\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+98\"/>\n         <source>Bitcoin version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+104\"/>\n         <source>Usage:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-30\"/>\n         <source>Send command to -server or bitcoind</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2197,12 +2312,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-12\"/>\n+        <location line=\"-13\"/>\n         <source>Get help for a command</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+25\"/>\n         <source>Options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2237,12 +2352,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-48\"/>\n+        <location line=\"-49\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+82\"/>\n+        <location line=\"+84\"/>\n         <source>Specify your own public address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2252,17 +2367,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-134\"/>\n+        <location line=\"-136\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-33\"/>\n         <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+27\"/>\n+        <location line=\"+31\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2272,22 +2387,22 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n+        <location line=\"+77\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+37\"/>\n+        <location line=\"+38\"/>\n         <source>Use the test network</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-112\"/>\n+        <location line=\"-114\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-80\"/>\n+        <location line=\"-84\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2318,6 +2433,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+3\"/>\n+        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly. This is intended for regression testing tools and app development.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n         <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2512,7 +2632,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+2\"/>\n+        <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n         <source>Not enough file descriptors available.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2527,7 +2652,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"+7\"/>\n+        <source>Specify wallet file (within data directory)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2537,7 +2667,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-69\"/>\n+        <location line=\"+1\"/>\n+        <source>Wallet %s resides outside data directory %s</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>You need to rebuild the database using -reindex to change -txindex</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-76\"/>\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2547,7 +2687,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+77\"/>\n+        <location line=\"+78\"/>\n         <source>Information</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2652,7 +2792,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>System error: </source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2692,7 +2832,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Warning</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2702,42 +2842,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>You need to rebuild the databases using -reindex to change -txindex</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-50\"/>\n+        <location line=\"-52\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-67\"/>\n+        <location line=\"-68\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n+        <location line=\"+77\"/>\n         <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-120\"/>\n+        <location line=\"-121\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+147\"/>\n+        <location line=\"+149\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-21\"/>\n+        <location line=\"-22\"/>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2747,12 +2882,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+36\"/>\n         <source>Use OpenSSL (https) for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-26\"/>\n+        <location line=\"-27\"/>\n         <source>Server certificate file (default: server.cert)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2762,12 +2897,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-151\"/>\n+        <location line=\"-156\"/>\n         <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+165\"/>\n+        <location line=\"+171\"/>\n         <source>This help message</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2777,7 +2912,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-91\"/>\n+        <location line=\"-93\"/>\n         <source>Connect through socks proxy</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2787,12 +2922,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+55\"/>\n+        <location line=\"+56\"/>\n         <source>Loading addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-35\"/>\n+        <location line=\"-36\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2802,22 +2937,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+93\"/>\n+        <location line=\"+96\"/>\n         <source>Wallet needed to be rewritten: restart Bitcoin to complete</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n+        <location line=\"-98\"/>\n         <source>Error loading wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+29\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+56\"/>\n+        <location line=\"+57\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2827,7 +2962,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-96\"/>\n+        <location line=\"-98\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2837,7 +2972,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+44\"/>\n+        <location line=\"+45\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2857,7 +2992,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-58\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2872,12 +3007,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+20\"/>\n         <source>Loading wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-52\"/>\n+        <location line=\"-53\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2887,22 +3022,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+64\"/>\n+        <location line=\"+65\"/>\n         <source>Rescanning...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-58\"/>\n         <source>Done loading</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+82\"/>\n+        <location line=\"+84\"/>\n         <source>To use the %s option</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-74\"/>\n+        <location line=\"-76\"/>\n         <source>Error</source>\n         <translation type=\"unfinished\"/>\n     </message>"
      },
      {
        "sha": "c967d446eb9584b39695881dfca89c574c15fc81",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "a1ceb7be9022f940f5e16a4c2d605f02da781892",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 247,
        "deletions": 112,
        "changes": 359,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "d6b57b42a556d5fcef05f3d592bda22883a884af",
        "filename": "src/qt/locale/bitcoin_bs.ts",
        "status": "modified",
        "additions": 237,
        "deletions": 102,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_bs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_bs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bs.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "abd54f669f9cb4cba55de48f96d2113809bdaaec",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 237,
        "deletions": 102,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "a23e9e45c180cb9c95a6b7a269bcffced3020460",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "b6840e24a891af64126574694276b304ee86fc8e",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "1574fd34e1ebb964fd219413a6b8ae5fd6dee367",
        "filename": "src/qt/locale/bitcoin_cy.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_cy.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_cy.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cy.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ad6efd350598c895d0ceef0dd4c6a5048f8acba6",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 264,
        "deletions": 129,
        "changes": 393,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "085ba0ba5cb28fdd3a3d1c95d3ad2260e3abd565",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 242,
        "deletions": 107,
        "changes": 349,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ee019a09bb44b422e9b1553cf03dfe2fc1b010ca",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 244,
        "deletions": 109,
        "changes": 353,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "4d1a8574d0e28d75c482d5c590e48e44fda202eb",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 390,
        "deletions": 159,
        "changes": 549,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "d9cfba4f7a397cea3c783f4c76083233459335e8",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 239,
        "deletions": 104,
        "changes": 343,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "3edbd4222d5ccefcce33896dcfe641c9a2d868f6",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 242,
        "deletions": 107,
        "changes": 349,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ec1b9009965cb4cf4c783e614eccb2ed9bbe4665",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 241,
        "deletions": 106,
        "changes": 347,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "e4106c0344d3bd77525005cd93e548a6769805be",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ebb3be70ea6dcd3718cd20e36dc8050079aa8e82",
        "filename": "src/qt/locale/bitcoin_eu_ES.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_eu_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_eu_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu_ES.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "107cc7e741974f358357f68befc22c6a1daafd8a",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 241,
        "deletions": 106,
        "changes": 347,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "f3283be6761a3b75a4c2866e609a11b01dadbe3a",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 272,
        "deletions": 136,
        "changes": 408,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "78e1ef6a7f3b366a20febafecdcc01f93b2ca3fd",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "a5505bea3438e64870705ef84cb5fd95f9feb598",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 244,
        "deletions": 109,
        "changes": 353,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "0315f84b671c6f0119202801bc6c8daaf7fc7ce4",
        "filename": "src/qt/locale/bitcoin_fr_CA.ts",
        "status": "modified",
        "additions": 237,
        "deletions": 102,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fr_CA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_fr_CA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_CA.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ccd90b4d398845d23ffc183b8f135ebfe477b2d0",
        "filename": "src/qt/locale/bitcoin_gu_IN.ts",
        "status": "modified",
        "additions": 237,
        "deletions": 102,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_gu_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_gu_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gu_IN.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "934bb9c3b489729f66d77d28f08de940159e7d05",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 255,
        "deletions": 120,
        "changes": 375,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "4c2806184e5baf26be60e4b6b669a8b83b58f1a3",
        "filename": "src/qt/locale/bitcoin_hi_IN.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_hi_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_hi_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi_IN.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "29f120dcc5d5d150318f00b813f37e3670283999",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 292,
        "deletions": 157,
        "changes": 449,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "cca1d9301385723a8dd45fbe6b44598c5f4f071a",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 350,
        "deletions": 215,
        "changes": 565,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "32dfa0d90d04a6a51a12a5c001d0e6526ae1822d",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "840fba3c2a2b867e357e4136aa87bb6e426c3e3d",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 292,
        "deletions": 147,
        "changes": 439,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "6fdc9fab5c786e37f0b1a18ff0c9ed1efa4ff245",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 745,
        "deletions": 588,
        "changes": 1333,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "bae6a5aa2cc744efc9e8a95a5800e56415bfff5e",
        "filename": "src/qt/locale/bitcoin_kk_KZ.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_kk_KZ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_kk_KZ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_kk_KZ.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "7a4b9ab70ce13d1fa0efae466db6e3cdd69e9a78",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "0e0be7f0a5f2e5672935f7aa798c4fa6a4181e34",
        "filename": "src/qt/locale/bitcoin_la.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_la.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_la.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_la.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "23d850e074675d332fdea01dc5a6d16ce94f187b",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 241,
        "deletions": 106,
        "changes": 347,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "cd1725848702ec1250ee326248409703a31e90fd",
        "filename": "src/qt/locale/bitcoin_lv_LV.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_lv_LV.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_lv_LV.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv_LV.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "dcc22fe879d8c3b248d9c9863ebe5870cb418bf3",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "9a69bad925365d5b85ea71b7b8c795c32357f7e9",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 285,
        "deletions": 150,
        "changes": 435,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "6a19ef7f5aaa5aea607bcf9057e0997b7a5e3121",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 241,
        "deletions": 106,
        "changes": 347,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "443d0261236c16045ca69830227eea1105aec134",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 269,
        "deletions": 134,
        "changes": 403,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "44fc3cc712b48137bb5dffc7ce96c483b4571018",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 243,
        "deletions": 108,
        "changes": 351,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "307fa068c1e244ebc1bdedf3992372a9473065ae",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "2f38a50e3c6f436613017b5d95da620fd9575cca",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 269,
        "deletions": 132,
        "changes": 401,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "20369c42a69bb1346763c5d0d2444e1647b18988",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "39a03827195966a581327b6d8e9cf32cb223457f",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 241,
        "deletions": 106,
        "changes": 347,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "dedeacfef15da2b6ef7af50b697193d9122b2f97",
        "filename": "src/qt/locale/bitcoin_sq.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sq.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sq.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sq.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "f55a59c65f152cdcf8bb7d6929e9c35e1b255608",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 242,
        "deletions": 107,
        "changes": 349,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "9107c01dfb342414109d6d0170c54bc313ba9d4d",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 241,
        "deletions": 106,
        "changes": 347,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "df3c74ba57c2433b887af74b7faab85328518063",
        "filename": "src/qt/locale/bitcoin_th_TH.ts",
        "status": "modified",
        "additions": 237,
        "deletions": 102,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_th_TH.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_th_TH.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th_TH.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "c1473b7a18455e89e30402603fed79d9250295e1",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "e4a426efbf794bee9c52a45675ec1cfee05fa6bd",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 240,
        "deletions": 105,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "c620e223d141259294acff3ad6483362da0e13d4",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "885c472f812225ee766f1970b4ec85fb9467bad3",
        "filename": "src/qt/locale/bitcoin_vi_VN.ts",
        "status": "added",
        "additions": 3052,
        "deletions": 0,
        "changes": 3052,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_vi_VN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_vi_VN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi_VN.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "d4fd6e0c387dcc8a4328ad7b95176b681984cd95",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 402,
        "deletions": 272,
        "changes": 674,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "d0475ffebf8d172ca05dd5610d3b4542568b181a",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 243,
        "deletions": 108,
        "changes": 351,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "903c54b39df32a4a074cf48dd537cd0b18b87cc4",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "6c9a46bcf708351db316662060f35e579261343e",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "7ccda6cdd43380f517e9a22d71da6610065f30fa",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "95efc583208e1f224ce08f3682a7b2e8cacffb25",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "173db0fe0a6f9da4f7be0be09d95f77ce57cda52",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "b2281c4c7b3402de9d00457ebf44d31b0193643f",
        "filename": "src/qt/paymentrequest.proto",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentrequest.proto",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentrequest.proto",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequest.proto?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "f6a898ff7ca99cf83f7d2a1940b37813baac7682",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "added",
        "additions": 205,
        "deletions": 0,
        "changes": 205,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "846d256aca971286fafe3d10a6bfc77a9593fa45",
        "filename": "src/qt/paymentrequestplus.h",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentrequestplus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentrequestplus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "72f75b42e60b92f00c0e7c51d4b30c699d780f4e",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 505,
        "deletions": 40,
        "changes": 545,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "f9d827204b326d9ba73fa026c504cf9704063fb9",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 67,
        "deletions": 8,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "3e3672a835f115e75f694926753aca337f920937",
        "filename": "src/qt/res/bitcoin-qt-res.rc",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/res/bitcoin-qt-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/res/bitcoin-qt-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt-res.rc?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "previous_filename": "src/qt/res/bitcoin-qt.rc"
      },
      {
        "sha": "8953c3657920e41df26c1446495e4c4b26939057",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "00cea463ef0f74aae8a52825911a2300c140bc3c",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 131,
        "deletions": 67,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "f4bffedc9ba5d112e86e0ba149b8f6447c15b8cd",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ee84f7bc116498b440ffb70e8e4c339979ba198a",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 19,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "49e622daf19d0f3cb5abadc7dc64978f84b97021",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "1e9c84fe1a95c3dcc380c5caf47b5da23323fd0b",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "7c9bc46c46f2a1557f70e492703fed284fa72f78",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "f8fe97462bcb0f1627b382ac185efaf08da199a3",
        "filename": "src/qt/test/Makefile.am",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "49558165f0551a1270d0d882a4ef7ac9be6ba645",
        "filename": "src/qt/test/paymentrequestdata.h",
        "status": "added",
        "additions": 307,
        "deletions": 0,
        "changes": 307,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/paymentrequestdata.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/paymentrequestdata.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentrequestdata.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "34079e94ff6d4e7c927deb1b3c662909ea804fff",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "added",
        "additions": 111,
        "deletions": 0,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "5aa24ebaf2c87d2219385716545892e3911f01f6",
        "filename": "src/qt/test/paymentservertests.h",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/paymentservertests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/paymentservertests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "dae4e604120a443ed90b0c05af8df4ee46a49a5f",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 16,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "e27aa93a4ab3e6720687f742afdbc45a911e2825",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 22,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "8b3684e961e41b63d71a5684ccbf2486c38db5ec",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ea2c1f0a5cfd5683b1ac534a5a88f11801578c84",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "480e7a7f2c2318ae68d55e9b9abe8f1f560d128b",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "07f6a6215000f7d8c020955284f2827ae42f9a0d",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 20,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "8d6a1b387e9203c4e8ff5db6e9cac6addab1e4ea",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 15,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "eaae053ccd5659bc8099dcda9310d0149c2ea355",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "bda39b675ff9e4886ca7c3a35c1571172559e0ec",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 115,
        "deletions": 51,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "6abcdaf8cb2ae4a0a7915de334606cb909bd52aa",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 20,
        "deletions": 8,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "706ed60b77b310af31b4ecbe56d70bf290e10fbe",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "c4848fb12df0e1367c7ee8b29bdec97c1219ef19",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "4ef87aed52645574a1e12d5a48c1043b5d4a0a87",
        "filename": "src/qt/walletstack.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 14,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletstack.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletstack.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletstack.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "74b9f0908172dc1b7a225003770b616abf2605da",
        "filename": "src/qt/walletstack.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletstack.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletstack.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletstack.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "efb74efaa0194e4c4cb4c0c0fd2447486f1741cf",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ce4e0510985dfdfcca3e19e8e158d6fdb12db0c2",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "398f33605aa04f156a920a1c9acf4807c69712c0",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 5,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "842910c7e0afa8181b06fb31bc4aa65387170408",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 191,
        "deletions": 19,
        "changes": 210,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "b013b4b20006e9208439eb213383c0c605f2e433",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 72,
        "deletions": 5,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "bd7bc0ba10ccf0f1a7423b0b4f170dad96ac315c",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "fcc5359dd603b3dbe8100986042e4f81b58e4f11",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 42,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "474238c4beb0ed7cf2681d3f8aa922e01a9572df",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 51,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "0fe2953548fb0bc96778fed9ec3fc8c446862700",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 18,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "842b8512ebc1c9d6e630cc5becac6600cecd8d5a",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 20,
        "deletions": 7,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "29a455f9b255231b1cced41b408692bf0b61294e",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "64de7cc57ce95ff77fcf70c8b6dddfd06e1b98b1",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "c7f968da7ce8a80350b623eea895fc6b6124cbbf",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 21,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "a859eb1de83a265cf6b664098d25bf7f448d7179",
        "filename": "src/test/Makefile.am",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "cb941943f7de43e37c0da4a0a12713bc3d946b74",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 18,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "05675685bda087cdaca2b68965025685b2bcc704",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "66d2330fbf98829fec8f051887b277f1b3e9c86c",
        "filename": "src/test/bip32_tests.cpp",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "ec32ceb8a4b947405909e68d3f509c75f719ccd1",
        "filename": "src/test/canonical_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/canonical_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/canonical_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/canonical_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "e34680db9946050170e0abcaddf64562a9310d8d",
        "filename": "src/test/checkblock_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/checkblock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/checkblock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkblock_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "7fc45289617e1c4b0e40f2244ffa3fab0f9849ce",
        "filename": "src/test/data/alertTests.raw",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/data/alertTests.raw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/data/alertTests.raw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/alertTests.raw?ref=4c4c4d79046cc6523fcfa300485146a2bfead319",
        "previous_filename": "src/test/data/alertTests"
      },
      {
        "sha": "761cc4a008684dd0f9901689f2e57234918c48b2",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "13b0af6c4572511493c036984cadaf2f2de5b291",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 29,
        "deletions": 1,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "d69cfd706dfe51ad506f5d4988d8c8c66f06bfee",
        "filename": "src/test/hash_tests.cpp",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/hash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/hash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/hash_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "92ca5e6aff2911b71b448ea19c3561c43c32c9e4",
        "filename": "src/test/hmac_tests.cpp",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/hmac_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/hmac_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/hmac_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "eeeacb0ad4f47e29b94962fd2ef456dedde7313e",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 11,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "3c666d284278114af10eca914342d5c642fb3f80",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "dfa5529b87e40dc171403dfcd6c734aa6d316744",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 27,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "416b93ab33e6ee99f13beb32fe8ba4483b71e990",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "abfd882655ef193877d459195717e270c3d5e568",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 32,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "51f3b27c8b42308654fae3cfe68b41162bf943b3",
        "filename": "src/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/wallet_tests.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "0d2fdc2887469a80f1cc6d87c05f790d20083bbf",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "45ab8abb5ed1aa7cc0947c0b424bd112b9cd8a5e",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 47,
        "deletions": 47,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "73428b4c2273356210409a9d16c9026fcc4b2508",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 42,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "a216aacdc9fabe33506ec64feeb7cebe68b0d95b",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 47,
        "deletions": 23,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "d9d6724a02962a37772c7cfdaf99687ae51f1dfd",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "26ffc71e192a13a10a180dd3b09ff1736aaa9a08",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 148,
        "deletions": 76,
        "changes": 224,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "51bc9f67c43e0d7b5e577995ed7fa18bdb720a58",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 44,
        "deletions": 14,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "635fda1b42fad51e6eec7496b5d004eb0baee6e6",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 22,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      },
      {
        "sha": "09ebebe5ac0cdc9f07f2541bd87b29256e07544e",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c4c4d79046cc6523fcfa300485146a2bfead319/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c4c4d79046cc6523fcfa300485146a2bfead319/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=4c4c4d79046cc6523fcfa300485146a2bfead319"
      }
    ]
  }
]