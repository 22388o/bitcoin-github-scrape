DrahtBot,2021-01-20 05:29:12,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763344104,763344104,
theStack,2021-01-20 10:16:04,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763497435,763497435,
vasild,2021-01-20 10:57:32,"790727eea..fd751850e: add the tests from #20904 (closed without merge), they are precious",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763521567,763521567,
vasild,2021-01-20 11:30:18,fd751850e..2d287f639: add release notes,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763540526,763540526,
laanwj,2021-01-20 12:37:59,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763578760,763578760,
vasild,2021-01-20 12:53:59,2d287f639...fd751850e: remove edits of `doc/release-notes.md`,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763587128,763587128,
vasild,2021-01-20 13:01:48,"Notes:\n\n* I guess it would be possible to write the ban list to `settings.json` instead of in `banlist.json` (as originally proposed in https://github.com/bitcoin/bitcoin/issues/19748), but the periodic dump may create some complications and also it is unclear what to do if we are running with `-nosettings`.\n\n* The current patch would write `banlist.json` on the first change of the ban lis",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-763591233,763591233,
jonatack,2021-01-27 12:46:34,"Concept ACK\n\n> [790727e](https://github.com/bitcoin/bitcoin/commit/790727eeaf165449f691d1f874b70f0816ef7601)..[fd75185](https://github.com/bitcoin/bitcoin/commit/fd751850e5dc918b523c63ce9db98279f2398c96): add the tests from #20904 (closed without merge), they are precious\n\nGood to see these tests brought in.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-768261953,768261953,
vasild,2021-01-28 13:39:39,"fd751850e...e74196741: read `banlist.dat` only if `banlist.json` is not present and catch all exceptions that could come from an invalid JSON.\n\n@promag  \n> Should try to read JSON first, and if it exists then skip old format?\n\nI made it to read both if present so that if the user temporary downgrades and makes some changes to `banlist.dat` those changes would be picked up by the new vers",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-769058840,769058840,
MarcoFalke,2021-02-15 14:20:42,needs rebase after #21167,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-779253018,779253018,
vasild,2021-02-15 14:54:24,`e74196741...7493bbe38`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-779272710,779272710,
vasild,2021-03-10 16:12:28,`7493bbe38...1310b5460`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-795669488,795669488,
MarcoFalke,2021-03-10 16:20:43,So many rebases. I hope the backport won't be too nasty,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-795681231,795681231,
vasild,2021-03-15 15:27:26,`1310b5460...469da8ca3`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-799510958,799510958,
vasild,2021-03-24 15:35:19,"`469da8ca3...4efa5e73b`: address review suggestions, remove the release notes that were removed before but sneaked back in one of the updates",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-805928003,805928003,
MarcoFalke,2021-04-02 17:41:09,"@vasild I've split up the unit tests from this pull, since they are unrelated to changes here (They are checking functionality that already works just fine on master). See #21571. The benefit is that this pull can focus on the disk serialization changes only. I hope you don't mind and maybe can leave a (Concept) (N)ACK.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-812635126,812635126,
MarcoFalke,2021-04-06 08:27:28,Rebase should be easy now `git rebase --skip`,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-813933912,813933912,
vasild,2021-04-06 09:00:08,"`4efa5e7...03239a3ab`: rebase due to conflicts, remove 3 commits from this PR that were already merged via https://github.com/bitcoin/bitcoin/pull/21571.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-813955853,813955853,
laanwj,2021-04-16 05:15:12,"Moving milestone to 0.21.2. We'd like to do 0.21.1 soon, and even though this may be ready for merge soon, it seems like a risky thing to rush into a point release.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-820911383,820911383,
vasild,2021-04-19 14:59:45,`03239a3ab...aa90a7d46`: address suggestions,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-822536616,822536616,
vasild,2021-04-20 15:55:14,`aa90a7d46...7e399e2de`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-823396970,823396970,
vasild,2021-04-20 15:58:25,"`7e399e2de...08f4f98ea`: address some suggestions; force saving on disk if we loaded just the old `banlist.dat` so that we create the new `banlist.json` this way, without waiting for mods to the list in order to flush it to disk.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-823399313,823399313,
jonatack,2021-04-24 21:27:26,"ACK 08f4f98ea2cdc3fbff5c9e21870296106430e468 with the suggestion to perhaps remove any leftover (e.g. ""::/0"") addresses from mis-saved addrv2 ban entries when creating the json file and add a test. They may eventually expire--or not, depending on the duration--so it might not be a bad idea to remove any that are identifiable. Tested on master that an existing banlist.dat containing IPv4/6 and torv",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-826155791,826155791,
vasild,2021-04-26 08:00:07,`08f4f98ea...fe4aafda5`: apply doc and style suggestions,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-826603992,826603992,
vasild,2021-04-26 08:06:06,"> ... remove any leftover (e.g. ""::/0"") addresses from mis-saved addrv2 ban entries when creating the json file ...\n\nHmm. Could there be real, manually added, no-mistake, ban entries like `::/0`? Somebody has banned deliberately the entire IPv6 network?",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-826608515,826608515,
jonatack,2021-04-26 08:45:21,"> > ... remove any leftover (e.g. ""::/0"") addresses from mis-saved addrv2 ban entries when creating the json file ...\n> \n> Hmm. Could there be real, manually added, no-mistake, ban entries like `::/0`? Somebody has banned deliberately the entire IPv6 network?\n\nGood question. Would anyone do that. OTOH, have people been banning tor v3 addresses yet. Possible. IDK if it's an edge case worth ",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-826638612,826638612,
DrahtBot,2021-05-03 17:25:49,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @harding @hebasto have been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-831409748,831409748,
vasild,2021-05-18 14:59:04,`fe4aafda51...13c681161c`: address review suggestions,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-843245302,843245302,
vasild,2021-05-18 15:05:07,"> this is the behavior I'd like to point to and make sure it's ok ... Node 1 deletes banlist.json to clear all bans ... The ban comes back from banlist.dat\n\nYes, this is how it is supposed to work. The operator should have seen that there are two files `banlist.dat` and `banlist.json` and deleted both or consulted `doc/files.md`. We don't automatically delete `banlist.dat` after creating `banl",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-843250170,843250170,
dhruv,2021-05-18 15:55:09,re-ACK `13c6811`,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-843290442,843290442,
jonatack,2021-05-19 14:41:58,"Diff-review re-ACK 13c681161c4a3f2a2acd6d812c1360e0ad94019c per ` git diff 08f4f98 13c6811` and  `git range-diff d4c409c 08f4f98 13c6811`\n\nOnly non-showstopping mini-regret is the Python ""not in"" not updated while re-touching to conform to PEP8 per our functional test guidelines.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-844172348,844172348,
MarcoFalke,2021-05-24 10:00:11,"Sorry, this had two ACKs and I didn't see the conflict.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-846931030,846931030,
vasild,2021-05-24 12:13:56,"`13c681161c...88b843e49c`: rebase due to conflicts\n\n<details>\n<summary>Release notes</summary>\n\n```diff\n--- a/doc/release-notes.md\n+++ b/doc/release-notes.md\n@@ -182,12 +182,21 @@ RPC\n   - `verifymessage` now returns RPC_TYPE_ERROR (-3) if the passed signature\n     is malformed. Previously returned RPC_INVALID_ADDRESS_OR_KEY (-5).\n\n Tests\n -----\n\n+Files\n+-----\n+\",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-847001828,847001828,
hebasto,2021-05-24 13:07:27,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-847030339,847030339,
vasild,2021-06-14 12:02:35,"`88b843e49c...4b52c7234f`: rebase due to conflicts\n\nrelease notes in https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-847001828",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-860629340,860629340,
jonatack,2021-06-14 15:22:11,"> - The list of banned hosts and networks (via `setban` RPC) is now saved on disk\n>   in JSON format in `banlist.json` instead of `banlist.dat`. `banlist.dat` is\n>   only read on startup if `banlist.json` is not present. Changes are only\n>   written to the new `banlist.json`. A future version of Bitcoin Core may\n>   completely ignore `banlist.dat`. (#20966)\n\nRegarding the release note,",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-860772236,860772236,
sipa,2021-06-15 03:59:15,"utACK 4b52c7234f3c2e3067d7d6c6fd7ebf2b96bb8a45\n\nI think it would be useful to make the code ignore future version numbers, so it will not completely wipe banlists on downgrading (from future versions that introduce additional features to this format), but that can be done later.",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-861150204,861150204,
vasild,2021-06-21 13:31:40,`4b52c7234f...5fcc96457d`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-865035904,865035904,
vasild,2021-06-21 13:33:26,`5fcc96457d...bb719a08db`: minor tweaks in `rpc_setban.py` - log a message and use `node` instead of `self.nodes[1]`,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-865037181,865037181,
jonatack,2021-06-21 14:10:24,Code review re-ACK bb719a08db173a753984a04534de6f148b87b17a per `git range-diff 6a67366 4b52c72 bb719a0`,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-865064475,865064475,
achow101,2021-06-22 22:43:14,Code Review ACK bb719a08db173a753984a04534de6f148b87b17a,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-866384961,866384961,
MarcoFalke,2021-06-23 08:08:42,"Removed from backport, but if someone wants to backport, it will need to be done together with https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-866610187",https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-866625710,866625710,
MarcoFalke,2021-06-23 08:15:03,Added to release notes: https://github.com/bitcoin-core/bitcoin-devwiki/wiki/22.0-Release-Notes-draft/_history,https://github.com/bitcoin/bitcoin/pull/20966#issuecomment-866630110,866630110,
MarcoFalke,2021-01-20 12:10:31,"Please add the release notes to https://github.com/bitcoin-core/bitcoin-devwiki/wiki/%2320852-Release-notes-snippet\n\nOtherwise they will have to be removed here after merge, then added to the `0.21` branch. (Release notes are only added to the point releases, not the next major version that also includes those fixes)",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r560912563,560912563,doc/release-notes.md
vasild,2021-01-20 12:49:05,I guess after/if this PR is merged?,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r560934560,560934560,doc/release-notes.md
MarcoFalke,2021-03-20 08:45:11,"8372aad9cc01774e981edee1dd8822a31ef6ea18\n\nis the goal still to backport this? If yes, it could make sense to use C++11",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r598083776,598083776,src/addrdb.cpp
MarcoFalke,2021-03-20 08:50:00,"8372aad9cc01774e981edee1dd8822a31ef6ea18\n\n* Any reason to prepend the function name? This is already done by -logfunctionnames\n* Any reason to use `error` here, but `std::runtime_error` if a field is missing?\n* It would be better to leave the logging to the caller and not mix logging responsibility between a utility function and the caller object",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r598084377,598084377,src/addrdb.cpp
MarcoFalke,2021-03-20 09:00:47,"same commit:\n\n* It seems the caller ignores the return code, so calling this ERROR seems confusing\n* No longer need `__func__`",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r598085409,598085409,src/addrdb.cpp
MarcoFalke,2021-03-20 09:03:43,"same commit:\n\n* The caller will be ""Recreating the banlist database"", so calling this ERROR seems confusing\n* `__func__` ;)",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r598085607,598085607,src/addrdb.cpp
MarcoFalke,2021-03-20 09:03:55,same ;),https://github.com/bitcoin/bitcoin/pull/20966#discussion_r598085630,598085630,src/addrdb.cpp
MarcoFalke,2021-03-20 09:11:33,"same commit:\n\nI don't understand this line. There shouldn't be any reason this instance will ever write a banlist.dat file.\n\nAlso, to make the fuzz test more useful, it should probably *create* a banlist.dat file. Extra points for creating a corrupted one. With extra bonus points for passing one in without disk access.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r598086423,598086423,src/test/fuzz/banman.cpp
vasild,2021-03-24 15:37:09,"My understanding is that this deserves a backport because it would allow storing torv3 addresses in the banlist on disk. Not super important though.\n\nSwitched to C++11.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r600601565,600601565,src/addrdb.cpp
vasild,2021-03-24 15:39:46,"You probably mean `-logsourcelocations` instead of `-logfunctionnames`.\n\nRemoved `__func__`. Changed this function to throw an exception for all errors and return `void`. Now it does not do any logging - just bubble up a detailed error message to the callers via the exception.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r600604218,600604218,src/addrdb.cpp
vasild,2021-03-24 15:42:21,"The caller of `CBanDB::Write()` does not ignore its return code? If you mean the return code of `error()` itself - this is because we want to log all of the errors (possibly more than one) before returning `false`.\n\nRemoved `__func__`.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r600607040,600607040,src/addrdb.cpp
vasild,2021-03-24 15:44:14,"I think it is ok to see something like the following in the log:\n```\nERROR: ... banlist foo ...\nERROR: ... banlist bar ...\nRecreating the banlist database\n```\n\nRemoved `__func__`.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r600609034,600609034,src/addrdb.cpp
vasild,2021-03-24 15:44:51,Removed `__func__`.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r600609538,600609538,src/addrdb.cpp
vasild,2021-03-24 15:47:45,"Right, removed the `fs::remove` calls and replaced them with a creation of a corrupted or inaccessible banlist file.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r600612275,600612275,src/test/fuzz/banman.cpp
MarcoFalke,2021-04-17 10:03:59,"User will report bugs if they see `ERROR`. For example, http://www.erisian.com.au/bitcoin-core-dev/log-2021-02-13.html#l-296",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r615236159,615236159,src/addrdb.cpp
MarcoFalke,2021-04-17 10:11:18,Can remove `__func__` while touching this line?,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r615236932,615236932,src/banman.cpp
vasild,2021-04-19 14:59:53,Removed,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r615925693,615925693,src/banman.cpp
vasild,2021-04-19 15:05:44,"I changed it to avoid the word ""error"". I don't think those errors should be hushed - those are errors from loading the file and we already checked that the file exists. So may include something like ""json parse error"", ""io error"", ""permission denied"".\n\nIn general I don't think we should avoid using ""error"" or use it just for cases where we have detected a bug in the program. Messages like ""er",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r615930585,615930585,src/addrdb.cpp
MarcoFalke,2021-04-19 19:00:11,":facepalm: Oh wait, I might have missed that this is actually an error. Then it is fine to mention the word ""error""",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616099538,616099538,src/addrdb.cpp
promag,2021-04-19 20:47:46,"aa90a7d46a506b26a6016d1171f7ddae809e9c99\n\nnit, here and below, add a comment on why the check is repeated after the restart.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616166735,616166735,test/functional/rpc_setban.py
promag,2021-04-19 20:58:44,"51909ded1e8b26158f8d36cfe323ac72feac1d78\n\nnit, `fs::path(ban_list_path).replace_extension(""dat"")`.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616173334,616173334,src/addrdb.cpp
promag,2021-04-19 22:11:19,"51909ded1e8b26158f8d36cfe323ac72feac1d78\n\nA comment here would be nice. Or maybe just take the next suggestion so it's clear what this is doing.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616211147,616211147,src/addrdb.cpp
promag,2021-04-19 22:19:17,"51909ded1e8b26158f8d36cfe323ac72feac1d78\n\nMaybe migrate on 1st run?\n```diff\n bool CBanDB::Read(banmap_t& banSet)\n {\n     if (!fs::exists(m_banlist_json)) {\n-        return DeserializeFileDB(m_banlist_dat, banSet);\n+        if (!DeserializeFileDB(m_banlist_dat, banSet)) {\n+            return false;\n+        }\n+        // log something\n+        Write(banSet);\n+        retur",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616214439,616214439,src/addrdb.cpp
vasild,2021-04-20 15:59:23,"I am leaving it as is, I don't like `error()` too much.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616826373,616826373,src/addrdb.cpp
vasild,2021-04-20 15:59:46,Added a comment.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616826715,616826715,test/functional/rpc_setban.py
vasild,2021-04-20 16:01:15,"I find `replace_extension()` a bit confusing in this case because we know that there is no extension, so we are not replacing anything (I know it will do the right thing, but still).",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616827889,616827889,src/addrdb.cpp
vasild,2021-04-20 16:01:27,Added some comments.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616828047,616828047,src/addrdb.cpp
vasild,2021-04-20 16:03:30,"Migrate on first run - yes. But `Read()` calling `Write()` seems like some anti-pattern to me. Instead I signal from `Read()` that the list needs re-flushing, so that the caller takes care of it.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616829628,616829628,src/addrdb.cpp
promag,2021-04-20 16:20:39,Good point. Maybe add a `CBanDB::MigrateAndRead` where calling `Write()` isn't so bad.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r616843518,616843518,src/addrdb.cpp
vasild,2021-04-21 08:13:44,Not necessary with the latest changes.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r617300060,617300060,src/addrdb.cpp
jonatack,2021-04-23 17:04:16,"s/would/will/\n\nSuggested version all in present tense:\n```suggestion\n`./`               | `banlist.dat`         | Stores the addresses/subnets of banned nodes (deprecated); `bitcoind` or `bitcoin-qt` no longer save the banlist to this file, but read it on startup if `banlist.json` is not present.\n```\n------\nif you retouch, in the same commit and file would you please touch up:\n```d",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r619372413,619372413,doc/files.md
jonatack,2021-04-23 17:08:45,"08f4f98ea nit, drop the outer parens on the 4 added asserts and add a second newline at line 72 (per pycodestyle, ""E305 expected 2 blank lines after class or function definition, found 1"") \n\n(the black linter, e.g. `apt install black && black test/functional/rpc_setban.py` will do both of these for you)",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r619375121,619375121,test/functional/rpc_setban.py
vasild,2021-04-26 08:01:07,Done. Put that last change in a separate commit.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620060270,620060270,doc/files.md
vasild,2021-04-26 08:03:17,Done. Since the surrounding code uses `assert()` I added the new code with `assert()` for consistency and then removed all `()` from asserts in the entire file in a separate commit.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620061718,620061718,test/functional/rpc_setban.py
jonatack,2021-04-26 08:39:23,"fe4aafda512483e863b23cfad403509b1604555c drive-by nit, while touching lines 25 and 46 in this commit (maybe just make it a PEP8/black linter commit)\n\n`$ pycodestyle test/functional/rpc_setban.py`\n\n    test/functional/rpc_setban.py:25:16: E713 test for membership should be 'not in'\n    test/functional/rpc_setban.py:46:16: E713 test for membership should be 'not in'\n",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620088086,620088086,test/functional/rpc_setban.py
vasild,2021-04-26 09:15:12,"Going to leave it as is because none of ""black"" or ""pycodestyle"" is mentioned in `doc/`. Don't want to bother other reviewers with too big and unrelated changes to this PR.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620116268,620116268,test/functional/rpc_setban.py
jonatack,2021-04-26 09:19:27,"Ok. For info, pycodestyle is PEP8 that we follow per doc/test/functional/README.md\n\nhttps://pypi.org/project/pycodestyle",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620119397,620119397,test/functional/rpc_setban.py
jonatack,2021-04-26 09:21:12,"(ah, it was renamed from PEP8 for this reason https://github.com/PyCQA/pycodestyle/issues/466)",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620120674,620120674,test/functional/rpc_setban.py
vasild,2021-04-26 09:37:44,"`lint-python.sh` is happy with the current `rpc_setban.py`:\n\n```sh\n$ ./test/lint/lint-python.sh\ntest/functional/test_runner.py:42: error: Module has no attribute ""getwindowsversion""\nFound 1 error in 1 file (checked 199 source files)\n$\n```",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620133277,620133277,test/functional/rpc_setban.py
jonatack,2021-04-26 10:09:35,"If adding new code or retouching old code for style reasons, I'd try to make it conform (https://www.python.org/dev/peps/pep-0008/#other-recommendations, https://www.flake8rules.com/rules/E713.html for ""not in"") because reviewers are often picky about it. I also wouldn't add a commit that does a one-word grammar change because otherwise someone will invariably ask me to squash the commit. But ever",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r620157123,620157123,test/functional/rpc_setban.py
dhruv,2021-05-12 20:29:10,Would it be worthwhile renaming `(Read)WriteSettings()` to something like `(Read)WriteJsonObjFile()`?,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r631375563,631375563,src/addrdb.cpp
dhruv,2021-05-12 20:34:32,"Can the string ""address"" be a file-level `const` and re-used in `BanMapFromJson()`?",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r631378639,631378639,src/addrdb.cpp
dhruv,2021-05-12 21:06:06,Is it useful to sanity check `version` and `banned_until` as well?,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r631402209,631402209,src/addrdb.cpp
dhruv,2021-05-13 22:39:38,"> only set if `true` is returned.\n\nI _think_ it's possible for it to be set and yet the function return false if `DeserializeFileDB` returns `false` due to an invalid or missing file.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r632146518,632146518,src/addrdb.h
dhruv,2021-05-13 22:54:26,Is it useful to remove `banlist.dat` if it does exist at this point? Or a log to inform the user that they can remove it? Might be confusing to have two files both claiming to be banlists.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r632151649,632151649,src/addrdb.cpp
dhruv,2021-05-13 23:48:15,"Extra ""/""",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r632169018,632169018,src/banman.h
dhruv,2021-05-14 04:52:35,Is there a way to add these fuzz tests and not invalidate the existing seeds?,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r632279391,632279391,src/test/fuzz/banman.cpp
dhruv,2021-05-14 18:05:53,I know this is a resolved comment. Just leaving my +1 for `assert x not in y` being easier than `not assert x in y`,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r632705279,632705279,test/functional/rpc_setban.py
vasild,2021-05-18 14:29:05,"I am not sure. `version` and `banned_until` are not sanity-checked when reading `banlist.dat`, so I do the same with `banlist.json` as the purpose of this PR is to switch the format, not introduce new checks.\n\nMaybe worth considering separately.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634439439,634439439,src/addrdb.cpp
vasild,2021-05-18 14:43:01,"I deliberately avoid removing `banlist.dat` automatically because that would prevent downgrading to an older version (and keeping the ban list).\n\nSomething like this may be a good idea:\n\n```diff\n--- i/src/addrdb.cpp\n+++ w/src/addrdb.cpp\n@@ -185,12 +185,18 @@ CBanDB::CBanDB(fs::path ban_list_path)\n }\n\n bool CBanDB::Write(const banmap_t& banSet)\n {\n     std::vector<std::strin",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634452821,634452821,src/addrdb.cpp
vasild,2021-05-18 14:46:28,"The 3 slashes make it a [doxygen comment](https://www.doxygen.nl/manual/docblocks.html#specialblock) for inclusion in https://doxygen.bitcoincore.org/.\n\n",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634455991,634455991,src/banman.h
vasild,2021-05-18 14:51:26,I don't see how - we must first write the file or set `banlist_file` and only after that execute the actual test.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634460741,634460741,src/test/fuzz/banman.cpp
vasild,2021-05-18 14:53:35,"Right, reworded the comment.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634462854,634462854,src/addrdb.h
vasild,2021-05-18 14:54:00,"Yes, good idea! Done.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634463232,634463232,src/addrdb.cpp
vasild,2021-05-18 14:57:50,I think either one is fine. Renaming is out of the scope of this PR.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634466857,634466857,src/addrdb.cpp
jonatack,2021-05-18 15:29:39,"Yes, and doc/developer-notes.md also provides an example with /// iirc.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634498403,634498403,src/banman.h
dhruv,2021-05-18 15:48:44,Oh. Thanks for teaching.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634514956,634514956,src/banman.h
dhruv,2021-05-18 15:51:27,Removing `banlist.dat` one major version later seems like a fair choice!,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634517262,634517262,src/addrdb.cpp
dhruv,2021-05-18 15:52:34,Perhaps with a separate fuzz test? I'm a fuzzing n00b though. We should ask @MarcoFalke and @practicalswift!,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634518185,634518185,src/test/fuzz/banman.cpp
jonatack,2021-05-19 14:36:48,"Not a fan of doing this for a short string like this that is used only twice, but it's not a blocker.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r635305449,635305449,src/addrdb.cpp
jonatack,2021-05-24 13:09:04,"f371273 could be done in a follow-up along with `not_in`, but if you retouch\n```diff\n--- a/test/functional/rpc_setban.py\n+++ b/test/functional/rpc_setban.py\n@@ -56,18 +56,17 @@ class SetBanTests(BitcoinTestFramework):\n         assert self.is_banned(node, tor_addr)\n         assert not self.is_banned(node, ip_addr)\n \n-        # Test that the ban list is preserved through restart.\n-",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r637932195,637932195,test/functional/rpc_setban.py
hebasto,2021-05-24 13:22:22,"@vasild \nIn your opinion, when will be an appropriate moment to move the `banlist.dat` description into the ""Legacy subdirectories and files"" subsection?",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r637940462,637940462,doc/files.md
promag,2021-05-24 13:24:41,See https://github.com/bitcoin/bitcoin/pull/20966#discussion_r634452821.,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r637941953,637941953,doc/files.md
vasild,2021-05-24 13:26:48,Good question! I am not sure. Either now or in a next release where we completely ignore `banlist.dat`?,https://github.com/bitcoin/bitcoin/pull/20966#discussion_r637943278,637943278,doc/files.md
hebasto,2021-05-24 13:41:58,"As we have https://github.com/bitcoin/bitcoin/blob/88b843e49c84e331e40bfbe249269deaf2a6a2ac/test/functional/rpc_setban.py#L49\n\nwhat are reasons to use `self.nodes[1]`? Did I miss something?",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r637953866,637953866,test/functional/rpc_setban.py
hebasto,2021-05-24 13:42:49,"Oh, I see https://github.com/bitcoin/bitcoin/pull/20966/files#r637932195",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r637954472,637954472,test/functional/rpc_setban.py
vasild,2021-06-21 13:35:41,"Added the log message and changed to `node` in the second one, but left the first one as that line is not modified by this PR.",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r655381856,655381856,test/functional/rpc_setban.py
jonatack,2021-06-21 14:08:40,"Seems that line was added by me (hides) in 39b43298d9c, so I don't mind if you change it :D",https://github.com/bitcoin/bitcoin/pull/20966#discussion_r655410027,655410027,test/functional/rpc_setban.py
