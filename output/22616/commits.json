[
  {
    "sha": "5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTMzZjc2MmQ0NDU1N2ExZTNmMGZmM2MyODBkOGEzYWI5OGUzODY3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-08-03T11:04:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-08-03T11:09:19Z"
      },
      "message": "p2p, rpc: address relay fixups",
      "tree": {
        "sha": "eef58ef0ab9f1c152eaac773c31d237d14cb7c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eef58ef0ab9f1c152eaac773c31d237d14cb7c23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmEJI+oACgkQT1chs9Dj\nkh0FjBAAr573JlmLxVMtrodDPPwYEhhk/WRPb9N38nVg1iFFMXKATR86ibKg7hOc\nfMbmQ4KI5EoZQSYlcRVGGX2d84BUjgFWXuo12lo635OM283DM7Qm16B//pGPK6nj\nZnyeLAQbHbhscCdPeqS6rwhWRa23fjjygBYwZOwV8vpWbATRdgSHyV1psEOk2iMd\nRqiVrBNNRlQ9rAh4v1myRz6VEfUIyzws2zBM4fQuvrXieNqLcXGvaGwQ8MPkcPsL\nRxkRGpMcq6kAIhK4xE6fSelbAZEl6JbKZReEO90KMqRxGjIdNQGUBLzzou/lCqdi\nUGbaHOBxvdS+nuXiwfGvYQVAL9FkGbfJuv5VRHiQg+gJB4mGgQI7493hCOHLZ2yR\nEXMVz4g+3q2yXLnHtzXzw9T7jcL1wXe0X/uULwdS7scFBImF5Vj6HvTXiuxmtO7n\nq+5E0bXAsS0axfj/Ppj3hNAIW2M/ABva0T7Cr/0nTSPm87S0IKUMi6KRj/cstUmr\nM8CF5gr9kuWxtlKf/8uo/N0qkvvAyZrjC5oAb4Wfok3IUVA/HAvvw8RvHhpXGLSl\nSRPTa3Ck3y6fHR+sSRs6tYJjcugqGBml0XBFNz3DWoOKeaJYESvV29TKx4mn8Uhr\nRe7lHUF7EFaBLxaYeFiL/3ZuLv+70e1KoypKYd5QsVeEHbT02cc=\n=P0Ky\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPU1D4cWlAavCALi1gzJhdaQQsvedr+kVybrgwgL7hX7CP/wECCT+zfw3BMk\n56I16ajj5WII8CDR2KKMoQiXYnHIrzo5AFXhmvqn4wbHWbXMPawYBF67wQjwIMne\nHK6KWEHBNymAlUcbGwaAHTuDgHEOxk6X/JWPozTACPEEYQkj7PAI34EPXZESaNYA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BBbcNCrpLqhQVH8X3HntZj6CPAgLyz/X3mPOMuJUdTfPKOhgI23kJj/\nXbdCl8QhL4Yt+MUI8SDQS/6Qngj7sdZs9yL3kvb5oR7sZlfo6Xn/9XN3ZddwZQjw\nIOTJByj93G1cFsjSd7yra6WhU6YZ8vJmpnchmDbJ3kxDCPEEYQkj7PAIUHPlw/3g\nZbsAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2Fs\nbC5jb23/8BBodVAJyJXi6FRjpEVoQt7iCPEgdb5ov7masKmpPx8xivUMdGV48mz8\nZdKotLlbzd85GVEI8QRhCSPr8AjmAbcDTXgmhgCD3+MNLvkMjiMiaHR0cHM6Ly9i\ndGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQgHYwQIKb4FFFnAgyD7q1NQjwIPrl\nitnAoOKQ+P+Bp8u/hpOObScAi5JWBFAbFbguc6C8CPAgPMeCNMqb5fqDKWgi9J8M\nxTeWHw0HQz2qUUzqBI/ZtscI8CDS2aBvZ2aVgeztM9k0W9oI0MwPRm9VwRCN6mmp\n7iGwMwjxBGEJI+zwCAx1BzgiIj3BAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0\nYy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree eef58ef0ab9f1c152eaac773c31d237d14cb7c23\nparent 87257d860eebedcdeec5eae974883632c9fb5275\nauthor Jon Atack <jon@atack.com> 1627988659 +0200\ncommitter Jon Atack <jon@atack.com> 1627988959 +0200\n\np2p, rpc: address relay fixups\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87257d860eebedcdeec5eae974883632c9fb5275",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87257d860eebedcdeec5eae974883632c9fb5275",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87257d860eebedcdeec5eae974883632c9fb5275"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3a85e99a5fb71e1fd854f87655e226366bedd148",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
        "patch": "@@ -652,7 +652,7 @@ class PeerManagerImpl final : public PeerManager\n      *  @return   True if address relay is enabled with peer\n      *            False if address relay is disallowed\n      */\n-    bool SetupAddressRelay(CNode& node, Peer& peer);\n+    bool SetupAddressRelay(const CNode& node, Peer& peer);\n };\n } // namespace\n \n@@ -4461,7 +4461,7 @@ class CompareInvMempoolOrder\n };\n }\n \n-bool PeerManagerImpl::SetupAddressRelay(CNode& node, Peer& peer)\n+bool PeerManagerImpl::SetupAddressRelay(const CNode& node, Peer& peer)\n {\n     // We don't participate in addr relay with outbound block-relay-only\n     // connections to prevent providing adversaries with the additional"
      },
      {
        "sha": "abc9ec3ce34f54d8a23b7dc0214056f95249b2ff",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e33f762d44557a1e3f0ff3c280d8a3ab98e3867/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
        "patch": "@@ -118,7 +118,6 @@ static RPCHelpMan getpeerinfo()\n                             {RPCResult::Type::STR, \"addr\", \"(host:port) The IP address and port of the peer\"},\n                             {RPCResult::Type::STR, \"addrbind\", \"(ip:port) Bind address of the connection to the peer\"},\n                             {RPCResult::Type::STR, \"addrlocal\", \"(ip:port) Local address as reported by the peer\"},\n-                            {RPCResult::Type::BOOL, \"addr_relay_enabled\", \"Whether we participate in address relay with this peer\"},\n                             {RPCResult::Type::STR, \"network\", \"Network (\" + Join(GetNetworkNames(/* append_unroutable */ true), \", \") + \")\"},\n                             {RPCResult::Type::NUM, \"mapped_as\", \"The AS in the BGP route to the peer used for diversifying\\n\"\n                                                                 \"peer selection (only available if the asmap config flag is set)\"},\n@@ -151,6 +150,7 @@ static RPCHelpMan getpeerinfo()\n                             {\n                                 {RPCResult::Type::NUM, \"n\", \"The heights of blocks we're currently asking from this peer\"},\n                             }},\n+                            {RPCResult::Type::BOOL, \"addr_relay_enabled\", \"Whether we participate in address relay with this peer\"},\n                             {RPCResult::Type::ARR, \"permissions\", \"Any special permissions that have been granted to this peer\",\n                             {\n                                 {RPCResult::Type::STR, \"permission_type\", Join(NET_PERMISSIONS_DOC, \",\\n\") + \".\\n\"},\n@@ -202,7 +202,6 @@ static RPCHelpMan getpeerinfo()\n         if (!(stats.addrLocal.empty())) {\n             obj.pushKV(\"addrlocal\", stats.addrLocal);\n         }\n-        obj.pushKV(\"addr_relay_enabled\", statestats.m_addr_relay_enabled);\n         obj.pushKV(\"network\", GetNetworkName(stats.m_network));\n         if (stats.m_mapped_as != 0) {\n             obj.pushKV(\"mapped_as\", uint64_t(stats.m_mapped_as));\n@@ -244,6 +243,7 @@ static RPCHelpMan getpeerinfo()\n                 heights.push_back(height);\n             }\n             obj.pushKV(\"inflight\", heights);\n+            obj.pushKV(\"addr_relay_enabled\", statestats.m_addr_relay_enabled);\n             obj.pushKV(\"addr_processed\", statestats.m_addr_processed);\n             obj.pushKV(\"addr_rate_limited\", statestats.m_addr_rate_limited);\n         }"
      }
    ]
  }
]