[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891764178",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-891764178",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 891764178,
    "node_id": "IC_kwDOABII5841Jz3S",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T11:20:44Z",
    "updated_at": "2021-08-03T11:20:44Z",
    "author_association": "MEMBER",
    "body": "Could use `std::optional` to avoid this stuff in the future?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891764178/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891973456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-891973456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 891973456,
    "node_id": "IC_kwDOABII5841Km9Q",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T16:07:56Z",
    "updated_at": "2021-08-03T16:20:04Z",
    "author_association": "MEMBER",
    "body": "> Could use `std::optional` to avoid this stuff in the future?\r\n\r\nSure, will have a look. Might be better as a separate refactoring patch?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891973456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892008196",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892008196",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892008196,
    "node_id": "IC_kwDOABII5841KvcE",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T16:57:58Z",
    "updated_at": "2021-08-03T16:57:58Z",
    "author_association": "MEMBER",
    "body": "good catch on the `statestats` conditional @jonatack! thanks for fixing :) \r\nACK 5e33f762d4\r\n\r\n\r\nRE: \r\n>> Could use std::optional to avoid this stuff in the future?\r\n\r\n> Sure, will have a look\r\n\r\ngood idea @MarcoFalke! FYI @jonatack I'm also going to take a look. having compiler catch this error seems like a good move because clearly I missed it \ud83d\ude1b ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892008196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892087117",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892087117",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892087117,
    "node_id": "IC_kwDOABII5841LCtN",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T18:58:17Z",
    "updated_at": "2021-08-03T18:58:17Z",
    "author_association": "MEMBER",
    "body": "@amitiuttarwar sgtm, go for it, happy to review!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892087117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892142844",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892142844",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892142844,
    "node_id": "IC_kwDOABII5841LQT8",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T20:27:17Z",
    "updated_at": "2021-08-03T20:27:17Z",
    "author_association": "MEMBER",
    "body": "took a look, unfortunately I don't think having `GetNodeStateStats` return an `std::optional<CNodeStateStats>` increases the compiler guarantee. we still have to manually check for presence.\r\n\r\n<details><summary>example of accessing fields of a std::nullopt </summary>\r\n\r\n```\r\nstruct NewStruct {\r\n    int a;\r\n    int b;\r\n};\r\n\r\nstd::optional<NewStruct> GetNodeStateStats() {\r\n    return std::nullopt;\r\n}\r\n\r\nint main()\r\n{\r\n    std::optional<NewStruct> fStateStats = GetNodeStateStats();\r\n    std::cout << fStateStats->a << std::endl;\r\n    std::cout << fStateStats->b << std::endl;\r\n\r\n    return 0;\r\n}\r\n``` \r\n\r\n... compiles fine =\\ \r\n\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892142844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892143892",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892143892",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892143892,
    "node_id": "IC_kwDOABII5841LQkU",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T20:29:02Z",
    "updated_at": "2021-08-03T20:29:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22604](https://github.com/bitcoin/bitcoin/pull/22604) (p2p, rpc, test: address rate-limiting follow-ups by jonatack)\n* [#21515](https://github.com/bitcoin/bitcoin/pull/21515) (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892143892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892173646",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892173646",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892173646,
    "node_id": "IC_kwDOABII5841LX1O",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T21:19:21Z",
    "updated_at": "2021-08-03T21:28:08Z",
    "author_association": "MEMBER",
    "body": "yes...did https://github.com/jonatack/bitcoin/commit/397c33c399685b2ca4fe98de6e975f29f2f3d040 as a warmup, it builds and tests pass, and it seems to be a bit nicer as an interface but doesn't yet do what we're looking for, was thinking to then convert some of the `CNodeStateStats` struct members to std::optional and then maybe use them with `value_or` or something.  ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892173646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892394905",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892394905",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892394905,
    "node_id": "IC_kwDOABII5841MN2Z",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T06:17:04Z",
    "updated_at": "2021-08-04T06:17:04Z",
    "author_association": "MEMBER",
    "body": "Can you explain why this is something we don't want? Surely compilers are happy to compile UB, but that doesn't mean it won't be caught.\r\n\r\nPreviously (returning a pair of `bool` + some type `T`), the only way to catch it is with code review (and maybe tests).\r\n\r\nReturning a `std::optional<T>` instead will allow any of the following to catch it:\r\n\r\n* code review (it is easier because there is a `*` or `->` without corresponding check)\r\n* compiler warning\r\n* valgrind [1]\r\n* static analysis\r\n* tests (maybe also with valgrind)\r\n* something I missed?\r\n\r\n[1]: For example:\r\n\r\n```cpp\r\n#include <optional>\r\n\r\nstruct NewStruct {\r\n  int a;\r\n  int b;\r\n};\r\n\r\nstd::optional<NewStruct> GetNodeStateStats() { return std::nullopt; }\r\n\r\nint main() { return GetNodeStateStats()->a; }\r\n```\r\n\r\n```\r\n==991573== Memcheck, a memory error detector\r\n==991573== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==991573== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info\r\n==991573== Command: ./exe\r\n==991573== \r\n==991573== Syscall param exit_group(status) contains uninitialised byte(s)\r\n==991573==    at 0x4CB2021: _Exit (in /usr/lib64/libc-2.33.so)\r\n==991573==    by 0x4C24C01: __run_exit_handlers (in /usr/lib64/libc-2.33.so)\r\n==991573==    by 0x4C24C9F: exit (in /usr/lib64/libc-2.33.so)\r\n==991573==    by 0x4C0CB7B: (below main) (in /usr/lib64/libc-2.33.so)\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892394905/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892398324",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892398324",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892398324,
    "node_id": "IC_kwDOABII5841MOr0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T06:24:30Z",
    "updated_at": "2021-08-04T06:24:30Z",
    "author_association": "MEMBER",
    "body": "Note that on master it is impossible for valgrind to catch this because the memory is always filled:\r\n\r\n```cpp\r\nstruct CNodeStateStats {\r\n    int nSyncHeight = -1;\r\n    int nCommonHeight = -1;\r\n    int m_starting_height = -1;\r\n    std::chrono::microseconds m_ping_wait;\r\n    std::vector<int> vHeightInFlight;\r\n    uint64_t m_addr_processed = 0;\r\n    uint64_t m_addr_rate_limited = 0;\r\n    bool m_addr_relay_enabled{false};\r\n};\r\n```\r\n\r\nIf it wasn't filled, valgrind detecting it would depend on whether `{}` is used to initialize or not. I.e\r\n\r\n```\r\n  NewStruct ret{};\r\n  GetNodeStateStats(ret);\r\n```\r\n\r\nvs\r\n\r\n```\r\n  NewStruct ret;\r\n  GetNodeStateStats(ret);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892398324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892407662",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892407662",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892407662,
    "node_id": "IC_kwDOABII5841MQ9u",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T06:44:22Z",
    "updated_at": "2021-08-04T07:19:32Z",
    "author_association": "MEMBER",
    "body": "For my part, I wasn't sure if the direction started with in https://github.com/jonatack/bitcoin/commit/397c33c399685b2ca4fe98de6e975f29f2f3d040 was what you had in mind, versus for instance also or starting with making the struct member(s) std::optional themselves, or something else.\r\n\r\nIt seems to be a separate refactoring from this small fix-up, but good to clarify the direction.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892407662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892551560",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892551560",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892551560,
    "node_id": "IC_kwDOABII5841M0GI",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T10:36:11Z",
    "updated_at": "2021-08-04T10:36:11Z",
    "author_association": "MEMBER",
    "body": "I think one way to improve this would be to combine `CNodeStats` and `CNodeStateStats` into a single struct, and change the individual fields that are populated by net_processing to be `std::optional<>`s. The rpc code could then populate the univalue object as follows:\r\n\r\n```c++\r\n        // ...\r\n        obj.pushKV(\"inbound\", stats.fInbound);\r\n        obj.pushKV(\"bip152_hb_to\", stats.m_bip152_highbandwidth_to);\r\n        obj.pushKV(\"bip152_hb_from\", stats.m_bip152_highbandwidth_from);\r\n        if (stats->m_starting_height) obj.pushKV(\"startingheight\", stats->m_starting_height.value());\r\n        if (stats->nSyncHeight) obj.pushKV(\"synced_headers\", stats->nSyncHeight.value());\r\n        // etc ...\r\n```\r\n\r\nThat requires quite a bit of moving code around, since both net and net_processing would have to include the header that defines the combined stats struct. I made a start on that work, but it's very out of date: https://github.com/jnewbery/bitcoin/tree/2021-01-stats",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892551560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892552525",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892552525",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892552525,
    "node_id": "IC_kwDOABII5841M0VN",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T10:37:55Z",
    "updated_at": "2021-08-04T10:37:55Z",
    "author_association": "MEMBER",
    "body": "ACK 5e33f762d44557a1e3f0ff3c280d8a3ab98e3867",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892552525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892765378",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22616#issuecomment-892765378",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22616",
    "id": 892765378,
    "node_id": "IC_kwDOABII5841NoTC",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T15:42:15Z",
    "updated_at": "2021-08-04T15:42:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892765378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]