[
  {
    "sha": "d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzg5MDBjYzFiYjE4OGEyOWRmYjIzYjFmNDFiMDBmMzVjZWI2OWY3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-08-30T23:11:12Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-09-09T10:36:04Z"
      },
      "message": "fix some cosmetic glitches in the codebase\n\n- rename URL into URI in paymentserver where correct\n- add some missing Qt-coding-stuff in paymentserver\n- change QSpinBox to QLineEdit as base for BitcoinAmountField in .ui files\n  (as this is the result when converting the BAF back into base)\n- remove some c_str() and replace with QString::fromStdString()\n- remove several new-lines\n- remove unneeded spaces\n- indentation fixes",
      "tree": {
        "sha": "4d17c023e872e61a6011ab5fd9b92a682dd3f716",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d17c023e872e61a6011ab5fd9b92a682dd3f716"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "4c723841e25650f045ed55b1e6a619d6d43398d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c723841e25650f045ed55b1e6a619d6d43398d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c723841e25650f045ed55b1e6a619d6d43398d5"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 33,
      "deletions": 37
    },
    "files": [
      {
        "sha": "9eb4cf59687257748b9d92c9fc09bb1f73af1023",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -4,7 +4,7 @@ suites:\n - \"lucid\"\n architectures:\n - \"i386\"\n-packages: \n+packages:\n - \"mingw32\"\n - \"faketime\"\n - \"zip\""
      },
      {
        "sha": "87c6e270720e2cedcbf08a62adaa7846aa085996",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -778,7 +778,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n                 if (!VerifyDB(GetArg(\"-checklevel\", 3),\n-                              GetArg( \"-checkblocks\", 288))) {\n+                              GetArg(\"-checkblocks\", 288))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n                 }"
      },
      {
        "sha": "89761dc2b3ab53877b2d8ed8bfd567e86513631e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -2047,8 +2047,8 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     reverse(vConnect.begin(), vConnect.end());\n \n     if (vDisconnect.size() > 0) {\n-        printf(\"REORGANIZE: Disconnect %\"PRIszu\" blocks; %s..\\n\", vDisconnect.size(), pfork->GetBlockHash().ToString().c_str());\n-        printf(\"REORGANIZE: Connect %\"PRIszu\" blocks; ..%s\\n\", vConnect.size(), pindexNew->GetBlockHash().ToString().c_str());\n+        printf(\"REORGANIZE: Disconnect %\"PRIszu\" blocks; %s...\\n\", vDisconnect.size(), pfork->GetBlockHash().ToString().c_str());\n+        printf(\"REORGANIZE: Connect %\"PRIszu\" blocks; ...%s\\n\", vConnect.size(), pindexNew->GetBlockHash().ToString().c_str());\n     }\n \n     // Disconnect shorter branch"
      },
      {
        "sha": "2b7671f20947d43df3df58f992236db9afa375bf",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -16,6 +16,7 @@ AskPassphraseDialog::AskPassphraseDialog(Mode mode, QWidget *parent) :\n     fCapsLock(false)\n {\n     ui->setupUi(this);\n+\n     ui->passEdit1->setMaxLength(MAX_PASSPHRASE_SIZE);\n     ui->passEdit2->setMaxLength(MAX_PASSPHRASE_SIZE);\n     ui->passEdit3->setMaxLength(MAX_PASSPHRASE_SIZE);"
      },
      {
        "sha": "ad8e0d618aed8717d9d1756217be876db36223b7",
        "filename": "src/qt/csvmodelwriter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/csvmodelwriter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/csvmodelwriter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.cpp?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -85,4 +85,3 @@ bool CSVModelWriter::write()\n \n     return file.error() == QFile::NoError;\n }\n-"
      },
      {
        "sha": "1e4335c6458a531314567b227b26847e343b2400",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -461,7 +461,7 @@\n  <customwidgets>\n   <customwidget>\n    <class>BitcoinAmountField</class>\n-   <extends>QSpinBox</extends>\n+   <extends>QLineEdit</extends>\n    <header>bitcoinamountfield.h</header>\n   </customwidget>\n   <customwidget>"
      },
      {
        "sha": "1cec9066f88a3ddf5ac9f7cf56eee48f1c30c012",
        "filename": "src/qt/forms/qrcodedialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/forms/qrcodedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/forms/qrcodedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/qrcodedialog.ui?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -186,7 +186,7 @@\n  <customwidgets>\n   <customwidget>\n    <class>BitcoinAmountField</class>\n-   <extends>QSpinBox</extends>\n+   <extends>QLineEdit</extends>\n    <header>bitcoinamountfield.h</header>\n   </customwidget>\n  </customwidgets>"
      },
      {
        "sha": "f6a898ff7ca99cf83f7d2a1940b37813baac7682",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -80,7 +80,7 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n         return false;\n     }\n     else {\n-        qDebug() << \"PaymentRequestPlus::getMerchant : Payment request: unknown pki_type \" << paymentRequest.pki_type().c_str();\n+        qDebug() << \"PaymentRequestPlus::getMerchant : Payment request: unknown pki_type \" << QString::fromStdString(paymentRequest.pki_type());\n         return false;\n     }\n \n@@ -152,7 +152,7 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n         // Valid cert; check signature:\n         payments::PaymentRequest rcopy(paymentRequest); // Copy\n         rcopy.set_signature(std::string(\"\"));\n-        std::string data_to_verify;                 // Everything but the signature\n+        std::string data_to_verify;                     // Everything but the signature\n         rcopy.SerializeToString(&data_to_verify);\n \n         EVP_MD_CTX ctx;"
      },
      {
        "sha": "72f75b42e60b92f00c0e7c51d4b30c699d780f4e",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 24,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -44,8 +44,6 @@\n #include \"wallet.h\"\n #include \"walletmodel.h\"\n \n-using namespace boost;\n-\n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds\n const QString BITCOIN_IPC_PREFIX(\"bitcoin:\");\n const char* BITCOIN_REQUEST_MIMETYPE = \"application/bitcoin-paymentrequest\";\n@@ -73,14 +71,14 @@ static QString ipcServerName()\n     // Append a simple hash of the datadir\n     // Note that GetDataDir(true) returns a different path\n     // for -testnet versus main net\n-    QString ddir(GetDataDir(true).string().c_str());\n+    QString ddir(QString::fromStdString(GetDataDir(true).string()));\n     name.append(QString::number(qHash(ddir)));\n \n     return name;\n }\n \n //\n-// We store payment URLs and requests received before\n+// We store payment URIs and requests received before\n // the main GUI window is up and ready to ask the user\n // to send payment.\n \n@@ -250,8 +248,7 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n     return fResult;\n }\n \n-PaymentServer::PaymentServer(QObject* parent,\n-                             bool startLocalServer) : QObject(parent), saveURIs(true)\n+PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) : QObject(parent), saveURIs(true)\n {\n     // Verify that the version of the library that we linked against is\n     // compatible with the version of the headers we compiled against.\n@@ -286,12 +283,12 @@ PaymentServer::~PaymentServer()\n }\n \n //\n-// OSX-specific way of handling bitcoin uris and\n+// OSX-specific way of handling bitcoin: URIs and\n // PaymentRequest mime types\n //\n bool PaymentServer::eventFilter(QObject *, QEvent *event)\n {\n-    // clicking on bitcoin: URLs creates FileOpen events on the Mac:\n+    // clicking on bitcoin: URIs creates FileOpen events on the Mac:\n     if (event->type() == QEvent::FileOpen)\n     {\n         QFileOpenEvent* fileEvent = static_cast<QFileOpenEvent*>(event);\n@@ -356,13 +353,13 @@ void PaymentServer::handleURIOrFile(const QString& s)\n     if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin:\n     {\n #if QT_VERSION >= 0x050000\n-        QUrlQuery url((QUrl(s)));\n+        QUrlQuery uri((QUrl(s)));\n #else\n-        QUrl url(s);\n+        QUrl uri(s);\n #endif\n-        if (url.hasQueryItem(\"request\"))\n+        if (uri.hasQueryItem(\"request\"))\n         {\n-            QByteArray temp; temp.append(url.queryItemValue(\"request\"));\n+            QByteArray temp; temp.append(uri.queryItemValue(\"request\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n \n@@ -436,9 +433,7 @@ bool PaymentServer::readPaymentRequest(const QString& filename, PaymentRequestPl\n     return request.parse(data);\n }\n \n-bool\n-PaymentServer::processPaymentRequest(PaymentRequestPlus& request,\n-                                     QList<SendCoinsRecipient>& recipients)\n+bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, QList<SendCoinsRecipient>& recipients)\n {\n     if (!optionsModel)\n         return false;\n@@ -493,7 +488,7 @@ PaymentServer::processPaymentRequest(PaymentRequestPlus& request,\n                 // Insecure payments to custom bitcoin addresses are not supported\n                 // (there is no good way to tell the user where they are paying in a way\n                 // they'd have a chance of understanding).\n-                emit reportError(tr(\"Payment request error\"), \n+                emit reportError(tr(\"Payment request error\"),\n                                  tr(\"Insecure requests to custom payment scripts unsupported\"),\n                                  CClientUIInterface::MODAL);\n                 return false;\n@@ -504,8 +499,7 @@ PaymentServer::processPaymentRequest(PaymentRequestPlus& request,\n     return true;\n }\n \n-void\n-PaymentServer::fetchRequest(const QUrl& url)\n+void PaymentServer::fetchRequest(const QUrl& url)\n {\n     QNetworkRequest netRequest;\n     netRequest.setAttribute(QNetworkRequest::User, \"PaymentRequest\");\n@@ -515,8 +509,7 @@ PaymentServer::fetchRequest(const QUrl& url)\n     netManager->get(netRequest);\n }\n \n-void\n-PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipient, QByteArray transaction)\n+void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipient, QByteArray transaction)\n {\n     const payments::PaymentDetails& details = recipient.paymentRequest.getDetails();\n     if (!details.has_payment_url())\n@@ -571,8 +564,7 @@ PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipient, QB\n     }\n }\n \n-void\n-PaymentServer::netRequestFinished(QNetworkReply* reply)\n+void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n     if (reply->error() != QNetworkReply::NoError)\n@@ -617,9 +609,10 @@ PaymentServer::netRequestFinished(QNetworkReply* reply)\n     }\n }\n \n-void\n-PaymentServer::reportSslErrors(QNetworkReply* reply, const QList<QSslError> &errs)\n+void PaymentServer::reportSslErrors(QNetworkReply* reply, const QList<QSslError> &errs)\n {\n+    Q_UNUSED(reply);\n+\n     QString errString;\n     foreach (const QSslError& err, errs) {\n         qDebug() << \"PaymentServer::reportSslErrors : \" << err;"
      },
      {
        "sha": "f9d827204b326d9ba73fa026c504cf9704063fb9",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -36,13 +36,16 @@\n \n class CWallet;\n class OptionsModel;\n+\n+QT_BEGIN_NAMESPACE\n class QApplication;\n class QByteArray;\n class QLocalServer;\n class QNetworkAccessManager;\n class QNetworkReply;\n class QSslError;\n class QUrl;\n+QT_END_NAMESPACE\n \n class PaymentServer : public QObject\n {\n@@ -56,16 +59,16 @@ class PaymentServer : public QObject\n     // will be called so we startup in the right mode.\n     static bool ipcSendCommandLine(int argc, char *argv[]);\n \n-    PaymentServer(QObject* parent, // parent should be QApplication object\n-                  bool startLocalServer=true);\n+    // parent should be QApplication object\n+    PaymentServer(QObject* parent, bool startLocalServer = true);\n     ~PaymentServer();\n \n     // Load root certificate authorities. Pass NULL (default)\n     // to read from the file specified in the -rootcertificates setting,\n     // or, if that's not set, to use the system default root certificates.\n     // If you pass in a store, you should not X509_STORE_free it: it will be\n     // freed either at exit or when another set of CAs are loaded.\n-    static void LoadRootCAs(X509_STORE* store=NULL);\n+    static void LoadRootCAs(X509_STORE* store = NULL);\n \n     // Return certificate store\n     static X509_STORE* getCertStore() { return certStore; }"
      },
      {
        "sha": "d0bd16c1c94a6e7d47786e0fe99ed4cd2b159b7a",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78900cc1bb188a29dfb23b1f41b00f35ceb69f7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=d78900cc1bb188a29dfb23b1f41b00f35ceb69f7",
        "patch": "@@ -522,7 +522,7 @@ inline void SetThreadPriority(int nPriority)\n \n // PRIO_MAX is not defined on Solaris\n #ifndef PRIO_MAX\n-    #define PRIO_MAX 20\n+#define PRIO_MAX 20\n #endif\n #define THREAD_PRIORITY_LOWEST          PRIO_MAX\n #define THREAD_PRIORITY_BELOW_NORMAL    2"
      }
    ]
  }
]