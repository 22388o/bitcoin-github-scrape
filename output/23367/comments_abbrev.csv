S3RK,2021-10-27 07:52:56,Thanks @Xekyo for the feedback on the original idea. cc @achow101 ,https://github.com/bitcoin/bitcoin/pull/23367#issuecomment-952634736,952634736,
DrahtBot,2021-10-27 14:39:10,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23534](https://github.com/bitcoin/bitcoin/pull/23534) (wallet: Allow negtive effective value inputs when subtracting fee",https://github.com/bitcoin/bitcoin/pull/23367#issuecomment-952997298,952997298,
Xekyo,2021-10-28 14:24:14,"As discussed, @achow101 ran his simulation with this modification. It did find 10% more changeless solutions and an overall decrease in fee expenditure, but there were a few outcomes where the final input set that was used to fund transactions caused change output to be created that just exceeded the dust limit. \n\nEdit: I see that you appear to always drop everything below `min_change` to fees",https://github.com/bitcoin/bitcoin/pull/23367#issuecomment-953899056,953899056,
S3RK,2021-10-29 07:00:33,"> Edit: I see that you appear to always drop everything below `min_change` to fees, so we'd have to see how that changes the overall fee, and whether we might still need a limit for the overshoot of BnB inputs. \n\nJust to clarify, dropping to fees behaviour is not changed. I just moved it higher and passed the threshold to coin selection so waste calculation is based on the same tx structure as",https://github.com/bitcoin/bitcoin/pull/23367#issuecomment-954480452,954480452,
