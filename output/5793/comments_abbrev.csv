Diapolo,2015-02-15T15:30:04Z,Hopefully fixed the Travis build and also added the change for Linux (needs testing).\n,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-74421794,74421794,
laanwj,2015-02-18T09:45:20Z,Failing travis on windows\n\n```\n CXX qt/qt_libbitcoinqt_a-guiutil.o\nqt/guiutil.cpp: In function ‘bool GUIUtil::SetStartOnSystemStartup(bool)’:\nqt/guiutil.cpp:610:61: error: cannot convert ‘WCHAR* {aka wchar_t*}’ to ‘TCHAR* {aka char*}’ in initialization\nqt/guiutil.cpp:611:42: error: no matching function for call to ‘QString::toWCharArray(TCHAR*&)’\nqt/guiutil.cpp:611:42: note: candidate is:\n,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-74837457,74837457,
Diapolo,2015-02-18T12:23:14Z,Yeah I already saw this... will need to rework :).\nEdit: Seems like some UNICODE and wchar_t problems...\n,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-74855780,74855780,
Diapolo,2015-02-18T13:58:29Z,Who is able to test this :)?\n,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-74867325,74867325,
Diapolo,2015-02-19T11:04:37Z,"@laanwj I choose the scoped_array, because the other macro wasn't available here. I also updated to your generic approach for testnet/tegtest.\n",https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-75034485,75034485,
laanwj,2015-02-26T16:18:37Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-76207681,76207681,
laanwj,2015-03-03T15:29:39Z,@tykling  can you test this?\n,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-76966861,76966861,
tykling,2015-03-03T15:57:36Z,"I have no means of building this, sorry, but from reviewing the code it appears to do exactly what is should :) Is there somewhere I can download the executable travis built and try that?\n",https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-76972822,76972822,
jonasschnelli,2015-03-05T06:08:35Z,Tested ACK.\nTested `regtest` and `testnet` (parallel).\nCheckbox also reacts correct if testnet/regtest link is already there.\n\nBinaries to test: https://builds.jonasschnelli.ch/pulls/5793/\n\n![bildschirmfoto 2015-03-05 um 07 01 39](https://cloud.githubusercontent.com/assets/178464/6500069/17449410-c306-11e4-802e-dac1b152ee95.png)\n\nAfter restart:\n![bildschirmfoto 2015-03-05 um 07 07 52](htt,https://github.com/bitcoin/bitcoin/pull/5793#issuecomment-77312225,77312225,
laanwj,2015-02-17T05:39:42Z,"You could generalize this by passing the current value of testnet, or even regtest to the link, \n\n``` c++\nstrprintf(""-testnet=%d -regtest=%d"", GetBoolArg(""-testnet""), GetBoolArg(""-regtest""))\n```\n\nNot that I think there is much use in an autostarting regtest instance.\n",https://github.com/bitcoin/bitcoin/pull/5793#discussion_r24794490,24794490,src/qt/guiutil.cpp
laanwj,2015-02-19T09:58:38Z,"If you do keep it like this based on special-casing the network name, make sure that you avoid doing anything if the net is not `main` or `test`\n",https://github.com/bitcoin/bitcoin/pull/5793#discussion_r24976437,24976437,src/qt/guiutil.cpp
laanwj,2015-02-19T10:10:50Z,"We should use RAII here, could be done in various ways. Most obvious is boost::scoped_array, e.g.\n\n```\nscoped_array<TCHAR> args (new TCHAR[strArgs.length() + 1]);\n```\n\nAnother option would be going through std::wstring, e.g.\n\n```\nstd::wstring wstrArgs = strArgs.toStdWString();\nTCHAR *args = W2T(wstrArgs.c_str());\n```\n\nIn this case the manual appending of a NULL byte can be avoided, an",https://github.com/bitcoin/bitcoin/pull/5793#discussion_r24977090,24977090,src/qt/guiutil.cpp
