promag,2020-03-04 11:46:18,"Concept ACK!\n\nThis made me think that we should fail funding if some coin is already locked?",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-594474562,594474562,
Sjors,2020-03-05 09:27:50,"Added a release note.\n\n> This made me think that we should fail funding if some coin is already locked?\n\nMaybe in a separate PR. I also think it's safer for users to explicitly unlock coins before using them.",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595121849,595121849,
promag,2020-03-05 16:11:28,"> I also think it's safer for users to explicitly unlock coins before using them.\n\nThe unspent locking was done to deal with concurrent clients and so a client shouldn't take the decision to unlock a coin so lightly - it might screw with a concurrent funding. This is a possible use case and for this reason the user should be able to lock all or nothing IMO.\n\n> Maybe in a separate PR\n\n~",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595311493,595311493,
Sjors,2020-03-06 10:28:12,">  the lock-an-already-locked-coin-and-ignore behavior\n\nNot sure what you mean. This PR can potentially lock a coin that's already locked, but why is that a problem? This PR does not ignore new things.  ",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595705018,595705018,
promag,2020-03-06 11:09:50,The problem is that you might screw with a concurrent funding. When you lock a coin you should expect that it won't be used by others.,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595720834,595720834,
Sjors,2020-03-06 13:30:58,"If a concurrent wallet consumer uses manual coin selection, I don't think this PR makes their problem worse; we were already ignoring any lock they had. If it uses automatic automatic coin selection then this PR has no impact.",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595768306,595768306,
Sjors,2020-03-06 15:11:08,After [IRC discussion](http://www.erisian.com.au/bitcoin-core-dev/log-2020-03-06.html#l-288) I changed this PR to honour locks for manually selected coins. ,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595811344,595811344,
DrahtBot,2020-03-06 16:54:37,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-595860135,595860135,
instagibbs,2020-03-25 15:29:45,concept ACK,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-603907168,603907168,
Sjors,2020-04-27 14:24:59,Rebased,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-620020816,620020816,
achow101,2020-06-11 19:54:49,ACK 74992fd8cbe6f409bd1dad6c064deb5428509472,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-642896188,642896188,
Sjors,2020-06-25 17:48:43,I'll await the above discussion. Will address nits if that leads to a change.,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-649727814,649727814,
Sjors,2020-08-07 12:13:39,"Based on the above discussion I changed this PR again, it now does the following:\n1. lock all inputs for a transaction, rather than just the automatically selected ones\n2. unchanged behaviour:  ignore lock on manually coins (with some tests)\n\nI updated the description to clarify the discussion a bit.",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-670486874,670486874,
promag,2020-08-07 12:19:44,Thanks @Sjors will review again.,https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-670489080,670489080,
Sjors,2020-08-30 12:09:22,"Client-specific locks sounds fun, but not in this PR :-)",https://github.com/bitcoin/bitcoin/pull/18244#issuecomment-683412752,683412752,
promag,2020-03-04 14:33:25,"`assert_equal(len(self.nodes[0].listlockunspent()), 0)` before `walletcreatefundedpsbt`?",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r387704134,387704134,test/functional/rpc_psbt.py
promag,2020-03-06 15:51:16,space,https://github.com/bitcoin/bitcoin/pull/18244#discussion_r388982136,388982136,src/wallet/wallet.cpp
promag,2020-03-06 16:14:45,"""... must be ...""",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r388996671,388996671,src/wallet/rpcwallet.cpp
promag,2020-03-06 16:17:08,Are you removing this case because it's used elsewhere?,https://github.com/bitcoin/bitcoin/pull/18244#discussion_r388997929,388997929,test/functional/wallet_basic.py
Sjors,2020-03-06 16:57:49,The final frontier.,https://github.com/bitcoin/bitcoin/pull/18244#discussion_r389022366,389022366,src/wallet/wallet.cpp
Sjors,2020-03-06 17:00:26,"The original test was for auto-unlocking a coin, which now produces an error, so I check for that.",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r389025460,389025460,test/functional/wallet_basic.py
promag,2020-03-09 15:41:13,"nit, add space if you happen to push again.",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r389775666,389775666,test/functional/wallet_basic.py
jonatack,2020-06-23 10:10:45,"suggest stating `lockunspent` is an RPC, in contrast with the `lockUnspents` argument mentioned right after\n\n```suggestion\n  coin is locked; coins must be manually unlocked with RPC `lockunspent` before use.\n```",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r444113792,444113792,doc/release-notes-18244.md
jonatack,2020-06-23 10:11:33,"suggest stating`lockUnspents` is an argument, in contrast to the `lockunspent` RPC mentioned right before\n\n```suggestion\n  coin selection. When used with the `lockUnspents` argument, these two RPCs now lock manually\n```",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r444114274,444114274,doc/release-notes-18244.md
jonatack,2020-06-23 10:24:31,"missing newline at end of string here\n\ncurrent output is a too-long line and missing space between sentences: `before use.Locks are stored`:\n```\nWith manual coin selection a locked transaction output must be unlocked before use.Locks are stored in memory only. Nodes start with zero locked outputs, and the locked output list\nis always cleared (by virtue of process exit) when a node stops ",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r444121448,444121448,src/wallet/rpcwallet.cpp
jonatack,2020-06-23 10:26:24,"while touching this help, can you add the missing full stop between ""call"" and the newline? e.g. `call.\n`",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r444122471,444122471,src/wallet/rpcwallet.cpp
promag,2020-08-29 11:33:42,"This is incorrect, or am I missing something? I mean, all spent coins are unlocked right?",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r479640542,479640542,src/wallet/rpcwallet.cpp
fjahr,2020-08-30 11:52:56,mirco-nit if you retouch: empty line seems misplaced,https://github.com/bitcoin/bitcoin/pull/18244#discussion_r479760334,479760334,src/wallet/wallet.cpp
Sjors,2020-08-30 12:08:55,"Yes, but that's not the point. Automatically selection avoids locks, manually selection causes an unlock. This remark protects a user who assumes locked coins can't be accidentally spend by manually picking them. (it's like the difference between a Japanese toilet with shoes in front of it indicating it's occupied, and a Dutch toilets that's locked like a vault because people just pull the door op",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r479761951,479761951,src/wallet/rpcwallet.cpp
fjahr,2020-08-30 13:51:59,"I think ""Locks on manually selected coins are ignored."" would be a more intuitive description of what happens but I understand this to mean the same thing.",https://github.com/bitcoin/bitcoin/pull/18244#discussion_r479772806,479772806,src/wallet/rpcwallet.cpp
