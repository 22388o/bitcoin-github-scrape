[
  {
    "sha": "ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTRmN2Y1ZTA0OGExMGFkM2E1MTZkZDc4ZmEzNDJhMTQyM2Y0NzRm",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T00:41:40Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T00:41:40Z"
      },
      "message": "Add method to remove a tx from CCoinsViewCache if it is unchanged",
      "tree": {
        "sha": "94da56a2f65bede688d57c67ba825090fc310f6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94da56a2f65bede688d57c67ba825090fc310f6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee4f7f5e048a10ad3a516dd78fa342a1423f474f/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f827a03b0e4907af2540b60909d4869e1cace5b3",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee4f7f5e048a10ad3a516dd78fa342a1423f474f/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee4f7f5e048a10ad3a516dd78fa342a1423f474f/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
        "patch": "@@ -192,6 +192,13 @@ bool CCoinsViewCache::Flush() {\n     return fOk;\n }\n \n+void CCoinsViewCache::Uncache(const uint256& hash)\n+{\n+    CCoinsMap::iterator it = cacheCoins.find(hash);\n+    if (it != cacheCoins.end() && it->second.flags == 0)\n+        cacheCoins.erase(it);\n+}\n+\n unsigned int CCoinsViewCache::GetCacheSize() const {\n     return cacheCoins.size();\n }"
      },
      {
        "sha": "4edc6368d96baf470a5954ed80d07cdcb0af3d9a",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee4f7f5e048a10ad3a516dd78fa342a1423f474f/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee4f7f5e048a10ad3a516dd78fa342a1423f474f/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
        "patch": "@@ -426,6 +426,12 @@ class CCoinsViewCache : public CCoinsViewBacked\n      */\n     bool Flush();\n \n+    /**\n+     * Removes the transaction with the given hash from the cache, if it is\n+     * not modified.\n+     */\n+    void Uncache(const uint256 &txid);\n+\n     //! Calculate the size of the cache (in number of transactions)\n     unsigned int GetCacheSize() const;\n "
      }
    ]
  },
  {
    "sha": "a88ef71523d7d331f707a16168532d88a05feb79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODhlZjcxNTIzZDdkMzMxZjcwN2ExNjE2ODUzMmQ4OGEwNWZlYjc5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T00:44:00Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T00:44:00Z"
      },
      "message": "Get the set of now-uncacheable-txn from CTxMemPool::TrimToSize",
      "tree": {
        "sha": "cac5b622c505713a792fb4dedca3a948b65088a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cac5b622c505713a792fb4dedca3a948b65088a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a88ef71523d7d331f707a16168532d88a05feb79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a88ef71523d7d331f707a16168532d88a05feb79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a88ef71523d7d331f707a16168532d88a05feb79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a88ef71523d7d331f707a16168532d88a05feb79/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee4f7f5e048a10ad3a516dd78fa342a1423f474f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee4f7f5e048a10ad3a516dd78fa342a1423f474f"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 25,
      "deletions": 4
    },
    "files": [
      {
        "sha": "472e9297d3d6fdbd62a9de879ffc8e79ca9c492d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a88ef71523d7d331f707a16168532d88a05feb79/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a88ef71523d7d331f707a16168532d88a05feb79/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=a88ef71523d7d331f707a16168532d88a05feb79",
        "patch": "@@ -895,7 +895,7 @@ void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n     }\n }\n \n-void CTxMemPool::TrimToSize(size_t sizelimit) {\n+void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<uint256>* pvNoSpendsRemaining) {\n     LOCK(cs);\n \n     unsigned nTxnRemoved = 0;\n@@ -914,8 +914,26 @@ void CTxMemPool::TrimToSize(size_t sizelimit) {\n \n         setEntries stage;\n         CalculateDescendants(mapTx.project<0>(it), stage);\n-        RemoveStaged(stage);\n         nTxnRemoved += stage.size();\n+\n+        std::vector<CTransaction> txn;\n+        if (pvNoSpendsRemaining) {\n+            txn.reserve(stage.size());\n+            BOOST_FOREACH(txiter it, stage)\n+                txn.push_back(it->GetTx());\n+        }\n+        RemoveStaged(stage);\n+        if (pvNoSpendsRemaining) {\n+            BOOST_FOREACH(const CTransaction& tx, txn) {\n+                BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                    if (exists(txin.prevout.hash))\n+                        continue;\n+                    std::map<COutPoint, CInPoint>::iterator it = mapNextTx.lower_bound(COutPoint(txin.prevout.hash, 0));\n+                    if (it == mapNextTx.end() || it->first.hash != txin.prevout.hash)\n+                        pvNoSpendsRemaining->push_back(txin.prevout.hash);\n+                }\n+            }\n+        }\n     }\n \n     if (maxFeeRateRemoved > CFeeRate(0))"
      },
      {
        "sha": "d35db3e428b7a008ec03800e0f1d17ee144f72c0",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a88ef71523d7d331f707a16168532d88a05feb79/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a88ef71523d7d331f707a16168532d88a05feb79/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=a88ef71523d7d331f707a16168532d88a05feb79",
        "patch": "@@ -427,8 +427,11 @@ class CTxMemPool\n       */\n     CFeeRate GetMinFee(size_t sizelimit) const;\n \n-    /** Remove transactions from the mempool until its dynamic size is <= sizelimit. */\n-    void TrimToSize(size_t sizelimit);\n+    /** Remove transactions from the mempool until its dynamic size is <= sizelimit.\n+\t *  pvNoSpendsRemaining, if set, will be populated with the list of transactions\n+\t *  which are not in mempool which no longer have any spends in this mempool.\n+\t */\n+    void TrimToSize(size_t sizelimit, std::vector<uint256>* pvNoSpendsRemaining=NULL);\n \n     /** Expire all transaction (and their dependencies) in the mempool older than time. Return the number of removed transactions. */\n     int Expire(int64_t time);"
      }
    ]
  },
  {
    "sha": "df4740ca4a36cd7ee0432ab26223130acddd5a86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjQ3NDBjYTRhMzZjZDdlZTA0MzJhYjI2MjIzMTMwYWNkZGQ1YTg2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T01:08:58Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T01:08:58Z"
      },
      "message": "Limit mempool+txn cache size at the same time.",
      "tree": {
        "sha": "2aeab38371b7c02af03aeebe3ba4a2681e462630",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2aeab38371b7c02af03aeebe3ba4a2681e462630"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df4740ca4a36cd7ee0432ab26223130acddd5a86",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df4740ca4a36cd7ee0432ab26223130acddd5a86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df4740ca4a36cd7ee0432ab26223130acddd5a86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df4740ca4a36cd7ee0432ab26223130acddd5a86/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a88ef71523d7d331f707a16168532d88a05feb79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a88ef71523d7d331f707a16168532d88a05feb79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a88ef71523d7d331f707a16168532d88a05feb79"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 23,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0c8444d842e0098f3816a2120a00d47564ce22fd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 8,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df4740ca4a36cd7ee0432ab26223130acddd5a86/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df4740ca4a36cd7ee0432ab26223130acddd5a86/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=df4740ca4a36cd7ee0432ab26223130acddd5a86",
        "patch": "@@ -740,6 +740,25 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n+void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) {\n+    int expired = pool.Expire(GetTime() - age);\n+    if (expired != 0)\n+        LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+    size_t mempoolUsage = pool.DynamicMemoryUsage();\n+    size_t coinsUsage = pcoinsTip->DynamicMemoryUsage();\n+\n+    while (mempoolUsage > limit || coinsUsage + mempoolUsage > nCoinCacheUsage + limit) {\n+        std::vector<uint256> vNoSpendsRemaining;\n+        pool.TrimToSize(std::min(limit, mempoolUsage - 1), &vNoSpendsRemaining);\n+        BOOST_FOREACH(const uint256& removed, vNoSpendsRemaining)\n+            pcoinsTip->Uncache(removed);\n+\n+        mempoolUsage = pool.DynamicMemoryUsage();\n+        coinsUsage = pcoinsTip->DynamicMemoryUsage();\n+    }\n+}\n+\n CAmount GetMinRelayFee(const CTransaction& tx, const CTxMemPool& pool, unsigned int nBytes, bool fAllowFree)\n {\n     uint256 hash = tx.GetHash();\n@@ -957,12 +976,8 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // trim mempool and check if tx was trimmed\n         if (!fOverrideMempoolLimit) {\n-            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n-            if (expired != 0)\n-                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n-\n-            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n-            if (!pool.exists(tx.GetHash()))\n+            LimitMempoolSize(pool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (!pool.exists(hash))\n                 return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");\n         }\n     }\n@@ -2282,7 +2297,7 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     }\n \n     if (fBlocksDisconnected)\n-        mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+        LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n \n     // Callbacks/notifications for a new best chain.\n     if (fInvalidFound)\n@@ -2370,7 +2385,7 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         }\n     }\n \n-    mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n \n     // The resulting new best tip may not be in setBlockIndexCandidates anymore, so\n     // add it again."
      }
    ]
  }
]