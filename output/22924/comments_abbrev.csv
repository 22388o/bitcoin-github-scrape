mjdietzx,2021-09-14 20:28:01,"Marking this as a draft for now. I will be moving some of the refactoring/cleanup that was originally included in #22650 to this PR. So once that is done and I've rebased this PR, I will reopen it",https://github.com/bitcoin/bitcoin/pull/22924#issuecomment-919488994,919488994,
mjdietzx,2021-09-29 03:15:40,"Now that #22650 is merged, I rebased and finished this. This PR follows up with some cleanup, and addresses all the comments in the first PR that were left for now.\n\nJust so we have them at-hand, I took all the original comments from #22650's review, and am putting them here.\n\n> @jonatack: maybe I'm missing something but perhaps merge ScriptPubKeyToUniv and ScriptToUniv into a single funct",https://github.com/bitcoin/bitcoin/pull/22924#issuecomment-929792477,929792477,
DrahtBot,2021-09-29 20:42:05,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23599](https://github.com/bitcoin/bitcoin/pull/23599) (Tidy up RPCTxSerializationFlags by MarcoFalke)\n* [#23546](https:",https://github.com/bitcoin/bitcoin/pull/22924#issuecomment-930527501,930527501,
mjdietzx,2021-10-25 15:24:15,"Rebased, fixed some merge conflicts from #22918",https://github.com/bitcoin/bitcoin/pull/22924#issuecomment-951040665,951040665,
mjdietzx,2021-11-13 20:11:43,Addressed indentation nit and rebased to master,https://github.com/bitcoin/bitcoin/pull/22924#issuecomment-968129370,968129370,
MarcoFalke,2021-09-29 08:03:22,"not a fan of re-using the same buffer, thus nVersion for this bool.\n\n`try { ds >> bool{}; }` might be nicer",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r718254892,718254892,src/test/fuzz/transaction.cpp
MarcoFalke,2021-09-29 08:06:08,"nit: Maybe before using named args, fix the argument name first?\n\n```suggestion\n        TxToUniv(*wtx.tx, /*block_hash=*/uint256{}, /*entry=*/decoded, /*include_hex=*/false);\n```",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r718257136,718257136,src/wallet/rpcwallet.cpp
mjdietzx,2021-09-29 15:15:11,"Added a commit, done here: be3651a. I had wanted to do this but seemed like `hashBlock` was used pretty regularly so I thought there might be some convention I wasn't aware of - I guess not so I'm happy to be able to do this",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r718624659,718624659,src/wallet/rpcwallet.cpp
MarcoFalke,2021-09-29 15:15:57,"If you initialize the bools to `false`, you can remove the early return (This is also what FuzzedDataProvider would do)",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r718625452,718625452,src/test/fuzz/transaction.cpp
mjdietzx,2021-09-29 15:16:20,"Makes sense, done 08543bf. I may have butchered this, so if you want to see any other changes here just lmk. Happy to fix up any nits bc I have a feeling there is a cleaner way to do this that I'm just not aware of",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r718625823,718625823,src/test/fuzz/transaction.cpp
mjdietzx,2021-09-29 15:16:49,"That's a good idea. Ok, one sec",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r718626288,718626288,src/test/fuzz/transaction.cpp
laanwj,2021-11-10 14:48:28,indentation nit,https://github.com/bitcoin/bitcoin/pull/22924#discussion_r746660168,746660168,src/core_write.cpp
laanwj,2021-11-10 15:27:16,I wonder why we don't return the UniValue (or `optional<UniValue>` in case it can fail) instead of having it as second parameter. It would seem better API design to me.,https://github.com/bitcoin/bitcoin/pull/22924#discussion_r746700015,746700015,src/core_io.h
mjdietzx,2021-11-13 15:35:11,"Nice catch, done.",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r748734870,748734870,src/core_write.cpp
mjdietzx,2021-11-13 15:37:09,I think this is a great suggestion. And at first glance it seems to be straightforward enough to include in this PR. I'll follow up shortly,https://github.com/bitcoin/bitcoin/pull/22924#discussion_r748735028,748735028,src/core_io.h
mjdietzx,2021-11-13 20:10:10,"I am leaning towards not including this change in this PR. I do think it is a great opportunity to cleanup and improve the code quality, so I would like to follow up with another PR doing this. This pattern is also used all over the place, not just `ScriptToUniv`, but `TxToUniv`, `entryToJSON`, and probably more. Anyways I want to spend some more time on this and don't want to end up doing too muc",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r748761095,748761095,src/core_io.h
mjdietzx,2021-11-13 20:52:41,"Can you take a quick look at the last two commits in this draft PR #23507?\n\na) is this along the lines of what you are thinking?\nb) do you think it is worthwhile for me to do this across the codebase in #23507, eg `entryToJSON`, `TxToJSON`, etc... can be improved in the same way\n\nFeel free to answer those in the linked PR and not here",https://github.com/bitcoin/bitcoin/pull/22924#discussion_r748764486,748764486,src/core_io.h
