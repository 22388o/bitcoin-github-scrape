[
  {
    "sha": "b34171186b35bf13276ca000f00bc70a482ec65e",
    "node_id": "C_kwDOABII59oAKGIzNDE3MTE4NmIzNWJmMTMyNzZjYTAwMGYwMGJjNzBhNDgyZWM2NWU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-28T23:11:49Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:21:56Z"
      },
      "message": "refactor: merge ScriptPubKeyToUniv & ScriptToUniv into one function",
      "tree": {
        "sha": "d4b82907c76d292ec702a7575f4f4c73d09fb159",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4b82907c76d292ec702a7575f4f4c73d09fb159"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b34171186b35bf13276ca000f00bc70a482ec65e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9DQACgkQc3/VzfHR\nRrkU2g//QW7IwgBDkD2C7r2vhNeoHYlwZuPRvcZRVRmavbQcp5kb/IziaoJTa2Pd\nKmrAB5eBMZRXWR2fWfcvjfPNhx0+bwznlikbBKPN/m69+UBYBQ3PSRK3d1E+7U0Q\nKrGDuV2dbfE5aH7vLz/GFB7Q5zLRhQQXodqdGFbo02micOGlLJz9Or1tpZzJLubW\nC8L/4u9Bl0Rvepixkyrx34hz+UgnMrDWM0Yi2sSYrGbLxz5vfo/hAy5fdFnITjdw\nR5I3aHdpUUDTPKCpPDCABo721GJmfKEP7UvAhRtMdhd84VAOfPqkP8EvQfbDR4U+\nVwmdeIafDVKI9tFl0IPe4luyG/0IHNmC7Zr0uEyAWnh940cSQ4NRa7cw7ZBJ6L8+\nuuwUw7g3L9vIRNpassAgtzMDzC1QSiaIvOklp4aaQA3l9xHmxGPC+Qic5EwyRKej\nsdclaeLKDEms/IOKDpOzziXSrW9MyEYTAxCLLKgstND/6+GG8CVjmu18hc1sOOla\n07qCbVquwrc31NsUcyVjjf6KQqSN0Hzc4cASDpW/a8K3CKsCLFhZ20No4oXXWE3z\nFfKrSo9VkXhjB03WlQ9wemcuQ4JzHAsc7FvM9183LD2dEdU3n7QtEMbCECnQwgv8\nxFWRklgth9KHFv8p1qAl7viXrRqSaOm17/INp+K1cv0eMEtppEY=\n=QrqI\n-----END PGP SIGNATURE-----",
        "payload": "tree d4b82907c76d292ec702a7575f4f4c73d09fb159\nparent 5cc083cd46ad71510f56af957e2e8733c388c6f1\nauthor Michael Dietz <michael.dietz@waya.ai> 1632870709 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824116 -0600\n\nrefactor: merge ScriptPubKeyToUniv & ScriptToUniv into one function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34171186b35bf13276ca000f00bc70a482ec65e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b34171186b35bf13276ca000f00bc70a482ec65e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34171186b35bf13276ca000f00bc70a482ec65e/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc083cd46ad71510f56af957e2e8733c388c6f1"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 17,
      "deletions": 23
    },
    "files": [
      {
        "sha": "70731c56b7dc2e69669c1d319de0c6c2914972b7",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -53,8 +53,7 @@ UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool include_hex, bool include_address = true);\n-void ScriptToUniv(const CScript& script, UniValue& out);\n+void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex = true, bool include_address = false);\n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "496e65ba2eab0b1552d6ff7d2251a0115d232fe2",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -142,22 +142,19 @@ std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags)\n     return HexStr(ssTx);\n }\n \n-void ScriptToUniv(const CScript& script, UniValue& out)\n-{\n-    ScriptPubKeyToUniv(script, out, /* include_hex */ true, /* include_address */ false);\n-}\n-\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool include_hex, bool include_address)\n+void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool include_address)\n {\n     CTxDestination address;\n \n-    out.pushKV(\"asm\", ScriptToAsmStr(scriptPubKey));\n-    if (include_hex) out.pushKV(\"hex\", HexStr(scriptPubKey));\n+    out.pushKV(\"asm\", ScriptToAsmStr(script));\n+    if (include_hex) {\n+        out.pushKV(\"hex\", HexStr(script));\n+    }\n \n     std::vector<std::vector<unsigned char>> solns;\n-    const TxoutType type{Solver(scriptPubKey, solns)};\n+    const TxoutType type{Solver(script, solns)};\n \n-    if (include_address && ExtractDestination(scriptPubKey, address) && type != TxoutType::PUBKEY) {\n+    if (include_address && ExtractDestination(script, address) && type != TxoutType::PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n     out.pushKV(\"type\", GetTxnOutputType(type));\n@@ -215,7 +212,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n \n                 case TxVerbosity::SHOW_DETAILS_AND_PREVOUT:\n                     UniValue o_script_pub_key(UniValue::VOBJ);\n-                    ScriptPubKeyToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true);\n+                    ScriptToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true, /* include_address= */ true);\n \n                     UniValue p(UniValue::VOBJ);\n                     p.pushKV(\"generated\", bool(prev_coin.fCoinBase));\n@@ -241,7 +238,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n-        ScriptPubKeyToUniv(txout.scriptPubKey, o, true);\n+        ScriptToUniv(txout.scriptPubKey, o, true, /* include_address= */ true);\n         out.pushKV(\"scriptPubKey\", o);\n         vout.push_back(out);\n "
      },
      {
        "sha": "151596c4d34d85a32e8b3488df47f0026fb5afc5",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -642,7 +642,7 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n \n             // include the script in a json output\n             UniValue o(UniValue::VOBJ);\n-            ScriptPubKeyToUniv(coin.out.scriptPubKey, o, true);\n+            ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n             utxo.pushKV(\"scriptPubKey\", o);\n             utxos.push_back(utxo);\n         }"
      },
      {
        "sha": "fc9c167603c173f1e2bc814096d318bbb1a3af64",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -1328,7 +1328,7 @@ static RPCHelpMan gettxout()\n     }\n     ret.pushKV(\"value\", ValueFromAmount(coin.out.nValue));\n     UniValue o(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(coin.out.scriptPubKey, o, true);\n+    ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n     ret.pushKV(\"scriptPubKey\", o);\n     ret.pushKV(\"coinbase\", (bool)coin.fCoinBase);\n "
      },
      {
        "sha": "abb9ce01c4ca8f4bb6108896db1a9e389d0c3d79",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -573,7 +573,7 @@ static RPCHelpMan decodescript()\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptPubKeyToUniv(script, r, /* include_hex */ false);\n+    ScriptToUniv(script, r, /* include_hex */ false, /* include_address= */ true);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -607,7 +607,7 @@ static RPCHelpMan decodescript()\n                 // Newer segwit program versions should be considered when then become available.\n                 segwitScr = GetScriptForDestination(WitnessV0ScriptHash(script));\n             }\n-            ScriptPubKeyToUniv(segwitScr, sr, /* include_hex */ true);\n+            ScriptToUniv(segwitScr, sr, /* include_hex */ true, /* include_address= */ true);\n             sr.pushKV(\"p2sh-segwit\", EncodeDestination(ScriptHash(segwitScr)));\n             r.pushKV(\"segwit\", sr);\n         }\n@@ -1163,7 +1163,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.witness_utxo;\n \n             UniValue o(UniValue::VOBJ);\n-            ScriptPubKeyToUniv(txout.scriptPubKey, o, /* include_hex */ true);\n+            ScriptToUniv(txout.scriptPubKey, o, /* include_hex */ true, /* include_address= */ true);\n \n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));"
      },
      {
        "sha": "1b8e0d2d3e506d40d62ef0b3108f44d2021203c7",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -109,11 +109,9 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(script, o1, true);\n+    ScriptToUniv(script, o1, true, /* include_address= */ false);\n     UniValue o2(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(script, o2, false);\n-    UniValue o3(UniValue::VOBJ);\n-    ScriptToUniv(script, o3);\n+    ScriptToUniv(script, o2, false, /* include_address= */ false);\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      }
    ]
  },
  {
    "sha": "6caf9812d17bff11455726865fb6f81bbcd909a8",
    "node_id": "C_kwDOABII59oAKDZjYWY5ODEyZDE3YmZmMTE0NTU3MjY4NjVmYjZmODFiYmNkOTA5YTg",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T14:58:36Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:07Z"
      },
      "message": "refactor: prefer snake case, TxToUniv arg hashBlock renamed block_hash",
      "tree": {
        "sha": "8baaee941986d68845331e527ada5b0574fca842",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8baaee941986d68845331e527ada5b0574fca842"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6caf9812d17bff11455726865fb6f81bbcd909a8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9D8ACgkQc3/VzfHR\nRrlwmg//W3bXkcAMYbi28qSXQ1i7amOXmVGw8CnrZXilx1VEoVeXSgfUroRaFdA7\nUgyCnXmuFj5d7rZv7FwubeRHM8gsnRs+qMbbebClmN/2x1bPWzjnUpVLiyxjITz8\nsYPzkyflsrr5Mxkr1ZHBfWIJkHQVbXfuHh/Y+ZNLcYajPtSlfNyx/S32i7kScgy8\nu50AsPwgcs0aIbe6b/02FEDhFY5w5PvaX+r8rOgD0FNwADtbtXGPMhClK7LWZfTU\nfnTND+IRFoQIeAqoBWb7959AuNmuEsGBmvIEnWjl6qbVkN5OKWUtnDSuriGitRX+\nHQlo9CMrE9RKVv3Cf2Z8+t0Y6IWiBb43mTksQjBSK3P8eiZMsN1RjJouW9NWpAh6\nhUxsISa90P4mMwrXrE5C0xv8P6A4SKJuS/8Dn0fZJk3+hLeBrccfQR/CBC6OegIo\nUDG+AINa4Hdhg+Ngn+QsLOWc9VsgVszoDi0eSY+jUo3K/mEMqHMAMFY3UFeA00p4\nzqv0WwVD+jo7b8Dg0CM9GWdL/bKOAHuVw4WIcAh4eOdQep0voXQjiaSrHglm/q1H\n4Ot61+J6hzPjE1DX5PRk10zIaBVZYrtNKGuOVB/aDn/u1qlyCkhe3g8QSwmK+JzL\nzKW0tB028SFoYdMdec7Dca+HShulTH0v8m6VKzo/VEA3WrGutmk=\n=kaZi\n-----END PGP SIGNATURE-----",
        "payload": "tree 8baaee941986d68845331e527ada5b0574fca842\nparent b34171186b35bf13276ca000f00bc70a482ec65e\nauthor Michael Dietz <michael.dietz@waya.ai> 1632927516 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824127 -0600\n\nrefactor: prefer snake case, TxToUniv arg hashBlock renamed block_hash\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6caf9812d17bff11455726865fb6f81bbcd909a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6caf9812d17bff11455726865fb6f81bbcd909a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6caf9812d17bff11455726865fb6f81bbcd909a8/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b34171186b35bf13276ca000f00bc70a482ec65e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34171186b35bf13276ca000f00bc70a482ec65e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b34171186b35bf13276ca000f00bc70a482ec65e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "58885b69710b98895bf32bd5971b6f8d445b830d",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=6caf9812d17bff11455726865fb6f81bbcd909a8",
        "patch": "@@ -54,6 +54,6 @@ std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex = true, bool include_address = false);\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n+void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "f843a10f95cb3bbfba44aca1aaacd99a4ca67aef",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=6caf9812d17bff11455726865fb6f81bbcd909a8",
        "patch": "@@ -160,7 +160,7 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool i\n     out.pushKV(\"type\", GetTxnOutputType(type));\n }\n \n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n+void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n {\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n@@ -254,8 +254,8 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n         entry.pushKV(\"fee\", ValueFromAmount(fee));\n     }\n \n-    if (!hashBlock.IsNull())\n-        entry.pushKV(\"blockhash\", hashBlock.GetHex());\n+    if (!block_hash.IsNull())\n+        entry.pushKV(\"blockhash\", block_hash.GetHex());\n \n     if (include_hex) {\n         entry.pushKV(\"hex\", EncodeHexTx(tx, serialize_flags)); // The hex-encoded transaction. Used the name \"hex\" to be consistent with the verbose output of \"getrawtransaction\"."
      }
    ]
  },
  {
    "sha": "9d61af23b4890f08e9d46a5a703177fa9a69c765",
    "node_id": "C_kwDOABII59oAKDlkNjFhZjIzYjQ4OTBmMDhlOWQ0NmE1YTcwMzE3N2ZhOWE2OWM3NjU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T00:04:07Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:07Z"
      },
      "message": "refactor: named args whenever ScriptToUniv or TxToUniv invoked",
      "tree": {
        "sha": "e1ce4af375220b528b8ac84a2ec9a499572be7ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1ce4af375220b528b8ac84a2ec9a499572be7ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9D8ACgkQc3/VzfHR\nRrkjtBAAgBmV+IjGx7qKUB+kCpDerDw3orPehT1d0zQ1/yDTvcHKOVoMXT0zGoH3\ntOpZ9zq2XdVFL0L2iUI8NSyl/OowdOz1lYcOU6DDsMXlGtpgmSAyWIM3M8j94Kwn\nxY8VBCuthU+2eSArOvAEQlQgpkwIE5N+QCaphioZhVwMCRodAXc6ghhQYQw/nMUD\npdCBC3AAid5bOCHxXLprj2A+36GJqJADr4z8iFWvY+sBIJ4S1NDrKhDI/2ReYrX1\nsjp5o/uoiNYa3ggDgA9D4EwMR03uADwp3Qy0ateZh3jtMOiIxjBEc6Cd5194aRYK\ne5OBuCn84RyXf/EXIZHwhCLxQXm1zql94NQYnEJGNKlhf608Ddgb2xMp7hu1T0rB\n1dfDYMLdE4j+tFQTM1eYoI6+h31lW47c5ClrG3AseqpepmeOG0QskokbPe8p0tWU\nnCoWBvwDThcBf3XJjDpa92txGppCTOFf2CNOBV64NvpvWY/6PfrIMbEx4/Id6Egn\nMFwBiXjSJXPVURZUrwBzRj1q+Y7RnBxLse4+aXg0l56HbzyrbHdxs28h2UBzpJ4M\nLA9p0zzUuVDn2cWg72klupc2vBy2pXKw/Tkw716Ii1w9MWbvl1dJlGKhL6gzzuMh\n3JeprTijpUDvxKm6O9SsVlfbzMYXV661M0oRHYBc4rv4V1jq3RU=\n=rc9w\n-----END PGP SIGNATURE-----",
        "payload": "tree e1ce4af375220b528b8ac84a2ec9a499572be7ce\nparent 6caf9812d17bff11455726865fb6f81bbcd909a8\nauthor Michael Dietz <michael.dietz@waya.ai> 1632873847 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824127 -0600\n\nrefactor: named args whenever ScriptToUniv or TxToUniv invoked\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d61af23b4890f08e9d46a5a703177fa9a69c765",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6caf9812d17bff11455726865fb6f81bbcd909a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6caf9812d17bff11455726865fb6f81bbcd909a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6caf9812d17bff11455726865fb6f81bbcd909a8"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "9ce2a19c7d3e00303164644dc4fa72c2ab707d45",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -739,7 +739,7 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n static void OutputTxJSON(const CTransaction& tx)\n {\n     UniValue entry(UniValue::VOBJ);\n-    TxToUniv(tx, uint256(), entry);\n+    TxToUniv(tx, /* block_hash= */ uint256(), entry);\n \n     std::string jsonOutput = entry.write(4);\n     tfm::format(std::cout, \"%s\\n\", jsonOutput);"
      },
      {
        "sha": "8bc50aafc23efbeff899fd5a7b1823f1fc240820",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -212,7 +212,7 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n \n                 case TxVerbosity::SHOW_DETAILS_AND_PREVOUT:\n                     UniValue o_script_pub_key(UniValue::VOBJ);\n-                    ScriptToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true, /* include_address= */ true);\n+                    ScriptToUniv(prev_txout.scriptPubKey, /* out= */ o_script_pub_key, /* include_hex= */ true, /* include_address= */ true);\n \n                     UniValue p(UniValue::VOBJ);\n                     p.pushKV(\"generated\", bool(prev_coin.fCoinBase));\n@@ -238,7 +238,7 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n-        ScriptToUniv(txout.scriptPubKey, o, true, /* include_address= */ true);\n+        ScriptToUniv(txout.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n         out.pushKV(\"scriptPubKey\", o);\n         vout.push_back(out);\n "
      },
      {
        "sha": "978a8b2c6ae93b8dd2c421263cee1c380e11b9f2",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -457,7 +457,7 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n \n     case RetFormat::JSON: {\n         UniValue objTx(UniValue::VOBJ);\n-        TxToUniv(*tx, hashBlock, objTx);\n+        TxToUniv(*tx, /* block_hash= */ hashBlock, /* entry= */ objTx);\n         std::string strJSON = objTx.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n         req->WriteReply(HTTP_OK, strJSON);\n@@ -642,7 +642,7 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n \n             // include the script in a json output\n             UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n+            ScriptToUniv(coin.out.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n             utxo.pushKV(\"scriptPubKey\", o);\n             utxos.push_back(utxo);\n         }"
      },
      {
        "sha": "df45b1e7022f50d2ee2936127910001eb9ea5d09",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -226,7 +226,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n                 // coinbase transaction (i.e. i == 0) doesn't have undo data\n                 const CTxUndo* txundo = (have_undo && i > 0) ? &blockUndo.vtxundo.at(i - 1) : nullptr;\n                 UniValue objTx(UniValue::VOBJ);\n-                TxToUniv(*tx, uint256(), objTx, true, RPCSerializationFlags(), txundo, verbosity);\n+                TxToUniv(*tx, /* block_hash= */ uint256(), /* entry= */ objTx, /* include_hex= */ true, RPCSerializationFlags(), txundo, verbosity);\n                 txs.push_back(objTx);\n             }\n     }\n@@ -1328,7 +1328,7 @@ static RPCHelpMan gettxout()\n     }\n     ret.pushKV(\"value\", ValueFromAmount(coin.out.nValue));\n     UniValue o(UniValue::VOBJ);\n-    ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n+    ScriptToUniv(coin.out.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n     ret.pushKV(\"scriptPubKey\", o);\n     ret.pushKV(\"coinbase\", (bool)coin.fCoinBase);\n "
      },
      {
        "sha": "12d79ae33f09854d416770e1f8fc10832e7f104a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -50,7 +50,7 @@ static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue&\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n-    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags());\n+    TxToUniv(tx, /* block_hash= */ uint256(), entry, /* include_hex= */ true, RPCSerializationFlags());\n \n     if (!hashBlock.IsNull()) {\n         LOCK(cs_main);\n@@ -516,7 +516,7 @@ static RPCHelpMan decoderawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    TxToUniv(CTransaction(std::move(mtx)), uint256(), result, false);\n+    TxToUniv(CTransaction(std::move(mtx)), /* block_hash= */ uint256(), /* entry= */ result, /* include_hex= */ false);\n \n     return result;\n },\n@@ -573,7 +573,7 @@ static RPCHelpMan decodescript()\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptToUniv(script, r, /* include_hex */ false, /* include_address= */ true);\n+    ScriptToUniv(script, /* out= */ r, /* include_hex= */ false, /* include_address= */ true);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -607,7 +607,7 @@ static RPCHelpMan decodescript()\n                 // Newer segwit program versions should be considered when then become available.\n                 segwitScr = GetScriptForDestination(WitnessV0ScriptHash(script));\n             }\n-            ScriptToUniv(segwitScr, sr, /* include_hex */ true, /* include_address= */ true);\n+            ScriptToUniv(segwitScr, /* out= */ sr, /* include_hex= */ true, /* include_address= */ true);\n             sr.pushKV(\"p2sh-segwit\", EncodeDestination(ScriptHash(segwitScr)));\n             r.pushKV(\"segwit\", sr);\n         }\n@@ -1139,7 +1139,7 @@ static RPCHelpMan decodepsbt()\n \n     // Add the decoded tx\n     UniValue tx_univ(UniValue::VOBJ);\n-    TxToUniv(CTransaction(*psbtx.tx), uint256(), tx_univ, false);\n+    TxToUniv(CTransaction(*psbtx.tx), /* block_hash= */ uint256(), /* entry= */ tx_univ, /* include_hex= */ false);\n     result.pushKV(\"tx\", tx_univ);\n \n     // Unknown data\n@@ -1163,7 +1163,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.witness_utxo;\n \n             UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(txout.scriptPubKey, o, /* include_hex */ true, /* include_address= */ true);\n+            ScriptToUniv(txout.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n \n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));\n@@ -1177,7 +1177,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.non_witness_utxo->vout[psbtx.tx->vin[i].prevout.n];\n \n             UniValue non_wit(UniValue::VOBJ);\n-            TxToUniv(*input.non_witness_utxo, uint256(), non_wit, false);\n+            TxToUniv(*input.non_witness_utxo, /* block_hash= */ uint256(), /* entry= */ non_wit, /* include_hex= */ false);\n             in.pushKV(\"non_witness_utxo\", non_wit);\n \n             have_a_utxo = true;\n@@ -1210,12 +1210,12 @@ static RPCHelpMan decodepsbt()\n         // Redeem script and witness script\n         if (!input.redeem_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.redeem_script, r);\n+            ScriptToUniv(input.redeem_script, /* out= */ r);\n             in.pushKV(\"redeem_script\", r);\n         }\n         if (!input.witness_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.witness_script, r);\n+            ScriptToUniv(input.witness_script, /* out= */ r);\n             in.pushKV(\"witness_script\", r);\n         }\n \n@@ -1270,12 +1270,12 @@ static RPCHelpMan decodepsbt()\n         // Redeem script and witness script\n         if (!output.redeem_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.redeem_script, r);\n+            ScriptToUniv(output.redeem_script, /* out= */ r);\n             out.pushKV(\"redeem_script\", r);\n         }\n         if (!output.witness_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.witness_script, r);\n+            ScriptToUniv(output.witness_script, /* out= */ r);\n             out.pushKV(\"witness_script\", r);\n         }\n "
      },
      {
        "sha": "861eff11d34bad796db05d681a3f54f8f41711ae",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -109,9 +109,9 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptToUniv(script, o1, true, /* include_address= */ false);\n+    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ true, /* include_address= */ false);\n     UniValue o2(UniValue::VOBJ);\n-    ScriptToUniv(script, o2, false, /* include_address= */ false);\n+    ScriptToUniv(script, /* out= */ o2, /* include_hex= */ false, /* include_address= */ false);\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "cf1506e7e13bfe11431079594f9c59299a35122f",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -103,6 +103,6 @@ FUZZ_TARGET_INIT(transaction, initialize_transaction)\n     (void)IsWitnessStandard(tx, coins_view_cache);\n \n     UniValue u(UniValue::VOBJ);\n-    TxToUniv(tx, /* hashBlock */ uint256::ZERO, u);\n-    TxToUniv(tx, /* hashBlock */ uint256::ONE, u);\n+    TxToUniv(tx, /* block_hash= */ uint256::ZERO, /* entry= */ u);\n+    TxToUniv(tx, /* block_hash= */ uint256::ONE, /* entry= */ u);\n }"
      },
      {
        "sha": "3854f4c765dd9184f7119fb0928ad0c377a4a57a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -1773,7 +1773,7 @@ static RPCHelpMan gettransaction()\n \n     if (verbose) {\n         UniValue decoded(UniValue::VOBJ);\n-        TxToUniv(*wtx.tx, uint256(), decoded, false);\n+        TxToUniv(*wtx.tx, /* block_hash= */ uint256(), /* entry= */ decoded, /* include_hex= */ false);\n         entry.pushKV(\"decoded\", decoded);\n     }\n "
      }
    ]
  },
  {
    "sha": "63a657ccff959f7d86f423607f69aa9f7507dbdb",
    "node_id": "C_kwDOABII59oAKDYzYTY1N2NjZmY5NTlmN2Q4NmY0MjM2MDdmNjlhYTlmNzUwN2RiZGI",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T00:44:13Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:08Z"
      },
      "message": "refactor: de-duplicate common help text for parsed destination address",
      "tree": {
        "sha": "759dba167faa8e57329846e59aa90861f18ee965",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/759dba167faa8e57329846e59aa90861f18ee965"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9EAACgkQc3/VzfHR\nRrlX7g/+Nr1UVx7h5nPiq35m/xgpBDulN03szIBKwXvlF/20b6xzQMnkCANSztKm\nGZX6Ry+dWTlts15IHB0Zw7rh2nKATMfzOQsTIqGQQ9OaoobqjF59r9zD/u4z6D0S\n+XIj8SA2AvFDip61qRGYcYwFv5KAbqXFUGiY4fQWPvy4CQOOGnXXED+x5f8fColQ\nv2mg6R1bAd81GuqRJn2DpRv426BgEbhbTOKz95SsZ8KtLpiIOL419clLOOsb9+Df\n+6/DfJpMEyrVxPKGxJmg4hnoscpE4jwn2Jbu1uJ+upxcf+n6n4gI9Z/ea81t/B2p\nKG/KXwb+Y9uFgggUqyiCP29E2hadPsIw7jD3Ihi6WF5xi1bfIqLENYjojJ6umqdU\n4jzmhrbBWw0qQPdoS0MKuBdZ1VKf8dmrs5KS+YrHqd+ZUpj/4Y3HIWZm06VDp/UK\nYyo2pMeFBFXnVMQtw1sD8S/MqiVJe6A+4uy+ZDHJ46kaQgHrvKGhT1s2Sqg49+kp\nMcd4piCWjLB4kagAxitKeChEK4KFmtV9MnNtnhAFL7tgQ9d+3bINfpJ6dSGSG67I\nVKC8AX2QEqNAilCn44Oyl5mgaIEu8K/28YLIFLAwsag8r0CVEGxvZMBwR3dNgOjR\nQgQwF6BL0gqCGeYE9e/ZwVMTuOGA5A/U0WHGzDh4zA0oQjhKZdI=\n=tJk3\n-----END PGP SIGNATURE-----",
        "payload": "tree 759dba167faa8e57329846e59aa90861f18ee965\nparent 9d61af23b4890f08e9d46a5a703177fa9a69c765\nauthor Michael Dietz <michael.dietz@waya.ai> 1632876253 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824128 -0600\n\nrefactor: de-duplicate common help text for parsed destination address\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63a657ccff959f7d86f423607f69aa9f7507dbdb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d61af23b4890f08e9d46a5a703177fa9a69c765"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c2a750a31c36afacfd918d7f9560c3fd660bc1fa",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "patch": "@@ -1274,7 +1274,7 @@ static RPCHelpMan gettxout()\n                     {RPCResult::Type::STR, \"asm\", \"\"},\n                     {RPCResult::Type::STR_HEX, \"hex\", \"\"},\n                     {RPCResult::Type::STR, \"type\", \"The type, eg pubkeyhash\"},\n-                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                    {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                 }},\n                 {RPCResult::Type::BOOL, \"coinbase\", \"Coinbase or not\"},\n             }},"
      },
      {
        "sha": "5dcd3d397541a15f214197fb67033b320994d5cd",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "patch": "@@ -133,7 +133,7 @@ static RPCHelpMan getrawtransaction()\n                                          {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                          {RPCResult::Type::STR, \"hex\", \"the hex\"},\n                                          {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                         {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                                         {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                                      }},\n                                  }},\n                              }},\n@@ -492,7 +492,7 @@ static RPCHelpMan decoderawtransaction()\n                                     {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                     {RPCResult::Type::STR_HEX, \"hex\", \"the hex\"},\n                                     {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                                    {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                                 }},\n                             }},\n                         }},\n@@ -545,14 +545,14 @@ static RPCHelpMan decodescript()\n                     {\n                         {RPCResult::Type::STR, \"asm\", \"Script public key\"},\n                         {RPCResult::Type::STR, \"type\", \"The output type (e.g. \"+GetAllOutputTypes()+\")\"},\n-                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                        {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                         {RPCResult::Type::STR, \"p2sh\", /* optional */ true, \"address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH)\"},\n                         {RPCResult::Type::OBJ, \"segwit\", /* optional */ true, \"Result of a witness script public key wrapping this redeem script (not returned if the script is a P2SH or witness)\",\n                         {\n                             {RPCResult::Type::STR, \"asm\", \"String representation of the script public key\"},\n                             {RPCResult::Type::STR_HEX, \"hex\", \"Hex string of the script public key\"},\n                             {RPCResult::Type::STR, \"type\", \"The type of the script public key (e.g. witness_v0_keyhash or witness_v0_scripthash)\"},\n-                            {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                            {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                             {RPCResult::Type::STR, \"p2sh-segwit\", \"address of the P2SH script wrapping this witness redeem script\"},\n                         }},\n                     }\n@@ -1043,7 +1043,7 @@ static RPCHelpMan decodepsbt()\n                                         {RPCResult::Type::STR, \"asm\", \"The asm\"},\n                                         {RPCResult::Type::STR_HEX, \"hex\", \"The hex\"},\n                                         {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                                        {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                                     }},\n                                 }},\n                                 {RPCResult::Type::OBJ_DYN, \"partial_signatures\", /* optional */ true, \"\","
      },
      {
        "sha": "e697a74771ace586520af19aa622f6c4b31b80ab",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "patch": "@@ -28,6 +28,12 @@\n  */\n extern const std::string UNIX_EPOCH_TIME;\n \n+/**\n+ * String used to describe the destination address parsed from a standard script in documentation, factored out to a\n+ * constant for consistency.\n+ */\n+const std::string DESTINATION_ADDRESS{\"The Bitcoin address (only if a well-defined address exists)\"};\n+\n /**\n  * Example bech32 addresses for the RPCExamples help documentation. They are intentionally\n  * invalid to prevent accidental transactions by users."
      }
    ]
  },
  {
    "sha": "d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
    "node_id": "C_kwDOABII59oAKGQ0Njc1ZjQxMGZkZmVhMzdlMTg2MWZlZmJiYjZlMGY5ZjZkOGJmYWQ",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T15:20:01Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:08Z"
      },
      "message": "fuzz: speedup ScriptToUniv and TxToUniv tests by dropping redundant call",
      "tree": {
        "sha": "8a30ab935b4c1f1826b91d8ba5ab2bf9841746d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a30ab935b4c1f1826b91d8ba5ab2bf9841746d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9EAACgkQc3/VzfHR\nRrlQpxAAn8BFP6spGy2gOzwsE5bfrI3ssEAKkZjqsx0/2r+m4LqIx3Q3gmxY3EhE\nvOo+jgb6lAUvWBaMfOfoleOhr3ce8B9ldIgddjngAGUEGA0I5RMF27RLbyUopcK9\n8vjYWKuHDNaeldRLkqMUX4P8cxVfK0cPJPSg90ROjvmQ0TpUCM8CZHZM5Lo2tR1z\n4IyIyPwn//O2ZCZqNN8f5bR/brtxTB+Fb54hd//NHWuOqMkHGdmPfpw/466+LEld\nO/hoA8BDyQt/l+L2YlNnFS66/Ww6Qbsb2lTTdSCeoH5dK5IiBL2HABdXIErch37K\nL1r3zCaAwoxqkfNY2lJukf+dYZc9ldPSk8WAgrD3/Zes/CGTObn3bH2QBZILPJ8X\nkLq4bD5j7e1SIX+byBMETzJOsWnmFEZeoxODNsJBexYXHaxyEcRTJUPzc5Bu42Gj\n9UxqCQLZZhS9UJbSrqZ6ysSMyagxioAfPKy76oeMKIGLfW+K7TujeoZRKBmFUxtg\n7msDLPVbdMj5XAruPR9wZpR2csUM04TG8g8hz3F6D5dBRN3v0pBl6kyePtfGbBGG\ncHJ4UTMyXJJ5ICfhdc+cNzCl9GulFSj7DyfYreg3vNVWAScT6Flx7Ou+61XE1qYt\nk0g+pUAINDPhO8O//n2iZCtCOv8nOlSlHFg8L35rptn/CUBWegE=\n=w3+W\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a30ab935b4c1f1826b91d8ba5ab2bf9841746d6\nparent 63a657ccff959f7d86f423607f69aa9f7507dbdb\nauthor Michael Dietz <michael.dietz@waya.ai> 1632928801 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824128 -0600\n\nfuzz: speedup ScriptToUniv and TxToUniv tests by dropping redundant call\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63a657ccff959f7d86f423607f69aa9f7507dbdb"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "daf4e69c221809338ac7ec160c202f2559f7e125",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
        "patch": "@@ -109,9 +109,7 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ true, /* include_address= */ false);\n-    UniValue o2(UniValue::VOBJ);\n-    ScriptToUniv(script, /* out= */ o2, /* include_hex= */ false, /* include_address= */ false);\n+    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ fuzzed_data_provider.ConsumeBool(), /* include_address= */ fuzzed_data_provider.ConsumeBool());\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "091858b14df1937508bfddc757f7a5afe2990da0",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
        "patch": "@@ -102,7 +102,12 @@ FUZZ_TARGET_INIT(transaction, initialize_transaction)\n     (void)AreInputsStandard(tx, coins_view_cache, true);\n     (void)IsWitnessStandard(tx, coins_view_cache);\n \n+    bool block_hash{false};\n+    bool include_hex{false};\n+    try {\n+        ds >> block_hash;\n+        ds >> include_hex;\n+    } catch (const std::ios_base::failure&) {}\n     UniValue u(UniValue::VOBJ);\n-    TxToUniv(tx, /* block_hash= */ uint256::ZERO, /* entry= */ u);\n-    TxToUniv(tx, /* block_hash= */ uint256::ONE, /* entry= */ u);\n+    TxToUniv(tx, /* block_hash= */ uint256{block_hash}, /* entry= */ u, include_hex);\n }"
      }
    ]
  }
]