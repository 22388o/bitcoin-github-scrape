[
  {
    "sha": "fac6de58824c0e1fde57a9fb522e115644ee171b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM2ZGU1ODgyNGMwZTFmZGU1N2E5ZmI1MjJlMTE1NjQ0ZWUxNzFi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-06T18:36:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-03-10T08:04:21Z"
      },
      "message": "rpc: Add missing BlockUntilSyncedToCurrentChain to wallet RPCs\n\nWallet RPCs that allow a rescan based on block-timestamp or block-height\nneed to sync with the active chain first, because the user might assume\nthe wallet is up-to-date with the latest block they got reported via a\nblockchain RPC.",
      "tree": {
        "sha": "f9155ff428c38004eedf99df6334d80d200f311c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9155ff428c38004eedf99df6334d80d200f311c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac6de58824c0e1fde57a9fb522e115644ee171b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUguXwv+OHX8atHKyyt/+NwAyKFS1qasWzKZUd1LbeXC9ZvjMhvp8W5/RtIhcUzy\nzgZLIleOu8Wgu02Ji95h7cJSmM5UgsBuPipeB8GG/OmHzsYjRbobONtfweSdtblK\n8uHk6/I7JbrgUxyYa7Eo3wf0gvThGXxy/7jG+qp1qJfGp/lQgxC6m/I/UMQ9PvhR\ndsk6CO8Fs7dj+PBTA5hSMqRST1BbkjkM9RoKDUO5BxOPFX4B8/K9wRft/0DyYzCL\nuC0GMdp0EADASfm7IPA2NJame6+e47/Moa2s9hLemKB4sfXXyNam61U3S/k0ffGh\nnyPEtKZ08AUQRIHYm16ijumRKlM3hR4NhzCHKc3UM9OSo5fGwORf7tTcor0T1Xgd\nIrnaqxB/gBDGqVYFwpBBAkIAGeCExG+PeD/FkmrOl03Z59g5kCjLZnMNqj6b2KWF\nsBxPRDRKdsZ1vSnGsUaOHo9H1gTqzsRkRvPc37VZlpXJedJ5nt+uHJAu0KG8g6tR\n9CdMmhqB\n=4Sbn\n-----END PGP SIGNATURE-----",
        "payload": "tree f9155ff428c38004eedf99df6334d80d200f311c\nparent eea6196c3d8056e51e1780a44ac7f599331247e5\nauthor MarcoFalke <falke.marco@gmail.com> 1607279800 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1615363461 +0100\n\nrpc: Add missing BlockUntilSyncedToCurrentChain to wallet RPCs\n\nWallet RPCs that allow a rescan based on block-timestamp or block-height\nneed to sync with the active chain first, because the user might assume\nthe wallet is up-to-date with the latest block they got reported via a\nblockchain RPC.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac6de58824c0e1fde57a9fb522e115644ee171b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac6de58824c0e1fde57a9fb522e115644ee171b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac6de58824c0e1fde57a9fb522e115644ee171b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eea6196c3d8056e51e1780a44ac7f599331247e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eea6196c3d8056e51e1780a44ac7f599331247e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eea6196c3d8056e51e1780a44ac7f599331247e5"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "dcc4d229686c6c0cd1be31469ce30171ddf79198",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac6de58824c0e1fde57a9fb522e115644ee171b/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac6de58824c0e1fde57a9fb522e115644ee171b/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=fac6de58824c0e1fde57a9fb522e115644ee171b",
        "patch": "@@ -1330,6 +1330,11 @@ RPCHelpMan importmulti()\n {\n     std::shared_ptr<CWallet> const pwallet = GetWalletForJSONRPCRequest(mainRequest);\n     if (!pwallet) return NullUniValue;\n+    CWallet& wallet = *pwallet;\n+\n+    // Make sure the results are valid at least up to the most recent block\n+    // the user could have gotten from another RPC command prior to now\n+    wallet.BlockUntilSyncedToCurrentChain();\n \n     RPCTypeCheck(mainRequest.params, {UniValue::VARR, UniValue::VOBJ});\n \n@@ -1634,6 +1639,11 @@ RPCHelpMan importdescriptors()\n {\n     std::shared_ptr<CWallet> const pwallet = GetWalletForJSONRPCRequest(main_request);\n     if (!pwallet) return NullUniValue;\n+    CWallet& wallet = *pwallet;\n+\n+    // Make sure the results are valid at least up to the most recent block\n+    // the user could have gotten from another RPC command prior to now\n+    wallet.BlockUntilSyncedToCurrentChain();\n \n     //  Make sure wallet is a descriptor wallet\n     if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {"
      },
      {
        "sha": "8034125e4bc9234211f2186cfd3f23b71b49e1fe",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac6de58824c0e1fde57a9fb522e115644ee171b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac6de58824c0e1fde57a9fb522e115644ee171b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fac6de58824c0e1fde57a9fb522e115644ee171b",
        "patch": "@@ -3580,6 +3580,11 @@ static RPCHelpMan rescanblockchain()\n {\n     std::shared_ptr<CWallet> const pwallet = GetWalletForJSONRPCRequest(request);\n     if (!pwallet) return NullUniValue;\n+    CWallet& wallet = *pwallet;\n+\n+    // Make sure the results are valid at least up to the most recent block\n+    // the user could have gotten from another RPC command prior to now\n+    wallet.BlockUntilSyncedToCurrentChain();\n \n     WalletRescanReserver reserver(*pwallet);\n     if (!reserver.reserve()) {"
      },
      {
        "sha": "f53b0b154701acdbe58282d949f4fcd17ae8e549",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac6de58824c0e1fde57a9fb522e115644ee171b/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac6de58824c0e1fde57a9fb522e115644ee171b/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=fac6de58824c0e1fde57a9fb522e115644ee171b",
        "patch": "@@ -64,7 +64,6 @@ def run_test(self):\n         self.nodes[0].generate(1)\n         self.nodes[1].generate(1)\n         timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n-        self.nodes[1].syncwithvalidationinterfacequeue()  # Sync the timestamp to the wallet, so that importmulti works\n \n         node0_address1 = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n \n@@ -259,7 +258,6 @@ def run_test(self):\n         self.nodes[1].sendtoaddress(multisig.p2sh_addr, 10.00)\n         self.nodes[1].generate(1)\n         timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n-        self.nodes[1].syncwithvalidationinterfacequeue()\n \n         self.log.info(\"Should import a p2sh\")\n         self.test_importmulti({\"scriptPubKey\": {\"address\": multisig.p2sh_addr},\n@@ -280,7 +278,6 @@ def run_test(self):\n         self.nodes[1].sendtoaddress(multisig.p2sh_addr, 10.00)\n         self.nodes[1].generate(1)\n         timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n-        self.nodes[1].syncwithvalidationinterfacequeue()\n \n         self.log.info(\"Should import a p2sh with respective redeem script\")\n         self.test_importmulti({\"scriptPubKey\": {\"address\": multisig.p2sh_addr},\n@@ -301,7 +298,6 @@ def run_test(self):\n         self.nodes[1].sendtoaddress(multisig.p2sh_addr, 10.00)\n         self.nodes[1].generate(1)\n         timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n-        self.nodes[1].syncwithvalidationinterfacequeue()\n \n         self.log.info(\"Should import a p2sh with respective redeem script and private keys\")\n         self.test_importmulti({\"scriptPubKey\": {\"address\": multisig.p2sh_addr},\n@@ -327,7 +323,6 @@ def run_test(self):\n         self.nodes[1].sendtoaddress(multisig.p2sh_addr, 10.00)\n         self.nodes[1].generate(1)\n         timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n-        self.nodes[1].syncwithvalidationinterfacequeue()\n \n         self.log.info(\"Should import a p2sh with respective redeem script and private keys\")\n         self.test_importmulti({\"scriptPubKey\": {\"address\": multisig.p2sh_addr},"
      }
    ]
  }
]