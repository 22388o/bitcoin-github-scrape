DrahtBot,2019-10-26 11:55:29,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18202 (refactor: consolidate sendmany and sendtoaddress code by Sjors)\n* #18115 (wallet: Pass in transactions and messag",https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-546596095,546596095,
jb55,2019-10-27 12:10:15,Concept/Approach ACK 29a21c90610aed88b796a7a5900e42e9048b990e,https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-546688399,546688399,
instagibbs,2019-11-14 16:28:16,"imo the privacy ship has sailed on PSBTs, we have no functionality to *remove* data from PSBTs yet, and no conceptual workflow to manage such a thing. We have thought about this in context of Confidential Assets as well dealing with blinded amounts/assets. It's complicated.\n\nTherefore, concept ACK",https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-553966504,553966504,
sipa,2019-12-04 19:17:26,"Privacy in PSBTs is hard; if done properly, it should probably mean having different domains of participants/signers, and filtering out private information when crossing boundaries. I don't think it's simple, or something that can be delegated to users using a flag at signing time (because usually you'd want to reveal that derivation information to e.g. your hardware wallet but not to other signer",https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-561797679,561797679,
achow101,2019-12-04 19:31:21,ACK 29a21c90610aed88b796a7a5900e42e9048b990e,https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-561803480,561803480,
sipa,2020-01-31 02:43:11,"Code review ACK 29a21c90610aed88b796a7a5900e42e9048b990e. The changes look straightforward, but a test that these fields are filled would be nice.",https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-580557435,580557435,
Sjors,2020-01-31 09:39:15,"I added a commit with a test demonstrating the default behavior. Good call, because I discovered #18039 in the process. _Update:_ it's a feature, not a bug :-)",https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-580659675,580659675,
Sjors,2020-02-20 15:30:02,"I won't rebase, to preserve ACKs, but I did run the test suite locally on a rebased version.",https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-589126110,589126110,
jonatack,2020-02-20 16:35:35,I wonder if a deprecation process would be good here. Edit: probably not; this fixes an annoyance.,https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-589171173,589171173,
instagibbs,2020-02-20 21:21:03,utACK https://github.com/bitcoin/bitcoin/pull/17264/commits/5bad7921d0b33b62c0a59a478c2e8c869fc5e3b5,https://github.com/bitcoin/bitcoin/pull/17264#issuecomment-589324279,589324279,
instagibbs,2020-02-20 17:45:51,why is it important that signing is `False` and specified sighash flag??,https://github.com/bitcoin/bitcoin/pull/17264#discussion_r382157195,382157195,test/functional/rpc_psbt.py
Sjors,2020-02-20 19:57:39,Because otherwise the test runs into #18039,https://github.com/bitcoin/bitcoin/pull/17264#discussion_r382225431,382225431,test/functional/rpc_psbt.py
