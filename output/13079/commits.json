[
  {
    "sha": "16be13345e4f9ab9186570c83828db94e3a3d607",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmJlMTMzNDVlNGY5YWI5MTg2NTcwYzgzODI4ZGI5NGUzYTNkNjA3",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-25T19:21:38Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-05-03T17:18:10Z"
      },
      "message": "Fix rescanblockchain rpc to property report progress\n\nCWallet::ScanForWalletTransactions did not previously take into account\npindexStop when calculating progress.\n\nRenamed progress vars to progress_*.\n\nrescanblockchain is the only rpc that uses this parameter.",
      "tree": {
        "sha": "a5182dc9cebebd13f06fa07b9eed85eb61e27f98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5182dc9cebebd13f06fa07b9eed85eb61e27f98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16be13345e4f9ab9186570c83828db94e3a3d607",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJa60RUAAoJEG7l83hfeLNF+7gIAJYJ4k5MqgDcksV9eeRwspUh\nZnsO71i0bFXTDLLy7yq2QDFXPetO8rN/0Kka598tGiLAKbI68D2C8fqGSLgbvm3G\nyW8QkHURMJM+NbFBvLOW/Amd2GN1/qVcCzS2b19JP4w2JbPxIE0+/byQX7wQGEiT\n08HQOav0GGnprr/LeGTHLOE25aG5+TjsnpGlTVHpMm3u+4nTI190pslIGktLOoqi\nR19U9Xk3HAju7K18hfrp9kKzkpynZ5TorIR3Is4SWtLS2qs9DZ7JMjWr/QjyQQSH\nNduUouZi2Ys2hVclq7UfH4918pSz6Xf1DwB5cQSi99iSmmikASnmKFqiSZbgfV8=\n=ZPBZ\n-----END PGP SIGNATURE-----",
        "payload": "tree a5182dc9cebebd13f06fa07b9eed85eb61e27f98\nparent 7eb7076f70078c06bef9752f22acf92fd86e616a\nauthor Ben Woosley <ben.woosley@gmail.com> 1524684098 +0000\ncommitter Ben Woosley <ben.woosley@gmail.com> 1525367890 -0400\n\nFix rescanblockchain rpc to property report progress\n\nCWallet::ScanForWalletTransactions did not previously take into account\npindexStop when calculating progress.\n\nRenamed progress vars to progress_*.\n\nrescanblockchain is the only rpc that uses this parameter.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16be13345e4f9ab9186570c83828db94e3a3d607",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16be13345e4f9ab9186570c83828db94e3a3d607",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16be13345e4f9ab9186570c83828db94e3a3d607/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7eb7076f70078c06bef9752f22acf92fd86e616a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eb7076f70078c06bef9752f22acf92fd86e616a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7eb7076f70078c06bef9752f22acf92fd86e616a"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 18,
      "deletions": 14
    },
    "files": [
      {
        "sha": "96242c6b1336bb8db3210bb4457f6885d527e39b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16be13345e4f9ab9186570c83828db94e3a3d607/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16be13345e4f9ab9186570c83828db94e3a3d607/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=16be13345e4f9ab9186570c83828db94e3a3d607",
        "patch": "@@ -1745,23 +1745,27 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n         fAbortRescan = false;\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n         CBlockIndex* tip = nullptr;\n-        double dProgressStart;\n-        double dProgressTip;\n+        double progress_begin;\n+        double progress_end;\n         {\n             LOCK(cs_main);\n-            tip = chainActive.Tip();\n-            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+            progress_begin = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            if (pindexStop == nullptr) {\n+                tip = chainActive.Tip();\n+                progress_end = GuessVerificationProgress(chainParams.TxData(), tip);\n+            } else {\n+                progress_end = GuessVerificationProgress(chainParams.TxData(), pindexStop);\n+            }\n         }\n-        double gvp = dProgressStart;\n+        double progress_current = progress_begin;\n         while (pindex && !fAbortRescan && !ShutdownRequested())\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((gvp - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && progress_end - progress_begin > 0.0) {\n+                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((progress_current - progress_begin) / (progress_end - progress_begin) * 100))));\n             }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n-                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, gvp);\n+                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, progress_current);\n             }\n \n             CBlock block;\n@@ -1785,18 +1789,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             {\n                 LOCK(cs_main);\n                 pindex = chainActive.Next(pindex);\n-                gvp = GuessVerificationProgress(chainParams.TxData(), pindex);\n-                if (tip != chainActive.Tip()) {\n+                progress_current = GuessVerificationProgress(chainParams.TxData(), pindex);\n+                if (pindexStop == nullptr && tip != chainActive.Tip()) {\n                     tip = chainActive.Tip();\n                     // in case the tip has changed, update progress max\n-                    dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+                    progress_end = GuessVerificationProgress(chainParams.TxData(), tip);\n                 }\n             }\n         }\n         if (pindex && fAbortRescan) {\n-            LogPrintf(\"Rescan aborted at block %d. Progress=%f\\n\", pindex->nHeight, gvp);\n+            LogPrintf(\"Rescan aborted at block %d. Progress=%f\\n\", pindex->nHeight, progress_current);\n         } else if (pindex && ShutdownRequested()) {\n-            LogPrintf(\"Rescan interrupted by shutdown request at block %d. Progress=%f\\n\", pindex->nHeight, gvp);\n+            LogPrintf(\"Rescan interrupted by shutdown request at block %d. Progress=%f\\n\", pindex->nHeight, progress_current);\n         }\n         ShowProgress(_(\"Rescanning...\"), 100); // hide progress dialog in GUI\n     }"
      }
    ]
  }
]