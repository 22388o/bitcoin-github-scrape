[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451848663",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#issuecomment-451848663",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15118",
    "id": 451848663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTg0ODY2Mw==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T07:48:32Z",
    "updated_at": "2019-01-07T07:48:32Z",
    "author_association": "MEMBER",
    "body": "Concept ACK hooray objects!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451848663/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452898676",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#issuecomment-452898676",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15118",
    "id": 452898676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg5ODY3Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T22:48:36Z",
    "updated_at": "2019-03-02T15:24:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15340](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15340.html) (gui: Introduce bilingual GUI error messages by hebasto)\n* [#13868](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13868.html) (Remove unused fScriptChecks parameter from CheckInputs by Empact)\n* [#13746](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13746.html) (-masterdatadir for datadir bootstrapping by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452898676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468965994",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#issuecomment-468965994",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15118",
    "id": 468965994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk2NTk5NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T22:21:08Z",
    "updated_at": "2019-03-02T22:21:08Z",
    "author_association": "MEMBER",
    "body": "utACK 04cca330944f859b4ed68cb8da8a79f5206fd630",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468965994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245562887",
    "pull_request_review_id": 189693788,
    "id": 245562887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU2Mjg4Nw==",
    "diff_hunk": "@@ -1631,8 +1631,8 @@ bool AppInitMain(InitInterfaces& interfaces)\n \n     // ********************************************************* Step 11: import blocks\n \n-    if (!CheckDiskSpace() && !CheckDiskSpace(0, true))\n-        return false;\n+    if (!CheckDiskSpace(GetDataDir()) && !CheckDiskSpace(GetBlocksDir()))",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9ab64b2276b2ab6638987282cce16be9b682d490",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this not be `||`? /cc @jonasschnelli 386a6b62a8a1db9dd0f354cb95b7585f555c7e5d",
    "created_at": "2019-01-07T07:04:02Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245562887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245562887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245562887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245562887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1634,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245563648",
    "pull_request_review_id": 189694792,
    "id": 245563648,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU2MzY0OA==",
    "diff_hunk": "@@ -78,6 +78,9 @@\n #include <openssl/conf.h>\n #include <thread>\n \n+/** Minimum disk space required - used in CheckDiskSpace() */\n+static constexpr uint64_t nMinDiskSpace = 52428800;",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "2af8b710b3183e82f7ff898a5c42502bab4bf753",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: could be static within the function",
    "created_at": "2019-01-07T07:10:08Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245563648",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245563648"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245563648"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245563648/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 82,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245565332",
    "pull_request_review_id": 189696918,
    "id": 245565332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU2NTMzMg==",
    "diff_hunk": "@@ -0,0 +1,36 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <chain.h>\n+#include <fs.h>\n+\n+/**\n+ * FlatFileSeq represents a sequence of numbered files storing raw data. This class facilitates\n+ * access to and efficient management of these files.\n+ */\n+class FlatFileSeq\n+{\n+private:\n+    fs::path m_dir;\n+    const char* m_prefix;\n+    size_t m_chunk_size;",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 20,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: These could each be const.\r\n`#include <cstddef>` for `size_t`",
    "created_at": "2019-01-07T07:22:24Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245565332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245565332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245565332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245565332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245567581",
    "pull_request_review_id": 189699366,
    "id": 245567581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU2NzU4MQ==",
    "diff_hunk": "@@ -45,6 +45,15 @@ class FlatFileSeq\n      * @return The number of bytes successfully allocated.\n      */\n     size_t Allocate(const CDiskBlockPos& pos, size_t add_size, bool& out_of_space);\n+\n+    /**\n+     * Commit a file to disk, and optionally truncate off extra pre-allocated bytes if final.\n+     *\n+     * @param[in] pos The first unwritten position in the file to be flushed.\n+     * @param[in] finalize True if no more data will be written to this file.\n+     * @return True on success, false on failure.",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 10,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "d48754408bb36c8105002b1515ab8bb12db9313b",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `true`",
    "created_at": "2019-01-07T07:34:40Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245567581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245567581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245567581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245567581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245568440",
    "pull_request_review_id": 189700488,
    "id": 245568440,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU2ODQ0MA==",
    "diff_hunk": "@@ -1631,25 +1631,12 @@ void static FlushBlockFile(bool fFinalize = false)\n {\n     LOCK(cs_LastBlockFile);\n \n-    CDiskBlockPos posOld(nLastBlockFile, 0);\n-    bool status = true;\n-\n-    FILE *fileOld = OpenBlockFile(posOld);\n-    if (fileOld) {\n-        if (fFinalize)\n-            status &= TruncateFile(fileOld, vinfoBlockFile[nLastBlockFile].nSize);\n-        status &= FileCommit(fileOld);\n-        fclose(fileOld);\n-    }\n-\n-    fileOld = OpenUndoFile(posOld);\n-    if (fileOld) {\n-        if (fFinalize)\n-            status &= TruncateFile(fileOld, vinfoBlockFile[nLastBlockFile].nUndoSize);\n-        status &= FileCommit(fileOld);\n-        fclose(fileOld);\n-    }\n+    CDiskBlockPos block_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nSize);\n+    CDiskBlockPos undo_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nUndoSize);\n \n+    bool status = true;\n+    status &= BlockFileSeq().Flush(block_pos_old, fFinalize);\n+    status &= UndoFileSeq().Flush(undo_pos_old, fFinalize);",
    "path": "src/validation.cpp",
    "position": 130,
    "original_position": 27,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "d48754408bb36c8105002b1515ab8bb12db9313b",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this adds an extra `fseek` via `Open` each.",
    "created_at": "2019-01-07T07:40:07Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245568440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245568440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245568440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245568440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1638,
    "original_line": 1638,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245569540",
    "pull_request_review_id": 189701918,
    "id": 245569540,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU2OTU0MA==",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <string>\n+\n+#include <fs.h>\n+#include <serialize.h>\n+\n+struct FlatFilePos\n+{\n+    int nFile;\n+    unsigned int nPos;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(VARINT(nFile, VarIntMode::NONNEGATIVE_SIGNED));\n+        READWRITE(VARINT(nPos));\n+    }\n+\n+    FlatFilePos() {\n+        SetNull();\n+    }\n+\n+    FlatFilePos(int nFileIn, unsigned int nPosIn) {\n+        nFile = nFileIn;\n+        nPos = nPosIn;\n+    }\n+\n+    friend bool operator==(const FlatFilePos &a, const FlatFilePos &b) {\n+        return (a.nFile == b.nFile && a.nPos == b.nPos);\n+    }\n+\n+    friend bool operator!=(const FlatFilePos &a, const FlatFilePos &b) {\n+        return !(a == b);\n+    }\n+\n+    void SetNull() { nFile = -1; nPos = 0; }\n+    bool IsNull() const { return (nFile == -1); }\n+\n+    std::string ToString() const;",
    "path": "src/flatfile.h",
    "position": 45,
    "original_position": 47,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "13583e8a5edbb433f3e92562080786f8c079c5ca",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`#include <string>`",
    "created_at": "2019-01-07T07:47:09Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245569540",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245569540"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245569540"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245569540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 45,
    "original_line": 45,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245589527",
    "pull_request_review_id": 189726949,
    "id": 245589527,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU4OTUyNw==",
    "diff_hunk": "@@ -2135,8 +2135,10 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n         // Write blocks and block index to disk.\n         if (fDoFullFlush || fPeriodicWrite) {\n             // Depend on nMinDiskSpace to ensure we can write block index\n-            if (!CheckDiskSpace(0, true))\n+            if (!CheckDiskSpace(GetBlocksDir(), 0)) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "2af8b710b3183e82f7ff898a5c42502bab4bf753",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit 2af8b71\r\n\r\nRemove 2nd arg, it's the default?",
    "created_at": "2019-01-07T09:21:53Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245589527",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245589527"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245589527"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245589527/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2138,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245591202",
    "pull_request_review_id": 189726949,
    "id": 245591202,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU5MTIwMg==",
    "diff_hunk": "@@ -3024,7 +3028,7 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n                 }\n             }\n             else",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "2af8b710b3183e82f7ff898a5c42502bab4bf753",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit 2af8b71\r\n\r\nCare add `{}`?",
    "created_at": "2019-01-07T09:27:42Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245591202",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245591202"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245591202"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245591202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3030,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592023",
    "pull_request_review_id": 189726949,
    "id": 245592023,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU5MjAyMw==",
    "diff_hunk": "@@ -0,0 +1,15 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <tinyformat.h>\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit 88cf780\r\n\r\nnit, initialize one per line?",
    "created_at": "2019-01-07T09:30:07Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592023",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592023"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592023"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592409",
    "pull_request_review_id": 189726949,
    "id": 245592409,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU5MjQwOQ==",
    "diff_hunk": "@@ -0,0 +1,36 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <chain.h>\n+#include <fs.h>\n+\n+/**\n+ * FlatFileSeq represents a sequence of numbered files storing raw data. This class facilitates\n+ * access to and efficient management of these files.\n+ */\n+class FlatFileSeq\n+{\n+private:\n+    fs::path m_dir;\n+    const char* m_prefix;\n+    size_t m_chunk_size;",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 20,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit 88cf780\r\n\r\nAgree with `const` members.",
    "created_at": "2019-01-07T09:31:10Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592409",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592409"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592409"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT",
    "in_reply_to_id": 245565332
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592900",
    "pull_request_review_id": 189726949,
    "id": 245592900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU5MjkwMA==",
    "diff_hunk": "@@ -0,0 +1,36 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <chain.h>",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 8,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit 88cf780\r\n\r\nPrefer forward declaration of `CDiskBlockPos`?",
    "created_at": "2019-01-07T09:33:03Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592900",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592900"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245592900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 8,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245594004",
    "pull_request_review_id": 189726949,
    "id": 245594004,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU5NDAwNA==",
    "diff_hunk": "@@ -3802,9 +3815,9 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)",
    "path": "src/validation.cpp",
    "position": 370,
    "original_position": 49,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit 88cf780\r\n\r\nnit, remove?",
    "created_at": "2019-01-07T09:36:20Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245594004",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245594004"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245594004"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245594004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3809,
    "original_line": 3809,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245595454",
    "pull_request_review_id": 189726949,
    "id": 245595454,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTU5NTQ1NA==",
    "diff_hunk": "@@ -13,3 +14,26 @@ fs::path FlatFileSeq::FileName(const CDiskBlockPos& pos) const\n {\n     return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n }\n+\n+FILE* FlatFileSeq::Open(const CDiskBlockPos& pos, bool fReadOnly)",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "ad59122358b936613cb7ea51ff490595e1c13e40",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit ad59122\r\n\r\nJust asking for a follow up, could this be changed to `std::fstream`?",
    "created_at": "2019-01-07T09:41:36Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245595454",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245595454"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245595454"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245595454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245726324",
    "pull_request_review_id": 189900452,
    "id": 245726324,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTcyNjMyNA==",
    "diff_hunk": "@@ -1631,8 +1631,8 @@ bool AppInitMain(InitInterfaces& interfaces)\n \n     // ********************************************************* Step 11: import blocks\n \n-    if (!CheckDiskSpace() && !CheckDiskSpace(0, true))\n-        return false;\n+    if (!CheckDiskSpace(GetDataDir()) && !CheckDiskSpace(GetBlocksDir()))",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9ab64b2276b2ab6638987282cce16be9b682d490",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, seems like it to me.",
    "created_at": "2019-01-07T17:01:38Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245726324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245726324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245726324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245726324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1634,
    "side": "RIGHT",
    "in_reply_to_id": 245562887
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245728116",
    "pull_request_review_id": 189902746,
    "id": 245728116,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTcyODExNg==",
    "diff_hunk": "@@ -1631,25 +1631,12 @@ void static FlushBlockFile(bool fFinalize = false)\n {\n     LOCK(cs_LastBlockFile);\n \n-    CDiskBlockPos posOld(nLastBlockFile, 0);\n-    bool status = true;\n-\n-    FILE *fileOld = OpenBlockFile(posOld);\n-    if (fileOld) {\n-        if (fFinalize)\n-            status &= TruncateFile(fileOld, vinfoBlockFile[nLastBlockFile].nSize);\n-        status &= FileCommit(fileOld);\n-        fclose(fileOld);\n-    }\n-\n-    fileOld = OpenUndoFile(posOld);\n-    if (fileOld) {\n-        if (fFinalize)\n-            status &= TruncateFile(fileOld, vinfoBlockFile[nLastBlockFile].nUndoSize);\n-        status &= FileCommit(fileOld);\n-        fclose(fileOld);\n-    }\n+    CDiskBlockPos block_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nSize);\n+    CDiskBlockPos undo_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nUndoSize);\n \n+    bool status = true;\n+    status &= BlockFileSeq().Flush(block_pos_old, fFinalize);\n+    status &= UndoFileSeq().Flush(undo_pos_old, fFinalize);",
    "path": "src/validation.cpp",
    "position": 130,
    "original_position": 27,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "d48754408bb36c8105002b1515ab8bb12db9313b",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch",
    "created_at": "2019-01-07T17:07:04Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245728116",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245728116"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245728116"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245728116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1638,
    "original_line": 1638,
    "side": "RIGHT",
    "in_reply_to_id": 245568440
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245728196",
    "pull_request_review_id": 189902845,
    "id": 245728196,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTcyODE5Ng==",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <string>\n+\n+#include <fs.h>\n+#include <serialize.h>\n+\n+struct FlatFilePos\n+{\n+    int nFile;\n+    unsigned int nPos;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(VARINT(nFile, VarIntMode::NONNEGATIVE_SIGNED));\n+        READWRITE(VARINT(nPos));\n+    }\n+\n+    FlatFilePos() {\n+        SetNull();\n+    }\n+\n+    FlatFilePos(int nFileIn, unsigned int nPosIn) {\n+        nFile = nFileIn;\n+        nPos = nPosIn;\n+    }\n+\n+    friend bool operator==(const FlatFilePos &a, const FlatFilePos &b) {\n+        return (a.nFile == b.nFile && a.nPos == b.nPos);\n+    }\n+\n+    friend bool operator!=(const FlatFilePos &a, const FlatFilePos &b) {\n+        return !(a == b);\n+    }\n+\n+    void SetNull() { nFile = -1; nPos = 0; }\n+    bool IsNull() const { return (nFile == -1); }\n+\n+    std::string ToString() const;",
    "path": "src/flatfile.h",
    "position": 45,
    "original_position": 47,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "13583e8a5edbb433f3e92562080786f8c079c5ca",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's included.",
    "created_at": "2019-01-07T17:07:18Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245728196",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245728196"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245728196"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245728196/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 45,
    "original_line": 45,
    "side": "RIGHT",
    "in_reply_to_id": 245569540
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245729668",
    "pull_request_review_id": 189904820,
    "id": 245729668,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTcyOTY2OA==",
    "diff_hunk": "@@ -3024,7 +3028,7 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n                 }\n             }\n             else",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "2af8b710b3183e82f7ff898a5c42502bab4bf753",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added the braces after the code is moved to `FlatFileSeq::Allocate`.",
    "created_at": "2019-01-07T17:12:10Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245729668",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245729668"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245729668"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245729668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3030,
    "side": "RIGHT",
    "in_reply_to_id": 245591202
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245729820",
    "pull_request_review_id": 189905009,
    "id": 245729820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTcyOTgyMA==",
    "diff_hunk": "@@ -0,0 +1,15 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <tinyformat.h>\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't see this in the style guide?",
    "created_at": "2019-01-07T17:12:40Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245729820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245729820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245729820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245729820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT",
    "in_reply_to_id": 245592023
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730040",
    "pull_request_review_id": 189905265,
    "id": 245730040,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTczMDA0MA==",
    "diff_hunk": "@@ -0,0 +1,36 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <chain.h>",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 8,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. Though CDiskBlockPos is moved into this header later on, so I don't think it's necessary to change in the earlier commit.",
    "created_at": "2019-01-07T17:13:16Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730040",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730040"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730040"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730040/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 8,
    "side": "RIGHT",
    "in_reply_to_id": 245592900
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730162",
    "pull_request_review_id": 189905427,
    "id": 245730162,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTczMDE2Mg==",
    "diff_hunk": "@@ -3802,9 +3815,9 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)",
    "path": "src/validation.cpp",
    "position": 370,
    "original_position": 49,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's used once in `init.cpp`.",
    "created_at": "2019-01-07T17:13:37Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730162",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730162"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730162"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3809,
    "original_line": 3809,
    "side": "LEFT",
    "in_reply_to_id": 245594004
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730847",
    "pull_request_review_id": 189906305,
    "id": 245730847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTczMDg0Nw==",
    "diff_hunk": "@@ -13,3 +14,26 @@ fs::path FlatFileSeq::FileName(const CDiskBlockPos& pos) const\n {\n     return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n }\n+\n+FILE* FlatFileSeq::Open(const CDiskBlockPos& pos, bool fReadOnly)",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "ad59122358b936613cb7ea51ff490595e1c13e40",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe... but a lot of file utilities like `FileCommit`, `AllocateFileRange`, etc would have to be modified as well. I think the better approach would be to return a `CAutoFile` and define the move constructor/assignment operator properly. And probably move it to a different module, like in util.",
    "created_at": "2019-01-07T17:15:51Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245730847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 245595454
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245735065",
    "pull_request_review_id": 189911813,
    "id": 245735065,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTczNTA2NQ==",
    "diff_hunk": "@@ -3802,9 +3815,9 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)",
    "path": "src/validation.cpp",
    "position": 370,
    "original_position": 49,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I know, just inline where needed?",
    "created_at": "2019-01-07T17:29:14Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245735065",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245735065"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245735065"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245735065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3809,
    "original_line": 3809,
    "side": "LEFT",
    "in_reply_to_id": 245594004
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245760248",
    "pull_request_review_id": 189944250,
    "id": 245760248,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTc2MDI0OA==",
    "diff_hunk": "@@ -3802,9 +3815,9 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)",
    "path": "src/validation.cpp",
    "position": 370,
    "original_position": 49,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That would mean require `BlockFileSeq`, which is currently static and a broader interface.",
    "created_at": "2019-01-07T18:54:46Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245760248",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245760248"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245760248"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245760248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3809,
    "original_line": 3809,
    "side": "LEFT",
    "in_reply_to_id": 245594004
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245761352",
    "pull_request_review_id": 189945678,
    "id": 245761352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTc2MTM1Mg==",
    "diff_hunk": "@@ -1631,8 +1631,8 @@ bool AppInitMain(InitInterfaces& interfaces)\n \n     // ********************************************************* Step 11: import blocks\n \n-    if (!CheckDiskSpace() && !CheckDiskSpace(0, true))\n-        return false;\n+    if (!CheckDiskSpace(GetDataDir()) && !CheckDiskSpace(GetBlocksDir()))",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9ab64b2276b2ab6638987282cce16be9b682d490",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "#15124",
    "created_at": "2019-01-07T18:58:30Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245761352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245761352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245761352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245761352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1634,
    "side": "RIGHT",
    "in_reply_to_id": 245562887
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245827237",
    "pull_request_review_id": 190030764,
    "id": 245827237,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgyNzIzNw==",
    "diff_hunk": "@@ -0,0 +1,15 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <tinyformat.h>\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You also don't see to declare class members in multiple lines, but fair enough.",
    "created_at": "2019-01-07T22:57:49Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245827237",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245827237"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245827237"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245827237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT",
    "in_reply_to_id": 245592023
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245831153",
    "pull_request_review_id": 190035743,
    "id": 245831153,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgzMTE1Mw==",
    "diff_hunk": "@@ -3802,9 +3815,9 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)",
    "path": "src/validation.cpp",
    "position": 370,
    "original_position": 49,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, just realized it's a static function in `validation.cpp`",
    "created_at": "2019-01-07T23:17:30Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245831153",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245831153"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245831153"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245831153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3809,
    "original_line": 3809,
    "side": "LEFT",
    "in_reply_to_id": 245594004
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246087519",
    "pull_request_review_id": 190359901,
    "id": 246087519,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjA4NzUxOQ==",
    "diff_hunk": "@@ -310,6 +311,8 @@ static void FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPr\n static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight);\n bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = nullptr);\n static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n+static FlatFileSeq BlockFileSeq();\n+static FlatFileSeq UndoFileSeq();",
    "path": "src/validation.cpp",
    "position": 33,
    "original_position": 13,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason not to just have these on-hand as global objects instead of having to reconstruct an object for each use through these functions? Obviously there isn't much of a performance concern given these calls happen before disk IO, but I'm just curious.",
    "created_at": "2019-01-08T17:37:04Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246087519",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246087519"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246087519"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246087519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246099197",
    "pull_request_review_id": 190359901,
    "id": 246099197,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjA5OTE5Nw==",
    "diff_hunk": "@@ -3017,21 +3017,13 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        if (nNewChunks > nOldChunks) {\n-            if (fPruneMode)\n-                fCheckForPruning = true;\n-            if (CheckDiskSpace(GetBlocksDir(), nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos)) {\n-                FILE *file = OpenBlockFile(pos);\n-                if (file) {\n-                    LogPrintf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n-                    AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n-                    fclose(file);\n-                }\n-            }\n-            else\n-                return AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        bool out_of_space;\n+        size_t bytes_allocated = UndoFileSeq().Allocate(pos, nAddSize, out_of_space);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "930e2839544dc82c333c2452f3cf6e662c5255e5",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should be `BlockFileSeq` and not `UndoFileSeq`, no?",
    "created_at": "2019-01-08T18:14:46Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246099197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246099197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246099197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246099197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3021,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246109696",
    "pull_request_review_id": 190388449,
    "id": 246109696,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjEwOTY5Ng==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(flatfile_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(flatfile_filename)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+\n+    FlatFilePos pos(456, 789);\n+\n+    FlatFileSeq seq1(data_dir, \"a\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq1.FileName(pos), data_dir / \"a00456.dat\");\n+\n+    FlatFileSeq seq2(data_dir / \"a\", \"b\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq2.FileName(pos), data_dir / \"a\" / \"b00456.dat\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_open)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 16 * 1024);\n+\n+    std::string line1(\"A purely peer-to-peer version of electronic cash would allow online \"\n+                      \"payments to be sent directly from one party to another without going \"\n+                      \"through a financial institution.\");\n+    std::string line2(\"Digital signatures provide part of the solution, but the main benefits are \"\n+                      \"lost if a trusted third party is still required to prevent double-spending.\");",
    "path": "src/test/flatfile_tests.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "13583e8a5edbb433f3e92562080786f8c079c5ca",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Cute.",
    "created_at": "2019-01-08T18:48:43Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246109696",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246109696"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246109696"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246109696/reactions",
      "total_count": 6,
      "+1": 0,
      "-1": 0,
      "laugh": 6,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 34,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246133462",
    "pull_request_review_id": 190419189,
    "id": 246133462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjEzMzQ2Mg==",
    "diff_hunk": "@@ -310,6 +311,8 @@ static void FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPr\n static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight);\n bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = nullptr);\n static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n+static FlatFileSeq BlockFileSeq();\n+static FlatFileSeq UndoFileSeq();",
    "path": "src/validation.cpp",
    "position": 33,
    "original_position": 13,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "They are constructed with `GetDataDir/GetBlocksDir` which are not static, so the initialization logic would get a bit tricky. Could be OK with lazy evaluation or something, but didn't seem worth it. Open to suggestions.",
    "created_at": "2019-01-08T20:03:45Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246133462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246133462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246133462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246133462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT",
    "in_reply_to_id": 246087519
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246133723",
    "pull_request_review_id": 190419563,
    "id": 246133723,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjEzMzcyMw==",
    "diff_hunk": "@@ -3017,21 +3017,13 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        if (nNewChunks > nOldChunks) {\n-            if (fPruneMode)\n-                fCheckForPruning = true;\n-            if (CheckDiskSpace(GetBlocksDir(), nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos)) {\n-                FILE *file = OpenBlockFile(pos);\n-                if (file) {\n-                    LogPrintf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n-                    AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n-                    fclose(file);\n-                }\n-            }\n-            else\n-                return AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        bool out_of_space;\n+        size_t bytes_allocated = UndoFileSeq().Allocate(pos, nAddSize, out_of_space);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "930e2839544dc82c333c2452f3cf6e662c5255e5",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, good catch.",
    "created_at": "2019-01-08T20:04:44Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246133723",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246133723"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246133723"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246133723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3021,
    "side": "RIGHT",
    "in_reply_to_id": 246099197
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246137546",
    "pull_request_review_id": 190424488,
    "id": 246137546,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjEzNzU0Ng==",
    "diff_hunk": "@@ -310,6 +311,8 @@ static void FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPr\n static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight);\n bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = nullptr);\n static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n+static FlatFileSeq BlockFileSeq();\n+static FlatFileSeq UndoFileSeq();",
    "path": "src/validation.cpp",
    "position": 33,
    "original_position": 13,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, okay. Like I said, no big deal AFAICT.",
    "created_at": "2019-01-08T20:18:42Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246137546",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246137546"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246137546"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246137546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT",
    "in_reply_to_id": 246087519
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246536417",
    "pull_request_review_id": 190930215,
    "id": 246536417,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjUzNjQxNw==",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <string>\n+\n+#include <fs.h>\n+#include <serialize.h>\n+\n+struct FlatFilePos\n+{\n+    int nFile;\n+    unsigned int nPos;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(VARINT(nFile, VarIntMode::NONNEGATIVE_SIGNED));\n+        READWRITE(VARINT(nPos));\n+    }\n+\n+    FlatFilePos() {\n+        SetNull();\n+    }\n+\n+    FlatFilePos(int nFileIn, unsigned int nPosIn) {\n+        nFile = nFileIn;\n+        nPos = nPosIn;\n+    }\n+\n+    friend bool operator==(const FlatFilePos &a, const FlatFilePos &b) {\n+        return (a.nFile == b.nFile && a.nPos == b.nPos);\n+    }\n+\n+    friend bool operator!=(const FlatFilePos &a, const FlatFilePos &b) {\n+        return !(a == b);\n+    }\n+\n+    void SetNull() { nFile = -1; nPos = 0; }\n+    bool IsNull() const { return (nFile == -1); }\n+\n+    std::string ToString() const;\n+};\n+\n+/**\n+ * FlatFileSeq represents a sequence of numbered files storing raw data. This class facilitates\n+ * access to and efficient management of these files.\n+ */\n+class FlatFileSeq\n+{\n+private:\n+    const fs::path m_dir;\n+    const char* const m_prefix;\n+    const size_t m_chunk_size;\n+\n+public:\n+    /**\n+     * Constructor\n+     *\n+     * @param dir The base directory that all files live in.\n+     * @param prefix A short prefix given to all file names.\n+     * @param chunk_size Disk space is pre-allocated in multiples of this amount.\n+     */\n+    FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size);\n+\n+    /** Get the name of the file at the given position. */\n+    fs::path FileName(const FlatFilePos& pos) const;\n+\n+    /** Open a handle to the file at the given position. */\n+    FILE* Open(const FlatFilePos& pos, bool read_only = false);",
    "path": "src/flatfile.h",
    "position": 73,
    "original_position": 75,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "fbbf962422f2c73f45ef759f1a38c1bfced56fe7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make sure parameter names match between declaration and definition :-)",
    "created_at": "2019-01-09T20:44:50Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246536417",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246536417"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246536417"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246536417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 73,
    "original_line": 73,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246536653",
    "pull_request_review_id": 190930519,
    "id": 246536653,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjUzNjY1Mw==",
    "diff_hunk": "@@ -0,0 +1,92 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool fReadOnly)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, fReadOnly ? \"rb\": \"rb+\");\n+    if (!file && !fReadOnly)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string());\n+            fclose(file);\n+            return nullptr;\n+        }\n+    }\n+    return file;\n+}\n+\n+size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_of_space)\n+{\n+    out_of_space = false;\n+\n+    unsigned int n_old_chunks = (pos.nPos + m_chunk_size - 1) / m_chunk_size;\n+    unsigned int n_new_chunks = (pos.nPos + add_size + m_chunk_size - 1) / m_chunk_size;\n+    if (n_new_chunks > n_old_chunks) {\n+        size_t old_size = pos.nPos;\n+        size_t new_size = n_new_chunks * m_chunk_size;\n+        size_t inc_size = new_size - old_size;\n+\n+        if (CheckDiskSpace(m_dir, inc_size)) {\n+            FILE *file = Open(pos);\n+            if (file) {\n+                LogPrintf(\"Pre-allocating up to position 0x%x in %s%05u.dat\\n\", new_size, m_prefix, pos.nFile);\n+                AllocateFileRange(file, pos.nPos, inc_size);\n+                fclose(file);\n+                return inc_size;\n+            }\n+        }\n+        else {",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "fbbf962422f2c73f45ef759f1a38c1bfced56fe7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Move `else {` one line up :-)",
    "created_at": "2019-01-09T20:45:44Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246536653",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246536653"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246536653"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246536653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250655268",
    "pull_request_review_id": 196093691,
    "id": 250655268,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDY1NTI2OA==",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FLATFILE_H\n+#define BITCOIN_FLATFILE_H\n+\n+#include <string>\n+\n+#include <fs.h>\n+#include <serialize.h>\n+\n+struct FlatFilePos\n+{\n+    int nFile;\n+    unsigned int nPos;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(VARINT(nFile, VarIntMode::NONNEGATIVE_SIGNED));\n+        READWRITE(VARINT(nPos));\n+    }\n+\n+    FlatFilePos() {\n+        SetNull();\n+    }\n+\n+    FlatFilePos(int nFileIn, unsigned int nPosIn) {\n+        nFile = nFileIn;\n+        nPos = nPosIn;\n+    }",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 34,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "fbbf962422f2c73f45ef759f1a38c1bfced56fe7",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I know this is kind of a move, but worth using an initializer list?",
    "created_at": "2019-01-24T15:36:08Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r250655268",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250655268"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r250655268"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250655268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252140925",
    "pull_request_review_id": 197933627,
    "id": 252140925,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0MDkyNQ==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers",
    "path": "src/flatfile.cpp",
    "position": 2,
    "original_position": 2,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Copyright looked off to me initially, but I guess if you move code, the copyright stays the same. (I was expecting \"2019\" only).",
    "created_at": "2019-01-30T07:27:19Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252140925",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252140925"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252140925"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252140925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2,
    "original_line": 2,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252141251",
    "pull_request_review_id": 197933627,
    "id": 252141251,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0MTI1MQ==",
    "diff_hunk": "@@ -0,0 +1,15 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <tinyformat.h>\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "88cf78032c221632643877dcada1ef38b3819460",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "+1 on one per line as it makes diffs prettier when adding/removing stuff, but I'm fine as it is too, since it's only 3 vars.",
    "created_at": "2019-01-30T07:29:02Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252141251",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252141251"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252141251"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252141251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT",
    "in_reply_to_id": 245592023
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252142212",
    "pull_request_review_id": 197933627,
    "id": 252142212,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0MjIxMg==",
    "diff_hunk": "@@ -45,6 +45,15 @@ class FlatFileSeq\n      * @return The number of bytes successfully allocated.\n      */\n     size_t Allocate(const CDiskBlockPos& pos, size_t add_size, bool& out_of_space);\n+\n+    /**\n+     * Commit a file to disk, and optionally truncate off extra pre-allocated bytes if final.\n+     *\n+     * @param[in] pos The first unwritten position in the file to be flushed.\n+     * @param[in] finalize True if no more data will be written to this file.\n+     * @return True on success, false on failure.",
    "path": "src/flatfile.h",
    "position": null,
    "original_position": 10,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "d48754408bb36c8105002b1515ab8bb12db9313b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Start of sentence `True` is fine IMO.",
    "created_at": "2019-01-30T07:33:37Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252142212",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252142212"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252142212"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252142212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 245567581
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252142551",
    "pull_request_review_id": 197933627,
    "id": 252142551,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0MjU1MQ==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;",
    "path": "src/flatfile.cpp",
    "position": 36,
    "original_position": 28,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a move I believe, so feel free to ignore: add `{}` or remove newline. (Also applies to code 4 lines down.)",
    "created_at": "2019-01-30T07:35:20Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252142551",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252142551"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252142551"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252142551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252143222",
    "pull_request_review_id": 197933627,
    "id": 252143222,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0MzIyMg==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, read_only ? \"rb\": \"rb+\");\n+    if (!file && !read_only)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can do single `if` here.\r\n```C++\r\nif (pos.nPos && fseek(file, pos.nPos, SEEK_SET)) {\r\n```\r\n",
    "created_at": "2019-01-30T07:38:40Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252143222",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252143222"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252143222"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252143222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 39,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252144706",
    "pull_request_review_id": 197933627,
    "id": 252144706,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0NDcwNg==",
    "diff_hunk": "@@ -71,6 +71,7 @@ void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length);\n bool RenameOver(fs::path src, fs::path dest);\n bool LockDirectory(const fs::path& directory, const std::string lockfile_name, bool probe_only=false);\n bool DirIsWritable(const fs::path& directory);\n+bool CheckDiskSpace(const fs::path& dir, uint64_t nAdditionalBytes = 0);",
    "path": "src/util/system.h",
    "position": null,
    "original_position": 4,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit/style: naming convention, `additional_bytes`?",
    "created_at": "2019-01-30T07:45:56Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252144706",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252144706"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252144706"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252144706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252146133",
    "pull_request_review_id": 197933627,
    "id": 252146133,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0NjEzMw==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(flatfile_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(flatfile_filename)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+\n+    FlatFilePos pos(456, 789);\n+\n+    FlatFileSeq seq1(data_dir, \"a\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq1.FileName(pos), data_dir / \"a00456.dat\");\n+\n+    FlatFileSeq seq2(data_dir / \"a\", \"b\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq2.FileName(pos), data_dir / \"a\" / \"b00456.dat\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_open)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 16 * 1024);\n+\n+    std::string line1(\"A purely peer-to-peer version of electronic cash would allow online \"\n+                      \"payments to be sent directly from one party to another without going \"\n+                      \"through a financial institution.\");\n+    std::string line2(\"Digital signatures provide part of the solution, but the main benefits are \"\n+                      \"lost if a trusted third party is still required to prevent double-spending.\");\n+\n+    size_t pos1 = 0;\n+    size_t pos2 = pos1 + GetSerializeSize(line1, CLIENT_VERSION);\n+\n+    // Write first line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line1, 256);\n+    }\n+\n+    // Attempt to append to file opened in read-only mode.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2), true), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file << LIMITED_STRING(line2, 256), std::ios_base::failure);\n+    }\n+\n+    // Append second line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line2, 256);\n+    }\n+\n+    // Read text from file in read-only mode.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1), true), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line1);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Read text from file with position offset.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Ensure another file in the sequence has no data.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(1, pos2)), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file >> LIMITED_STRING(text, 256), std::ios_base::failure);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_allocate)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 100);\n+\n+    bool out_of_space;\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 0), 1, out_of_space), 100);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 0))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 1, out_of_space), 0);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 2, out_of_space), 101);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 200);\n+    BOOST_CHECK(!out_of_space);",
    "path": "src/test/flatfile_tests.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would adding\r\n```C++\r\n    uint64_t too_big = 1024 * 1024 + fs::space(data_dir).available;\r\n    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 0), too_big, out_of_space), 0);\r\n    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 0))), 200);\r\n    BOOST_CHECK(out_of_space);\r\n```\r\nbe overkill?",
    "created_at": "2019-01-30T07:52:12Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252146133",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252146133"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252146133"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252146133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252147182",
    "pull_request_review_id": 197933627,
    "id": 252147182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0NzE4Mg==",
    "diff_hunk": "@@ -135,6 +135,13 @@ bool DirIsWritable(const fs::path& directory)\n     return true;\n }\n \n+bool CheckDiskSpace(const fs::path& dir, uint64_t nAdditionalBytes)\n+{\n+    constexpr uint64_t nMinDiskSpace = 52428800;\n+    uint64_t nFreeBytesAvailable = fs::space(dir).available;\n+    return nFreeBytesAvailable >= nMinDiskSpace + nAdditionalBytes;",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit/style: var_names",
    "created_at": "2019-01-30T07:56:43Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252147182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252147182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252147182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252147182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 142,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252148996",
    "pull_request_review_id": 197933627,
    "id": 252148996,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0ODk5Ng==",
    "diff_hunk": "@@ -3018,54 +3012,38 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        if (nNewChunks > nOldChunks) {\n-            if (fPruneMode)\n-                fCheckForPruning = true;\n-            if (CheckDiskSpace(nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos, true)) {\n-                FILE *file = OpenBlockFile(pos);\n-                if (file) {\n-                    LogPrintf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n-                    AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n-                    fclose(file);\n-                }\n-            }\n-            else\n-                return error(\"out of disk space\");\n+        bool out_of_space;\n+        size_t bytes_allocated = BlockFileSeq().Allocate(pos, nAddSize, out_of_space);\n+        if (out_of_space) {\n+            return AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        }\n+        if (bytes_allocated != 0 && fPruneMode) {\n+            fCheckForPruning = true;",
    "path": "src/validation.cpp",
    "position": 215,
    "original_position": 215,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can also do\r\n```C++\r\nfCheckForPruning |= bytes_allocated != 0 && fPruneMode;\r\n```\r\nand remove the `if` stuff.",
    "created_at": "2019-01-30T08:04:41Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252148996",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252148996"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252148996"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252148996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252149147",
    "pull_request_review_id": 197933627,
    "id": 252149147,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0OTE0Nw==",
    "diff_hunk": "@@ -3018,54 +3012,38 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        if (nNewChunks > nOldChunks) {\n-            if (fPruneMode)\n-                fCheckForPruning = true;\n-            if (CheckDiskSpace(nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos, true)) {\n-                FILE *file = OpenBlockFile(pos);\n-                if (file) {\n-                    LogPrintf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n-                    AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n-                    fclose(file);\n-                }\n-            }\n-            else\n-                return error(\"out of disk space\");\n+        bool out_of_space;\n+        size_t bytes_allocated = BlockFileSeq().Allocate(pos, nAddSize, out_of_space);\n+        if (out_of_space) {\n+            return AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        }\n+        if (bytes_allocated != 0 && fPruneMode) {\n+            fCheckForPruning = true;\n         }\n     }\n \n     setDirtyFileInfo.insert(nFile);\n     return true;\n }\n \n-static bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize)\n+static bool FindUndoPos(CValidationState &state, int nFile, FlatFilePos &pos, unsigned int nAddSize)\n {\n     pos.nFile = nFile;\n \n     LOCK(cs_LastBlockFile);\n \n-    unsigned int nNewSize;\n     pos.nPos = vinfoBlockFile[nFile].nUndoSize;\n-    nNewSize = vinfoBlockFile[nFile].nUndoSize += nAddSize;\n+    vinfoBlockFile[nFile].nUndoSize += nAddSize;\n     setDirtyFileInfo.insert(nFile);\n \n-    unsigned int nOldChunks = (pos.nPos + UNDOFILE_CHUNK_SIZE - 1) / UNDOFILE_CHUNK_SIZE;\n-    unsigned int nNewChunks = (nNewSize + UNDOFILE_CHUNK_SIZE - 1) / UNDOFILE_CHUNK_SIZE;\n-    if (nNewChunks > nOldChunks) {\n-        if (fPruneMode)\n-            fCheckForPruning = true;\n-        if (CheckDiskSpace(nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos, true)) {\n-            FILE *file = OpenUndoFile(pos);\n-            if (file) {\n-                LogPrintf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n-                AllocateFileRange(file, pos.nPos, nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos);\n-                fclose(file);\n-            }\n-        }\n-        else\n-            return state.Error(\"out of disk space\");\n+    bool out_of_space;\n+    size_t bytes_allocated = UndoFileSeq().Allocate(pos, nAddSize, out_of_space);\n+    if (out_of_space) {\n+        AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        return state.Error(\"out of disk space\");\n+    }\n+    if (bytes_allocated != 0 && fPruneMode) {\n+        fCheckForPruning = true;",
    "path": "src/validation.cpp",
    "position": 257,
    "original_position": 258,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can get rid of `if` case here as described above.",
    "created_at": "2019-01-30T08:05:26Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252149147",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252149147"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252149147"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252149147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3034,
    "original_line": 3034,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252822562",
    "pull_request_review_id": 198791045,
    "id": 252822562,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgyMjU2Mg==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}",
    "path": "src/flatfile.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "etscrivner",
      "id": 69561,
      "node_id": "MDQ6VXNlcjY5NTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etscrivner",
      "html_url": "https://github.com/etscrivner",
      "followers_url": "https://api.github.com/users/etscrivner/followers",
      "following_url": "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url": "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etscrivner/subscriptions",
      "organizations_url": "https://api.github.com/users/etscrivner/orgs",
      "repos_url": "https://api.github.com/users/etscrivner/repos",
      "events_url": "https://api.github.com/users/etscrivner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etscrivner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this raise an error if `chunk_size = 0`?",
    "created_at": "2019-01-31T20:11:46Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252822562",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252822562"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252822562"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252822562/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252826046",
    "pull_request_review_id": 198795431,
    "id": 252826046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgyNjA0Ng==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, read_only ? \"rb\": \"rb+\");\n+    if (!file && !read_only)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string());\n+            fclose(file);\n+            return nullptr;\n+        }\n+    }\n+    return file;\n+}\n+\n+size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_of_space)",
    "path": "src/flatfile.cpp",
    "position": 55,
    "original_position": 48,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "etscrivner",
      "id": 69561,
      "node_id": "MDQ6VXNlcjY5NTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etscrivner",
      "html_url": "https://github.com/etscrivner",
      "followers_url": "https://api.github.com/users/etscrivner/followers",
      "following_url": "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url": "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etscrivner/subscriptions",
      "organizations_url": "https://api.github.com/users/etscrivner/orgs",
      "repos_url": "https://api.github.com/users/etscrivner/repos",
      "events_url": "https://api.github.com/users/etscrivner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etscrivner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should `add_size = 0` be allowed? Seems like this would always cause `n_new_chunks = n_old_chunks` thereby causing the function to return `0`.",
    "created_at": "2019-01-31T20:22:12Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252826046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252826046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252826046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252826046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252830663",
    "pull_request_review_id": 198802128,
    "id": 252830663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgzMDY2Mw==",
    "diff_hunk": "@@ -135,6 +135,13 @@ bool DirIsWritable(const fs::path& directory)\n     return true;\n }\n \n+bool CheckDiskSpace(const fs::path& dir, uint64_t nAdditionalBytes)\n+{\n+    constexpr uint64_t nMinDiskSpace = 52428800;",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "etscrivner",
      "id": 69561,
      "node_id": "MDQ6VXNlcjY5NTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etscrivner",
      "html_url": "https://github.com/etscrivner",
      "followers_url": "https://api.github.com/users/etscrivner/followers",
      "following_url": "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url": "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etscrivner/subscriptions",
      "organizations_url": "https://api.github.com/users/etscrivner/orgs",
      "repos_url": "https://api.github.com/users/etscrivner/repos",
      "events_url": "https://api.github.com/users/etscrivner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etscrivner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It would be good to add an additional comment above this indicating its approximate size. Previously this comment was present:\r\n\r\n```\r\n// Check for nMinDiskSpace bytes (currently 50MB)\r\n```",
    "created_at": "2019-01-31T20:35:03Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252830663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252830663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252830663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252830663/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 140,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252831478",
    "pull_request_review_id": 198803228,
    "id": 252831478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgzMTQ3OA==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, read_only ? \"rb\": \"rb+\");\n+    if (!file && !read_only)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string());\n+            fclose(file);\n+            return nullptr;\n+        }\n+    }\n+    return file;\n+}\n+\n+size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_of_space)\n+{\n+    out_of_space = false;\n+\n+    unsigned int n_old_chunks = (pos.nPos + m_chunk_size - 1) / m_chunk_size;\n+    unsigned int n_new_chunks = (pos.nPos + add_size + m_chunk_size - 1) / m_chunk_size;\n+    if (n_new_chunks > n_old_chunks) {\n+        size_t old_size = pos.nPos;\n+        size_t new_size = n_new_chunks * m_chunk_size;\n+        size_t inc_size = new_size - old_size;\n+\n+        if (CheckDiskSpace(m_dir, inc_size)) {",
    "path": "src/flatfile.cpp",
    "position": 66,
    "original_position": 59,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "etscrivner",
      "id": 69561,
      "node_id": "MDQ6VXNlcjY5NTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etscrivner",
      "html_url": "https://github.com/etscrivner",
      "followers_url": "https://api.github.com/users/etscrivner/followers",
      "following_url": "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url": "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etscrivner/subscriptions",
      "organizations_url": "https://api.github.com/users/etscrivner/orgs",
      "repos_url": "https://api.github.com/users/etscrivner/repos",
      "events_url": "https://api.github.com/users/etscrivner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etscrivner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any concerns about the type mismatch here between `inc_size` (`size_t`) and the second argument to `CheckDiskSpace` which is a `uint64_t`?",
    "created_at": "2019-01-31T20:38:04Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252831478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252831478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252831478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252831478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252955575",
    "pull_request_review_id": 198953532,
    "id": 252955575,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk1NTU3NQ==",
    "diff_hunk": "@@ -71,6 +71,7 @@ void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length);\n bool RenameOver(fs::path src, fs::path dest);\n bool LockDirectory(const fs::path& directory, const std::string lockfile_name, bool probe_only=false);\n bool DirIsWritable(const fs::path& directory);\n+bool CheckDiskSpace(const fs::path& dir, uint64_t nAdditionalBytes = 0);",
    "path": "src/util/system.h",
    "position": null,
    "original_position": 4,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is just moving code out of validation.{h,cpp}. Would rather not also rename vars.",
    "created_at": "2019-02-01T07:34:53Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252955575",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252955575"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252955575"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252955575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT",
    "in_reply_to_id": 252144706
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252955587",
    "pull_request_review_id": 198953542,
    "id": 252955587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk1NTU4Nw==",
    "diff_hunk": "@@ -135,6 +135,13 @@ bool DirIsWritable(const fs::path& directory)\n     return true;\n }\n \n+bool CheckDiskSpace(const fs::path& dir, uint64_t nAdditionalBytes)\n+{\n+    constexpr uint64_t nMinDiskSpace = 52428800;\n+    uint64_t nFreeBytesAvailable = fs::space(dir).available;\n+    return nFreeBytesAvailable >= nMinDiskSpace + nAdditionalBytes;",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is just moving code out of validation.{h,cpp}. Would rather not also rename vars.",
    "created_at": "2019-02-01T07:34:56Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252955587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252955587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252955587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252955587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 142,
    "side": "RIGHT",
    "in_reply_to_id": 252147182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956627",
    "pull_request_review_id": 198954699,
    "id": 252956627,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk1NjYyNw==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;",
    "path": "src/flatfile.cpp",
    "position": 36,
    "original_position": 28,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, it's a move. Would rather not change.",
    "created_at": "2019-02-01T07:40:08Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956627",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956627"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956627"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 252142551
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956646",
    "pull_request_review_id": 198954721,
    "id": 252956646,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk1NjY0Ng==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(flatfile_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(flatfile_filename)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+\n+    FlatFilePos pos(456, 789);\n+\n+    FlatFileSeq seq1(data_dir, \"a\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq1.FileName(pos), data_dir / \"a00456.dat\");\n+\n+    FlatFileSeq seq2(data_dir / \"a\", \"b\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq2.FileName(pos), data_dir / \"a\" / \"b00456.dat\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_open)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 16 * 1024);\n+\n+    std::string line1(\"A purely peer-to-peer version of electronic cash would allow online \"\n+                      \"payments to be sent directly from one party to another without going \"\n+                      \"through a financial institution.\");\n+    std::string line2(\"Digital signatures provide part of the solution, but the main benefits are \"\n+                      \"lost if a trusted third party is still required to prevent double-spending.\");\n+\n+    size_t pos1 = 0;\n+    size_t pos2 = pos1 + GetSerializeSize(line1, CLIENT_VERSION);\n+\n+    // Write first line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line1, 256);\n+    }\n+\n+    // Attempt to append to file opened in read-only mode.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2), true), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file << LIMITED_STRING(line2, 256), std::ios_base::failure);\n+    }\n+\n+    // Append second line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line2, 256);\n+    }\n+\n+    // Read text from file in read-only mode.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1), true), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line1);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Read text from file with position offset.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Ensure another file in the sequence has no data.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(1, pos2)), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file >> LIMITED_STRING(text, 256), std::ios_base::failure);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_allocate)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 100);\n+\n+    bool out_of_space;\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 0), 1, out_of_space), 100);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 0))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 1, out_of_space), 0);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 2, out_of_space), 101);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 200);\n+    BOOST_CHECK(!out_of_space);",
    "path": "src/test/flatfile_tests.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea.",
    "created_at": "2019-02-01T07:40:15Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956646",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956646"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956646"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 252146133
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956984",
    "pull_request_review_id": 198955114,
    "id": 252956984,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk1Njk4NA==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, read_only ? \"rb\": \"rb+\");\n+    if (!file && !read_only)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string());\n+            fclose(file);\n+            return nullptr;\n+        }\n+    }\n+    return file;\n+}\n+\n+size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_of_space)\n+{\n+    out_of_space = false;\n+\n+    unsigned int n_old_chunks = (pos.nPos + m_chunk_size - 1) / m_chunk_size;\n+    unsigned int n_new_chunks = (pos.nPos + add_size + m_chunk_size - 1) / m_chunk_size;\n+    if (n_new_chunks > n_old_chunks) {\n+        size_t old_size = pos.nPos;\n+        size_t new_size = n_new_chunks * m_chunk_size;\n+        size_t inc_size = new_size - old_size;\n+\n+        if (CheckDiskSpace(m_dir, inc_size)) {",
    "path": "src/flatfile.cpp",
    "position": 66,
    "original_position": 59,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you get a compiler warning? If not, the implicit cast ought to be fine.",
    "created_at": "2019-02-01T07:42:16Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956984",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956984"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956984"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252956984/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 252831478
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252962806",
    "pull_request_review_id": 198962411,
    "id": 252962806,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk2MjgwNg==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, read_only ? \"rb\": \"rb+\");\n+    if (!file && !read_only)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string());\n+            fclose(file);\n+            return nullptr;\n+        }\n+    }\n+    return file;\n+}\n+\n+size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_of_space)",
    "path": "src/flatfile.cpp",
    "position": 55,
    "original_position": 48,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Returning 0 seems like the right thing to do there. Probably better than throwing an exception or something.",
    "created_at": "2019-02-01T08:11:50Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252962806",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252962806"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252962806"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252962806/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT",
    "in_reply_to_id": 252826046
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253228171",
    "pull_request_review_id": 199304440,
    "id": 253228171,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzIyODE3MQ==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(flatfile_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(flatfile_filename)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+\n+    FlatFilePos pos(456, 789);\n+\n+    FlatFileSeq seq1(data_dir, \"a\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq1.FileName(pos), data_dir / \"a00456.dat\");\n+\n+    FlatFileSeq seq2(data_dir / \"a\", \"b\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq2.FileName(pos), data_dir / \"a\" / \"b00456.dat\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_open)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 16 * 1024);\n+\n+    std::string line1(\"A purely peer-to-peer version of electronic cash would allow online \"\n+                      \"payments to be sent directly from one party to another without going \"\n+                      \"through a financial institution.\");\n+    std::string line2(\"Digital signatures provide part of the solution, but the main benefits are \"\n+                      \"lost if a trusted third party is still required to prevent double-spending.\");\n+\n+    size_t pos1 = 0;\n+    size_t pos2 = pos1 + GetSerializeSize(line1, CLIENT_VERSION);\n+\n+    // Write first line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line1, 256);\n+    }\n+\n+    // Attempt to append to file opened in read-only mode.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2), true), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file << LIMITED_STRING(line2, 256), std::ios_base::failure);\n+    }\n+\n+    // Append second line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line2, 256);\n+    }\n+\n+    // Read text from file in read-only mode.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1), true), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line1);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Read text from file with position offset.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Ensure another file in the sequence has no data.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(1, pos2)), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file >> LIMITED_STRING(text, 256), std::ios_base::failure);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_allocate)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 100);\n+\n+    bool out_of_space;\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 0), 1, out_of_space), 100);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 0))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 1, out_of_space), 0);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 2, out_of_space), 101);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 200);\n+    BOOST_CHECK(!out_of_space);",
    "path": "src/test/flatfile_tests.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I couldn't get this test passing on Travis... tried setting `too_big` to a petabyte as well, and there was still some issue.",
    "created_at": "2019-02-01T23:07:54Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r253228171",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253228171"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r253228171"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253228171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 252146133
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253276704",
    "pull_request_review_id": 199360433,
    "id": 253276704,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzI3NjcwNA==",
    "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+#include <util/system.h>\n+\n+std::string FlatFilePos::ToString() const\n+{\n+    return strprintf(\"FlatFilePos(nFile=%i, nPos=%i)\", nFile, nPos);\n+}\n+\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size)\n+    : m_dir(std::move(dir)), m_prefix(prefix), m_chunk_size(chunk_size)\n+{}\n+\n+fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n+{\n+    return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n+}\n+\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)\n+{\n+    if (pos.IsNull())\n+        return nullptr;\n+    fs::path path = FileName(pos);\n+    fs::create_directories(path.parent_path());\n+    FILE* file = fsbridge::fopen(path, read_only ? \"rb\": \"rb+\");\n+    if (!file && !read_only)\n+        file = fsbridge::fopen(path, \"wb+\");\n+    if (!file) {\n+        LogPrintf(\"Unable to open file %s\\n\", path.string());\n+        return nullptr;\n+    }\n+    if (pos.nPos) {\n+        if (fseek(file, pos.nPos, SEEK_SET)) {\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string());\n+            fclose(file);\n+            return nullptr;\n+        }\n+    }\n+    return file;\n+}\n+\n+size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_of_space)\n+{\n+    out_of_space = false;\n+\n+    unsigned int n_old_chunks = (pos.nPos + m_chunk_size - 1) / m_chunk_size;\n+    unsigned int n_new_chunks = (pos.nPos + add_size + m_chunk_size - 1) / m_chunk_size;\n+    if (n_new_chunks > n_old_chunks) {\n+        size_t old_size = pos.nPos;\n+        size_t new_size = n_new_chunks * m_chunk_size;\n+        size_t inc_size = new_size - old_size;\n+\n+        if (CheckDiskSpace(m_dir, inc_size)) {",
    "path": "src/flatfile.cpp",
    "position": 66,
    "original_position": 59,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "etscrivner",
      "id": 69561,
      "node_id": "MDQ6VXNlcjY5NTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etscrivner",
      "html_url": "https://github.com/etscrivner",
      "followers_url": "https://api.github.com/users/etscrivner/followers",
      "following_url": "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url": "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etscrivner/subscriptions",
      "organizations_url": "https://api.github.com/users/etscrivner/orgs",
      "repos_url": "https://api.github.com/users/etscrivner/repos",
      "events_url": "https://api.github.com/users/etscrivner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etscrivner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No compiler warning, maybe just a note for the future that the sizes of the integer types should probably be reconciled at some point.",
    "created_at": "2019-02-02T19:56:04Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r253276704",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253276704"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r253276704"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253276704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 252831478
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256755993",
    "pull_request_review_id": 203646980,
    "id": 256755993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Njc1NTk5Mw==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(flatfile_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(flatfile_filename)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+\n+    FlatFilePos pos(456, 789);\n+\n+    FlatFileSeq seq1(data_dir, \"a\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq1.FileName(pos), data_dir / \"a00456.dat\");\n+\n+    FlatFileSeq seq2(data_dir / \"a\", \"b\", 16 * 1024);\n+    BOOST_CHECK_EQUAL(seq2.FileName(pos), data_dir / \"a\" / \"b00456.dat\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_open)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 16 * 1024);\n+\n+    std::string line1(\"A purely peer-to-peer version of electronic cash would allow online \"\n+                      \"payments to be sent directly from one party to another without going \"\n+                      \"through a financial institution.\");\n+    std::string line2(\"Digital signatures provide part of the solution, but the main benefits are \"\n+                      \"lost if a trusted third party is still required to prevent double-spending.\");\n+\n+    size_t pos1 = 0;\n+    size_t pos2 = pos1 + GetSerializeSize(line1, CLIENT_VERSION);\n+\n+    // Write first line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line1, 256);\n+    }\n+\n+    // Attempt to append to file opened in read-only mode.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2), true), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file << LIMITED_STRING(line2, 256), std::ios_base::failure);\n+    }\n+\n+    // Append second line to file.\n+    {\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+        file << LIMITED_STRING(line2, 256);\n+    }\n+\n+    // Read text from file in read-only mode.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos1), true), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line1);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Read text from file with position offset.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(0, pos2)), SER_DISK, CLIENT_VERSION);\n+\n+        file >> LIMITED_STRING(text, 256);\n+        BOOST_CHECK_EQUAL(text, line2);\n+    }\n+\n+    // Ensure another file in the sequence has no data.\n+    {\n+        std::string text;\n+        CAutoFile file(seq.Open(FlatFilePos(1, pos2)), SER_DISK, CLIENT_VERSION);\n+        BOOST_CHECK_THROW(file >> LIMITED_STRING(text, 256), std::ios_base::failure);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(flatfile_allocate)\n+{\n+    auto data_dir = SetDataDir(\"flatfile_test\");\n+    FlatFileSeq seq(data_dir, \"a\", 100);\n+\n+    bool out_of_space;\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 0), 1, out_of_space), 100);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 0))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 1, out_of_space), 0);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 100);\n+    BOOST_CHECK(!out_of_space);\n+\n+    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 99), 2, out_of_space), 101);\n+    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 99))), 200);\n+    BOOST_CHECK(!out_of_space);",
    "path": "src/test/flatfile_tests.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "9b2d9ee0ef221668b834ffe9668b9a15297bc93f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The reason is that `size_t` is 32 bit (edit: on certain systems) and there is more than 2^32 bytes available on the system, resulting in an overflow. The Allocate method should probably take a `uint64_t` to avoid this.",
    "created_at": "2019-02-14T09:42:39Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r256755993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256755993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r256755993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256755993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 252146133
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258677029",
    "pull_request_review_id": 206000944,
    "id": 258677029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODY3NzAyOQ==",
    "diff_hunk": "@@ -3016,21 +3016,13 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;",
    "path": "src/validation.cpp",
    "position": 195,
    "original_position": 5,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "72d693209018fc0b94d7875574686283936751e6",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Refactor block file pre-allocation into FlatFileSeq.\" (72d693209018fc0b94d7875574686283936751e6)\r\n\r\nNote (just for reference because I found this function confusing): In the new code this line is replaced with:\r\n\r\n```c++\r\nunsigned int n_new_chunks = (pos.nPos + add_size + m_chunk_size - 1) / m_chunk_size;\r\n```\r\n\r\nwhich is equivalent because `vinfoBlockFile[nFile].nSize` == `pos.nPos + add_size` in the `!fKnown` case due to:\r\n\r\n```c++\r\npos.nPos = vinfoBlockFile[nFile].nSize;\r\n...\r\nvinfoBlockFile[nFile].nSize += nAddSize;\t\t\ufffc\r\n```\r\n\r\nabove",
    "created_at": "2019-02-20T21:10:06Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258677029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258677029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258677029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258677029/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3013,
    "original_line": 3013,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258678354",
    "pull_request_review_id": 206000944,
    "id": 258678354,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODY3ODM1NA==",
    "diff_hunk": "@@ -3016,21 +3016,13 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        if (nNewChunks > nOldChunks) {\n-            if (fPruneMode)\n-                fCheckForPruning = true;\n-            if (CheckDiskSpace(GetBlocksDir(), nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos)) {\n-                FILE *file = OpenBlockFile(pos);\n-                if (file) {\n-                    LogPrintf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n-                    AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n-                    fclose(file);\n-                }\n-            }\n-            else\n-                return AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        bool out_of_space;\n+        size_t bytes_allocated = BlockFileSeq().Allocate(pos, nAddSize, out_of_space);\n+        if (out_of_space) {\n+            return AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));\n+        }\n+        if (bytes_allocated != 0 && fPruneMode) {\n+            fCheckForPruning = true;",
    "path": "src/validation.cpp",
    "position": 215,
    "original_position": 25,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "72d693209018fc0b94d7875574686283936751e6",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Refactor block file pre-allocation into FlatFileSeq.\" (72d693209018fc0b94d7875574686283936751e6)\r\n\r\nProbably doesn't make any difference, but previously the `fCheckForPruning = true` setting would happen before `return AbortNode`, but now it will be skipped if there is no disk space.\r\n\r\nSame comment applies in `FindUndoPos` below.",
    "created_at": "2019-02-20T21:13:37Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258678354",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258678354"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258678354"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258678354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258684686",
    "pull_request_review_id": 206000944,
    "id": 258684686,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODY4NDY4Ng==",
    "diff_hunk": "@@ -72,3 +72,22 @@ size_t FlatFileSeq::Allocate(const CDiskBlockPos& pos, size_t add_size, bool& ou\n     }\n     return 0;\n }\n+\n+bool FlatFileSeq::Flush(const CDiskBlockPos& pos, bool finalize)\n+{\n+    FILE* file = Open(FlatFilePos(pos.nFile, 0)); // Avoid fseek to nPos\n+    if (!file) {\n+        return error(\"%s: failed to open file %d\", __func__, pos.nFile);\n+    }\n+    if (finalize && !TruncateFile(file, pos.nPos)) {\n+        fclose(file);\n+        return error(\"%s: failed to truncate file %d\", __func__, pos.nFile);\n+    }\n+    if (!FileCommit(file)) {",
    "path": "src/flatfile.cpp",
    "position": 91,
    "original_position": 15,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "5bc3ece663177235606e4ee272ff0de2bac1306a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Refactor file flush logic into FlatFileSeq.\" (5bc3ece663177235606e4ee272ff0de2bac1306a)\r\n\r\nProbably ok, but previous code would still call `FileCommit` when `TruncateFile` failed, and now it is skipped.",
    "created_at": "2019-02-20T21:30:04Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258684686",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258684686"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258684686"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258684686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259180890",
    "pull_request_review_id": 206619468,
    "id": 259180890,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTE4MDg5MA==",
    "diff_hunk": "@@ -3016,21 +3016,13 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;",
    "path": "src/validation.cpp",
    "position": 195,
    "original_position": 5,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "72d693209018fc0b94d7875574686283936751e6",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably the right move would be to add some comments in the new code, to reduce confusion to future readers?",
    "created_at": "2019-02-22T01:12:35Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259180890",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259180890"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259180890"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259180890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3013,
    "original_line": 3013,
    "side": "LEFT",
    "in_reply_to_id": 258677029
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259182140",
    "pull_request_review_id": 206620912,
    "id": 259182140,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTE4MjE0MA==",
    "diff_hunk": "@@ -2134,8 +2134,10 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n         // Write blocks and block index to disk.\n         if (fDoFullFlush || fPeriodicWrite) {\n             // Depend on nMinDiskSpace to ensure we can write block index\n-            if (!CheckDiskSpace(0, true))\n+            if (!CheckDiskSpace(GetBlocksDir())) {\n+                AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "6c8f5d009458cecb40e4439928e241f634de505d",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: There's an overload of AbortNode that takes a CValidationState for just what you're doing here, unless you specifically want the messages to be different (which would make sense if you want to preserve them exactly as they were before, although it doesn't look like you preserve them everywhere.)",
    "created_at": "2019-02-22T01:18:56Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259182140",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259182140"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259182140"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259182140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2138,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259182216",
    "pull_request_review_id": 206620912,
    "id": 259182216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTE4MjIxNg==",
    "diff_hunk": "@@ -2168,8 +2170,10 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n             // twice (once in the log, and once in the tables). This is already\n             // an overestimation, as most will delete an existing entry or\n             // overwrite one. Still, use a conservative safety factor of 2.\n-            if (!CheckDiskSpace(48 * 2 * 2 * pcoinsTip->GetCacheSize()))\n+            if (!CheckDiskSpace(GetDataDir(), 48 * 2 * 2 * pcoinsTip->GetCacheSize())) {\n+                AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "6c8f5d009458cecb40e4439928e241f634de505d",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As above.",
    "created_at": "2019-02-22T01:19:22Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259182216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259182216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259182216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259182216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259196701",
    "pull_request_review_id": 206638282,
    "id": 259196701,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTE5NjcwMQ==",
    "diff_hunk": "@@ -3016,21 +3016,13 @@ static bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int\n         vinfoBlockFile[nFile].nSize += nAddSize;\n \n     if (!fKnown) {\n-        unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n-        unsigned int nNewChunks = (vinfoBlockFile[nFile].nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;",
    "path": "src/validation.cpp",
    "position": 195,
    "original_position": 5,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "72d693209018fc0b94d7875574686283936751e6",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm happy to add comments anywhere you think it would make the new code more clear, but I don't want to add comments because the old code was unnecessarily confusing and this is a slight change for anyone who happened to be familiar with it. I personally find the new Allocate function clear enough as is (including the `n_new_chunks` calculation), but of course I wrote it...\r\n\r\nA PR comment like the one above seems like a fine way to address this sort of thing IMO.",
    "created_at": "2019-02-22T02:47:05Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259196701",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259196701"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259196701"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259196701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3013,
    "original_line": 3013,
    "side": "LEFT",
    "in_reply_to_id": 258677029
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259229196",
    "pull_request_review_id": 206620912,
    "id": 259229196,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTIyOTE5Ng==",
    "diff_hunk": "@@ -30,25 +30,23 @@ fs::path FlatFileSeq::FileName(const FlatFilePos& pos) const\n     return m_dir / strprintf(\"%s%05u.dat\", m_prefix, pos.nFile);\n }\n \n-FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool fReadOnly)\n+FILE* FlatFileSeq::Open(const FlatFilePos& pos, bool read_only)",
    "path": "src/flatfile.cpp",
    "position": 33,
    "original_position": 5,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "2e476e9488616a3413e15fdc2281902b28e3beeb",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Braces on the \"if\" below, since you're doing a style cleanup pass?",
    "created_at": "2019-02-22T06:53:01Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259229196",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259229196"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259229196"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259229196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 33,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259229622",
    "pull_request_review_id": 206620912,
    "id": 259229622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTIyOTYyMg==",
    "diff_hunk": "@@ -3047,16 +3051,18 @@ static bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos,\n     if (nNewChunks > nOldChunks) {\n         if (fPruneMode)\n             fCheckForPruning = true;\n-        if (CheckDiskSpace(nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos, true)) {\n+        if (CheckDiskSpace(GetBlocksDir(), nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos)) {\n             FILE *file = OpenUndoFile(pos);\n             if (file) {\n                 LogPrintf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n                 AllocateFileRange(file, pos.nPos, nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos);\n                 fclose(file);\n             }\n         }\n-        else\n+        else {\n+            AbortNode(\"Disk space is low!\", _(\"Error: Disk space is low!\"));",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "04cca330944f859b4ed68cb8da8a79f5206fd630",
    "original_commit_id": "6c8f5d009458cecb40e4439928e241f634de505d",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As above.",
    "created_at": "2019-02-22T06:55:44Z",
    "updated_at": "2019-02-23T01:39:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259229622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259229622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259229622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15118"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259229622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3063,
    "side": "RIGHT"
  }
]