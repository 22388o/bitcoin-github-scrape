Empact,2019-01-07T07:48:32Z,Concept ACK hooray objects!,https://github.com/bitcoin/bitcoin/pull/15118#issuecomment-451848663,451848663,
DrahtBot,2019-01-09T22:48:36Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15340](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15340.html) (gui: Introduce bilingual GUI error messages",https://github.com/bitcoin/bitcoin/pull/15118#issuecomment-452898676,452898676,
laanwj,2019-03-02T22:21:08Z,utACK 04cca330944f859b4ed68cb8da8a79f5206fd630,https://github.com/bitcoin/bitcoin/pull/15118#issuecomment-468965994,468965994,
Empact,2019-01-07T07:04:02Z,Should this not be `||`? /cc @jonasschnelli 386a6b62a8a1db9dd0f354cb95b7585f555c7e5d,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245562887,245562887,src/init.cpp
Empact,2019-01-07T07:10:08Z,nit: could be static within the function,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245563648,245563648,src/util/system.cpp
Empact,2019-01-07T07:22:24Z,"nit: These could each be const.\n`#include <cstddef>` for `size_t`",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245565332,245565332,src/flatfile.h
Empact,2019-01-07T07:34:40Z,nit: `true`,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245567581,245567581,src/flatfile.h
Empact,2019-01-07T07:40:07Z,nit: this adds an extra `fseek` via `Open` each.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245568440,245568440,src/validation.cpp
Empact,2019-01-07T07:47:09Z,`#include <string>`,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245569540,245569540,src/flatfile.h
promag,2019-01-07T09:21:53Z,"Commit 2af8b71\n\nRemove 2nd arg, it's the default?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245589527,245589527,src/validation.cpp
promag,2019-01-07T09:27:42Z,"Commit 2af8b71\n\nCare add `{}`?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245591202,245591202,src/validation.cpp
promag,2019-01-07T09:30:07Z,"Commit 88cf780\n\nnit, initialize one per line?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592023,245592023,src/flatfile.cpp
promag,2019-01-07T09:31:10Z,"Commit 88cf780\n\nAgree with `const` members.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592409,245592409,src/flatfile.h
promag,2019-01-07T09:33:03Z,"Commit 88cf780\n\nPrefer forward declaration of `CDiskBlockPos`?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245592900,245592900,src/flatfile.h
promag,2019-01-07T09:36:20Z,"Commit 88cf780\n\nnit, remove?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245594004,245594004,src/validation.cpp
promag,2019-01-07T09:41:36Z,"Commit ad59122\n\nJust asking for a follow up, could this be changed to `std::fstream`?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245595454,245595454,src/flatfile.cpp
jimpo,2019-01-07T17:01:38Z,"Yeah, seems like it to me.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245726324,245726324,src/init.cpp
jimpo,2019-01-07T17:07:04Z,Good catch,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245728116,245728116,src/validation.cpp
jimpo,2019-01-07T17:07:18Z,It's included.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245728196,245728196,src/flatfile.h
jimpo,2019-01-07T17:12:10Z,I added the braces after the code is moved to `FlatFileSeq::Allocate`.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245729668,245729668,src/validation.cpp
jimpo,2019-01-07T17:12:40Z,I don't see this in the style guide?,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245729820,245729820,src/flatfile.cpp
jimpo,2019-01-07T17:13:16Z,"Good point. Though CDiskBlockPos is moved into this header later on, so I don't think it's necessary to change in the earlier commit.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730040,245730040,src/flatfile.h
jimpo,2019-01-07T17:13:37Z,It's used once in `init.cpp`.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730162,245730162,src/validation.cpp
jimpo,2019-01-07T17:15:51Z,"Maybe... but a lot of file utilities like `FileCommit`, `AllocateFileRange`, etc would have to be modified as well. I think the better approach would be to return a `CAutoFile` and define the move constructor/assignment operator properly. And probably move it to a different module, like in util.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245730847,245730847,src/flatfile.cpp
promag,2019-01-07T17:29:14Z,"I know, just inline where needed?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245735065,245735065,src/validation.cpp
Empact,2019-01-07T18:54:46Z,"That would mean require `BlockFileSeq`, which is currently static and a broader interface.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245760248,245760248,src/validation.cpp
Empact,2019-01-07T18:58:30Z,#15124,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245761352,245761352,src/init.cpp
promag,2019-01-07T22:57:49Z,"You also don't see to declare class members in multiple lines, but fair enough.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245827237,245827237,src/flatfile.cpp
promag,2019-01-07T23:17:30Z,"Right, just realized it's a static function in `validation.cpp`",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r245831153,245831153,src/validation.cpp
jamesob,2019-01-08T17:37:04Z,"Any reason not to just have these on-hand as global objects instead of having to reconstruct an object for each use through these functions? Obviously there isn't much of a performance concern given these calls happen before disk IO, but I'm just curious.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246087519,246087519,src/validation.cpp
jamesob,2019-01-08T18:14:46Z,"This should be `BlockFileSeq` and not `UndoFileSeq`, no?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246099197,246099197,src/validation.cpp
jamesob,2019-01-08T18:48:43Z,Cute.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246109696,246109696,src/test/flatfile_tests.cpp
jimpo,2019-01-08T20:03:45Z,"They are constructed with `GetDataDir/GetBlocksDir` which are not static, so the initialization logic would get a bit tricky. Could be OK with lazy evaluation or something, but didn't seem worth it. Open to suggestions.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246133462,246133462,src/validation.cpp
jimpo,2019-01-08T20:04:44Z,"Oops, good catch.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246133723,246133723,src/validation.cpp
jamesob,2019-01-08T20:18:42Z,"Ah, okay. Like I said, no big deal AFAICT.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246137546,246137546,src/validation.cpp
practicalswift,2019-01-09T20:44:50Z,Make sure parameter names match between declaration and definition :-),https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246536417,246536417,src/flatfile.h
practicalswift,2019-01-09T20:45:44Z,Move `else {` one line up :-),https://github.com/bitcoin/bitcoin/pull/15118#discussion_r246536653,246536653,src/flatfile.cpp
jamesob,2019-01-24T15:36:08Z,"I know this is kind of a move, but worth using an initializer list?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r250655268,250655268,src/flatfile.h
kallewoof,2019-01-30T07:27:19Z,"Copyright looked off to me initially, but I guess if you move code, the copyright stays the same. (I was expecting ""2019"" only).",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252140925,252140925,src/flatfile.cpp
kallewoof,2019-01-30T07:29:02Z,"+1 on one per line as it makes diffs prettier when adding/removing stuff, but I'm fine as it is too, since it's only 3 vars.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252141251,252141251,src/flatfile.cpp
kallewoof,2019-01-30T07:33:37Z,Start of sentence `True` is fine IMO.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252142212,252142212,src/flatfile.h
kallewoof,2019-01-30T07:35:20Z,"This is a move I believe, so feel free to ignore: add `{}` or remove newline. (Also applies to code 4 lines down.)",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252142551,252142551,src/flatfile.cpp
kallewoof,2019-01-30T07:38:40Z,"Can do single `if` here.\n```C++\nif (pos.nPos && fseek(file, pos.nPos, SEEK_SET)) {\n```\n",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252143222,252143222,src/flatfile.cpp
kallewoof,2019-01-30T07:45:56Z,"Nit/style: naming convention, `additional_bytes`?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252144706,252144706,src/util/system.h
kallewoof,2019-01-30T07:52:12Z,"Would adding\n```C++\n    uint64_t too_big = 1024 * 1024 + fs::space(data_dir).available;\n    BOOST_CHECK_EQUAL(seq.Allocate(FlatFilePos(0, 0), too_big, out_of_space), 0);\n    BOOST_CHECK_EQUAL(fs::file_size(seq.FileName(FlatFilePos(0, 0))), 200);\n    BOOST_CHECK(out_of_space);\n```\nbe overkill?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252146133,252146133,src/test/flatfile_tests.cpp
kallewoof,2019-01-30T07:56:43Z,Nit/style: var_names,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252147182,252147182,src/util/system.cpp
kallewoof,2019-01-30T08:04:41Z,"Can also do\n```C++\nfCheckForPruning |= bytes_allocated != 0 && fPruneMode;\n```\nand remove the `if` stuff.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252148996,252148996,src/validation.cpp
kallewoof,2019-01-30T08:05:26Z,Can get rid of `if` case here as described above.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252149147,252149147,src/validation.cpp
etscrivner,2019-01-31T20:11:46Z,Should this raise an error if `chunk_size = 0`?,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252822562,252822562,src/flatfile.cpp
etscrivner,2019-01-31T20:22:12Z,Should `add_size = 0` be allowed? Seems like this would always cause `n_new_chunks = n_old_chunks` thereby causing the function to return `0`.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252826046,252826046,src/flatfile.cpp
etscrivner,2019-01-31T20:35:03Z,"It would be good to add an additional comment above this indicating its approximate size. Previously this comment was present:\n\n```\n// Check for nMinDiskSpace bytes (currently 50MB)\n```",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252830663,252830663,src/util/system.cpp
etscrivner,2019-01-31T20:38:04Z,Any concerns about the type mismatch here between `inc_size` (`size_t`) and the second argument to `CheckDiskSpace` which is a `uint64_t`?,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252831478,252831478,src/flatfile.cpp
jimpo,2019-02-01T07:34:53Z,"This is just moving code out of validation.{h,cpp}. Would rather not also rename vars.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252955575,252955575,src/util/system.h
jimpo,2019-02-01T07:34:56Z,"This is just moving code out of validation.{h,cpp}. Would rather not also rename vars.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252955587,252955587,src/util/system.cpp
jimpo,2019-02-01T07:40:08Z,"Yeah, it's a move. Would rather not change.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956627,252956627,src/flatfile.cpp
jimpo,2019-02-01T07:40:15Z,Good idea.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956646,252956646,src/test/flatfile_tests.cpp
jimpo,2019-02-01T07:42:16Z,"Do you get a compiler warning? If not, the implicit cast ought to be fine.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252956984,252956984,src/flatfile.cpp
jimpo,2019-02-01T08:11:50Z,Returning 0 seems like the right thing to do there. Probably better than throwing an exception or something.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r252962806,252962806,src/flatfile.cpp
jimpo,2019-02-01T23:07:54Z,"I couldn't get this test passing on Travis... tried setting `too_big` to a petabyte as well, and there was still some issue.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r253228171,253228171,src/test/flatfile_tests.cpp
etscrivner,2019-02-02T19:56:04Z,"No compiler warning, maybe just a note for the future that the sizes of the integer types should probably be reconciled at some point.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r253276704,253276704,src/flatfile.cpp
kallewoof,2019-02-14T09:42:39Z,"The reason is that `size_t` is 32 bit (edit: on certain systems) and there is more than 2^32 bytes available on the system, resulting in an overflow. The Allocate method should probably take a `uint64_t` to avoid this.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r256755993,256755993,src/test/flatfile_tests.cpp
ryanofsky,2019-02-20T21:10:06Z,"In commit ""validation: Refactor block file pre-allocation into FlatFileSeq."" (72d693209018fc0b94d7875574686283936751e6)\n\nNote (just for reference because I found this function confusing): In the new code this line is replaced with:\n\n```c++\nunsigned int n_new_chunks = (pos.nPos + add_size + m_chunk_size - 1) / m_chunk_size;\n```\n\nwhich is equivalent because `vinfoBlockFile[nFile].nSi",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258677029,258677029,src/validation.cpp
ryanofsky,2019-02-20T21:13:37Z,"In commit ""validation: Refactor block file pre-allocation into FlatFileSeq."" (72d693209018fc0b94d7875574686283936751e6)\n\nProbably doesn't make any difference, but previously the `fCheckForPruning = true` setting would happen before `return AbortNode`, but now it will be skipped if there is no disk space.\n\nSame comment applies in `FindUndoPos` below.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258678354,258678354,src/validation.cpp
ryanofsky,2019-02-20T21:30:04Z,"In commit ""validation: Refactor file flush logic into FlatFileSeq."" (5bc3ece663177235606e4ee272ff0de2bac1306a)\n\nProbably ok, but previous code would still call `FileCommit` when `TruncateFile` failed, and now it is skipped.",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r258684686,258684686,src/flatfile.cpp
gwillen,2019-02-22T01:12:35Z,"Probably the right move would be to add some comments in the new code, to reduce confusion to future readers?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259180890,259180890,src/validation.cpp
gwillen,2019-02-22T01:18:56Z,"Nit: There's an overload of AbortNode that takes a CValidationState for just what you're doing here, unless you specifically want the messages to be different (which would make sense if you want to preserve them exactly as they were before, although it doesn't look like you preserve them everywhere.)",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259182140,259182140,src/validation.cpp
gwillen,2019-02-22T01:19:22Z,As above.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259182216,259182216,src/validation.cpp
jimpo,2019-02-22T02:47:05Z,"I'm happy to add comments anywhere you think it would make the new code more clear, but I don't want to add comments because the old code was unnecessarily confusing and this is a slight change for anyone who happened to be familiar with it. I personally find the new Allocate function clear enough as is (including the `n_new_chunks` calculation), but of course I wrote it...\n\nA PR comment like ",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259196701,259196701,src/validation.cpp
gwillen,2019-02-22T06:53:01Z,"Nit: Braces on the ""if"" below, since you're doing a style cleanup pass?",https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259229196,259229196,src/flatfile.cpp
gwillen,2019-02-22T06:55:44Z,As above.,https://github.com/bitcoin/bitcoin/pull/15118#discussion_r259229622,259229622,src/validation.cpp
