[
  {
    "sha": "ae66aeb669b3c17a9e054c034efffa84e9427cce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTY2YWViNjY5YjNjMTdhOWUwNTRjMDM0ZWZmZmE4NGU5NDI3Y2Nl",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-09T03:39:11Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-14T02:14:48Z"
      },
      "message": "Replace pwalletdbEncryption with pwalletdb.",
      "tree": {
        "sha": "f0494e932cdc3fa6583be9600eed5dba1614b7ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0494e932cdc3fa6583be9600eed5dba1614b7ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae66aeb669b3c17a9e054c034efffa84e9427cce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae66aeb669b3c17a9e054c034efffa84e9427cce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae66aeb669b3c17a9e054c034efffa84e9427cce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae66aeb669b3c17a9e054c034efffa84e9427cce/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "169d379c98357a17e634f34b5e72033c69f9a7cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/169d379c98357a17e634f34b5e72033c69f9a7cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/169d379c98357a17e634f34b5e72033c69f9a7cb"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 41,
      "deletions": 29
    },
    "files": [
      {
        "sha": "3c7fea35c8693bdd60e5b0c158ad6da634e767a1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 25,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae66aeb669b3c17a9e054c034efffa84e9427cce/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae66aeb669b3c17a9e054c034efffa84e9427cce/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ae66aeb669b3c17a9e054c034efffa84e9427cce",
        "patch": "@@ -145,14 +145,10 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n         return true;\n     {\n         LOCK(cs_wallet);\n-        if (pwalletdbEncryption)\n-            return pwalletdbEncryption->WriteCryptedKey(vchPubKey,\n-                                                        vchCryptedSecret,\n-                                                        mapKeyMetadata[vchPubKey.GetID()]);\n-        else\n-            return CWalletDB(strWalletFile).WriteCryptedKey(vchPubKey,\n-                                                            vchCryptedSecret,\n-                                                            mapKeyMetadata[vchPubKey.GetID()]);\n+        assert(pwalletdb != NULL);\n+        return pwalletdb->WriteCryptedKey(vchPubKey,\n+                                          vchCryptedSecret,\n+                                          mapKeyMetadata[vchPubKey.GetID()]);\n     }\n     return false;\n }\n@@ -508,6 +504,10 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n     if (IsCrypted())\n         return false;\n \n+    if (fFileBacked) {\n+        assert(pwalletdb != NULL);\n+    }\n+\n     CKeyingMaterial vMasterKey;\n     RandAddSeedPerfmon();\n \n@@ -544,53 +544,50 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n         mapMasterKeys[++nMasterKeyMaxID] = kMasterKey;\n         if (fFileBacked)\n         {\n-            assert(!pwalletdbEncryption);\n-            pwalletdbEncryption = new CWalletDB(strWalletFile);\n-            if (!pwalletdbEncryption->TxnBegin()) {\n-                delete pwalletdbEncryption;\n-                pwalletdbEncryption = NULL;\n+            if (!pwalletdb->TxnBegin()) {\n                 return false;\n             }\n-            pwalletdbEncryption->WriteMasterKey(nMasterKeyMaxID, kMasterKey);\n+            pwalletdb->WriteMasterKey(nMasterKeyMaxID, kMasterKey);\n         }\n \n         if (!EncryptKeys(vMasterKey))\n         {\n             if (fFileBacked) {\n-                pwalletdbEncryption->TxnAbort();\n-                delete pwalletdbEncryption;\n+                pwalletdb->TxnAbort();\n             }\n             // We now probably have half of our keys encrypted in memory, and half not...\n             // die and let the user reload the unencrypted wallet.\n             assert(false);\n         }\n \n         // Encryption was introduced in version 0.4.0\n-        SetMinVersion(FEATURE_WALLETCRYPT, pwalletdbEncryption, true);\n+        SetMinVersion(FEATURE_WALLETCRYPT, pwalletdb, true);\n \n         if (fFileBacked)\n         {\n-            if (!pwalletdbEncryption->TxnCommit()) {\n-                delete pwalletdbEncryption;\n+            if (!pwalletdb->TxnCommit()) {\n                 // We now have keys encrypted in memory, but not on disk...\n                 // die to avoid confusion and let the user reload the unencrypted wallet.\n                 assert(false);\n             }\n-\n-            delete pwalletdbEncryption;\n-            pwalletdbEncryption = NULL;\n         }\n \n         Lock();\n         Unlock(strWalletPassphrase);\n         NewKeyPool();\n         Lock();\n \n-        // Need to completely rewrite the wallet file; if we don't, bdb might keep\n-        // bits of the unencrypted private key in slack space in the database file.\n-        CDB::Rewrite(strWalletFile);\n+        if (fFileBacked) {\n+            CloseDB();\n \n+            // Need to completely rewrite the wallet file; if we don't, bdb might keep\n+            // bits of the unencrypted private key in slack space in the database file.\n+            CDB::Rewrite(strWalletFile);\n+\n+            OpenDB();\n+        }\n     }\n+\n     NotifyStatusChanged(this);\n \n     return true;"
      },
      {
        "sha": "9201cae86a2e81f0e70c353bb892103a33d437ee",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae66aeb669b3c17a9e054c034efffa84e9427cce/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae66aeb669b3c17a9e054c034efffa84e9427cce/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ae66aeb669b3c17a9e054c034efffa84e9427cce",
        "patch": "@@ -547,7 +547,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      */\n     bool SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n \n-    CWalletDB *pwalletdbEncryption;\n+    CWalletDB *pwalletdb;\n \n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion;\n@@ -605,12 +605,27 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n         strWalletFile = strWalletFileIn;\n         fFileBacked = true;\n+\n+        OpenDB();\n     }\n \n     ~CWallet()\n     {\n-        delete pwalletdbEncryption;\n-        pwalletdbEncryption = NULL;\n+        delete pwalletdb;\n+        pwalletdb = NULL;\n+    }\n+\n+    void OpenDB()\n+    {\n+        pwalletdb = new CWalletDB(strWalletFile, \"cr+\");\n+    }\n+\n+    void CloseDB()\n+    {\n+        if (pwalletdb) {\n+            delete pwalletdb;\n+            pwalletdb = NULL;\n+        }\n     }\n \n     void SetNull()\n@@ -619,7 +634,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n         nWalletMaxVersion = FEATURE_BASE;\n         fFileBacked = false;\n         nMasterKeyMaxID = 0;\n-        pwalletdbEncryption = NULL;\n+        pwalletdb = NULL;\n         nOrderPosNext = 0;\n         nNextResend = 0;\n         nLastResend = 0;"
      }
    ]
  },
  {
    "sha": "577192c65c453d3e5e04bb04a36e11f47b7ca45e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzcxOTJjNjVjNDUzZDNlNWUwNGJiMDRhMzZlMTFmNDdiN2NhNDVl",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-09T03:39:31Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-14T02:14:48Z"
      },
      "message": "Use pwalletdb in CWallet::IncOrderPosNext",
      "tree": {
        "sha": "0fd4b7ad38e38e647eea6349ba40fe7e18dde0b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fd4b7ad38e38e647eea6349ba40fe7e18dde0b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/577192c65c453d3e5e04bb04a36e11f47b7ca45e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577192c65c453d3e5e04bb04a36e11f47b7ca45e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/577192c65c453d3e5e04bb04a36e11f47b7ca45e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577192c65c453d3e5e04bb04a36e11f47b7ca45e/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae66aeb669b3c17a9e054c034efffa84e9427cce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae66aeb669b3c17a9e054c034efffa84e9427cce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae66aeb669b3c17a9e054c034efffa84e9427cce"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 6,
      "deletions": 10
    },
    "files": [
      {
        "sha": "0f15a33ff4f30935634c31fbf68abb9f55694946",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577192c65c453d3e5e04bb04a36e11f47b7ca45e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577192c65c453d3e5e04bb04a36e11f47b7ca45e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=577192c65c453d3e5e04bb04a36e11f47b7ca45e",
        "patch": "@@ -844,7 +844,7 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n \n     // Debit\n     CAccountingEntry debit;\n-    debit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n+    debit.nOrderPos = pwalletMain->IncOrderPosNext();\n     debit.strAccount = strFrom;\n     debit.nCreditDebit = -nAmount;\n     debit.nTime = nNow;\n@@ -854,7 +854,7 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n \n     // Credit\n     CAccountingEntry credit;\n-    credit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n+    credit.nOrderPos = pwalletMain->IncOrderPosNext();\n     credit.strAccount = strTo;\n     credit.nCreditDebit = nAmount;\n     credit.nTime = nNow;"
      },
      {
        "sha": "557d5753a4c935933875ac04f28fbffe4c0b5190",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577192c65c453d3e5e04bb04a36e11f47b7ca45e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577192c65c453d3e5e04bb04a36e11f47b7ca45e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=577192c65c453d3e5e04bb04a36e11f47b7ca45e",
        "patch": "@@ -593,15 +593,11 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n     return true;\n }\n \n-int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n+int64_t CWallet::IncOrderPosNext()\n {\n     AssertLockHeld(cs_wallet); // nOrderPosNext\n     int64_t nRet = nOrderPosNext++;\n-    if (pwalletdb) {\n-        pwalletdb->WriteOrderPosNext(nOrderPosNext);\n-    } else {\n-        CWalletDB(strWalletFile).WriteOrderPosNext(nOrderPosNext);\n-    }\n+    pwalletdb->WriteOrderPosNext(nOrderPosNext);\n     return nRet;\n }\n \n@@ -645,7 +641,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n         if (fInsertedNew)\n         {\n             wtx.nTimeReceived = GetAdjustedTime();\n-            wtx.nOrderPos = IncOrderPosNext(pwalletdb);\n+            wtx.nOrderPos = IncOrderPosNext();\n             wtxOrdered.insert(make_pair(wtx.nOrderPos, TxPair(&wtx, (CAccountingEntry*)0)));\n \n             wtx.nTimeSmart = wtx.nTimeReceived;"
      },
      {
        "sha": "3a87cbca1920b712b073bec6bf10636c3dfab7f6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577192c65c453d3e5e04bb04a36e11f47b7ca45e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577192c65c453d3e5e04bb04a36e11f47b7ca45e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=577192c65c453d3e5e04bb04a36e11f47b7ca45e",
        "patch": "@@ -732,7 +732,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Increment the next transaction order id\n      * @return next transaction order id\n      */\n-    int64_t IncOrderPosNext(CWalletDB *pwalletdb = NULL);\n+    int64_t IncOrderPosNext();\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb);"
      }
    ]
  },
  {
    "sha": "ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTI2Y2E3NmFiNTA2ZjQwNTE3ZjUwYzdkM2VlYjE4YmUwM2U5YTc0",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-09T08:46:02Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-14T02:14:48Z"
      },
      "message": "Move CWallet::AddToWallet to use CWallet::pwalletdb",
      "tree": {
        "sha": "1256c9dc251aab4a97e4b014e70162b3c8dc02b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1256c9dc251aab4a97e4b014e70162b3c8dc02b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "577192c65c453d3e5e04bb04a36e11f47b7ca45e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577192c65c453d3e5e04bb04a36e11f47b7ca45e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/577192c65c453d3e5e04bb04a36e11f47b7ca45e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "77675beed98810be492b5e7515559121a8fbee9d",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "patch": "@@ -303,7 +303,7 @@ UniValue importprunedfunds(const UniValue& params, bool fHelp)\n \n     if (pwalletMain->IsMine(tx)) {\n         CWalletDB walletdb(pwalletMain->strWalletFile, \"r+\", false);\n-        pwalletMain->AddToWallet(wtx, false, &walletdb);\n+        pwalletMain->AddToWallet(wtx, false);\n         return NullUniValue;\n     }\n "
      },
      {
        "sha": "eaa2a6e4f562d4575705c2335b448bd76c58da20",
        "filename": "src/wallet/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/accounting_tests.cpp?ref=ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "patch": "@@ -48,7 +48,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     pwalletMain->AddAccountingEntry(ae, walletdb);\n \n     wtx.mapValue[\"comment\"] = \"z\";\n-    pwalletMain->AddToWallet(wtx, false, &walletdb);\n+    pwalletMain->AddToWallet(wtx, false);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[0]->nTimeReceived = (unsigned int)1333333335;\n     vpwtx[0]->nOrderPos = -1;\n@@ -90,7 +90,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n         --tx.nLockTime;  // Just to change the hash :)\n         *static_cast<CTransaction*>(&wtx) = CTransaction(tx);\n     }\n-    pwalletMain->AddToWallet(wtx, false, &walletdb);\n+    pwalletMain->AddToWallet(wtx, false);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[1]->nTimeReceived = (unsigned int)1333333336;\n \n@@ -100,7 +100,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n         --tx.nLockTime;  // Just to change the hash :)\n         *static_cast<CTransaction*>(&wtx) = CTransaction(tx);\n     }\n-    pwalletMain->AddToWallet(wtx, false, &walletdb);\n+    pwalletMain->AddToWallet(wtx, false);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[2]->nTimeReceived = (unsigned int)1333333329;\n     vpwtx[2]->nOrderPos = -1;"
      },
      {
        "sha": "807bdfb89f0672a868cd096b86ece8356c85d16a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "patch": "@@ -610,7 +610,7 @@ void CWallet::MarkDirty()\n     }\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb)\n+bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet)\n {\n     uint256 hash = wtxIn.GetHash();\n \n@@ -782,7 +782,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pbl\n             // this is safe, as in case of a crash, we rescan the necessary blocks on startup through our SetBestChain-mechanism\n             CWalletDB walletdb(strWalletFile, \"r+\", false);\n \n-            return AddToWallet(wtx, false, &walletdb);\n+            return AddToWallet(wtx, false);\n         }\n     }\n     return false;\n@@ -2271,7 +2271,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n             // Add tx to wallet, because if it has change it's also ours,\n             // otherwise just for transaction history.\n-            AddToWallet(wtxNew, false, pwalletdb);\n+            AddToWallet(wtxNew, false);\n \n             // Notify that old coins are spent\n             set<CWalletTx*> setCoins;"
      },
      {
        "sha": "cc39b5e0bdf9cbde86a960b5100aad4ddb8a76bb",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "patch": "@@ -735,7 +735,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     int64_t IncOrderPosNext();\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb);\n+    bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet);\n     void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, const CBlock* pblock);\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);"
      },
      {
        "sha": "57ad8233dc0e233d62b17134facce00b990f3c30",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea26ca76ab506f40517f50c7d3eeb18be03e9a74/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "patch": "@@ -400,7 +400,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             if (wtx.nOrderPos == -1)\n                 wss.fAnyUnordered = true;\n \n-            pwallet->AddToWallet(wtx, true, NULL);\n+            pwallet->AddToWallet(wtx, true);\n         }\n         else if (strType == \"acentry\")\n         {"
      }
    ]
  },
  {
    "sha": "2e939241660cdddd099ca391997d349ab57307f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTkzOTI0MTY2MGNkZGRkMDk5Y2EzOTE5OTdkMzQ5YWI1NzMwN2Yy",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-09T08:53:04Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-14T02:14:48Z"
      },
      "message": "Move CWallet::AddAccountingEntry to use CWallet::pwalletdb",
      "tree": {
        "sha": "c05cc589c5c23dfe2b60e69461f9be2f22b39ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c05cc589c5c23dfe2b60e69461f9be2f22b39ff8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e939241660cdddd099ca391997d349ab57307f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e939241660cdddd099ca391997d349ab57307f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e939241660cdddd099ca391997d349ab57307f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e939241660cdddd099ca391997d349ab57307f2/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea26ca76ab506f40517f50c7d3eeb18be03e9a74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea26ca76ab506f40517f50c7d3eeb18be03e9a74"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "9a08549a308f77bcebbb3772411afb53243b569e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2e939241660cdddd099ca391997d349ab57307f2",
        "patch": "@@ -850,7 +850,7 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n     debit.nTime = nNow;\n     debit.strOtherAccount = strTo;\n     debit.strComment = strComment;\n-    pwalletMain->AddAccountingEntry(debit, walletdb);\n+    pwalletMain->AddAccountingEntry(debit);\n \n     // Credit\n     CAccountingEntry credit;\n@@ -860,7 +860,7 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n     credit.nTime = nNow;\n     credit.strOtherAccount = strFrom;\n     credit.strComment = strComment;\n-    pwalletMain->AddAccountingEntry(credit, walletdb);\n+    pwalletMain->AddAccountingEntry(credit);\n \n     if (!walletdb.TxnCommit())\n         throw JSONRPCError(RPC_DATABASE_ERROR, \"database error\");"
      },
      {
        "sha": "f202893fc2d62bf1c5563349aa178dbfb5541929",
        "filename": "src/wallet/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/accounting_tests.cpp?ref=2e939241660cdddd099ca391997d349ab57307f2",
        "patch": "@@ -45,7 +45,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     ae.nTime = 1333333333;\n     ae.strOtherAccount = \"b\";\n     ae.strComment = \"\";\n-    pwalletMain->AddAccountingEntry(ae, walletdb);\n+    pwalletMain->AddAccountingEntry(ae);\n \n     wtx.mapValue[\"comment\"] = \"z\";\n     pwalletMain->AddToWallet(wtx, false);\n@@ -55,7 +55,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n \n     ae.nTime = 1333333336;\n     ae.strOtherAccount = \"c\";\n-    pwalletMain->AddAccountingEntry(ae, walletdb);\n+    pwalletMain->AddAccountingEntry(ae);\n \n     GetResults(walletdb, results);\n \n@@ -71,7 +71,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     ae.nTime = 1333333330;\n     ae.strOtherAccount = \"d\";\n     ae.nOrderPos = pwalletMain->IncOrderPosNext();\n-    pwalletMain->AddAccountingEntry(ae, walletdb);\n+    pwalletMain->AddAccountingEntry(ae);\n \n     GetResults(walletdb, results);\n \n@@ -121,7 +121,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     ae.nTime = 1333333334;\n     ae.strOtherAccount = \"e\";\n     ae.nOrderPos = -1;\n-    pwalletMain->AddAccountingEntry(ae, walletdb);\n+    pwalletMain->AddAccountingEntry(ae);\n \n     GetResults(walletdb, results);\n "
      },
      {
        "sha": "a71b6f94cd82ddc0d87463c258c21cd118683bd0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2e939241660cdddd099ca391997d349ab57307f2",
        "patch": "@@ -2304,9 +2304,9 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n     return true;\n }\n \n-bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry, CWalletDB & pwalletdb)\n+bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry)\n {\n-    if (!pwalletdb.WriteAccountingEntry_Backend(acentry))\n+    if (!pwalletdb->WriteAccountingEntry_Backend(acentry))\n         return false;\n \n     laccentries.push_back(acentry);"
      },
      {
        "sha": "1d149eb24880adfc463a0c2ba12dfdb60cd0f497",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e939241660cdddd099ca391997d349ab57307f2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=2e939241660cdddd099ca391997d349ab57307f2",
        "patch": "@@ -764,7 +764,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n                            std::string& strFailReason, const CCoinControl *coinControl = NULL, bool sign = true);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n-    bool AddAccountingEntry(const CAccountingEntry&, CWalletDB & pwalletdb);\n+    bool AddAccountingEntry(const CAccountingEntry&);\n \n     static CFeeRate minTxFee;\n     static CFeeRate fallbackFee;"
      }
    ]
  },
  {
    "sha": "cd86a710fefa753337b446d8af1e95853b3ef91b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDg2YTcxMGZlZmE3NTMzMzdiNDQ2ZDhhZjFlOTU4NTNiM2VmOTFi",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-09T09:14:17Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-14T02:14:48Z"
      },
      "message": "Move CWallet::SetMinVersion to use CWallet::pwalletdb",
      "tree": {
        "sha": "630d8152863ef9020d76ae8aae0eb9ef179d6923",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/630d8152863ef9020d76ae8aae0eb9ef179d6923"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd86a710fefa753337b446d8af1e95853b3ef91b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd86a710fefa753337b446d8af1e95853b3ef91b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd86a710fefa753337b446d8af1e95853b3ef91b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd86a710fefa753337b446d8af1e95853b3ef91b/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e939241660cdddd099ca391997d349ab57307f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e939241660cdddd099ca391997d349ab57307f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e939241660cdddd099ca391997d349ab57307f2"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4f3ee61181d5dd4c8fbfa4ef2ca530c2f7222b88",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd86a710fefa753337b446d8af1e95853b3ef91b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd86a710fefa753337b446d8af1e95853b3ef91b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cd86a710fefa753337b446d8af1e95853b3ef91b",
        "patch": "@@ -295,7 +295,7 @@ void CWallet::SetBestChain(const CBlockLocator& loc)\n     walletdb.WriteBestBlock(loc);\n }\n \n-bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn, bool fExplicit)\n+bool CWallet::SetMinVersion(enum WalletFeature nVersion, bool fExplicit)\n {\n     LOCK(cs_wallet); // nWalletVersion\n     if (nWalletVersion >= nVersion)\n@@ -312,11 +312,8 @@ bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn,\n \n     if (fFileBacked)\n     {\n-        CWalletDB* pwalletdb = pwalletdbIn ? pwalletdbIn : new CWalletDB(strWalletFile);\n         if (nWalletVersion > 40000)\n             pwalletdb->WriteMinVersion(nWalletVersion);\n-        if (!pwalletdbIn)\n-            delete pwalletdb;\n     }\n \n     return true;\n@@ -561,7 +558,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n         }\n \n         // Encryption was introduced in version 0.4.0\n-        SetMinVersion(FEATURE_WALLETCRYPT, pwalletdb, true);\n+        SetMinVersion(FEATURE_WALLETCRYPT, true);\n \n         if (fFileBacked)\n         {"
      },
      {
        "sha": "f673611b02a826dec6174e79653d79b508203e73",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd86a710fefa753337b446d8af1e95853b3ef91b/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd86a710fefa753337b446d8af1e95853b3ef91b/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cd86a710fefa753337b446d8af1e95853b3ef91b",
        "patch": "@@ -843,7 +843,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n \n     //! signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n-    bool SetMinVersion(enum WalletFeature, CWalletDB* pwalletdbIn = NULL, bool fExplicit = false);\n+    bool SetMinVersion(enum WalletFeature, bool fExplicit = false);\n \n     //! change which version we're allowed to upgrade to (note that this does not immediately imply upgrading to that format)\n     bool SetMaxVersion(int nVersion);"
      }
    ]
  },
  {
    "sha": "85a02715c50473394061c486f2545cca5e24120e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWEwMjcxNWM1MDQ3MzM5NDA2MWM0ODZmMjU0NWNjYTVlMjQxMjBl",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T01:51:53Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T01:51:53Z"
      },
      "message": "Prevent deadlock in BackupWallet.",
      "tree": {
        "sha": "3d24130c73568cfd95afe4fb91633a6771d5a5cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d24130c73568cfd95afe4fb91633a6771d5a5cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85a02715c50473394061c486f2545cca5e24120e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85a02715c50473394061c486f2545cca5e24120e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85a02715c50473394061c486f2545cca5e24120e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85a02715c50473394061c486f2545cca5e24120e/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd86a710fefa753337b446d8af1e95853b3ef91b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd86a710fefa753337b446d8af1e95853b3ef91b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd86a710fefa753337b446d8af1e95853b3ef91b"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 25,
      "deletions": 11
    },
    "files": [
      {
        "sha": "1659e8537f7ddc5811b358e2956b86578fb6c17e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a02715c50473394061c486f2545cca5e24120e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a02715c50473394061c486f2545cca5e24120e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=85a02715c50473394061c486f2545cca5e24120e",
        "patch": "@@ -145,7 +145,7 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n         return true;\n     {\n         LOCK(cs_wallet);\n-        assert(pwalletdb != NULL);\n+        OpenDB();\n         return pwalletdb->WriteCryptedKey(vchPubKey,\n                                           vchCryptedSecret,\n                                           mapKeyMetadata[vchPubKey.GetID()]);\n@@ -312,8 +312,10 @@ bool CWallet::SetMinVersion(enum WalletFeature nVersion, bool fExplicit)\n \n     if (fFileBacked)\n     {\n-        if (nWalletVersion > 40000)\n+        if (nWalletVersion > 40000) {\n+            OpenDB();\n             pwalletdb->WriteMinVersion(nWalletVersion);\n+        }\n     }\n \n     return true;\n@@ -502,7 +504,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n         return false;\n \n     if (fFileBacked) {\n-        assert(pwalletdb != NULL);\n+        OpenDB();\n     }\n \n     CKeyingMaterial vMasterKey;\n@@ -593,6 +595,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n int64_t CWallet::IncOrderPosNext()\n {\n     AssertLockHeld(cs_wallet); // nOrderPosNext\n+    OpenDB();\n     int64_t nRet = nOrderPosNext++;\n     pwalletdb->WriteOrderPosNext(nOrderPosNext);\n     return nRet;\n@@ -719,9 +722,12 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet)\n         LogPrintf(\"AddToWallet %s  %s%s\\n\", wtxIn.GetHash().ToString(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n \n         // Write to disk\n-        if (fInsertedNew || fUpdated)\n-            if (!pwalletdb->WriteTx(wtx))\n+        if (fInsertedNew || fUpdated) {\n+            OpenDB();\n+            if (!pwalletdb->WriteTx(wtx)) {\n                 return false;\n+            }\n+        }\n \n         // Break debit/credit balance caches:\n         wtx.MarkDirty();\n@@ -2303,6 +2309,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry)\n {\n+    OpenDB();\n     if (!pwalletdb->WriteAccountingEntry_Backend(acentry))\n         return false;\n "
      },
      {
        "sha": "c57a1a12ee6c3aacd522a42ec72ed049e0ddbec2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a02715c50473394061c486f2545cca5e24120e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a02715c50473394061c486f2545cca5e24120e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=85a02715c50473394061c486f2545cca5e24120e",
        "patch": "@@ -617,15 +617,16 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     void OpenDB()\n     {\n+        if (pwalletdb) return;\n         pwalletdb = new CWalletDB(strWalletFile, \"cr+\");\n     }\n \n     void CloseDB()\n     {\n-        if (pwalletdb) {\n-            delete pwalletdb;\n-            pwalletdb = NULL;\n-        }\n+        if (!pwalletdb) return;\n+\n+        delete pwalletdb;\n+        pwalletdb = NULL;\n     }\n \n     void SetNull()"
      },
      {
        "sha": "435b271222a4dc8de5b6e614c0ab055f578206e2",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a02715c50473394061c486f2545cca5e24120e/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a02715c50473394061c486f2545cca5e24120e/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=85a02715c50473394061c486f2545cca5e24120e",
        "patch": "@@ -903,10 +903,16 @@ void ThreadFlushWalletDB(const string& strFile)\n     }\n }\n \n-bool BackupWallet(const CWallet& wallet, const string& strDest)\n+bool BackupWallet(CWallet& wallet, const string& strDest)\n {\n     if (!wallet.fFileBacked)\n         return false;\n+\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.CloseDB();\n+    }\n+\n     while (true)\n     {\n         {"
      },
      {
        "sha": "c651f8363f868e29f0b18c08a55f024ab6a3b1a7",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a02715c50473394061c486f2545cca5e24120e/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a02715c50473394061c486f2545cca5e24120e/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=85a02715c50473394061c486f2545cca5e24120e",
        "patch": "@@ -141,7 +141,7 @@ class CWalletDB : public CDB\n     bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n };\n \n-bool BackupWallet(const CWallet& wallet, const std::string& strDest);\n+bool BackupWallet(CWallet& wallet, const std::string& strDest);\n void ThreadFlushWalletDB(const std::string& strFile);\n \n #endif // BITCOIN_WALLET_WALLETDB_H"
      }
    ]
  }
]