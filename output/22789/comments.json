[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904586738",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22789#issuecomment-904586738",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22789",
    "id": 904586738,
    "node_id": "IC_kwDOABII58416uXy",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-24T12:17:37Z",
    "updated_at": "2021-08-24T12:17:37Z",
    "author_association": "MEMBER",
    "body": "Concept ACK\r\n\r\n`breaking out of a nested loop is simply not possible (at least not without adding ugly constructs like gotos or extra state variables)`\r\n\r\nYou could do this though:\r\n\r\n```diff\r\n-for (unsigned int i = 0; i < psbtx.inputs.size(); ++i) {\r\n+for (unsigned int i = 0; !match && i < psbtx.inputs.size(); ++i) {\r\n    const PSBTInput& input = psbtx.inputs[i];\r\n    for (const auto& entry : input.hd_keypaths) {\r\n-        if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) match = true;\r\n+        if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) { \r\n+            match = true;\r\n+            break;\r\n+        }\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904586738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938711313",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22789#issuecomment-938711313",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22789",
    "id": 938711313,
    "node_id": "IC_kwDOABII584385kR",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T15:00:55Z",
    "updated_at": "2021-10-08T15:00:55Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938711313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698581697",
    "pull_request_review_id": 741774964,
    "id": 698581697,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU4MTY5Nw==",
    "diff_hunk": "@@ -75,15 +76,14 @@ bool ExternalSigner::SignTransaction(PartiallySignedTransaction& psbtx, std::str\n     ssTx << psbtx;\n \n     // Check if signer fingerprint matches any input master key fingerprint\n-    bool match = false;\n-    for (unsigned int i = 0; i < psbtx.inputs.size(); ++i) {\n-        const PSBTInput& input = psbtx.inputs[i];\n+    auto matches_signer_fingerprint = [&](const PSBTInput& input) {\n         for (const auto& entry : input.hd_keypaths) {\n-            if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) match = true;\n+            if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) return true;\n         }\n-    }\n+        return false;\n+    };",
    "path": "src/external_signer.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "d047ed729f1d4732d23324fc76849f3c657cdbe4",
    "original_commit_id": "d047ed729f1d4732d23324fc76849f3c657cdbe4",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm curious, could you get rid of the other for loop as well with the same approach? Would that be cleaner? Something like:\r\n\r\n```c++\r\nreturn std::any_of(input.hd_keypaths.begin(), input.hd_keypaths.end(), [](auto& entry){ return m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint)); });\r\n```",
    "created_at": "2021-08-30T15:22:20Z",
    "updated_at": "2021-08-30T15:22:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22789#discussion_r698581697",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22789",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698581697"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22789#discussion_r698581697"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22789"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698581697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 80,
    "original_start_line": 80,
    "start_side": "RIGHT",
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725095957",
    "pull_request_review_id": 775133810,
    "id": 725095957,
    "node_id": "PRRC_kwDOABII584rOBYV",
    "diff_hunk": "@@ -75,15 +76,14 @@ bool ExternalSigner::SignTransaction(PartiallySignedTransaction& psbtx, std::str\n     ssTx << psbtx;\n \n     // Check if signer fingerprint matches any input master key fingerprint\n-    bool match = false;\n-    for (unsigned int i = 0; i < psbtx.inputs.size(); ++i) {\n-        const PSBTInput& input = psbtx.inputs[i];\n+    auto matches_signer_fingerprint = [&](const PSBTInput& input) {\n         for (const auto& entry : input.hd_keypaths) {\n-            if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) match = true;\n+            if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) return true;\n         }\n-    }\n+        return false;\n+    };\n \n-    if (!match) {\n+    if (!std::any_of(psbtx.inputs.begin(), psbtx.inputs.end(), matches_signer_fingerprint)) {",
    "path": "src/external_signer.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "d047ed729f1d4732d23324fc76849f3c657cdbe4",
    "original_commit_id": "d047ed729f1d4732d23324fc76849f3c657cdbe4",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit:\r\n```suggestion\r\n    if (!std::any_of(psbtx.inputs.cbegin(), psbtx.inputs.cend(), matches_signer_fingerprint)) {\r\n```",
    "created_at": "2021-10-08T15:10:57Z",
    "updated_at": "2021-10-08T15:11:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22789#discussion_r725095957",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22789",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725095957"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22789#discussion_r725095957"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22789"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725095957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 86,
    "original_line": 86,
    "side": "RIGHT"
  }
]