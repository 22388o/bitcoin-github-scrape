[
  {
    "sha": "5467820be5404fa736436a1202079e764a4308b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDY3ODIwYmU1NDA0ZmE3MzY0MzZhMTIwMjA3OWU3NjRhNDMwOGI0",
    "commit": {
      "author": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-08-26T10:05:36Z"
      },
      "committer": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-10-01T18:28:11Z"
      },
      "message": "Migrated rpc-tests.sh to all python rpc-tests.py\n\n1) created rpc-tests.py\n2) deleted rpc-tests.sh\n3) travis.yml points to rpc-tests.py\n4) Modified Makefile.am\n5) Updated README.md\n6) Added tests_config.py and deleted tests-config.sh\n7) Modified configure.ac with script to set correct path in tests_config.py",
      "tree": {
        "sha": "64474b1acd9e650aabf9fe9298600dd36ae263f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64474b1acd9e650aabf9fe9298600dd36ae263f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5467820be5404fa736436a1202079e764a4308b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5467820be5404fa736436a1202079e764a4308b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5467820be5404fa736436a1202079e764a4308b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5467820be5404fa736436a1202079e764a4308b4/comments",
    "author": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f297042cae572753e6c25d25caf92091e88b76df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f297042cae572753e6c25d25caf92091e88b76df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f297042cae572753e6c25d25caf92091e88b76df"
      }
    ],
    "stats": {
      "total": 237,
      "additions": 139,
      "deletions": 98
    },
    "files": [
      {
        "sha": "8e9684826f69081ff8b3bdf4b37c8182a194a267",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -69,6 +69,6 @@ script:\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "8a7140398f8d2e69e3c4e6b5402b24f57555ca64",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -204,7 +204,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/pull-tester/tests_config.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "5a0b4ae9cb3b26f98f8c345d86e69313f5c93ce9",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -914,7 +914,8 @@ AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+chmod +x qa/pull-tester/rpc-tests.py\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -954,3 +955,12 @@ case $host in\n      chmod 755 libtool\n    ;;\n esac\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n+     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+     chmod +x qa/pull-tester/tests_config.py\n+   ;;\n+esac"
      },
      {
        "sha": "68c1c0471e332d48042e1c45c3a7724d308316b9",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -0,0 +1,118 @@\n+#!/usr/bin/env python2\n+\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Run Regression Test Suite\n+#\n+\n+import os\n+import sys\n+import subprocess\n+import re\n+from tests_config import *\n+from sets import Set\n+\n+#If imported values are not defined then set to zero (or disabled)\n+if not vars().has_key('ENABLE_WALLET'):\n+    ENABLE_WALLET=0\n+if not vars().has_key('ENABLE_BITCOIND'):\n+    ENABLE_BITCOIND=0\n+if not vars().has_key('ENABLE_UTILS'):\n+    ENABLE_UTILS=0\n+if not vars().has_key('ENABLE_ZMQ'):\n+    ENABLE_ZMQ=0\n+\n+#Create a set to store arguments and create the passOn string\n+opts = Set()\n+passOn = \"\"\n+p = re.compile(\"^--\")\n+for i in range(1,len(sys.argv)):\n+    if (p.match(sys.argv[i]) or sys.argv[i] == \"-h\"):\n+        passOn += \" \" + sys.argv[i]\n+    else:\n+        opts.add(sys.argv[i])\n+\n+#Set env vars\n+buildDir = BUILDDIR\n+os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n+os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n+ \n+#Disable Windows tests by default\n+if EXEEXT == \".exe\" and \"-win\" not in opts:\n+    print \"Win tests currently disabled.  Use -win option to enable\"\n+    sys.exit(0)\n+\n+#Tests\n+testScripts = [\n+    'wallet.py',\n+    'listtransactions.py',\n+    'mempool_resurrect_test.py',\n+    'txn_doublespend.py --mineblock',\n+    'txn_clone.py',\n+    'getchaintips.py',\n+    'rawtransactions.py',\n+    'rest.py',\n+    'mempool_spendcoinbase.py',\n+    'mempool_coinbase_spends.py',\n+    'httpbasics.py',\n+    'zapwallettxes.py',\n+    'proxy_test.py',\n+    'merkle_blocks.py',\n+    'fundrawtransaction.py',\n+    'signrawtransactions.py',\n+    'walletbackup.py',\n+    'nodehandling.py',\n+    'reindex.py',\n+    'decodescript.py',\n+    'p2p-fullblocktest.py',\n+]\n+testScriptsExt = [\n+    'bipdersig-p2p.py',\n+    'bipdersig.py',\n+    'getblocktemplate_longpoll.py',\n+    'getblocktemplate_proposals.py',\n+    'txn_doublespend.py',\n+    'txn_clone.py --mineblock',\n+    'pruning.py',\n+    'forknotify.py',\n+    'invalidateblock.py',\n+    'keypool.py',\n+    'receivedby.py',\n+    'rpcbind_test.py',\n+#   'script_test.py',\n+    'smartfees.py',\n+    'maxblocksinflight.py',\n+    'invalidblockrequest.py',\n+#    'forknotify.py',\n+    'p2p-acceptblock.py',\n+    'mempool_packages.py',\n+]\n+\n+#Enable ZMQ tests\n+if ENABLE_ZMQ == 1:\n+    testScripts.append('zmq_test.py')\n+\n+if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n+    rpcTestDir = buildDir + '/qa/rpc-tests/'\n+    #Run Tests\n+    for i in range(len(testScripts)):\n+       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts \n+           or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n+            print  \"Running testscript \" + testScripts[i] + \"...\" \n+            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+\t    #exit if help is called so we print just one set of instructions\n+            p = re.compile(\" -h| --help\")\n+            if p.match(passOn):\n+                sys.exit(0)\n+\n+    #Run Extended Tests\n+    for i in range(len(testScriptsExt)):\n+        if ('-extended' in opts or testScriptsExt[i] in opts \n+           or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\" \n+            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+else:\n+    print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "7e1d2e8e503fd2f483b3629c0797146fcc826922",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -1,89 +0,0 @@\n-#!/bin/bash\n-set -e\n-\n-CURDIR=$(cd $(dirname \"$0\"); pwd)\n-# Get BUILDDIR and REAL_BITCOIND\n-. \"${CURDIR}/tests-config.sh\"\n-\n-export BITCOIND=${REAL_BITCOIND}\n-export BITCOINCLI=${REAL_BITCOINCLI}\n-\n-if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n-  echo \"Win tests currently disabled\"\n-  exit 0\n-fi\n-\n-#Run the tests\n-\n-testScripts=(\n-    'wallet.py'\n-    'listtransactions.py'\n-    'mempool_resurrect_test.py'\n-    'txn_doublespend.py --mineblock'\n-    'txn_clone.py'\n-    'getchaintips.py'\n-    'rawtransactions.py'\n-    'rest.py'\n-    'mempool_spendcoinbase.py'\n-    'mempool_coinbase_spends.py'\n-    'httpbasics.py'\n-    'zapwallettxes.py'\n-    'proxy_test.py'\n-    'merkle_blocks.py'\n-    'fundrawtransaction.py'\n-    'signrawtransactions.py'\n-    'walletbackup.py'\n-    'nodehandling.py'\n-    'reindex.py'\n-    'decodescript.py'\n-    'p2p-fullblocktest.py'\n-);\n-testScriptsExt=(\n-    'bipdersig-p2p.py'\n-    'bipdersig.py'\n-    'getblocktemplate_longpoll.py'\n-    'getblocktemplate_proposals.py'\n-    'txn_doublespend.py'\n-    'txn_clone.py --mineblock'\n-    'pruning.py'\n-    'forknotify.py'\n-    'invalidateblock.py'\n-    'keypool.py'\n-    'receivedby.py'\n-    'rpcbind_test.py'\n-#   'script_test.py'\n-    'smartfees.py'\n-    'maxblocksinflight.py'\n-    'invalidblockrequest.py'\n-#    'forknotify.py'\n-    'p2p-acceptblock.py'\n-    'mempool_packages.py'\n-);\n-\n-if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-  testScripts+=('zmq_test.py')\n-fi\n-\n-extArg=\"-extended\"\n-passOn=${@#$extArg}\n-\n-if [ \"x${ENABLE_BITCOIND}${ENABLE_UTILS}${ENABLE_WALLET}\" = \"x111\" ]; then\n-    for (( i = 0; i < ${#testScripts[@]}; i++ ))\n-    do\n-        if [ -z \"$1\" ] || [ \"${1:0:1}\" == \"-\" ] || [ \"$1\" == \"${testScripts[$i]}\" ] || [ \"$1.py\" == \"${testScripts[$i]}\" ]\n-        then\n-            echo -e \"Running testscript \\033[1m${testScripts[$i]}...\\033[0m\"\n-            ${BUILDDIR}/qa/rpc-tests/${testScripts[$i]} --srcdir \"${BUILDDIR}/src\" ${passOn}\n-        fi\n-    done\n-    for (( i = 0; i < ${#testScriptsExt[@]}; i++ ))\n-    do\n-        if [ \"$1\" == $extArg ] || [ \"$1\" == \"${testScriptsExt[$i]}\" ] || [ \"$1.py\" == \"${testScriptsExt[$i]}\" ]\n-        then\n-            echo -e \"Running \\033[1m2nd level\\033[0m testscript \\033[1m${testScriptsExt[$i]}...\\033[0m\"\n-            ${BUILDDIR}/qa/rpc-tests/${testScriptsExt[$i]} --srcdir \"${BUILDDIR}/src\" ${passOn}\n-        fi\n-    done\n-else\n-  echo \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n-fi"
      },
      {
        "sha": "937b4231f12f82841c52d7f34133c2daf5575668",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env python2\n # Copyright (c) 2013-2014 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -12,6 +12,4 @@ EXEEXT=\"@EXEEXT@\"\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1\n \n-REAL_BITCOIND=\"$BUILDDIR/src/bitcoind${EXEEXT}\"\n-REAL_BITCOINCLI=\"$BUILDDIR/src/bitcoin-cli${EXEEXT}\"\n ",
        "previous_filename": "qa/pull-tester/tests-config.sh.in"
      },
      {
        "sha": "3391ee03aee23f01c1f0017cdfc5300ca2088bfa",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -37,9 +37,13 @@ Helper functions for creating blocks and transactions.\n Notes\n =====\n \n-You can run a single test by calling `qa/pull-tester/rpc-tests.sh <testname>`.\n+You can run any single test by calling qa/pull-tester/rpc-tests.py <testname>\n \n-Run all possible tests with `qa/pull-tester/rpc-tests.sh -extended`.\n+Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n+\n+Run the regression test suite with `qa/pull-tester/rpc-tests.py'\n+\n+Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n \n Possible options:\n \n@@ -53,7 +57,7 @@ Possible options:\n   --tracerpc       Print out all RPC calls as they are made\n ```\n \n-If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.sh wallet`). \n+If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`). \n \n A 200-block -regtest blockchain and wallets for four nodes\n is created the first time a regression test is run and"
      }
    ]
  }
]