[
  {
    "sha": "a6e5ddc0df2ad86ca0352076a656dadab5345abb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmU1ZGRjMGRmMmFkODZjYTAzNTIwNzZhNjU2ZGFkYWI1MzQ1YWJi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-07-07T23:06:56Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-03-17T23:30:49Z"
      },
      "message": "Support serialization as another type without casting\n\nWith the new AsType function it's possible to serialize an object as another\n(compatible) type, and is intended for invoking the serializer of a parent\nclass.\n\nWriting AsType<Parent>(child) will work in any context:\n* READWRITE(AsType<Parent>(child))\n* s << AsType<Parent>(child)\n* s >> AsType<Parent>(child)\nIn case child is const, the result will be a reference to a const\nParent type, resulting in const-correct behavior.",
      "tree": {
        "sha": "ce47043978663114e4ed802f09198d391a0d08d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce47043978663114e4ed802f09198d391a0d08d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6e5ddc0df2ad86ca0352076a656dadab5345abb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e5ddc0df2ad86ca0352076a656dadab5345abb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6e5ddc0df2ad86ca0352076a656dadab5345abb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e5ddc0df2ad86ca0352076a656dadab5345abb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "585db41e9ab7a6fb262c8bad7f427cdbdc497188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/585db41e9ab7a6fb262c8bad7f427cdbdc497188",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/585db41e9ab7a6fb262c8bad7f427cdbdc497188"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "85c650a2d219db838fd037bb4bd9e669491c9e35",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -59,7 +59,7 @@ class CAddrInfo : public CAddress\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(*static_cast<CAddress*>(this));\n+        READWRITE(AsType<CAddress>(*this));\n         READWRITE(source);\n         READWRITE(nLastSuccess);\n         READWRITE(nAttempts);"
      },
      {
        "sha": "a25d1677cb694fa57139e6d2a39b941179601389",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -93,7 +93,7 @@ class CBlock : public CBlockHeader\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(*static_cast<CBlockHeader*>(this));\n+        READWRITE(AsType<CBlockHeader>(*this));\n         READWRITE(vtx);\n     }\n "
      },
      {
        "sha": "3b79c543ce2882008315467656208d117527eea3",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -349,7 +349,7 @@ class CAddress : public CService\n         uint64_t nServicesInt = nServices;\n         READWRITE(nServicesInt);\n         nServices = static_cast<ServiceFlags>(nServicesInt);\n-        READWRITE(*static_cast<CService*>(this));\n+        READWRITE(AsType<CService>(*this));\n     }\n \n     // TODO: make private (improves encapsulation)"
      },
      {
        "sha": "923227da3bb8ddcdf9e62f99f010601adc7458fb",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -415,7 +415,7 @@ class CScript : public CScriptBase\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(static_cast<CScriptBase&>(*this));\n+        READWRITE(AsType<CScriptBase>(*this));\n     }\n \n     CScript& operator+=(const CScript& b)"
      },
      {
        "sha": "24fc901e83419876fd7e3c44a5bdee74c9705291",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -150,6 +150,12 @@ enum\n \n #define READWRITE(...)      (::SerReadWriteMany(s, ser_action, __VA_ARGS__))\n \n+//! Convert the reference base type to X, without changing constness or reference type.\n+template<typename X> X& AsType(X& x) { return x; }\n+template<typename X> const X& AsType(const X& x) { return x; }\n+template<typename X> X&& AsType(X&& x) { return std::move(x); }\n+template<typename X> const X&& AsType(const X&& x) { return std::move(x); }\n+\n /** \n  * Implement three methods for serializable objects. These are actually wrappers over\n  * \"SerializationOp\" template, which implements the body of each class' serialization"
      },
      {
        "sha": "c654dab04a9083168c14307c5d9dc710a1175e4e",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -46,7 +46,7 @@ struct CDiskTxPos : public CDiskBlockPos\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(*static_cast<CDiskBlockPos*>(this));\n+        READWRITE(AsType<CDiskBlockPos>(*this));\n         READWRITE(VARINT(nTxOffset));\n     }\n "
      },
      {
        "sha": "f9096dd174b4d0747863073b49f73c47e997d7b5",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e5ddc0df2ad86ca0352076a656dadab5345abb/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=a6e5ddc0df2ad86ca0352076a656dadab5345abb",
        "patch": "@@ -397,7 +397,7 @@ class CWalletTx : public CMerkleTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        s << *static_cast<const CMerkleTx*>(this);\n+        s << AsType<CMerkleTx>(*this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n         s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n     }\n@@ -408,7 +408,7 @@ class CWalletTx : public CMerkleTx\n         Init(nullptr);\n         char fSpent;\n \n-        s >> *static_cast<CMerkleTx*>(this);\n+        s >> AsType<CMerkleTx>(*this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n         s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n "
      }
    ]
  }
]