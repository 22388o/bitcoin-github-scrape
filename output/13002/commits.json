[
  {
    "sha": "952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTJkODIxM2E2ZDQ0YjhlZWZmNDJmM2E1MmRlZmNhYTFiYzRhMGRj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-18T21:41:32Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-19T00:08:50Z"
      },
      "message": "Make CScript -> CScriptID conversion explicit",
      "tree": {
        "sha": "8924f4dec013063c8de6da909ae1cb78f5a34bc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8924f4dec013063c8de6da909ae1cb78f5a34bc0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07825088f9cfd8abece774b9d978c36ab90ce3d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07825088f9cfd8abece774b9d978c36ab90ce3d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07825088f9cfd8abece774b9d978c36ab90ce3d1"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4922b7236bd424bcf22b54f856daf83dd9e2c5d9",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
        "patch": "@@ -23,7 +23,7 @@ class CScriptID : public uint160\n {\n public:\n     CScriptID() : uint160() {}\n-    CScriptID(const CScript& in);\n+    explicit CScriptID(const CScript& in);\n     CScriptID(const uint160& in) : uint160(in) {}\n };\n "
      },
      {
        "sha": "b3a59e4b2a18971b04f5821e5d33668b6275e73b",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
        "patch": "@@ -224,10 +224,11 @@ void ImportScript(CWallet* const pwallet, const CScript& script, const std::stri\n     }\n \n     if (isRedeemScript) {\n-        if (!pwallet->HaveCScript(script) && !pwallet->AddCScript(script)) {\n+        const CScriptID id(script);\n+        if (!pwallet->HaveCScript(id) && !pwallet->AddCScript(script)) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding p2sh redeemScript to wallet\");\n         }\n-        ImportAddress(pwallet, CScriptID(script), strLabel);\n+        ImportAddress(pwallet, id, strLabel);\n     } else {\n         CTxDestination destination;\n         if (ExtractDestination(script, destination)) {\n@@ -602,7 +603,8 @@ UniValue importwallet(const JSONRPCRequest& request)\n             } else if(IsHex(vstr[0])) {\n                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n                CScript script = CScript(vData.begin(), vData.end());\n-               if (pwallet->HaveCScript(script)) {\n+               CScriptID id(script);\n+               if (pwallet->HaveCScript(id)) {\n                    LogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n                    continue;\n                }\n@@ -613,7 +615,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n                }\n                int64_t birth_time = DecodeDumpTime(vstr[1]);\n                if (birth_time > 0) {\n-                   pwallet->m_script_metadata[CScriptID(script)].nCreateTime = birth_time;\n+                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n                    nTimeBegin = std::min(nTimeBegin, birth_time);\n                }\n             }\n@@ -899,12 +901,12 @@ UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, const int6\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n             }\n \n-            if (!pwallet->HaveCScript(redeemScript) && !pwallet->AddCScript(redeemScript)) {\n+            CScriptID redeem_id(redeemScript);\n+            if (!pwallet->HaveCScript(redeem_id) && !pwallet->AddCScript(redeemScript)) {\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding p2sh redeemScript to wallet\");\n             }\n \n-            CTxDestination redeem_dest = CScriptID(redeemScript);\n-            CScript redeemDestination = GetScriptForDestination(redeem_dest);\n+            CScript redeemDestination = GetScriptForDestination(redeem_id);\n \n             if (::IsMine(*pwallet, redeemDestination) == ISMINE_SPENDABLE) {\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");"
      }
    ]
  },
  {
    "sha": "fb1dfbbec0e57d57188a47406c49487f2145549e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjFkZmJiZWMwZTU3ZDU3MTg4YTQ3NDA2YzQ5NDg3ZjIxNDU1NDll",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-18T21:48:06Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-19T00:08:53Z"
      },
      "message": "Remove unused IsMine overload",
      "tree": {
        "sha": "a1b15ced0b0667063f34e037a8bc61d00ae9bea6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1b15ced0b0667063f34e037a8bc61d00ae9bea6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb1dfbbec0e57d57188a47406c49487f2145549e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb1dfbbec0e57d57188a47406c49487f2145549e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb1dfbbec0e57d57188a47406c49487f2145549e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb1dfbbec0e57d57188a47406c49487f2145549e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/952d8213a6d44b8eeff42f3a52defcaa1bc4a0dc"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 1,
      "deletions": 8
    },
    "files": [
      {
        "sha": "60384670b709c6979899b3b11c99a9d40fb2a7e4",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb1dfbbec0e57d57188a47406c49487f2145549e/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb1dfbbec0e57d57188a47406c49487f2145549e/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=fb1dfbbec0e57d57188a47406c49487f2145549e",
        "patch": "@@ -29,15 +29,9 @@ isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, SigVer\n }\n \n isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest, SigVersion sigversion)\n-{\n-    bool isInvalid = false;\n-    return IsMine(keystore, dest, isInvalid, sigversion);\n-}\n-\n-isminetype IsMine(const CKeyStore &keystore, const CTxDestination& dest, bool& isInvalid, SigVersion sigversion)\n {\n     CScript script = GetScriptForDestination(dest);\n-    return IsMine(keystore, script, isInvalid, sigversion);\n+    return IsMine(keystore, script, sigversion);\n }\n \n isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion sigversion)"
      },
      {
        "sha": "b46722ecf94dfd8648241cbe002828652dddad51",
        "filename": "src/script/ismine.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb1dfbbec0e57d57188a47406c49487f2145549e/src/script/ismine.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb1dfbbec0e57d57188a47406c49487f2145549e/src/script/ismine.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.h?ref=fb1dfbbec0e57d57188a47406c49487f2145549e",
        "patch": "@@ -35,7 +35,6 @@ typedef uint8_t isminefilter;\n  */\n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion = SigVersion::BASE);\n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, SigVersion = SigVersion::BASE);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest, bool& isInvalid, SigVersion = SigVersion::BASE);\n isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest, SigVersion = SigVersion::BASE);\n \n #endif // BITCOIN_SCRIPT_ISMINE_H"
      }
    ]
  },
  {
    "sha": "19fc973097ce5d336836c7c6cf4569b4fbaec653",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWZjOTczMDk3Y2U1ZDMzNjgzNmM3YzZjZjQ1NjliNGZiYWVjNjUz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-16T23:10:21Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T03:52:47Z"
      },
      "message": "Do not expose SigVersion argument to IsMine\n\nOnly IsMine's internal code needs this, as part of a recursion into P2SH and P2WSH\nscripts. The exposed functions always operate on actual scriptPubKeys and not on\nredeemScripts or witness scripts.",
      "tree": {
        "sha": "cd38c19266510d058e2cb3179216735c3925f693",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd38c19266510d058e2cb3179216735c3925f693"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19fc973097ce5d336836c7c6cf4569b4fbaec653",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19fc973097ce5d336836c7c6cf4569b4fbaec653",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19fc973097ce5d336836c7c6cf4569b4fbaec653",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19fc973097ce5d336836c7c6cf4569b4fbaec653/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb1dfbbec0e57d57188a47406c49487f2145549e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb1dfbbec0e57d57188a47406c49487f2145549e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb1dfbbec0e57d57188a47406c49487f2145549e"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 24,
      "deletions": 19
    },
    "files": [
      {
        "sha": "54468bc42345406a52d6aa073fd8ec7c723461be",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 16,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19fc973097ce5d336836c7c6cf4569b4fbaec653/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19fc973097ce5d336836c7c6cf4569b4fbaec653/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=19fc973097ce5d336836c7c6cf4569b4fbaec653",
        "patch": "@@ -22,19 +22,7 @@ static bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keyst\n     return true;\n }\n \n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, SigVersion sigversion)\n-{\n-    bool isInvalid = false;\n-    return IsMine(keystore, scriptPubKey, isInvalid, sigversion);\n-}\n-\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest, SigVersion sigversion)\n-{\n-    CScript script = GetScriptForDestination(dest);\n-    return IsMine(keystore, script, sigversion);\n-}\n-\n-isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion sigversion)\n+static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion sigversion)\n {\n     isInvalid = false;\n \n@@ -70,7 +58,7 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool&\n             // This also applies to the P2WSH case.\n             break;\n         }\n-        isminetype ret = ::IsMine(keystore, GetScriptForDestination(CKeyID(uint160(vSolutions[0]))), isInvalid, SigVersion::WITNESS_V0);\n+        isminetype ret = IsMineInner(keystore, GetScriptForDestination(CKeyID(uint160(vSolutions[0]))), isInvalid, SigVersion::WITNESS_V0);\n         if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n             return ret;\n         break;\n@@ -92,7 +80,7 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool&\n         CScriptID scriptID = CScriptID(uint160(vSolutions[0]));\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMine(keystore, subscript, isInvalid);\n+            isminetype ret = IsMineInner(keystore, subscript, isInvalid, SigVersion::BASE);\n             if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n                 return ret;\n         }\n@@ -108,7 +96,7 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool&\n         CScriptID scriptID = CScriptID(hash);\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMine(keystore, subscript, isInvalid, SigVersion::WITNESS_V0);\n+            isminetype ret = IsMineInner(keystore, subscript, isInvalid, SigVersion::WITNESS_V0);\n             if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n                 return ret;\n         }\n@@ -144,3 +132,20 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool&\n     }\n     return ISMINE_NO;\n }\n+\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid)\n+{\n+    return IsMineInner(keystore, scriptPubKey, isInvalid, SigVersion::BASE);\n+}\n+\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey)\n+{\n+    bool isInvalid = false;\n+    return IsMine(keystore, scriptPubKey, isInvalid);\n+}\n+\n+isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest)\n+{\n+    CScript script = GetScriptForDestination(dest);\n+    return IsMine(keystore, script);\n+}"
      },
      {
        "sha": "8573bdfbd248839126c25f6e2a8bd982b492785a",
        "filename": "src/script/ismine.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19fc973097ce5d336836c7c6cf4569b4fbaec653/src/script/ismine.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19fc973097ce5d336836c7c6cf4569b4fbaec653/src/script/ismine.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.h?ref=19fc973097ce5d336836c7c6cf4569b4fbaec653",
        "patch": "@@ -33,8 +33,8 @@ typedef uint8_t isminefilter;\n  * different SIGVERSION may have different network rules. Currently the only use of isInvalid is indicate uncompressed\n  * keys in SigVersion::WITNESS_V0 script, but could also be used in similar cases in the future\n  */\n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion = SigVersion::BASE);\n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, SigVersion = SigVersion::BASE);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest, SigVersion = SigVersion::BASE);\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid);\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n+isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n \n #endif // BITCOIN_SCRIPT_ISMINE_H"
      }
    ]
  },
  {
    "sha": "ac6ec625227b9a7821ccd7c622b2b72982cd309c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzZlYzYyNTIyN2I5YTc4MjFjY2Q3YzYyMmIyYjcyOTgyY2QzMDlj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-16T23:15:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T03:53:18Z"
      },
      "message": "Switch to a private version of SigVersion inside IsMine\n\nThis will allow us to have the consensus code and IsMine code diverge.",
      "tree": {
        "sha": "c51f5ba3e8fcb99a974c09978973c66f06e10991",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c51f5ba3e8fcb99a974c09978973c66f06e10991"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac6ec625227b9a7821ccd7c622b2b72982cd309c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac6ec625227b9a7821ccd7c622b2b72982cd309c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac6ec625227b9a7821ccd7c622b2b72982cd309c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac6ec625227b9a7821ccd7c622b2b72982cd309c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19fc973097ce5d336836c7c6cf4569b4fbaec653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19fc973097ce5d336836c7c6cf4569b4fbaec653",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19fc973097ce5d336836c7c6cf4569b4fbaec653"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "92d65956934194effae784a83c041719a20179fa",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 8,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac6ec625227b9a7821ccd7c622b2b72982cd309c/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac6ec625227b9a7821ccd7c622b2b72982cd309c/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=ac6ec625227b9a7821ccd7c622b2b72982cd309c",
        "patch": "@@ -13,6 +13,12 @@\n \n typedef std::vector<unsigned char> valtype;\n \n+enum class IsMineSigVersion\n+{\n+    BASE = 0,\n+    WITNESS_V0 = 1\n+};\n+\n static bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keystore)\n {\n     for (const valtype& pubkey : pubkeys) {\n@@ -22,7 +28,7 @@ static bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keyst\n     return true;\n }\n \n-static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion sigversion)\n+static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, IsMineSigVersion sigversion)\n {\n     isInvalid = false;\n \n@@ -43,7 +49,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n-        if (sigversion != SigVersion::BASE && vSolutions[0].size() != 33) {\n+        if (sigversion != IsMineSigVersion::BASE && vSolutions[0].size() != 33) {\n             isInvalid = true;\n             return ISMINE_NO;\n         }\n@@ -58,14 +64,14 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n             // This also applies to the P2WSH case.\n             break;\n         }\n-        isminetype ret = IsMineInner(keystore, GetScriptForDestination(CKeyID(uint160(vSolutions[0]))), isInvalid, SigVersion::WITNESS_V0);\n+        isminetype ret = IsMineInner(keystore, GetScriptForDestination(CKeyID(uint160(vSolutions[0]))), isInvalid, IsMineSigVersion::WITNESS_V0);\n         if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n             return ret;\n         break;\n     }\n     case TX_PUBKEYHASH:\n         keyID = CKeyID(uint160(vSolutions[0]));\n-        if (sigversion != SigVersion::BASE) {\n+        if (sigversion != IsMineSigVersion::BASE) {\n             CPubKey pubkey;\n             if (keystore.GetPubKey(keyID, pubkey) && !pubkey.IsCompressed()) {\n                 isInvalid = true;\n@@ -80,7 +86,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         CScriptID scriptID = CScriptID(uint160(vSolutions[0]));\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMineInner(keystore, subscript, isInvalid, SigVersion::BASE);\n+            isminetype ret = IsMineInner(keystore, subscript, isInvalid, IsMineSigVersion::BASE);\n             if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n                 return ret;\n         }\n@@ -96,7 +102,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         CScriptID scriptID = CScriptID(hash);\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMineInner(keystore, subscript, isInvalid, SigVersion::WITNESS_V0);\n+            isminetype ret = IsMineInner(keystore, subscript, isInvalid, IsMineSigVersion::WITNESS_V0);\n             if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n                 return ret;\n         }\n@@ -111,7 +117,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         // them) enable spend-out-from-under-you attacks, especially\n         // in shared-wallet situations.\n         std::vector<valtype> keys(vSolutions.begin()+1, vSolutions.begin()+vSolutions.size()-1);\n-        if (sigversion != SigVersion::BASE) {\n+        if (sigversion != IsMineSigVersion::BASE) {\n             for (size_t i = 0; i < keys.size(); i++) {\n                 if (keys[i].size() != 33) {\n                     isInvalid = true;\n@@ -135,7 +141,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n \n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid)\n {\n-    return IsMineInner(keystore, scriptPubKey, isInvalid, SigVersion::BASE);\n+    return IsMineInner(keystore, scriptPubKey, isInvalid, IsMineSigVersion::BASE);\n }\n \n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey)"
      }
    ]
  },
  {
    "sha": "3619735b09c0cb1383d437527bfbd4dc023d9f76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjE5NzM1YjA5YzBjYjEzODNkNDM3NTI3YmZiZDRkYzAyM2Q5Zjc2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-16T23:21:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T04:05:04Z"
      },
      "message": "Track difference between scriptPubKey and P2SH execution in IsMine\n\nInside IsMine we care about the distinction between scriptPubKey execution\nand P2SH redeemScript execution. The consensus code does not care about this\ndistinction, and thus SigVersion does not have a field for P2SH. As the IsMine\ncode will care, it uses a separate enum with more fields.",
      "tree": {
        "sha": "7d7685233e885e93c05b62cd2093dd8bfb23c0fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d7685233e885e93c05b62cd2093dd8bfb23c0fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3619735b09c0cb1383d437527bfbd4dc023d9f76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3619735b09c0cb1383d437527bfbd4dc023d9f76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3619735b09c0cb1383d437527bfbd4dc023d9f76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3619735b09c0cb1383d437527bfbd4dc023d9f76/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac6ec625227b9a7821ccd7c622b2b72982cd309c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac6ec625227b9a7821ccd7c622b2b72982cd309c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac6ec625227b9a7821ccd7c622b2b72982cd309c"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 19,
      "deletions": 7
    },
    "files": [
      {
        "sha": "0ef4a59f13e5a7e6c1cf5c46582c2269d42f2c3b",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3619735b09c0cb1383d437527bfbd4dc023d9f76/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3619735b09c0cb1383d437527bfbd4dc023d9f76/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=3619735b09c0cb1383d437527bfbd4dc023d9f76",
        "patch": "@@ -13,12 +13,24 @@\n \n typedef std::vector<unsigned char> valtype;\n \n+/**\n+ * This is an enum that tracks the execution context of a script, similar to\n+ * SigVersion in script/interpreter. It is separate however because we want to\n+ * distinguish between top-level scriptPubKey execution and P2SH redeemScript\n+ * execution (a distinction that has no impact on consensus rules).\n+ */\n enum class IsMineSigVersion\n {\n-    BASE = 0,\n-    WITNESS_V0 = 1\n+    TOP = 0,        //! scriptPubKey execution\n+    P2SH = 1,       //! P2SH redeemScript\n+    WITNESS_V0 = 2  //! P2WSH witness script execution\n };\n \n+static bool PermitsUncompressed(IsMineSigVersion sigversion)\n+{\n+    return sigversion == IsMineSigVersion::TOP || sigversion == IsMineSigVersion::P2SH;\n+}\n+\n static bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keystore)\n {\n     for (const valtype& pubkey : pubkeys) {\n@@ -49,7 +61,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n-        if (sigversion != IsMineSigVersion::BASE && vSolutions[0].size() != 33) {\n+        if (!PermitsUncompressed(sigversion) && vSolutions[0].size() != 33) {\n             isInvalid = true;\n             return ISMINE_NO;\n         }\n@@ -71,7 +83,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n     }\n     case TX_PUBKEYHASH:\n         keyID = CKeyID(uint160(vSolutions[0]));\n-        if (sigversion != IsMineSigVersion::BASE) {\n+        if (!PermitsUncompressed(sigversion)) {\n             CPubKey pubkey;\n             if (keystore.GetPubKey(keyID, pubkey) && !pubkey.IsCompressed()) {\n                 isInvalid = true;\n@@ -86,7 +98,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         CScriptID scriptID = CScriptID(uint160(vSolutions[0]));\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMineInner(keystore, subscript, isInvalid, IsMineSigVersion::BASE);\n+            isminetype ret = IsMineInner(keystore, subscript, isInvalid, IsMineSigVersion::P2SH);\n             if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))\n                 return ret;\n         }\n@@ -117,7 +129,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         // them) enable spend-out-from-under-you attacks, especially\n         // in shared-wallet situations.\n         std::vector<valtype> keys(vSolutions.begin()+1, vSolutions.begin()+vSolutions.size()-1);\n-        if (sigversion != IsMineSigVersion::BASE) {\n+        if (!PermitsUncompressed(sigversion)) {\n             for (size_t i = 0; i < keys.size(); i++) {\n                 if (keys[i].size() != 33) {\n                     isInvalid = true;\n@@ -141,7 +153,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n \n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid)\n {\n-    return IsMineInner(keystore, scriptPubKey, isInvalid, IsMineSigVersion::BASE);\n+    return IsMineInner(keystore, scriptPubKey, isInvalid, IsMineSigVersion::TOP);\n }\n \n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey)"
      }
    ]
  },
  {
    "sha": "08f322865429c307ea620a1e349855f9eee3af7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGYzMjI4NjU0MjljMzA3ZWE2MjBhMWUzNDk4NTVmOWVlZTNhZjdl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-16T23:36:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T04:05:14Z"
      },
      "message": "Optimization: only test for witness scripts at top level\n\nInside P2SH scripts we already know that the P2SH script version of witness keys/scripts\nare acceptable, so there is no need to test for it again.",
      "tree": {
        "sha": "58e013f2397d4e8857f96d934c97abaf08886ddb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58e013f2397d4e8857f96d934c97abaf08886ddb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08f322865429c307ea620a1e349855f9eee3af7e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08f322865429c307ea620a1e349855f9eee3af7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08f322865429c307ea620a1e349855f9eee3af7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08f322865429c307ea620a1e349855f9eee3af7e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3619735b09c0cb1383d437527bfbd4dc023d9f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3619735b09c0cb1383d437527bfbd4dc023d9f76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3619735b09c0cb1383d437527bfbd4dc023d9f76"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "eb3847d8e2af40809dd4b3a54a0ca0a04dd241d7",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08f322865429c307ea620a1e349855f9eee3af7e/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08f322865429c307ea620a1e349855f9eee3af7e/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=08f322865429c307ea620a1e349855f9eee3af7e",
        "patch": "@@ -70,7 +70,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n         break;\n     case TX_WITNESS_V0_KEYHASH:\n     {\n-        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+        if (sigversion == IsMineSigVersion::TOP && !keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n             // We do not support bare witness outputs unless the P2SH version of it would be\n             // acceptable as well. This protects against matching before segwit activates.\n             // This also applies to the P2WSH case.\n@@ -106,7 +106,7 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n     }\n     case TX_WITNESS_V0_SCRIPTHASH:\n     {\n-        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+        if (sigversion == IsMineSigVersion::TOP && !keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n             break;\n         }\n         uint160 hash;"
      }
    ]
  },
  {
    "sha": "9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzJhOGI4ZDM0YzJmZjZiZDg2MTE1ODdhZTg4M2MxZGMwMDkxYTQ1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-17T00:18:34Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T04:05:14Z"
      },
      "message": "Do not treat bare multisig as IsMine\n\nSuch outputs can still be watched, and signed for, but they aren't treated as valid payments.\nThat means they won't cause transactions to appear in listtransactions, their outputs to be\nshown under listunspent, or affect balances.",
      "tree": {
        "sha": "354039b23d039f90934aadad515a692f647b7767",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/354039b23d039f90934aadad515a692f647b7767"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08f322865429c307ea620a1e349855f9eee3af7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08f322865429c307ea620a1e349855f9eee3af7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08f322865429c307ea620a1e349855f9eee3af7e"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 19,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a987944f5b77024d4e3808087b6372a7408bba77",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
        "patch": "@@ -123,6 +123,9 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n \n     case TX_MULTISIG:\n     {\n+        // Never treat bare multisig outputs as ours (they can still be made watchonly-though)\n+        if (sigversion == IsMineSigVersion::TOP) break;\n+\n         // Only consider transactions \"mine\" if we own ALL the\n         // keys involved. Multi-signature transactions that are\n         // partially owned (somebody else has a key that can spend"
      },
      {
        "sha": "ff0bf6c66d76bd38ea86ab984ed1601c07850ae9",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
        "patch": "@@ -561,7 +561,14 @@ BOOST_AUTO_TEST_CASE(script_standard_IsMine)\n         keystore.AddKey(keys[1]);\n \n         result = IsMine(keystore, scriptPubKey, isInvalid);\n-        BOOST_CHECK_EQUAL(result, ISMINE_SPENDABLE);\n+        BOOST_CHECK_EQUAL(result, ISMINE_NO);\n+        BOOST_CHECK(!isInvalid);\n+\n+        // Keystore has 2/2 keys and the script\n+        keystore.AddCScript(scriptPubKey);\n+\n+        result = IsMine(keystore, scriptPubKey, isInvalid);\n+        BOOST_CHECK_EQUAL(result, ISMINE_NO);\n         BOOST_CHECK(!isInvalid);\n     }\n "
      },
      {
        "sha": "88c4d7fb2c1f48a5d3a79e743be118f4f06da63e",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
        "patch": "@@ -311,8 +311,10 @@ def run_test(self):\n             v = self.nodes[0].getaddressinfo(i)\n             if (v['isscript']):\n                 [bare, p2sh, p2wsh, p2sh_p2wsh] = self.p2sh_address_to_script(v)\n-                # bare and p2sh multisig with compressed keys should always be spendable\n-                spendable_anytime.extend([bare, p2sh])\n+                # p2sh multisig with compressed keys should always be spendable\n+                spendable_anytime.extend([p2sh])\n+                # bare multisig can be watched and signed, but is not treated as ours\n+                solvable_after_importaddress.extend([bare])\n                 # P2WSH and P2SH(P2WSH) multisig with compressed keys are spendable after direct importaddress\n                 spendable_after_importaddress.extend([p2wsh, p2sh_p2wsh])\n             else:\n@@ -328,8 +330,10 @@ def run_test(self):\n             v = self.nodes[0].getaddressinfo(i)\n             if (v['isscript']):\n                 [bare, p2sh, p2wsh, p2sh_p2wsh] = self.p2sh_address_to_script(v)\n-                # bare and p2sh multisig with uncompressed keys should always be spendable\n-                spendable_anytime.extend([bare, p2sh])\n+                # p2sh multisig with uncompressed keys should always be spendable\n+                spendable_anytime.extend([p2sh])\n+                # bare multisig can be watched and signed, but is not treated as ours\n+                solvable_after_importaddress.extend([bare])\n                 # P2WSH and P2SH(P2WSH) multisig with uncompressed keys are never seen\n                 unseen_anytime.extend([p2wsh, p2sh_p2wsh])\n             else:"
      }
    ]
  },
  {
    "sha": "b61fb7113688cc25c02937f0684759dcaf247f86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjFmYjcxMTM2ODhjYzI1YzAyOTM3ZjA2ODQ3NTlkY2FmMjQ3Zjg2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-17T01:06:07Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T04:05:14Z"
      },
      "message": "Mention removal of bare multisig IsMine in release notes",
      "tree": {
        "sha": "82b06396f77b8c145312348ab21ff372773a19e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82b06396f77b8c145312348ab21ff372773a19e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b61fb7113688cc25c02937f0684759dcaf247f86",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b61fb7113688cc25c02937f0684759dcaf247f86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b61fb7113688cc25c02937f0684759dcaf247f86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b61fb7113688cc25c02937f0684759dcaf247f86/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c2a8b8d34c2ff6bd8611587ae883c1dc0091a45"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cd13085527d9bfc87aa6983fb3bb8279079ca35f",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b61fb7113688cc25c02937f0684759dcaf247f86/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b61fb7113688cc25c02937f0684759dcaf247f86/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=b61fb7113688cc25c02937f0684759dcaf247f86",
        "patch": "@@ -96,6 +96,16 @@ Low-level RPC changes\n   with any `-wallet=<path>` options, there is no change in behavior, and the\n   name of any wallet is just its `<path>` string.\n \n+- Bare multisig outputs to our keys are no longer automatically treated as\n+  incoming payments. As this feature was only available for multisig outputs for\n+  which you had all private keys in your wallet, there was generally no use for\n+  them compared to single-key schemes. Furthermore, no address format for such\n+  outputs is defined, and wallet software can't easily send to it. These outputs\n+  will no longer show up in `listtransactions`, `listunspent`, or contribute to\n+  your balance, unless they are explicitly watched (using `importaddress` or\n+  `importmulti` with hex script argument). `signrawtransaction*` also still\n+  works for them.\n+\n ### Logging\n \n - The log timestamp format is now ISO 8601 (e.g. \"2018-02-28T12:34:56Z\")."
      }
    ]
  },
  {
    "sha": "7d0f80bbf4de8c17b6db9a035ba32698ad076e2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDBmODBiYmY0ZGU4YzE3YjZkYjlhMDM1YmEzMjY5OGFkMDc2ZTJl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T04:06:47Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-20T04:06:47Z"
      },
      "message": "Use anonymous namespace instead of static functions",
      "tree": {
        "sha": "e62cc2dadae9dc067e55d69b71cbac579acd9211",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e62cc2dadae9dc067e55d69b71cbac579acd9211"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d0f80bbf4de8c17b6db9a035ba32698ad076e2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d0f80bbf4de8c17b6db9a035ba32698ad076e2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d0f80bbf4de8c17b6db9a035ba32698ad076e2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d0f80bbf4de8c17b6db9a035ba32698ad076e2e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b61fb7113688cc25c02937f0684759dcaf247f86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b61fb7113688cc25c02937f0684759dcaf247f86",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b61fb7113688cc25c02937f0684759dcaf247f86"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "fefa02fdef1c3e3e81ce6ad9fc985fc9c950e5ab",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d0f80bbf4de8c17b6db9a035ba32698ad076e2e/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d0f80bbf4de8c17b6db9a035ba32698ad076e2e/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=7d0f80bbf4de8c17b6db9a035ba32698ad076e2e",
        "patch": "@@ -13,6 +13,8 @@\n \n typedef std::vector<unsigned char> valtype;\n \n+namespace {\n+\n /**\n  * This is an enum that tracks the execution context of a script, similar to\n  * SigVersion in script/interpreter. It is separate however because we want to\n@@ -26,12 +28,12 @@ enum class IsMineSigVersion\n     WITNESS_V0 = 2  //! P2WSH witness script execution\n };\n \n-static bool PermitsUncompressed(IsMineSigVersion sigversion)\n+bool PermitsUncompressed(IsMineSigVersion sigversion)\n {\n     return sigversion == IsMineSigVersion::TOP || sigversion == IsMineSigVersion::P2SH;\n }\n \n-static bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keystore)\n+bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keystore)\n {\n     for (const valtype& pubkey : pubkeys) {\n         CKeyID keyID = CPubKey(pubkey).GetID();\n@@ -40,7 +42,7 @@ static bool HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keyst\n     return true;\n }\n \n-static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, IsMineSigVersion sigversion)\n+isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, IsMineSigVersion sigversion)\n {\n     isInvalid = false;\n \n@@ -154,6 +156,8 @@ static isminetype IsMineInner(const CKeyStore& keystore, const CScript& scriptPu\n     return ISMINE_NO;\n }\n \n+} // namespace\n+\n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid)\n {\n     return IsMineInner(keystore, scriptPubKey, isInvalid, IsMineSigVersion::TOP);"
      }
    ]
  }
]