[
  {
    "sha": "420fa0770f37619bfa29898d59dac45b6a477abb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjBmYTA3NzBmMzc2MTliZmEyOTg5OGQ1OWRhYzQ1YjZhNDc3YWJi",
    "commit": {
      "author": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2020-05-09T09:09:52Z"
      },
      "committer": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2020-05-09T09:09:52Z"
      },
      "message": "fuzz: use std::optional for sep_pos variable\n\nCo-authored-by: MarcoFalke <falke.marco@gmail.com>",
      "tree": {
        "sha": "374e4e73842a177b43f13ef9cc5e4b531296e13a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/374e4e73842a177b43f13ef9cc5e4b531296e13a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/420fa0770f37619bfa29898d59dac45b6a477abb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEED2bWxOeRx//n2QOeJiaFvHjtEfsFAl62c2AACgkQJiaFvHjt\nEfvsIwf/Z4T6Uz4XBfzlVX9e1l9RyvaV700mbbI4/XBjFJJ7sKcqcxIv+S3X3rr9\nL38sMD75NDOtX28Hw2OHKYflcBx9k4X1dwrNxtAI3DTKhtG/m5RCLy/HeArwddUX\n2xLflflKZ2ImeeMzyE5k9h2JJmOy0vjTeGb/Xk7h1BBBNoDJJ1SWBC7EeiPZosaT\nJK+NDGwwg11ToaX3dcbPoijpl0QOTbj4hIRR+rIpHz8H4LbK9Rt3Th3ZgVMjuqsP\nCql5BVo9tK1fuU7vBwGoMgwEfsX04Sdk88bALRFiQJ4ctrCLAMGS/M2Y2IfMdXmJ\nTI1yB+cUCUqRuew89TrsSLwhXxHcUg==\n=R77F\n-----END PGP SIGNATURE-----",
        "payload": "tree 374e4e73842a177b43f13ef9cc5e4b531296e13a\nparent b55866969e248cbd912a1c298e3ba375685575dc\nauthor Harris <brakmic@gmail.com> 1589015392 +0200\ncommitter Harris <brakmic@gmail.com> 1589015392 +0200\n\nfuzz: use std::optional for sep_pos variable\n\nCo-authored-by: MarcoFalke <falke.marco@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/420fa0770f37619bfa29898d59dac45b6a477abb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/420fa0770f37619bfa29898d59dac45b6a477abb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/420fa0770f37619bfa29898d59dac45b6a477abb/comments",
    "author": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b55866969e248cbd912a1c298e3ba375685575dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b55866969e248cbd912a1c298e3ba375685575dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b55866969e248cbd912a1c298e3ba375685575dc"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f51cbf8f3c6d862b277addc6aee3a76337fd6f2e",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/420fa0770f37619bfa29898d59dac45b6a477abb/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/420fa0770f37619bfa29898d59dac45b6a477abb/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=420fa0770f37619bfa29898d59dac45b6a477abb",
        "patch": "@@ -14,4 +14,4 @@ export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined --enable-c++17 CC=clang CXX=clang++\""
      },
      {
        "sha": "fb4c27c36f7072b453de695bbceb6046941c3a14",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/420fa0770f37619bfa29898d59dac45b6a477abb/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/420fa0770f37619bfa29898d59dac45b6a477abb/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=420fa0770f37619bfa29898d59dac45b6a477abb",
        "patch": "@@ -15,4 +15,4 @@ export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export FUZZ_TESTS_CONFIG=\"--valgrind\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer --enable-c++17 CC=clang CXX=clang++\""
      },
      {
        "sha": "6d8a65f5ab0756f0a4ea655c403e702677c2c865",
        "filename": "src/test/fuzz/asmap_direct.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/420fa0770f37619bfa29898d59dac45b6a477abb/src/test/fuzz/asmap_direct.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/420fa0770f37619bfa29898d59dac45b6a477abb/src/test/fuzz/asmap_direct.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/asmap_direct.cpp?ref=420fa0770f37619bfa29898d59dac45b6a477abb",
        "patch": "@@ -6,27 +6,27 @@\n #include <test/fuzz/fuzz.h>\n \n #include <cstdint>\n+#include <optional>\n #include <vector>\n \n #include <assert.h>\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     // Encoding: [asmap using 1 bit / byte] 0xFF [addr using 1 bit / byte]\n-    bool have_sep = false;\n-    size_t sep_pos;\n+    std::optional<size_t> sep_pos_opt;\n     for (size_t pos = 0; pos < buffer.size(); ++pos) {\n         uint8_t x = buffer[pos];\n         if ((x & 0xFE) == 0) continue;\n         if (x == 0xFF) {\n-            if (have_sep) return;\n-            have_sep = true;\n-            sep_pos = pos;\n+            if (sep_pos_opt) return;\n+            sep_pos_opt = pos;\n         } else {\n             return;\n         }\n     }\n-    if (!have_sep) return; // Needs exactly 1 separator\n+    if (!sep_pos_opt) return; // Needs exactly 1 separator\n+    const size_t sep_pos{sep_pos_opt.value()};\n     if (buffer.size() - sep_pos - 1 > 128) return; // At most 128 bits in IP address\n \n     // Checks on asmap"
      }
    ]
  }
]