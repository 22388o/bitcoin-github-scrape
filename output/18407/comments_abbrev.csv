DrahtBot,2020-03-25 00:35:51,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18407#issuecomment-603575824,603575824,
jonatack,2020-03-25 14:14:44,"Concept ACK, commenting to be notified when this is rebased.",https://github.com/bitcoin/bitcoin/pull/18407#issuecomment-603863225,603863225,
practicalswift,2020-03-25 14:29:26,@jonasnick Rebased! :),https://github.com/bitcoin/bitcoin/pull/18407#issuecomment-603871095,603871095,
practicalswift,2020-04-02 21:07:13,@MarcoFalke Would you mind reviewing? :),https://github.com/bitcoin/bitcoin/pull/18407#issuecomment-608089309,608089309,
practicalswift,2020-04-04 17:25:47,@MarcoFalke Updated. Please re-review :),https://github.com/bitcoin/bitcoin/pull/18407#issuecomment-609061865,609061865,
MarcoFalke,2020-04-02 21:59:59,"I'd prefer to test main-net, because regtest has some odd pow rules like `         consensus.fPowAllowMinDifficultyBlocks = true;`",https://github.com/bitcoin/bitcoin/pull/18407#discussion_r402620682,402620682,src/test/fuzz/pow.cpp
MarcoFalke,2020-04-02 22:03:42,"or `         consensus.fPowNoRetargeting = true;`.\n\nThose rule effectively bypass the code you want to fuzz. See for example here in line 51: https://doxygen.bitcoincore.org/pow_8cpp_source.html#l00049",https://github.com/bitcoin/bitcoin/pull/18407#discussion_r402622286,402622286,src/test/fuzz/pow.cpp
practicalswift,2020-04-04 17:25:25,Nice catch! Now using `CBaseChainParams::MAIN`.,https://github.com/bitcoin/bitcoin/pull/18407#discussion_r403494416,403494416,src/test/fuzz/pow.cpp
