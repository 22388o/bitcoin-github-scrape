[
  {
    "sha": "1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2RlODAwNTIzM2QxNjM3MjNkNGQ1YmYxYmFjZjIyZTZjYjdhMDdl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-10T16:05:47Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-11T10:26:59Z"
      },
      "message": "p2p, refactor: rm redundant erase_size calculation in SelectNodeToEvict()\n\nas EraseLastKElements() called in the next line performs the same operation.\nThanks to Martin Zumsande (lightlike) for seeing this while reviewing.\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>",
      "tree": {
        "sha": "5724bbaa1b931f88f9053225f61836d0dc9f5790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5724bbaa1b931f88f9053225f61836d0dc9f5790"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDDOnMACgkQT1chs9Dj\nkh2dcw//Ycp9l9VOJe9h1K+9t8bVGRth/BCRu1rzD3wQ6RWEHBI9/XLq3gq+ObsE\n3DAHuNE8/AJKrC03gkd9si4qQzDyjXeZAHKjgcFybxLk7w5RcDRw1x1AwWN4gmly\nNsWAhzKCmLZyORZMj2v3ebpJG+TiQAMna3DtkVoAq8pzCsOawug2Qsh1bGVvdSPp\n5isnNorwN9LeKmfAiddm67dzONyfeirW+vNKFuJKcTs5HUIIsfDDhqQ5XWSMUyRh\nlphRAsS6OqZDrWfspecUOLbH+O+YOlRxW5aagnVTQq24ooXy2A9Tds0eREUBidi2\n8WC5Q1jjLEQYsZhOQspqIwvyerBqVyNcLNk2l/qbdA1Y8iTzig+go8Bwvqv1K4++\ngwEShP+ghji35kNMynal2G+J5FNG6rEqOcujrqZD3mjcOLFfp4fnnP3rOCcMHc9P\nLXlOWzc8xQhVvvJf3oyGmjj887+A9Ivm02SSoTUnSBbPEyb0QAWllxLnae6+flTw\n2JRhtZD/0UQj6SzkhgNaT+xWCcvdXwr3G+FFyUijLbHYpt8c5TQwKt3ei1KPvbbi\ndAT+t0svlwR4MvlBz/Ejp+n48yhx4AGp1p2n0472koHlNuRUYZEjeYUvFl6Osw1J\nlNP1TnibHeOlvEQ+r4ll/ivU4aT4JH2rwDO2BXBvT2jhxQ+zaoY=\n=p7ig\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFGjYdJhTP/zAdqe5rdYAWE+R9gUJ50UXk1LEq/FWWtnCP/wEBn1/Qfwreaf\nJncK9J/XABkI8SDCVwFKoYXfNIiRd3VpuaLDFYTsf+Ulif7Vew+sKL4ZUgjxBGDD\nOnXwCKepyi1u5fx0AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BAzjbcqdbsjSDEuPzIlEt2pCPEEYMM6dfAI\nG15WNlpeYBAAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb23/8BCw5GVE3JguvVZx9wy9S+pmCPEEYMM6dfAIKdPHo/nHzr8A\ng9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23wELw1\nqgLU9DPN8oC84iS5i7cI8QRgwzp18AiI88xC4bw3ZQCD3+MNLvkMjiwraHR0cHM6\nLy9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5724bbaa1b931f88f9053225f61836d0dc9f5790\nparent f66eceaecf464bfab5e19f3ca8fe680d8a6aa2e1\nauthor Jon Atack <jon@atack.com> 1618070747 +0200\ncommitter Jon Atack <jon@atack.com> 1623407219 +0200\n\np2p, refactor: rm redundant erase_size calculation in SelectNodeToEvict()\n\nas EraseLastKElements() called in the next line performs the same operation.\nThanks to Martin Zumsande (lightlike) for seeing this while reviewing.\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cde8005233d163723d4d5bf1bacf22e6cb7a07e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f66eceaecf464bfab5e19f3ca8fe680d8a6aa2e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f66eceaecf464bfab5e19f3ca8fe680d8a6aa2e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f66eceaecf464bfab5e19f3ca8fe680d8a6aa2e1"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "901132daa38c7e6a42f2c1041a2418c438c67c29",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cde8005233d163723d4d5bf1bacf22e6cb7a07e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cde8005233d163723d4d5bf1bacf22e6cb7a07e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
        "patch": "@@ -944,8 +944,7 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvict\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, erase_size,\n+    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n                        [](const NodeEvictionCandidate& n) { return !n.fRelayTxes && n.fRelevantServices; });\n \n     // Protect 4 nodes that most recently sent us novel blocks."
      }
    ]
  },
  {
    "sha": "519e76bb64d03ecac175ec33c31e37d0e90f037f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTllNzZiYjY0ZDAzZWNhYzE3NWVjMzNjMzFlMzdkMGU5MGYwMzdm",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-19T13:08:25Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:14:40Z"
      },
      "message": "test: speed up and simplify peer_eviction_test\n\nThis speeds up the test significantly, which helps when\nrunning it repeatedly.\n\nSuggest reviewing the diff with:\n\ncolorMoved = dimmed-zebra\ncolorMovedWs = allow-indentation-change",
      "tree": {
        "sha": "b961aed190a8bd001071981b011c0164273eb3b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b961aed190a8bd001071981b011c0164273eb3b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/519e76bb64d03ecac175ec33c31e37d0e90f037f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS0oACgkQT1chs9Dj\nkh0TtA/+P15oOtUSJ8Kyc9bcg+UdsjMSI+soO0cC7uokzfGq7neqDr0vOuA2nRIO\njmRoUtMT6Ad7MtMQDErxr+ZVWaKubOh3xH1XqY5PeU1UO5Rlt7UXnhtXTV6mpG85\nXLt9sWkeL83yEEx+ekKk+KP/edSAfWoJOavlZgDyqBlJBTUYHmi3VgsYI5pUy4Fv\nsOpt1i/bCnStcyDExyi2cQ+FT0c+fyt/nhNHgsydbTa2+rsl1am8UV+0IR2Vdzg6\nKjlXvP0odMZsej1btUnKDcAkEzSFxTHqAyGy5iBM+wEutPZMrDU3edCrpWW83f4Q\nKwHFvPnC2DcX9Q+daHBZDwhA8MinKADpkpO13TlHBxPO6v+42n5VwFmt+lgy9KhD\nd22t2R/ueyLhZm97dZPTB+vrgatRpsHh+8I1XuYdcjFlrwZBAU7NVDi2pdbcV4Gl\n0aft/z3Wv/ZmVwXsKvOYYxAKbGugs/qxTPU448NKzRtmuIDEet1JygxmBUNQE2JW\nx7nPnjPMc1yrnsQkNAIAH9Yf8sUXWors0VtLbD8CN7cSyoxP6wspv2houodzwa+6\n1eL5WZ2LdEd2/R60t5L06K5P1+a/7+9aZLn9VUFsPufekBb8OKO1Rl7dbO/dVyF+\nU0NcbmhLo08sUpJJ52fsmqLT9NwSkizOcg4UWXpvXhOJTEhBdDw=\n=JTa5\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILd4fhwL1jZGh9vCVZnJh7Y/KW2SJoaRh6lrZ8cp7v3jCP/wEBp5qIO4wl/p\nNUOcE8rNvTwI8QRgxktL8Ah4l+cqezXe0QCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGmTvq//Fpl7Gq8/wcnJ\niWcI8QRgxktL8Ahf8Nb2UuLndQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEKGOXZWu0mPXQpAspkSo3LYI8QRgxktL\n8AjbmqY4ij4s4QCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ04j9WXyHh87ey9JkbapjWQjxBGDGS0vwCEM4LMJiAfnAAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b961aed190a8bd001071981b011c0164273eb3b3\nparent 1cde8005233d163723d4d5bf1bacf22e6cb7a07e\nauthor Jon Atack <jon@atack.com> 1618837705 +0200\ncommitter Jon Atack <jon@atack.com> 1623608080 +0200\n\ntest: speed up and simplify peer_eviction_test\n\nThis speeds up the test significantly, which helps when\nrunning it repeatedly.\n\nSuggest reviewing the diff with:\n\ncolorMoved = dimmed-zebra\ncolorMovedWs = allow-indentation-change\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/519e76bb64d03ecac175ec33c31e37d0e90f037f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/519e76bb64d03ecac175ec33c31e37d0e90f037f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/519e76bb64d03ecac175ec33c31e37d0e90f037f/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cde8005233d163723d4d5bf1bacf22e6cb7a07e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cde8005233d163723d4d5bf1bacf22e6cb7a07e"
      }
    ],
    "stats": {
      "total": 171,
      "additions": 82,
      "deletions": 89
    },
    "files": [
      {
        "sha": "3b981cf69c5a6663c90c3bcb1b82a8b42b4a3acd",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 82,
        "deletions": 89,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/519e76bb64d03ecac175ec33c31e37d0e90f037f/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/519e76bb64d03ecac175ec33c31e37d0e90f037f/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=519e76bb64d03ecac175ec33c31e37d0e90f037f",
        "patch": "@@ -15,11 +15,6 @@\n \n BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n \n-namespace {\n-constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n-constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n-} // namespace\n-\n std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n {\n     std::vector<NodeEvictionCandidate> candidates;\n@@ -257,91 +252,89 @@ BOOST_AUTO_TEST_CASE(peer_eviction_test)\n {\n     FastRandomContext random_context{true};\n \n-    for (int i = 0; i < NODE_EVICTION_TEST_ROUNDS; ++i) {\n-        for (int number_of_nodes = 0; number_of_nodes < NODE_EVICTION_TEST_UP_TO_N_NODES; ++number_of_nodes) {\n-            // Four nodes with the highest keyed netgroup values should be\n-            // protected from eviction.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n-                    candidate.nKeyedNetGroup = number_of_nodes - candidate.id;\n-                },\n-                {0, 1, 2, 3}, random_context));\n-\n-            // Eight nodes with the lowest minimum ping time should be protected\n-            // from eviction.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [](NodeEvictionCandidate& candidate) {\n-                    candidate.m_min_ping_time = std::chrono::microseconds{candidate.id};\n-                },\n-                {0, 1, 2, 3, 4, 5, 6, 7}, random_context));\n-\n-            // Four nodes that most recently sent us novel transactions accepted\n-            // into our mempool should be protected from eviction.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n-                    candidate.nLastTXTime = number_of_nodes - candidate.id;\n-                },\n-                {0, 1, 2, 3}, random_context));\n-\n-            // Up to eight non-tx-relay peers that most recently sent us novel\n-            // blocks should be protected from eviction.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n-                    candidate.nLastBlockTime = number_of_nodes - candidate.id;\n-                    if (candidate.id <= 7) {\n-                        candidate.fRelayTxes = false;\n-                        candidate.fRelevantServices = true;\n-                    }\n-                },\n-                {0, 1, 2, 3, 4, 5, 6, 7}, random_context));\n-\n-            // Four peers that most recently sent us novel blocks should be\n-            // protected from eviction.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n-                    candidate.nLastBlockTime = number_of_nodes - candidate.id;\n-                },\n-                {0, 1, 2, 3}, random_context));\n-\n-            // Combination of the previous two tests.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n-                    candidate.nLastBlockTime = number_of_nodes - candidate.id;\n-                    if (candidate.id <= 7) {\n-                        candidate.fRelayTxes = false;\n-                        candidate.fRelevantServices = true;\n-                    }\n-                },\n-                {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, random_context));\n-\n-            // Combination of all tests above.\n-            BOOST_CHECK(!IsEvicted(\n-                number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n-                    candidate.nKeyedNetGroup = number_of_nodes - candidate.id;           // 4 protected\n-                    candidate.m_min_ping_time = std::chrono::microseconds{candidate.id}; // 8 protected\n-                    candidate.nLastTXTime = number_of_nodes - candidate.id;              // 4 protected\n-                    candidate.nLastBlockTime = number_of_nodes - candidate.id;           // 4 protected\n-                },\n-                {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}, random_context));\n-\n-            // An eviction is expected given >= 29 random eviction candidates. The eviction logic protects at most\n-            // four peers by net group, eight by lowest ping time, four by last time of novel tx, up to eight non-tx-relay\n-            // peers by last novel block time, and four more peers by last novel block time.\n-            if (number_of_nodes >= 29) {\n-                BOOST_CHECK(SelectNodeToEvict(GetRandomNodeEvictionCandidates(number_of_nodes, random_context)));\n-            }\n-\n-            // No eviction is expected given <= 20 random eviction candidates. The eviction logic protects at least\n-            // four peers by net group, eight by lowest ping time, four by last time of novel tx and four peers by last\n-            // novel block time.\n-            if (number_of_nodes <= 20) {\n-                BOOST_CHECK(!SelectNodeToEvict(GetRandomNodeEvictionCandidates(number_of_nodes, random_context)));\n-            }\n-\n-            // Cases left to test:\n-            // * \"If any remaining peers are preferred for eviction consider only them. [...]\"\n-            // * \"Identify the network group with the most connections and youngest member. [...]\"\n+    for (int number_of_nodes = 0; number_of_nodes < 200; ++number_of_nodes) {\n+        // Four nodes with the highest keyed netgroup values should be\n+        // protected from eviction.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n+                            candidate.nKeyedNetGroup = number_of_nodes - candidate.id;\n+                        },\n+                        {0, 1, 2, 3}, random_context));\n+\n+        // Eight nodes with the lowest minimum ping time should be protected\n+        // from eviction.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [](NodeEvictionCandidate& candidate) {\n+                            candidate.m_min_ping_time = std::chrono::microseconds{candidate.id};\n+                        },\n+                        {0, 1, 2, 3, 4, 5, 6, 7}, random_context));\n+\n+        // Four nodes that most recently sent us novel transactions accepted\n+        // into our mempool should be protected from eviction.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n+                            candidate.nLastTXTime = number_of_nodes - candidate.id;\n+                        },\n+                        {0, 1, 2, 3}, random_context));\n+\n+        // Up to eight non-tx-relay peers that most recently sent us novel\n+        // blocks should be protected from eviction.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n+                            candidate.nLastBlockTime = number_of_nodes - candidate.id;\n+                            if (candidate.id <= 7) {\n+                                candidate.fRelayTxes = false;\n+                                candidate.fRelevantServices = true;\n+                            }\n+                        },\n+                        {0, 1, 2, 3, 4, 5, 6, 7}, random_context));\n+\n+        // Four peers that most recently sent us novel blocks should be\n+        // protected from eviction.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n+                            candidate.nLastBlockTime = number_of_nodes - candidate.id;\n+                        },\n+                        {0, 1, 2, 3}, random_context));\n+\n+        // Combination of the previous two tests.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n+                            candidate.nLastBlockTime = number_of_nodes - candidate.id;\n+                            if (candidate.id <= 7) {\n+                                candidate.fRelayTxes = false;\n+                                candidate.fRelevantServices = true;\n+                            }\n+                        },\n+                        {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, random_context));\n+\n+        // Combination of all tests above.\n+        BOOST_CHECK(!IsEvicted(\n+                        number_of_nodes, [number_of_nodes](NodeEvictionCandidate& candidate) {\n+                            candidate.nKeyedNetGroup = number_of_nodes - candidate.id;           // 4 protected\n+                            candidate.m_min_ping_time = std::chrono::microseconds{candidate.id}; // 8 protected\n+                            candidate.nLastTXTime = number_of_nodes - candidate.id;              // 4 protected\n+                            candidate.nLastBlockTime = number_of_nodes - candidate.id;           // 4 protected\n+                        },\n+                        {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}, random_context));\n+\n+        // An eviction is expected given >= 29 random eviction candidates. The eviction logic protects at most\n+        // four peers by net group, eight by lowest ping time, four by last time of novel tx, up to eight non-tx-relay\n+        // peers by last novel block time, and four more peers by last novel block time.\n+        if (number_of_nodes >= 29) {\n+            BOOST_CHECK(SelectNodeToEvict(GetRandomNodeEvictionCandidates(number_of_nodes, random_context)));\n+        }\n+\n+        // No eviction is expected given <= 20 random eviction candidates. The eviction logic protects at least\n+        // four peers by net group, eight by lowest ping time, four by last time of novel tx and four peers by last\n+        // novel block time.\n+        if (number_of_nodes <= 20) {\n+            BOOST_CHECK(!SelectNodeToEvict(GetRandomNodeEvictionCandidates(number_of_nodes, random_context)));\n         }\n+\n+        // Cases left to test:\n+        // * \"If any remaining peers are preferred for eviction consider only them. [...]\"\n+        // * \"Identify the network group with the most connections and youngest member. [...]\"\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTE5ZjUwMWFiYWM0YWRiNDc2YTZmMmEzMGRmZGYxYTM1ODkyY2Nj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-17T09:11:02Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:15:41Z"
      },
      "message": "test: add ALL_NETWORKS to test utilities",
      "tree": {
        "sha": "28b36b569fc3b6dd2a77dc232a7aba184f5a2c48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28b36b569fc3b6dd2a77dc232a7aba184f5a2c48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS04ACgkQT1chs9Dj\nkh2rcw/5AZgugQd1CyYAouPDVqKZIN4EURfbE+PG0zLQFNK/aMRx3Ma+FUNI71EJ\nK7fg7spyAZ8EF7tujIcrxwuIWuz67zi9rCt2tB0rbCXKQfxGQ8lNUFavJO0the1x\neUYWOBAbJoEgu24XtqCmmyGF8rwnzwbSyJdTNw0XSqSNiH9+zRa0YOXFeYA39F6N\nBncShDMt1vx1DHp4AkjNpL2zPHH2Z2mAH8hmdkbR1cyss1+fWhX2pskWTAeI7FIw\nf2wSwmghqisCi1cjksHsofiRyyhAoJuOKODfAItaJHhLjLSnan+mpDXz1lGTbeX+\nD6F2IeWNEzJch7xuf5Y1ufxE0KL58u9uG5DbWeoKldCBdGKAge8hm3HN+juLK/zS\nqvUtYFO/iMi6Kx0USaimSgROEtRv4ucxk8RuCbiBdVw+DCxqf5CZDJHEIaZnetwk\nqjNEcyFAC3orGIQL+Z+73h0dp4dcsR5tsh8zZ7dQuoxkQI9RcnuE1Z0SnRvrPjz5\nzGbKBmoZL5uJ0WO1zRYh82DIKTcL8fjtLXY3oOgWzxikI3lxrMbusYeBzhg+z+vP\nGfx/AInzsfRfaoKcueid/BndDg7LSvPx2W4umj6KZzTr0G6iag6m/OkCLlGDOLV1\nTij7fJNpXbCFJz3iwTUIDk5yEvGPGdKCm7GryR3xDjYf65pdeVY=\n=1mO1\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINXQ18S1raPnevqRArhEqg/sFEwIm9203oYO9W6SHQAmCP/wEDFRooITHlJ0\nH1YGM7af8W0I8QRgxktP8AgOUgiH7afWcACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEKCqTDbEoFfippl8Lpgn4ZUI8QRgxktP\n8Ah+LGfJQldYmQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wEMQbvGh/o4MkrdInKKg1inQI8QRgxktP8AjyWBq/\nCHleXQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ+rTfPKU3jlEg/x81AcV5VwjxBGDGS0/wCC7daYTJEIK2AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 28b36b569fc3b6dd2a77dc232a7aba184f5a2c48\nparent 519e76bb64d03ecac175ec33c31e37d0e90f037f\nauthor Jon Atack <jon@atack.com> 1621242662 +0200\ncommitter Jon Atack <jon@atack.com> 1623608141 +0200\n\ntest: add ALL_NETWORKS to test utilities\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a19f501abac4adb476a6f2a30dfdf1a35892ccc/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "519e76bb64d03ecac175ec33c31e37d0e90f037f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/519e76bb64d03ecac175ec33c31e37d0e90f037f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/519e76bb64d03ecac175ec33c31e37d0e90f037f"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1b49a671bdc187c7ed91e9e66e83d9a5bc682c1e",
        "filename": "src/test/util/net.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a19f501abac4adb476a6f2a30dfdf1a35892ccc/src/test/util/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a19f501abac4adb476a6f2a30dfdf1a35892ccc/src/test/util/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/net.h?ref=4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
        "patch": "@@ -6,9 +6,11 @@\n #define BITCOIN_TEST_UTIL_NET_H\n \n #include <compat.h>\n+#include <netaddress.h>\n #include <net.h>\n #include <util/sock.h>\n \n+#include <array>\n #include <cassert>\n #include <cstring>\n #include <string>\n@@ -67,6 +69,16 @@ constexpr ConnectionType ALL_CONNECTION_TYPES[]{\n     ConnectionType::ADDR_FETCH,\n };\n \n+constexpr auto ALL_NETWORKS = std::array{\n+    Network::NET_UNROUTABLE,\n+    Network::NET_IPV4,\n+    Network::NET_IPV6,\n+    Network::NET_ONION,\n+    Network::NET_I2P,\n+    Network::NET_CJDNS,\n+    Network::NET_INTERNAL,\n+};\n+\n /**\n  * A mocked Sock alternative that returns a statically contained data upon read and succeeds\n  * and ignores all writes. The data to be returned is given to the constructor and when it is"
      }
    ]
  },
  {
    "sha": "ec590f1d91325404383d74098a5b42a2cd67dad9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzU5MGYxZDkxMzI1NDA0MzgzZDc0MDk4YTViNDJhMmNkNjdkYWQ5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-10T08:45:17Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:15:43Z"
      },
      "message": "p2p, refactor: improve constness in ProtectEvictionCandidatesByRatio()",
      "tree": {
        "sha": "addf6b125d47932892135aadcdbd124e6fe54688",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/addf6b125d47932892135aadcdbd124e6fe54688"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec590f1d91325404383d74098a5b42a2cd67dad9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS1AACgkQT1chs9Dj\nkh2xag//fjHoM4SaR6VusPmiMEQuFm58NQg86NzkWurBrnktpJVlPTMHtDjIVysw\ntUYxwfX85gMgpns2p+cVaWmkXkIj2pYSaKzYep+EYSn/w370bYfaCr1+IELHvSy+\nSaGkzZYVqVP5VvmiIoSiRwguH38YHk0kjuY3HFnBHiWn8gwu8rUdshG1iFVLdDSX\n2tc54CCf6PucHpdD+F/JDH0QoRak5ftbxVX1xlJgq8kI1DmrXH3IOgMXWwMhhgjZ\nDvzqeGuFH6JG/UINQ8zIf5Oweo1flAHnNN3SBQzS7EspOTOixAhFNAuaZdd27OUn\n8T0zooAv6uo8b1QB5fAamukmt4u8x96Sc5qJON7HyjJ5Y3TslyB0S/4rXtHlfErI\nfLoFryaH3DguiqNhY+xkGRXcqJvah92/1YCaVpORxdEVcmEDLGL39KEONnQ39qHy\nS9Eov1Qq8GnJ4pB7JQxZrfN5DLkDVzCNI/eSXhaM3+uKscTxUWHgPmAIsDOY0Qc4\nLjPxW5+rK0YRwIGeLObZNgWVXxxnbgFSNc4puqVZvXyv2N3wISKtETbaFvR5yYFo\nq/ds9R906WwaLQx6iYsIyBAP0XO3cq7yZXAgWIk6yeJhMOIy5obo9muUD0xDyU2O\nsp/DScqWEJwQdQtbcICLHzyr0tiFngVqj6Bi2snA52jPL2WIjUA=\n=ZKah\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPNq1RChmCx4pxcIc7f6J++NC1IsQL0yb5AxDhe9gDGaCP/wECFU0beV6JF8\nZN8sDXL3lwQI8QRgxktR8AicRuLjDt5hiwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEDw0pbaa7iP4hCOP+pa+vvcI8CDK1Pba\nf6lLGLkMRmgcJ9zGx3Da7NtLTxCh6frFydVM1QjwINj5dISkSQpnBwKdJBy9aOuR\nNONFquji4XOZXxrzTjgoCPEEYMZLUfAIDB0DMTc4fZ8Ag9/jDS75DI4pKGh0dHBz\nOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23/8BCfQtbec1lM41XV\nmfZHNfE/CPEEYMZLUfAIUwjxlgSwGvIAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0\nYy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfwEKSGspxWupfPuoO6rnf7PaEI\n8QRgxktR8Ag2OziPhbb10wCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree addf6b125d47932892135aadcdbd124e6fe54688\nparent 4a19f501abac4adb476a6f2a30dfdf1a35892ccc\nauthor Jon Atack <jon@atack.com> 1623314717 +0200\ncommitter Jon Atack <jon@atack.com> 1623608143 +0200\n\np2p, refactor: improve constness in ProtectEvictionCandidatesByRatio()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec590f1d91325404383d74098a5b42a2cd67dad9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec590f1d91325404383d74098a5b42a2cd67dad9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec590f1d91325404383d74098a5b42a2cd67dad9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a19f501abac4adb476a6f2a30dfdf1a35892ccc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a19f501abac4adb476a6f2a30dfdf1a35892ccc"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f1fd9b6c918980c78cf607cc3116890e149c6d68",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec590f1d91325404383d74098a5b42a2cd67dad9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec590f1d91325404383d74098a5b42a2cd67dad9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ec590f1d91325404383d74098a5b42a2cd67dad9",
        "patch": "@@ -903,7 +903,7 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvict\n     // longest uptime overall. This helps protect tor peers, which tend to be otherwise\n     // disadvantaged under our eviction criteria.\n     const size_t initial_size = vEvictionCandidates.size();\n-    size_t total_protect_size = initial_size / 2;\n+    const size_t total_protect_size{initial_size / 2};\n     const size_t onion_protect_size = total_protect_size / 2;\n \n     if (onion_protect_size) {\n@@ -926,8 +926,8 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvict\n \n     // Calculate how many we removed, and update our total number of peers that\n     // we want to protect based on uptime accordingly.\n-    total_protect_size -= initial_size - vEvictionCandidates.size();\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, total_protect_size);\n+    const size_t remaining_to_protect{total_protect_size - (initial_size - vEvictionCandidates.size())};\n+    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n [[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)"
      }
    ]
  },
  {
    "sha": "7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzIxZTZmMmZlMTY0MWViMzMxZjMwZTY4NjQ2ZjU5ODRkNGJjYmIz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-10T08:51:39Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:15:45Z"
      },
      "message": "p2p, refactor: rename vEvictionCandidates to eviction_candidates\n\nin ProtectEvictionCandidatesByRatio()\nper current style guide in doc/developer-notes.md",
      "tree": {
        "sha": "48b022302341b7dca747f7c5bc6ea5c420056f4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48b022302341b7dca747f7c5bc6ea5c420056f4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS1IACgkQT1chs9Dj\nkh01rg//U5b6Yh5fx6FsiV4uh439WbyZtXq7jFSmqU3WCltxL5j6La0n5QmBlz2E\nKWeUpGl4ky7/TnXd/foA5GzNWvSipAb8qVcPCVEOJLvgTnhIXlHcfuaakECVPc0r\nvLN5u8Rx8nIjPSxeLWCSusVIM72eMZgyrRHGG4yDUJgIeH//g15nnzhRuu07h6za\npRQ1g1vLyAo61LcoBSd+QT7A7s8aTPZfxUBsGXELU6wMkkiWV/zZgkHaJZVt+hxt\nRU8Kcm29wECGM2GY1fS6B3rNkQf5b4emPVObJA0KFEVHLgKgBhIGFT22vBjV9/Ke\n9jQZ5lu9EekOYtk5sXDLpPtIETxryi0ysgmGDTOER8/NUC15PV8boJlK/Ko/8JEZ\nUQUm5ZRaswrV5JDRu9w+2Bz2tdME5THkQaKQ5uFAUXUNGYSTwxfdI1ZKhYzy/W5v\naEM2GMARsbeGduOIqLEAEC3QCeEs1o7PBTFlnUfds6ti1knYEhASlAO/RDZii11i\nJ5M8/QmxOAGx08pdVOAG+cbOlava/mSrrm0v6mzmGPO3ARfpOMbrZ+i4oXVhPID3\n35cbwCa3v2ww/qAQhcOV/b+BtZj39k5RCIm02fdcsZO+eU0uoGbjY22qd2rglia7\nrqHRxuLX5RjIl22U7j5eFm0CiOKf0Y5MUIdB3CLjKnTCVmf07do=\n=bbcF\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILE+Y+cVbQb3TuCQRyLk5xrhEK5OxduYuo3sQkEcv3G4CP/wEA8NQly9yhCr\n0nJvA91lnqII8QRgxktT8AirIpAor6VlVQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEHwm1DE4V8pKrNcW153YNXgI8QRgxktT\n8Ai/8V2KkuSngQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQltf/tNHqksodYkWg5CXgFgjxBGDGS1PwCDX6\nfrQbPWDeAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDCM/6omOKei3jx3qbvpCBaCPEEYMZLU/AIE5IRLao0o7IAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 48b022302341b7dca747f7c5bc6ea5c420056f4e\nparent ec590f1d91325404383d74098a5b42a2cd67dad9\nauthor Jon Atack <jon@atack.com> 1623315099 +0200\ncommitter Jon Atack <jon@atack.com> 1623608145 +0200\n\np2p, refactor: rename vEvictionCandidates to eviction_candidates\n\nin ProtectEvictionCandidatesByRatio()\nper current style guide in doc/developer-notes.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7321e6f2fe1641eb331f30e68646f5984d4bcbb3/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec590f1d91325404383d74098a5b42a2cd67dad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec590f1d91325404383d74098a5b42a2cd67dad9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec590f1d91325404383d74098a5b42a2cd67dad9"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "16c66d24709e07edbb96bfa3cd7f43949ae9d988",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7321e6f2fe1641eb331f30e68646f5984d4bcbb3/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7321e6f2fe1641eb331f30e68646f5984d4bcbb3/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
        "patch": "@@ -894,21 +894,21 @@ static void EraseLastKElements(\n     elements.erase(std::remove_if(elements.end() - eraseSize, elements.end(), predicate), elements.end());\n }\n \n-void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvictionCandidates)\n+void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& eviction_candidates)\n {\n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n     // To favorise the diversity of our peer connections, reserve up to (half + 2) of\n     // these protected spots for onion and localhost peers, if any, even if they're not\n     // longest uptime overall. This helps protect tor peers, which tend to be otherwise\n     // disadvantaged under our eviction criteria.\n-    const size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = eviction_candidates.size();\n     const size_t total_protect_size{initial_size / 2};\n     const size_t onion_protect_size = total_protect_size / 2;\n \n     if (onion_protect_size) {\n         // Pick out up to 1/4 peers connected via our onion service, sorted by longest uptime.\n-        EraseLastKElements(vEvictionCandidates, CompareOnionTimeConnected, onion_protect_size,\n+        EraseLastKElements(eviction_candidates, CompareOnionTimeConnected, onion_protect_size,\n                            [](const NodeEvictionCandidate& n) { return n.m_is_onion; });\n     }\n \n@@ -918,16 +918,16 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvict\n         // to localhost peers, sorted by longest uptime, as manually configured\n         // hidden services not using `-bind=addr[:port]=onion` will not be detected\n         // as inbound onion connections.\n-        const size_t remaining_tor_slots{onion_protect_size - (initial_size - vEvictionCandidates.size())};\n+        const size_t remaining_tor_slots{onion_protect_size - (initial_size - eviction_candidates.size())};\n         const size_t localhost_protect_size{std::max(remaining_tor_slots, localhost_min_protect_size)};\n-        EraseLastKElements(vEvictionCandidates, CompareLocalHostTimeConnected, localhost_protect_size,\n+        EraseLastKElements(eviction_candidates, CompareLocalHostTimeConnected, localhost_protect_size,\n                            [](const NodeEvictionCandidate& n) { return n.m_is_local; });\n     }\n \n     // Calculate how many we removed, and update our total number of peers that\n     // we want to protect based on uptime accordingly.\n-    const size_t remaining_to_protect{total_protect_size - (initial_size - vEvictionCandidates.size())};\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    const size_t remaining_to_protect{total_protect_size - (initial_size - eviction_candidates.size())};\n+    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n [[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)"
      }
    ]
  },
  {
    "sha": "4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWU3YWVjNDdlYmY2YjU5YjRkOTMwZTZlNDAyNWU5MTM1MmMwNWI0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-10T09:44:55Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:15:47Z"
      },
      "message": "p2p: add m_network to NodeEvictionCandidate struct",
      "tree": {
        "sha": "85b8dbf02595930be27cf35ac4a7e778c93e190c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85b8dbf02595930be27cf35ac4a7e778c93e190c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS1QACgkQT1chs9Dj\nkh1LnRAAsBV58bDo1h7+/7LBuynSrTpeyCDyATAtdScIKQAAD/NuZSVlq/A3ptXV\nOg+CFXWnuxqwURZTTyK8GskAJNgulc2gAUMhj4+fbotcE9MMm04Rz69qAlbzWbNz\nFUlRCiFO9L9sEuS4pBRiO+3p/I32mSu9Vgxb1fjvRzjBxpgV6eGoBpOvXJtx2fh5\nsA83f3feY6HYIJWdS5Bh0nHki66GbkFlT981qP34Mord9W/d+Ex9jhjavWDaBd/X\nZEmWC5R5A4P8R6JdgKU6KcMAMuFZ2aUK24Y+nSgB4zJeHpBjxpteqYEcE4Vi7rlL\nh/xrv5Xhnd6UvnSLMeEzbupv30a2SOf8by8fUSYqFyG+4IeyiJ7eCsK2wx3AooYm\nX1Vp9/BYcOG9FcpOCQU6vMaWT7YeJq752jFApuDptVmE/kJYDeWjPD5DxKVzEdr4\n7G0vKtwJaDZjLNBVNDoWBZdkbsGIbJwvdu+8YwPz1xwoG9KF7fj6AbN3QybvYvk9\nZPwBkahhMQbIZRK3iIgdBMhNqlJlju867SAtMxsj8DFkUaTtf3tLyF1WC+3RAtlp\n9K10lTW3HaimuzGsAd8z84Jxz3oNotPtro2xlJNzkMGjg7u1VH81waScV4pXqYqV\ny9Ind1HDWpoY/6717mTD9HMAQnDaNGZ452dFj6SHGopfq3hKhF0=\n=6EME\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPyq4k1L9bmrI4aGr0w+fgVBytv2lDfEenNtMTnz5TZ1CP/wEA3JCX7PqfNI\nKB52UsBRWx8I8SAToGWLVqFeqZRErUlFh+Q5kH7Mfws6h20J2D5snHcOUAjwICVB\n38pPJgfHy6Vko8WUI6kWkewHeJWMoWiEe9ZWPXwZCPAgBGaMuKfYq2+YBLnaKLgB\nm+ztgfdT8uDaAlTx5QLvfBUI8QRgxktV8AiLR7BvIAGrAgCD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEBejsFRyNm74\nkxjw4ndx8DAI8QRgxktV8Ag7yrdqQJrpKACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEGgGnPr58tow3QtuZhEMzIwI8QRgxktV\n8Ah4O35Hfbxa6gCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQtsZ88tvSZwdPwFw9xu0xmAjxIGeZYv33r0hnI9yo\nC3gRqO6/RICEL/4Z+i4dhbqajoN+CPEgD3MpbxtreQNH6yopBdGlTD8mDpAi5+Fj\nrwSze3E1CNsI8CDK02ltnsSGB7BS2RI+dW1fy4GtNbry1Bvn1i/kVy5KIwjxBGDG\nS1XwCP7imoAHiySbAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 85b8dbf02595930be27cf35ac4a7e778c93e190c\nparent 7321e6f2fe1641eb331f30e68646f5984d4bcbb3\nauthor Jon Atack <jon@atack.com> 1623318295 +0200\ncommitter Jon Atack <jon@atack.com> 1623608147 +0200\n\np2p: add m_network to NodeEvictionCandidate struct\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7321e6f2fe1641eb331f30e68646f5984d4bcbb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7321e6f2fe1641eb331f30e68646f5984d4bcbb3"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "71e7754ad4e0e3eadb184a3f4b93cb79120c9e6c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
        "patch": "@@ -1023,7 +1023,7 @@ bool CConnman::AttemptToEvictConnection()\n                                                HasAllDesirableServiceFlags(node->nServices),\n                                                peer_relay_txes, peer_filter_not_null, node->nKeyedNetGroup,\n                                                node->m_prefer_evict, node->addr.IsLocal(),\n-                                               node->m_inbound_onion};\n+                                               node->m_inbound_onion, node->ConnectedThroughNetwork()};\n             vEvictionCandidates.push_back(candidate);\n         }\n     }"
      },
      {
        "sha": "a0708c338b00593fa3270d2dd2ee4d186a9b4daf",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
        "patch": "@@ -1210,6 +1210,7 @@ struct NodeEvictionCandidate\n     bool prefer_evict;\n     bool m_is_local;\n     bool m_is_onion;\n+    Network m_network;\n };\n \n /**"
      },
      {
        "sha": "9f02b5271b6ac7d6f1334dc9cc6a3eb0e8ddf242",
        "filename": "src/test/fuzz/node_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/test/fuzz/node_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/test/fuzz/node_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/node_eviction.cpp?ref=4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
        "patch": "@@ -32,6 +32,7 @@ FUZZ_TARGET(node_eviction)\n             /* prefer_evict */ fuzzed_data_provider.ConsumeBool(),\n             /* m_is_local */ fuzzed_data_provider.ConsumeBool(),\n             /* m_is_onion */ fuzzed_data_provider.ConsumeBool(),\n+            /* m_network */ fuzzed_data_provider.PickValueInArray(ALL_NETWORKS),\n         });\n     }\n     // Make a copy since eviction_candidates may be in some valid but otherwise"
      },
      {
        "sha": "7e74b6f6a32ec50785e1ed6fa822313c6169cd6a",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
        "patch": "@@ -2,7 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <netaddress.h>\n #include <net.h>\n+#include <test/util/net.h>\n #include <test/util/setup_common.h>\n \n #include <boost/test/unit_test.hpp>\n@@ -32,6 +34,7 @@ std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_c\n             /* prefer_evict */ random_context.randbool(),\n             /* m_is_local */ random_context.randbool(),\n             /* m_is_onion */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n         });\n     }\n     return candidates;"
      }
    ]
  },
  {
    "sha": "38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGE4MWE4ZTIwYjBlNWFkOWZlZjBlYWU4YWJkOTE0NjE5ZjA1YjI1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-17T09:09:08Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:15:49Z"
      },
      "message": "p2p: add CompareNodeNetworkTime() comparator struct\n\nto compare and sort peer eviction candidates by the\npassed-in is_local (localhost status) and network\narguments, and by longest uptime.",
      "tree": {
        "sha": "95e3fa63555f284ba5c035561019df4c48c44e9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95e3fa63555f284ba5c035561019df4c48c44e9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS1YACgkQT1chs9Dj\nkh14pRAArWcWJvOn/iToKfwk355JMGGVpHObe0+shBmjvO1TQDBpDE2NkLs22Wdi\neI2qXOuRdKog7uQuKR6Me7k1l9swIRo1nw0RJNtpuEtdQek1cIsFV+0AJ14+bzn5\nJzseZJF9bEYXQjIXt31ffe7TxoULmTM1lKF+zdIL3MQqUb0ABJsOBuGRr8q97/Vi\nQgcVG7ImPToC7BAeTl7xLTN4hmH2GECYXr91LC+X53K7L3PjgQwuUSn8RXhlmOcm\n/Fxj64N2jfSfheW0OQk7G1qP4PykpQwQFuWSWFKk307++zYO0E/Rb0UUDrhpqYBc\n2QElXjdGW0QKGEK3+fZbiVi4FY4tmPpfHNmEeJ2SKiFTIjchRU0doUmCx0na7wCw\n48591jf3NbNYgS/sSUnG1DsxtWItD3ReMQU7zDfmPnh7fjcP9VDk4OzTWKT6oEBt\nLIdTJJ35GjKjVsPR15jnhKCfnMazf6/VvKpcPfEIJGf1efkG9/JRJgs0dfnCAdkh\nKJuHKsi0pcCwXknJu5IFKDuYJ9+l30N/ry44XJrT9ljNrprl5ZUyuguB+Y++5SCV\n0yZV/GAGoL7tmtI6oo53UfcSnSYHHyZZU/CY5s8BpcNqrlO0RljFnvuFny69AEQ6\nScwUSjCdFdojmf04rR+aJDU05UGCLpgmMr/v9OgqD3Im9oQrmwE=\n=aeHn\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJ+Ely0k0ECov6ArgDxw0TtDDGhu718Vk5PXcpLH2VLwCP/wEALQJ3j4VTQa\ngXa3eMQc5zgI8QRgxktX8Ag75WR6JUEVxgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wECeyncXjQC7XKL1kpbxR\niwwI8SAEcYEIEUxaqERWY8ohaypzQ4msMNg6fEGg0mH1et/8bQjxIO9SOj9ikYrE\n1X34cSxfPPOQP30O2dxNDEvnRiNl6vWnCPEEYMZLV/AI6vuCOAIf7W4Ag9/jDS75\nDI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEJsAIl0kPSI+ufqyoK9ptkAI8QRgxktX8AjN3kKAXTEhQACD3+MNLvkMjiMi\naHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQ3b+8nszFIcrwiSAf\nDPJ8agjxBGDGS1fwCEsCBOwUt0x5AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 95e3fa63555f284ba5c035561019df4c48c44e9e\nparent 4ee7aec47ebf6b59b4d930e6e4025e91352c05b4\nauthor Jon Atack <jon@atack.com> 1621242548 +0200\ncommitter Jon Atack <jon@atack.com> 1623608149 +0200\n\np2p: add CompareNodeNetworkTime() comparator struct\n\nto compare and sort peer eviction candidates by the\npassed-in is_local (localhost status) and network\narguments, and by longest uptime.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38a81a8e20b0e5ad9fef0eae8abd914619f05b25/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee7aec47ebf6b59b4d930e6e4025e91352c05b4"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9318d2535902b2674f0f275ecfd7b18e517fbabf",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38a81a8e20b0e5ad9fef0eae8abd914619f05b25/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38a81a8e20b0e5ad9fef0eae8abd914619f05b25/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
        "patch": "@@ -883,6 +883,26 @@ static bool CompareNodeBlockRelayOnlyTime(const NodeEvictionCandidate &a, const\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n+/**\n+ * Sort eviction candidates by network/localhost and connection uptime.\n+ * Candidates near the beginning are more likely to be evicted, and those\n+ * near the end are more likely to be protected, e.g. less likely to be evicted.\n+ * - First, nodes that are not `is_local` and that do not belong to `network`,\n+ *   sorted by increasing uptime (from most recently connected to connected longer).\n+ * - Then, nodes that are `is_local` or belong to `network`, sorted by increasing uptime.\n+ */\n+struct CompareNodeNetworkTime {\n+    const bool m_is_local;\n+    const Network m_network;\n+    CompareNodeNetworkTime(bool is_local, Network network) : m_is_local(is_local), m_network(network) {}\n+    bool operator()(const NodeEvictionCandidate& a, const NodeEvictionCandidate& b) const\n+    {\n+        if (m_is_local && a.m_is_local != b.m_is_local) return b.m_is_local;\n+        if ((a.m_network == m_network) != (b.m_network == m_network)) return b.m_network == m_network;\n+        return a.nTimeConnected > b.nTimeConnected;\n+    };\n+};\n+\n //! Sort an array by the specified comparator, then erase the last K elements where predicate is true.\n template <typename T, typename Comparator>\n static void EraseLastKElements("
      }
    ]
  },
  {
    "sha": "3f8105c4d251e0e81bdd31f0999004e36f8990b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjgxMDVjNGQyNTFlMGU4MWJkZDMxZjA5OTkwMDRlMzZmODk5MGIy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-02T21:15:01Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-13T18:15:51Z"
      },
      "message": "test: remove combined onion/localhost eviction protection tests\n\nas we are about the change the behavior sufficiently that when we\nhave multiple disadvantaged networks and a small number of peers\nunder test, the number of protected peers per network can be different.",
      "tree": {
        "sha": "ea3396646bffe279aa5b1544bf1dc2781a7af9c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea3396646bffe279aa5b1544bf1dc2781a7af9c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f8105c4d251e0e81bdd31f0999004e36f8990b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDGS1gACgkQT1chs9Dj\nkh1XKA//WZImweiibj2NzsbxhdCVQNTNLDeymrNHfMTbrwxvr8QVntOPSXQ8C/eG\nfSUkXIc5RF8pPinPvvUhSMAbfVEES47ccTdjovxoW5npLs0TCnQgx/efNaK1yTIg\njHghxaXCA3RY60tTk2ItGQTBLzg/QKwOAyLOOk1pteLIN18GcHY8xJfLEoY2sbOj\nxvsqby1s03zQavT5HV818GeEmysVDibEQyr7T26rCsp/lm6BfkUxfBnczIHxxF+m\nSq77qCP4LY7EwPRPtxSgX5ASQMNSiacu8PP14/yclyQCJRg7XI4N++KUQM8sq60G\n9xAV3w7GFC0haSaGTHq/TS6uSreKWszZGByUp1zXdCbS7yVsAerFT1mLGjQFEznA\n4G91zz50bkbCJcuiSpMd8CyKVuGpVUQip0kmzR57x7gW8JBnpxaPfBd6xgN8OM+y\n26QA+wU4FJyLyC6Hx8U8dL5wow3SOriiUTjVYhnRq7GMstOxPGenqI0mBtkFX/Id\noGwZIPJKZWCxQ1eW4XQab/LLMdh8Nso11/tmcLVfOVzldIUaCwub2SC8LX4G6ztk\nrCrnrG6+kei9ID/yAofZkw60EwS3QmQDhE1hzeFc6HR+Dqx1UBtf5eGD4uMgE2Ms\nyz2L21DDc5SwPdN0ilRkC/8KbL5YaKn+sXY+fyySPYkQXETD+bc=\n=QFI4\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIK3BU3dpwL4kStW/roFB8OaEASf6TJapuiVdg2Y/KQQbCP/wEEV4jsBA6LBd\n5V9rlp6uvLcI8QRgxktZ8Ai88SdX9HkBXgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEEZ0C+32cE0GbORi0+RA\narUI8QRgxktZ8Ajd+bT1oN/RmQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEHXMnLw4oVEPvBEbfZnAr/wI8QRgxktZ8AgXyu25\nvSbW3gCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BCBAsOoaMKIx2ydfLehmzY9CPEEYMZLWfAIlziZT9EDlBMA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ea3396646bffe279aa5b1544bf1dc2781a7af9c7\nparent 38a81a8e20b0e5ad9fef0eae8abd914619f05b25\nauthor Jon Atack <jon@atack.com> 1622668501 +0200\ncommitter Jon Atack <jon@atack.com> 1623608151 +0200\n\ntest: remove combined onion/localhost eviction protection tests\n\nas we are about the change the behavior sufficiently that when we\nhave multiple disadvantaged networks and a small number of peers\nunder test, the number of protected peers per network can be different.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f8105c4d251e0e81bdd31f0999004e36f8990b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f8105c4d251e0e81bdd31f0999004e36f8990b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f8105c4d251e0e81bdd31f0999004e36f8990b2/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38a81a8e20b0e5ad9fef0eae8abd914619f05b25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38a81a8e20b0e5ad9fef0eae8abd914619f05b25"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 0,
      "deletions": 72
    },
    "files": [
      {
        "sha": "9e5b4a47d54ddeb942dbaa46f09a2a70ecf2b5ef",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f8105c4d251e0e81bdd31f0999004e36f8990b2/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f8105c4d251e0e81bdd31f0999004e36f8990b2/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=3f8105c4d251e0e81bdd31f0999004e36f8990b2",
        "patch": "@@ -154,78 +154,6 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         /* protected_peer_ids */ {0, 1, 2, 7, 8, 9},\n         /* unprotected_peer_ids */ {3, 4, 5, 6, 10, 11},\n         random_context));\n-\n-    // Combined test: expect 1/4 onion and 2 localhost peers to be protected\n-    // from eviction, sorted by longest uptime.\n-    BOOST_CHECK(IsProtected(\n-        num_peers, [](NodeEvictionCandidate& c) {\n-            c.nTimeConnected = c.id;\n-            c.m_is_onion = (c.id == 0 || c.id == 5 || c.id == 10);\n-            c.m_is_local = (c.id == 1 || c.id == 9 || c.id == 11);\n-        },\n-        /* protected_peer_ids */ {0, 1, 2, 5, 9, 10},\n-        /* unprotected_peer_ids */ {3, 4, 6, 7, 8, 11},\n-        random_context));\n-\n-    // Combined test: expect having only 1 onion to allow allocating the\n-    // remaining 2 of the 1/4 to localhost peers, sorted by longest uptime.\n-    BOOST_CHECK(IsProtected(\n-        num_peers + 4, [](NodeEvictionCandidate& c) {\n-            c.nTimeConnected = c.id;\n-            c.m_is_onion = (c.id == 15);\n-            c.m_is_local = (c.id > 6 && c.id < 11);\n-        },\n-        /* protected_peer_ids */ {0, 1, 2, 3, 7, 8, 9, 15},\n-        /* unprotected_peer_ids */ {4, 5, 6, 10, 11, 12, 13, 14},\n-        random_context));\n-\n-    // Combined test: expect 2 onions (< 1/4) to allow allocating the minimum 2\n-    // localhost peers, sorted by longest uptime.\n-    BOOST_CHECK(IsProtected(\n-        num_peers, [](NodeEvictionCandidate& c) {\n-            c.nTimeConnected = c.id;\n-            c.m_is_onion = (c.id == 7 || c.id == 9);\n-            c.m_is_local = (c.id == 6 || c.id == 11);\n-        },\n-        /* protected_peer_ids */ {0, 1, 6, 7, 9, 11},\n-        /* unprotected_peer_ids */ {2, 3, 4, 5, 8, 10},\n-        random_context));\n-\n-    // Combined test: when > 1/4, expect max 1/4 onion and 2 localhost peers\n-    // to be protected from eviction, sorted by longest uptime.\n-    BOOST_CHECK(IsProtected(\n-        num_peers, [](NodeEvictionCandidate& c) {\n-            c.nTimeConnected = c.id;\n-            c.m_is_onion = (c.id > 3 && c.id < 8);\n-            c.m_is_local = (c.id > 7);\n-        },\n-        /* protected_peer_ids */ {0, 4, 5, 6, 8, 9},\n-        /* unprotected_peer_ids */ {1, 2, 3, 7, 10, 11},\n-        random_context));\n-\n-    // Combined test: idem > 1/4 with only 8 peers: expect 2 onion and 2\n-    // localhost peers (1/4 + 2) to be protected, sorted by longest uptime.\n-    BOOST_CHECK(IsProtected(\n-        8, [](NodeEvictionCandidate& c) {\n-            c.nTimeConnected = c.id;\n-            c.m_is_onion = (c.id > 1 && c.id < 5);\n-            c.m_is_local = (c.id > 4);\n-        },\n-        /* protected_peer_ids */ {2, 3, 5, 6},\n-        /* unprotected_peer_ids */ {0, 1, 4, 7},\n-        random_context));\n-\n-    // Combined test: idem > 1/4 with only 6 peers: expect 1 onion peer and no\n-    // localhost peers (1/4 + 0) to be protected, sorted by longest uptime.\n-    BOOST_CHECK(IsProtected(\n-        6, [](NodeEvictionCandidate& c) {\n-            c.nTimeConnected = c.id;\n-            c.m_is_onion = (c.id == 4 || c.id == 5);\n-            c.m_is_local = (c.id == 3);\n-        },\n-        /* protected_peer_ids */ {0, 1, 4},\n-        /* unprotected_peer_ids */ {2, 3, 5},\n-        random_context));\n }\n \n // Returns true if any of the node ids in node_ids are selected for eviction."
      }
    ]
  },
  {
    "sha": "1e15acf478ae071234350c9b38dc823dfe2e3419",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTE1YWNmNDc4YWUwNzEyMzQzNTBjOWIzOGRjODIzZGZlMmUzNDE5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-20T11:22:20Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T11:57:49Z"
      },
      "message": "p2p: make ProtectEvictionCandidatesByRatio() fully ratio-based\n\nwith a more abstract framework to allow easily extending inbound\neviction protection to peers connected through new higher-latency\nnetworks that are disadvantaged by our inbound eviction criteria,\nsuch as I2P and perhaps other BIP155 networks in the future like\nCJDNS.  This is a change in behavior.\n\nThe algorithm is a basically a multi-pass knapsack:\n\n- Count the number of eviction candidates in each of the disadvantaged\n  privacy networks.\n\n- Sort the networks from lower to higher candidate counts, so that\n  a network with fewer candidates will have the first opportunity\n  for any unused slots remaining from the previous iteration.  In\n  the case of a tie in candidate counts, priority is given by array\n  member order from first to last, guesstimated to favor more unusual\n  networks.\n\n- Iterate through the networks in this order.  On each iteration,\n  allocate each network an equal number of protected slots targeting\n  a total number of candidates to protect, provided any slots remain\n  in the knapsack.\n\n- Protect the candidates in that network having the longest uptime,\n  if any in that network are present.\n\n- Continue iterating as long as we have non-allocated slots\n  remaining and candidates available to protect.\n\nLocalhost peers are treated as a network like Tor or I2P by aliasing\nthem to an unused Network enumerator: Network::NET_MAX.\n\nThe goal is to favorise diversity of our inbound connections.\n\nCredit to Vasil Dimov for improving the algorithm from single-pass\nto multi-pass to better allocate unused protection slots.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "tree": {
        "sha": "4eb1366de749464a4cb614e4c72099d184331270",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4eb1366de749464a4cb614e4c72099d184331270"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e15acf478ae071234350c9b38dc823dfe2e3419",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHREUACgkQT1chs9Dj\nkh0w7hAAp6uOoqHWgO3audmM1HCN10OSCbbkWjwW0W61BFCmAknxZ4lRZz6LVCFw\nfnjegESlK2Zy3j0IHkJ4WN+AwBFtj2VpCZ7jR7nIBvpyPEgZzvc6jxXu4YV5p/K/\nNxiJFNTzv+PuLi3zOkRuXUw7W17+4X7kU/L1HKTm5cul/oRXMmN7ew2R6EiVg3Zs\nXHedlfqZVeeiojDqkJZsEJQLnMcYoKm+O8107GSKoPEOhy4SV3g6n5g86OEVQKKw\nv1mfBDbxtCUCdhf6MV1TzahfD7z74itEtyxlXAdUScnqLZp81iZFk5LzICQZovU7\niAd8g/13leqvcu6bf1cE5l9AqLGgecvjefGJxHbTvnvOfiHDlv9mi6MQiY0GQErH\nOpXqteH+3Mh4ClSz5ci/RXkQGiJhv9pIRT1YH9XBHguEQxE3AgmmaJg14jEaSrgK\nyAgH43hwf/2bZjWYcbWp1yVgm54Gcs9ZEj5qsLx69IdS+4cLjaemmgp708JGqnXJ\nMRfVnpdra3B9TVn+GWwIgCwbWJaicB5kaYY7Y99r5xJ6ksVlum8qkFVMnNmr0g48\nnVsun+r58xu/FiJasfElnnz5vbrz/t7Jdgq7kpKQ/zZeZEhU0tSg7b3l+cEIN+sj\nSKzR8IGGRj7Ydx9N+AZlhYMePQPyzrsLCRYWA7n56qTAeih6nNk=\n=sLJd\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJUKnd+9tZWD6Ez18UaeVOUAmL2LbIi7fclx0jXAmhqBCP/wEIHSpWsZzzBD\np1GUWlAXwJ8I8SCheFLK6QxmXrxGGuxb7PzpaRds/ZBGTe6EQsUKT7jS9gjxBGDH\nREfwCKBAdmCQ2fQKAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQhuqbj+/AkHxPJI68lxuHyAjxIOgC52zGQk6G8vWM\ncKDvOfbMgtdzMl3W4QoGEUpSR2BICPEEYMdERvAIT2YDBisX97QAg9/jDS75DI4j\nImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23/8BCKRfqzi6EnwG3k\nWBSWVaEQCPEgzg2Ln0qtVUsJYrKULHxgIJIrmqaXrXODYTf7I4uE4UMI8QRgx0RG\n8AiyGrN85xT7mACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDaMr6fEWqrRJlovbcOGrYVCPEgOL7LnAJdgSKf\n0VTb2GnhySBikvFwywsmlaDCX7uVExsI8QRgx0RG8Ag0H8Oehm757wCD3+MNLvkM\njiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4eb1366de749464a4cb614e4c72099d184331270\nparent 3f8105c4d251e0e81bdd31f0999004e36f8990b2\nauthor Jon Atack <jon@atack.com> 1618917740 +0200\ncommitter Jon Atack <jon@atack.com> 1623671869 +0200\n\np2p: make ProtectEvictionCandidatesByRatio() fully ratio-based\n\nwith a more abstract framework to allow easily extending inbound\neviction protection to peers connected through new higher-latency\nnetworks that are disadvantaged by our inbound eviction criteria,\nsuch as I2P and perhaps other BIP155 networks in the future like\nCJDNS.  This is a change in behavior.\n\nThe algorithm is a basically a multi-pass knapsack:\n\n- Count the number of eviction candidates in each of the disadvantaged\n  privacy networks.\n\n- Sort the networks from lower to higher candidate counts, so that\n  a network with fewer candidates will have the first opportunity\n  for any unused slots remaining from the previous iteration.  In\n  the case of a tie in candidate counts, priority is given by array\n  member order from first to last, guesstimated to favor more unusual\n  networks.\n\n- Iterate through the networks in this order.  On each iteration,\n  allocate each network an equal number of protected slots targeting\n  a total number of candidates to protect, provided any slots remain\n  in the knapsack.\n\n- Protect the candidates in that network having the longest uptime,\n  if any in that network are present.\n\n- Continue iterating as long as we have non-allocated slots\n  remaining and candidates available to protect.\n\nLocalhost peers are treated as a network like Tor or I2P by aliasing\nthem to an unused Network enumerator: Network::NET_MAX.\n\nThe goal is to favorise diversity of our inbound connections.\n\nCredit to Vasil Dimov for improving the algorithm from single-pass\nto multi-pass to better allocate unused protection slots.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e15acf478ae071234350c9b38dc823dfe2e3419",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e15acf478ae071234350c9b38dc823dfe2e3419",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e15acf478ae071234350c9b38dc823dfe2e3419/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f8105c4d251e0e81bdd31f0999004e36f8990b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f8105c4d251e0e81bdd31f0999004e36f8990b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f8105c4d251e0e81bdd31f0999004e36f8990b2"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 63,
      "deletions": 26
    },
    "files": [
      {
        "sha": "b69a59fc1de798c8e714c82a0e3067962db98b5a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 21,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e15acf478ae071234350c9b38dc823dfe2e3419/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e15acf478ae071234350c9b38dc823dfe2e3419/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1e15acf478ae071234350c9b38dc823dfe2e3419",
        "patch": "@@ -42,6 +42,7 @@\n #endif\n \n #include <algorithm>\n+#include <array>\n #include <cstdint>\n #include <functional>\n #include <optional>\n@@ -918,35 +919,66 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n {\n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // To favorise the diversity of our peer connections, reserve up to (half + 2) of\n-    // these protected spots for onion and localhost peers, if any, even if they're not\n-    // longest uptime overall. This helps protect tor peers, which tend to be otherwise\n+    // To favorise the diversity of our peer connections, reserve up to half of these protected\n+    // spots for Tor/onion and localhost peers, even if they're not longest uptime overall.\n+    // This helps protect these higher-latency peers that tend to be otherwise\n     // disadvantaged under our eviction criteria.\n     const size_t initial_size = eviction_candidates.size();\n     const size_t total_protect_size{initial_size / 2};\n-    const size_t onion_protect_size = total_protect_size / 2;\n \n-    if (onion_protect_size) {\n-        // Pick out up to 1/4 peers connected via our onion service, sorted by longest uptime.\n-        EraseLastKElements(eviction_candidates, CompareOnionTimeConnected, onion_protect_size,\n-                           [](const NodeEvictionCandidate& n) { return n.m_is_onion; });\n-    }\n-\n-    const size_t localhost_min_protect_size{2};\n-    if (onion_protect_size >= localhost_min_protect_size) {\n-        // Allocate any remaining slots of the 1/4, or minimum 2 additional slots,\n-        // to localhost peers, sorted by longest uptime, as manually configured\n-        // hidden services not using `-bind=addr[:port]=onion` will not be detected\n-        // as inbound onion connections.\n-        const size_t remaining_tor_slots{onion_protect_size - (initial_size - eviction_candidates.size())};\n-        const size_t localhost_protect_size{std::max(remaining_tor_slots, localhost_min_protect_size)};\n-        EraseLastKElements(eviction_candidates, CompareLocalHostTimeConnected, localhost_protect_size,\n-                           [](const NodeEvictionCandidate& n) { return n.m_is_local; });\n+    // Disadvantaged networks to protect: localhost and Tor/onion. In case of equal counts, earlier\n+    // array members have first opportunity to recover unused slots from the previous iteration.\n+    struct Net { bool is_local; Network id; size_t count; };\n+    std::array<Net, 3> networks{{{/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n+\n+    // Count and store the number of eviction candidates per network.\n+    for (Net& n : networks) {\n+        n.count = std::count_if(eviction_candidates.cbegin(), eviction_candidates.cend(),\n+                                [&n](const NodeEvictionCandidate& c) {\n+                                    return n.is_local ? c.m_is_local : c.m_network == n.id;\n+                                });\n+    }\n+    // Sort `networks` by ascending candidate count, to give networks having fewer candidates\n+    // the first opportunity to recover unused protected slots from the previous iteration.\n+    std::stable_sort(networks.begin(), networks.end(), [](Net a, Net b) { return a.count < b.count; });\n+\n+    // Protect up to 25% of the eviction candidates by disadvantaged network.\n+    const size_t max_protect_by_network{total_protect_size / 2};\n+    size_t num_protected{0};\n+\n+    while (num_protected < max_protect_by_network) {\n+        const size_t disadvantaged_to_protect{max_protect_by_network - num_protected};\n+        const size_t protect_per_network{\n+            std::max(disadvantaged_to_protect / networks.size(), static_cast<size_t>(1))};\n+\n+        // Early exit flag if there are no remaining candidates by disadvantaged network.\n+        bool protected_at_least_one{false};\n+\n+        for (const Net& n : networks) {\n+            if (n.count == 0) continue;\n+            const size_t before = eviction_candidates.size();\n+            EraseLastKElements(eviction_candidates, CompareNodeNetworkTime(n.is_local, n.id),\n+                               protect_per_network, [&n](const NodeEvictionCandidate& c) {\n+                                   return n.is_local ? c.m_is_local : c.m_network == n.id;\n+                               });\n+            const size_t after = eviction_candidates.size();\n+            if (before > after) {\n+                protected_at_least_one = true;\n+                num_protected += before - after;\n+                if (num_protected >= max_protect_by_network) {\n+                    break;\n+                }\n+            }\n+        }\n+        if (!protected_at_least_one) {\n+            break;\n+        }\n     }\n \n     // Calculate how many we removed, and update our total number of peers that\n     // we want to protect based on uptime accordingly.\n-    const size_t remaining_to_protect{total_protect_size - (initial_size - eviction_candidates.size())};\n+    assert(num_protected == initial_size - eviction_candidates.size());\n+    const size_t remaining_to_protect{total_protect_size - num_protected};\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n "
      },
      {
        "sha": "7dc2f2562a87c130e8201cc0e0322eb7baf46043",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e15acf478ae071234350c9b38dc823dfe2e3419/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e15acf478ae071234350c9b38dc823dfe2e3419/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=1e15acf478ae071234350c9b38dc823dfe2e3419",
        "patch": "@@ -93,6 +93,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.nTimeConnected = c.id;\n             c.m_is_onion = c.m_is_local = false;\n+            c.m_network = NET_IPV4;\n         },\n         /* protected_peer_ids */ {0, 1, 2, 3, 4, 5},\n         /* unprotected_peer_ids */ {6, 7, 8, 9, 10, 11},\n@@ -103,6 +104,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         num_peers, [num_peers](NodeEvictionCandidate& c) {\n             c.nTimeConnected = num_peers - c.id;\n             c.m_is_onion = c.m_is_local = false;\n+            c.m_network = NET_IPV6;\n         },\n         /* protected_peer_ids */ {6, 7, 8, 9, 10, 11},\n         /* unprotected_peer_ids */ {0, 1, 2, 3, 4, 5},\n@@ -111,22 +113,23 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n     // Test protection of onion and localhost peers...\n \n     // Expect 1/4 onion peers to be protected from eviction,\n-    // independently of other characteristics.\n+    // if no localhost peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n-            c.m_is_onion = (c.id == 3 || c.id == 8 || c.id == 9);\n+            c.m_is_local = false;\n+            c.m_network = (c.id == 3 || c.id == 8 || c.id == 9) ? NET_ONION : NET_IPV4;\n         },\n         /* protected_peer_ids */ {3, 8, 9},\n         /* unprotected_peer_ids */ {},\n         random_context));\n \n-    // Expect 1/4 onion peers and 1/4 of the others to be protected\n-    // from eviction, sorted by longest uptime (lowest nTimeConnected).\n+    // Expect 1/4 onion peers and 1/4 of the other peers to be protected,\n+    // sorted by longest uptime (lowest nTimeConnected), if no localhost peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.nTimeConnected = c.id;\n             c.m_is_local = false;\n-            c.m_is_onion = (c.id == 3 || c.id > 7);\n+            c.m_network = (c.id == 3 || c.id > 7) ? NET_ONION : NET_IPV6;\n         },\n         /* protected_peer_ids */ {0, 1, 2, 3, 8, 9},\n         /* unprotected_peer_ids */ {4, 5, 6, 7, 10, 11},\n@@ -138,6 +141,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.m_is_onion = false;\n             c.m_is_local = (c.id == 1 || c.id == 9 || c.id == 11);\n+            c.m_network = NET_IPV4;\n         },\n         /* protected_peer_ids */ {1, 9, 11},\n         /* unprotected_peer_ids */ {},\n@@ -150,6 +154,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n             c.nTimeConnected = c.id;\n             c.m_is_onion = false;\n             c.m_is_local = (c.id > 6);\n+            c.m_network = NET_IPV6;\n         },\n         /* protected_peer_ids */ {0, 1, 2, 7, 8, 9},\n         /* unprotected_peer_ids */ {3, 4, 5, 6, 10, 11},"
      }
    ]
  },
  {
    "sha": "787d46bb2a39fb39166882cc6e0afbc34424d88e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODdkNDZiYjJhMzlmYjM5MTY2ODgyY2M2ZTBhZmJjMzQ0MjRkODhl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-20T10:17:40Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T11:57:59Z"
      },
      "message": "p2p: update ProtectEvictionCandidatesByRatio() doxygen docs",
      "tree": {
        "sha": "faa7ed8fc43139c45d77d1c2f8979a8696b65ed7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faa7ed8fc43139c45d77d1c2f8979a8696b65ed7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/787d46bb2a39fb39166882cc6e0afbc34424d88e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHREcACgkQT1chs9Dj\nkh0jpQ//SbEtMeR1P0N5FbhcYWjU52/sEJp3oLC7y5oLTOP8IZfTR7sB1T/IX59u\nYpg+hQSO1fHnG4am61mqbRz+VdNnDZUA0/daAdOINVTIxq04B2FenXDaGoir2sAB\nrBJx1LbuF03wWycR77lmCuaScfQKvnDqRg/XCC/vV7cWQ39BeUrmInVc3U0gV7yH\nQrDYfMHBHnOQ2TBkTdhdw/Z4wG0I2E4leCIixJlIs7QzD/hd8vFefNszlPM+/eAW\nVsSDTRiUhV9JhiVA6A6CkPaJIJcYN+J37LF5dOuxG9T7H8BpwwBf6vMpzix6HcLx\nAS8G/hqU3r4V9vys9+Qbv5Lyy1wKA8luyLAQvk3waP+tt7EMUT0s5635WpH5l46H\nQKjSxACwoJ1xLnxb2oRKsAyLkj4P+bNfPS/fxlAy4qKPYPAb5u75sJpxbd9V+8Jd\nmYiTixmQRwpScEM2w2M23ShBj8+r7Vgqis/YHyLEddHujFnuun4qnbOHPOVV8T6H\nDyFH/XvpDMaB3EEFXrxgy1Ldb1m/acBNXvN4ymkQDEyVFbGqG8r2Hz43czDEKowj\narsJYtbF8Ueas+w0a5aPWx/e0+r+uzxKSmhkz7l9DE0ibyYuZCT/Mdc495rt/ZXh\n5UTn2Edlamu5i6oWT3fPYZpcMco2Qjb8/X9RdJrKAEE5339x3Qs=\n=C+Km\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIM5PVoDXH+wi3D56wETijNf73Q2ikth1xX1DY6pY1K2JCP/wEBAp+/a3eFjx\nbJdBTXAMrMQI8SAR/iE5UTKeUOpFhzh1x6Dl6UHiXSoPL+rbADKspDS+6QjxBGDH\nREjwCOtrBWJwgfI7AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t//AQTpnNXinx6OEAdIbAxj//tAjwINR2d4WMrVXoJ4AddY6u+nbI\n3HoXHqwBfNkyJjfR7BV7CPAgwGfTWY5v2Yypg1WwFtc4zd3yiiVzWK7LxCFDkiz0\ntU4I8SD5ZXwsc4tv1Ktg6HTJfs6UD2PqDtmcYHhI4SLRgm7QogjxBGDHREjwCOVn\nNB/H0ueXAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BChgfgT29Ks+S72/bVW68JbCPEgBv1Pp9iv0vvkWGir\nR0Rlb+JbE/QOptaeGR+IHPsdqXgI8QRgx0RI8AgVbWPmzE1upwCD3+MNLvkMjiwr\naHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQs6pm\nmCqIfa/spMoiJNrS7AjxIFlYllFWzNmrSbBpF+UL3eV+jV1htOz/dUU+lyJGKv4y\nCPEgDami2sC4kTA+AgMgDpuKhbs09Lens7XJZor6aKa0LQII8CBTv+ZyGTzYO247\ntxFDDYzyTkf/bdM/fly0QqYqvtDzzwjxBGDHREnwCOBglIp3lBQxAIPf4w0u+QyO\nKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree faa7ed8fc43139c45d77d1c2f8979a8696b65ed7\nparent 1e15acf478ae071234350c9b38dc823dfe2e3419\nauthor Jon Atack <jon@atack.com> 1618913860 +0200\ncommitter Jon Atack <jon@atack.com> 1623671879 +0200\n\np2p: update ProtectEvictionCandidatesByRatio() doxygen docs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/787d46bb2a39fb39166882cc6e0afbc34424d88e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/787d46bb2a39fb39166882cc6e0afbc34424d88e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/787d46bb2a39fb39166882cc6e0afbc34424d88e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e15acf478ae071234350c9b38dc823dfe2e3419",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e15acf478ae071234350c9b38dc823dfe2e3419",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e15acf478ae071234350c9b38dc823dfe2e3419"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 10,
      "deletions": 12
    },
    "files": [
      {
        "sha": "4e8e979f4abc655b48bd93902ea63e09e83aaa95",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/787d46bb2a39fb39166882cc6e0afbc34424d88e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/787d46bb2a39fb39166882cc6e0afbc34424d88e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=787d46bb2a39fb39166882cc6e0afbc34424d88e",
        "patch": "@@ -1228,20 +1228,18 @@ struct NodeEvictionCandidate\n  * longest, to replicate the non-eviction implicit behavior and preclude attacks\n  * that start later.\n  *\n- * Half of these protected spots (1/4 of the total) are reserved for onion peers\n- * connected via our tor control service, if any, sorted by longest uptime, even\n- * if they're not longest uptime overall. Any remaining slots of the 1/4 are\n- * then allocated to protect localhost peers, if any (or up to 2 localhost peers\n- * if no slots remain and 2 or more onion peers were protected), sorted by\n- * longest uptime, as manually configured hidden services not using\n- * `-bind=addr[:port]=onion` will not be detected as inbound onion connections.\n+ * Half of these protected spots (1/4 of the total) are reserved for the\n+ * following categories of peers, sorted by longest uptime, even if they're not\n+ * longest uptime overall:\n  *\n- * This helps protect onion peers, which tend to be otherwise disadvantaged\n- * under our eviction criteria for their higher min ping times relative to IPv4\n- * and IPv6 peers, and favorise the diversity of peer connections.\n+ * - onion peers connected via our tor control service\n  *\n- * This function was extracted from SelectNodeToEvict() to be able to test the\n- * ratio-based protection logic deterministically.\n+ * - localhost peers, as manually configured hidden services not using\n+ *   `-bind=addr[:port]=onion` will not be detected as inbound onion connections\n+ *\n+ * This helps protect these privacy network peers, which tend to be otherwise\n+ * disadvantaged under our eviction criteria for their higher min ping times\n+ * relative to IPv4/IPv6 peers, and favorise the diversity of peer connections.\n  */\n void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvictionCandidates);\n "
      }
    ]
  },
  {
    "sha": "9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTg4OWU4YTVjMDIxYjBlYzdlNGM0ZDE3ZDQxOGFiNGEwYWNjYWQ0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-11T10:08:09Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T11:58:01Z"
      },
      "message": "p2p: remove unused CompareOnionTimeConnected()",
      "tree": {
        "sha": "312b1193d503075e141960a17dfa46e7c841231a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/312b1193d503075e141960a17dfa46e7c841231a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHREkACgkQT1chs9Dj\nkh2lEg//ZoTH6dy5Lfl5F0xvcc1CcnqRxtlOPvA6Wyj1Cssr8CnZf6xUAIAc3mCu\nyV12t4olaEZqVEeUwTydA6ezN3OlGpUiaHDloJDYijBONe3NI6OM5aZ7z5GLGJoL\nyw6ug4eMNsDDL4s3Q/jVUgj3Ke2aROGbA/m7Wtf48VmV02utR15iNQCqM404kKE+\ns4z2lBtFrNFoIVZBggmI2v6+/5YytC3xBWDa7rxeyGD/9Iq0pLE2F8hK/4riUWGV\nSuPiOg3NevB5wlyOO7o0oNMyryosUQmILU1F02b8AB12I6WiTu0cmd8Ya2L28T7d\nlcg8XVJSzhujfM6WVyk9vKtCBZc0SIa8wgMHf9ndBNUtilX4Nqjee7bsec2CL2lV\nOH1PerTMncXzri1pHQFdfkhk+DY3VQ+jiKXDs2gYDbpCffgIp4XlfFJV0b4Liumk\nFD5apC8QeYX5Ys5vpebnf7jxvBnt0G2jl+asPfx70WJQ0ZCmcfSl8J7/EOrgvVJR\nWJzYUHFv+iePH6YoMSND21LbonfIJgZxQ2/3BCn17jx+3xncWESIJPS/XBDLQQn1\nZJH/6wjvtvaQJhj3ON+yLtFzZYlAdwyxpSbwx/FEU09C7/r29t8ECaPPp4uR6hp/\nsAwSlJjJzk7TuBgA2W9bZxl9TApNqpHupQG+hA6EGMe98au9+YQ=\n=fU7U\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAX/bQUlC45Ilj01GUe2xIkPkxXI0GHqiB8WlPy+nCfGCP/wEBFFUDauh6Ub\nN6/45GhsD8YI8QRgx0RL8Ahwy+0VkiEh1gCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEFk9Z5EJwDnyKL6yMULR4/gI\n8QRgx0RK8AiPwp/ucsOKQgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEN6eX8bX1leJb//8YflIYy4I8QRgx0RK8Agh46zhp6Xf\nXQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDorOvPvEbgZVuPf+juQ9xZCPEEYMdES/AI4PMkRdn88pMAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 312b1193d503075e141960a17dfa46e7c841231a\nparent 787d46bb2a39fb39166882cc6e0afbc34424d88e\nauthor Jon Atack <jon@atack.com> 1623406089 +0200\ncommitter Jon Atack <jon@atack.com> 1623671881 +0200\n\np2p: remove unused CompareOnionTimeConnected()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "787d46bb2a39fb39166882cc6e0afbc34424d88e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/787d46bb2a39fb39166882cc6e0afbc34424d88e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/787d46bb2a39fb39166882cc6e0afbc34424d88e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "7e5c3806c15e5f922d401e0578ef7b24fed65ea8",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
        "patch": "@@ -848,12 +848,6 @@ static bool CompareLocalHostTimeConnected(const NodeEvictionCandidate &a, const\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n-static bool CompareOnionTimeConnected(const NodeEvictionCandidate& a, const NodeEvictionCandidate& b)\n-{\n-    if (a.m_is_onion != b.m_is_onion) return b.m_is_onion;\n-    return a.nTimeConnected > b.nTimeConnected;\n-}\n-\n static bool CompareNetGroupKeyed(const NodeEvictionCandidate &a, const NodeEvictionCandidate &b) {\n     return a.nKeyedNetGroup < b.nKeyedNetGroup;\n }"
      }
    ]
  },
  {
    "sha": "310fab49282d507e5fa710afb20d036604bbf3a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTBmYWI0OTI4MmQ1MDdlNWZhNzEwYWZiMjBkMDM2NjA0YmJmM2Ey",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-11T10:08:27Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T11:58:03Z"
      },
      "message": "p2p: remove unused CompareLocalHostTimeConnected()",
      "tree": {
        "sha": "b1e440e10e27be3b55a442cea8c29b1d2de2e9c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1e440e10e27be3b55a442cea8c29b1d2de2e9c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/310fab49282d507e5fa710afb20d036604bbf3a2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHREwACgkQT1chs9Dj\nkh0uPw/+LGYSLwx4373vX1JCahTqG54djh36Bvc2I6A5vHEbInPFS6lD+Us1Bzf+\nIknQE7XZ/10z5QPV8mUp41EJ/bKECPuL0taji70t6D0UQYLNMHew6yDltTNl9ATD\nen7jniW/MiJ2R/eXbzRPX48EMLluoEF/VvTP8Emsn+hkn7+cA1Y4RBFeHXiXBT9K\nmn5r+KW+EW4Uqr7eAVu4AOsfAdXKRaOXpcyxdbB9p+nG4ykIK8kleuxi/CfC7cto\nibTrt7pQbIKlIWSIT7p4xJM4hRvbVfq2yCUdAGE3L0/rGggSxdw5kPk7e+d2CE8L\nTzyhoXbhMo3ny0VVnTU+q0ajfF8zoLqM2/EitVNODNT2+Ixq9ySr7e+g0esijubl\nNusCnNFpjeUnJAw5p6Hc5yjhf4vwA9cTi9mmJX3jPnu2nbEuH2bmXGE6a+3xwL90\nfI0S7867PrQ8Ju+nnoTN3xPqBoAUyBY8SYeZvWPiq4vCmq2E+pRi8/0bm43bvu8k\n7oooUHhh+0HDw2gkyvaxyQSu78KSI7mtM3DWk+TfgyU+is/3FnVuDvpIUn11lzqF\nNCNSsik5AcYb2B1lqllcM5C6Q/qYM31EjKRUpQSFejSVKIr/uxIIA5ViQbnW998p\nffzHqL5Wq0nJsBkV7zsSH2tWlVqoBAIB3eeuVldMZTn2cplapJw=\n=fEak\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwII6DNfafVn1m/NBnffN96N6lrg2bc4tY2Wq3AtLjblbhCP/wECCdcEf8tQ4W\nu0pcyxxTJB8I8QRgx0RN8AgdkdGnPTbNWgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEGRF/Im5wMn5IdRn6xCYvMsI8QRgx0RN\n8AisiZwb04iTvgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEKd5fyHa2+QHGF6D+D/T5a0I8QRgx0RN8AgR/hQGY25m\ntQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQu+j72rw9dEr8DZLpe0ALYAjwIJh4GUoo/mH1f2I1l2WAUCeFIkE/\nqqhec4pQLsgjIHBNCPAgiw7ZH2cVrUHyIb8cZViBxi4IQJEjl/JnYL/ERqJuCf4I\n8QRgx0RN8Ahz4KFzzpDZnQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b1e440e10e27be3b55a442cea8c29b1d2de2e9c1\nparent 9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4\nauthor Jon Atack <jon@atack.com> 1623406107 +0200\ncommitter Jon Atack <jon@atack.com> 1623671883 +0200\n\np2p: remove unused CompareLocalHostTimeConnected()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/310fab49282d507e5fa710afb20d036604bbf3a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/310fab49282d507e5fa710afb20d036604bbf3a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/310fab49282d507e5fa710afb20d036604bbf3a2/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e889e8a5c021b0ec7e4c4d17d418ab4a0accad4"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f4388b2b26c0f60ee912cb7eac0da4c0630d4e0b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/310fab49282d507e5fa710afb20d036604bbf3a2/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/310fab49282d507e5fa710afb20d036604bbf3a2/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=310fab49282d507e5fa710afb20d036604bbf3a2",
        "patch": "@@ -842,12 +842,6 @@ static bool ReverseCompareNodeTimeConnected(const NodeEvictionCandidate &a, cons\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n-static bool CompareLocalHostTimeConnected(const NodeEvictionCandidate &a, const NodeEvictionCandidate &b)\n-{\n-    if (a.m_is_local != b.m_is_local) return b.m_is_local;\n-    return a.nTimeConnected > b.nTimeConnected;\n-}\n-\n static bool CompareNetGroupKeyed(const NodeEvictionCandidate &a, const NodeEvictionCandidate &b) {\n     return a.nKeyedNetGroup < b.nKeyedNetGroup;\n }"
      }
    ]
  },
  {
    "sha": "045cb40192bf3dfa6c42916237e55f86bbc788d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDVjYjQwMTkyYmYzZGZhNmM0MjkxNjIzN2U1NWY4NmJiYzc4OGQ0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-11T09:54:08Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T11:58:05Z"
      },
      "message": "p2p: remove unused m_is_onion member from NodeEvictionCandidate struct",
      "tree": {
        "sha": "c482449df5b49cfbf20c412da05fadeec21e2afe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c482449df5b49cfbf20c412da05fadeec21e2afe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/045cb40192bf3dfa6c42916237e55f86bbc788d4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHRE4ACgkQT1chs9Dj\nkh2S/w//TuwDvd3VI1Jdo1X+bwKHZE8yM+BbTSd9vR9fHnR+D0CgfYoB2EX06zJC\nYncPMoenPR9DZ0nGxLb9b46pVGa8G7Nxt6zH/Lz2vWqnMLNZhSh2E45AbeaWnuhH\n4hTSG6qyxfcho2T32F7FZAECS9zH59DayrMmYm1pr/olxFBdGBISvigAMIYEX7d2\n+y0zb2u1wZnBqLUb4QE1mCmO5K0C9s2HmttM1v+eZVY5mFFzlcqCn53XTrWzZNgu\nMaykgdalFia4dEC4TDW6lpHFbUzXtXkTdHTSUhmx9FLXCvQzNJDG/Y5eB2R1PEEQ\nynub56ghabxGOP8G6wAK6Vsp71CtdTOKtpVstb4U2N+1kHcgaWnU8Cz1xPJEZ0vj\nxZe/lcPPO1DjRgCalc/oLP44HwT1hUOrz0rCMcBmdQv289dFxiT0jKP3I2MIhYD4\nSvzHU/7K3n0tTuJO+LW3qfz1Tlb72NFeAwKpunPTdcFBxC+MvLPrJbpD5HArBEXc\nE+npTO79JHGF/pE8jZHYDrY0bCINul4iaXqeLdKT2HIN24McwqRKJYx2T5H/zI+E\nYT9uXkJ7kLjXIsD56fBz1fq5FwXWV8OzVS6KzdD/NWuXNoBwqmY5Z7TCtGR95JKd\nBz5SkJ3EszJLywpXoSDxapIT5VkOzompYE23lxaA+uQ4FVteKNc=\n=bkhz\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPcEW/GFKv/zC4KLhEoSFNerd5oET14Ai+dBP2jxvNUzCP/wEAK5vV64WvGl\ndf+hsPPUEIII8QRgx0RP8Aj1QaGq3RKkZwCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEDP5bwK/u3BXDoZZupoq\n3g8I8CD2DDr1t3M6Qm5ErNSoFixjoBI8t49t0tn3rVatz4g5bwjwIORagXhwuqj+\nCFOpZInkfWJbjQAPWb7IINucoVjKe91KCPEEYMdET/AI+ro59vSrWIYAg9/jDS75\nDI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEE86CKpUP2BUo6jvjOyE8eAI8QRgx0RP8AhXD3AXwz55iwCD3+MNLvkMjiMi\naHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQr5QmOWXRIJU2IsgG\nM8nKaAjxBGDHRE/wCMDBB0q7jsvWAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c482449df5b49cfbf20c412da05fadeec21e2afe\nparent 310fab49282d507e5fa710afb20d036604bbf3a2\nauthor Jon Atack <jon@atack.com> 1623405248 +0200\ncommitter Jon Atack <jon@atack.com> 1623671885 +0200\n\np2p: remove unused m_is_onion member from NodeEvictionCandidate struct\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/045cb40192bf3dfa6c42916237e55f86bbc788d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/045cb40192bf3dfa6c42916237e55f86bbc788d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/045cb40192bf3dfa6c42916237e55f86bbc788d4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "310fab49282d507e5fa710afb20d036604bbf3a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/310fab49282d507e5fa710afb20d036604bbf3a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/310fab49282d507e5fa710afb20d036604bbf3a2"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 3,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a69d13436d52de20dfb3cbe52a0f6edf49eb7e1e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=045cb40192bf3dfa6c42916237e55f86bbc788d4",
        "patch": "@@ -1063,7 +1063,7 @@ bool CConnman::AttemptToEvictConnection()\n                                                HasAllDesirableServiceFlags(node->nServices),\n                                                peer_relay_txes, peer_filter_not_null, node->nKeyedNetGroup,\n                                                node->m_prefer_evict, node->addr.IsLocal(),\n-                                               node->m_inbound_onion, node->ConnectedThroughNetwork()};\n+                                               node->ConnectedThroughNetwork()};\n             vEvictionCandidates.push_back(candidate);\n         }\n     }"
      },
      {
        "sha": "e308ac5714418a6715be36a78cb530e8d225058b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=045cb40192bf3dfa6c42916237e55f86bbc788d4",
        "patch": "@@ -1209,7 +1209,6 @@ struct NodeEvictionCandidate\n     uint64_t nKeyedNetGroup;\n     bool prefer_evict;\n     bool m_is_local;\n-    bool m_is_onion;\n     Network m_network;\n };\n "
      },
      {
        "sha": "a3f71426faf9d21efd37039519c4c710b63e997e",
        "filename": "src/test/fuzz/node_eviction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/test/fuzz/node_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/test/fuzz/node_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/node_eviction.cpp?ref=045cb40192bf3dfa6c42916237e55f86bbc788d4",
        "patch": "@@ -31,7 +31,6 @@ FUZZ_TARGET(node_eviction)\n             /* nKeyedNetGroup */ fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n             /* prefer_evict */ fuzzed_data_provider.ConsumeBool(),\n             /* m_is_local */ fuzzed_data_provider.ConsumeBool(),\n-            /* m_is_onion */ fuzzed_data_provider.ConsumeBool(),\n             /* m_network */ fuzzed_data_provider.PickValueInArray(ALL_NETWORKS),\n         });\n     }"
      },
      {
        "sha": "38be548b2f629e0c355f7d072668520c88e6d55d",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/045cb40192bf3dfa6c42916237e55f86bbc788d4/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=045cb40192bf3dfa6c42916237e55f86bbc788d4",
        "patch": "@@ -33,7 +33,6 @@ std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_c\n             /* nKeyedNetGroup */ random_context.randrange(100),\n             /* prefer_evict */ random_context.randbool(),\n             /* m_is_local */ random_context.randbool(),\n-            /* m_is_onion */ random_context.randbool(),\n             /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n         });\n     }\n@@ -92,7 +91,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.nTimeConnected = c.id;\n-            c.m_is_onion = c.m_is_local = false;\n+            c.m_is_local = false;\n             c.m_network = NET_IPV4;\n         },\n         /* protected_peer_ids */ {0, 1, 2, 3, 4, 5},\n@@ -103,7 +102,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n     BOOST_CHECK(IsProtected(\n         num_peers, [num_peers](NodeEvictionCandidate& c) {\n             c.nTimeConnected = num_peers - c.id;\n-            c.m_is_onion = c.m_is_local = false;\n+            c.m_is_local = false;\n             c.m_network = NET_IPV6;\n         },\n         /* protected_peer_ids */ {6, 7, 8, 9, 10, 11},\n@@ -139,7 +138,6 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n     // if no onion peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n-            c.m_is_onion = false;\n             c.m_is_local = (c.id == 1 || c.id == 9 || c.id == 11);\n             c.m_network = NET_IPV4;\n         },\n@@ -152,7 +150,6 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.nTimeConnected = c.id;\n-            c.m_is_onion = false;\n             c.m_is_local = (c.id > 6);\n             c.m_network = NET_IPV6;\n         },"
      }
    ]
  },
  {
    "sha": "70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGJiYzYyNzExNjQzZWM1N2NjZTYyMGY5ZjdhMGUxZmU1ZmI2MzQ2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-22T14:42:37Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T12:00:12Z"
      },
      "message": "test: add combined onion/localhost eviction protection coverage",
      "tree": {
        "sha": "174daaec97e60d571884201eb7412c344effcb39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/174daaec97e60d571884201eb7412c344effcb39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHRNMACgkQT1chs9Dj\nkh1vSg/9GuPwPQYfkIT1abCRNn8Jb9hsKw3og+Lsy44XzXw7fE8xeBj537iqDDJb\nAK02+tXn6RDjLQ+tgyG/aXzL1D6NKO3RjvQbtZBQ9580XX0tKrxAidAXSilk6MN1\n/DeFCA3dGRk7vroCRWs/wj6Y/4He8Bkm+IKdkOstq5FZh86r9lZEQQ5DzoguE/mC\ngFFMRJQdcqtHwhdY8fe6DXdHxeZeyLLal42FJeId7G5Z5qE976wDL92Y0f656PNs\nI20zTe2K7owVGUadCvfHP9HvCYFaOiTAf2lPnbafzZiAdti3kw42P6dGNX9sWx+B\nJbHqWytfkDiG7nEYbyP4JF/hBBhW5XOrXQUta3FICGo5MKlI6TrdVZfj/Q7V+INt\nv7FpfioLdo+z2GlxK2MM4bRZZQNF5BE4GovGaGauadVuJDlXkVuxJDF4nilETc59\nGBI5+dz5BAQvGDe0S6QT1cgZSyo6euBrIELgm9nB/UmE1o7lE/iFneh77LFV7rZp\npeyYLvegUWjG1C78kNCHU7BEeyoLm8Fg3aDQF6ymX3wlrugnNI+O4ioq/5peghfX\n/H2S7rArtoktUBbMYFK1sIglHH2Ax880CRSzdRHXF4kxBBxR/OSBKfEZ021bEWxS\nfDXroj6bTpSDyNYG2Blmb+UaxgfW88uvCyLIXqzu61JoCA4N+Ks=\n=2uYI\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEMaupSX90JjEhxDNt75omRXY1T7Pz/pArCWF3+UiQ0tCP/wEF/xamkc3Zka\nwfVsTCUSvoMI8QRgx0TT8AiH6Tvoyc06DgCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEG7nGf2vm+iT+WfDOEDztWsI\n8QRgx0TU8AjNTDhg2iudSACD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEPPQl0F79ZG1AvMZk6dIbJUI8QRgx0TU\n8AhiCjrcNQfFAACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BD+CEbYn6eR6rb/FTAmhJC9CPEEYMdE1PAIAjFu\n4cEeOcMAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 174daaec97e60d571884201eb7412c344effcb39\nparent 045cb40192bf3dfa6c42916237e55f86bbc788d4\nauthor Jon Atack <jon@atack.com> 1619102557 +0200\ncommitter Jon Atack <jon@atack.com> 1623672012 +0200\n\ntest: add combined onion/localhost eviction protection coverage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70bbc62711643ec57cce620f9f7a0e1fe5fb6346/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "045cb40192bf3dfa6c42916237e55f86bbc788d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/045cb40192bf3dfa6c42916237e55f86bbc788d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/045cb40192bf3dfa6c42916237e55f86bbc788d4"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 104,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ec4aa501738aa9b76e118a6248b094d7deeeeead",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70bbc62711643ec57cce620f9f7a0e1fe5fb6346/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70bbc62711643ec57cce620f9f7a0e1fe5fb6346/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
        "patch": "@@ -156,6 +156,110 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         /* protected_peer_ids */ {0, 1, 2, 7, 8, 9},\n         /* unprotected_peer_ids */ {3, 4, 5, 6, 10, 11},\n         random_context));\n+\n+    // Tests with 2 networks...\n+\n+    // Combined test: expect having 1 localhost and 1 onion peer out of 4 to\n+    // protect 1 localhost, 0 onion and 1 other peer, sorted by longest uptime;\n+    // stable sort breaks tie with array order of localhost first.\n+    BOOST_CHECK(IsProtected(\n+        4, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 4);\n+            c.m_network = (c.id == 3) ? NET_ONION : NET_IPV4;\n+        },\n+        /* protected_peer_ids */ {0, 4},\n+        /* unprotected_peer_ids */ {1, 2},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost and 1 onion peer out of 7 to\n+    // protect 1 localhost, 0 onion, and 2 other peers (3 total), sorted by\n+    // uptime; stable sort breaks tie with array order of localhost first.\n+    BOOST_CHECK(IsProtected(\n+        7, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 6);\n+            c.m_network = (c.id == 5) ? NET_ONION : NET_IPV4;\n+        },\n+        /* protected_peer_ids */ {0, 1, 6},\n+        /* unprotected_peer_ids */ {2, 3, 4, 5},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost and 1 onion peer out of 8 to\n+    // protect protect 1 localhost, 1 onion and 2 other peers (4 total), sorted\n+    // by uptime; stable sort breaks tie with array order of localhost first.\n+    BOOST_CHECK(IsProtected(\n+        8, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 6);\n+            c.m_network = (c.id == 5) ? NET_ONION : NET_IPV4;\n+        },\n+        /* protected_peer_ids */ {0, 1, 5, 6},\n+        /* unprotected_peer_ids */ {2, 3, 4, 7},\n+        random_context));\n+\n+    // Combined test: expect having 3 localhost and 3 onion peers out of 12 to\n+    // protect 2 localhost and 1 onion, plus 3 other peers, sorted by longest\n+    // uptime; stable sort breaks ties with the array order of localhost first.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 6 || c.id == 9 || c.id == 11);\n+            c.m_network = (c.id == 7 || c.id == 8 || c.id == 10) ? NET_ONION : NET_IPV6;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 6, 7, 9},\n+        /* unprotected_peer_ids */ {3, 4, 5, 8, 10, 11},\n+        random_context));\n+\n+    // Combined test: expect having 4 localhost and 1 onion peer out of 12 to\n+    // protect 2 localhost and 1 onion, plus 3 other peers, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id > 4 && c.id < 9);\n+            c.m_network = (c.id == 10) ? NET_ONION : NET_IPV4;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 5, 6, 10},\n+        /* unprotected_peer_ids */ {3, 4, 7, 8, 9, 11},\n+        random_context));\n+\n+    // Combined test: expect having 4 localhost and 2 onion peers out of 16 to\n+    // protect 2 localhost and 2 onions, plus 4 other peers, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        16, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 6 || c.id == 9 || c.id == 11 || c.id == 12);\n+            c.m_network = (c.id == 8 || c.id == 10) ? NET_ONION : NET_IPV6;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 6, 8, 9, 10},\n+        /* unprotected_peer_ids */ {4, 5, 7, 11, 12, 13, 14, 15},\n+        random_context));\n+\n+    // Combined test: expect having 5 localhost and 1 onion peer out of 16 to\n+    // protect 3 localhost (recovering the unused onion slot), 1 onion, and 4\n+    // others, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        16, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id > 10);\n+            c.m_network = (c.id == 10) ? NET_ONION : NET_IPV4;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 10, 11, 12, 13},\n+        /* unprotected_peer_ids */ {4, 5, 6, 7, 8, 9, 14, 15},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost and 4 onion peers out of 16 to\n+    // protect 1 localhost and 3 onions (recovering the unused localhost slot),\n+    // plus 4 others, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        16, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 15);\n+            c.m_network = (c.id > 6 && c.id < 11) ? NET_ONION : NET_IPV6;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 7, 8, 9, 15},\n+        /* unprotected_peer_ids */ {5, 6, 10, 11, 12, 13, 14},\n+        random_context));\n }\n \n // Returns true if any of the node ids in node_ids are selected for eviction."
      }
    ]
  },
  {
    "sha": "ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTAyZGQxZWYxZjdmNTRmMzM3ODBiMzJmMTk1ZDMxYzFjYzg3MzE4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-10T14:11:03Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T12:01:35Z"
      },
      "message": "p2p: extend inbound eviction protection by network to I2P peers\n\nThis commit extends our inbound eviction protection to I2P peers to\nfavorise the diversity of peer connections, as peers connected\nthrough the I2P network are otherwise disadvantaged by our eviction\ncriteria for their higher latency (higher min ping times) relative\nto IPv4 and IPv6 peers, as well as relative to Tor onion peers.\n\nThe `networks` array is order-dependent in the case of a tie in\ncandidate counts between networks (earlier array members receive\npriority in the case of a tie).\n\nTherefore, we place I2P candidates before localhost and onion ones\nin terms of opportunity to recover unused remaining protected slots\nfrom the previous iteration, guesstimating that most nodes allowing\nboth onion and I2P inbounds will have more onion peers, followed by\nlocalhost, then I2P, as I2P support is only being added in the\nupcoming v22.0 release.",
      "tree": {
        "sha": "45d2262216da1f6858f993ba06d68740483f1b40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45d2262216da1f6858f993ba06d68740483f1b40"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHRSYACgkQT1chs9Dj\nkh2DFBAAkflN1TUnuoAY/saX7XM03pCtb132KjWqkUa3Q8tyVy6vI72Ei3Uf8Bsw\nsmkFwGo+S3V206Bw3tp0UajFZdpCJi1YYSlExZL8WgUHN6t3LQ6mgSITyTrXMe20\nAxifd9OL72uKXiauIcUM1mRp7+km/YaBhNVJxhuapkbAQ6ELzz1i4SrSIAfQ2f1B\nCA/44brKAkKNV44/opIha7BJz6zs6lF5KlWG36qq9wJuzdSt0M2v0XGucHnOBcrY\nPShcDM0ljtaIuGJGL6gF9rmEy0Ne8WZld1YjgSabd3Ri7IYty4+aSGG1GoTWcHwT\ntXGBw25inrm90EdAKsYjvcL1bXrKJXXEREplw2aDbNMt9MhQYckIwQE+quN4TnDa\nMihX3lLwL2U+/rMkQl5kTI3anQe0OomsGu87Zv4mEqZJ0VNN2P7kDPRuVDp3snE1\nPjZIPdQEXY5iUAwk8VAQ+rHAKZxqV7DlbXzgZNrrZwA1XezPN9m5T2b3yTuCZjyF\nlQA99yr5agUBUDMKlskgmbL8RTE3LixKXGCODssfhWUixyi/cOf/0GweBk1rqyYX\n9Ii7Z5adF5mBlP3cDzjAidCKVVLi/2SPu9F8p82AojrLAbBysqaK7gsVPmVqiSHw\nZEoU8et9aOMV+9hpd+/FcIpl2B50hjMZALreTDP5etOFyQ+D8Fs=\n=LECq\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAdkQ+qwLfWIWrid9KguVCW7z7f0PtNsl61XK0yqtKS9CP/wEAiwZu5k5fU6\noWnvLdUUMmYI8CASrFcryXOfVcDbVXYb6LwLWIElunkfeQnWJlGwKJZarAjwIESg\nsxyiAnVcZduGaRu79/seoxBVreF5govEOKu3IDtSCPEEYMdFKPAIj7UpwylQv5IA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BBGT5zxXg0kIZYkrDU50X52CPEgmHodIEX537E0MTxRvQXzwEtOMRD0\nwuoiXcOj6RNVJcEI8CDE2JW7EiViMG+xMDBQjKC4IChBBRNI/pVEBOexGGZJlwjx\nBGDHRSfwCNbPpfBrvbMOAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t//AQkHa08kmXqmdFoD7uU49ZhgjwIPfxc75MPPtwylzb8CpJ\n02f4UEjQnITyJEP7hlNi+ID7CPEg9uHjfUUUYfx9avsXl4tehfuz8NnYc2MTOLLw\nWJR7GZQI8CC9ApIHBeD9Q909b0WtTJtlTWAERitkN+q37Ov7TjCTvgjxBGDHRSfw\nCCGsneHAcMowAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVy\nbml0eXdhbGwuY29t8BD+lP6NifaV3N8Pb2rYc3SkCPEglKixyLm1HI9UI7lcJPW/\nr8gGpgnryRkckVDrydIcZOEI8SBJ47R6/OsXG2QDdiUD4qLToRBgEu6BZsTf9WyH\nZKCrnQjxBGDHRSjwCNZnkQ1/iObhAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0\nYy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 45d2262216da1f6858f993ba06d68740483f1b40\nparent 70bbc62711643ec57cce620f9f7a0e1fe5fb6346\nauthor Jon Atack <jon@atack.com> 1618063863 +0200\ncommitter Jon Atack <jon@atack.com> 1623672095 +0200\n\np2p: extend inbound eviction protection by network to I2P peers\n\nThis commit extends our inbound eviction protection to I2P peers to\nfavorise the diversity of peer connections, as peers connected\nthrough the I2P network are otherwise disadvantaged by our eviction\ncriteria for their higher latency (higher min ping times) relative\nto IPv4 and IPv6 peers, as well as relative to Tor onion peers.\n\nThe `networks` array is order-dependent in the case of a tie in\ncandidate counts between networks (earlier array members receive\npriority in the case of a tie).\n\nTherefore, we place I2P candidates before localhost and onion ones\nin terms of opportunity to recover unused remaining protected slots\nfrom the previous iteration, guesstimating that most nodes allowing\nboth onion and I2P inbounds will have more onion peers, followed by\nlocalhost, then I2P, as I2P support is only being added in the\nupcoming v22.0 release.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70bbc62711643ec57cce620f9f7a0e1fe5fb6346",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70bbc62711643ec57cce620f9f7a0e1fe5fb6346"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4d7c181330aea8e6e340d1be179cd922bd3441d1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
        "patch": "@@ -908,16 +908,17 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n     // To favorise the diversity of our peer connections, reserve up to half of these protected\n-    // spots for Tor/onion and localhost peers, even if they're not longest uptime overall.\n+    // spots for Tor/onion, localhost and I2P peers, even if they're not longest uptime overall.\n     // This helps protect these higher-latency peers that tend to be otherwise\n     // disadvantaged under our eviction criteria.\n     const size_t initial_size = eviction_candidates.size();\n     const size_t total_protect_size{initial_size / 2};\n \n-    // Disadvantaged networks to protect: localhost and Tor/onion. In case of equal counts, earlier\n+    // Disadvantaged networks to protect: I2P, localhost, Tor/onion. In case of equal counts, earlier\n     // array members have first opportunity to recover unused slots from the previous iteration.\n     struct Net { bool is_local; Network id; size_t count; };\n-    std::array<Net, 3> networks{{{/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n+    std::array<Net, 3> networks{\n+        {{false, NET_I2P, 0}, {/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n \n     // Count and store the number of eviction candidates per network.\n     for (Net& n : networks) {"
      },
      {
        "sha": "01658e8973bd0c77a22c9e2e027b70dbb08b95c4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
        "patch": "@@ -1236,6 +1236,8 @@ struct NodeEvictionCandidate\n  * - localhost peers, as manually configured hidden services not using\n  *   `-bind=addr[:port]=onion` will not be detected as inbound onion connections\n  *\n+ * - I2P peers\n+ *\n  * This helps protect these privacy network peers, which tend to be otherwise\n  * disadvantaged under our eviction criteria for their higher min ping times\n  * relative to IPv4/IPv6 peers, and favorise the diversity of peer connections."
      },
      {
        "sha": "bf56e1bea7cedf7bc554db4cee192471acfb0a12",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce02dd1ef1f7f54f33780b32f195d31c1cc87318/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
        "patch": "@@ -109,10 +109,10 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         /* unprotected_peer_ids */ {0, 1, 2, 3, 4, 5},\n         random_context));\n \n-    // Test protection of onion and localhost peers...\n+    // Test protection of onion, localhost, and I2P peers...\n \n     // Expect 1/4 onion peers to be protected from eviction,\n-    // if no localhost peers.\n+    // if no localhost or I2P peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.m_is_local = false;\n@@ -123,7 +123,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         random_context));\n \n     // Expect 1/4 onion peers and 1/4 of the other peers to be protected,\n-    // sorted by longest uptime (lowest nTimeConnected), if no localhost peers.\n+    // sorted by longest uptime (lowest nTimeConnected), if no localhost or I2P peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.nTimeConnected = c.id;\n@@ -135,7 +135,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         random_context));\n \n     // Expect 1/4 localhost peers to be protected from eviction,\n-    // if no onion peers.\n+    // if no onion or I2P peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.m_is_local = (c.id == 1 || c.id == 9 || c.id == 11);\n@@ -146,7 +146,7 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         random_context));\n \n     // Expect 1/4 localhost peers and 1/4 of the other peers to be protected,\n-    // sorted by longest uptime (lowest nTimeConnected), if no onion peers.\n+    // sorted by longest uptime (lowest nTimeConnected), if no onion or I2P peers.\n     BOOST_CHECK(IsProtected(\n         num_peers, [](NodeEvictionCandidate& c) {\n             c.nTimeConnected = c.id;"
      }
    ]
  },
  {
    "sha": "7c2284eda22a08dbf2a560894e496e245d026ee0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzIyODRlZGEyMmEwOGRiZjJhNTYwODk0ZTQ5NmUyNDVkMDI2ZWUw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-22T14:46:21Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T12:01:44Z"
      },
      "message": "test: add tests for inbound eviction protection of I2P peers",
      "tree": {
        "sha": "b1b5cb245617bbb1866e96271d279b7a93965769",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1b5cb245617bbb1866e96271d279b7a93965769"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c2284eda22a08dbf2a560894e496e245d026ee0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHRSgACgkQT1chs9Dj\nkh3CCRAAgo6adQ1mFRgowYt2ePi4tItMUdjvdP1r1ewO4MpMXIkBHFPcs3PVYX0f\nesQA9NjPZsOjfbAglKfygMduVYbtbbTpC+Kno7u8OaurvepHvoCWFzihCrKb9CtG\neGSuxiy2XWZTkw8vbZhhn/gkM9G2ynaSLbaiOMkkBbk+NtWM00UtoEbZ5kkMcd2h\nYl6K7P6Ey2CKyR4fQQQCwBb4qK4rTaza1eEPnXhRREaCDlNhYYVDXNKBl56/87m8\nBZosaIaWni+t6fbtlUqfpbKtwZo/GK7n7HcfrVlpQNIH4J2bYTArHa3lpIIUAIGX\nR1lat8oSL1rtDeeDsZjhqkAJHxRYpQwgU7grZMTodIK9rd1VB2M08q9ohqCfWxGz\nLS0M5FTieT+xWIjlLks7QT5XEgrpEAXGqSxN8nix6A7FMEKJZm2srdSzhFPCQEqk\nmE6F3iVw6oN3awrSlBqTUUwJbT1ngRcIExvEoQnjUnTKt1OUbZRHpMC1oMXmq/US\nNiNzb102JptFE0UdXO7Z5QYyMQr7jz4L/lWTtzilhlQ4edNcE+36eOlWrJqvN2mX\nfEJgPwvkeMxoV5lw+DEoDTdJZQ94qtz2ayk2ArUjT0thFlM6Pt36xEMkNmhuV2gb\n6J+Aeb8AF/J4tUta5C7sjDnTIPZChij9cqLfREDcVF4HCbxSitw=\n=kghF\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFe4cEIYJ8tsQlb+M2wNjYYAKEE8SzBfGSsNrEd/B8s5CP/wEJIwln9opgK1\nMDVTVbS1VBwI8QRgx0Up8Ajw8/oBfzW+yQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wENjj08CHjpFJ08U0IP32/DUI8SA4CBhD\nL0Fac2B4IWoi8ISPCDA+zhEO4rAmsfdZ9EHa1QjxBGDHRSnwCINlURpACHVkAIPf\n4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n//AQ68/QCNdXIGXvx6chW5SoSQjxIEBxA6/sbVKSxH4Ay8jhx5IoQzfnDJV5LPLG\nHPfKruNDCPEEYMdFKvAIZ5R2UsCWYIMAg9/jDS75DI4uLWh0dHBzOi8vYWxpY2Uu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ+oZsXnx8mrrpOQyC2RcP\npQjxBGDHRSrwCL7DKMyf2B5bAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b1b5cb245617bbb1866e96271d279b7a93965769\nparent ce02dd1ef1f7f54f33780b32f195d31c1cc87318\nauthor Jon Atack <jon@atack.com> 1619102781 +0200\ncommitter Jon Atack <jon@atack.com> 1623672104 +0200\n\ntest: add tests for inbound eviction protection of I2P peers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c2284eda22a08dbf2a560894e496e245d026ee0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c2284eda22a08dbf2a560894e496e245d026ee0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c2284eda22a08dbf2a560894e496e245d026ee0/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce02dd1ef1f7f54f33780b32f195d31c1cc87318",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce02dd1ef1f7f54f33780b32f195d31c1cc87318"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "35dfe6c4afaa5ca422b863cab44cdba91f5f0a00",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c2284eda22a08dbf2a560894e496e245d026ee0/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c2284eda22a08dbf2a560894e496e245d026ee0/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=7c2284eda22a08dbf2a560894e496e245d026ee0",
        "patch": "@@ -157,6 +157,29 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         /* unprotected_peer_ids */ {3, 4, 5, 6, 10, 11},\n         random_context));\n \n+    // Expect 1/4 I2P peers to be protected from eviction,\n+    // if no onion or localhost peers.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.m_is_local = false;\n+            c.m_network = (c.id == 2 || c.id == 7 || c.id == 10) ? NET_I2P : NET_IPV4;\n+        },\n+        /* protected_peer_ids */ {2, 7, 10},\n+        /* unprotected_peer_ids */ {},\n+        random_context));\n+\n+    // Expect 1/4 I2P peers and 1/4 of the other peers to be protected,\n+    // sorted by longest uptime (lowest nTimeConnected), if no onion or localhost peers.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = false;\n+            c.m_network = (c.id == 4 || c.id > 8) ? NET_I2P : NET_IPV6;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 4, 9, 10},\n+        /* unprotected_peer_ids */ {3, 5, 6, 7, 8, 11},\n+        random_context));\n+\n     // Tests with 2 networks...\n \n     // Combined test: expect having 1 localhost and 1 onion peer out of 4 to"
      }
    ]
  },
  {
    "sha": "1b1088d52fbff8b1c9438d6aa8c6edcbdd471457",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYjEwODhkNTJmYmZmOGIxYzk0MzhkNmFhOGM2ZWRjYmRkNDcxNDU3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-22T17:21:37Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-06-14T12:02:15Z"
      },
      "message": "test: add combined I2P/onion/localhost eviction protection tests",
      "tree": {
        "sha": "ea7ef602879b81956072189f0c955af009c6b150",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea7ef602879b81956072189f0c955af009c6b150"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b1088d52fbff8b1c9438d6aa8c6edcbdd471457",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmDHRUcACgkQT1chs9Dj\nkh1Zkw//XsaQS4e86yOp+PqWu52SUlmu6u69F6LCH2qyT9yWo4zBIsBIVy7BXkvG\nzNVKwachcX+gbpYXxxUFIufEV5gH1o3BfHO4vNTqKXz28J2J1M36gcxjVdvHTmKt\nJUH8NGZ6I33oZ8Sxe577rQXppoavrRAe+GfIJDIohUMtCB9juX8Jsqql1fViqq0q\nrdMxXBNdkQSAi7bqaiDCn8SpywwtQaW6Lp9L7EUlkp3K3CLd2SM7GWI+MnDDn1Zm\nRZa6dsBP0yFpZhzeK0oOILOlx8a8Gw7Lzp30lnNo+XIDUm18vHTjbQCWLH3qhAEz\nrqJRbuehAXOAAYS13cqvDdqlSpNq0nijcoVsGx6CvFto2skf9DsC7c/Zr7jdbpqt\nVGEhbkLwI5S+lQRv/SDUC4j2bPl52fcftCGiA+oxbmlBG3ZZ1DSBeqYdjh2rR6Kd\nZpqpBzVwb2HKCb2K7CH8hy1Q3tXvt5kiyO9bjtdSu6d6ZJxAkroHuhQZyGvXij1N\nBsKkkOlaBw/cso3qGyxoEHW7llEK3NSbPB+xxhlMtFPD5LDUqLqcu/7Dmz7RUp6g\nAvTF01mibKyLgXkkQgsN53HBe9Jt87CDNCRAD49rb9PoRGFQ9V8WE5BzF0W8/7v9\n/F8+/F27/Fra6axPUcTlg1q6jq3PYmc2DhSavmXrImyIaYBg9oY=\n=hcg6\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPPQFYMWKLTym4emKVCzc5tuXYQC322dOAVIElfU+1cmCP/wELt0YY2jQbKi\n/y4xGg6ykKcI8SAK5KCCUIn9ZWXmr/pue4kNpnIVJCTkPBselDsMLafJGgjxBGDH\nRUnwCOL96/jsjvtDAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQ46elDl85soifF0UJ4y2UDwjwIHO0ayMOM+DTZCPn\nefWNMgCXuw/yqXCj2+a2yJ1oIco/CPAgE+SEDBJZqbfXkoP4KAyPxlefCaHTNdsW\noZhNR6hJCOQI8QRgx0VJ8AjapmFsKybYOACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQ5LFtap8YpepztEDi\nJlswNQjxIF8M4tFZRYcbAaxavGbAEeeWcwtV+9K0OdmN1QR6vq5qCPEEYMdFSfAI\ny2gHXDbS+tkAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4\neS5jb23wEOtKzslW4gjWUYSeq7LyWpMI8SDfjAy/C9culU7I/GbGh5RIa2ofrw10\nfkXAT5wRDiG5DwjwIBfyhpp8PymhOcOssrVIrA865Pm4IxiqCbC9r3H1AkPZCPEE\nYMdFSfAIJeecdavxifMAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ea7ef602879b81956072189f0c955af009c6b150\nparent 7c2284eda22a08dbf2a560894e496e245d026ee0\nauthor Jon Atack <jon@atack.com> 1619112097 +0200\ncommitter Jon Atack <jon@atack.com> 1623672135 +0200\n\ntest: add combined I2P/onion/localhost eviction protection tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b1088d52fbff8b1c9438d6aa8c6edcbdd471457",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1b1088d52fbff8b1c9438d6aa8c6edcbdd471457",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b1088d52fbff8b1c9438d6aa8c6edcbdd471457/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c2284eda22a08dbf2a560894e496e245d026ee0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c2284eda22a08dbf2a560894e496e245d026ee0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c2284eda22a08dbf2a560894e496e245d026ee0"
      }
    ],
    "stats": {
      "total": 173,
      "additions": 173,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4bfd487b86ac18a9a2b09475977e22c7dfce4144",
        "filename": "src/test/net_peer_eviction_tests.cpp",
        "status": "modified",
        "additions": 173,
        "deletions": 0,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b1088d52fbff8b1c9438d6aa8c6edcbdd471457/src/test/net_peer_eviction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b1088d52fbff8b1c9438d6aa8c6edcbdd471457/src/test/net_peer_eviction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_peer_eviction_tests.cpp?ref=1b1088d52fbff8b1c9438d6aa8c6edcbdd471457",
        "patch": "@@ -283,6 +283,179 @@ BOOST_AUTO_TEST_CASE(peer_protection_test)\n         /* protected_peer_ids */ {0, 1, 2, 3, 7, 8, 9, 15},\n         /* unprotected_peer_ids */ {5, 6, 10, 11, 12, 13, 14},\n         random_context));\n+\n+    // Combined test: expect having 2 onion and 4 I2P out of 12 peers to protect\n+    // 2 onion (prioritized for having fewer candidates) and 1 I2P, plus 3\n+    // others, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = false;\n+            if (c.id == 8 || c.id == 10) {\n+                c.m_network = NET_ONION;\n+            } else if (c.id == 6 || c.id == 9 || c.id == 11 || c.id == 12) {\n+                c.m_network = NET_I2P;\n+            } else {\n+                c.m_network = NET_IPV4;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 6, 8, 10},\n+        /* unprotected_peer_ids */ {3, 4, 5, 7, 9, 11},\n+        random_context));\n+\n+    // Tests with 3 networks...\n+\n+    // Combined test: expect having 1 localhost, 1 I2P and 1 onion peer out of 4\n+    // to protect 1 I2P, 0 localhost, 0 onion and 1 other peer (2 total), sorted\n+    // by longest uptime; stable sort breaks tie with array order of I2P first.\n+    BOOST_CHECK(IsProtected(\n+        4, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 3);\n+            if (c.id == 4) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id == 2) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV6;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 4},\n+        /* unprotected_peer_ids */ {1, 2},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost, 1 I2P and 1 onion peer out of 7\n+    // to protect 1 I2P, 0 localhost, 0 onion and 2 other peers (3 total) sorted\n+    // by longest uptime; stable sort breaks tie with array order of I2P first.\n+    BOOST_CHECK(IsProtected(\n+        7, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 4);\n+            if (c.id == 6) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id == 5) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV6;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 6},\n+        /* unprotected_peer_ids */ {2, 3, 4, 5},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost, 1 I2P and 1 onion peer out of 8\n+    // to protect 1 I2P, 1 localhost, 0 onion and 2 other peers (4 total) sorted\n+    // by uptime; stable sort breaks tie with array order of I2P then localhost.\n+    BOOST_CHECK(IsProtected(\n+        8, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 6);\n+            if (c.id == 5) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id == 4) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV6;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 5, 6},\n+        /* unprotected_peer_ids */ {2, 3, 4, 7},\n+        random_context));\n+\n+    // Combined test: expect having 4 localhost, 2 I2P, and 2 onion peers out of\n+    // 16 to protect 1 localhost, 2 I2P, and 1 onion (4/16 total), plus 4 others\n+    // for 8 total, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        16, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 6 || c.id > 11);\n+            if (c.id == 7 || c.id == 11) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id == 9 || c.id == 10) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV4;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 6, 7, 9, 11},\n+        /* unprotected_peer_ids */ {4, 5, 8, 10, 12, 13, 14, 15},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost, 8 I2P and 1 onion peer out of\n+    // 24 to protect 1, 4, and 1 (6 total), plus 6 others for 12/24 total,\n+    // sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        24, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 12);\n+            if (c.id > 14 && c.id < 23) { // 4 protected instead of usual 2\n+                c.m_network = NET_I2P;\n+            } else if (c.id == 23) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV6;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 4, 5, 12, 15, 16, 17, 18, 23},\n+        /* unprotected_peer_ids */ {6, 7, 8, 9, 10, 11, 13, 14, 19, 20, 21, 22},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost, 3 I2P and 6 onion peers out of\n+    // 24 to protect 1, 3, and 2 (6 total, I2P has fewer candidates and so gets the\n+    // unused localhost slot), plus 6 others for 12/24 total, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        24, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 15);\n+            if (c.id == 12 || c.id == 14 || c.id == 17) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id > 17) { // 4 protected instead of usual 2\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV4;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 4, 5, 12, 14, 15, 17, 18, 19},\n+        /* unprotected_peer_ids */ {6, 7, 8, 9, 10, 11, 13, 16, 20, 21, 22, 23},\n+        random_context));\n+\n+    // Combined test: expect having 1 localhost, 7 I2P and 4 onion peers out of\n+    // 24 to protect 1 localhost, 2 I2P, and 3 onions (6 total), plus 6 others\n+    // for 12/24 total, sorted by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        24, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id == 13);\n+            if (c.id > 16) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id == 12 || c.id == 14 || c.id == 15 || c.id == 16) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV6;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 17, 18},\n+        /* unprotected_peer_ids */ {6, 7, 8, 9, 10, 11, 16, 19, 20, 21, 22, 23},\n+        random_context));\n+\n+    // Combined test: expect having 8 localhost, 4 I2P, and 3 onion peers out of\n+    // 24 to protect 2 of each (6 total), plus 6 others for 12/24 total, sorted\n+    // by longest uptime.\n+    BOOST_CHECK(IsProtected(\n+        24, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_local = (c.id > 15);\n+            if (c.id > 10 && c.id < 15) {\n+                c.m_network = NET_I2P;\n+            } else if (c.id > 6 && c.id < 10) {\n+                c.m_network = NET_ONION;\n+            } else {\n+                c.m_network = NET_IPV4;\n+            }\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 16, 17},\n+        /* unprotected_peer_ids */ {6, 9, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23},\n+        random_context));\n }\n \n // Returns true if any of the node ids in node_ids are selected for eviction."
      }
    ]
  }
]