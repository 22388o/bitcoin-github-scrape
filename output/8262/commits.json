[
  {
    "sha": "8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjA0YjlhNmMyNWRkYzAwZTliMGM4MjdlZDBjZmQyMjU3MzEyODQ5",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:15:38Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T08:35:12Z"
      },
      "message": "[BDB] Add method to compact a BDB database, reclaiming unused disk space.",
      "tree": {
        "sha": "2cf844f37974691b7ea96eb5de84a26b37968c00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cf844f37974691b7ea96eb5de84a26b37968c00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9adad33938ec7fc6267993710f4ea9de212f7aed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9adad33938ec7fc6267993710f4ea9de212f7aed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9adad33938ec7fc6267993710f4ea9de212f7aed"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "59c5835612a65e3e8a6d1edd7594bbda5757b6b2",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
        "patch": "@@ -314,6 +314,11 @@ void CDB::Close()\n     }\n }\n \n+void CDB::Compact()\n+{\n+    pdb->compact(NULL, NULL, NULL, NULL, DB_FREE_SPACE, NULL);\n+}\n+\n void CDBEnv::CloseDb(const string& strFile)\n {\n     {"
      },
      {
        "sha": "1f19849539809304f44335f0696b55de8e6da05e",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
        "patch": "@@ -106,6 +106,7 @@ class CDB\n public:\n     void Flush();\n     void Close();\n+    void Compact();\n \n private:\n     CDB(const CDB&);"
      }
    ]
  },
  {
    "sha": "8219d510ca50c8e9e016f66fdc1773f55d053488",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjE5ZDUxMGNhNTBjOGU5ZTAxNmY2NmZkYzE3NzNmNTVkMDUzNDg4",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:23:17Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T08:35:12Z"
      },
      "message": "[Wallet] Add methods for removing keys from the keystore & crypter.",
      "tree": {
        "sha": "73756b9337709787524293416bc9dd109c414f99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73756b9337709787524293416bc9dd109c414f99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8219d510ca50c8e9e016f66fdc1773f55d053488",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8219d510ca50c8e9e016f66fdc1773f55d053488",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8219d510ca50c8e9e016f66fdc1773f55d053488",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8219d510ca50c8e9e016f66fdc1773f55d053488/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b04b9a6c25ddc00e9b0c827ed0cfd2257312849"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cf0448f7b4b3c8431e9eb09496c774e4d1e135f4",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8219d510ca50c8e9e016f66fdc1773f55d053488/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8219d510ca50c8e9e016f66fdc1773f55d053488/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=8219d510ca50c8e9e016f66fdc1773f55d053488",
        "patch": "@@ -28,6 +28,9 @@ class CKeyStore\n     virtual bool AddKeyPubKey(const CKey &key, const CPubKey &pubkey) =0;\n     virtual bool AddKey(const CKey &key);\n \n+    //! Remove a key from the store.\n+    virtual bool RemoveKey(const CKeyID &address) = 0;\n+\n     //! Check whether a key corresponding to a given address is present in the store.\n     virtual bool HaveKey(const CKeyID &address) const =0;\n     virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n@@ -63,6 +66,15 @@ class CBasicKeyStore : public CKeyStore\n public:\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n     bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    bool RemoveKey(const CKeyID &address)\n+    {\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = (mapKeys.erase(address) > 0);\n+        }\n+        return result;\n+    }\n     bool HaveKey(const CKeyID &address) const\n     {\n         bool result;"
      },
      {
        "sha": "0261be47051e5d1632383dda95af4b0c09d02b4d",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8219d510ca50c8e9e016f66fdc1773f55d053488/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8219d510ca50c8e9e016f66fdc1773f55d053488/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=8219d510ca50c8e9e016f66fdc1773f55d053488",
        "patch": "@@ -158,6 +158,15 @@ class CCryptoKeyStore : public CBasicKeyStore\n \n     virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n+    bool RemoveKey(const CKeyID &address)\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::RemoveKey(address);\n+            return mapCryptedKeys.erase(address) > 0;\n+        }\n+    }\n     bool HaveKey(const CKeyID &address) const\n     {\n         {"
      }
    ]
  },
  {
    "sha": "4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTdmZWViYWZlODRiYzFkODJkZmI3ZTFkYTEyYjc1NTljZDdkNTM3",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:28:34Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T08:54:00Z"
      },
      "message": "[Wallet] Add methods to remove key material from the wallet file.",
      "tree": {
        "sha": "cd525a9765e0025802bec571112aaa5c95559529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd525a9765e0025802bec571112aaa5c95559529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8219d510ca50c8e9e016f66fdc1773f55d053488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8219d510ca50c8e9e016f66fdc1773f55d053488",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8219d510ca50c8e9e016f66fdc1773f55d053488"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "39a75c403f9beb59bc5f15315f43b137ce98557b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
        "patch": "@@ -169,6 +169,17 @@ bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigne\n     return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret);\n }\n \n+bool CWallet::EraseKey(const CPubKey &pubKey)\n+{\n+    AssertLockHeld(cs_wallet);\n+    CCryptoKeyStore::RemoveKey(pubKey.GetID());\n+    mapKeyMetadata.erase(pubKey.GetID());\n+    CWalletDB walletDB(strWalletFile);\n+    walletDB.EraseKey(pubKey);\n+    walletDB.Flush();\n+    return true;\n+}\n+\n bool CWallet::AddCScript(const CScript& redeemScript)\n {\n     if (!CCryptoKeyStore::AddCScript(redeemScript))"
      },
      {
        "sha": "216c657474dd6b1f16faea11bf9fc3baca77cdb9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
        "patch": "@@ -612,6 +612,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     //! Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool EraseKey(const CPubKey &vchPubKey);\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript);\n "
      },
      {
        "sha": "ed80054082602aa6557b0033fdf3c36c978232e3",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
        "patch": "@@ -104,6 +104,18 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n     return true;\n }\n \n+bool CWalletDB::EraseKey(const CPubKey& vchPubKey)\n+{\n+    ++nWalletDBUpdated;\n+\n+    Erase(std::make_pair(std::string(\"key\"), vchPubKey));\n+    Erase(std::make_pair(std::string(\"wkey\"), vchPubKey));\n+    Erase(std::make_pair(std::string(\"ckey\"), vchPubKey));\n+    Erase(std::make_pair(std::string(\"keymeta\"), vchPubKey));\n+\n+    return true;\n+}\n+\n bool CWalletDB::WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey)\n {\n     nWalletDBUpdated++;"
      },
      {
        "sha": "eca1133b4793d387922ef0fd6f3e2e52a7d713bf",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
        "patch": "@@ -92,6 +92,7 @@ class CWalletDB : public CDB\n \n     bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata &keyMeta);\n     bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta);\n+    bool EraseKey(const CPubKey& vchPubKey);\n     bool WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey);\n \n     bool WriteCScript(const uint160& hash, const CScript& redeemScript);"
      }
    ]
  },
  {
    "sha": "238a68c71f2c9c5f7503225db78dac610d528736",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzhhNjhjNzFmMmM5YzVmNzUwMzIyNWRiNzhkYWM2MTBkNTI4NzM2",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:37:45Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T08:54:00Z"
      },
      "message": "[RPC, Wallet] Add deleteprivkey RPC command, which removes key material, turning a wallet key into a watch-only address.",
      "tree": {
        "sha": "0b88c1a16601f3ab058c28575246c21a38f39999",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b88c1a16601f3ab058c28575246c21a38f39999"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/238a68c71f2c9c5f7503225db78dac610d528736",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/238a68c71f2c9c5f7503225db78dac610d528736",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/238a68c71f2c9c5f7503225db78dac610d528736",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/238a68c71f2c9c5f7503225db78dac610d528736/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a7feebafe84bc1d82dfb7e1da12b7559cd7d537"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 46,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5a0011664637be099372f7088e8bcbd79c9e6d07",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/238a68c71f2c9c5f7503225db78dac610d528736/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/238a68c71f2c9c5f7503225db78dac610d528736/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=238a68c71f2c9c5f7503225db78dac610d528736",
        "patch": "@@ -350,6 +350,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"wallet\",             \"getunconfirmedbalance\",  &getunconfirmedbalance,  false },\n     { \"wallet\",             \"getwalletinfo\",          &getwalletinfo,          false },\n     { \"wallet\",             \"importprivkey\",          &importprivkey,          true  },\n+    { \"wallet\",             \"deleteprivkey\",          &deleteprivkey,          true  },\n     { \"wallet\",             \"importwallet\",           &importwallet,           true  },\n     { \"wallet\",             \"importaddress\",          &importaddress,          true  },\n     { \"wallet\",             \"importpubkey\",           &importpubkey,           true  },"
      },
      {
        "sha": "4e1477d450ea7281425ee93a3a886fb4583ccd52",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/238a68c71f2c9c5f7503225db78dac610d528736/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/238a68c71f2c9c5f7503225db78dac610d528736/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=238a68c71f2c9c5f7503225db78dac610d528736",
        "patch": "@@ -178,6 +178,7 @@ extern UniValue clearbanned(const UniValue& params, bool fHelp);\n \n extern UniValue dumpprivkey(const UniValue& params, bool fHelp); // in rpcdump.cpp\n extern UniValue importprivkey(const UniValue& params, bool fHelp);\n+extern UniValue deleteprivkey(const UniValue& params, bool fHelp);\n extern UniValue importaddress(const UniValue& params, bool fHelp);\n extern UniValue importpubkey(const UniValue& params, bool fHelp);\n extern UniValue dumpwallet(const UniValue& params, bool fHelp);"
      },
      {
        "sha": "fdeb797b88467d976e9d44f3fd78e4b1401ef7e3",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/238a68c71f2c9c5f7503225db78dac610d528736/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/238a68c71f2c9c5f7503225db78dac610d528736/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=238a68c71f2c9c5f7503225db78dac610d528736",
        "patch": "@@ -150,6 +150,50 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+UniValue deleteprivkey(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"deleteprivkey \\\"pubkey\\\"\\n\"\n+            \"\\nRemove the private key corresponding to the provided pubkey, making that address become watch-only (as if it was imported with importaddress). For security reasons the wallet must be unlocked.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"pubkey\\\"        (string, required) The pubkey corresponding to the private key to be removed.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nConvert a spendable address to watch-only\\n\"\n+            + HelpExampleCli(\"deleteprivkey\", \"\\\"mypubkey\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"deleteprivkey\", \"\\\"mypubkey\\\"\")\n+        );\n+\n+    std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n+    CPubKey pubKey(data.begin(), data.end());\n+    if (!pubKey.IsFullyValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey is not a valid public key\");\n+    CKeyID keyID = pubKey.GetID();\n+    CScript script = GetScriptForDestination(keyID);\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Wallet must be unlocked not because we need access to key material, but\n+    // because otherwise some joker that finds an unattended Bitcoin Core could\n+    // delete the keys.\n+    EnsureWalletIsUnlocked();\n+\n+    if (!pwalletMain->HaveKey(keyID))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey is not in the wallet\");\n+\n+    // Erase the key material\n+    pwalletMain->EraseKey(pubKey);\n+\n+    // Re-add the pubkey to the wallet as a watch-only address\n+    pwalletMain->AddWatchOnly(script);\n+\n+    return NullUniValue;\n+}\n+\n void ImportAddress(const CBitcoinAddress& address, const string& strLabel);\n void ImportScript(const CScript& script, const string& strLabel, bool isRedeemScript)\n {"
      }
    ]
  },
  {
    "sha": "fe302bca11ecd6a23107e348007aeda381301164",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTMwMmJjYTExZWNkNmEyMzEwN2UzNDgwMDdhZWRhMzgxMzAxMTY0",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T23:27:07Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T08:54:00Z"
      },
      "message": "[Wallet] Add method for removing transactions from the wallet.",
      "tree": {
        "sha": "2521d3e3e234e1b6603eb96fd048f8189aba63a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2521d3e3e234e1b6603eb96fd048f8189aba63a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe302bca11ecd6a23107e348007aeda381301164",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe302bca11ecd6a23107e348007aeda381301164",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe302bca11ecd6a23107e348007aeda381301164",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe302bca11ecd6a23107e348007aeda381301164/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "238a68c71f2c9c5f7503225db78dac610d528736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/238a68c71f2c9c5f7503225db78dac610d528736",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/238a68c71f2c9c5f7503225db78dac610d528736"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bb897ef7541f89e55aadb598a8840c46615e9cbe",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe302bca11ecd6a23107e348007aeda381301164/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe302bca11ecd6a23107e348007aeda381301164/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fe302bca11ecd6a23107e348007aeda381301164",
        "patch": "@@ -1238,6 +1238,46 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n     return ret;\n }\n \n+bool CWallet::EraseFromWallet(const uint256& hash, CWalletDB* walletdb)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    std::map<uint256, CWalletTx>::iterator i;\n+    i = mapWallet.find(hash);\n+    if (i == mapWallet.end())\n+        return false;\n+    const CWalletTx& wtx = i->second;\n+\n+    // Remove from mapTxSpends\n+    if (!wtx.IsCoinBase())\n+    {\n+        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n+        {\n+            pair<TxSpends::iterator, TxSpends::iterator> range =\n+                 mapTxSpends.equal_range(txin.prevout);\n+\n+            for (TxSpends::iterator it = range.first; it != range.second; ++it)\n+            {\n+                if (hash == it->second)\n+                {\n+                    mapTxSpends.erase(it);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    mapWallet.erase(i);\n+\n+    if (fFileBacked)\n+        walletdb->EraseTx(hash);\n+\n+    NotifyTransactionChanged(this, hash, CT_DELETED);\n+    LogPrintf(\"EraseFromWallet %s\\n\", hash.ToString());\n+\n+    return true;\n+}\n+\n void CWallet::ReacceptWalletTransactions()\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either"
      },
      {
        "sha": "f6b9dcfcd73ad24f285fd2f79c13cdbf0ff1ca36",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe302bca11ecd6a23107e348007aeda381301164/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe302bca11ecd6a23107e348007aeda381301164/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=fe302bca11ecd6a23107e348007aeda381301164",
        "patch": "@@ -649,6 +649,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n+    bool EraseFromWallet(const uint256 &hash, CWalletDB* pwalletdb);\n     void ResendWalletTransactions(int64_t nBestBlockTime);\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime);\n     CAmount GetBalance() const;"
      }
    ]
  },
  {
    "sha": "dd39ce77f2173c54f392fa913a597acc0e8bff96",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDM5Y2U3N2YyMTczYzU0ZjM5MmZhOTEzYTU5N2FjYzBlOGJmZjk2",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T23:31:57Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T08:54:01Z"
      },
      "message": "[Wallet] Add RPCs forgetaddress and purgewallet for removing watch-only scripts and associated transactions.",
      "tree": {
        "sha": "c8358b9d2bd5be76ce14d42f739d7c730cd68a01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8358b9d2bd5be76ce14d42f739d7c730cd68a01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd39ce77f2173c54f392fa913a597acc0e8bff96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd39ce77f2173c54f392fa913a597acc0e8bff96",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd39ce77f2173c54f392fa913a597acc0e8bff96",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd39ce77f2173c54f392fa913a597acc0e8bff96/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe302bca11ecd6a23107e348007aeda381301164",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe302bca11ecd6a23107e348007aeda381301164",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe302bca11ecd6a23107e348007aeda381301164"
      }
    ],
    "stats": {
      "total": 197,
      "additions": 197,
      "deletions": 0
    },
    "files": [
      {
        "sha": "69489fad327aa4a3ee9615bf99606be4ce6532b8",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=dd39ce77f2173c54f392fa913a597acc0e8bff96",
        "patch": "@@ -74,6 +74,7 @@ enum RPCErrorCode\n     RPC_WALLET_WRONG_ENC_STATE      = -15, //! Command given in wrong wallet encryption state (encrypting an encrypted wallet etc.)\n     RPC_WALLET_ENCRYPTION_FAILED    = -16, //! Failed to encrypt the wallet\n     RPC_WALLET_ALREADY_UNLOCKED     = -17, //! Wallet is already unlocked\n+    RPC_WALLET_HAVE_KEY             = -18, //! Refuse to act because wallet has key\n };\n \n std::string JSONRPCRequest(const std::string& strMethod, const UniValue& params, const UniValue& id);"
      },
      {
        "sha": "d0e6ae5afb5f23254310d3d18d1560c1a93b854e",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=dd39ce77f2173c54f392fa913a597acc0e8bff96",
        "patch": "@@ -354,6 +354,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"wallet\",             \"importwallet\",           &importwallet,           true  },\n     { \"wallet\",             \"importaddress\",          &importaddress,          true  },\n     { \"wallet\",             \"importpubkey\",           &importpubkey,           true  },\n+    { \"wallet\",             \"forgetaddress\",          &forgetaddress,          true  },\n+    { \"wallet\",             \"purgetransactions\",      &purgetransactions,      true  },\n     { \"wallet\",             \"keypoolrefill\",          &keypoolrefill,          true  },\n     { \"wallet\",             \"listaccounts\",           &listaccounts,           false },\n     { \"wallet\",             \"listaddressgroupings\",   &listaddressgroupings,   false },"
      },
      {
        "sha": "9d82064949cbbf1def066356d7e64d5d4bd5acde",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=dd39ce77f2173c54f392fa913a597acc0e8bff96",
        "patch": "@@ -181,6 +181,8 @@ extern UniValue importprivkey(const UniValue& params, bool fHelp);\n extern UniValue deleteprivkey(const UniValue& params, bool fHelp);\n extern UniValue importaddress(const UniValue& params, bool fHelp);\n extern UniValue importpubkey(const UniValue& params, bool fHelp);\n+extern UniValue forgetaddress(const UniValue& params, bool fHelp);\n+extern UniValue purgetransactions(const UniValue& params, bool fHelp);\n extern UniValue dumpwallet(const UniValue& params, bool fHelp);\n extern UniValue importwallet(const UniValue& params, bool fHelp);\n "
      },
      {
        "sha": "020cf4dcb89d8cd4fc24d12bd37c55193d799c7a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd39ce77f2173c54f392fa913a597acc0e8bff96/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=dd39ce77f2173c54f392fa913a597acc0e8bff96",
        "patch": "@@ -287,6 +287,198 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+void RemoveAddress(const CBitcoinAddress& address);\n+void RemoveScript(const CScript& script, bool isRedeemScript)\n+{\n+    pwalletMain->MarkDirty();\n+\n+    if (pwalletMain->HaveWatchOnly(script) && !pwalletMain->RemoveWatchOnly(script))\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error removing address from wallet\");\n+\n+    if (isRedeemScript) {\n+        //if (pwalletMain->HaveCScript(script) && !pwalletMain->RemoveCScript(script))\n+        //    throw JSONRPCError(RPC_WALLET_ERROR, \"Error removing p2sh redeemScript to wallet\");\n+        RemoveAddress(CBitcoinAddress(CScriptID(script)));\n+    }\n+}\n+\n+void RemoveAddress(const CBitcoinAddress& address)\n+{\n+    CScript script = GetScriptForDestination(address.Get());\n+    RemoveScript(script, false);\n+    // add to address book or update label\n+    if (address.IsValid())\n+        pwalletMain->DelAddressBook(address.Get());\n+}\n+\n+UniValue forgetaddress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 3)\n+        throw runtime_error(\n+            \"forgetaddress \\\"address\\\" ( purge p2sh )\\n\"\n+            \"\\nRemoves a script (in hex) or address from the wallet and (optionally) purges transactions which as a result are no longer considered as belonging to the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"          (string, required) The hex-encoded script (or address)\\n\"\n+            \"2. purge              (boolean, optional, default=true) Remove transactions whose last remaining link to the wallet was this script/address\\n\"\n+            \"3. p2sh               (boolean, optional, default=false) Remove the P2SH version of the script as well\\n\"\n+            \"\\nNote: This call only works on watch-only scripts or addresses. To forget a private key known to the wallet, first call deleteprivkey.\\n\"\n+            \"\\nNote: This call will take two full passes through the wallet and compact the wallet database if purge is true.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nRemove a script with purge\\n\"\n+            + HelpExampleCli(\"forgetaddress\", \"\\\"myscript\\\"\") +\n+            \"\\nRemove an address without purge\\n\"\n+            + HelpExampleCli(\"forgetaddress\", \"\\\"myaddress\\\" false\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"forgetaddress\", \"\\\"myaddress\\\", false\")\n+        );\n+\n+    // Whether to perform purge after removal\n+    bool fPurge = true;\n+    if (params.size() > 1)\n+        fPurge = params[1].get_bool();\n+\n+    // Whether to remove a p2sh version, too\n+    bool fP2SH = false;\n+    if (params.size() > 2)\n+        fP2SH = params[2].get_bool();\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    set<uint256> setNotMine;\n+\n+    if (fPurge)\n+    {\n+        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.cbegin(); i != pwalletMain->mapWallet.cend(); ++i)\n+        {\n+            if (!pwalletMain->IsMine(i->second)\n+             && !pwalletMain->IsFromMe(i->second))\n+                setNotMine.insert(i->first);\n+        }\n+    }\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (address.IsValid()) {\n+        if (fP2SH)\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Cannot use the p2sh flag with an address - use a script instead\");\n+        CKeyID keyID;\n+        if (address.GetKeyID(keyID) && pwalletMain->mapKeyMetadata.count(keyID))\n+            throw JSONRPCError(RPC_WALLET_HAVE_KEY, \"Refusing to forget address associated with a known key. Make sure you know what you are doing, then call deleteprivkey first.\");\n+        RemoveAddress(address);\n+    } else if (IsHex(params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n+        RemoveScript(CScript(data.begin(), data.end()), fP2SH);\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    vector<uint256> vDeletes;\n+\n+    if (fPurge)\n+    {\n+        // Sort the array of transaction hashes so that the order of operations\n+        // and output are deterministic, for testing purposes.\n+        sort(vDeletes.begin(), vDeletes.end());\n+\n+        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.cbegin(); i != pwalletMain->mapWallet.cend(); ++i)\n+        {\n+            if (!pwalletMain->IsMine(i->second)\n+             && !pwalletMain->IsFromMe(i->second)\n+             && !setNotMine.count(i->first))\n+            {\n+                vDeletes.push_back(i->first);\n+            }\n+        }\n+    }\n+\n+    if (!vDeletes.empty())\n+    {\n+        CWalletDB walletdb(pwalletMain->strWalletFile);\n+        for (vector<uint256>::const_iterator pTxID = vDeletes.cbegin(); pTxID != vDeletes.cend(); ++pTxID)\n+            pwalletMain->EraseFromWallet(*pTxID, &walletdb);\n+        walletdb.Flush();\n+        walletdb.Compact();\n+    }\n+\n+    if (fPurge)\n+    {\n+        UniValue ret(UniValue::VARR);\n+        BOOST_FOREACH(const uint256& hash, vDeletes)\n+            ret.push_back(hash.ToString());\n+        return ret;\n+    }\n+\n+    return NullUniValue;\n+}\n+\n+UniValue purgetransactions(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"purgetransactions compact\\n\"\n+            \"\\nRemoves transactions from the wallet which are not known to correspond to any keys or watch-only scripts in to the wallet. It is not normally the case that a wallet ends up with transactions unrelated to its keys, but this can happen if forgetaddress is called with purge=false. A common use case is to forget a large number of transactions and then purge them all in one pass.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. compact        (boolean, optional, default=true) Compact the wallet database if any transactions are removed\\n\"\n+            \"\\nNote: This call will take a single full passes through the wallet and then compact the wallet database if and only if transactions are removed and compact=true.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nRemove unlinked transactions from the wallet\\n\"\n+            + HelpExampleCli(\"purgetransactions\", \"\") +\n+            \"\\nRemove unlinked transactions without compacting the wallet\\n\"\n+            + HelpExampleCli(\"purgetransactions\", \"false\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"purgetransactions\", \"false\")\n+        );\n+\n+    // Whether to perform compaction after purge\n+    bool fCompact = true;\n+    if (params.size() > 0)\n+        fCompact = params[0].get_bool();\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    vector<uint256> vDeletes;\n+\n+    for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.cbegin(); i != pwalletMain->mapWallet.cend(); ++i)\n+    {\n+        if (!pwalletMain->IsMine(i->second)\n+         && !pwalletMain->IsFromMe(i->second))\n+        {\n+            vDeletes.push_back(i->first);\n+        }\n+    }\n+\n+    if (!vDeletes.empty())\n+    {\n+        // Sort the array of transaction hashes so that the order of operations\n+        // and output are deterministic, for testing purposes.\n+        sort(vDeletes.begin(), vDeletes.end());\n+\n+        // Open the wallet database before entering the loop..\n+        CWalletDB walletdb(pwalletMain->strWalletFile);\n+\n+        // Remove each transaction.\n+        for (vector<uint256>::const_iterator pTxID = vDeletes.cbegin(); pTxID != vDeletes.cend(); ++pTxID)\n+            pwalletMain->EraseFromWallet(*pTxID, &walletdb);\n+\n+        // Write to the database and the perform a compaction operation --\n+        // hopefully shrinking the size of the database files to reduce the\n+        // size of the wallet on disk.\n+        walletdb.Flush();\n+        if (fCompact)\n+            walletdb.Compact();\n+    }\n+\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const uint256& hash, vDeletes)\n+        ret.push_back(hash.ToString());\n+    return ret;\n+}\n+\n UniValue importpubkey(const UniValue& params, bool fHelp)\n {\n     if (!EnsureWalletIsAvailable(fHelp))"
      }
    ]
  },
  {
    "sha": "3a359830ea51949943b14a2a60af236be46eaad1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTM1OTgzMGVhNTE5NDk5NDNiMTRhMmE2MGFmMjM2YmU0NmVhYWQx",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T16:51:51Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T17:19:58Z"
      },
      "message": "[Fixup] Remove C++11-ism (cbegin() / cend()).",
      "tree": {
        "sha": "1a0b3593ba2e85eb3ae9b388b5dab231269e110a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a0b3593ba2e85eb3ae9b388b5dab231269e110a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a359830ea51949943b14a2a60af236be46eaad1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a359830ea51949943b14a2a60af236be46eaad1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a359830ea51949943b14a2a60af236be46eaad1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a359830ea51949943b14a2a60af236be46eaad1/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd39ce77f2173c54f392fa913a597acc0e8bff96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd39ce77f2173c54f392fa913a597acc0e8bff96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd39ce77f2173c54f392fa913a597acc0e8bff96"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c5e4540536ff6d3a98e30af51c839fe51000dd4a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a359830ea51949943b14a2a60af236be46eaad1/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a359830ea51949943b14a2a60af236be46eaad1/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=3a359830ea51949943b14a2a60af236be46eaad1",
        "patch": "@@ -351,7 +351,7 @@ UniValue forgetaddress(const UniValue& params, bool fHelp)\n \n     if (fPurge)\n     {\n-        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.cbegin(); i != pwalletMain->mapWallet.cend(); ++i)\n+        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.begin(); i != pwalletMain->mapWallet.end(); ++i)\n         {\n             if (!pwalletMain->IsMine(i->second)\n              && !pwalletMain->IsFromMe(i->second))\n@@ -382,7 +382,7 @@ UniValue forgetaddress(const UniValue& params, bool fHelp)\n         // and output are deterministic, for testing purposes.\n         sort(vDeletes.begin(), vDeletes.end());\n \n-        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.cbegin(); i != pwalletMain->mapWallet.cend(); ++i)\n+        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.begin(); i != pwalletMain->mapWallet.end(); ++i)\n         {\n             if (!pwalletMain->IsMine(i->second)\n              && !pwalletMain->IsFromMe(i->second)\n@@ -396,7 +396,7 @@ UniValue forgetaddress(const UniValue& params, bool fHelp)\n     if (!vDeletes.empty())\n     {\n         CWalletDB walletdb(pwalletMain->strWalletFile);\n-        for (vector<uint256>::const_iterator pTxID = vDeletes.cbegin(); pTxID != vDeletes.cend(); ++pTxID)\n+        for (vector<uint256>::const_iterator pTxID = vDeletes.begin(); pTxID != vDeletes.end(); ++pTxID)\n             pwalletMain->EraseFromWallet(*pTxID, &walletdb);\n         walletdb.Flush();\n         walletdb.Compact();\n@@ -443,7 +443,7 @@ UniValue purgetransactions(const UniValue& params, bool fHelp)\n \n     vector<uint256> vDeletes;\n \n-    for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.cbegin(); i != pwalletMain->mapWallet.cend(); ++i)\n+    for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.begin(); i != pwalletMain->mapWallet.end(); ++i)\n     {\n         if (!pwalletMain->IsMine(i->second)\n          && !pwalletMain->IsFromMe(i->second))\n@@ -462,7 +462,7 @@ UniValue purgetransactions(const UniValue& params, bool fHelp)\n         CWalletDB walletdb(pwalletMain->strWalletFile);\n \n         // Remove each transaction.\n-        for (vector<uint256>::const_iterator pTxID = vDeletes.cbegin(); pTxID != vDeletes.cend(); ++pTxID)\n+        for (vector<uint256>::const_iterator pTxID = vDeletes.begin(); pTxID != vDeletes.end(); ++pTxID)\n             pwalletMain->EraseFromWallet(*pTxID, &walletdb);\n \n         // Write to the database and the perform a compaction operation --"
      }
    ]
  },
  {
    "sha": "4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGEyMWJiOGJhZDFmMWExM2RiNjdiNDVjMmZkZDk2NjRkNmZmZjZj",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T17:18:51Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T17:20:05Z"
      },
      "message": "[Remove] Delete a private key inside of forgetaddress, if necessary.",
      "tree": {
        "sha": "ea3d19ec658a4c738e43188ef68d7da5157287f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea3d19ec658a4c738e43188ef68d7da5157287f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a359830ea51949943b14a2a60af236be46eaad1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a359830ea51949943b14a2a60af236be46eaad1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a359830ea51949943b14a2a60af236be46eaad1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "61115706b743fdece7b359e6213c769e8cc1f5a6",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=4da21bb8bad1f1a13db67b45c2fdd9664d6fff6c",
        "patch": "@@ -364,8 +364,14 @@ UniValue forgetaddress(const UniValue& params, bool fHelp)\n         if (fP2SH)\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Cannot use the p2sh flag with an address - use a script instead\");\n         CKeyID keyID;\n-        if (address.GetKeyID(keyID) && pwalletMain->mapKeyMetadata.count(keyID))\n-            throw JSONRPCError(RPC_WALLET_HAVE_KEY, \"Refusing to forget address associated with a known key. Make sure you know what you are doing, then call deleteprivkey first.\");\n+        CPubKey vchPubKey;\n+        if (address.GetKeyID(keyID) && pwalletMain->GetPubKey(keyID, vchPubKey))\n+        {\n+            //throw JSONRPCError(RPC_WALLET_HAVE_KEY, \"Refusing to forget address associated with a known key. Make sure you know what you are doing, then call deleteprivkey first.\");\n+            UniValue args(UniValue::VARR);\n+            args.push_back(HexStr(vchPubKey));\n+            deleteprivkey(args, false);\n+        }\n         RemoveAddress(address);\n     } else if (IsHex(params[0].get_str())) {\n         std::vector<unsigned char> data(ParseHex(params[0].get_str()));"
      }
    ]
  }
]