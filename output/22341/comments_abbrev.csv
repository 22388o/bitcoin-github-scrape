DrahtBot,2021-06-25 23:39:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22689](https://github.com/bitcoin/bitcoin/pull/22689) (rpc: deprecate top-level fee fields in getmempool RPCs by josibak",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-868885052,868885052,
jonatack,2021-06-26 17:19:31,Thanks for working on this!,https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-869032391,869032391,
Rspigler,2021-06-30 06:01:18,"Thanks so much for continuing to work on this! Love the use of BIP 87 :)\n\n> Call `importdescriptors` which will allow the import if its own fingerprint is recognized (and after checking the xpub)\n\nYes, important to check the xpub also, not just the fingerprint, which is easy to spoof\n\n> - export their own xpub and then import a descriptor...\n> - import xpub(s) from other wallets, com",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-871119661,871119661,
Sjors,2021-07-01 13:39:13,"It depends on how we want to define `blank`. It would be empty except for a seed, so without any descriptors in it.\n\nIf a wallet has a seed and you call `importdescriptors` on it with some multisig descriptor, it should check the fingerprint(s) and path(s) mentioned in that descriptor. It should then derive the xpriv & xpub for that path, from the wallet seed, and check if it matches the descr",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-872256111,872256111,
Rspigler,2021-07-06 18:46:00,"Thank you, makes a lot of sense!\n\nAnd what about sibling descriptors?",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-874998273,874998273,
mjdietzx,2021-07-14 21:30:59,"Concept ACK\n\nI'll be sure to update the tests/docs in #22067 to use this when this PR gets merged",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-880223870,880223870,
fjahr,2021-08-01 19:11:08,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-890571183,890571183,
Zero-1729,2021-08-02 06:29:18,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-890759083,890759083,
Sjors,2021-10-21 18:24:24,"I managed to reconstruct the master extended private key, by combining the _key_ part of the descriptor `CExtKey` with the _chaincode_ part of the `CExtPubKey` stored inside that descriptor. This code is absolute trash though. I'll try to reuse some of @achow101's work in https://github.com/achow101/bitcoin/commits/upgrade-to-tr-1 which tries to solve a similar problem, for adding a taproot descri",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-948889345,948889345,
Sjors,2021-11-17 18:59:10,"Ok, this is now ready for review.\n\n> I'll be sure to update the tests/docs in #22067 to use this when this PR gets merged\n\nI might also take a stab at this, once this PR (and its ancestor) is rebased to include it.",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-971880924,971880924,
Sjors,2021-11-29 08:19:25,"Rebased and updated the multisig descriptor test and example documentation to use `getxpub`. Unfortunately we still have to reuse existing wallet keys, e.g. `m/44h/1h/0h`, because `importdescriptors` can't derive private keys yet.",https://github.com/bitcoin/bitcoin/pull/22341#issuecomment-981388828,981388828,
Sjors,2021-06-25 15:17:29,"This fails in the current incarnation, because a freshly imported descriptor will not have access to the wallet seed. See todo in `rpcdump.cpp`",https://github.com/bitcoin/bitcoin/pull/22341#discussion_r658844504,658844504,test/functional/wallet_getxpub.py
Sjors,2021-06-28 16:26:24,"In addition to being an ugly hack, this is also incorrect and does not actually produce the correct master key.",https://github.com/bitcoin/bitcoin/pull/22341#discussion_r659936603,659936603,src/wallet/wallet.cpp
lsilva01,2021-07-10 01:58:17,"I received the following error while executing `./src/bitcoin-cli -rpcwallet=""descwallet"" getxpub ""m/87h/0h/0h""`:\n\n`Assertion failed: lock cs_desc_man not held in wallet/scriptpubkeyman.cpp:1747; locks held:\n'pwallet->cs_wallet' in wallet/rpcdump.cpp:1868 (in thread 'httpworker.0')`\n\nI changed the code below (adding `LOCK(desc_spk_man->cs_desc_man);`) and then it worked.\n```suggestion",https://github.com/bitcoin/bitcoin/pull/22341#discussion_r667274060,667274060,src/wallet/wallet.cpp
lsilva01,2021-07-10 02:05:30,"With a wallet different from the default one, I receive the error when sending to w2 address.\n`test_framework.authproxy.JSONRPCException: Insufficient funds (-6)`\n\nWith the change below, it worked.\n\n```suggestion\n        w1 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n```",https://github.com/bitcoin/bitcoin/pull/22341#discussion_r667274730,667274730,test/functional/wallet_getxpub.py
lsilva01,2021-07-10 02:07:26,"I think `self.sync_all()` is necessary for w2 to know that it received money.\n\n```suggestion\n        self.nodes[0].generate(1)\n        self.sync_all()\n```",https://github.com/bitcoin/bitcoin/pull/22341#discussion_r667274877,667274877,test/functional/wallet_getxpub.py
lsilva01,2021-07-10 02:09:13,Just confirming that I got the error: `test_framework.authproxy.JSONRPCException: Signing transaction failed (-6)`,https://github.com/bitcoin/bitcoin/pull/22341#discussion_r667275095,667275095,test/functional/wallet_getxpub.py
