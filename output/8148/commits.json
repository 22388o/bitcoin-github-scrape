[
  {
    "sha": "03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2M3MDliNDIyMzFiMWU0NTYwM2UxNWMzZGZjMWVkN2U4ZWNjZTcx",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2016-06-05T19:30:13Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2016-06-05T19:48:57Z"
      },
      "message": "Backport leveldb build integration to 0.12\n\nThis is a cherry-pick of a4625acb with minor conflict\nresolution.\n\nConflicts:\n\tsrc/Makefile.am\n\n=====\n\nleveldb: integrate leveldb into our buildsystem\n\nleveldb's buildsystem causes us a few problems:\n- breaks out-of-tree builds\n- forces flags used for some tools\n- limits cross builds\n\nRather than continuing to add wrappers around it, simply integrate it into our\nbuild.",
      "tree": {
        "sha": "352f3a4be03af07be1fd2634df6571492faee396",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/352f3a4be03af07be1fd2634df6571492faee396"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7ec24e336dc7db04f6680cb8b64c453b1ad2c9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ec24e336dc7db04f6680cb8b64c453b1ad2c9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ec24e336dc7db04f6680cb8b64c453b1ad2c9b"
      }
    ],
    "stats": {
      "total": 127,
      "additions": 107,
      "deletions": 20
    },
    "files": [
      {
        "sha": "05e7266a8a5e199056076d81952719cfcbc183a3",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
        "patch": "@@ -252,7 +252,7 @@ case $host in\n      fi\n \n      CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n      if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n        CXXFLAGS=\"$CXXFLAGS -w\"\n      fi\n@@ -274,7 +274,7 @@ case $host in\n      ;;\n   *darwin*)\n      TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n      if  test x$cross_compiling != xyes; then\n        BUILD_OS=darwin\n        AC_CHECK_PROG([PORT],port, port)\n@@ -336,9 +336,11 @@ case $host in\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *linux*)\n-     TARGET_OS=linux\n+     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n      ;;\n    *)\n+     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n+     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n      ;;\n esac\n \n@@ -523,6 +525,18 @@ if test x$use_reduce_exports = xyes; then\n   [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n fi\n \n+dnl This can go away when we require c++11\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS -std=c++0x\"\n+AC_MSG_CHECKING(for c++11 atomics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+  #include <atomic>\n+  ]],[[]])],\n+  [ AC_MSG_RESULT(yes); LEVELDB_ATOMIC_CPPFLAGS=\"-DLEVELDB_ATOMIC_PRESENT\"; LEVELDB_ATOMIC_CXXFLAGS=\"-std=c++0x\"],\n+  [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n LEVELDB_CPPFLAGS=\n LIBLEVELDB=\n LIBMEMENV=\n@@ -940,6 +954,8 @@ AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(LEVELDB_ATOMIC_CPPFLAGS)\n+AC_SUBST(LEVELDB_ATOMIC_CXXFLAGS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])"
      },
      {
        "sha": "37ff9bccaf5db8ce56b8a443902e517cdaa8aabe",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 7,
        "deletions": 17,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
        "patch": "@@ -3,21 +3,7 @@ DIST_SUBDIRS = secp256k1 univalue\n AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS)\n AM_CXXFLAGS = $(HARDENED_CXXFLAGS)\n AM_CPPFLAGS = $(HARDENED_CPPFLAGS)\n-\n-if EMBEDDED_LEVELDB\n-LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n-LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/helpers/memenv\n-LIBLEVELDB += $(builddir)/leveldb/libleveldb.a\n-LIBMEMENV  += $(builddir)/leveldb/libmemenv.a\n-\n-# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n-$(LIBLEVELDB): $(LIBMEMENV)\n-\n-$(LIBLEVELDB) $(LIBMEMENV):\n-\t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n-\t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n-          OPT=\"$(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS\"\n-endif\n+EXTRA_LIBRARIES =\n \n BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n@@ -37,13 +23,13 @@ LIBUNIVALUE=univalue/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n-  \n+\n $(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n-EXTRA_LIBRARIES = \\\n+EXTRA_LIBRARIES += \\\n   crypto/libbitcoin_crypto.a \\\n   libbitcoin_util.a \\\n   libbitcoin_common.a \\\n@@ -476,6 +462,10 @@ endif\n \t@test -f $(PROTOC)\n \t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)\n \n+if EMBEDDED_LEVELDB\n+include Makefile.leveldb.include\n+endif\n+\n if ENABLE_TESTS\n include Makefile.test.include\n endif"
      },
      {
        "sha": "36a6bc4095ad0d102dee19954606449776183dca",
        "filename": "src/Makefile.leveldb.include",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03c709b42231b1e45603e15c3dfc1ed7e8ecce71/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
        "patch": "@@ -0,0 +1,81 @@\n+LIBLEVELDB_INT = leveldb/libleveldb.a\n+LIBMEMENV_INT  = leveldb/libmemenv.a\n+\n+EXTRA_LIBRARIES += $(LIBLEVELDB_INT)\n+EXTRA_LIBRARIES += $(LIBMEMENV_INT)\n+\n+LIBLEVELDB += $(LIBLEVELDB_INT)\n+LIBMEMENV += $(LIBMEMENV_INT)\n+\n+LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n+LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/helpers/memenv\n+\n+LEVELDB_CPPFLAGS_INT =\n+LEVELDB_CPPFLAGS_INT += -I$(srcdir)/leveldb\n+LEVELDB_CPPFLAGS_INT += $(LEVELDB_TARGET_FLAGS)\n+LEVELDB_CPPFLAGS_INT += $(LEVELDB_ATOMIC_CPPFLAGS)\n+LEVELDB_CPPFLAGS_INT += -D__STDC_LIMIT_MACROS\n+\n+if TARGET_WINDOWS\n+LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1\n+else\n+LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_POSIX\n+endif\n+\n+LEVELDB_CXXFLAGS_INT =\n+LEVELDB_CXXFLAGS_INT += $(LEVELDB_ATOMIC_CXXFLAGS)\n+\n+leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)\n+leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(LEVELDB_CXXFLAGS_INT)\n+\n+leveldb_libleveldb_a_SOURCES=\n+leveldb_libleveldb_a_SOURCES += leveldb/db/builder.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/c.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/dbformat.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/db_impl.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/db_iter.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/dumpfile.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/filename.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/log_reader.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/log_writer.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/memtable.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/repair.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/table_cache.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/version_edit.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/version_set.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/db/write_batch.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/block_builder.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/block.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/filter_block.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/format.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/iterator.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/merger.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/table_builder.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/table.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/table/two_level_iterator.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/arena.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/bloom.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/cache.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/coding.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/comparator.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/crc32c.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env_posix.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env_win.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/filter_policy.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/hash.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/histogram.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/logging.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/options.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/status.cc\n+\n+if TARGET_WINDOWS\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env_win.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/port/port_win.cc\n+else\n+leveldb_libleveldb_a_SOURCES += leveldb/port/port_posix.cc\n+endif\n+\n+leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)\n+leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)\n+leveldb_libmemenv_a_SOURCES =  leveldb/helpers/memenv/memenv.cc"
      }
    ]
  },
  {
    "sha": "932aedd99a35809620f128d79f63a23ba49ceefd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzJhZWRkOTlhMzU4MDk2MjBmMTI4ZDc5ZjYzYTIzYmE0OWNlZWZk",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2016-04-22T07:21:09Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2016-06-08T13:29:27Z"
      },
      "message": "Cherry-pick of f59dceb (#7925) to 0.12.\n\n=====\n\nqt: Fix out-of-tree GUI builds\n\nWithout this patch:\n\n- When I compile the GUI from the bitcoin directory itself, it works as\n  expected.\n\n- When I build the GUI in an out-of-tree build, I cannot get it to\n  select tabs. When I click, say the \"Receive\" tab nothing happens,\n  the button selects but it doesn't switch the page. The rest - even\n  the debug window - seems to work.\n\nSee full discussion here:\nhttps://github.com/bitcoin/bitcoin/pull/7911#issuecomment-212413442\n\nThis turned out to be caused by a mismatch in the arguments to moc,\npreventing it from finding `bitcoin-config.h`. Fix this by passing\n`$(DEFAULT_INCLUDES)` to it, which gets set to the appropriate\npath by autoconf itself.",
      "tree": {
        "sha": "0150a1a2c15db1dc4f2d717295573b34dba7663d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0150a1a2c15db1dc4f2d717295573b34dba7663d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/932aedd99a35809620f128d79f63a23ba49ceefd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/932aedd99a35809620f128d79f63a23ba49ceefd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/932aedd99a35809620f128d79f63a23ba49ceefd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/932aedd99a35809620f128d79f63a23ba49ceefd/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03c709b42231b1e45603e15c3dfc1ed7e8ecce71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03c709b42231b1e45603e15c3dfc1ed7e8ecce71"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f42f531af4037aa0dec3f71dade96612128cf3f4",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/932aedd99a35809620f128d79f63a23ba49ceefd/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/932aedd99a35809620f128d79f63a23ba49ceefd/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=932aedd99a35809620f128d79f63a23ba49ceefd",
        "patch": "@@ -426,11 +426,11 @@ ui_%.h: %.ui\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo \"Error creating $@\"; false)\n \n %.moc: %.cpp\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n moc_%.cpp: %.h\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n %.qm: %.ts"
      }
    ]
  },
  {
    "sha": "9462e791b7decf5ec48974517e7b5aa330e6324b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDYyZTc5MWI3ZGVjZjVlYzQ4OTc0NTE3ZTdiNWFhMzMwZTYzMjRi",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2016-06-08T13:41:03Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2016-06-08T13:41:03Z"
      },
      "message": "This is a cherry-pick of 89c844d back to 0.12.\n\n=====\n\nRe-instate TARGET_OS=linux in configure.ac. Removed by 351abf9e035.",
      "tree": {
        "sha": "291e2a6e9fa27b7ba6b40f67b0d6c7c187e31f26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/291e2a6e9fa27b7ba6b40f67b0d6c7c187e31f26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9462e791b7decf5ec48974517e7b5aa330e6324b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9462e791b7decf5ec48974517e7b5aa330e6324b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9462e791b7decf5ec48974517e7b5aa330e6324b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9462e791b7decf5ec48974517e7b5aa330e6324b/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "932aedd99a35809620f128d79f63a23ba49ceefd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/932aedd99a35809620f128d79f63a23ba49ceefd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/932aedd99a35809620f128d79f63a23ba49ceefd"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "12e0302e4fe358759e977141760c65bd10eab7cf",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9462e791b7decf5ec48974517e7b5aa330e6324b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9462e791b7decf5ec48974517e7b5aa330e6324b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9462e791b7decf5ec48974517e7b5aa330e6324b",
        "patch": "@@ -336,6 +336,7 @@ case $host in\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *linux*)\n+     TARGET_OS=linux\n      LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n      ;;\n    *)"
      }
    ]
  }
]