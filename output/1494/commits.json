[
  {
    "sha": "7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGNkYjM4ZTQ5MWJiMmZiNGIzYjE2NjU1NzJhMWU4MDdjNDY2MWJk",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-06-21T02:31:04Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-06-21T02:31:04Z"
      },
      "message": "RPC: prepare to parallelization by pushing down LOCK2() into RPC actors\n\nNo behavior changes.  Simply pushes lock down into each RPC function.",
      "tree": {
        "sha": "2300ace6d3fa537517737c666e25d460a7e49d6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2300ace6d3fa537517737c666e25d460a7e49d6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d65e959baeb36a5d739fc693442ee6fdcfb8b47a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d65e959baeb36a5d739fc693442ee6fdcfb8b47a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d65e959baeb36a5d739fc693442ee6fdcfb8b47a"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 93,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8fdd6edb9ad3a979cf2222cd14f6c10f37c71642",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 89,
        "deletions": 6,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
        "patch": "@@ -416,6 +416,8 @@ string CRPCTable::help(string strCommand) const\n \n Value help(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"help [command]\\n\"\n@@ -431,6 +433,8 @@ Value help(const Array& params, bool fHelp)\n \n Value stop(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"stop\\n\"\n@@ -443,6 +447,8 @@ Value stop(const Array& params, bool fHelp)\n \n Value getblockcount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getblockcount\\n\"\n@@ -454,6 +460,8 @@ Value getblockcount(const Array& params, bool fHelp)\n \n Value getconnectioncount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getconnectioncount\\n\"\n@@ -465,6 +473,8 @@ Value getconnectioncount(const Array& params, bool fHelp)\n \n Value getdifficulty(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getdifficulty\\n\"\n@@ -476,6 +486,8 @@ Value getdifficulty(const Array& params, bool fHelp)\n \n Value getgenerate(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getgenerate\\n\"\n@@ -487,6 +499,8 @@ Value getgenerate(const Array& params, bool fHelp)\n \n Value setgenerate(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"setgenerate <generate> [genproclimit]\\n\"\n@@ -513,6 +527,8 @@ Value setgenerate(const Array& params, bool fHelp)\n \n Value gethashespersec(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"gethashespersec\\n\"\n@@ -526,6 +542,8 @@ Value gethashespersec(const Array& params, bool fHelp)\n \n Value getinfo(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getinfo\\n\"\n@@ -556,6 +574,8 @@ Value getinfo(const Array& params, bool fHelp)\n \n Value getmininginfo(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getmininginfo\\n\"\n@@ -578,6 +598,8 @@ Value getmininginfo(const Array& params, bool fHelp)\n \n Value getnewaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getnewaddress [account]\\n\"\n@@ -645,6 +667,8 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n \n Value getaccountaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccountaddress <account>\\n\"\n@@ -664,6 +688,8 @@ Value getaccountaddress(const Array& params, bool fHelp)\n \n Value setaccount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"setaccount <bitcoinaddress> <account>\\n\"\n@@ -694,6 +720,8 @@ Value setaccount(const Array& params, bool fHelp)\n \n Value getaccount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccount <bitcoinaddress>\\n\"\n@@ -713,6 +741,8 @@ Value getaccount(const Array& params, bool fHelp)\n \n Value getaddressesbyaccount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaddressesbyaccount <account>\\n\"\n@@ -734,6 +764,8 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n \n Value settxfee(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 1)\n         throw runtime_error(\n             \"settxfee <amount>\\n\"\n@@ -750,6 +782,8 @@ Value settxfee(const Array& params, bool fHelp)\n \n Value sendtoaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n             \"sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\\n\"\n@@ -782,6 +816,8 @@ Value sendtoaddress(const Array& params, bool fHelp)\n \n Value signmessage(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n             \"signmessage <bitcoinaddress> <message>\\n\"\n@@ -817,6 +853,8 @@ Value signmessage(const Array& params, bool fHelp)\n \n Value verifymessage(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 3)\n         throw runtime_error(\n             \"verifymessage <bitcoinaddress> <signature> <message>\\n\"\n@@ -854,6 +892,8 @@ Value verifymessage(const Array& params, bool fHelp)\n \n Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getreceivedbyaddress <bitcoinaddress> [minconf=1]\\n\"\n@@ -904,6 +944,8 @@ void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n \n Value getreceivedbyaccount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getreceivedbyaccount <account> [minconf=1]\\n\"\n@@ -974,6 +1016,8 @@ int64 GetAccountBalance(const string& strAccount, int nMinDepth)\n \n Value getbalance(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"getbalance [account] [minconf=1]\\n\"\n@@ -1027,6 +1071,8 @@ Value getbalance(const Array& params, bool fHelp)\n \n Value movecmd(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 3 || params.size() > 5)\n         throw runtime_error(\n             \"move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\\n\"\n@@ -1075,6 +1121,8 @@ Value movecmd(const Array& params, bool fHelp)\n \n Value sendfrom(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 3 || params.size() > 6)\n         throw runtime_error(\n             \"sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]\\n\"\n@@ -1115,6 +1163,8 @@ Value sendfrom(const Array& params, bool fHelp)\n \n Value sendmany(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n             \"sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\\n\"\n@@ -1179,6 +1229,8 @@ Value sendmany(const Array& params, bool fHelp)\n \n Value addmultisigaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 2 || params.size() > 3)\n     {\n         string msg = \"addmultisigaddress <nrequired> <'[\\\"key\\\",\\\"key\\\"]'> [account]\\n\"\n@@ -1350,6 +1402,8 @@ Value ListReceived(const Array& params, bool fByAccounts)\n \n Value listreceivedbyaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"listreceivedbyaddress [minconf=1] [includeempty=false]\\n\"\n@@ -1366,6 +1420,8 @@ Value listreceivedbyaddress(const Array& params, bool fHelp)\n \n Value listreceivedbyaccount(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"listreceivedbyaccount [minconf=1] [includeempty=false]\\n\"\n@@ -1469,6 +1525,8 @@ void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Ar\n \n Value listtransactions(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 3)\n         throw runtime_error(\n             \"listtransactions [account] [count=10] [from=0]\\n\"\n@@ -1544,6 +1602,8 @@ Value listtransactions(const Array& params, bool fHelp)\n \n Value listaccounts(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"listaccounts [minconf=1]\\n\"\n@@ -1595,6 +1655,8 @@ Value listaccounts(const Array& params, bool fHelp)\n \n Value listsinceblock(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp)\n         throw runtime_error(\n             \"listsinceblock [blockhash] [target-confirmations]\\n\"\n@@ -1716,6 +1778,8 @@ AnyTxToJSON(const uint256 hash, const CTransaction* ptx, Object& entry, const Ob\n \n Value gettransaction(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"gettransaction <txid> [decompositions]\\n\"\n@@ -1735,6 +1799,8 @@ Value gettransaction(const Array& params, bool fHelp)\n \n Value backupwallet(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"backupwallet <destination>\\n\"\n@@ -1749,6 +1815,8 @@ Value backupwallet(const Array& params, bool fHelp)\n \n Value keypoolrefill(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 0)\n         throw runtime_error(\n             \"keypoolrefill\\n\"\n@@ -1814,6 +1882,8 @@ void ThreadCleanWalletPassphrase(void* parg)\n \n Value walletpassphrase(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (pwalletMain->IsCrypted() && (fHelp || params.size() != 2))\n         throw runtime_error(\n             \"walletpassphrase <passphrase> <timeout>\\n\"\n@@ -1853,6 +1923,8 @@ Value walletpassphrase(const Array& params, bool fHelp)\n \n Value walletpassphrasechange(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (pwalletMain->IsCrypted() && (fHelp || params.size() != 2))\n         throw runtime_error(\n             \"walletpassphrasechange <oldpassphrase> <newpassphrase>\\n\"\n@@ -1886,6 +1958,8 @@ Value walletpassphrasechange(const Array& params, bool fHelp)\n \n Value walletlock(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (pwalletMain->IsCrypted() && (fHelp || params.size() != 0))\n         throw runtime_error(\n             \"walletlock\\n\"\n@@ -1909,6 +1983,8 @@ Value walletlock(const Array& params, bool fHelp)\n \n Value encryptwallet(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (!pwalletMain->IsCrypted() && (fHelp || params.size() != 1))\n         throw runtime_error(\n             \"encryptwallet <passphrase>\\n\"\n@@ -1976,6 +2052,8 @@ class DescribeAddressVisitor : public boost::static_visitor<Object>\n \n Value validateaddress(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"validateaddress <bitcoinaddress>\\n\"\n@@ -2005,6 +2083,8 @@ Value validateaddress(const Array& params, bool fHelp)\n \n Value getwork(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getwork [data]\\n\"\n@@ -2110,6 +2190,8 @@ Value getwork(const Array& params, bool fHelp)\n \n Value getmemorypool(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getmemorypool [data]\\n\"\n@@ -2196,6 +2278,8 @@ Value getmemorypool(const Array& params, bool fHelp)\n \n Value getblockhash(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getblockhash <index>\\n\"\n@@ -2214,6 +2298,8 @@ Value getblockhash(const Array& params, bool fHelp)\n \n Value getblock(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getblock <hash> [decompositions]\\n\"\n@@ -2235,6 +2321,8 @@ Value getblock(const Array& params, bool fHelp)\n \n Value sendrawtx(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 1)\n         throw runtime_error(\n             \"sendrawtx <hex string>\\n\"\n@@ -2872,12 +2960,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     try\n     {\n         // Execute\n-        Value result;\n-        {\n-            LOCK2(cs_main, pwalletMain->cs_wallet);\n-            result = pcmd->actor(params, false);\n-        }\n-        return result;\n+        return pcmd->actor(params, false);\n     }\n     catch (std::exception& e)\n     {"
      },
      {
        "sha": "64526939abe6e32773a92cfd5d57a5fb63c0a55b",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
        "patch": "@@ -34,6 +34,8 @@ class CTxDump\n \n Value importprivkey(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"importprivkey <bitcoinprivkey> [label]\\n\"\n@@ -71,6 +73,8 @@ Value importprivkey(const Array& params, bool fHelp)\n \n Value dumpprivkey(const Array& params, bool fHelp)\n {\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"dumpprivkey <bitcoinaddress>\\n\""
      }
    ]
  },
  {
    "sha": "34e128d18a0eb0f7a35ddca7d062e38ba544beca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGUxMjhkMThhMGViMGY3YTM1ZGRjYTdkMDYyZTM4YmE1NDRiZWNh",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-06-21T02:48:42Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-06-21T02:48:42Z"
      },
      "message": "RPC: locking cleanup, the low-hanging fruit\n\nNow that locks have been pushed down, we may remove locks in some obvious\ncases (help, stop), move the lock-taking down below initial param parsing in\nseveral cases, and correct a bug in one case (use cs_vNodes).",
      "tree": {
        "sha": "4e14e4c615f77431d9656e3dc97c9930fa6e0d0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e14e4c615f77431d9656e3dc97c9930fa6e0d0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34e128d18a0eb0f7a35ddca7d062e38ba544beca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e128d18a0eb0f7a35ddca7d062e38ba544beca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34e128d18a0eb0f7a35ddca7d062e38ba544beca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e128d18a0eb0f7a35ddca7d062e38ba544beca/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dcdb38e491bb2fb4b3b1665572a1e807c4661bd"
      }
    ],
    "stats": {
      "total": 152,
      "additions": 74,
      "deletions": 78
    },
    "files": [
      {
        "sha": "1f33494071cc2f6b6af7929c276cd6290f61d5a6",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 70,
        "deletions": 74,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e128d18a0eb0f7a35ddca7d062e38ba544beca/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e128d18a0eb0f7a35ddca7d062e38ba544beca/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=34e128d18a0eb0f7a35ddca7d062e38ba544beca",
        "patch": "@@ -416,8 +416,6 @@ string CRPCTable::help(string strCommand) const\n \n Value help(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"help [command]\\n\"\n@@ -433,12 +431,11 @@ Value help(const Array& params, bool fHelp)\n \n Value stop(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"stop\\n\"\n             \"Stop Bitcoin server.\");\n+\n     // Shutdown will take long enough that the response should get back\n     StartShutdown();\n     return \"Bitcoin server stopping\";\n@@ -447,60 +444,58 @@ Value stop(const Array& params, bool fHelp)\n \n Value getblockcount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getblockcount\\n\"\n             \"Returns the number of blocks in the longest block chain.\");\n \n+    LOCK(cs_main);\n+\n     return nBestHeight;\n }\n \n \n Value getconnectioncount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getconnectioncount\\n\"\n             \"Returns the number of connections to other nodes.\");\n \n+    LOCK(cs_vNodes);\n+\n     return (int)vNodes.size();\n }\n \n \n Value getdifficulty(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getdifficulty\\n\"\n             \"Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\");\n \n+    LOCK(cs_main);\n+\n     return GetDifficulty();\n }\n \n \n Value getgenerate(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getgenerate\\n\"\n             \"Returns true or false.\");\n \n+    LOCK(cs_main);\n+\n     return GetBoolArg(\"-gen\");\n }\n \n \n Value setgenerate(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"setgenerate <generate> [genproclimit]\\n\"\n@@ -511,6 +506,8 @@ Value setgenerate(const Array& params, bool fHelp)\n     if (params.size() > 0)\n         fGenerate = params[0].get_bool();\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (params.size() > 1)\n     {\n         int nGenProcLimit = params[1].get_int();\n@@ -527,13 +524,13 @@ Value setgenerate(const Array& params, bool fHelp)\n \n Value gethashespersec(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"gethashespersec\\n\"\n             \"Returns a recent hashes per second performance measurement while generating.\");\n \n+    LOCK(cs_main);\n+\n     if (GetTimeMillis() - nHPSTimerStart > 8000)\n         return (boost::int64_t)0;\n     return (boost::int64_t)dHashesPerSec;\n@@ -542,13 +539,13 @@ Value gethashespersec(const Array& params, bool fHelp)\n \n Value getinfo(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getinfo\\n\"\n             \"Returns an object containing various state info.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CService addrProxy;\n     GetProxy(NET_IPV4, addrProxy);\n \n@@ -574,13 +571,13 @@ Value getinfo(const Array& params, bool fHelp)\n \n Value getmininginfo(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getmininginfo\\n\"\n             \"Returns an object containing mining-related information.\");\n \n+    LOCK(cs_main);\n+\n     Object obj;\n     obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n     obj.push_back(Pair(\"currentblocksize\",(uint64_t)nLastBlockSize));\n@@ -598,8 +595,6 @@ Value getmininginfo(const Array& params, bool fHelp)\n \n Value getnewaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getnewaddress [account]\\n\"\n@@ -612,6 +607,8 @@ Value getnewaddress(const Array& params, bool fHelp)\n     if (params.size() > 0)\n         strAccount = AccountFromValue(params[0]);\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (!pwalletMain->IsLocked())\n         pwalletMain->TopUpKeyPool();\n \n@@ -667,8 +664,6 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n \n Value getaccountaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccountaddress <account>\\n\"\n@@ -677,6 +672,8 @@ Value getaccountaddress(const Array& params, bool fHelp)\n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount = AccountFromValue(params[0]);\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     Value ret;\n \n     ret = GetAccountAddress(strAccount).ToString();\n@@ -688,8 +685,6 @@ Value getaccountaddress(const Array& params, bool fHelp)\n \n Value setaccount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"setaccount <bitcoinaddress> <account>\\n\"\n@@ -699,6 +694,7 @@ Value setaccount(const Array& params, bool fHelp)\n     if (!address.IsValid())\n         throw JSONRPCError(-5, \"Invalid Bitcoin address\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     string strAccount;\n     if (params.size() > 1)\n@@ -720,8 +716,6 @@ Value setaccount(const Array& params, bool fHelp)\n \n Value getaccount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccount <bitcoinaddress>\\n\"\n@@ -731,6 +725,8 @@ Value getaccount(const Array& params, bool fHelp)\n     if (!address.IsValid())\n         throw JSONRPCError(-5, \"Invalid Bitcoin address\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAccount;\n     map<CTxDestination, string>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n     if (mi != pwalletMain->mapAddressBook.end() && !(*mi).second.empty())\n@@ -741,15 +737,15 @@ Value getaccount(const Array& params, bool fHelp)\n \n Value getaddressesbyaccount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaddressesbyaccount <account>\\n\"\n             \"Returns the list of addresses for the given account.\");\n \n     string strAccount = AccountFromValue(params[0]);\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Find all addresses that have the given account\n     Array ret;\n     BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n@@ -764,8 +760,6 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n \n Value settxfee(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 1)\n         throw runtime_error(\n             \"settxfee <amount>\\n\"\n@@ -776,14 +770,14 @@ Value settxfee(const Array& params, bool fHelp)\n     if (params[0].get_real() != 0.0)\n         nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n \n+    LOCK(cs_main);\n+\n     nTransactionFee = nAmount;\n     return true;\n }\n \n Value sendtoaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n             \"sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\\n\"\n@@ -797,6 +791,8 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     // Amount\n     int64 nAmount = AmountFromValue(params[1]);\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Wallet comments\n     CWalletTx wtx;\n     if (params.size() > 2 && params[2].type() != null_type && !params[2].get_str().empty())\n@@ -816,13 +812,13 @@ Value sendtoaddress(const Array& params, bool fHelp)\n \n Value signmessage(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n             \"signmessage <bitcoinaddress> <message>\\n\"\n             \"Sign a message with the private key of an address\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     EnsureWalletIsUnlocked();\n \n     string strAddress = params[0].get_str();\n@@ -853,8 +849,6 @@ Value signmessage(const Array& params, bool fHelp)\n \n Value verifymessage(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 3)\n         throw runtime_error(\n             \"verifymessage <bitcoinaddress> <signature> <message>\\n\"\n@@ -864,6 +858,8 @@ Value verifymessage(const Array& params, bool fHelp)\n     string strSign     = params[1].get_str();\n     string strMessage  = params[2].get_str();\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CBitcoinAddress addr(strAddress);\n     if (!addr.IsValid())\n         throw JSONRPCError(-3, \"Invalid address\");\n@@ -892,13 +888,13 @@ Value verifymessage(const Array& params, bool fHelp)\n \n Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getreceivedbyaddress <bitcoinaddress> [minconf=1]\\n\"\n             \"Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Bitcoin address\n     CBitcoinAddress address = CBitcoinAddress(params[0].get_str());\n     CScript scriptPubKey;\n@@ -944,8 +940,6 @@ void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n \n Value getreceivedbyaccount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getreceivedbyaccount <account> [minconf=1]\\n\"\n@@ -956,6 +950,8 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n     if (params.size() > 1)\n         nMinDepth = params[1].get_int();\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Get the set of pub keys assigned to account\n     string strAccount = AccountFromValue(params[0]);\n     set<CTxDestination> setAddress;\n@@ -1016,14 +1012,14 @@ int64 GetAccountBalance(const string& strAccount, int nMinDepth)\n \n Value getbalance(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"getbalance [account] [minconf=1]\\n\"\n             \"If [account] is not specified, returns the server's total available balance.\\n\"\n             \"If [account] is specified, returns the balance in the account.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (params.size() == 0)\n         return  ValueFromAmount(pwalletMain->GetBalance());\n \n@@ -1071,8 +1067,6 @@ Value getbalance(const Array& params, bool fHelp)\n \n Value movecmd(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 3 || params.size() > 5)\n         throw runtime_error(\n             \"move <fromaccount> <toaccount> <amount> [minconf=1] [comment]\\n\"\n@@ -1088,6 +1082,8 @@ Value movecmd(const Array& params, bool fHelp)\n     if (params.size() > 4)\n         strComment = params[4].get_str();\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n     if (!walletdb.TxnBegin())\n         throw JSONRPCError(-20, \"database error\");\n@@ -1229,8 +1225,6 @@ Value sendmany(const Array& params, bool fHelp)\n \n Value addmultisigaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 2 || params.size() > 3)\n     {\n         string msg = \"addmultisigaddress <nrequired> <'[\\\"key\\\",\\\"key\\\"]'> [account]\\n\"\n@@ -1246,6 +1240,8 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n     if (params.size() > 2)\n         strAccount = AccountFromValue(params[2]);\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Gather public keys\n     if (nRequired < 1)\n         throw runtime_error(\"a multisignature address must require at least one key to redeem\");\n@@ -1402,8 +1398,6 @@ Value ListReceived(const Array& params, bool fByAccounts)\n \n Value listreceivedbyaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"listreceivedbyaddress [minconf=1] [includeempty=false]\\n\"\n@@ -1415,13 +1409,13 @@ Value listreceivedbyaddress(const Array& params, bool fHelp)\n             \"  \\\"amount\\\" : total amount received by the address\\n\"\n             \"  \\\"confirmations\\\" : number of confirmations of the most recent transaction included\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     return ListReceived(params, false);\n }\n \n Value listreceivedbyaccount(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"listreceivedbyaccount [minconf=1] [includeempty=false]\\n\"\n@@ -1432,6 +1426,8 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n             \"  \\\"amount\\\" : total amount received by addresses with this account\\n\"\n             \"  \\\"confirmations\\\" : number of confirmations of the most recent transaction included\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     return ListReceived(params, true);\n }\n \n@@ -1525,8 +1521,6 @@ void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Ar\n \n Value listtransactions(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 3)\n         throw runtime_error(\n             \"listtransactions [account] [count=10] [from=0]\\n\"\n@@ -1547,6 +1541,8 @@ Value listtransactions(const Array& params, bool fHelp)\n     if (nFrom < 0)\n         throw JSONRPCError(-8, \"Negative from\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     Array ret;\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n \n@@ -1602,8 +1598,6 @@ Value listtransactions(const Array& params, bool fHelp)\n \n Value listaccounts(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"listaccounts [minconf=1]\\n\"\n@@ -1613,6 +1607,8 @@ Value listaccounts(const Array& params, bool fHelp)\n     if (params.size() > 0)\n         nMinDepth = params[0].get_int();\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     map<string, int64> mapAccountBalances;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& entry, pwalletMain->mapAddressBook) {\n         if (IsMine(*pwalletMain, entry.first)) // This address belongs to me\n@@ -1655,13 +1651,13 @@ Value listaccounts(const Array& params, bool fHelp)\n \n Value listsinceblock(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp)\n         throw runtime_error(\n             \"listsinceblock [blockhash] [target-confirmations]\\n\"\n             \"Get all transactions in blocks since block [blockhash], or all transactions if omitted\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CBlockIndex *pindex = NULL;\n     int target_confirms = 1;\n \n@@ -1778,8 +1774,6 @@ AnyTxToJSON(const uint256 hash, const CTransaction* ptx, Object& entry, const Ob\n \n Value gettransaction(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"gettransaction <txid> [decompositions]\\n\"\n@@ -1788,6 +1782,8 @@ Value gettransaction(const Array& params, bool fHelp)\n     uint256 hash;\n     hash.SetHex(params[0].get_str());\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     Object entry;\n \n     AnyTxToJSON(hash, NULL, entry,\n@@ -1799,13 +1795,13 @@ Value gettransaction(const Array& params, bool fHelp)\n \n Value backupwallet(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"backupwallet <destination>\\n\"\n             \"Safely copies wallet.dat to destination, which can be a directory or a path with filename.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strDest = params[0].get_str();\n     BackupWallet(*pwalletMain, strDest);\n \n@@ -2052,8 +2048,6 @@ class DescribeAddressVisitor : public boost::static_visitor<Object>\n \n Value validateaddress(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"validateaddress <bitcoinaddress>\\n\"\n@@ -2062,6 +2056,8 @@ Value validateaddress(const Array& params, bool fHelp)\n     CBitcoinAddress address(params[0].get_str());\n     bool isValid = address.IsValid();\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     Object ret;\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n@@ -2083,8 +2079,6 @@ Value validateaddress(const Array& params, bool fHelp)\n \n Value getwork(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getwork [data]\\n\"\n@@ -2095,6 +2089,8 @@ Value getwork(const Array& params, bool fHelp)\n             \"  \\\"target\\\" : little endian hash target\\n\"\n             \"If [data] is specified, tries to solve the block and returns true if it was successful.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (vNodes.empty())\n         throw JSONRPCError(-9, \"Bitcoin is not connected!\");\n \n@@ -2190,8 +2186,6 @@ Value getwork(const Array& params, bool fHelp)\n \n Value getmemorypool(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getmemorypool [data]\\n\"\n@@ -2207,6 +2201,8 @@ Value getmemorypool(const Array& params, bool fHelp)\n             \"  \\\"bits\\\" : compressed target of next block\\n\"\n             \"If [data] is specified, tries to solve the block and returns true if it was successful.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (params.size() == 0)\n     {\n         if (vNodes.empty())\n@@ -2278,13 +2274,13 @@ Value getmemorypool(const Array& params, bool fHelp)\n \n Value getblockhash(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getblockhash <index>\\n\"\n             \"Returns hash of block in best-block-chain at <index>.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     int nHeight = params[0].get_int();\n     if (nHeight < 0 || nHeight > nBestHeight)\n         throw runtime_error(\"Block number out of range.\");\n@@ -2298,8 +2294,6 @@ Value getblockhash(const Array& params, bool fHelp)\n \n Value getblock(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getblock <hash> [decompositions]\\n\"\n@@ -2308,6 +2302,8 @@ Value getblock(const Array& params, bool fHelp)\n     std::string strHash = params[0].get_str();\n     uint256 hash(strHash);\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (mapBlockIndex.count(hash) == 0)\n         throw JSONRPCError(-5, \"Block not found\");\n \n@@ -2321,8 +2317,6 @@ Value getblock(const Array& params, bool fHelp)\n \n Value sendrawtx(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 1)\n         throw runtime_error(\n             \"sendrawtx <hex string>\\n\"\n@@ -2341,6 +2335,8 @@ Value sendrawtx(const Array& params, bool fHelp)\n         throw JSONRPCError(-22, \"TX decode failed\");\n     }\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // push to local node\n     CTxDB txdb(\"r\");\n     if (!tx.AcceptToMemoryPool(txdb))"
      },
      {
        "sha": "88b04b9bb1ed59d119b9ad2d16986c6bb1945907",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e128d18a0eb0f7a35ddca7d062e38ba544beca/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e128d18a0eb0f7a35ddca7d062e38ba544beca/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=34e128d18a0eb0f7a35ddca7d062e38ba544beca",
        "patch": "@@ -34,8 +34,6 @@ class CTxDump\n \n Value importprivkey(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"importprivkey <bitcoinprivkey> [label]\\n\"\n@@ -50,6 +48,8 @@ Value importprivkey(const Array& params, bool fHelp)\n \n     if (!fGood) throw JSONRPCError(-5,\"Invalid private key\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CKey key;\n     bool fCompressed;\n     CSecret secret = vchSecret.GetSecret(fCompressed);\n@@ -73,13 +73,13 @@ Value importprivkey(const Array& params, bool fHelp)\n \n Value dumpprivkey(const Array& params, bool fHelp)\n {\n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"dumpprivkey <bitcoinaddress>\\n\"\n             \"Reveals the private key corresponding to <bitcoinaddress>.\");\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAddress = params[0].get_str();\n     CBitcoinAddress address;\n     if (!address.SetString(strAddress))"
      }
    ]
  },
  {
    "sha": "957f0899fc5ecefd2f63fdb0a65527b3252e2bed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTdmMDg5OWZjNWVjZWZkMmY2M2ZkYjBhNjU1MjdiMzI1MmUyYmVk",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-06-21T19:47:55Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-06-21T19:47:55Z"
      },
      "message": "RPC: don't hold unnecessary locks in getwork, getmemorypool, getblock[hash]",
      "tree": {
        "sha": "b00cb7425475b3dfd987b68ad0dc80ffe7c21cb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b00cb7425475b3dfd987b68ad0dc80ffe7c21cb1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/957f0899fc5ecefd2f63fdb0a65527b3252e2bed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/957f0899fc5ecefd2f63fdb0a65527b3252e2bed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/957f0899fc5ecefd2f63fdb0a65527b3252e2bed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/957f0899fc5ecefd2f63fdb0a65527b3252e2bed/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "34e128d18a0eb0f7a35ddca7d062e38ba544beca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e128d18a0eb0f7a35ddca7d062e38ba544beca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34e128d18a0eb0f7a35ddca7d062e38ba544beca"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 14,
      "deletions": 7
    },
    "files": [
      {
        "sha": "d6a7fca1430437930ed13375447181fb5b766117",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/957f0899fc5ecefd2f63fdb0a65527b3252e2bed/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/957f0899fc5ecefd2f63fdb0a65527b3252e2bed/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=957f0899fc5ecefd2f63fdb0a65527b3252e2bed",
        "patch": "@@ -2089,16 +2089,19 @@ Value getwork(const Array& params, bool fHelp)\n             \"  \\\"target\\\" : little endian hash target\\n\"\n             \"If [data] is specified, tries to solve the block and returns true if it was successful.\");\n \n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n+    {\n+    LOCK(cs_vNodes);\n     if (vNodes.empty())\n         throw JSONRPCError(-9, \"Bitcoin is not connected!\");\n+    }\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     if (IsInitialBlockDownload())\n         throw JSONRPCError(-10, \"Bitcoin is downloading blocks...\");\n \n     typedef map<uint256, pair<CBlock*, CScript> > mapNewBlock_t;\n-    static mapNewBlock_t mapNewBlock;    // FIXME: thread safety\n+    static mapNewBlock_t mapNewBlock;\n     static vector<CBlock*> vNewBlock;\n     static CReserveKey reservekey(pwalletMain);\n \n@@ -2201,12 +2204,15 @@ Value getmemorypool(const Array& params, bool fHelp)\n             \"  \\\"bits\\\" : compressed target of next block\\n\"\n             \"If [data] is specified, tries to solve the block and returns true if it was successful.\");\n \n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n-\n     if (params.size() == 0)\n     {\n+        {\n+        LOCK(cs_vNodes);\n         if (vNodes.empty())\n             throw JSONRPCError(-9, \"Bitcoin is not connected!\");\n+        }\n+\n+        LOCK2(cs_main, pwalletMain->cs_wallet);\n \n         if (IsInitialBlockDownload())\n             throw JSONRPCError(-10, \"Bitcoin is downloading blocks...\");\n@@ -2268,6 +2274,7 @@ Value getmemorypool(const Array& params, bool fHelp)\n         CBlock pblock;\n         ssBlock >> pblock;\n \n+        LOCK(cs_main);\n         return ProcessBlock(NULL, &pblock);\n     }\n }\n@@ -2279,7 +2286,7 @@ Value getblockhash(const Array& params, bool fHelp)\n             \"getblockhash <index>\\n\"\n             \"Returns hash of block in best-block-chain at <index>.\");\n \n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n+    LOCK(cs_main);\n \n     int nHeight = params[0].get_int();\n     if (nHeight < 0 || nHeight > nBestHeight)\n@@ -2302,7 +2309,7 @@ Value getblock(const Array& params, bool fHelp)\n     std::string strHash = params[0].get_str();\n     uint256 hash(strHash);\n \n-    LOCK2(cs_main, pwalletMain->cs_wallet);\n+    LOCK(cs_main);\n \n     if (mapBlockIndex.count(hash) == 0)\n         throw JSONRPCError(-5, \"Block not found\");"
      }
    ]
  }
]