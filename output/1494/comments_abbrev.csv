luke-jr,2012-06-21T03:17:41Z,I like this one a lot better.\n,https://github.com/bitcoin/bitcoin/pull/1494#issuecomment-6473284,6473284,
gavinandresen,2012-06-22T15:49:50Z,"This is the way we used to do it (each RPC command acquired the locks it needed), and we were constantly battling people adding new RPC commands that worked in testing and then blew up in production, because they didn't acquire the right locks, or they acquired the right locks in the wrong order.\n\nI like the other approach:  make the default safe, but if you know what you're doing you can do you",https://github.com/bitcoin/bitcoin/pull/1494#issuecomment-6510985,6510985,
laanwj,2012-07-18T11:34:29Z,"The other pull is safer. It allows for a slow transition to finer-grained locking, optimizing where it matters. This is a big change at once, and it's easy to forget one or two locks.\n",https://github.com/bitcoin/bitcoin/pull/1494#issuecomment-7064927,7064927,
BitcoinPullTester,2012-08-09T19:13:54Z,"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/957f0899fc5ecefd2f63fdb0a65527b3252e2bed for binaries and test log.\n\nThis pull does not merge cleanly onto current master\n",https://github.com/bitcoin/bitcoin/pull/1494#issuecomment-7623947,7623947,
jgarzik,2012-08-21T15:50:30Z,Closing.  We're going with the table driven approach for now (#1493).\n,https://github.com/bitcoin/bitcoin/pull/1494#issuecomment-7905664,7905664,
TheBlueMatt,2012-06-27T15:14:07Z,Also need cs_vNodes a few lines down.\n,https://github.com/bitcoin/bitcoin/pull/1494#discussion_r1060695,1060695,src/bitcoinrpc.cpp
