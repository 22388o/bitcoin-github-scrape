[
  {
    "sha": "fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJkZjBjZDNjMTU5MzRjY2Q0Zjc2OTc4YWQ0ZDk1ZTg3NjZhYzRh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-09-07T15:24:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-09-28T18:31:28Z"
      },
      "message": "validation: Remove useless call to mempool->clear()\n\nThe mempool.clear() in UnloadBlockIndex has been added in commit 51598b2\nto clear global state between unit tests. Now that there is no global\nmempool anymore, this it not needed anymore. Also, the clear isn't used\nfor anything else in the current code.",
      "tree": {
        "sha": "78e6d42fda21eef3f0bd8f14b69ed0f3e1dc5d2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78e6d42fda21eef3f0bd8f14b69ed0f3e1dc5d2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjPMgwAiFKIUnZ5vRbGYyfOsl1Tgt1JGvo0e3RwchlszPsd7qVLrhM8Fqmlw6xI\nmU3ze42ZGIACUv5PbWQCSVEzi67AcUYMLmcxpRrW07yQnlMuUDpiOpdNzGd7xQsL\n7fXXS0t2XwDZkMXj8jPyWzGBy71Bpp9SjGIg1bVHf3b31GSyqYjbc1CZX3m4d/Ot\n6u9E/+gvlFEoT0OMR+n7Vkx0iHN+C1praTFavCQlso5YY+QrJRVXagdhxki4y3gJ\n2kORWekL7j9jY/m2B43uifDkUOuARiq0EBOWs3h4mS9Fg/79JLUujZDPBs80xv6Z\n5jNbrN0Ili7ljmc+XfNpd+T5wKZtAvE1QdEeGCakJQV0ENhX3XzfwL19Y941+u1j\ni1qWGpdSh9F/+wRDHF8QhFM0ddvUYqPcXSyQ1nMfWMRTh9jn+R4UMlUKD4z24OAI\nVMrLrEOx8VcIrsWZ62/skOeOD8OT4HFD2vsMaFSu8mZwXbsVhZ1Vk+9Kd8osLUB3\ncpc4z7Xg\n=HhFK\n-----END PGP SIGNATURE-----",
        "payload": "tree 78e6d42fda21eef3f0bd8f14b69ed0f3e1dc5d2b\nparent c95784e3d31dc557b175181bc034339df22cb5fd\nauthor MarcoFalke <falke.marco@gmail.com> 1599492296 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1601317888 +0200\n\nvalidation: Remove useless call to mempool->clear()\n\nThe mempool.clear() in UnloadBlockIndex has been added in commit 51598b2\nto clear global state between unit tests. Now that there is no global\nmempool anymore, this it not needed anymore. Also, the clear isn't used\nfor anything else in the current code.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c95784e3d31dc557b175181bc034339df22cb5fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c95784e3d31dc557b175181bc034339df22cb5fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c95784e3d31dc557b175181bc034339df22cb5fd"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "532e20147b96600a276a267883d929af0bd079e0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
        "patch": "@@ -1563,7 +1563,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n \n-                UnloadBlockIndex(node.mempool.get(), chainman);\n+                UnloadBlockIndex(chainman);\n \n                 // new CBlockTreeDB tries to delete the existing file, which\n                 // fails if it's still open from the previous loop. Close it first:"
      },
      {
        "sha": "10c978f39600438b42d9e052f280dbe8460f617d",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
        "patch": "@@ -86,7 +86,7 @@ void AppTests::appTests()\n     AbortShutdown();\n     {\n         LOCK(cs_main);\n-        UnloadBlockIndex(/* mempool */ nullptr, g_chainman);\n+        UnloadBlockIndex(g_chainman);\n         g_chainman.Reset();\n     }\n }"
      },
      {
        "sha": "e5d1350c8a3817f0deb40c73c74360b652897bb1",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
        "patch": "@@ -187,7 +187,7 @@ TestingSetup::~TestingSetup()\n     m_node.connman.reset();\n     m_node.banman.reset();\n     m_node.args = nullptr;\n-    UnloadBlockIndex(m_node.mempool.get(), *m_node.chainman);\n+    UnloadBlockIndex(*m_node.chainman);\n     m_node.mempool.reset();\n     m_node.scheduler.reset();\n     m_node.chainman->Reset();"
      },
      {
        "sha": "dd2af709197150d56c4472b6f7facbbb20104e4b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
        "patch": "@@ -4588,13 +4588,12 @@ void CChainState::UnloadBlockIndex() {\n // May NOT be used after any connections are up as much\n // of the peer-processing logic assumes a consistent\n // block index state\n-void UnloadBlockIndex(CTxMemPool* mempool, ChainstateManager& chainman)\n+void UnloadBlockIndex(ChainstateManager& chainman)\n {\n     LOCK(cs_main);\n     chainman.Unload();\n     pindexBestInvalid = nullptr;\n     pindexBestHeader = nullptr;\n-    if (mempool) mempool->clear();\n     vinfoBlockFile.clear();\n     nLastBlockFile = 0;\n     setDirtyBlockIndex.clear();"
      },
      {
        "sha": "ce76518ee210838352805c536d3cca4786caf3fd",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa2df0cd3c15934ccd4f76978ad4d95e8766ac4a",
        "patch": "@@ -157,7 +157,7 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */\n bool LoadGenesisBlock(const CChainParams& chainparams);\n /** Unload database information */\n-void UnloadBlockIndex(CTxMemPool* mempool, ChainstateManager& chainman);\n+void UnloadBlockIndex(ChainstateManager& chainman);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck(int worker_num);\n /**"
      }
    ]
  }
]