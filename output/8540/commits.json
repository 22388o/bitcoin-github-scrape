[
  {
    "sha": "b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGE5YWE1MTFjOTVhMWJkMGRhOGFlMzYzYjNiOWMwYjNiN2FmZTRl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-08-18T14:58:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-08-18T14:58:25Z"
      },
      "message": "qt: Fix random segfault when closing \"Choose data directory\" dialog\n\nThe `pickDataDirectory()` function was calling `exit(0)` to quit\nthe application when the user closes the dialog without choosing\na data directory.\n\nThis is a bad idea because a background thread is created (to\ncheck free space on the drive of the currently selected datadir).\nThe thread is not stopped and unwound properly, resulting in a potential\nrace condition somewhere deep in Qt.\n\nSo replace the `exit()` by a boolean return value, and let the\nstack unwind normally.",
      "tree": {
        "sha": "8aa54ab822f23670a1e8cce4520e0b2baa114d6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8aa54ab822f23670a1e8cce4520e0b2baa114d6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8250de13587ed05ca45df3e12c5dc9bcb1500e2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8250de13587ed05ca45df3e12c5dc9bcb1500e2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8250de13587ed05ca45df3e12c5dc9bcb1500e2c"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 10,
      "deletions": 5
    },
    "files": [
      {
        "sha": "430e6dd0e8df85928a998583f843042e3e1f814f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
        "patch": "@@ -578,7 +578,8 @@ int main(int argc, char *argv[])\n \n     /// 5. Now that settings and translations are available, ask user for data directory\n     // User language is set up: pick a data directory\n-    Intro::pickDataDirectory();\n+    if (!Intro::pickDataDirectory())\n+        return 0;\n \n     /// 6. Determine availability of data directory and parse bitcoin.conf\n     /// - Do not call GetDataDir(true) before this step finishes"
      },
      {
        "sha": "6a5740e21d3cbca28748bf5ec07f84e88df6fe95",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
        "patch": "@@ -165,14 +165,14 @@ QString Intro::getDefaultDataDirectory()\n     return GUIUtil::boostPathToQString(GetDefaultDataDir());\n }\n \n-void Intro::pickDataDirectory()\n+bool Intro::pickDataDirectory()\n {\n     namespace fs = boost::filesystem;\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings\n        or show a picking dialog */\n     if(!GetArg(\"-datadir\", \"\").empty())\n-        return;\n+        return true;\n     /* 1) Default data directory for operating system */\n     QString dataDir = getDefaultDataDirectory();\n     /* 2) Allow QSettings to override default dir */\n@@ -190,7 +190,7 @@ void Intro::pickDataDirectory()\n             if(!intro.exec())\n             {\n                 /* Cancel clicked */\n-                exit(0);\n+                return false;\n             }\n             dataDir = intro.getDataDirectory();\n             try {\n@@ -211,6 +211,7 @@ void Intro::pickDataDirectory()\n      */\n     if(dataDir != getDefaultDataDirectory())\n         SoftSetArg(\"-datadir\", GUIUtil::qstringToBoostPath(dataDir).string()); // use OS locale for path setting\n+    return true;\n }\n \n void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable)"
      },
      {
        "sha": "ee768a7ad8d1df3049839e2673d9b2583854780f",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=b4a9aa511c95a1bd0da8ae363b3b9c0b3b7afe4e",
        "patch": "@@ -35,10 +35,13 @@ class Intro : public QDialog\n     /**\n      * Determine data directory. Let the user choose if the current one doesn't exist.\n      *\n+     * @returns true if a data directory was selected, false if the user cancelled the selection\n+     * dialog.\n+     *\n      * @note do NOT call global GetDataDir() before calling this function, this\n      * will cause the wrong path to be cached.\n      */\n-    static void pickDataDirectory();\n+    static bool pickDataDirectory();\n \n     /**\n      * Determine default data directory for operating system."
      }
    ]
  }
]