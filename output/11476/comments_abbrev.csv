sipa,2017-10-10T20:26:42Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-335597201,335597201,
jonasschnelli,2017-10-10T20:38:51Z,"Nice clean PR!\nutACK ebc7c2ff3c31a3a5377e781d2239dae44e7b602e",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-335600593,335600593,
meshcollider,2017-10-11T02:46:40Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-335665977,335665977,
ryanofsky,2017-10-12T15:18:44Z,"I had to make another change to avoid travis failures. For some reason the get_fileid call was failing with error 22 in accounting tests (strangely only when accounting tests were run in conjunction with other tests, not when running standalone). I fixed it by skipping the get_fileid check on in-memory databases, which actually makes sense anyway.\n\nUpdated e32c2a51b757ab764ec5dbe8bf04b3fc4aa3c",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-336170496,336170496,
jnewbery,2017-10-12T21:18:45Z,"Tested ACK 4164132f6b475d3a3b4f1492f22f515cdb98fcd8\n\nI think you could improve the code comment by saying that bdb guarantees file identification strings for different databases to be unique, and perhaps linking to the documentation (https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html).",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-336273913,336273913,
ryanofsky,2017-10-12T21:36:02Z,"Thanks, updated comment 4164132f6b475d3a3b4f1492f22f515cdb98fcd8 -> f98832222c17c25814b9a18859e72f5041dfb55d ([pr/wid.3](https://github.com/ryanofsky/bitcoin/commits/pr/wid.3) -> [pr/wid.4](https://github.com/ryanofsky/bitcoin/commits/pr/wid.4))\n\nI didn't include the oracle link originally because I wasn't sure if the URL would be stable, but I realize the comment doesn't really make sense wit",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-336279478,336279478,
jnewbery,2017-10-12T21:57:28Z,"> I didn't include the oracle link originally because I wasn't sure if the URL would be stable\n\nYes, I considered that as well. I think it's ok to add the link now. If it dies or changes, then the comment can be updated or removed. For now, it's adding useful additional context.\n\nI can confirm that your new commit updates the comment. It also makes the following change:\n\n```\n-    u_i",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-336285860,336285860,
ryanofsky,2017-10-12T22:01:24Z,"> Was that intentional?\n\nYeah, I added the zero initialization when the get_fileid call was failing and I was considering making it optional, but it's not needed now.",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-336287044,336287044,
jnewbery,2017-10-13T19:09:06Z,Tested ACK f98832222c17c25814b9a18859e72f5041dfb55d,https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-336541882,336541882,
laanwj,2017-10-19T13:07:53Z,"Needs rebase for #11492, otherwise seems ready to merge.",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-337902107,337902107,
ryanofsky,2017-10-19T14:44:06Z,"Rebased f98832222c17c25814b9a18859e72f5041dfb55d -> 478a89c1ef79a75275d1b508122c06eee9386b2d ([pr/wid.4](https://github.com/ryanofsky/bitcoin/commits/pr/wid.4) -> [pr/wid.5](https://github.com/ryanofsky/bitcoin/commits/pr/wid.5))\n",https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-337930573,337930573,
laanwj,2017-10-19T16:16:09Z,utACK 478a89c,https://github.com/bitcoin/bitcoin/pull/11476#issuecomment-337959414,337959414,
promag,2017-10-11T14:15:24Z,"Use same format as below: `CDB: Can't open database %s (open error %d)""`.",https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144024650,144024650,src/wallet/db.cpp
promag,2017-10-11T14:15:35Z,Remove newline?,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144024708,144024708,src/wallet/db.cpp
promag,2017-10-11T14:17:50Z,This error overrides the previous.,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144025388,144025388,src/wallet/db.cpp
promag,2017-10-11T14:18:47Z,Should `+= std::endl +` instead?,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144025692,144025692,src/wallet/db.cpp
promag,2017-10-11T14:19:11Z,Use `os.path.join`?,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144025803,144025803,test/functional/multiwallet.py
promag,2017-10-11T14:19:37Z,"Nit, remove empty line.",https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144025939,144025939,src/wallet/db.cpp
promag,2017-10-11T14:21:09Z,Only `for` when `ret == 0`? ,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144026458,144026458,src/wallet/db.cpp
promag,2017-10-11T14:22:34Z,Break on first duplicate?,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144026913,144026913,src/wallet/db.cpp
laanwj,2017-10-11T15:51:05Z,"I guess the reason for storing the error in a string, and not just raising the exceptions at the place the error occurs, above, is to avoid duplicating this cleanup code?\nIt seems a bit circuitous, but I understand. An alternative would be to wrap these operations in a RAII operation.",https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144054997,144054997,src/wallet/db.cpp
ryanofsky,2017-10-11T18:38:00Z,Didn't do this to avoid changing the existing error message.,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144099683,144099683,src/wallet/db.cpp
ryanofsky,2017-10-11T18:40:09Z,It's intended to be a new paragraph.,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144100229,144100229,src/wallet/db.cpp
ryanofsky,2017-10-11T18:40:24Z,"Good catch, removed in e32c2a51b757ab764ec5dbe8bf04b3fc4aa3cb5f",https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144100297,144100297,src/wallet/db.cpp
ryanofsky,2017-10-11T18:40:36Z,Done in e32c2a51b757ab764ec5dbe8bf04b3fc4aa3cb5f,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144100342,144100342,src/wallet/db.cpp
ryanofsky,2017-10-11T18:41:45Z,"Fixed override in e32c2a51b757ab764ec5dbe8bf04b3fc4aa3cb5f, but I'm not clear on what std::endl comment is referring to.",https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144100621,144100621,src/wallet/db.cpp
ryanofsky,2017-10-11T18:41:59Z,Done in e32c2a51b757ab764ec5dbe8bf04b3fc4aa3cb5f,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144100680,144100680,src/wallet/db.cpp
ryanofsky,2017-10-11T18:43:26Z,This was one reason. The other reason was wanting the fix to be self-contained and not change existing code.,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144101092,144101092,src/wallet/db.cpp
ryanofsky,2017-10-11T18:43:41Z,Done in e32c2a51b757ab764ec5dbe8bf04b3fc4aa3cb5f,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144101170,144101170,test/functional/multiwallet.py
promag,2017-10-12T10:08:39Z,"Nevermind, but the suggestion was to accumulate the errors.",https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144246064,144246064,src/wallet/db.cpp
promag,2017-10-12T10:10:19Z,Maybe use the `ret = ...` pattern like above to make easier to read?,https://github.com/bitcoin/bitcoin/pull/11476#discussion_r144246373,144246373,src/wallet/db.cpp
