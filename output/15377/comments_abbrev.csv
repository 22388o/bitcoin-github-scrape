DrahtBot,2019-02-10T00:41:46Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15112](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15112.html) (build: Optionally enable -Wzero-as-null-poi",https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462093072,462093072,
practicalswift,2019-02-10T11:43:44Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462125323,462125323,
laanwj,2019-02-10T15:50:11Z,"Sorry, but NACK. Please not this again. I still remember what a clusterfck enabling shadowing warnings was last time. It created such a torrend of PRs:\n\n #9911\n #10009 \n  #10010\n ...\n\nIt also wasn't consistent between compilers so just that you have no shadowing warnings doesn't mean that no one else has, triggering a 'shadowing fixup' PR after every other normal PR, until it was fin",https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462143703,462143703,
practicalswift,2019-02-10T16:03:12Z,@laanwj What about only enabling in Travis for `clang`? That way there will be no need for manual reviewers pointing out accidental shadowing: that will already have been fixed before manual review starts. I see quite a few of these when doing review work.,https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462146422,462146422,
Empact,2019-02-10T19:21:46Z,"Yeah, to distinguish this from those other PRs, with this Travis will fail on the introduction of a violation, so dealing with them will be off-loaded from the reviewer to the pull requester, based on that this should reduce review burden.",https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462162989,462162989,
gmaxwell,2019-02-11T20:29:50Z,"NAK.  Forcing contributors to do battle with the random failures of a remote compiler is not attractive.\n\nI wish shadow warnings were useful in C++ like they are in C, but they aren't. They're continually spurious.  We tried shadow warnings before and it was a nuisance.  I don't expect this to change unless compiler authors add an additional kind of narrower scope shadow warning.\n\nFurtherm",https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462482351,462482351,
Empact,2019-02-11T20:51:39Z,Closing due to controversy,https://github.com/bitcoin/bitcoin/pull/15377#issuecomment-462489380,462489380,
