[
  {
    "sha": "b001c871260420c6638d20c1d5039007e235d66c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDAxYzg3MTI2MDQyMGM2NjM4ZDIwYzFkNTAzOTAwN2UyMzVkNjZj",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-04-04T09:30:55Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-04-06T00:29:33Z"
      },
      "message": "small indentation, space, formatting fixes (no code changes)",
      "tree": {
        "sha": "ee98fa7da0236fa4d60cb5615c2b30b9f7a8b078",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee98fa7da0236fa4d60cb5615c2b30b9f7a8b078"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b001c871260420c6638d20c1d5039007e235d66c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b001c871260420c6638d20c1d5039007e235d66c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b001c871260420c6638d20c1d5039007e235d66c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b001c871260420c6638d20c1d5039007e235d66c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "430cbad4112781e90f9c5d87443b0b5f7c2a4a08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/430cbad4112781e90f9c5d87443b0b5f7c2a4a08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/430cbad4112781e90f9c5d87443b0b5f7c2a4a08"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 39,
      "deletions": 42
    },
    "files": [
      {
        "sha": "66272e84219d31195326f1131993e6ff7a618b20",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -217,16 +217,16 @@ bool AppInit(int argc, char* argv[])\n         PrintExceptionContinue(NULL, \"AppInit()\");\n     }\n     if (!fRet) {\n-      if (detectShutdownThread)\n-        detectShutdownThread->interrupt();\n-      threadGroup.interrupt_all();\n+        if (detectShutdownThread)\n+            detectShutdownThread->interrupt();\n+        threadGroup.interrupt_all();\n     }\n \n     if (detectShutdownThread)\n     {\n         detectShutdownThread->join();\n         delete detectShutdownThread;\n-\tdetectShutdownThread = NULL;\n+        detectShutdownThread = NULL;\n     }\n     Shutdown();\n \n@@ -376,7 +376,6 @@ struct CImportingNow\n     }\n };\n \n-\n void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n {\n     RenameThread(\"bitcoin-loadblk\");\n@@ -633,7 +632,6 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // ********************************************************* Step 6: network initialization\n \n     int nSocksVersion = GetArg(\"-socks\", 5);\n-\n     if (nSocksVersion != 4 && nSocksVersion != 5)\n         return InitError(strprintf(_(\"Unknown -socks proxy version requested: %i\"), nSocksVersion));\n \n@@ -733,6 +731,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     fReindex = GetBoolArg(\"-reindex\");\n \n+    // Todo: Check if needed, because in step 5 we do the same\n     if (!bitdb.Open(GetDataDir()))\n     {\n         string msg = strprintf(_(\"Error initializing database environment %s!\""
      },
      {
        "sha": "7f408c4d1b5e31e9d6c20fce816b41fda6dc9cde",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -2655,12 +2655,12 @@ bool VerifyDB() {\n         CBlockIndex *pindex = pindexState;\n         while (pindex != pindexBest) {\n             boost::this_thread::interruption_point();\n-             pindex = pindex->pnext;\n-             CBlock block;\n-             if (!block.ReadFromDisk(pindex))\n-                 return error(\"VerifyDB() : *** block.ReadFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n-             if (!block.ConnectBlock(state, pindex, coins))\n-                 return error(\"VerifyDB() : *** found unconnectable block at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n+            pindex = pindex->pnext;\n+            CBlock block;\n+            if (!block.ReadFromDisk(pindex))\n+                return error(\"VerifyDB() : *** block.ReadFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n+            if (!block.ConnectBlock(state, pindex, coins))\n+                return error(\"VerifyDB() : *** found unconnectable block at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n         }\n     }\n "
      },
      {
        "sha": "0defa96e4029cf36db2f6eceff9b1937b7e88cbb",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 14,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -344,13 +344,13 @@ bool GetMyExternalIP(CNetAddr& ipRet)\n     for (int nLookup = 0; nLookup <= 1; nLookup++)\n     for (int nHost = 1; nHost <= 2; nHost++)\n     {\n-        // We should be phasing out our use of sites like these.  If we need\n+        // We should be phasing out our use of sites like these. If we need\n         // replacements, we should ask for volunteers to put this simple\n         // php file on their web server that prints the client IP:\n         //  <?php echo $_SERVER[\"REMOTE_ADDR\"]; ?>\n         if (nHost == 1)\n         {\n-            addrConnect = CService(\"91.198.22.70\",80); // checkip.dyndns.org\n+            addrConnect = CService(\"91.198.22.70\", 80); // checkip.dyndns.org\n \n             if (nLookup == 1)\n             {\n@@ -424,12 +424,10 @@ void AddressCurrentlyConnected(const CService& addr)\n \n CNode* FindNode(const CNetAddr& ip)\n {\n-    {\n-        LOCK(cs_vNodes);\n-        BOOST_FOREACH(CNode* pnode, vNodes)\n-            if ((CNetAddr)pnode->addr == ip)\n-                return (pnode);\n-    }\n+    LOCK(cs_vNodes);\n+    BOOST_FOREACH(CNode* pnode, vNodes)\n+        if ((CNetAddr)pnode->addr == ip)\n+            return (pnode);\n     return NULL;\n }\n \n@@ -444,12 +442,10 @@ CNode* FindNode(std::string addrName)\n \n CNode* FindNode(const CService& addr)\n {\n-    {\n-        LOCK(cs_vNodes);\n-        BOOST_FOREACH(CNode* pnode, vNodes)\n-            if ((CService)pnode->addr == addr)\n-                return (pnode);\n-    }\n+    LOCK(cs_vNodes);\n+    BOOST_FOREACH(CNode* pnode, vNodes)\n+        if ((CService)pnode->addr == addr)\n+            return (pnode);\n     return NULL;\n }\n "
      },
      {
        "sha": "c59cf3c5e5df62f8dcc3261bd680aa5a294bba8d",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -61,6 +61,7 @@ class BitcoinGUI : public QMainWindow\n     void removeAllWallets();\n \n     /** Used by WalletView to allow access to needed QActions */\n+    // Todo: Use Qt signals for these\n     QAction * getOverviewAction() { return overviewAction; }\n     QAction * getHistoryAction() { return historyAction; }\n     QAction * getAddressBookAction() { return addressBookAction; }"
      },
      {
        "sha": "1f2fdd466427ecd2425ece17e7631101adaaf581",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -37,6 +37,7 @@ class QLocalServer;\n class PaymentServer : public QObject\n {\n     Q_OBJECT\n+\n private:\n     bool saveURIs;\n     QLocalServer* uriServer;"
      },
      {
        "sha": "64f8e1298312ebb1615465997c26c5c2f889f7ff",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -1072,7 +1072,7 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n \n     fs::create_directory(path);\n \n-    cachedPath[fNetSpecific]=true;\n+    cachedPath[fNetSpecific] = true;\n     return path;\n }\n \n@@ -1336,14 +1336,14 @@ void seed_insecure_rand(bool fDeterministic)\n         insecure_rand_Rz = insecure_rand_Rw = 11;\n     } else {\n         uint32_t tmp;\n-        do{\n-            RAND_bytes((unsigned char*)&tmp,4);\n-        }while(tmp==0 || tmp==0x9068ffffU);\n-        insecure_rand_Rz=tmp;\n-        do{\n-            RAND_bytes((unsigned char*)&tmp,4);\n-        }while(tmp==0 || tmp==0x464fffffU);\n-        insecure_rand_Rw=tmp;\n+        do {\n+            RAND_bytes((unsigned char*)&tmp, 4);\n+        } while(tmp == 0 || tmp == 0x9068ffffU);\n+        insecure_rand_Rz = tmp;\n+        do {\n+            RAND_bytes((unsigned char*)&tmp, 4);\n+        } while(tmp == 0 || tmp == 0x464fffffU);\n+        insecure_rand_Rw = tmp;\n     }\n }\n "
      },
      {
        "sha": "0641c4be7c0c0b651be74653fd31190957e546fb",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -419,9 +419,9 @@ extern uint32_t insecure_rand_Rz;\n extern uint32_t insecure_rand_Rw;\n static inline uint32_t insecure_rand(void)\n {\n-  insecure_rand_Rz=36969*(insecure_rand_Rz&65535)+(insecure_rand_Rz>>16);\n-  insecure_rand_Rw=18000*(insecure_rand_Rw&65535)+(insecure_rand_Rw>>16);\n-  return (insecure_rand_Rw<<16)+insecure_rand_Rz;\n+    insecure_rand_Rz = 36969 * (insecure_rand_Rz & 65535) + (insecure_rand_Rz >> 16);\n+    insecure_rand_Rw = 18000 * (insecure_rand_Rw & 65535) + (insecure_rand_Rw >> 16);\n+    return (insecure_rand_Rw << 16) + insecure_rand_Rz;\n }\n \n /**"
      },
      {
        "sha": "841553ea6a1559cf326c62dd6cdcad22de4ac8c6",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b001c871260420c6638d20c1d5039007e235d66c/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b001c871260420c6638d20c1d5039007e235d66c/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=b001c871260420c6638d20c1d5039007e235d66c",
        "patch": "@@ -622,11 +622,11 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n \n     bool fSuccess = allOK;\n     Db* pdbCopy = new Db(&dbenv.dbenv, 0);\n-    int ret = pdbCopy->open(NULL,                 // Txn pointer\n+    int ret = pdbCopy->open(NULL,               // Txn pointer\n                             filename.c_str(),   // Filename\n-                            \"main\",    // Logical db name\n-                            DB_BTREE,  // Database type\n-                            DB_CREATE,    // Flags\n+                            \"main\",             // Logical db name\n+                            DB_BTREE,           // Database type\n+                            DB_CREATE,          // Flags\n                             0);\n     if (ret > 0)\n     {"
      }
    ]
  }
]