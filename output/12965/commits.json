[
  {
    "sha": "dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmFiNmM2ODY2ZTYzOTE5N2RiNWMwMGQxZTgxY2UwYTRmZjA3YjBl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-04-12T07:50:25Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-04-18T08:18:54Z"
      },
      "message": "Add RPC call setscriptthreadsenabled/scriptthreadsinfo: allow to disable verification threads",
      "tree": {
        "sha": "c3609cdbbcb2ef6df963a94a95d207633b44deb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3609cdbbcb2ef6df963a94a95d207633b44deb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlrW/24ACgkQHrd2uwPH\nki2OXRAAlG/dIv2P+pIlS/2cqzVAdgq3XvtOmKXfUUu8NsHnknK4tqxjGZ1tjyXY\nleCzcpXdY4w+Nu9vx9fMwOUJIKWnSkl5+5pmtVJi2BKLrYoV8Twf0Cy/Vi2PXarK\nP/OjyjKM7wpXUTU76fkEx7IK0dO0WHC3k/yq2+JahZ6U0Mbk9mwWfRFLbd3LZnz/\nsuHM8CK9+/BCStnGqQ03/8IOjlMYEs7C0dKrQa07+uo/6DcjNEYbbvVqhMejE0LV\nO2YUoDHwF0UROIcXCw1iY7VH8CIoV1DEk6PIETSu+OWSswJBocW2xfd2c54+k6DC\nZ3dXjwS8onZEj95pEcc6obUWarsAhZ2HzZlROHj87224syoqGdxU8dJMK1vRStTS\nNBh3uO/kw5pvoxB5w3n3hKb+d6+4DDD8M+8lTV0bAFbOgqOhL1bIk5B2/5OxgSzU\n7GQkOxH4Jk1letRS1B+1ucrIdHjXPrUfj6gC5CxH7u14y9G7oMfio8QddGKnaKAP\nEqxo1QIFqM/eqbUcAvOXLqfN3ML9bJWUYva0+zF6fXlv6/4wfUVmlPcoq1K6olx1\njpDZf6GLDs2i6J6SgX1u4Hlc3L219aMB1bbLh8IgZOwQffjwNTake8J+HXP4mKX1\nV4or+ptXvGW4gV1gWTQNVPYPIyDC0HwZSHwJX2Yt0e69OIq1Bxw=\n=aCdW\n-----END PGP SIGNATURE-----",
        "payload": "tree c3609cdbbcb2ef6df963a94a95d207633b44deb9\nparent 3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1523519425 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1524039534 +0200\n\nAdd RPC call setscriptthreadsenabled/scriptthreadsinfo: allow to disable verification threads\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 54,
      "deletions": 1
    },
    "files": [
      {
        "sha": "40b4e87c1508ea0701a0db5c078173da01d05210",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
        "patch": "@@ -1626,6 +1626,54 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue scriptthreadsinfo(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 0) {\n+        throw std::runtime_error(\n+            \"scriptthreadsinfo\\n\"\n+            \"\\nShow information about the script verification threads.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"enabled\\\": xx,                      (boolean) true is script verification threads are enabled (see setscriptthreadsenabled).\\n\"\n+            \"  \\\"num_script_check_threads\\\": xx,     (numeric) The total number of script verification threads.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"scriptthreadsinfo\", \"\")\n+            + HelpExampleRpc(\"scriptthreadsinfo\", \"\")\n+        );\n+    }\n+\n+    UniValue ret(UniValue::VOBJ);\n+    ret.pushKV(\"enabled\", g_script_threads_enabled);\n+    ret.pushKV(\"num_script_check_threads\", nScriptCheckThreads);\n+    return ret;\n+}\n+\n+UniValue setscriptthreadsenabled(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"setscriptthreadsenabled\\n\"\n+            \"\\nDisable/enable script verification threads and therefore reducing CPU usage on multicore systems.\\n\"\n+            \"Disabling script verification threads may result in a significant slow-down during synchronisation.\\n\"\n+            \"Has no effect on single core machines or if started with -par=<-<numcores>\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. state      (boolean, required) false if script verification threads should be disabled (true for re-enabling).\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setscriptthreadsenabled\", \"false\")\n+            + HelpExampleRpc(\"setscriptthreadsenabled\", \"false\")\n+        );\n+    }\n+\n+    if (nScriptCheckThreads == 0) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Script verification threads are disabled (single core machine or -par=<-<numcores>)\");\n+    }\n+\n+    g_script_threads_enabled = request.params[0].get_bool();\n+\n+    return NullUniValue;\n+}\n+\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n@@ -1648,6 +1696,8 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n     { \"blockchain\",         \"savemempool\",            &savemempool,            {} },\n     { \"blockchain\",         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },\n+    { \"blockchain\",         \"scriptthreadsinfo\",      &scriptthreadsinfo,      {} },\n+    { \"blockchain\",         \"setscriptthreadsenabled\",&setscriptthreadsenabled,{\"state\"} },\n \n     { \"blockchain\",         \"preciousblock\",          &preciousblock,          {\"blockhash\"} },\n "
      },
      {
        "sha": "27d6c1ba8cdabe7178cf1496044698783342ccd6",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
        "patch": "@@ -153,6 +153,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"echojson\", 9, \"arg9\" },\n     { \"rescanblockchain\", 0, \"start_height\"},\n     { \"rescanblockchain\", 1, \"stop_height\"},\n+    { \"setscriptthreadsenabled\", 0, \"state\"},\n };\n \n class CRPCConvertTable"
      },
      {
        "sha": "fa71bc6fc72425e0ff41da4a8d4d5b1d6f377a74",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
        "patch": "@@ -205,6 +205,7 @@ CBlockIndex *pindexBestHeader = nullptr;\n CWaitableCriticalSection g_best_block_mutex;\n CConditionVariable g_best_block_cv;\n uint256 g_best_block;\n+std::atomic_bool g_script_threads_enabled(true);\n int nScriptCheckThreads = 0;\n std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n@@ -1952,7 +1953,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n \n     CBlockUndo blockundo;\n \n-    CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : nullptr);\n+    CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads && g_script_threads_enabled ? &scriptcheckqueue : nullptr);\n \n     std::vector<int> prevheights;\n     CAmount nFees = 0;"
      },
      {
        "sha": "dce1b93423d762ab02ddeb547a7e16875450d7f2",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfab6c6866e639197db5c00d1e81ce0a4ff07b0e/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=dfab6c6866e639197db5c00d1e81ce0a4ff07b0e",
        "patch": "@@ -171,6 +171,7 @@ extern uint256 g_best_block;\n extern std::atomic_bool fImporting;\n extern std::atomic_bool fReindex;\n extern int nScriptCheckThreads;\n+extern std::atomic_bool g_script_threads_enabled;\n extern bool fTxIndex;\n extern bool fIsBareMultisigStd;\n extern bool fRequireStandard;"
      }
    ]
  }
]