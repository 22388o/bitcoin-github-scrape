[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35415468",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#issuecomment-35415468",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3694",
    "id": 35415468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDE1NDY4",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-18T18:19:50Z",
    "updated_at": "2014-02-18T18:19:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Update: no problems with wallet backup/restore, no problems running with -DDEBUG_LOCKORDER (after fixes unrelated to this pull, see #3704 ).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35415468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35918154",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#issuecomment-35918154",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3694",
    "id": 35918154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTE4MTU0",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-24T18:27:48Z",
    "updated_at": "2014-02-24T18:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nits picked, rebased.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35918154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35959592",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#issuecomment-35959592",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3694",
    "id": 35959592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTU5NTky",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-25T00:09:44Z",
    "updated_at": "2014-02-25T00:09:44Z",
    "author_association": "CONTRIBUTOR",
    "body": ".... I'll fix the pull-tester ... just have to figure out a robust way of HOW ... \n(issue is bitcoind's still running from previous failed test; ideally tests would be run in a fresh VM so they cannot interfere with each other).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35959592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36152068",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#issuecomment-36152068",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3694",
    "id": 36152068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTUyMDY4",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T17:32:19Z",
    "updated_at": "2014-02-26T17:32:19Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/93a18a3650292afbb441a47d1fa1b94aeb0164e3 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36152068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36173735",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#issuecomment-36173735",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3694",
    "id": 36173735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTczNzM1",
    "user": {
      "login": "djpnewton",
      "id": 42459,
      "node_id": "MDQ6VXNlcjQyNDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/42459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djpnewton",
      "html_url": "https://github.com/djpnewton",
      "followers_url": "https://api.github.com/users/djpnewton/followers",
      "following_url": "https://api.github.com/users/djpnewton/following{/other_user}",
      "gists_url": "https://api.github.com/users/djpnewton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djpnewton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djpnewton/subscriptions",
      "organizations_url": "https://api.github.com/users/djpnewton/orgs",
      "repos_url": "https://api.github.com/users/djpnewton/repos",
      "events_url": "https://api.github.com/users/djpnewton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djpnewton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T20:40:59Z",
    "updated_at": "2014-02-26T20:40:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a reasonably biggish wallet (~7.5K transactions). What is a good performance test for this (what would exercise the right code paths)?\n\nThe listaccounts rpc is consistently 40ms faster on my wallet with this branch =)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36173735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36390045",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#issuecomment-36390045",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3694",
    "id": 36390045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzkwMDQ1",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-28T20:16:23Z",
    "updated_at": "2014-02-28T20:16:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Merging; I think this is good enough for a release candidate release.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/36390045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944602",
    "pull_request_review_id": null,
    "id": 9944602,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDQ2MDI=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Using a recursive IsTrusted call here could run out of stack space if there are a lot of transactions depending on each other in the wallet.\nI don't think this is very likely, but when they happen stack overflows are nasty and hard to debug.\nIt was avoided with the workqueue-based approach.\n",
    "created_at": "2014-02-21T13:10:49Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9944602",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944602"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9944602"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944666",
    "pull_request_review_id": null,
    "id": 9944666,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDQ2NjY=",
    "diff_hunk": "@@ -439,7 +446,7 @@ class CWalletTx : public CMerkleTx\n     const CWallet* pwallet;\n \n public:\n-    std::vector<CMerkleTx> vtxPrev;\n+    std::vector<CMerkleTx> vUnused;// Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 51,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could move this to a local variable inside serialize() instead of a property.\n",
    "created_at": "2014-02-21T13:13:40Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9944666",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944666"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9944666"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 449,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944931",
    "pull_request_review_id": null,
    "id": 9944931,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDQ5MzE=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Long chains of unconfirmed transactions are a very bad idea; I'd vote for limiting the depth of the recursion to something reasonable.  I am very tempted to limit it to a depth of one, and eliminate the recursion all-together.\n",
    "created_at": "2014-02-21T13:25:16Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9944931",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944931"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9944931"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9944931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9947008",
    "pull_request_review_id": null,
    "id": 9947008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDcwMDg=",
    "diff_hunk": "@@ -671,7 +622,7 @@ class CWalletTx : public CMerkleTx\n         int64_t nCredit = 0;\n         for (unsigned int i = 0; i < vout.size(); i++)\n         {\n-            if (!IsSpent(i))\n+            if (!pwallet->IsSpent(COutPoint(GetHash(), i)))",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 187,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: I can't help but notice that all calls to pwallet->IsSpent (apart from the one in the UI) construct a COutPoint object specifically to pass to the function. Maybe IsSpent(const uint256&, int n) would be more convenient.\n",
    "created_at": "2014-02-21T14:38:48Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9947008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9947008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9947008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9947008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 625,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9948496",
    "pull_request_review_id": null,
    "id": 9948496,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDg0OTY=",
    "diff_hunk": "@@ -598,14 +597,27 @@ bool CWallet::AddToWalletIfInvolvingMe(const uint256 &hash, const CTransaction&\n                 wtx.SetMerkleBranch(pblock);\n             return AddToWallet(wtx);\n         }\n-        else\n-            WalletUpdateSpent(tx);\n     }\n     return false;\n }\n \n-void CWallet::SyncTransaction(const uint256 &hash, const CTransaction& tx, const CBlock* pblock) {\n+void CWallet::SyncTransaction(const uint256 &hash, const CTransaction& tx, const CBlock* pblock)\n+{\n     AddToWalletIfInvolvingMe(hash, tx, pblock, true);\n+\n+    if (mapWallet.count(hash) == 0)\n+        return; // Not one of ours\n+\n+    // Break debit/credit balance caches:",
    "path": "src/wallet.cpp",
    "position": null,
    "original_position": 208,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The -walletnotify and UI notification dispatch for the transaction update happens in AddToWallet. Ideally we'd want to do this invalidation before the notification is launched to prevent races.\nOne idea would be to move this logic here: https://github.com/bitcoin/bitcoin/blob/master/src/wallet.cpp#L566 where previously the WalletUpdateSpent happened? (execution will get there anyway through AddToWalletIfInvolvingme as fExisted will be true as well as fUpdate)\n",
    "created_at": "2014-02-21T15:21:19Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9948496",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9948496"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9948496"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9948496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991690",
    "pull_request_review_id": null,
    "id": 9991690,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTE2OTA=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A valid case in which long chains of unconfirmed transaction could happen is in case of a reorganize.\n",
    "created_at": "2014-02-24T14:08:13Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991690",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991690"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991690"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991782",
    "pull_request_review_id": null,
    "id": 9991782,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTE3ODI=",
    "diff_hunk": "@@ -439,7 +446,7 @@ class CWalletTx : public CMerkleTx\n     const CWallet* pwallet;\n \n public:\n-    std::vector<CMerkleTx> vtxPrev;\n+    std::vector<CMerkleTx> vUnused;// Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 51,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I just realized that vtxPrev could be useful for re-broadcasting (others) parent transactions in the case of a reorganization. Or is this covered some other way? Right now we store only our own transactions in the wallet.\n",
    "created_at": "2014-02-24T14:10:53Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991782",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991782"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991782"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 449,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991812",
    "pull_request_review_id": null,
    "id": 9991812,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTE4MTI=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, but IsTrusted() is mostly irrelevant during a re-organize.  I suppose if there is a deep re-org underway and you try to spend some coins in the middle of it the spend might fail with \"insufficient funds\".  Very much an edge case not worth worrying about, though, I think.\n",
    "created_at": "2014-02-24T14:11:40Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991812",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991812"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991812"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991964",
    "pull_request_review_id": null,
    "id": 9991964,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTE5NjQ=",
    "diff_hunk": "@@ -671,7 +622,7 @@ class CWalletTx : public CMerkleTx\n         int64_t nCredit = 0;\n         for (unsigned int i = 0; i < vout.size(); i++)\n         {\n-            if (!IsSpent(i))\n+            if (!pwallet->IsSpent(COutPoint(GetHash(), i)))",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 187,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree. I do believe the C++ compiler avoids the extra copying involved, though.\n",
    "created_at": "2014-02-24T14:16:41Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991964",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991964"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9991964"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9991964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 625,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992099",
    "pull_request_review_id": null,
    "id": 9992099,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTIwOTk=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, that's not much of a problem.\n",
    "created_at": "2014-02-24T14:20:35Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992099",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992099"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992099"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992382",
    "pull_request_review_id": null,
    "id": 9992382,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTIzODI=",
    "diff_hunk": "@@ -439,7 +446,7 @@ class CWalletTx : public CMerkleTx\n     const CWallet* pwallet;\n \n public:\n-    std::vector<CMerkleTx> vtxPrev;\n+    std::vector<CMerkleTx> vUnused;// Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 51,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even now, vtxPrev only stores our own transactions, so it is utterly pointless to keep it.\n\nThe correct solution - if we want to deal better with unconfirmed out-of-wallet dependencies - is to add these to the wallet directly instead of inside the transactions they depend on. In practice, these lead to huge duplication of transactions in large wallets.\n\n@pstratem has some more context, I believe.\n",
    "created_at": "2014-02-24T14:29:04Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992382",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992382"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992382"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 449,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992440",
    "pull_request_review_id": null,
    "id": 9992440,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTI0NDA=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is no need for this recursion at all. If a transaction is either in the blockchain or in the memory pool, all its dependencies are also in the blockchain or the memory pool.\n",
    "created_at": "2014-02-24T14:30:33Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992782",
    "pull_request_review_id": null,
    "id": 9992782,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTI3ODI=",
    "diff_hunk": "@@ -439,7 +446,7 @@ class CWalletTx : public CMerkleTx\n     const CWallet* pwallet;\n \n public:\n-    std::vector<CMerkleTx> vtxPrev;\n+    std::vector<CMerkleTx> vUnused;// Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 51,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm in favor of moving this variable to inside the serialization implementations. It will save memory.\n",
    "created_at": "2014-02-24T14:41:02Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992782",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992782"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992782"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 449,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992805",
    "pull_request_review_id": null,
    "id": 9992805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTI4MDU=",
    "diff_hunk": "@@ -439,7 +446,7 @@ class CWalletTx : public CMerkleTx\n     const CWallet* pwallet;\n \n public:\n-    std::vector<CMerkleTx> vtxPrev;\n+    std::vector<CMerkleTx> vUnused;// Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 51,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK, agreed, vtxprev is not the way to do this. Storing transactions in the wallet only on the top level (and not nested into other transactions) makes sense.\n",
    "created_at": "2014-02-24T14:41:42Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9992805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9992805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 449,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9994253",
    "pull_request_review_id": null,
    "id": 9994253,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTQyNTM=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Recursion here is necessary if we want to continue allowing spending of unconfirmed change of unconfirmed change (of unconfirmed change, etc).  If there is no recursion, then you will be allowed to spend unconfirmed change once, but will then have to wait for that transaction to confirm (if you have no other inputs in your wallet) before being allowed to spend again.\n\nRE: other nits: ACK.\n",
    "created_at": "2014-02-24T15:14:06Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9994253",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9994253"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9994253"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9994253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9996511",
    "pull_request_review_id": null,
    "id": 9996511,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTY1MTE=",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Eh no - you have to check the inputs whether they belong to you. But unconfirmed change of unconfirmed change is in the mempool, and you don't need to check whether its dependencies do - it being in the mempool guarantees that already.\n",
    "created_at": "2014-02-24T16:03:28Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9996511",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9996511"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r9996511"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/9996511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10002197",
    "pull_request_review_id": null,
    "id": 10002197,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDAyMTk3",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are trusted (recursively)\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not from us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsTrusted())",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "1fa606d93ad347def5c28bf4332da3fd3f391cd3",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@sipa: ACK.  Replacing the recursion with:\n\n```\n-            if (parent == NULL || !parent->IsTrusted())\n+            if (parent == NULL || !parent->IsFromMe() || parent->GetDepthInMainChain() < 0)\n                return false;\n```\n",
    "created_at": "2014-02-24T18:16:38Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10002197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10002197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10002197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10002197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10007400",
    "pull_request_review_id": null,
    "id": 10007400,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDA3NDAw",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are from us and are in the mempool:\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not sent by us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsFromMe() || parent->GetDepthInMainChain() < 0)",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "88ee2e5e7fcb091fb176189c1d226c3b1b80914e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even that < 0 test isn't necessary: if this transaction is in the mempool or blockchain, all its parents are too.\n\nWe only need to check that all inputs are from us.\n",
    "created_at": "2014-02-24T20:05:20Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10007400",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10007400"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10007400"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10007400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10007581",
    "pull_request_review_id": null,
    "id": 10007581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDA3NTgx",
    "diff_hunk": "@@ -534,7 +528,8 @@ class CWalletTx : public CMerkleTx\n         }\n \n         nSerSize += SerReadWrite(s, *(CMerkleTx*)this, nType, nVersion,ser_action);\n-        READWRITE(vtxPrev);\n+\tstd::vector<CMerkleTx> vUnused; // Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 99,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "88ee2e5e7fcb091fb176189c1d226c3b1b80914e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indentation.\n",
    "created_at": "2014-02-24T20:08:31Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10007581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10007581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10007581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10007581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 531,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10008943",
    "pull_request_review_id": null,
    "id": 10008943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDA4OTQz",
    "diff_hunk": "@@ -534,7 +528,8 @@ class CWalletTx : public CMerkleTx\n         }\n \n         nSerSize += SerReadWrite(s, *(CMerkleTx*)this, nType, nVersion,ser_action);\n-        READWRITE(vtxPrev);\n+\tstd::vector<CMerkleTx> vUnused; // Used to be vtxPrev",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 99,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "88ee2e5e7fcb091fb176189c1d226c3b1b80914e",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed (emacs settings were wrong on my new computer....)\n",
    "created_at": "2014-02-24T20:36:17Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10008943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10008943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10008943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10008943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 531,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10009709",
    "pull_request_review_id": null,
    "id": 10009709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDA5NzA5",
    "diff_hunk": "@@ -719,38 +670,13 @@ class CWalletTx : public CMerkleTx\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+        // Trusted if all inputs are from us and are in the mempool:\n+        BOOST_FOREACH(const CTxIn& txin, vin)\n         {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n+            // Transactions not sent by us: not trusted\n+            const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+            if (parent == NULL || !parent->IsFromMe() || parent->GetDepthInMainChain() < 0)",
    "path": "src/wallet.h",
    "position": null,
    "original_position": 210,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "88ee2e5e7fcb091fb176189c1d226c3b1b80914e",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed. Maybe if reporters would stop calling me I'd stop making dumb mistakes...\n",
    "created_at": "2014-02-24T20:53:55Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10009709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10009709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10009709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10009709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 678,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10053931",
    "pull_request_review_id": null,
    "id": 10053931,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDUzOTMx",
    "diff_hunk": "@@ -86,43 +86,51 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry)\n }\n \n \n-bool CTxMemPool::remove(const CTransaction &tx, bool fRecursive)\n+list<CTransaction> CTxMemPool::remove(const CTransaction &tx, bool fRecursive)\n {\n     // Remove transaction from memory pool\n+    list<CTransaction> result;\n     {\n         LOCK(cs);\n         uint256 hash = tx.GetHash();\n         if (fRecursive) {\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n                 std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(hash, i));\n-                if (it != mapNextTx.end())\n-                    remove(*it->second.ptx, true);\n+                if (it == mapNextTx.end())\n+                    continue;\n+                list<CTransaction> r = remove(*it->second.ptx, true);\n+                result.insert(result.begin(), r.begin(), r.end());\n             }\n         }\n         if (mapTx.count(hash))\n         {\n+            result.push_front(tx);\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n                 mapNextTx.erase(txin.prevout);\n             mapTx.erase(hash);\n             nTransactionsUpdated++;\n         }\n     }\n-    return true;\n+    return result;\n }\n \n-bool CTxMemPool::removeConflicts(const CTransaction &tx)\n+list<CTransaction> CTxMemPool::removeConflicts(const CTransaction &tx)\n {\n     // Remove transactions which depend on inputs of tx, recursively\n+    list<CTransaction> result;\n     LOCK(cs);\n     BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n         std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(txin.prevout);\n         if (it != mapNextTx.end()) {\n             const CTransaction &txConflict = *it->second.ptx;\n             if (txConflict != tx)\n-                remove(txConflict, true);\n+            {\n+                list<CTransaction> r = remove(txConflict, true);\n+                result.insert(result.begin(), r.begin(), r.end());",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "0c39205dcd42c34fffefdfb2a5aff36991033140",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you pass this list<CTransaction> by reference into the method, and append to it everywhere, rather than copying it in every recursion step?\n",
    "created_at": "2014-02-25T20:21:42Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10053931",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10053931"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10053931"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10053931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 129,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10083308",
    "pull_request_review_id": null,
    "id": 10083308,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDgzMzA4",
    "diff_hunk": "@@ -86,43 +86,51 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry)\n }\n \n \n-bool CTxMemPool::remove(const CTransaction &tx, bool fRecursive)\n+list<CTransaction> CTxMemPool::remove(const CTransaction &tx, bool fRecursive)\n {\n     // Remove transaction from memory pool\n+    list<CTransaction> result;\n     {\n         LOCK(cs);\n         uint256 hash = tx.GetHash();\n         if (fRecursive) {\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n                 std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(hash, i));\n-                if (it != mapNextTx.end())\n-                    remove(*it->second.ptx, true);\n+                if (it == mapNextTx.end())\n+                    continue;\n+                list<CTransaction> r = remove(*it->second.ptx, true);\n+                result.insert(result.begin(), r.begin(), r.end());\n             }\n         }\n         if (mapTx.count(hash))\n         {\n+            result.push_front(tx);\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n                 mapNextTx.erase(txin.prevout);\n             mapTx.erase(hash);\n             nTransactionsUpdated++;\n         }\n     }\n-    return true;\n+    return result;\n }\n \n-bool CTxMemPool::removeConflicts(const CTransaction &tx)\n+list<CTransaction> CTxMemPool::removeConflicts(const CTransaction &tx)\n {\n     // Remove transactions which depend on inputs of tx, recursively\n+    list<CTransaction> result;\n     LOCK(cs);\n     BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n         std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(txin.prevout);\n         if (it != mapNextTx.end()) {\n             const CTransaction &txConflict = *it->second.ptx;\n             if (txConflict != tx)\n-                remove(txConflict, true);\n+            {\n+                list<CTransaction> r = remove(txConflict, true);\n+                result.insert(result.begin(), r.begin(), r.end());",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "93a18a3650292afbb441a47d1fa1b94aeb0164e3",
    "original_commit_id": "0c39205dcd42c34fffefdfb2a5aff36991033140",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ACK, I'll rewrite to pass the list by reference.\n",
    "created_at": "2014-02-26T15:23:13Z",
    "updated_at": "2014-02-26T16:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10083308",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10083308"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3694#discussion_r10083308"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3694"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10083308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 129,
    "side": "RIGHT"
  }
]