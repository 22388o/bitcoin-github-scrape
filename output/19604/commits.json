[
  {
    "sha": "faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVjODUxYjZlYjdlNjVlMjhjZGNhZTUwZDZkYzg2ZmFmYTBmOTFj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-29T06:12:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-29T06:00:54Z"
      },
      "message": "test: Simplify cs_main locks",
      "tree": {
        "sha": "bcecc516c9238960a76d2035387be24b7d8a27ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcecc516c9238960a76d2035387be24b7d8a27ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj/6AwArS003Mf/vawH9Z34eLGIK8RVIwrte3txTnOWqu2BO5Kax5ktNk/UJ9t6\n5SqvLElc7jRXdFzk8EyiWhXVHELRwfLmHZQow0JlDZDgrH0ctYhCLJtRlyJotrSg\nXg2XjPGh21bGEasanRpqtqclm6a831dIvRDAj9M3OiFdO4snsG7onasdYEv2do+9\n3/QmxiVElAR2M/ljSiuk2bKm/t5XGdTrMVdxT1GBIx7frv5Nb473/axZNFb+gKgr\nWmCRR7xoESgmJC679VVXbuOoaFAHPSVDzM2u/sQaGJFcDX1h0Je0/PWeU1R9pbHM\naGQUqgBRiIEG56V0M/upbjZ4dopiJeLqH1vwp1eGn3ny4a2/443bwdYzVP10Pqtk\niN5xDpYnTt9jCH+6RpuMqYUFomrYQXKiHI6pMw7ocrZnO8Hy3mbymgrORYV7dBS4\n7ZztnWb8RjTNMIy9u84wkYNwax50Zc3cqJBVA2vE+ABDNCGO7NtBVk/Y1hbLKgAg\nqS1HUaOV\n=66sW\n-----END PGP SIGNATURE-----",
        "payload": "tree bcecc516c9238960a76d2035387be24b7d8a27ae\nparent 2f71a1ea35667b3873197201531e7ae198ec5bf4\nauthor MarcoFalke <falke.marco@gmail.com> 1596003133 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1596002454 +0200\n\ntest: Simplify cs_main locks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f71a1ea35667b3873197201531e7ae198ec5bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f71a1ea35667b3873197201531e7ae198ec5bf4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f71a1ea35667b3873197201531e7ae198ec5bf4"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 4,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2076a1096a834961fecf174274ab115fbbe24eb3",
        "filename": "src/test/validation_chainstate_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c/src/test/validation_chainstate_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c/src/test/validation_chainstate_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstate_tests.cpp?ref=faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
        "patch": "@@ -34,9 +34,7 @@ BOOST_AUTO_TEST_CASE(validation_chainstate_resize_caches)\n         return outp;\n     };\n \n-    ENTER_CRITICAL_SECTION(cs_main);\n-    CChainState& c1 = manager.InitializeChainstate();\n-    LEAVE_CRITICAL_SECTION(cs_main);\n+    CChainState& c1 = *WITH_LOCK(cs_main, return &manager.InitializeChainstate());\n     c1.InitCoinsDB(\n         /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);\n     WITH_LOCK(::cs_main, c1.InitCoinsCache(1 << 23));"
      },
      {
        "sha": "887a48124ff7a5bff3a688d5fec21404cc082937",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
        "patch": "@@ -54,10 +54,7 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n \n     // Create a snapshot-based chainstate.\n     //\n-    ENTER_CRITICAL_SECTION(cs_main);\n-    CChainState& c2 = *WITH_LOCK(::cs_main,\n-        return &manager.InitializeChainstate(GetRandHash()));\n-    LEAVE_CRITICAL_SECTION(cs_main);\n+    CChainState& c2 = *WITH_LOCK(::cs_main, return &manager.InitializeChainstate(GetRandHash()));\n     chainstates.push_back(&c2);\n     c2.InitCoinsDB(\n         /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);\n@@ -115,9 +112,7 @@ BOOST_AUTO_TEST_CASE(chainstatemanager_rebalance_caches)\n \n     // Create a legacy (IBD) chainstate.\n     //\n-    ENTER_CRITICAL_SECTION(cs_main);\n-    CChainState& c1 = manager.InitializeChainstate();\n-    LEAVE_CRITICAL_SECTION(cs_main);\n+    CChainState& c1 = *WITH_LOCK(cs_main, return &manager.InitializeChainstate());\n     chainstates.push_back(&c1);\n     c1.InitCoinsDB(\n         /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);\n@@ -134,9 +129,7 @@ BOOST_AUTO_TEST_CASE(chainstatemanager_rebalance_caches)\n \n     // Create a snapshot-based chainstate.\n     //\n-    ENTER_CRITICAL_SECTION(cs_main);\n-    CChainState& c2 = manager.InitializeChainstate(GetRandHash());\n-    LEAVE_CRITICAL_SECTION(cs_main);\n+    CChainState& c2 = *WITH_LOCK(cs_main, return &manager.InitializeChainstate(GetRandHash()));\n     chainstates.push_back(&c2);\n     c2.InitCoinsDB(\n         /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);"
      }
    ]
  },
  {
    "sha": "fac674db200e6b2d5b32069335fb24e713d7b69f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM2NzRkYjIwMGU2YjJkNWIzMjA2OTMzNWZiMjRlNzEzZDdiNjlm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-19T18:30:18Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-29T10:29:51Z"
      },
      "message": "Pass mempool pointer to UnloadBlockIndex",
      "tree": {
        "sha": "c34e2b54b07a899b5181cd69f846135051109b53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c34e2b54b07a899b5181cd69f846135051109b53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac674db200e6b2d5b32069335fb24e713d7b69f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUimzAv/U7FTzUjXL/bUFdXeOO7E5e7fqfwn2Wy4f56+Jxxv97TVWhIcjIIr2ZXl\nLElqMGTR0NEcFkMefDuth6H3LpfYMZ1VSD1/H2Nk9TO9s0J5OUcCbeJATJO+HZpA\nbxZtSXScm9FpRnvNB8DicFe/vUniaG0AMw6gdsnkKsvajLE6BpMALtf5vyU489fN\nxweFW4wfuHNeWWC/Ijmexy5n1LuaLIjPVxJpInzoR77P/T5LqD/kxLSG/sqQAADo\nw2gsXLVeCpyiQ4BeFppUtAsPNT7UO4tHdStFs8aYwuyXyzuc1r+gB27LafTgft1z\nOJltG1YB/j7j6ByFavV9Sjuqz858ezVhGrzi5EVtdbVLdZDqQ5ibIYp2MeKdOOYV\n+VoEXMSPXtwr+oxeke94sNN5b9LEYrrRUGqBYlJww+mYgbfg3novurL76RoGLC+S\nYj4QQbC8Xncs5GPK/mWEwuSgTVypQvVs2h4Fza9qQi0m9h7wcBZdmP1Ez3CYzQ5z\n5zjUG+yW\n=s26Z\n-----END PGP SIGNATURE-----",
        "payload": "tree c34e2b54b07a899b5181cd69f846135051109b53\nparent faec851b6eb7e65e28cdcae50d6dc86fafa0f91c\nauthor MarcoFalke <falke.marco@gmail.com> 1595183418 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1596018591 +0200\n\nPass mempool pointer to UnloadBlockIndex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac674db200e6b2d5b32069335fb24e713d7b69f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac674db200e6b2d5b32069335fb24e713d7b69f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac674db200e6b2d5b32069335fb24e713d7b69f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faec851b6eb7e65e28cdcae50d6dc86fafa0f91c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "2bd1a5308c1b6caf1589028a4b452455eee9fad9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac674db200e6b2d5b32069335fb24e713d7b69f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac674db200e6b2d5b32069335fb24e713d7b69f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fac674db200e6b2d5b32069335fb24e713d7b69f",
        "patch": "@@ -1566,7 +1566,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node)\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n \n-                UnloadBlockIndex();\n+                UnloadBlockIndex(node.mempool);\n \n                 // new CBlockTreeDB tries to delete the existing file, which\n                 // fails if it's still open from the previous loop. Close it first:"
      },
      {
        "sha": "b880a99baf90e4bc241359612ae1454e77dd51c9",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac674db200e6b2d5b32069335fb24e713d7b69f/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac674db200e6b2d5b32069335fb24e713d7b69f/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=fac674db200e6b2d5b32069335fb24e713d7b69f",
        "patch": "@@ -83,7 +83,7 @@ void AppTests::appTests()\n     // Reset global state to avoid interfering with later tests.\n     LogInstance().DisconnectTestLogger();\n     AbortShutdown();\n-    UnloadBlockIndex();\n+    UnloadBlockIndex(/* mempool */ nullptr);\n     WITH_LOCK(::cs_main, g_chainman.Reset());\n }\n "
      },
      {
        "sha": "14f65dcb7c906385e22e4d6e99a9cbddc6c212f0",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac674db200e6b2d5b32069335fb24e713d7b69f/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac674db200e6b2d5b32069335fb24e713d7b69f/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fac674db200e6b2d5b32069335fb24e713d7b69f",
        "patch": "@@ -182,9 +182,9 @@ TestingSetup::~TestingSetup()\n     m_node.connman.reset();\n     m_node.banman.reset();\n     m_node.args = nullptr;\n+    UnloadBlockIndex(m_node.mempool);\n     m_node.mempool = nullptr;\n     m_node.scheduler.reset();\n-    UnloadBlockIndex();\n     m_node.chainman->Reset();\n     m_node.chainman = nullptr;\n     pblocktree.reset();"
      },
      {
        "sha": "462d8d961b95a2d40dd3790749c6d60c98420274",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac674db200e6b2d5b32069335fb24e713d7b69f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac674db200e6b2d5b32069335fb24e713d7b69f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fac674db200e6b2d5b32069335fb24e713d7b69f",
        "patch": "@@ -4587,13 +4587,13 @@ void CChainState::UnloadBlockIndex() {\n // May NOT be used after any connections are up as much\n // of the peer-processing logic assumes a consistent\n // block index state\n-void UnloadBlockIndex()\n+void UnloadBlockIndex(CTxMemPool* mempool)\n {\n     LOCK(cs_main);\n     g_chainman.Unload();\n     pindexBestInvalid = nullptr;\n     pindexBestHeader = nullptr;\n-    mempool.clear();\n+    if (mempool) mempool->clear();\n     vinfoBlockFile.clear();\n     nLastBlockFile = 0;\n     setDirtyBlockIndex.clear();"
      },
      {
        "sha": "c76edd142ae8049f1759e5bde5c51092a7f22bba",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac674db200e6b2d5b32069335fb24e713d7b69f/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac674db200e6b2d5b32069335fb24e713d7b69f/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fac674db200e6b2d5b32069335fb24e713d7b69f",
        "patch": "@@ -160,7 +160,7 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */\n bool LoadGenesisBlock(const CChainParams& chainparams);\n /** Unload database information */\n-void UnloadBlockIndex();\n+void UnloadBlockIndex(CTxMemPool* mempool);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck(int worker_num);\n /**"
      }
    ]
  },
  {
    "sha": "fae8c28dae747f9c4c6481049742346d18202fc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU4YzI4ZGFlNzQ3ZjljNGM2NDgxMDQ5NzQyMzQ2ZDE4MjAyZmM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-28T05:16:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-29T10:30:11Z"
      },
      "message": "Pass mempool pointer to GetCoinsCacheSizeState",
      "tree": {
        "sha": "42a1ef17a63231dfb5faa15de6221cd23677bb81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42a1ef17a63231dfb5faa15de6221cd23677bb81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae8c28dae747f9c4c6481049742346d18202fc8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgDoQv/Zen5LoQ5Vr9cas70Ygusgs1jaTnkuRk9Ba2ZDu1GLP9yfFK4kmMyRZdQ\ndO+HXmyjyyAUEbJGDUedxedmZja1gQkUF1KgZ4YbFb800+Li8t7PBeX5H+pu2ALJ\nEYUkHoylAy7poOkPtHSPfHaaymxblXZHof8/hNlAsUj2XWEQnYWNB+oDpAANAloF\nXVWBufjqmbDb72lxU9YuZiMTvAGdsQhtNjnB8jdBxTITzGCLe/GP0CleUCvBA1PQ\ncdS5qgxIqEM1nHBOqS6IhlWtkm1duyfdw5ZnZSFrj2fE/dqdWYABAuUelgzyXeNi\nOQYguL8f+NIMBgTGOHz9jk6TIUiBI+regZbQTQGktzT7OENsR8Y3XHC+iQ2/aKbo\nlVzge5u7hUOTBkMVLrudQg2wfIRupUQsRVQZdI12jlZ8TdP4RHUD6J/sm7vecoYX\nfqMbNx8j0Ty5ocBosAKLvUAiI2bH249bsamUAaQAOWE9N7tQMbCyeOyskWafJZ7K\nQSrBXiJw\n=Z6G5\n-----END PGP SIGNATURE-----",
        "payload": "tree 42a1ef17a63231dfb5faa15de6221cd23677bb81\nparent fac674db200e6b2d5b32069335fb24e713d7b69f\nauthor MarcoFalke <falke.marco@gmail.com> 1595913412 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1596018611 +0200\n\nPass mempool pointer to GetCoinsCacheSizeState\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae8c28dae747f9c4c6481049742346d18202fc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae8c28dae747f9c4c6481049742346d18202fc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae8c28dae747f9c4c6481049742346d18202fc8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac674db200e6b2d5b32069335fb24e713d7b69f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac674db200e6b2d5b32069335fb24e713d7b69f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac674db200e6b2d5b32069335fb24e713d7b69f"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "8bac914f05d2eb34af44e80a03f616ec3f02baa2",
        "filename": "src/test/validation_flush_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae8c28dae747f9c4c6481049742346d18202fc8/src/test/validation_flush_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae8c28dae747f9c4c6481049742346d18202fc8/src/test/validation_flush_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_flush_tests.cpp?ref=fae8c28dae747f9c4c6481049742346d18202fc8",
        "patch": "@@ -56,7 +56,7 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n \n     // Without any coins in the cache, we shouldn't need to flush.\n     BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+        chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n         CoinsCacheSizeState::OK);\n \n     // If the initial memory allocations of cacheCoins don't match these common\n@@ -71,7 +71,7 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n         }\n \n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+            chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n             CoinsCacheSizeState::CRITICAL);\n \n         BOOST_TEST_MESSAGE(\"Exiting cache flush tests early due to unsupported arch\");\n@@ -92,34 +92,34 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n         print_view_mem_usage(view);\n         BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+            chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n             CoinsCacheSizeState::OK);\n     }\n \n     // Adding some additional coins will push us over the edge to CRITICAL.\n     for (int i{0}; i < 4; ++i) {\n         add_coin(view);\n         print_view_mem_usage(view);\n-        if (chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0) ==\n+        if (chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0) ==\n             CoinsCacheSizeState::CRITICAL) {\n             break;\n         }\n     }\n \n     BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n+        chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n         CoinsCacheSizeState::CRITICAL);\n \n     // Passing non-zero max mempool usage should allow us more headroom.\n     BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 1 << 10),\n+        chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 1 << 10),\n         CoinsCacheSizeState::OK);\n \n     for (int i{0}; i < 3; ++i) {\n         add_coin(view);\n         print_view_mem_usage(view);\n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 1 << 10),\n+            chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 1 << 10),\n             CoinsCacheSizeState::OK);\n     }\n \n@@ -135,31 +135,31 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n         BOOST_CHECK(usage_percentage >= 0.9);\n         BOOST_CHECK(usage_percentage < 1);\n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, 1 << 10),\n+            chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, 1 << 10),\n             CoinsCacheSizeState::LARGE);\n     }\n \n     // Using the default max_* values permits way more coins to be added.\n     for (int i{0}; i < 1000; ++i) {\n         add_coin(view);\n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool),\n+            chainstate.GetCoinsCacheSizeState(&tx_pool),\n             CoinsCacheSizeState::OK);\n     }\n \n     // Flushing the view doesn't take us back to OK because cacheCoins has\n     // preallocated memory that doesn't get reclaimed even after flush.\n \n     BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, 0),\n+        chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, 0),\n         CoinsCacheSizeState::CRITICAL);\n \n     view.SetBestBlock(InsecureRand256());\n     BOOST_CHECK(view.Flush());\n     print_view_mem_usage(view);\n \n     BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, 0),\n+        chainstate.GetCoinsCacheSizeState(&tx_pool, MAX_COINS_CACHE_BYTES, 0),\n         CoinsCacheSizeState::CRITICAL);\n }\n "
      },
      {
        "sha": "3cebf1090e517032ba06c9ee44a77a794f258532",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae8c28dae747f9c4c6481049742346d18202fc8/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae8c28dae747f9c4c6481049742346d18202fc8/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fae8c28dae747f9c4c6481049742346d18202fc8",
        "patch": "@@ -2227,7 +2227,7 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n     return true;\n }\n \n-CoinsCacheSizeState CChainState::GetCoinsCacheSizeState(const CTxMemPool& tx_pool)\n+CoinsCacheSizeState CChainState::GetCoinsCacheSizeState(const CTxMemPool* tx_pool)\n {\n     return this->GetCoinsCacheSizeState(\n         tx_pool,\n@@ -2236,11 +2236,11 @@ CoinsCacheSizeState CChainState::GetCoinsCacheSizeState(const CTxMemPool& tx_poo\n }\n \n CoinsCacheSizeState CChainState::GetCoinsCacheSizeState(\n-    const CTxMemPool& tx_pool,\n+    const CTxMemPool* tx_pool,\n     size_t max_coins_cache_size_bytes,\n     size_t max_mempool_size_bytes)\n {\n-    int64_t nMempoolUsage = tx_pool.DynamicMemoryUsage();\n+    const int64_t nMempoolUsage = tx_pool ? tx_pool->DynamicMemoryUsage() : 0;\n     int64_t cacheSize = CoinsTip().DynamicMemoryUsage();\n     int64_t nTotalSpace =\n         max_coins_cache_size_bytes + std::max<int64_t>(max_mempool_size_bytes - nMempoolUsage, 0);\n@@ -2279,7 +2279,7 @@ bool CChainState::FlushStateToDisk(\n     {\n         bool fFlushForPrune = false;\n         bool fDoFullFlush = false;\n-        CoinsCacheSizeState cache_state = GetCoinsCacheSizeState(::mempool);\n+        CoinsCacheSizeState cache_state = GetCoinsCacheSizeState(&::mempool);\n         LOCK(cs_LastBlockFile);\n         if (fPruneMode && (fCheckForPruning || nManualPruneHeight > 0) && !fReindex) {\n             if (nManualPruneHeight > 0) {"
      },
      {
        "sha": "534162d64aa6a709d01dfc1f102560c5bf70e72c",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae8c28dae747f9c4c6481049742346d18202fc8/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae8c28dae747f9c4c6481049742346d18202fc8/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fae8c28dae747f9c4c6481049742346d18202fc8",
        "patch": "@@ -674,11 +674,11 @@ class CChainState {\n     //! Dictates whether we need to flush the cache to disk or not.\n     //!\n     //! @return the state of the size of the coins cache.\n-    CoinsCacheSizeState GetCoinsCacheSizeState(const CTxMemPool& tx_pool)\n+    CoinsCacheSizeState GetCoinsCacheSizeState(const CTxMemPool* tx_pool)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     CoinsCacheSizeState GetCoinsCacheSizeState(\n-        const CTxMemPool& tx_pool,\n+        const CTxMemPool* tx_pool,\n         size_t max_coins_cache_size_bytes,\n         size_t max_mempool_size_bytes) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n "
      }
    ]
  }
]