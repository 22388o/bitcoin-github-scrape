promag,2017-10-11T13:40:36Z,"As said in https://github.com/bitcoin/bitcoin/pull/11466#discussion_r143429735, a different interface is:\n```json\n{\n  ""wallets"": [\n    { ""name"": ""foo"", ""loaded"": true },\n    { ""name"": ""bar"", ""loaded"": false }\n  ]\n}\n```\nWhich has the advantage of allowing to add new attributes later.\n\nAnother option is to have a different RPC. So:\n - `listwallets` - returns a lists of active",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-335813034,335813034,
jnewbery,2017-10-11T14:14:43Z,concept ACK splitting this from #11466. And concept ACK using the BDB magic bytes rather than filename,https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-335824684,335824684,
meshcollider,2017-10-13T09:10:22Z,"Removed WIP, now uses BDB magic bytes, although I haven't confirmed that this works on big endian or also potentially on old versions of BDB wallets if the magic bytes changed",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-336396297,336396297,
jnewbery,2017-10-13T21:34:53Z,"I also tested manually that files show up as wallets when bytes 12-15 match the magic bdb bytes:\n\n```\n→ bitcoin-cli listwallets\n{\n  ""loaded"": [\n    ""wallet.dat""\n  ],\n  ""available"": [\n    ""wallet.dat""\n  ]\n}\n[ubuntu] /home/ubuntu/.bitcoin/regtest\n→ bitcoin-cli stop\nBitcoin server stopping\n[ubuntu] /home/ubuntu/.bitcoin/regtest\n→ for i in {1..20}; do head wallet.dat -c",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-336573123,336573123,
meshcollider,2017-10-13T22:27:03Z,Addressed @jnewbery nits and made available list mutually exclusive to loaded list. Thanks for the review :-),https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-336582040,336582040,
meshcollider,2017-10-13T22:54:19Z,"Good idea @promag, thanks :-)",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-336585784,336585784,
meshcollider,2017-10-22T06:41:25Z,Rebased on master to fix travis failure due to multiwallet.py being modified,https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-338455742,338455742,
meshcollider,2017-10-24T00:31:00Z,"Fixed @promag's nits, thanks :)\n\nBTW it would be good to have #11466 reviewed first because this is only really useful with that IMO",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-338835360,338835360,
meshcollider,2017-11-19T02:49:55Z,Rebased and updated to work with new wallets directory from #11466 ,https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-345487647,345487647,
MarcoFalke,2017-11-27T16:55:03Z,"Needs rebase, but I assume this won't work after  #11687 anyway?",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-347246631,347246631,
laanwj,2017-11-28T08:10:34Z,"> Needs rebase, but I assume this won't work after #11687 anyway?\n\nIt won't work if someone uses external wallets, but it should still work if they have all wallets in the wallet directory? (which is the default)",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-347445120,347445120,
meshcollider,2017-11-29T00:21:41Z,"I've rebased. If https://github.com/bitcoin/bitcoin/pull/11687 defaults to creating directories for each wallet rather than individual BDB files, then this may need to be modified to list directories as well as BDB files? But yes should still work",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-347709994,347709994,
meshcollider,2017-12-12T22:57:47Z,Update the documentation as per @TheBlueMatt suggestion,https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-351223146,351223146,
ryanofsky,2018-01-08T20:50:45Z,"Might be ready for merge. Unclear if ""Code looks good"" from @TheBlueMatt above is equivalent to a code ack.",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-356092319,356092319,
meshcollider,2018-01-08T22:11:50Z,"@ryanofsky sorry I haven't had time to work on your suggested changes above, I'm happy to let this wait until I've had time to address them",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-356113190,356113190,
laanwj,2018-08-31T12:28:27Z,"Closing for now w/ up for grabs, let me know when you start working on this and it needs to be reopened.",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-417648717,417648717,
jnewbery,2018-08-31T14:20:53Z,"Shame this has gone stale. I think it's useful new functionality.\n\nI'd be very happy to re-review if someone picked this up again.",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-417679327,417679327,
promag,2018-09-21T22:02:53Z,"I'm tempted to pick this as this is also useful in the UI — must be exposed in interfaces::Nodes.\n\nAs suggested by @Sjors in https://github.com/bitcoin/bitcoin/pull/13100#pullrequestreview-135815243\n\n> For opening an existing wallet I have a light preference for just scanning the default directory for wallets and showing a list of wallets to choose from. This also prevents confusion around",https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-423683042,423683042,
jarolrod,2021-05-08T02:41:36Z,@fanquake This shouldn't be `Up for grabs` anymore. The main idea behind this PR was implemented in #14291.,https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-834989405,834989405,
jnewbery,2017-10-13T21:17:01Z,"Please explicitly use `fs::is_regular_file()` (this only compiles because of Argument Dependant Lookups http://en.cppreference.com/w/cpp/language/adl which makes it difficult to understand where this function is coming from).\n\n`boost::filesystem::is_regular_file()` will return true if called on a symlink to a regular file. We don't want those to show up in the available list since they can't b",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r144658805,144658805,src/wallet/rpcwallet.cpp
promag,2017-10-13T22:40:40Z,"Suggestion to remove loop below:\n```cpp\nstd::set<std::string> loaded_set;\n...\n    loaded.push_back(pwallet->GetName());\n    loaded_set.insert(pwallet->GetName())\n}\n...\nif (loaded_set.count(it->path().filename().string()) == 0) {\n    available.push_back(it->path().filename().string());\n}\n```",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r144670799,144670799,src/wallet/rpcwallet.cpp
promag,2017-10-22T00:59:14Z,"Some of these conditions can be moved before seekg (just `continue`. Only the compare is needed.\n\nCould use 64 bit int instead?",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146119173,146119173,src/wallet/rpcwallet.cpp
meshcollider,2017-10-22T02:43:02Z,"Fixed the conditional, but IMO the char array is clearer and perhaps safer than using an int :)",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146120578,146120578,src/wallet/rpcwallet.cpp
promag,2017-10-23T20:58:24Z,"Remove, see https://stackoverflow.com/a/748059.",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146391990,146391990,src/wallet/rpcwallet.cpp
promag,2017-10-23T21:02:20Z,"Alternative, avoid nesting:\n```cpp\nif (memcmp(...) != 0) continue;\n\nif (loaded_set.count(filename) > 0) continue;\n\navailable.push_back(filename);\n```\nNote that close is automatically called, see comment below.",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146393023,146393023,src/wallet/rpcwallet.cpp
promag,2017-10-23T21:03:49Z,"Nit, add:\n```cpp\nconst std::string filename = it->path().filename().string();\n```",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146393393,146393393,src/wallet/rpcwallet.cpp
promag,2017-10-23T21:04:47Z,Nit: `file_bytes`.,https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146393611,146393611,src/wallet/rpcwallet.cpp
promag,2017-10-23T21:04:57Z,"Nit, remove empty line.",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146393661,146393661,src/wallet/rpcwallet.cpp
promag,2017-10-23T21:10:03Z,Assert available is empty array?,https://github.com/bitcoin/bitcoin/pull/11485#discussion_r146394843,146394843,test/functional/multiwallet.py
jnewbery,2017-11-29T19:21:54Z,"I like this new test, but I think it can be improved in a couple of ways:\n\n- test that a non-empty file without the magic bytes is excluded\n- there's an implicit assumption that the symlink and folder created earlier in the test are still around. You could explicitly assert that. If the earlier parts of this test get change, eg the file names are changed, then this check will continue to suc",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r153889026,153889026,test/functional/multiwallet.py
TheBlueMatt,2017-12-04T18:09:58Z,"Need to update the docs above. Maybe also note that false-positives may include files from exceedingly old (pre-0.8, I believe) nodes as well as duplicates of wallets which cannot be opened simultaneously.",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r154728492,154728492,src/wallet/rpcwallet.cpp
ryanofsky,2017-12-18T15:05:13Z,"I don't think it's a big deal to break backwards compatibility here, but I also don't see any benefit in doing so. I'd think that a better approach to overloading the `listwallets` function would be to add a new `listwalletdir` function that would return a list of wallet files inside `-walletdir`. Advantages to this approach:\n\n1) Backwards compatible\n2) Better performance for listwallets. It",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r157507988,157507988,doc/release-notes.md
ryanofsky,2017-12-18T15:05:44Z,"Would suggest returning an array of objects rather than an array of strings to future proof this. This would allow including other information like sizes, last modification times, whether databases are flushed, or locked by another process. (Latter two would be meaningful after #11687 when wallet files can be opened in their own berkelydb environments instead of all using the same shared environme",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r157508153,157508153,src/wallet/rpcwallet.cpp
ryanofsky,2017-12-18T15:25:26Z,"Note: to be compatible with #11687, you would drop the `continue` above and change this line to something like:\n\n```c++\nstd::ifstream file(fs::is_regular_file(*it) ? it->path() : (it->path() / ""wallet.dat"")).string(), std::ios::binary);\n```",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r157514148,157514148,src/wallet/rpcwallet.cpp
promag,2017-12-18T22:19:16Z,"Partially agree with @ryanofsky. Still think one array is enough, see https://github.com/bitcoin/bitcoin/pull/11485#issuecomment-335813034. And `listwallets` could have an optional parameter to filter available, loaded or both.",https://github.com/bitcoin/bitcoin/pull/11485#discussion_r157616468,157616468,src/wallet/rpcwallet.cpp
