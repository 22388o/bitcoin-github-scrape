practicalswift,2019-11-18 15:49:34,"ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n\nVery nice!\n\nSomewhat related: it would be nice to have the same explicit guarantee for `LogPrint`/`LogPrintf`. That would allow compilers and static analyzers to treat a larger parts of our code base as ""non-throwing"" instead of ""potentially throwing"" :)",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555075885,555075885,
laanwj,2019-11-18 16:32:56,"> Somewhat related: it would be nice to have the same explicit guarantee for LogPrint/LogPrintf. \n\nWouldn't that be easy to do? `LogPrintf` already catches the only relevant exception, `tinyformat::format_error`, internally. I don't think any exceptions are supposed to leak out of it.\n",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555096927,555096927,
practicalswift,2019-11-18 16:42:28,"@laanwj Yes, exactly! It is only a matter of formalizing that with a `noexcept` :)",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555101327,555101327,
MarcoFalke,2019-11-18 17:26:30,@practicalswift Wouldn't upstream be a better place to propose this change?,https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555121028,555121028,
practicalswift,2019-11-18 17:37:53,"@MarcoFalke Upstream throws `tinyformat::format_error` which we catch: thus `noexcept` only makes sense on our end of things, no? :)",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555125790,555125790,
MarcoFalke,2019-11-18 17:55:38,"Fine, but `LogPrintStr` is also called, which might throw exceptions. In either case, this discussion should happen elsewhere.",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555133012,555133012,
laanwj,2019-11-19 07:50:57,"I don't think `LogPrintStr` is supposed to ever raise an exception, but sure, that'd need to be checked. Agree this is off topic here.\n\nACK 55b2cb199c276781b6daa5438af2da57dea3ac52",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555378161,555378161,
practicalswift,2019-11-19 09:30:23,"@laanwj @MarcoFalke Please note that `SeedPeriodic` which is annotated `noexcept` in this PR calls `LogPrintf`:\n\nhttps://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/random.cpp#L480-L491\n\nThus the question of a `noexcept` annotation for `LogPrintf` is not _entirely_ off topic here :)",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555414298,555414298,
laanwj,2019-11-19 10:07:51,"> Thus the question of a noexcept annotation for LogPrintf is not entirely off topic here :)\n\nSure. I'm going to work on a PR to make logging noexcept.",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-555430905,555430905,
DrahtBot,2019-12-05 06:10:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17670](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17670.html) (Move events_hasher into RNGState() by sipa)",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-561986078,561986078,
sipa,2019-12-05 08:41:06,"ReACK. I accidentally redid part of this in #17670. The documentation improvements here should be done anyway, so let's do this PR first.",https://github.com/bitcoin/bitcoin/pull/17507#issuecomment-562028641,562028641,
laanwj,2019-11-18 15:35:42,Very good :+1: ,https://github.com/bitcoin/bitcoin/pull/17507#discussion_r347449119,347449119,src/random.cpp
