[
  {
    "sha": "8e59af55aaf1b196575084bce2448af02d97d745",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTU5YWY1NWFhZjFiMTk2NTc1MDg0YmNlMjQ0OGFmMDJkOTdkNzQ1",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-07-31T17:21:00Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-10-03T18:03:27Z"
      },
      "message": "feefilter: Compute the absolute fee rather than stored rate to match mempool acceptance logic",
      "tree": {
        "sha": "066de49201c9a95482cc601fbe385195c991752c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/066de49201c9a95482cc601fbe385195c991752c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e59af55aaf1b196575084bce2448af02d97d745",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e59af55aaf1b196575084bce2448af02d97d745",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e59af55aaf1b196575084bce2448af02d97d745",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e59af55aaf1b196575084bce2448af02d97d745/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 15,
      "deletions": 11
    },
    "files": [
      {
        "sha": "9aa0294c27db4509e90619648a98d748dd4707c6",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e59af55aaf1b196575084bce2448af02d97d745/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e59af55aaf1b196575084bce2448af02d97d745/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=8e59af55aaf1b196575084bce2448af02d97d745",
        "patch": "@@ -3847,10 +3847,10 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                 if (fSendTrickle && pto->m_tx_relay->fSendMempool) {\n                     auto vtxinfo = mempool.infoAll();\n                     pto->m_tx_relay->fSendMempool = false;\n-                    CAmount filterrate = 0;\n+                    CFeeRate filterrate;\n                     {\n                         LOCK(pto->m_tx_relay->cs_feeFilter);\n-                        filterrate = pto->m_tx_relay->minFeeFilter;\n+                        filterrate = CFeeRate(pto->m_tx_relay->minFeeFilter);\n                     }\n \n                     LOCK(pto->m_tx_relay->cs_filter);\n@@ -3859,9 +3859,9 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                         const uint256& hash = txinfo.tx->GetHash();\n                         CInv inv(MSG_TX, hash);\n                         pto->m_tx_relay->setInventoryTxToSend.erase(hash);\n-                        if (filterrate) {\n-                            if (txinfo.feeRate.GetFeePerK() < filterrate)\n-                                continue;\n+                        // Don't send transactions that peers will not put into their mempool\n+                        if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n+                            continue;\n                         }\n                         if (pto->m_tx_relay->pfilter) {\n                             if (!pto->m_tx_relay->pfilter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n@@ -3884,10 +3884,10 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                     for (std::set<uint256>::iterator it = pto->m_tx_relay->setInventoryTxToSend.begin(); it != pto->m_tx_relay->setInventoryTxToSend.end(); it++) {\n                         vInvTx.push_back(it);\n                     }\n-                    CAmount filterrate = 0;\n+                    CFeeRate filterrate;\n                     {\n                         LOCK(pto->m_tx_relay->cs_feeFilter);\n-                        filterrate = pto->m_tx_relay->minFeeFilter;\n+                        filterrate = CFeeRate(pto->m_tx_relay->minFeeFilter);\n                     }\n                     // Topologically and fee-rate sort the inventory we send for privacy and priority reasons.\n                     // A heap is used so that not all items need sorting if only a few are being sent.\n@@ -3914,7 +3914,8 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                         if (!txinfo.tx) {\n                             continue;\n                         }\n-                        if (filterrate && txinfo.feeRate.GetFeePerK() < filterrate) {\n+                        // Peer told you to not send transactions at that feerate? Don't bother sending it.\n+                        if (txinfo.fee < filterrate.GetFee(txinfo.vsize)) {\n                             continue;\n                         }\n                         if (pto->m_tx_relay->pfilter && !pto->m_tx_relay->pfilter->IsRelevantAndUpdate(*txinfo.tx)) continue;"
      },
      {
        "sha": "e4c1fd4bc6446e6f7dc047a4c136c1817ed7d489",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e59af55aaf1b196575084bce2448af02d97d745/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e59af55aaf1b196575084bce2448af02d97d745/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=8e59af55aaf1b196575084bce2448af02d97d745",
        "patch": "@@ -773,7 +773,7 @@ void CTxMemPool::queryHashes(std::vector<uint256>& vtxid) const\n }\n \n static TxMempoolInfo GetInfo(CTxMemPool::indexed_transaction_set::const_iterator it) {\n-    return TxMempoolInfo{it->GetSharedTx(), it->GetTime(), CFeeRate(it->GetFee(), it->GetTxSize()), it->GetModifiedFee() - it->GetFee()};\n+    return TxMempoolInfo{it->GetSharedTx(), it->GetTime(), it->GetFee(), it->GetTxSize(), it->GetModifiedFee() - it->GetFee()};\n }\n \n std::vector<TxMempoolInfo> CTxMemPool::infoAll() const"
      },
      {
        "sha": "229a923a28a14a5030fc2698da06faddf70e5cb3",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e59af55aaf1b196575084bce2448af02d97d745/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e59af55aaf1b196575084bce2448af02d97d745/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=8e59af55aaf1b196575084bce2448af02d97d745",
        "patch": "@@ -334,8 +334,11 @@ struct TxMempoolInfo\n     /** Time the transaction entered the mempool. */\n     std::chrono::seconds m_time;\n \n-    /** Feerate of the transaction. */\n-    CFeeRate feeRate;\n+    /** Fee of the transaction. */\n+    CAmount fee;\n+\n+    /** Virtual size of the transaction. */\n+    size_t vsize;\n \n     /** The fee delta. */\n     int64_t nFeeDelta;"
      }
    ]
  },
  {
    "sha": "6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTUxZjc5NTE3MTZkNmQ2ZmMwZjliNTYwMjhmM2EwZGQwMmI2MWM4",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-08-20T13:58:35Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-10-03T18:03:27Z"
      },
      "message": "Disallow implicit conversion for CFeeRate constructor",
      "tree": {
        "sha": "3f5666c9f0821de16377da5bb355c6f2529a464e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f5666c9f0821de16377da5bb355c6f2529a464e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e59af55aaf1b196575084bce2448af02d97d745",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e59af55aaf1b196575084bce2448af02d97d745",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e59af55aaf1b196575084bce2448af02d97d745"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d081f2ce8ee76a3b78ce149bd1153f6b63031342",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
        "patch": "@@ -25,7 +25,7 @@ class CFeeRate\n     /** Fee rate of 0 satoshis per kB */\n     CFeeRate() : nSatoshisPerK(0) { }\n     template<typename I>\n-    CFeeRate(const I _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) {\n+    explicit CFeeRate(const I _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) {\n         // We've previously had bugs creep in from silent double->int conversion...\n         static_assert(std::is_integral<I>::value, \"CFeeRate should be used without floats\");\n     }"
      },
      {
        "sha": "0904c03669f8034e98c1315f8e77ff83cb24cd17",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
        "patch": "@@ -2327,7 +2327,7 @@ static UniValue settxfee(const JSONRPCRequest& request)\n \n     CAmount nAmount = AmountFromValue(request.params[0]);\n     CFeeRate tx_fee_rate(nAmount, 1000);\n-    if (tx_fee_rate == 0) {\n+    if (tx_fee_rate == CFeeRate(0)) {\n         // automatic selection\n     } else if (tx_fee_rate < pwallet->chain().relayMinFee()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"txfee cannot be less than min relay tx fee (%s)\", pwallet->chain().relayMinFee().ToString()));\n@@ -3386,7 +3386,7 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             }\n         } else if (options.exists(\"fee_rate\")) {\n             CFeeRate fee_rate(AmountFromValue(options[\"fee_rate\"]));\n-            if (fee_rate <= 0) {\n+            if (fee_rate <= CFeeRate(0)) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid fee_rate %s (must be greater than 0)\", fee_rate.ToString()));\n             }\n             coin_control.m_feerate = fee_rate;"
      }
    ]
  },
  {
    "sha": "eb7b78165966f2c79da71b993c4c4d793e37297f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjdiNzgxNjU5NjZmMmM3OWRhNzFiOTkzYzRjNGQ3OTNlMzcyOTdm",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-08-21T20:36:42Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-10-03T18:03:27Z"
      },
      "message": "modify p2p_feefilter test to catch rounding error",
      "tree": {
        "sha": "6012336ef4a3bd2ba770a894b9dbf82d9576bff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6012336ef4a3bd2ba770a894b9dbf82d9576bff5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb7b78165966f2c79da71b993c4c4d793e37297f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb7b78165966f2c79da71b993c4c4d793e37297f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb7b78165966f2c79da71b993c4c4d793e37297f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb7b78165966f2c79da71b993c4c4d793e37297f/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a51f7951716d6d6fc0f9b56028f3a0dd02b61c8"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4f242bd94a639bed05ab1d144e818225a28e034e",
        "filename": "test/functional/p2p_feefilter.py",
        "status": "modified",
        "additions": 16,
        "deletions": 7,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb7b78165966f2c79da71b993c4c4d793e37297f/test/functional/p2p_feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb7b78165966f2c79da71b993c4c4d793e37297f/test/functional/p2p_feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_feefilter.py?ref=eb7b78165966f2c79da71b993c4c4d793e37297f",
        "patch": "@@ -41,6 +41,12 @@ def clear_invs(self):\n class FeeFilterTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        # We lower the various required feerates for this test\n+        # to catch a corner-case where feefilter used to slightly undercut\n+        # mempool and wallet feerate calculation based on GetFee\n+        # rounding down 3 places, leading to stranded transactions.\n+        # See issue #16499\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\", \"-mintxfee=0.00000100\"]]*self.num_nodes\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -54,22 +60,25 @@ def run_test(self):\n \n         self.nodes[0].add_p2p_connection(TestP2PConn())\n \n-        # Test that invs are received for all txs at feerate of 20 sat/byte\n-        node1.settxfee(Decimal(\"0.00020000\"))\n+        # Test that invs are received by test connection for all txs at\n+        # feerate of .2 sat/byte\n+        node1.settxfee(Decimal(\"0.00000200\"))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for x in range(3)]\n         assert allInvsMatch(txids, self.nodes[0].p2p)\n         self.nodes[0].p2p.clear_invs()\n \n-        # Set a filter of 15 sat/byte\n-        self.nodes[0].p2p.send_and_ping(msg_feefilter(15000))\n+        # Set a filter of .15 sat/byte on test connection\n+        self.nodes[0].p2p.send_and_ping(msg_feefilter(150))\n \n-        # Test that txs are still being received (paying 20 sat/byte)\n+        # Test that txs are still being received by test connection (paying .15 sat/byte)\n+        node1.settxfee(Decimal(\"0.00000150\"))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for x in range(3)]\n         assert allInvsMatch(txids, self.nodes[0].p2p)\n         self.nodes[0].p2p.clear_invs()\n \n-        # Change tx fee rate to 10 sat/byte and test they are no longer received\n-        node1.settxfee(Decimal(\"0.00010000\"))\n+        # Change tx fee rate to .1 sat/byte and test they are no longer received\n+        # by the test connection\n+        node1.settxfee(Decimal(\"0.00000100\"))\n         [node1.sendtoaddress(node1.getnewaddress(), 1) for x in range(3)]\n         self.sync_mempools() # must be sure node 0 has received all txs\n "
      }
    ]
  }
]