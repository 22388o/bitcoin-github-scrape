[
  {
    "sha": "eec37136fd0f6ab80772380d8f047d98743f31f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWMzNzEzNmZkMGY2YWI4MDc3MjM4MGQ4ZjA0N2Q5ODc0M2YzMWY1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-28T00:24:31Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-02-25T23:44:49Z"
      },
      "message": "make CMessageHeader a dumb storage class\n\nIt shouldn't know or care about bitcoind's chain param selection",
      "tree": {
        "sha": "f2e22ac82464d1d37ec312c1b76ab98cb8a29525",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2e22ac82464d1d37ec312c1b76ab98cb8a29525"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eec37136fd0f6ab80772380d8f047d98743f31f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec37136fd0f6ab80772380d8f047d98743f31f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eec37136fd0f6ab80772380d8f047d98743f31f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec37136fd0f6ab80772380d8f047d98743f31f5/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 17,
      "deletions": 18
    },
    "files": [
      {
        "sha": "78b575d8f3769ded221e527b0f3f65fa60b6e5e3",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec37136fd0f6ab80772380d8f047d98743f31f5/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec37136fd0f6ab80772380d8f047d98743f31f5/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=eec37136fd0f6ab80772380d8f047d98743f31f5",
        "patch": "@@ -14,8 +14,6 @@\n \n #include <vector>\n \n-typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n-\n struct CDNSSeedData {\n     std::string name, host;\n     CDNSSeedData(const std::string &strName, const std::string &strHost) : name(strName), host(strHost) {}\n@@ -42,7 +40,7 @@ class CChainParams\n     };\n \n     const uint256& HashGenesisBlock() const { return hashGenesisBlock; }\n-    const MessageStartChars& MessageStart() const { return pchMessageStart; }\n+    const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n     const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n     const arith_uint256& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n@@ -83,7 +81,7 @@ class CChainParams\n     CChainParams() {}\n \n     uint256 hashGenesisBlock;\n-    MessageStartChars pchMessageStart;\n+    CMessageHeader::MessageStartChars pchMessageStart;\n     //! Raw pub key bytes for the broadcast alert signing key.\n     std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;"
      },
      {
        "sha": "c9a2f34a4d454a7bbc691a1b7965cd5002efd41f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec37136fd0f6ab80772380d8f047d98743f31f5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec37136fd0f6ab80772380d8f047d98743f31f5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=eec37136fd0f6ab80772380d8f047d98743f31f5",
        "patch": "@@ -4307,7 +4307,7 @@ bool ProcessMessages(CNode* pfrom)\n \n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n-        if (!hdr.IsValid())\n+        if (!hdr.IsValid(Params().MessageStart()))\n         {\n             LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n             continue;"
      },
      {
        "sha": "36a5b6fb6b3856f2a840c39f48ef0d66277d006d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec37136fd0f6ab80772380d8f047d98743f31f5/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec37136fd0f6ab80772380d8f047d98743f31f5/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=eec37136fd0f6ab80772380d8f047d98743f31f5",
        "patch": "@@ -509,7 +509,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes)\n         // get current incomplete message, or create a new one\n         if (vRecvMsg.empty() ||\n             vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(SER_NETWORK, nRecvVersion));\n+            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, nRecvVersion));\n \n         CNetMessage& msg = vRecvMsg.back();\n \n@@ -1970,7 +1970,7 @@ void CNode::BeginMessage(const char* pszCommand) EXCLUSIVE_LOCK_FUNCTION(cs_vSen\n {\n     ENTER_CRITICAL_SECTION(cs_vSend);\n     assert(ssSend.size() == 0);\n-    ssSend << CMessageHeader(pszCommand, 0);\n+    ssSend << CMessageHeader(Params().MessageStart(), pszCommand, 0);\n     LogPrint(\"net\", \"sending: %s \", SanitizeString(pszCommand));\n }\n "
      },
      {
        "sha": "0a9fbb38c0cd5cc3fb931ebfaf1bdf792c2cebfb",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec37136fd0f6ab80772380d8f047d98743f31f5/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec37136fd0f6ab80772380d8f047d98743f31f5/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=eec37136fd0f6ab80772380d8f047d98743f31f5",
        "patch": "@@ -183,7 +183,7 @@ class CNetMessage {\n \n     int64_t nTime;                  // time (in microseconds) of message receipt.\n \n-    CNetMessage(int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), vRecv(nTypeIn, nVersionIn) {\n+    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n         hdrbuf.resize(24);\n         in_data = false;\n         nHdrPos = 0;"
      },
      {
        "sha": "568580a595a89d8e9f3c49e3502d8b7eaf38f412",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec37136fd0f6ab80772380d8f047d98743f31f5/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec37136fd0f6ab80772380d8f047d98743f31f5/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=eec37136fd0f6ab80772380d8f047d98743f31f5",
        "patch": "@@ -5,7 +5,6 @@\n \n #include \"protocol.h\"\n \n-#include \"chainparams.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n@@ -21,17 +20,17 @@ static const char* ppszTypeName[] =\n     \"filtered block\"\n };\n \n-CMessageHeader::CMessageHeader()\n+CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn)\n {\n-    memcpy(pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE);\n+    memcpy(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE);\n     memset(pchCommand, 0, sizeof(pchCommand));\n     nMessageSize = -1;\n     nChecksum = 0;\n }\n \n-CMessageHeader::CMessageHeader(const char* pszCommand, unsigned int nMessageSizeIn)\n+CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn)\n {\n-    memcpy(pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE);\n+    memcpy(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE);\n     memset(pchCommand, 0, sizeof(pchCommand));\n     strncpy(pchCommand, pszCommand, COMMAND_SIZE);\n     nMessageSize = nMessageSizeIn;\n@@ -43,10 +42,10 @@ std::string CMessageHeader::GetCommand() const\n     return std::string(pchCommand, pchCommand + strnlen(pchCommand, COMMAND_SIZE));\n }\n \n-bool CMessageHeader::IsValid() const\n+bool CMessageHeader::IsValid(const MessageStartChars& pchMessageStartIn) const\n {\n     // Check start string\n-    if (memcmp(pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE) != 0)\n+    if (memcmp(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE) != 0)\n         return false;\n \n     // Check the command string for errors"
      },
      {
        "sha": "e838c0d363874dd1dcaf9855063d9e970f46f69d",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec37136fd0f6ab80772380d8f047d98743f31f5/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec37136fd0f6ab80772380d8f047d98743f31f5/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=eec37136fd0f6ab80772380d8f047d98743f31f5",
        "patch": "@@ -29,11 +29,13 @@\n class CMessageHeader\n {\n public:\n-    CMessageHeader();\n-    CMessageHeader(const char* pszCommand, unsigned int nMessageSizeIn);\n+    typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n+\n+    CMessageHeader(const MessageStartChars& pchMessageStartIn);\n+    CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn);\n \n     std::string GetCommand() const;\n-    bool IsValid() const;\n+    bool IsValid(const MessageStartChars& messageStart) const;\n \n     ADD_SERIALIZE_METHODS;\n "
      }
    ]
  }
]