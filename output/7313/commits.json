[
  {
    "sha": "0331aa350c04253f3b94604a0152042646fc94bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzMxYWEzNTBjMDQyNTNmM2I5NDYwNGEwMTUyMDQyNjQ2ZmM5NGJi",
    "commit": {
      "author": {
        "name": "calebogden",
        "email": "email@calebogden.com",
        "date": "2016-01-08T21:31:42Z"
      },
      "committer": {
        "name": "calebogden",
        "email": "email@calebogden.com",
        "date": "2016-01-08T21:31:42Z"
      },
      "message": "Fixing typos on security-check.py and torcontrol.cpp",
      "tree": {
        "sha": "5eefb0312285ec50664bfe306018484b98e40045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5eefb0312285ec50664bfe306018484b98e40045"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0331aa350c04253f3b94604a0152042646fc94bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0331aa350c04253f3b94604a0152042646fc94bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0331aa350c04253f3b94604a0152042646fc94bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0331aa350c04253f3b94604a0152042646fc94bb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b1cf0058d9b3d3e218f1dc31ee688e5beb21f573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1cf0058d9b3d3e218f1dc31ee688e5beb21f573",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1cf0058d9b3d3e218f1dc31ee688e5beb21f573"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "fe5dc9ad891ef0e8de6e9905ddf1bc3117c65528",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0331aa350c04253f3b94604a0152042646fc94bb/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0331aa350c04253f3b94604a0152042646fc94bb/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=0331aa350c04253f3b94604a0152042646fc94bb",
        "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/python2\n '''\n Perform basic ELF security checks on a series of executables.\n-Exit status will be 0 if succesful, and the program will be silent.\n+Exit status will be 0 if successful, and the program will be silent.\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n Needs `readelf` (for ELF) and `objdump` (for PE).\n '''"
      },
      {
        "sha": "9a783b970450d655aa75dec8fa7b1c334a3b74aa",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0331aa350c04253f3b94604a0152042646fc94bb/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0331aa350c04253f3b94604a0152042646fc94bb/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=0331aa350c04253f3b94604a0152042646fc94bb",
        "patch": "@@ -79,7 +79,7 @@ class TorControlConnection\n     /**\n      * Connect to a Tor control port.\n      * target is address of the form host:port.\n-     * connected is the handler that is called when connection is succesfully established.\n+     * connected is the handler that is called when connection is successfully established.\n      * disconnected is a handler that is called when the connection is broken.\n      * Return true on success.\n      */\n@@ -177,7 +177,7 @@ void TorControlConnection::eventcb(struct bufferevent *bev, short what, void *ct\n {\n     TorControlConnection *self = (TorControlConnection*)ctx;\n     if (what & BEV_EVENT_CONNECTED) {\n-        LogPrint(\"tor\", \"tor: Succesfully connected!\\n\");\n+        LogPrint(\"tor\", \"tor: Successfully connected!\\n\");\n         self->connected(*self);\n     } else if (what & (BEV_EVENT_EOF|BEV_EVENT_ERROR)) {\n         if (what & BEV_EVENT_ERROR)\n@@ -380,7 +380,7 @@ class TorController\n     void authchallenge_cb(TorControlConnection& conn, const TorControlReply& reply);\n     /** Callback for PROTOCOLINFO result */\n     void protocolinfo_cb(TorControlConnection& conn, const TorControlReply& reply);\n-    /** Callback after succesful connection */\n+    /** Callback after successful connection */\n     void connected_cb(TorControlConnection& conn);\n     /** Callback after connection lost or failed connection attempt */\n     void disconnected_cb(TorControlConnection& conn);\n@@ -419,7 +419,7 @@ TorController::~TorController()\n void TorController::add_onion_cb(TorControlConnection& conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n-        LogPrint(\"tor\", \"tor: ADD_ONION succesful\\n\");\n+        LogPrint(\"tor\", \"tor: ADD_ONION successful\\n\");\n         BOOST_FOREACH(const std::string &s, reply.lines) {\n             std::map<std::string,std::string> m = ParseTorReplyMapping(s);\n             std::map<std::string,std::string>::iterator i;\n@@ -448,7 +448,7 @@ void TorController::add_onion_cb(TorControlConnection& conn, const TorControlRep\n void TorController::auth_cb(TorControlConnection& conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n-        LogPrint(\"tor\", \"tor: Authentication succesful\\n\");\n+        LogPrint(\"tor\", \"tor: Authentication successful\\n\");\n \n         // Now that we know Tor is running setup the proxy for onion addresses\n         // if -onion isn't set to something else.\n@@ -501,7 +501,7 @@ static std::vector<uint8_t> ComputeResponse(const std::string &key, const std::v\n void TorController::authchallenge_cb(TorControlConnection& conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n-        LogPrint(\"tor\", \"tor: SAFECOOKIE authentication challenge succesful\\n\");\n+        LogPrint(\"tor\", \"tor: SAFECOOKIE authentication challenge successful\\n\");\n         std::pair<std::string,std::string> l = SplitTorReplyLine(reply.lines[0]);\n         if (l.first == \"AUTHCHALLENGE\") {\n             std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);"
      }
    ]
  }
]