[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648374732",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648374732",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 648374732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODM3NDczMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T19:34:49Z",
    "updated_at": "2020-07-03T11:14:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19316 ([net] Cleanup logic around connection types by amitiuttarwar)\n* #19315 ([tests] Allow outbound & block-relay-only connections in functional tests. by amitiuttarwar)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #18044 (Use wtxid for transaction relay by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648374732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648690864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648690864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 648690864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODY5MDg2NA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T08:55:22Z",
    "updated_at": "2020-06-24T08:55:22Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\nThe idea makes perfect sense from the high-level. The implementation seems safe.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648690864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648809825",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648809825",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 648809825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODgwOTgyNQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T13:10:08Z",
    "updated_at": "2020-06-24T13:10:08Z",
    "author_association": "MEMBER",
    "body": "Does this new global data structure need to be limited in size in some way? At least when it was per peer, it would go away when the peer was disconnected. I'm vaguely worried that this might open up a new DoS vector.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648809825/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648852380",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648852380",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 648852380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg1MjM4MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T14:22:59Z",
    "updated_at": "2020-06-24T14:22:59Z",
    "author_association": "MEMBER",
    "body": "> Does this new global data structure need to be limited in size in some way? At least when it was per peer, it would go away when the peer was disconnected. I'm vaguely worried that this might open up a new DoS vector.\r\n\r\nThat's the right question to be asking, but I think we're safe:\r\n\r\n- items are inserted into `g_orphan_work_set` at the point they would have been inserted into the per-peer `orphan_work_set`.\r\n- one item is popped from that set on every message handler thread loop. In effect this means that the set is emptied very quickly. Even if the peer that provided the parent (which previously would have held the object in its `orphan_work_set`), the object will very quickly be processed from `g_orphan_work_set`.\r\n\r\nThese entries can't persist for long in the set. I could refactor `ProcessOrphanTx()` to make it more obvious that we'll always empty this set quickly, but I wanted to keep the diff small for this PR. Perhaps I could do that in a follow-up.\r\n\r\nLonger term, it might make sense to consolidate all orphan logic into a module, similar to how #19184 overhauls request logic.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648852380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651242980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-651242980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 651242980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTI0Mjk4MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T16:58:17Z",
    "updated_at": "2020-06-29T16:58:17Z",
    "author_association": "MEMBER",
    "body": "> If I can give it a shot, the suspected DoS vector is something along the lines of a peer feeding us fake orphan transactions, therefore inflating the size of g_orphan_work_set and preventing us from processing any other orphaned transactions?\r\n\r\nI think @laanwj's concern may have been in general about us storing unvalidated data from a peer, which is always something that we need to be careful about. It's not so much of a concern here because the size of `orphan_work_set` is limited by the size of the orphan set, and we'll always clear `orphan_work_set` very quickly.\r\n\r\nI have a branch here: https://github.com/jnewbery/bitcoin/tree/2020-06-global-orphans2 that refactors `ProcessOrphanTx()` and makes it very obvious that `g_orphan_work_set` is emptied very quickly. I'm not sure whether it's worth opening that as a follow-up after this is merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651242980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651250718",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-651250718",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 651250718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTI1MDcxOA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T17:14:05Z",
    "updated_at": "2020-06-29T17:14:05Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651250718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652436023",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-652436023",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 652436023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjQzNjAyMw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T14:00:02Z",
    "updated_at": "2020-07-01T14:00:02Z",
    "author_association": "MEMBER",
    "body": "> I wonder if there may have been a reason why it was implemented this way in #15644 / 866c805, so it may be good to have review by the author of the code.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/15644#discussion_r270527597\r\n\r\n> To keep the commits hygienic, consider removing the call to ProcessOrphanTx from ProcessMessage in the same commit that adds the new call to it from ProcessGlobalTasks, e.g. squashing the last two commits.\r\n\r\nI think that'd be doing too much in the same commit, but I'm happy to squash if other reviewers agree.\r\n\r\n> If you retouch, might be good to fixup s/ProcessMessages/ProcessMessage/ in the commit message, as both function names exist in the file.\r\n\r\nI did intend to put ProcessMessages. ProcessMessage is called from ProcessMessages, and ProcessMessages is the entry point into net processing for the message handler thread, so from a high level, it makes sense to say that his change is moving orphan reconsideration from ProcessMessages into ProcessGlobalTasks.\r\n\r\n> Consider adding here the Doxygen comments commit from your branch.\r\n\r\nI think that can stay in the follow-up PR, but again, I'm happy to add it here if other reviewers think it makes more sense to add it here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652436023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652485733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-652485733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 652485733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjQ4NTczMw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T15:25:44Z",
    "updated_at": "2020-07-01T15:25:44Z",
    "author_association": "MEMBER",
    "body": "Thanks @jnewbery.\r\n\r\nI wanted to encourage the Doxygen commit if you weren't sure about doing a follow-up.\r\n\r\nACK 9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652485733/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652773736",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-652773736",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 652773736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjc3MzczNg==",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?u=84369c78e74365314bd9806230ab56f2c1585fb4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T04:26:11Z",
    "updated_at": "2020-07-02T04:26:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK 9487f082e5f4b9696e3b4fd42aafebf42617ca9c\r\n\r\nLooking forward to the follow-up!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652773736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652779980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-652779980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 652779980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjc3OTk4MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T04:51:39Z",
    "updated_at": "2020-07-02T04:52:04Z",
    "author_association": "MEMBER",
    "body": "It took me a while to remember the context here, but this PR causes a subtle but significant change in P2P behavior.\r\n\r\nThe reason that there is a per-peer set of to-be-processed potential orphans is that this lets us pause processing for that peer until they're all processed - as long as the orphan work set for a peer is non-empty, all that happens for that peer is steps towards emptying that set. This makes the behavior observationally equivalent (from the perspective of any single peer) to recursively processing all orphans immediately as soon as the \"missing link\" transaction is received.\r\n\r\nWith this change that is no longer the case - P2P messages from the peer that provides the missing link can and will be processed and responded to before processing the dependent orphans. I'm not sure that anything depends on that behavior, but I also can't guarantee that there isn't.\r\n\r\nI don't think code cleanup is a sufficient justification for such a fundamental P2P change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652779980/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653069628",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-653069628",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 653069628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA2OTYyOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T15:19:44Z",
    "updated_at": "2020-07-02T15:19:44Z",
    "author_association": "MEMBER",
    "body": ">  I'm not sure that anything depends on that behavior, but I also can't guarantee that there isn't.\r\n\r\n> I don't think code cleanup is a sufficient justification for such a fundamental P2P change.\r\n\r\nFor context, this is part of a [wider project to move all application-layer data and processing into net processing](https://github.com/bitcoin/bitcoin/issues/19398).\r\n\r\nThe PR that introduced `orphan_work_set` and moved orphan data into the net layer also changed behaviour, as you noted in the PR description: _Messages from other peers arriving in the mean time are processed normally, but other messages from the peer that gave us the parent have to wait until all orphan processing is done._ ie processing the orphan_work_set is interposed with processing messages from other peers. How were you able to satisfy yourself that that change was safe, but this one isn't? Is there a specific scenario you're thinking of here which you're worried about?\r\n\r\nI can't think of any problems this might cause. If a peer announces a tx that conflicts with an orphan and also provides the parent, then in master, the orphan will be accepted into the mempool, but in this branch the conflicting tx may be accepted first. I don't think that's an issue since in the case of two conflicting txs we never guarantee which one will make it into the mempool. Are there other scenarios we should be considering?\r\n\r\nGenerally, if we're worried about behaviour changes we try to reason about them and satisfy ourselves that they're safe, and include tests if we have any doubts. I don't see why this PR should be different.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653069628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653247942",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-653247942",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 653247942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI0Nzk0Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T22:37:03Z",
    "updated_at": "2020-07-02T22:37:03Z",
    "author_association": "MEMBER",
    "body": "Lots of discussion about this on IRC today: http://www.erisian.com.au/bitcoin-core-dev/log-2020-07-02.html L325 onwards.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653247942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655042711",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-655042711",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 655042711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTA0MjcxMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-07T18:25:56Z",
    "updated_at": "2020-07-07T18:25:56Z",
    "author_association": "MEMBER",
    "body": "FWIW here is a commit that moves `orphan_work_set` to net_processing (inside `NodeState`) without changing semantics: https://github.com/sipa/bitcoin/commits/202007_orphan_work_set_to_np\r\n\r\nIt also makes `orphan_work_set` protected by `g_cs_orphans`, as it apparently was not explicitly protected by any lock in the existing code (which was ok as only the message handler thread accessed it, but still scary).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655042711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655071056",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-655071056",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
    "id": 655071056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTA3MTA1Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-07T19:20:08Z",
    "updated_at": "2020-07-07T19:20:08Z",
    "author_association": "MEMBER",
    "body": "This PR intended to do two things:\r\n\r\n1. Don't do orphan reconsideration in the context of an individual peer\r\n2. Move orphan_work_set data from net into net_processing.\r\n\r\nI think both changes are good. If everyone agreed, I don't think it'd be a problem to do both in this PR, but since this is controversial and @sipa has concerns that (1) is correct, it makes sense to split them out and consider them separately.\r\n\r\nThe branch at https://github.com/sipa/bitcoin/commits/202007_orphan_work_set_to_np seems fine, but I hope we'll soon have a `PeerState` struct in net_processing that isn't guarded by cs_main. That'd be a more natural place for this. See https://github.com/jnewbery/bitcoin/tree/2020-06-cs-main-split for a demonstration. No harm in moving it to `CNodeState` first, but it might be duplicate work if we're going to move it again shortly afterwards.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655071056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444741653",
    "pull_request_review_id": 436447468,
    "id": 444741653,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MTY1Mw==",
    "diff_hunk": "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer",
    "path": "src/net_processing.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "0e7e11ee0ee94b4245a637284b925473a8046eeb",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wondering if we should clarify that these tasks are expected to be limited to 1 second or something (perhaps \"lightweight tasks\")?\r\nJust so that future devs don't tempt to put any heavy logic in here.",
    "created_at": "2020-06-24T08:47:55Z",
    "updated_at": "2020-06-29T16:58:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444741653",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444741653"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444741653"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444741653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 77,
    "original_line": 77,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444902920",
    "pull_request_review_id": 436658863,
    "id": 444902920,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkwMjkyMA==",
    "diff_hunk": "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer",
    "path": "src/net_processing.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "0e7e11ee0ee94b4245a637284b925473a8046eeb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Such documentation, if it's added, should be at the level of the `PeerLogicValidation` class. We don't want anything in the message handler thread to block for a long time (or to *be blocked* by slow tasks in other threads). That includes anything in  `ProcessMessages()`, `SendMessages()` and (now) `ProcessGlobalTasks()`.",
    "created_at": "2020-06-24T13:42:58Z",
    "updated_at": "2020-06-29T16:58:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444902920",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444902920"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444902920"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444902920/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 77,
    "original_line": 77,
    "side": "RIGHT",
    "in_reply_to_id": 444741653
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446979785",
    "pull_request_review_id": 439154165,
    "id": 446979785,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3OTc4NQ==",
    "diff_hunk": "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer\n+    *\n+    * @param[in]   interrupt       Interrupt condition for processing threads\n+    * @returns     bool            true if there's more work to do\n+    */\n+    bool ProcessGlobalTasks(std::atomic<bool>& interrupt);",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 10,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "b957b0d098f5dce2961d2b1a8c7bcfeb6b8e935b",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Compiler warning `-Winconsistent-missing-override`\r\n```suggestion\r\n    bool ProcessGlobalTasks(std::atomic<bool>& interrupt) override;\r\n```",
    "created_at": "2020-06-29T13:41:02Z",
    "updated_at": "2020-06-29T16:58:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r446979785",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446979785"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r446979785"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446979785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 82,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447114046",
    "pull_request_review_id": 439329092,
    "id": 447114046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzExNDA0Ng==",
    "diff_hunk": "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer\n+    *\n+    * @param[in]   interrupt       Interrupt condition for processing threads\n+    * @returns     bool            true if there's more work to do\n+    */\n+    bool ProcessGlobalTasks(std::atomic<bool>& interrupt);",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 10,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "b957b0d098f5dce2961d2b1a8c7bcfeb6b8e935b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch. Fixed!",
    "created_at": "2020-06-29T16:52:10Z",
    "updated_at": "2020-06-29T16:58:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r447114046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447114046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r447114046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447114046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 82,
    "side": "RIGHT",
    "in_reply_to_id": 446979785
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448099273",
    "pull_request_review_id": 440526457,
    "id": 448099273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA5OTI3Mw==",
    "diff_hunk": "@@ -2832,7 +2833,7 @@ void ProcessMessage(\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(inv.hash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n                     for (const auto& elem : it_by_prev->second) {\n-                        pfrom.orphan_work_set.insert(elem->first);\n+                        g_orphan_work_set.insert(elem->first);",
    "path": "src/net_processing.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "9200126 nit: would it be better to use `emplace` here to construct rather than copy?",
    "created_at": "2020-07-01T03:48:04Z",
    "updated_at": "2020-07-01T05:10:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448099273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448099273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448099273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448099273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2836,
    "original_line": 2836,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448104820",
    "pull_request_review_id": 440526457,
    "id": 448104820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNDgyMA==",
    "diff_hunk": "@@ -3687,6 +3674,25 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     return fMoreWork;\n }\n \n+bool PeerLogicValidation::ProcessGlobalTasks(std::atomic<bool>& interruptMsgProc)\n+{\n+    // Reconsider orphan transactions that may now have parents\n+    {\n+        LOCK2(cs_main, g_cs_orphans);\n+        if (!g_orphan_work_set.empty()) {",
    "path": "src/net_processing.cpp",
    "position": 62,
    "original_position": 62,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "9200126 Do you think it would be clearer for this conditional to be a guard (return early) clause instead? e.g. etc.\r\n```diff\r\n-        if (!g_orphan_work_set.empty()) {\r\n+        if (g_orphan_work_set.empty()) return true;\r\n```",
    "created_at": "2020-07-01T04:13:56Z",
    "updated_at": "2020-07-01T05:10:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448104820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448104820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448104820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448104820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3682,
    "original_line": 3682,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448105552",
    "pull_request_review_id": 440526457,
    "id": 448105552,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNTU1Mg==",
    "diff_hunk": "@@ -3687,6 +3674,25 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     return fMoreWork;\n }\n \n+bool PeerLogicValidation::ProcessGlobalTasks(std::atomic<bool>& interruptMsgProc)\n+{\n+    // Reconsider orphan transactions that may now have parents",
    "path": "src/net_processing.cpp",
    "position": 59,
    "original_position": 59,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "9200126 A comment on the meaning of the return value logic (e.g. orphans remain in the set/more work to do) may be worth adding here.",
    "created_at": "2020-07-01T04:17:02Z",
    "updated_at": "2020-07-01T05:10:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448105552",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448105552"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448105552"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448105552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3679,
    "original_line": 3679,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448106239",
    "pull_request_review_id": 440526457,
    "id": 448106239,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwNjIzOQ==",
    "diff_hunk": "@@ -3687,6 +3674,25 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     return fMoreWork;\n }\n \n+bool PeerLogicValidation::ProcessGlobalTasks(std::atomic<bool>& interruptMsgProc)\n+{\n+    // Reconsider orphan transactions that may now have parents\n+    {\n+        LOCK2(cs_main, g_cs_orphans);\n+        if (!g_orphan_work_set.empty()) {\n+            std::list<CTransactionRef> removed_txn;\n+            ProcessOrphanTx(connman, m_mempool, g_orphan_work_set, removed_txn);\n+            for (const CTransactionRef& removedTx : removed_txn) {",
    "path": "src/net_processing.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "9200126 I wanted to ask if these two variable names could be updated/improved while moving this code (e.g. to `removed_txns` and `removed_txn`), but it looks like it may be clearer to leave them as-is given the same naming is used in related functions.",
    "created_at": "2020-07-01T04:19:59Z",
    "updated_at": "2020-07-01T05:10:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448106239",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448106239"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448106239"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448106239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3685,
    "original_line": 3685,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448377825",
    "pull_request_review_id": 440888709,
    "id": 448377825,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3NzgyNQ==",
    "diff_hunk": "@@ -2832,7 +2833,7 @@ void ProcessMessage(\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(inv.hash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n                     for (const auto& elem : it_by_prev->second) {\n-                        pfrom.orphan_work_set.insert(elem->first);\n+                        g_orphan_work_set.insert(elem->first);",
    "path": "src/net_processing.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "emplace wins when you have to construct a temporary in place which is then copied/moved to the container. When you already have the object in hand (as we do here), it makes no difference - the object is just copied into the container.",
    "created_at": "2020-07-01T13:51:31Z",
    "updated_at": "2020-07-01T13:51:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448377825",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448377825"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448377825"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448377825/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2836,
    "original_line": 2836,
    "side": "RIGHT",
    "in_reply_to_id": 448099273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379068",
    "pull_request_review_id": 440890476,
    "id": 448379068,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3OTA2OA==",
    "diff_hunk": "@@ -3687,6 +3674,25 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     return fMoreWork;\n }\n \n+bool PeerLogicValidation::ProcessGlobalTasks(std::atomic<bool>& interruptMsgProc)\n+{\n+    // Reconsider orphan transactions that may now have parents\n+    {\n+        LOCK2(cs_main, g_cs_orphans);\n+        if (!g_orphan_work_set.empty()) {",
    "path": "src/net_processing.cpp",
    "position": 62,
    "original_position": 62,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's exactly how I'd normally structure a function like this. However, I expect we'll want to move more housekeeping tasks into `ProcessGlobalTasks()`, in which case we'll want to continue through to the next task queue if there are not orphan txs to reconsider. I didn't use the early exit pattern so that adding those tasks doesn't require restructuring this function.",
    "created_at": "2020-07-01T13:53:29Z",
    "updated_at": "2020-07-01T13:53:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448379068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448379068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379068/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3682,
    "original_line": 3682,
    "side": "RIGHT",
    "in_reply_to_id": 448104820
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379669",
    "pull_request_review_id": 440891302,
    "id": 448379669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3OTY2OQ==",
    "diff_hunk": "@@ -3687,6 +3674,25 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     return fMoreWork;\n }\n \n+bool PeerLogicValidation::ProcessGlobalTasks(std::atomic<bool>& interruptMsgProc)\n+{\n+    // Reconsider orphan transactions that may now have parents",
    "path": "src/net_processing.cpp",
    "position": 59,
    "original_position": 59,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Documentation for `ProcessGlobalTasks()` is by the declaration in the header file, and includes the meaning of the return value.",
    "created_at": "2020-07-01T13:54:21Z",
    "updated_at": "2020-07-01T13:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448379669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448379669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379669/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3679,
    "original_line": 3679,
    "side": "RIGHT",
    "in_reply_to_id": 448105552
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379999",
    "pull_request_review_id": 440891780,
    "id": 448379999,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3OTk5OQ==",
    "diff_hunk": "@@ -3687,6 +3674,25 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     return fMoreWork;\n }\n \n+bool PeerLogicValidation::ProcessGlobalTasks(std::atomic<bool>& interruptMsgProc)\n+{\n+    // Reconsider orphan transactions that may now have parents\n+    {\n+        LOCK2(cs_main, g_cs_orphans);\n+        if (!g_orphan_work_set.empty()) {\n+            std::list<CTransactionRef> removed_txn;\n+            ProcessOrphanTx(connman, m_mempool, g_orphan_work_set, removed_txn);\n+            for (const CTransactionRef& removedTx : removed_txn) {",
    "path": "src/net_processing.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "original_commit_id": "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree! This can be changed later if necessary.",
    "created_at": "2020-07-01T13:54:54Z",
    "updated_at": "2020-07-01T13:54:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448379999",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379999"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r448379999"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448379999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3685,
    "original_line": 3685,
    "side": "RIGHT",
    "in_reply_to_id": 448106239
  }
]