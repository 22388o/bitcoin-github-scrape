[
  {
    "sha": "d0413c670b4e5dc79d5cc1bc35571fca745c9a24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDQxM2M2NzBiNGU1ZGM3OWQ1Y2MxYmMzNTU3MWZjYTc0NWM5YTI0",
    "commit": {
      "author": {
        "name": "Ren\u00e9 Nyffenegger",
        "email": "mail@renenyffenegger.ch",
        "date": "2017-07-16T13:52:19Z"
      },
      "committer": {
        "name": "Ren\u00e9 Nyffenegger",
        "email": "mail@renenyffenegger.ch",
        "date": "2017-07-16T15:03:33Z"
      },
      "message": "Use range based for loop\n\nInstead of iterating over 0 .. 1 and then deciding on an actual desired\nvalue, use a range based for loop for the desired value.",
      "tree": {
        "sha": "39934e1b9e9dda42af89cebacd54021235d8e557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39934e1b9e9dda42af89cebacd54021235d8e557"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0413c670b4e5dc79d5cc1bc35571fca745c9a24",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0413c670b4e5dc79d5cc1bc35571fca745c9a24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0413c670b4e5dc79d5cc1bc35571fca745c9a24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0413c670b4e5dc79d5cc1bc35571fca745c9a24/comments",
    "author": {
      "login": "ReneNyffenegger",
      "id": 1092660,
      "node_id": "MDQ6VXNlcjEwOTI2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1092660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReneNyffenegger",
      "html_url": "https://github.com/ReneNyffenegger",
      "followers_url": "https://api.github.com/users/ReneNyffenegger/followers",
      "following_url": "https://api.github.com/users/ReneNyffenegger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReneNyffenegger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReneNyffenegger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReneNyffenegger/subscriptions",
      "organizations_url": "https://api.github.com/users/ReneNyffenegger/orgs",
      "repos_url": "https://api.github.com/users/ReneNyffenegger/repos",
      "events_url": "https://api.github.com/users/ReneNyffenegger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReneNyffenegger/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ReneNyffenegger",
      "id": 1092660,
      "node_id": "MDQ6VXNlcjEwOTI2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1092660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReneNyffenegger",
      "html_url": "https://github.com/ReneNyffenegger",
      "followers_url": "https://api.github.com/users/ReneNyffenegger/followers",
      "following_url": "https://api.github.com/users/ReneNyffenegger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReneNyffenegger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReneNyffenegger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReneNyffenegger/subscriptions",
      "organizations_url": "https://api.github.com/users/ReneNyffenegger/orgs",
      "repos_url": "https://api.github.com/users/ReneNyffenegger/repos",
      "events_url": "https://api.github.com/users/ReneNyffenegger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReneNyffenegger/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cfdda2503c995cdd563b1a2a29162ac298d173d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cfdda2503c995cdd563b1a2a29162ac298d173d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cfdda2503c995cdd563b1a2a29162ac298d173d"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 5,
      "deletions": 18
    },
    "files": [
      {
        "sha": "6ed6e7744e3ed0064c06d005ac14447599c2a06a",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 18,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0413c670b4e5dc79d5cc1bc35571fca745c9a24/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0413c670b4e5dc79d5cc1bc35571fca745c9a24/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=d0413c670b4e5dc79d5cc1bc35571fca745c9a24",
        "patch": "@@ -24,8 +24,7 @@ BOOST_FIXTURE_TEST_SUITE(dbwrapper_tests, BasicTestingSetup)\n BOOST_AUTO_TEST_CASE(dbwrapper)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n-    for (int i = 0; i < 2; i++) {\n-        bool obfuscate = (bool)i;\n+    for (bool obfuscate : {false, true}) {\n         fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n@@ -45,8 +44,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\n BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n-    for (int i = 0; i < 2; i++) {\n-        bool obfuscate = (bool)i;\n+    for (bool obfuscate : {false, true}) {\n         fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n@@ -82,8 +80,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n-    for (int i = 0; i < 2; i++) {\n-        bool obfuscate = (bool)i;\n+    for (bool obfuscate : {false, true}) {\n         fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n@@ -211,12 +208,7 @@ BOOST_AUTO_TEST_CASE(iterator_ordering)\n     }\n \n     std::unique_ptr<CDBIterator> it(const_cast<CDBWrapper&>(dbw).NewIterator());\n-    for (int c=0; c<2; ++c) {\n-        int seek_start;\n-        if (c == 0)\n-            seek_start = 0x00;\n-        else\n-            seek_start = 0x80;\n+    for (int seek_start : {0x00, 0x80}) {\n         it->Seek((uint8_t)seek_start);\n         for (int x=seek_start; x<256; ++x) {\n             uint8_t key;\n@@ -287,12 +279,7 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n     }\n \n     std::unique_ptr<CDBIterator> it(const_cast<CDBWrapper&>(dbw).NewIterator());\n-    for (int c=0; c<2; ++c) {\n-        int seek_start;\n-        if (c == 0)\n-            seek_start = 0;\n-        else\n-            seek_start = 5;\n+    for (int seek_start : {0, 5}) {\n         snprintf(buf, sizeof(buf), \"%d\", seek_start);\n         StringContentsSerializer seek_key(buf);\n         it->Seek(seek_key);"
      }
    ]
  }
]