laanwj,2014-07-14T14:39:07Z,But we still have random.cpp in util which depends on uint256 AFAIK (RandHash).\n,https://github.com/bitcoin/bitcoin/pull/4527#issuecomment-48907683,48907683,
sipa,2014-07-14T15:08:37Z,"Ugh, right.\n\nSo, we could move random to common as well, except that util still does the openssl locking/randomness initialization (which depends on random). That seems unnecessary, as util itself does not require any openssl apart from that.\n\nEither we can move the crypto locking initialization to random too (but that broadens its scope), make a small seperate file that does all remaining Ope",https://github.com/bitcoin/bitcoin/pull/4527#issuecomment-48911783,48911783,
laanwj,2014-07-14T15:23:40Z,"bitcoin-cli can use SSL, so we do require the OpenSSL initialization in util.cpp for now.\n\nMoving random.cpp to common as well sounds good. Could the random initialization be split from the main OpenSSL initialization?\nI suppose we'll have initialization order issues as long as we use the current, hacky, global constructor method.\n",https://github.com/bitcoin/bitcoin/pull/4527#issuecomment-48913688,48913688,
sipa,2014-07-14T15:27:34Z,"Yup, initialization order is the problem. These things will need to turn into boost::once initialized structures etc.\n",https://github.com/bitcoin/bitcoin/pull/4527#issuecomment-48914241,48914241,
BitcoinPullTester,2014-07-14T15:48:03Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4527_5b3b037ee1f06446db8252b2d14eb60ca9fe8837/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4527#issuecomment-48917103,48917103,
sipa,2014-07-15T14:13:26Z,Closing for now.\n,https://github.com/bitcoin/bitcoin/pull/4527#issuecomment-49037150,49037150,
