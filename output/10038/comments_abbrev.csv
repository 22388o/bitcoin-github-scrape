laanwj,2017-03-20T10:37:21Z,"As for the GLIBC 2.10 symbol requirement, the minimum version of glibc in our symbol checker is 2.11, so this is acceptable for binary releases: https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/symbol-check.py#L43",https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287724140,287724140,
jonasschnelli,2017-03-20T11:17:22Z,"Nice. To bad there is no clang equivalent of `malloc_info()`. This will be linux only.\nTested ACK e141aa4ba604ff22c68454112501c166d3e892c9\nhttps://bitcoin.jonasschnelli.ch/build/PR/10038\n\n\n<img width=""730"" alt=""bildschirmfoto 2017-03-20 um 12 12 06"" src=""https://cloud.githubusercontent.com/assets/178464/24097654/206cdb76-0d67-11e7-9668-d06fe13e5f27.png"">\n\n<img width=""909"" alt=""bildsc",https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287732185,287732185,
laanwj,2017-03-20T11:32:47Z,"> Nice. To bad there is no clang equivalent of malloc_info(). This will be linux only.\n\nClang on Linux simply uses glibc. But yeah, other libc's will either have equivalent calls or maybe not, it's specific to the malloc implementation.\n\n",https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287735026,287735026,
fanquake,2017-03-20T11:33:12Z,"Tested on OSX ACK e141aa4\n![screen shot](https://cloud.githubusercontent.com/assets/863730/24098083/bce03638-0da3-11e7-9d83-9b9a69d70a13.png)",https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287735104,287735104,
paveljanik,2017-03-20T14:15:09Z,postmerge ACK (was merged in the middle of my testing),https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287771509,287771509,
laanwj,2017-03-20T14:42:05Z,"> postmerge ACK (was merged in the middle of my testing)\n\nYeah sorry for that, getting this in soon is kind of important due to all the reported OOM issues with 0.14.",https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287779966,287779966,
TheBlueMatt,2017-03-20T18:57:03Z,postumous utACK e141aa4ba604ff22c68454112501c166d3e892c9,https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-287862714,287862714,
luke-jr,2017-04-08T13:35:05Z,Is there a reason not to just add it as an additional key in the result?,https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-292718479,292718479,
laanwj,2017-04-10T13:34:30Z,"> Is there a reason not to just add it as an additional key in the result?\n\nI did that first, but having a huge encoded XML string field in the default JSON object output was ugly. Also this information is potentially slow to compile, so it's better to have it on an separate entry point.",https://github.com/bitcoin/bitcoin/pull/10038#issuecomment-292950639,292950639,
jonasschnelli,2017-03-20T10:28:45Z,Don't we need to escape this in some ways? Or is that handled by UniValue?,https://github.com/bitcoin/bitcoin/pull/10038#discussion_r106868414,106868414,src/rpc/misc.cpp
laanwj,2017-03-20T10:29:32Z,"That's handled by UniValue. The whole object is returned as a JSON string.\n(UniValue has an implicit constructor from string).",https://github.com/bitcoin/bitcoin/pull/10038#discussion_r106868558,106868558,src/rpc/misc.cpp
