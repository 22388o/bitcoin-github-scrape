GChuf,2019-08-19 17:03:04,"I'm all for lean and mean stuff.\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-522666330,522666330,
jb55,2019-08-19 17:59:31,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-522688190,522688190,
DrahtBot,2019-08-19 18:28:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16839](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16839.html) (Replace Connman and BanMan globals with Nod",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-522699049,522699049,
emilengler,2019-08-19 19:27:43,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-522720213,522720213,
promag,2019-08-25 01:36:38,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-524592951,524592951,
l2a5b1,2019-08-29 08:42:01,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-526087767,526087767,
practicalswift,2019-09-26 08:23:24,@MarcoFalke Could this one get a milestone? I think it should have a concrete milestone if valuable enough to keep open :)  I'm trying to trim my set of open PR:s so if no milestone I'd rather close.,https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-535396610,535396610,
promag,2019-09-26 10:41:58,"Running `make` on HEAD 150c289b4034fb2101df61998dd71b11f3d7fae1:\n```\n     1286.75 real      1170.31 user        99.80 sys\n 748662784  maximum resident set size\n         0  average shared memory size\n         0  average unshared data size\n         0  average unshared stack size\n  35466407  page reclaims\n    168811  page faults\n         0  swaps\n         0  block input operations",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-535446389,535446389,
practicalswift,2019-09-26 10:48:05,@promag Thanks a lot for benchmarking! I'll update and rebase as soon as I get clarification from @MarcoFalke regarding the milestone :),https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-535448260,535448260,
practicalswift,2019-10-10 08:53:33,@MarcoFalke Friendly ping :),https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-540469710,540469710,
laanwj,2019-10-10 12:20:19,"A PR only removing lines is very good. I also think early in the 0.20 cycle is a good time to do this.\n\nSo to be clear: this removes unnecessary includes that would otherwise cause the file to be included unnecessary, not includes that still end up being included indirectly through another route?",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-540545799,540545799,
practicalswift,2019-10-10 13:49:07,"@laanwj Thanks for the clarification!\n\n> So to be clear: this removes unnecessary includes that would otherwise cause the file to be included unnecessary, not includes that still end up being included indirectly through another route?\n\nYes, exactly!\n\nWould you mind adding the 0.20 tag? I'll update the PR :)",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-540592855,540592855,
laanwj,2019-10-12 07:15:15,"Let's get this merged soon then, to not have to keep rebasing, at least there's basically zero risk.",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-541295114,541295114,
practicalswift,2019-10-16 05:41:52,"Rebased again :)\n\nI think this one should be ready for final code review!",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-542527053,542527053,
practicalswift,2019-10-16 15:29:08,"@ryanofsky The only tools used are `nm` and `cxxfilt` (python module). The rest is a very much Bitcoin Core specific Python script I've written myself :)\n\n```\n$ wc -l find_redundant_includes.??\n 2207 find_redundant_includes.py\n    3 find_redundant_includes.sh\n 2210 total\n$ grep -v '""' find_redundant_includes.py | wc -l\n371\n```\n\n2207 LOC might sound crazy but a lot of it is ta",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-542758463,542758463,
ryanofsky,2019-10-16 15:55:50,Thanks. I'd be curious to see the script if you want to post it somewhere like a gist.,https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-542770703,542770703,
practicalswift,2019-10-16 23:07:55,"Thanks for merging!\n\nSee below for a script run after this merge.\n\nI believe the remaining cases to be of the ""non-trivial"" type where the header directly included is not needed in itself but one of more of the transitively included headers are.\n\nConsider the `src/bench/rpc_blockchain.cpp` example: we are currently including `validation.h` which **transitively** gives us `PROTOCOL_VERS",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-542927401,542927401,
laanwj,2019-10-17 08:58:34,"> One caveat is that I'm currently skipping analysis for core_io.h\n\nIt suppose that is a trivial header anyway, memory usage wise. It's a few simple functions. It doesn't pull in any boost nor non-run-of-the-mill C++ standard library headers.",https://github.com/bitcoin/bitcoin/pull/16659#issuecomment-543077974,543077974,
MarcoFalke,2019-10-16 21:44:19,This is actually used,https://github.com/bitcoin/bitcoin/pull/16659#discussion_r335723187,335723187,src/node/transaction.cpp
practicalswift,2019-10-16 21:46:56,"Oh, I'll investigate shortly! Did you find any other examples? Was it found by manual review?",https://github.com/bitcoin/bitcoin/pull/16659#discussion_r335724137,335724137,src/node/transaction.cpp
