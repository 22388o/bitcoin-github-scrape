DrahtBot,2019-03-09T12:40:06Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15452](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15452.html) (Replace CScriptID and CKeyID in CTxDestinat",https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471173672,471173672,
meshcollider,2019-03-10T00:23:40Z,"Concept ACK, will take a look :)",https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471234622,471234622,
ryanofsky,2019-03-11T17:06:54Z,"It would be better to use Optional\<OutputType> than to add an OutputType::NONE enum. There may be some contexts where it's valid for the output type to be unset, but in most places it's not valid, and using the optional type would do a better job communicating and enforcing this.",https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471631201,471631201,
sipa,2019-03-11T17:33:36Z,"I don't understand the motivation for splitting up OutputTypes further.\n\nWhen you request a Bech32 address from the wallet, getting a P2WPKH or P2WSH are both fine, and which one depends on the context currently (getnewaddress vs addmultisigaddress). In a future descriptor-based design there should just be one default source for all Bech32 addresses - which can be either P2WPKH or P2WSH (which d",https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-471642299,471642299,
Sjors,2019-03-12T17:15:19Z,"@ryanofsky I also thought about using `Optional`. I can switch to that unless others see a problem.\n\n@sipa we current use OutputType for three different tasks\n\n1. distinguish between PKH, SH-WPKH and WPKH. That distinction is historical, because it happens to be the three different output types the wallet supports. Most other (non-multisig) wallets also use these three types.\n2. distingu",https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472095806,472095806,
sipa,2019-03-12T17:46:19Z,@Sjors Not really. LEGACY refers to pkh or p2sh-multisig; P2SH_SEGWIT refers to p2sh-pwpkh or p2sh-p2wsh-multisig; BECH32 refers to p2wpkh or p2wsh-multisig.\n\nThey indeed serve two different goals (a) selecting between bech32 support in the receiver or not and (b) choosing non-segwit outputs.\n\nI still don't see what in de codebase needs further differentiation between multisig or not etc.,https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472108793,472108793,
Sjors,2019-03-13T09:33:06Z,"IIUC the only interaction the user has with `OutputType` is through `getnewaddress` and `addmultisigaddress`. So far I've only considered `getnewaddress`, where `legacy` refers to `pkh`.\n\nWith `addmultisigaddress` the `address_type` argument would map to different output types, i.e. `P2SH`, `P2SH_WSH` and `WSH`. That's still compatible with the idea of a simple `OutputType` -> `AddressType` ma",https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472346373,472346373,
Sjors,2019-03-13T12:19:50Z,I'm trying a different approach in #15590.,https://github.com/bitcoin/bitcoin/pull/15567#issuecomment-472399124,472399124,
MarcoFalke,2019-03-11T17:19:00Z,"style-nit: in commit b2da4c74d891fe719b21411f692e3edd4b968c\n\nDo as scripted diff? ",https://github.com/bitcoin/bitcoin/pull/15567#discussion_r264340168,264340168,src/outputtype.cpp
