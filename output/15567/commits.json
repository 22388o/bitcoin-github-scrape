[
  {
    "sha": "fbf86b82fc4de8f69c2891a81826ddd663a8efec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmY4NmI4MmZjNGRlOGY2OWMyODkxYTgxODI2ZGRkNjYzYThlZmVj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T09:56:55Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T11:19:18Z"
      },
      "message": "Add OutputType::NONE",
      "tree": {
        "sha": "cd7118d1272a26e1b1d2e1324f7ba0a3edd51f9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd7118d1272a26e1b1d2e1324f7ba0a3edd51f9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbf86b82fc4de8f69c2891a81826ddd663a8efec",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyDoT0ACgkQV/+b28ww\nEAlDTBAAlXFw9Zx9bR6AIJmCsLjgO5ivcBS4wsvoIPh77inNDZH3Q9lwLcdJQdh9\nkwDsvrSvvsr90EwcBHrgbw6MiLIM3QLWU/OpRejFCN0pu0du2+ZKZRM4coVzEs0Z\nn/2YOC5I1UYO7xwd0XsBXVtWjRXtjjxlhXcTZAn4k7XdLemRTr9+eBzUxo369AW8\nZ2GPSfaDE5aZnML7lj5Cm+RdW43RBcdpxJUjk/NnBd6oXgiLCnHLA6MZLflXwguR\nmgvTmcg+lJOqoR4q36PtPZBr88aEq0FZFNVGvrthqMV2LZ5qbQWuXegIjVrjcypV\nk3qKfAXMiw2+Satl1HQ2wcXF3ioOmbCI3py0jepmcIlsiTc4b2Cx5r5rGZiRKEV5\n2WGdt78JyzmQi6t6CPRncOGZoDcgv8UP9hZONK9uU4Mn+fifmb/4kT00Pov028cu\n2WmZO1kKXrlfpZdyxWdc8xPL7N9R/pC9RxsDCuF9C3oO98LqEC0I2CJ2T23DwOaB\ny/vM+QurkTFb5i1FFS1JGxAU6oYjbhoDtSoltWOfO/byHB9KXOMsBUAxIuXWDcrw\njQPBJQE1fbBkaBjOCmgZLcdJON2N0twiSd6hX30OWZHpLjLRiwsyDSAmeV5EjzPA\nbde3Nla4hE2xAgYsOxb8aT2iZ5Bch57CJjlrxQrvNm/pgzcZ4YU=\n=aPVy\n-----END PGP SIGNATURE-----",
        "payload": "tree cd7118d1272a26e1b1d2e1324f7ba0a3edd51f9d\nparent 6b2ee268be459fbc104c054204e2992d4e241915\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552125415 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552130358 +0100\n\nAdd OutputType::NONE\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbf86b82fc4de8f69c2891a81826ddd663a8efec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf86b82fc4de8f69c2891a81826ddd663a8efec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbf86b82fc4de8f69c2891a81826ddd663a8efec/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b2ee268be459fbc104c054204e2992d4e241915",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b2ee268be459fbc104c054204e2992d4e241915",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b2ee268be459fbc104c054204e2992d4e241915"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c9d907e7b168b8d0e98562e0116dcbb4a456a8e0",
        "filename": "src/outputtype.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbf86b82fc4de8f69c2891a81826ddd663a8efec/src/outputtype.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbf86b82fc4de8f69c2891a81826ddd663a8efec/src/outputtype.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.h?ref=fbf86b82fc4de8f69c2891a81826ddd663a8efec",
        "patch": "@@ -14,6 +14,12 @@\n #include <vector>\n \n enum class OutputType {\n+    /**\n+     * Only refers to an output that can't be represented as any of the types below.\n+     * For automatic type selection, use CHANGE_AUTO instead.\n+     */\n+    NONE,\n+\n     LEGACY,\n     P2SH_SEGWIT,\n     BECH32,"
      }
    ]
  },
  {
    "sha": "b2da4c74d891fe719b21411f692e3edd4b968cdd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmRhNGM3NGQ4OTFmZTcxOWIyMTQxMWY2OTJlM2VkZDRiOTY4Y2Rk",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T11:18:10Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T11:20:01Z"
      },
      "message": "Make OutputType consistent with Descriptor",
      "tree": {
        "sha": "bcd1a2302d7a44f4dbd4634f4ed8dcce4842d333",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcd1a2302d7a44f4dbd4634f4ed8dcce4842d333"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2da4c74d891fe719b21411f692e3edd4b968cdd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyDoWIACgkQV/+b28ww\nEAktbw//fPfiNr1j376a3WdzVVXyxJznLox/4/zbATY+Y2fRgv8GFQ/J401hwUjB\nPEEe/ul1RVv6Km6650Ve+0dLoJ3kY0V88Rk8PHqtf22sltexo5vVwdX+uQ6C3dhj\nEYGZh67De1MqQvLicj1D83qDBuEgtt+1G94hKLrC/uRHIIP/PS4eG/1w6NlVntFw\nJkJdcjcWfwvimF1WL6bLQ2FjczDtDXR5dBLl7t2qOpvJg+ZjlqmD4e0HWVpdqKaK\nBg4fyzU7hH+0EfX8GjVnI8yruyFP/DB0VVaPfCmxe97PUsLOnkt6ljY1AnuYUqRW\nEBV5QnPbJLMxWNn0Qeuk9tcstoYCxmpaA79Fzk2EB8a79GbCeBd6LCSWPEzChw3I\n1peg7Raji2zcfhHtmNtfBs+DH9KKlXYYpo4Nua+ELgZPSVnEBf6bX5EeVoUlf2fk\nTsmkuOlgHlvNVtNc0nV20HFTh570t6wxNRTFzFQ0qQLD4rmJAtsbriRl16URYrDE\nNVHhM0ltTDsHxwcRod6B0QXKBkopsnk6lqrj35YtKJL+saYUFkAACj0XvAoEAkD4\neRJJP46ge3a2ZtV0x9QFEkBTw5wdBj3K3B5IdCaxzHOWqSNh5Ndo0m4rhJYCcdHM\ndA9hxCpMGF4oBSRu3CJoeQexvgucCuIxNX/iWWGVApuTfv4bJ0g=\n=c6TV\n-----END PGP SIGNATURE-----",
        "payload": "tree bcd1a2302d7a44f4dbd4634f4ed8dcce4842d333\nparent fbf86b82fc4de8f69c2891a81826ddd663a8efec\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552130290 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552130401 +0100\n\nMake OutputType consistent with Descriptor\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2da4c74d891fe719b21411f692e3edd4b968cdd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2da4c74d891fe719b21411f692e3edd4b968cdd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2da4c74d891fe719b21411f692e3edd4b968cdd/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbf86b82fc4de8f69c2891a81826ddd663a8efec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbf86b82fc4de8f69c2891a81826ddd663a8efec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf86b82fc4de8f69c2891a81826ddd663a8efec"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 29,
      "deletions": 31
    },
    "files": [
      {
        "sha": "1b27772a90c81a7398a1dfbc38de6af572e11529",
        "filename": "src/outputtype.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 15,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/outputtype.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/outputtype.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.cpp?ref=b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "patch": "@@ -20,13 +20,13 @@ static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n bool ParseOutputType(const std::string& type, OutputType& output_type)\n {\n     if (type == OUTPUT_TYPE_STRING_LEGACY) {\n-        output_type = OutputType::LEGACY;\n+        output_type = OutputType::PKH;\n         return true;\n     } else if (type == OUTPUT_TYPE_STRING_P2SH_SEGWIT) {\n-        output_type = OutputType::P2SH_SEGWIT;\n+        output_type = OutputType::P2SH_WPKH;\n         return true;\n     } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n-        output_type = OutputType::BECH32;\n+        output_type = OutputType::WPKH;\n         return true;\n     }\n     return false;\n@@ -35,23 +35,23 @@ bool ParseOutputType(const std::string& type, OutputType& output_type)\n const std::string& FormatOutputType(OutputType type)\n {\n     switch (type) {\n-    case OutputType::LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n-    case OutputType::P2SH_SEGWIT: return OUTPUT_TYPE_STRING_P2SH_SEGWIT;\n-    case OutputType::BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    case OutputType::PKH: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OutputType::P2SH_WPKH: return OUTPUT_TYPE_STRING_P2SH_SEGWIT;\n+    case OutputType::WPKH: return OUTPUT_TYPE_STRING_BECH32;\n     default: assert(false);\n     }\n }\n \n CTxDestination GetDestinationForKey(const CPubKey& key, OutputType type)\n {\n     switch (type) {\n-    case OutputType::LEGACY: return key.GetID();\n-    case OutputType::P2SH_SEGWIT:\n-    case OutputType::BECH32: {\n+    case OutputType::PKH: return key.GetID();\n+    case OutputType::P2SH_WPKH:\n+    case OutputType::WPKH: {\n         if (!key.IsCompressed()) return key.GetID();\n         CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n         CScript witprog = GetScriptForDestination(witdest);\n-        if (type == OutputType::P2SH_SEGWIT) {\n+        if (type == OutputType::P2SH_WPKH) {\n             return CScriptID(witprog);\n         } else {\n             return witdest;\n@@ -79,17 +79,17 @@ CTxDestination AddAndGetDestinationForScript(CKeyStore& keystore, const CScript&\n     keystore.AddCScript(script);\n     // Note that scripts over 520 bytes are not yet supported.\n     switch (type) {\n-    case OutputType::LEGACY:\n+    case OutputType::PKH:\n         return CScriptID(script);\n-    case OutputType::P2SH_SEGWIT:\n-    case OutputType::BECH32: {\n+    case OutputType::P2SH_WPKH:\n+    case OutputType::WPKH: {\n         CTxDestination witdest = WitnessV0ScriptHash(script);\n         CScript witprog = GetScriptForDestination(witdest);\n         // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n         if (!IsSolvable(keystore, witprog)) return CScriptID(script);\n         // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n         keystore.AddCScript(witprog);\n-        if (type == OutputType::BECH32) {\n+        if (type == OutputType::WPKH) {\n             return witdest;\n         } else {\n             return CScriptID(witprog);\n@@ -98,4 +98,3 @@ CTxDestination AddAndGetDestinationForScript(CKeyStore& keystore, const CScript&\n     default: assert(false);\n     }\n }\n-"
      },
      {
        "sha": "d66a82f34d45723382d05b9eff0d56707eddd300",
        "filename": "src/outputtype.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/outputtype.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/outputtype.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.h?ref=b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "patch": "@@ -20,9 +20,9 @@ enum class OutputType {\n      */\n     NONE,\n \n-    LEGACY,\n-    P2SH_SEGWIT,\n-    BECH32,\n+    PKH,         /* Pay-to-Public-Key-Hash */\n+    P2SH_WPKH,   /* P2SH wrapped Pay-to-Witness-Public-Key-Hash */\n+    WPKH,        /* Pay-to-Witness-Public-Key-Hash */\n \n     /**\n      * Special output type for change outputs only. Automatically choose type\n@@ -53,4 +53,3 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n CTxDestination AddAndGetDestinationForScript(CKeyStore& keystore, const CScript& script, OutputType);\n \n #endif // BITCOIN_OUTPUTTYPE_H\n-"
      },
      {
        "sha": "aeed18771b9cd7c24470d2573ca30a2b8a1514b6",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "patch": "@@ -94,7 +94,7 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n         // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n \n-        if (model->wallet().getDefaultAddressType() == OutputType::BECH32) {\n+        if (model->wallet().getDefaultAddressType() == OutputType::WPKH) {\n             ui->useBech32->setCheckState(Qt::Checked);\n         } else {\n             ui->useBech32->setCheckState(Qt::Unchecked);\n@@ -151,11 +151,11 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n     /* Generate new receiving address */\n     OutputType address_type;\n     if (ui->useBech32->isChecked()) {\n-        address_type = OutputType::BECH32;\n+        address_type = OutputType::WPKH;\n     } else {\n         address_type = model->wallet().getDefaultAddressType();\n-        if (address_type == OutputType::BECH32) {\n-            address_type = OutputType::P2SH_SEGWIT;\n+        if (address_type == OutputType::WPKH) {\n+            address_type = OutputType::P2SH_WPKH;\n         }\n     }\n     address = model->getAddressTableModel()->addRow(AddressTableModel::Receive, label, \"\", address_type);"
      },
      {
        "sha": "bce7ee7f2093c5bc8929e6254999c12d49ea35fe",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "patch": "@@ -124,7 +124,7 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     }\n \n     // Get the output type\n-    OutputType output_type = OutputType::LEGACY;\n+    OutputType output_type = OutputType::PKH;\n     if (!request.params[2].isNull()) {\n         if (!ParseOutputType(request.params[2].get_str(), output_type)) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown address type '%s'\", request.params[2].get_str()));"
      },
      {
        "sha": "a3d53963e0e3cd323291c952605a12596d07802f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "patch": "@@ -2761,8 +2761,8 @@ OutputType CWallet::TransactionChangeType(OutputType change_type, const std::vec\n \n     // if m_default_address_type is legacy, use legacy address as change (even\n     // if some of the outputs are P2WPKH or P2WSH).\n-    if (m_default_address_type == OutputType::LEGACY) {\n-        return OutputType::LEGACY;\n+    if (m_default_address_type == OutputType::PKH) {\n+        return OutputType::PKH;\n     }\n \n     // if any destination is P2WPKH or P2WSH, use P2WPKH for the change\n@@ -2772,7 +2772,7 @@ OutputType CWallet::TransactionChangeType(OutputType change_type, const std::vec\n         int witnessversion = 0;\n         std::vector<unsigned char> witnessprogram;\n         if (recipient.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n-            return OutputType::BECH32;\n+            return OutputType::WPKH;\n         }\n     }\n \n@@ -4479,7 +4479,7 @@ bool CWalletTx::AcceptToMemoryPool(interfaces::Chain::Lock& locked_chain, CValid\n \n void CWallet::LearnRelatedScripts(const CPubKey& key, OutputType type)\n {\n-    if (key.IsCompressed() && (type == OutputType::P2SH_SEGWIT || type == OutputType::BECH32)) {\n+    if (key.IsCompressed() && (type == OutputType::P2SH_WPKH || type == OutputType::WPKH)) {\n         CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n         CScript witprog = GetScriptForDestination(witdest);\n         // Make sure the resulting program is solvable.\n@@ -4490,8 +4490,8 @@ void CWallet::LearnRelatedScripts(const CPubKey& key, OutputType type)\n \n void CWallet::LearnAllRelatedScripts(const CPubKey& key)\n {\n-    // OutputType::P2SH_SEGWIT always adds all necessary scripts for all types.\n-    LearnRelatedScripts(key, OutputType::P2SH_SEGWIT);\n+    // OutputType::P2SH_WPKH always adds all necessary scripts for all types.\n+    LearnRelatedScripts(key, OutputType::P2SH_WPKH);\n }\n \n std::vector<OutputGroup> CWallet::GroupOutputs(const std::vector<COutput>& outputs, bool single_coin) const {"
      },
      {
        "sha": "c3bbfdd03f387b93a83bbae45f17d01ac1c9a2c7",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2da4c74d891fe719b21411f692e3edd4b968cdd/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "patch": "@@ -124,7 +124,7 @@ enum WalletFeature\n };\n \n //! Default for -addresstype\n-constexpr OutputType DEFAULT_ADDRESS_TYPE{OutputType::P2SH_SEGWIT};\n+constexpr OutputType DEFAULT_ADDRESS_TYPE{OutputType::P2SH_WPKH};\n \n //! Default for -changetype\n constexpr OutputType DEFAULT_CHANGE_TYPE{OutputType::CHANGE_AUTO};"
      }
    ]
  },
  {
    "sha": "7a5fe7f36ae5cabf042982ff35070e78480b2c17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTVmZTdmMzZhZTVjYWJmMDQyOTgyZmYzNTA3MGU3ODQ4MGIyYzE3",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T11:05:17Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T15:13:29Z"
      },
      "message": "Add OutputType P2SH, WSH and P2SH_WSH",
      "tree": {
        "sha": "60e2e5aad0081637b1507d8a6f4b6e636abdf953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60e2e5aad0081637b1507d8a6f4b6e636abdf953"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a5fe7f36ae5cabf042982ff35070e78480b2c17",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyD2GAACgkQV/+b28ww\nEAm76Q//RWJ0UDq8fxk8Fq/8e1KAFFW3KenYCJKIVJKv5VTy4dB/ROYhz7JQhlUl\nk7yzt9mQc8d+pKYanLrgA4JODw/OLr0Xh2bRAABJKXw44oVdqzQO20VoqVpGnvzs\niBLEvlRu3JUq1XAyaYGr0VA6NOJzRBMlYU3GsstxTstYEeaDHZDvWX/JFXOZ8k5W\n/EgcffmswlBz2B3h/E6BK0/a7SRqmbCNEYZJXS7s+dhmSrjv386keIA3+DFFApMR\n6qBzwmaKpN0ty98c3cdqeUco4/O5mpBsjgXXoQrOCvjTITbk5UOM8DPXyea+HyhC\nTeXJ9O1Su6hWvAVVCkOBJ95DXYSkRXXizoSqvr8/a3vQzwmNDdcg/5ONpxEXzriw\n4B4aF3OBqFVRCs0YiymkLP6/8k8bWGEvSOBX4UcI6gSVBhv76IXTO5sqw7r2lCN6\n8JSyNzdivw05S4byIuNGhqooP8vU0pL+N2Wk0JbBRxS5Rn9be1r2JsvPKIYlOTMq\nWoLPeNgRkPkwOBO7d29a844Z2MAivJgADuIiZ0yHVe8N8P9bkiEHuVn3z64lFO9U\njLGYpaHfcrwR7ydkJdIQ64SpD4WjfCkpbFn8QADeoVi0M4RsKotH/g7IUMLfQUAy\nG7fiV2gypgCcAYyEw7PFxxcM7zTQMlzIxPmPeG1LO60W6Q004nM=\n=2q6A\n-----END PGP SIGNATURE-----",
        "payload": "tree 60e2e5aad0081637b1507d8a6f4b6e636abdf953\nparent b2da4c74d891fe719b21411f692e3edd4b968cdd\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552129517 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552144409 +0100\n\nAdd OutputType P2SH, WSH and P2SH_WSH\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a5fe7f36ae5cabf042982ff35070e78480b2c17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a5fe7f36ae5cabf042982ff35070e78480b2c17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a5fe7f36ae5cabf042982ff35070e78480b2c17/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2da4c74d891fe719b21411f692e3edd4b968cdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2da4c74d891fe719b21411f692e3edd4b968cdd"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "81b6961e05ad29e06df832bab85fa75298cf80bf",
        "filename": "src/outputtype.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a5fe7f36ae5cabf042982ff35070e78480b2c17/src/outputtype.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a5fe7f36ae5cabf042982ff35070e78480b2c17/src/outputtype.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.h?ref=7a5fe7f36ae5cabf042982ff35070e78480b2c17",
        "patch": "@@ -21,8 +21,11 @@ enum class OutputType {\n     NONE,\n \n     PKH,         /* Pay-to-Public-Key-Hash */\n+    P2SH,        /* P2SH without SegWit */\n     P2SH_WPKH,   /* P2SH wrapped Pay-to-Witness-Public-Key-Hash */\n+    P2SH_WSH,    /* P2SH wrapped Pay-to-Witness-Script-Hash */\n     WPKH,        /* Pay-to-Witness-Public-Key-Hash */\n+    WSH,         /* Pay-to-Witness-Script-Hash */\n \n     /**\n      * Special output type for change outputs only. Automatically choose type"
      }
    ]
  },
  {
    "sha": "d3585d157a52474e6672f5414dedb1045ce0524a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzU4NWQxNTdhNTI0NzRlNjY3MmY1NDE0ZGVkYjEwNDVjZTA1MjRh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T11:06:17Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T15:14:40Z"
      },
      "message": "Descriptor: add OutputType GetAddressType()",
      "tree": {
        "sha": "05c02a3823a66e69260ab87a1dc09199b1a5d175",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05c02a3823a66e69260ab87a1dc09199b1a5d175"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3585d157a52474e6672f5414dedb1045ce0524a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyD2GAACgkQV/+b28ww\nEAmXOw//VHK5QTbwrsrSrsrHsZCMLPz0PkSOr0bmF8vPqLPDmVPFzrBeJui2SpwJ\nzPZ3azzbelfDFu6sfzkY5Rq9GQLdLTojTxzHRGLTHY2uRkxjZwcFPfHOfH9+ILBi\nQO0vP/ZxfvWImM2WEhBt9PovHYsRzYmTTLgQy5J50DjdBIEnjkBicnIT7VZus6J9\nygBPIuzsbxE2eq1EFILaDthNzxSf1X69u5u61v4iHfsUDVPd3uqyZmqFV5sSea6o\nJyZZick4Iq2XPBbZEK37TjVRrSZWfSYflBPrXhsXxwydN8xfexPa8j7lEnITSOM/\nOTcUtV8ZUDecwBLUHjL2WqNXEXqqBjRgRvNfoucTqo+uwTPLFbjyfNWJ2C58mXy8\ncWiudr0LvkCAmM4MXCTyN+KLW2QsV0W2PM1KnyA0+Z2kvIXyD9UMUR0GHC5QuH7/\ncLE2ei5hszjmpTNZtznXZOuXqKFdm434t/F36yAzahOYMT27rmO2CvrbzCz5z0Qy\nOt0/4/+1DF1uxv2DjcJsFcZYtpiQr7e6s46gKFEOLPOG560Yn8nGM81RANBJILld\nPbz1xucLSjgQ0/9sCxCcPg0xQssf+IK5QT4/wISv3RuKYBXq5sxXNcgRmmJNLKpt\nDM0ohrUso8v63YDU3UdhrA+rW8SItmikmNqeC2/aMfupji3RYE8=\n=ef1Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 05c02a3823a66e69260ab87a1dc09199b1a5d175\nparent 7a5fe7f36ae5cabf042982ff35070e78480b2c17\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552129577 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552144480 +0100\n\nDescriptor: add OutputType GetAddressType()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3585d157a52474e6672f5414dedb1045ce0524a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3585d157a52474e6672f5414dedb1045ce0524a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3585d157a52474e6672f5414dedb1045ce0524a/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a5fe7f36ae5cabf042982ff35070e78480b2c17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a5fe7f36ae5cabf042982ff35070e78480b2c17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a5fe7f36ae5cabf042982ff35070e78480b2c17"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 85,
      "deletions": 20
    },
    "files": [
      {
        "sha": "4deaffd9a0b45146404eb52f325486577968de1d",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3585d157a52474e6672f5414dedb1045ce0524a/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3585d157a52474e6672f5414dedb1045ce0524a/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=d3585d157a52474e6672f5414dedb1045ce0524a",
        "patch": "@@ -402,6 +402,17 @@ class DescriptorImpl : public Descriptor\n         return ret;\n     }\n \n+    OutputType GetSubdescriptorOutputType() const {\n+        if (m_script_arg) {\n+            return m_script_arg->GetAddressType();\n+        }\n+        return OutputType::NONE;\n+    }\n+\n+    OutputType GetAddressType() const override {\n+        return OutputType::NONE;\n+    }\n+\n     bool ExpandHelper(int pos, const SigningProvider& arg, Span<const unsigned char>* cache_read, std::vector<CScript>& output_scripts, FlatSigningProvider& out, std::vector<unsigned char>* cache_write) const\n     {\n         std::vector<std::pair<CPubKey, KeyOriginInfo>> entries;\n@@ -518,6 +529,11 @@ class PKHDescriptor final : public DescriptorImpl\n     }\n public:\n     PKHDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Singleton(std::move(prov)), {}, \"pkh\") {}\n+\n+    OutputType GetAddressType() const override final\n+    {\n+        return OutputType::PKH;\n+    }\n };\n \n /** A parsed wpkh(P) descriptor. */\n@@ -532,6 +548,11 @@ class WPKHDescriptor final : public DescriptorImpl\n     }\n public:\n     WPKHDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Singleton(std::move(prov)), {}, \"wpkh\") {}\n+\n+    OutputType GetAddressType() const override final\n+    {\n+        return OutputType::WPKH;\n+    }\n };\n \n /** A parsed combo(P) descriptor. */\n@@ -575,6 +596,16 @@ class SHDescriptor final : public DescriptorImpl\n     std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, const CScript* script, FlatSigningProvider&) const override { return Singleton(GetScriptForDestination(CScriptID(*script))); }\n public:\n     SHDescriptor(std::unique_ptr<DescriptorImpl> desc) : DescriptorImpl({}, std::move(desc), \"sh\") {}\n+\n+    OutputType GetAddressType() const override final\n+    {\n+        if (GetSubdescriptorOutputType() == OutputType::WPKH) {\n+            return OutputType::P2SH_WPKH;\n+        } else if (GetSubdescriptorOutputType() == OutputType::WSH) {\n+            return OutputType::P2SH_WSH;\n+        }\n+        return OutputType::P2SH;\n+    }\n };\n \n /** A parsed wsh(...) descriptor. */\n@@ -584,6 +615,11 @@ class WSHDescriptor final : public DescriptorImpl\n     std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, const CScript* script, FlatSigningProvider&) const override { return Singleton(GetScriptForDestination(WitnessV0ScriptHash(*script))); }\n public:\n     WSHDescriptor(std::unique_ptr<DescriptorImpl> desc) : DescriptorImpl({}, std::move(desc), \"wsh\") {}\n+\n+    OutputType GetAddressType() const override final\n+    {\n+        return OutputType::WSH;\n+    }\n };\n \n ////////////////////////////////////////////////////////////////////////////"
      },
      {
        "sha": "29b0f204b078e76db33cda576c2bc25d40b7b11a",
        "filename": "src/script/descriptor.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3585d157a52474e6672f5414dedb1045ce0524a/src/script/descriptor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3585d157a52474e6672f5414dedb1045ce0524a/src/script/descriptor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.h?ref=d3585d157a52474e6672f5414dedb1045ce0524a",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_SCRIPT_DESCRIPTOR_H\n #define BITCOIN_SCRIPT_DESCRIPTOR_H\n \n+#include <outputtype.h>\n #include <script/script.h>\n #include <script/sign.h>\n \n@@ -42,6 +43,9 @@ struct Descriptor {\n     /** Convert the descriptor to a private string. This fails if the provided provider does not have the relevant private keys. */\n     virtual bool ToPrivateString(const SigningProvider& provider, std::string& out) const = 0;\n \n+    /** What address type this descriptor produces when converted to a string. */\n+    virtual OutputType GetAddressType() const = 0;\n+\n     /** Expand a descriptor at a specified position.\n      *\n      * pos: the position at which to expand the descriptor. If IsRange() is false, this is ignored."
      },
      {
        "sha": "2bf7e3ad55431e35c3d7bcf3efbd696148b9019a",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 20,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3585d157a52474e6672f5414dedb1045ce0524a/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3585d157a52474e6672f5414dedb1045ce0524a/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=d3585d157a52474e6672f5414dedb1045ce0524a",
        "patch": "@@ -27,6 +27,13 @@ constexpr int RANGE = 1; // Expected to be ranged descriptor\n constexpr int HARDENED = 2; // Derivation needs access to private keys\n constexpr int UNSOLVABLE = 4; // This descriptor is not expected to be solvable\n constexpr int SIGNABLE = 8; // We can sign with this descriptor (this is not true when actual BIP32 derivation is used, as that's not integrated in our signing code)\n+constexpr int OUTPUT_TYPE_NONE = 16; // This descriptor should have OutputType::NONE\n+constexpr int OUTPUT_TYPE_PKH  = 32; // This descriptor should have OutputType::PKH\n+constexpr int OUTPUT_TYPE_P2SH = 64; // This descriptor should have OutputType::P2SH\n+constexpr int OUTPUT_TYPE_P2SH_WPKH = 128; // This descriptor should have OutputType::P2SH_WPKH\n+constexpr int OUTPUT_TYPE_P2SH_WSH = 256; // This descriptor should have OutputType::P2SH_WSH\n+constexpr int OUTPUT_TYPE_WPKH = 512; // This descriptor should have OutputType::WPKH\n+constexpr int OUTPUT_TYPE_WSH = 1024; // This descriptor should have OutputType::WSH\n \n /** Compare two descriptors. If only one of them has a checksum, the checksum is ignored. */\n bool EqualDescriptor(std::string a, std::string b)\n@@ -88,6 +95,24 @@ void Check(const std::string& prv, const std::string& pub, int flags, const std:\n     BOOST_CHECK(EqualDescriptor(prv, prv1));\n     BOOST_CHECK(!parse_pub->ToPrivateString(keys_pub, prv1));\n \n+    // Check if the address type is correct:\n+    if (flags & OUTPUT_TYPE_NONE) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::NONE);\n+    } else if (flags & OUTPUT_TYPE_PKH) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::PKH);\n+    } else if (flags & OUTPUT_TYPE_P2SH) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::P2SH);\n+    } else if (flags & OUTPUT_TYPE_P2SH_WPKH) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::P2SH_WPKH);\n+    } else if (flags & OUTPUT_TYPE_P2SH_WSH) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::P2SH_WSH);\n+    } else if (flags & OUTPUT_TYPE_WPKH) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::WPKH);\n+    } else if (flags & OUTPUT_TYPE_WSH) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), OutputType::WSH);\n+\n+    }\n+\n     // Check whether IsRange on both returns the expected result\n     BOOST_CHECK_EQUAL(parse_pub->IsRange(), (flags & RANGE) != 0);\n     BOOST_CHECK_EQUAL(parse_priv->IsRange(), (flags & RANGE) != 0);\n@@ -172,42 +197,42 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n {\n     // Basic single-key compressed\n     Check(\"combo(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"combo(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"2103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bdac\",\"76a9149a1c78a507689f6f54b847ad1cef1e614ee23f1e88ac\",\"00149a1c78a507689f6f54b847ad1cef1e614ee23f1e\",\"a91484ab21b1b2fd065d4504ff693d832434b6108d7b87\"}});\n-    Check(\"pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"2103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bdac\"}});\n-    Check(\"pkh([deadbeef/1/2'/3/4']L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pkh([deadbeef/1/2'/3/4']03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"76a9149a1c78a507689f6f54b847ad1cef1e614ee23f1e88ac\"}}, {{1,0x80000002UL,3,0x80000004UL}});\n-    Check(\"wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"00149a1c78a507689f6f54b847ad1cef1e614ee23f1e\"}});\n-    Check(\"sh(wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"a91484ab21b1b2fd065d4504ff693d832434b6108d7b87\"}});\n+    Check(\"pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE | OUTPUT_TYPE_NONE, {{\"2103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bdac\"}});\n+    Check(\"pkh([deadbeef/1/2'/3/4']L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pkh([deadbeef/1/2'/3/4']03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE|OUTPUT_TYPE_PKH, {{\"76a9149a1c78a507689f6f54b847ad1cef1e614ee23f1e88ac\"}}, {{1,0x80000002UL,3,0x80000004UL}});\n+    Check(\"wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE | OUTPUT_TYPE_WPKH, {{\"00149a1c78a507689f6f54b847ad1cef1e614ee23f1e\"}});\n+    Check(\"sh(wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | OUTPUT_TYPE_P2SH_WPKH, {{\"a91484ab21b1b2fd065d4504ff693d832434b6108d7b87\"}});\n \n     // Basic single-key uncompressed\n     Check(\"combo(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"combo(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235ac\",\"76a914b5bd079c4d57cc7fc28ecf8213a6b791625b818388ac\"}});\n-    Check(\"pk(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pk(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235ac\"}});\n-    Check(\"pkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"76a914b5bd079c4d57cc7fc28ecf8213a6b791625b818388ac\"}});\n+    Check(\"pk(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pk(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE | OUTPUT_TYPE_NONE, {{\"4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235ac\"}});\n+    Check(\"pkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE | OUTPUT_TYPE_PKH, {{\"76a914b5bd079c4d57cc7fc28ecf8213a6b791625b818388ac\"}});\n     CheckUnparsable(\"wpkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"wpkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\"); // No uncompressed keys in witness\n     CheckUnparsable(\"wsh(pk(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss))\", \"wsh(pk(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235))\"); // No uncompressed keys in witness\n     CheckUnparsable(\"sh(wpkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss))\", \"sh(wpkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235))\"); // No uncompressed keys in witness\n \n     // Some unconventional single-key constructions\n-    Check(\"sh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"a9141857af51a5e516552b3086430fd8ce55f7c1a52487\"}});\n-    Check(\"sh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"a9141a31ad23bf49c247dd531a623c2ef57da3c400c587\"}});\n-    Check(\"wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"00202e271faa2325c199d25d22e1ead982e45b64eeb4f31e73dbdf41bd4b5fec23fa\"}});\n-    Check(\"wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"0020338e023079b91c58571b20e602d7805fb808c22473cbc391a41b1bd3a192e75b\"}});\n-    Check(\"sh(wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE, {{\"a91472d0c5a3bfad8c3e7bd5303a72b94240e80b6f1787\"}});\n-    Check(\"sh(wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE, {{\"a914b61b92e2ca21bac1e72a3ab859a742982bea960a87\"}});\n+    Check(\"sh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | OUTPUT_TYPE_P2SH, {{\"a9141857af51a5e516552b3086430fd8ce55f7c1a52487\"}});\n+    Check(\"sh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | OUTPUT_TYPE_P2SH, {{\"a9141a31ad23bf49c247dd531a623c2ef57da3c400c587\"}});\n+    Check(\"wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | OUTPUT_TYPE_WSH, {{\"00202e271faa2325c199d25d22e1ead982e45b64eeb4f31e73dbdf41bd4b5fec23fa\"}});\n+    Check(\"wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | OUTPUT_TYPE_WSH, {{\"0020338e023079b91c58571b20e602d7805fb808c22473cbc391a41b1bd3a192e75b\"}});\n+    Check(\"sh(wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE | OUTPUT_TYPE_P2SH_WSH, {{\"a91472d0c5a3bfad8c3e7bd5303a72b94240e80b6f1787\"}});\n+    Check(\"sh(wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE | OUTPUT_TYPE_P2SH_WSH, {{\"a914b61b92e2ca21bac1e72a3ab859a742982bea960a87\"}});\n \n     // Versions with BIP32 derivations\n     Check(\"combo([01234567]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc)\", \"combo([01234567]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL)\", SIGNABLE, {{\"2102d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0ac\",\"76a91431a507b815593dfc51ffc7245ae7e5aee304246e88ac\",\"001431a507b815593dfc51ffc7245ae7e5aee304246e\",\"a9142aafb926eb247cb18240a7f4c07983ad1f37922687\"}});\n     Check(\"pk(xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0)\", \"pk(xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0)\", DEFAULT, {{\"210379e45b3cf75f9c5f9befd8e9506fb962f6a9d185ac87001ec44a8d3df8d4a9e3ac\"}}, {{0}});\n-    Check(\"pkh(xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0)\", \"pkh(xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0)\", HARDENED, {{\"76a914ebdc90806a9c4356c1c88e42216611e1cb4c1c1788ac\"}}, {{0xFFFFFFFFUL,0}});\n-    Check(\"wpkh([ffffffff/13']xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*)\", \"wpkh([ffffffff/13']xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*)\", RANGE, {{\"0014326b2249e3a25d5dc60935f044ee835d090ba859\"},{\"0014af0bd98abc2f2cae66e36896a39ffe2d32984fb7\"},{\"00141fa798efd1cbf95cebf912c031b8a4a6e9fb9f27\"}}, {{0x8000000DUL, 1, 2, 0}, {0x8000000DUL, 1, 2, 1}, {0x8000000DUL, 1, 2, 2}});\n-    Check(\"sh(wpkh(xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"sh(wpkh(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", RANGE | HARDENED, {{\"a9149a4d9901d6af519b2a23d4a2f51650fcba87ce7b87\"},{\"a914bed59fc0024fae941d6e20a3b44a109ae740129287\"},{\"a9148483aa1116eb9c05c482a72bada4b1db24af654387\"}}, {{10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n+    Check(\"pkh(xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0)\", \"pkh(xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0)\", HARDENED | OUTPUT_TYPE_PKH, {{\"76a914ebdc90806a9c4356c1c88e42216611e1cb4c1c1788ac\"}}, {{0xFFFFFFFFUL,0}});\n+    Check(\"wpkh([ffffffff/13']xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*)\", \"wpkh([ffffffff/13']xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*)\", RANGE | OUTPUT_TYPE_WPKH, {{\"0014326b2249e3a25d5dc60935f044ee835d090ba859\"},{\"0014af0bd98abc2f2cae66e36896a39ffe2d32984fb7\"},{\"00141fa798efd1cbf95cebf912c031b8a4a6e9fb9f27\"}}, {{0x8000000DUL, 1, 2, 0}, {0x8000000DUL, 1, 2, 1}, {0x8000000DUL, 1, 2, 2}});\n+    Check(\"sh(wpkh(xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"sh(wpkh(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", RANGE | HARDENED | OUTPUT_TYPE_P2SH_WPKH, {{\"a9149a4d9901d6af519b2a23d4a2f51650fcba87ce7b87\"},{\"a914bed59fc0024fae941d6e20a3b44a109ae740129287\"},{\"a9148483aa1116eb9c05c482a72bada4b1db24af654387\"}}, {{10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n     Check(\"combo(xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334/*)\", \"combo(xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV/*)\", RANGE, {{\"2102df12b7035bdac8e3bab862a3a83d06ea6b17b6753d52edecba9be46f5d09e076ac\",\"76a914f90e3178ca25f2c808dc76624032d352fdbdfaf288ac\",\"0014f90e3178ca25f2c808dc76624032d352fdbdfaf2\",\"a91408f3ea8c68d4a7585bf9e8bda226723f70e445f087\"},{\"21032869a233c9adff9a994e4966e5b821fd5bac066da6c3112488dc52383b4a98ecac\",\"76a914a8409d1b6dfb1ed2a3e8aa5e0ef2ff26b15b75b788ac\",\"0014a8409d1b6dfb1ed2a3e8aa5e0ef2ff26b15b75b7\",\"a91473e39884cb71ae4e5ac9739e9225026c99763e6687\"}}, {{0}, {1}});\n     CheckUnparsable(\"combo([012345678]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc)\", \"combo([012345678]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL)\"); // Too long key fingerprint\n     CheckUnparsable(\"pkh(xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483648)\", \"pkh(xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483648)\"); // BIP 32 path element overflow\n \n     // Multisig constructions\n     Check(\"multi(1,L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1,5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"multi(1,03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd,04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"512103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea23552ae\"}});\n-    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n-    Check(\"wsh(multi(2,xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", HARDENED | RANGE, {{\"0020b92623201f3bb7c3771d45b2ad1d0351ea8fbf8cfe0a0e570264e1075fa1948f\"},{\"002036a08bbe4923af41cf4316817c93b8d37e2f635dd25cfff06bd50df6ae7ea203\"},{\"0020a96e7ab4607ca6b261bfe3245ffda9c746b28d3f59e83d34820ec0e2b36c139c\"}}, {{0xFFFFFFFFUL,0}, {1,2,0}, {1,2,1}, {1,2,2}, {10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n-    Check(\"sh(wsh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9)))\",\"sh(wsh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232)))\", SIGNABLE, {{\"a9147fc63e13dc25e8a95a3cee3d9a714ac3afd96f1e87\"}});\n+    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT | OUTPUT_TYPE_P2SH, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n+    Check(\"wsh(multi(2,xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", HARDENED | RANGE | OUTPUT_TYPE_WSH, {{\"0020b92623201f3bb7c3771d45b2ad1d0351ea8fbf8cfe0a0e570264e1075fa1948f\"},{\"002036a08bbe4923af41cf4316817c93b8d37e2f635dd25cfff06bd50df6ae7ea203\"},{\"0020a96e7ab4607ca6b261bfe3245ffda9c746b28d3f59e83d34820ec0e2b36c139c\"}}, {{0xFFFFFFFFUL,0}, {1,2,0}, {1,2,1}, {1,2,2}, {10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n+    Check(\"sh(wsh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9)))\",\"sh(wsh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232)))\", SIGNABLE | OUTPUT_TYPE_P2SH_WSH, {{\"a9147fc63e13dc25e8a95a3cee3d9a714ac3afd96f1e87\"}});\n     CheckUnparsable(\"sh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9))\",\"sh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232))\"); // P2SH does not fit 16 compressed pubkeys in a redeemscript\n     CheckUnparsable(\"wsh(multi(2,[aaaaaaaa][aaaaaaaa]xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,[aaaaaaaa][aaaaaaaa]xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\"); // Double key origin descriptor\n     CheckUnparsable(\"wsh(multi(2,[aaaagaaa]xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,[aaagaaaa]xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\"); // Non hex fingerprint\n@@ -225,8 +250,8 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n     CheckUnparsable(\"wsh(wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"wsh(wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\"); // Cannot embed P2WSH inside P2WSH\n \n     // Checksums\n-    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxfy\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5t\", DEFAULT, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n-    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n+    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxfy\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5t\", DEFAULT | OUTPUT_TYPE_P2SH, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n+    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT | OUTPUT_TYPE_P2SH, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n     CheckUnparsable(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#\"); // Empty checksum\n     CheckUnparsable(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxfyq\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5tq\"); // Too long checksum\n     CheckUnparsable(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxf\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5\"); // Too short checksum"
      }
    ]
  }
]