[
  {
    "sha": "1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTczODYyNWZhN2M0NDRiNGQ4YWFhMGI4MGU0Y2EwMzhkNmVjMzVj",
    "commit": {
      "author": {
        "name": "Andy Alness",
        "email": "andy@coinbase.com",
        "date": "2014-05-02T20:51:51Z"
      },
      "committer": {
        "name": "Andy Alness",
        "email": "andy@coinbase.com",
        "date": "2014-05-02T20:51:51Z"
      },
      "message": "[Qt] Add -payreqselfsigned for testing\n\nThis will allow for payment requests signed with self-signed certificates\nto be considered verified. This way the signature verification can be\nfully tested without a real CA-issued certificate.",
      "tree": {
        "sha": "28e5a84073fc2062f2f1ab2337a9ac952c30b56e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28e5a84073fc2062f2f1ab2337a9ac952c30b56e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c/comments",
    "author": {
      "login": "aalness",
      "id": 4391003,
      "node_id": "MDQ6VXNlcjQzOTEwMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4391003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aalness",
      "html_url": "https://github.com/aalness",
      "followers_url": "https://api.github.com/users/aalness/followers",
      "following_url": "https://api.github.com/users/aalness/following{/other_user}",
      "gists_url": "https://api.github.com/users/aalness/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aalness/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aalness/subscriptions",
      "organizations_url": "https://api.github.com/users/aalness/orgs",
      "repos_url": "https://api.github.com/users/aalness/repos",
      "events_url": "https://api.github.com/users/aalness/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aalness/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "aalness",
      "id": 4391003,
      "node_id": "MDQ6VXNlcjQzOTEwMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4391003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aalness",
      "html_url": "https://github.com/aalness",
      "followers_url": "https://api.github.com/users/aalness/followers",
      "following_url": "https://api.github.com/users/aalness/following{/other_user}",
      "gists_url": "https://api.github.com/users/aalness/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aalness/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aalness/subscriptions",
      "organizations_url": "https://api.github.com/users/aalness/orgs",
      "repos_url": "https://api.github.com/users/aalness/repos",
      "events_url": "https://api.github.com/users/aalness/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aalness/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab4bd3bdbb96e64451a38085dd42984ba444033e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab4bd3bdbb96e64451a38085dd42984ba444033e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab4bd3bdbb96e64451a38085dd42984ba444033e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "27104c4c3817dc819307966610b0de7242ec62a1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c",
        "patch": "@@ -295,6 +295,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     }\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+    strUsage += \"  -payreqselfsigned      \" + _(\"Consider payment requests signed with self-signed certificates as verified.\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";"
      },
      {
        "sha": "cdef700cd8f1677a7cb9b692833a99db878c3e42",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=1a738625fa7c444b4d8aaa0b80e4ca038d6ec35c",
        "patch": "@@ -62,6 +62,17 @@ QString PaymentRequestPlus::getPKIType() const\n     return QString::fromStdString(paymentRequest.pki_type());\n }\n \n+static int certVerifyCallback(int ok, X509_STORE_CTX* ctx)\n+{\n+    if (X509_STORE_CTX_get_error(ctx) == X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT) {\n+        // Optionally allow self-signed certificates for testing.\n+        if (GetBoolArg(\"-payreqselfsigned\", false))\n+            return 1;\n+    }\n+\n+    return ok;\n+}\n+\n bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) const\n {\n     merchant.clear();\n@@ -144,6 +155,8 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n             throw SSLVerifyError(X509_verify_cert_error_string(error));\n         }\n \n+        X509_STORE_set_verify_cb_func(store_ctx, certVerifyCallback);\n+\n         // Now do the verification!\n         int result = X509_verify_cert(store_ctx);\n         if (result != 1) {"
      }
    ]
  }
]