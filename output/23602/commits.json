[
  {
    "sha": "fae239208d3676452a755f736ee5aaa17adeb493",
    "node_id": "C_kwDOABII59oAKGZhZTIzOTIwOGQzNjc2NDUyYTc1NWY3MzZlZTVhYWExN2FkZWI0OTM",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T12:48:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T13:50:49Z"
      },
      "message": "wallet: Split signmessage from rpcwallet\n\nCan be reviewed with --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space",
      "tree": {
        "sha": "c2a1d0ad1f948e4fc95baf0931aee5c4e5ebd5ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2a1d0ad1f948e4fc95baf0931aee5c4e5ebd5ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae239208d3676452a755f736ee5aaa17adeb493",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh7fwv/ZYCsKLuc7zQPyGXPS8KVgUkNMS6rdWJ5PUn/GNvhI80tpN5pqzk9GWci\n2c4j+NjWgAfH/V7WwYzI5CuA5lXZ5PvonLjDUnDeBsIAJ5IxtFEay1rlnd0vYw62\ni4hZWxzOiB5H68eiW4euzufKt0hSCk6LHf8VvRfdJe6W8R4VkHrzjxBrIwXgHQlI\nXzOfB3xHYJVgHpgO1uKWZ3YvkfHd158pVX+ZFWFxk3N0A4LjPD9Xvg4etcHBUgFi\nFg5GHQdd0fKFwYiJEIK/1F6opoEbzAV3oSlJ4Td6j6w3l7cp+FTLmST1+ZTP8jwV\nnS8rhqrD3v6sYuQEoOYsu5H1nuBds3jkbVWJ9MINQhWx0Xct+sDw3Lq3ZQp7UmyE\nN944sBLv23QlcKVCxd+P+vnkhGS4TLz+f18pfq9F/QKJ2MnYPt31NVcII9SOuDa/\nve0OD2S+a2ghLc8tFtzwP82MdV0SGl6VcbTNHmKkNrCo1BF2KtCOW+aG2Ho5waWS\nNn6lj+EZ\n=LwsG\n-----END PGP SIGNATURE-----",
        "payload": "tree c2a1d0ad1f948e4fc95baf0931aee5c4e5ebd5ea\nparent 16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4\nauthor MarcoFalke <falke.marco@gmail.com> 1637930912 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637934649 +0100\n\nwallet: Split signmessage from rpcwallet\n\nCan be reviewed with --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae239208d3676452a755f736ee5aaa17adeb493",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae239208d3676452a755f736ee5aaa17adeb493",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae239208d3676452a755f736ee5aaa17adeb493/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4"
      }
    ],
    "stats": {
      "total": 132,
      "additions": 73,
      "deletions": 59
    },
    "files": [
      {
        "sha": "6846eb969391fccfc7ceb9c216e4f219ffd331e5",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae239208d3676452a755f736ee5aaa17adeb493/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae239208d3676452a755f736ee5aaa17adeb493/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fae239208d3676452a755f736ee5aaa17adeb493",
        "patch": "@@ -409,6 +409,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/interfaces.cpp \\\n   wallet/load.cpp \\\n   wallet/receive.cpp \\\n+  wallet/rpc/signmessage.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/scriptpubkeyman.cpp \\"
      },
      {
        "sha": "275eb2f1f7958d0e8905706e9799afdc6097128f",
        "filename": "src/wallet/rpc/signmessage.cpp",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae239208d3676452a755f736ee5aaa17adeb493/src/wallet/rpc/signmessage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae239208d3676452a755f736ee5aaa17adeb493/src/wallet/rpc/signmessage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpc/signmessage.cpp?ref=fae239208d3676452a755f736ee5aaa17adeb493",
        "patch": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2011-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key_io.h>\n+#include <rpc/util.h>\n+#include <util/message.h>\n+#include <wallet/rpcwallet.h>\n+#include <wallet/wallet.h>\n+\n+#include <univalue.h>\n+\n+RPCHelpMan signmessage()\n+{\n+    return RPCHelpMan{\"signmessage\",\n+        \"\\nSign a message with the private key of an address\" +\n+          HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to use for the private key.\"},\n+            {\"message\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The message to create a signature of.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::STR, \"signature\", \"The signature of the message encoded in base 64\"\n+        },\n+        RPCExamples{\n+            \"\\nUnlock the wallet for 30 seconds\\n\"\n+            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n+            \"\\nCreate the signature\\n\"\n+            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n+            \"\\nVerify the signature\\n\"\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"my message\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<const CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            LOCK(pwallet->cs_wallet);\n+\n+            EnsureWalletIsUnlocked(*pwallet);\n+\n+            std::string strAddress = request.params[0].get_str();\n+            std::string strMessage = request.params[1].get_str();\n+\n+            CTxDestination dest = DecodeDestination(strAddress);\n+            if (!IsValidDestination(dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n+            }\n+\n+            const PKHash* pkhash = std::get_if<PKHash>(&dest);\n+            if (!pkhash) {\n+                throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n+            }\n+\n+            std::string signature;\n+            SigningResult err = pwallet->SignMessage(strMessage, *pkhash, signature);\n+            if (err == SigningResult::SIGNING_FAILED) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, SigningResultString(err));\n+            } else if (err != SigningResult::OK) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, SigningResultString(err));\n+            }\n+\n+            return signature;\n+        },\n+    };\n+}"
      },
      {
        "sha": "6bce5d3367bbc3019bb030218278cb2a9fd7e2b1",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 59,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae239208d3676452a755f736ee5aaa17adeb493/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae239208d3676452a755f736ee5aaa17adeb493/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fae239208d3676452a755f736ee5aaa17adeb493",
        "patch": "@@ -20,7 +20,6 @@\n #include <script/sign.h>\n #include <util/bip32.h>\n #include <util/fees.h>\n-#include <util/message.h> // For MessageSign()\n #include <util/moneystr.h>\n #include <util/string.h>\n #include <util/system.h>\n@@ -48,7 +47,7 @@\n using interfaces::FoundBlock;\n \n static const std::string WALLET_ENDPOINT_BASE = \"/wallet/\";\n-static const std::string HELP_REQUIRING_PASSPHRASE{\"\\nRequires wallet passphrase to be set with walletpassphrase call if wallet is encrypted.\\n\"};\n+const std::string HELP_REQUIRING_PASSPHRASE{\"\\nRequires wallet passphrase to be set with walletpassphrase call if wallet is encrypted.\\n\"};\n \n static inline bool GetAvoidReuseFlag(const CWallet& wallet, const UniValue& param) {\n     bool can_avoid_reuse = wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n@@ -612,63 +611,6 @@ static RPCHelpMan listaddressgroupings()\n     };\n }\n \n-static RPCHelpMan signmessage()\n-{\n-    return RPCHelpMan{\"signmessage\",\n-                \"\\nSign a message with the private key of an address\" +\n-        HELP_REQUIRING_PASSPHRASE,\n-                {\n-                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to use for the private key.\"},\n-                    {\"message\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The message to create a signature of.\"},\n-                },\n-                RPCResult{\n-                    RPCResult::Type::STR, \"signature\", \"The signature of the message encoded in base 64\"\n-                },\n-                RPCExamples{\n-            \"\\nUnlock the wallet for 30 seconds\\n\"\n-            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n-            \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n-            \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n-            \"\\nAs a JSON-RPC call\\n\"\n-            + HelpExampleRpc(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"my message\\\"\")\n-                },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-{\n-    const std::shared_ptr<const CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n-    if (!pwallet) return NullUniValue;\n-\n-    LOCK(pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(*pwallet);\n-\n-    std::string strAddress = request.params[0].get_str();\n-    std::string strMessage = request.params[1].get_str();\n-\n-    CTxDestination dest = DecodeDestination(strAddress);\n-    if (!IsValidDestination(dest)) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n-    }\n-\n-    const PKHash* pkhash = std::get_if<PKHash>(&dest);\n-    if (!pkhash) {\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n-    }\n-\n-    std::string signature;\n-    SigningResult err = pwallet->SignMessage(strMessage, *pkhash, signature);\n-    if (err == SigningResult::SIGNING_FAILED) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, SigningResultString(err));\n-    } else if (err != SigningResult::OK){\n-        throw JSONRPCError(RPC_WALLET_ERROR, SigningResultString(err));\n-    }\n-\n-    return signature;\n-},\n-    };\n-}\n-\n static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool by_label) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n {\n     std::set<CTxDestination> address_set;\n@@ -4860,6 +4802,7 @@ RPCHelpMan removeprunedfunds();\n RPCHelpMan importmulti();\n RPCHelpMan importdescriptors();\n RPCHelpMan listdescriptors();\n+RPCHelpMan signmessage();\n \n Span<const CRPCCommand> GetWalletRPCCommands()\n {"
      },
      {
        "sha": "fda685e9ee24439ecbe839c5e1b6da3a5de705ec",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae239208d3676452a755f736ee5aaa17adeb493/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae239208d3676452a755f736ee5aaa17adeb493/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=fae239208d3676452a755f736ee5aaa17adeb493",
        "patch": "@@ -21,6 +21,8 @@ class CTransaction;\n struct PartiallySignedTransaction;\n struct WalletContext;\n \n+extern const std::string HELP_REQUIRING_PASSPHRASE;\n+\n Span<const CRPCCommand> GetWalletRPCCommands();\n \n /**"
      }
    ]
  }
]