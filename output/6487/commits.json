[
  {
    "sha": "eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWM3NzU3NDQ1OWRjYmQ4ZDU5ZDhkYmQzNTEyNWViMWUzZWMxYTJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-28T13:20:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-31T07:35:18Z"
      },
      "message": "qt: Introduce PlatformStyle\n\nIntroduce a PlatformStyle to handle platform-specific customization of\nthe UI.\n\nThis replaces 'scicon', as well as #ifdefs to determine whether to place\nicons on buttons.\n\nThe selected PlatformStyle defaults to the platform that the application\nwas compiled on, but can be overridden from the command line with\n`-uiplatform=<x>`.\n\nAlso fixes the warning from #6328.",
      "tree": {
        "sha": "056a02aa9273bdb049286d409973299785d0cf1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/056a02aa9273bdb049286d409973299785d0cf1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1369d699b6221818dc9ca72eb6c0cea30eeee914",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1369d699b6221818dc9ca72eb6c0cea30eeee914",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1369d699b6221818dc9ca72eb6c0cea30eeee914"
      }
    ],
    "stats": {
      "total": 780,
      "additions": 462,
      "deletions": 318
    },
    "files": [
      {
        "sha": "748f2b14d53a6276e775c3f47a85020d30f6d99e",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -185,13 +185,13 @@ BITCOIN_QT_H = \\\n   qt/paymentrequestplus.h \\\n   qt/paymentserver.h \\\n   qt/peertablemodel.h \\\n+  qt/platformstyle.h \\\n   qt/qvalidatedlineedit.h \\\n   qt/qvaluecombobox.h \\\n   qt/receivecoinsdialog.h \\\n   qt/receiverequestdialog.h \\\n   qt/recentrequeststablemodel.h \\\n   qt/rpcconsole.h \\\n-  qt/scicon.h \\\n   qt/sendcoinsdialog.h \\\n   qt/sendcoinsentry.h \\\n   qt/signverifymessagedialog.h \\\n@@ -273,10 +273,10 @@ BITCOIN_QT_CPP = \\\n   qt/optionsdialog.cpp \\\n   qt/optionsmodel.cpp \\\n   qt/peertablemodel.cpp \\\n+  qt/platformstyle.cpp \\\n   qt/qvalidatedlineedit.cpp \\\n   qt/qvaluecombobox.cpp \\\n   qt/rpcconsole.cpp \\\n-  qt/scicon.cpp \\\n   qt/splashscreen.cpp \\\n   qt/trafficgraphwidget.cpp \\\n   qt/utilitydialog.cpp"
      },
      {
        "sha": "a03571c31ac55a978a46fb9a8a7cf99194711b25",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -441,6 +441,9 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-min\", _(\"Start minimized\"));\n         strUsage += HelpMessageOpt(\"-rootcertificates=<file>\", _(\"Set SSL root certificates for payment request (default: -system-)\"));\n         strUsage += HelpMessageOpt(\"-splash\", _(\"Show splash screen on startup (default: 1)\"));\n+        if (showDebug) {\n+            strUsage += HelpMessageOpt(\"-uiplatform\", \"Select platform to customize UI for (one of windows, macosx, other; default: platform compiled on)\");\n+        }\n     }\n \n     return strUsage;"
      },
      {
        "sha": "8bd158644604fc3c09b296701fdc1118f1e49c10",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -14,14 +14,14 @@\n #include \"csvmodelwriter.h\"\n #include \"editaddressdialog.h\"\n #include \"guiutil.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n \n #include <QIcon>\n #include <QMenu>\n #include <QMessageBox>\n #include <QSortFilterProxyModel>\n \n-AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n+AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode mode, Tabs tab, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::AddressBookPage),\n     model(0),\n@@ -30,17 +30,17 @@ AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n {\n     ui->setupUi(this);\n \n-#ifdef Q_OS_MAC // Icons on push buttons are very uncommon on Mac\n-    ui->newAddress->setIcon(QIcon());\n-    ui->copyAddress->setIcon(QIcon());\n-    ui->deleteAddress->setIcon(QIcon());\n-    ui->exportButton->setIcon(QIcon());\n-#else\n-    ui->newAddress->setIcon(SingleColorIcon(\":/icons/add\"));\n-    ui->copyAddress->setIcon(SingleColorIcon(\":/icons/editcopy\"));\n-    ui->deleteAddress->setIcon(SingleColorIcon(\":/icons/remove\"));\n-    ui->exportButton->setIcon(SingleColorIcon(\":/icons/export\"));\n-#endif\n+    if (!platformStyle->getImagesOnButtons()) {\n+        ui->newAddress->setIcon(QIcon());\n+        ui->copyAddress->setIcon(QIcon());\n+        ui->deleteAddress->setIcon(QIcon());\n+        ui->exportButton->setIcon(QIcon());\n+    } else {\n+        ui->newAddress->setIcon(platformStyle->SingleColorIcon(\":/icons/add\"));\n+        ui->copyAddress->setIcon(platformStyle->SingleColorIcon(\":/icons/editcopy\"));\n+        ui->deleteAddress->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+        ui->exportButton->setIcon(platformStyle->SingleColorIcon(\":/icons/export\"));\n+    }\n \n     switch(mode)\n     {"
      },
      {
        "sha": "92e6cab9acbc9372f4c3ec7953d9bc6b454ced1c",
        "filename": "src/qt/addressbookpage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/addressbookpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/addressbookpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -9,6 +9,7 @@\n \n class AddressTableModel;\n class OptionsModel;\n+class PlatformStyle;\n \n namespace Ui {\n     class AddressBookPage;\n@@ -39,7 +40,7 @@ class AddressBookPage : public QDialog\n         ForEditing  /**< Open address book for editing */\n     };\n \n-    explicit AddressBookPage(Mode mode, Tabs tab, QWidget *parent);\n+    explicit AddressBookPage(const PlatformStyle *platformStyle, Mode mode, Tabs tab, QWidget *parent);\n     ~AddressBookPage();\n \n     void setModel(AddressTableModel *model);"
      },
      {
        "sha": "1da2d3e34411669f4c6127d62fbb6246324f8895",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -15,6 +15,7 @@\n #include \"intro.h\"\n #include \"networkstyle.h\"\n #include \"optionsmodel.h\"\n+#include \"platformstyle.h\"\n #include \"splashscreen.h\"\n #include \"utilitydialog.h\"\n #include \"winshutdownmonitor.h\"\n@@ -241,6 +242,7 @@ public Q_SLOTS:\n     WalletModel *walletModel;\n #endif\n     int returnValue;\n+    const PlatformStyle *platformStyle;\n \n     void startThread();\n };\n@@ -310,6 +312,22 @@ BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     returnValue(0)\n {\n     setQuitOnLastWindowClosed(false);\n+\n+    // UI per-platform customization\n+    // This must be done inside the BitcoinApplication constructor, or after it, because\n+    // PlatformStyle::instantiate requires a QApplication\n+#if defined(Q_OS_MAC)\n+    std::string platformName = \"macosx\";\n+#elif defined(Q_OS_WIN)\n+    std::string platformName = \"windows\";\n+#else\n+    std::string platformName = \"other\";\n+#endif\n+    platformName = GetArg(\"-uiplatform\", platformName);\n+    platformStyle = PlatformStyle::instantiate(QString::fromStdString(platformName));\n+    if (!platformStyle) // Fall back to \"other\" if specified name not found\n+        platformStyle = PlatformStyle::instantiate(\"other\");\n+    assert(platformStyle);\n }\n \n BitcoinApplication::~BitcoinApplication()\n@@ -330,6 +348,8 @@ BitcoinApplication::~BitcoinApplication()\n #endif\n     delete optionsModel;\n     optionsModel = 0;\n+    delete platformStyle;\n+    platformStyle = 0;\n }\n \n #ifdef ENABLE_WALLET\n@@ -346,7 +366,7 @@ void BitcoinApplication::createOptionsModel()\n \n void BitcoinApplication::createWindow(const NetworkStyle *networkStyle)\n {\n-    window = new BitcoinGUI(networkStyle, 0);\n+    window = new BitcoinGUI(platformStyle, networkStyle, 0);\n \n     pollShutdownTimer = new QTimer(window);\n     connect(pollShutdownTimer, SIGNAL(timeout()), window, SLOT(detectShutdown()));\n@@ -421,6 +441,8 @@ void BitcoinApplication::initializeResult(int retval)\n     returnValue = retval ? 0 : 1;\n     if(retval)\n     {\n+        // Log this only after AppInit2 finishes, as then logging setup is guaranteed complete\n+        qWarning() << \"Platform customization:\" << platformStyle->getName();\n #ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();\n         paymentServer->setOptionsModel(optionsModel);\n@@ -432,7 +454,7 @@ void BitcoinApplication::initializeResult(int retval)\n #ifdef ENABLE_WALLET\n         if(pwalletMain)\n         {\n-            walletModel = new WalletModel(pwalletMain, optionsModel);\n+            walletModel = new WalletModel(platformStyle, pwalletMain, optionsModel);\n \n             window->addWallet(BitcoinGUI::DEFAULT_WALLET, walletModel);\n             window->setCurrentWallet(BitcoinGUI::DEFAULT_WALLET);"
      },
      {
        "sha": "1d3f7762ab77daf6d8346e73564a4013b1356d46",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 34,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -13,8 +13,8 @@\n #include \"openuridialog.h\"\n #include \"optionsdialog.h\"\n #include \"optionsmodel.h\"\n+#include \"platformstyle.h\"\n #include \"rpcconsole.h\"\n-#include \"scicon.h\"\n #include \"utilitydialog.h\"\n \n #ifdef ENABLE_WALLET\n@@ -60,7 +60,7 @@\n \n const QString BitcoinGUI::DEFAULT_WALLET = \"~Default\";\n \n-BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n+BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent) :\n     QMainWindow(parent),\n     clientModel(0),\n     walletFrame(0),\n@@ -98,7 +98,8 @@ BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n     notificator(0),\n     rpcConsole(0),\n     prevBlocks(0),\n-    spinnerFrame(0)\n+    spinnerFrame(0),\n+    platformStyle(platformStyle)\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n@@ -130,12 +131,12 @@ BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n     setUnifiedTitleAndToolBarOnMac(true);\n #endif\n \n-    rpcConsole = new RPCConsole(0);\n+    rpcConsole = new RPCConsole(platformStyle, 0);\n #ifdef ENABLE_WALLET\n     if(enableWallet)\n     {\n         /** Create wallet frame and make it the central widget */\n-        walletFrame = new WalletFrame(this);\n+        walletFrame = new WalletFrame(platformStyle, this);\n         setCentralWidget(walletFrame);\n     } else\n #endif // ENABLE_WALLET\n@@ -175,7 +176,7 @@ BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n     QHBoxLayout *frameBlocksLayout = new QHBoxLayout(frameBlocks);\n     frameBlocksLayout->setContentsMargins(3,0,3,0);\n     frameBlocksLayout->setSpacing(3);\n-    unitDisplayControl = new UnitDisplayStatusBarControl();\n+    unitDisplayControl = new UnitDisplayStatusBarControl(platformStyle);\n     labelEncryptionIcon = new QLabel();\n     labelConnectionsIcon = new QLabel();\n     labelBlocksIcon = new QLabel();\n@@ -247,36 +248,36 @@ void BitcoinGUI::createActions()\n {\n     QActionGroup *tabGroup = new QActionGroup(this);\n \n-    overviewAction = new QAction(SingleColorIcon(\":/icons/overview\"), tr(\"&Overview\"), this);\n+    overviewAction = new QAction(platformStyle->SingleColorIcon(\":/icons/overview\"), tr(\"&Overview\"), this);\n     overviewAction->setStatusTip(tr(\"Show general overview of wallet\"));\n     overviewAction->setToolTip(overviewAction->statusTip());\n     overviewAction->setCheckable(true);\n     overviewAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_1));\n     tabGroup->addAction(overviewAction);\n \n-    sendCoinsAction = new QAction(SingleColorIcon(\":/icons/send\"), tr(\"&Send\"), this);\n+    sendCoinsAction = new QAction(platformStyle->SingleColorIcon(\":/icons/send\"), tr(\"&Send\"), this);\n     sendCoinsAction->setStatusTip(tr(\"Send coins to a Bitcoin address\"));\n     sendCoinsAction->setToolTip(sendCoinsAction->statusTip());\n     sendCoinsAction->setCheckable(true);\n     sendCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_2));\n     tabGroup->addAction(sendCoinsAction);\n \n-    sendCoinsMenuAction = new QAction(TextColorIcon(\":/icons/send\"), sendCoinsAction->text(), this);\n+    sendCoinsMenuAction = new QAction(platformStyle->TextColorIcon(\":/icons/send\"), sendCoinsAction->text(), this);\n     sendCoinsMenuAction->setStatusTip(sendCoinsAction->statusTip());\n     sendCoinsMenuAction->setToolTip(sendCoinsMenuAction->statusTip());\n \n-    receiveCoinsAction = new QAction(SingleColorIcon(\":/icons/receiving_addresses\"), tr(\"&Receive\"), this);\n+    receiveCoinsAction = new QAction(platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"), tr(\"&Receive\"), this);\n     receiveCoinsAction->setStatusTip(tr(\"Request payments (generates QR codes and bitcoin: URIs)\"));\n     receiveCoinsAction->setToolTip(receiveCoinsAction->statusTip());\n     receiveCoinsAction->setCheckable(true);\n     receiveCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_3));\n     tabGroup->addAction(receiveCoinsAction);\n \n-    receiveCoinsMenuAction = new QAction(TextColorIcon(\":/icons/receiving_addresses\"), receiveCoinsAction->text(), this);\n+    receiveCoinsMenuAction = new QAction(platformStyle->TextColorIcon(\":/icons/receiving_addresses\"), receiveCoinsAction->text(), this);\n     receiveCoinsMenuAction->setStatusTip(receiveCoinsAction->statusTip());\n     receiveCoinsMenuAction->setToolTip(receiveCoinsMenuAction->statusTip());\n \n-    historyAction = new QAction(SingleColorIcon(\":/icons/history\"), tr(\"&Transactions\"), this);\n+    historyAction = new QAction(platformStyle->SingleColorIcon(\":/icons/history\"), tr(\"&Transactions\"), this);\n     historyAction->setStatusTip(tr(\"Browse transaction history\"));\n     historyAction->setToolTip(historyAction->statusTip());\n     historyAction->setCheckable(true);\n@@ -300,46 +301,46 @@ void BitcoinGUI::createActions()\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(gotoHistoryPage()));\n #endif // ENABLE_WALLET\n \n-    quitAction = new QAction(TextColorIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n+    quitAction = new QAction(platformStyle->TextColorIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n     quitAction->setStatusTip(tr(\"Quit application\"));\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n     quitAction->setMenuRole(QAction::QuitRole);\n-    aboutAction = new QAction(TextColorIcon(\":/icons/about\"), tr(\"&About Bitcoin Core\"), this);\n+    aboutAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&About Bitcoin Core\"), this);\n     aboutAction->setStatusTip(tr(\"Show information about Bitcoin Core\"));\n     aboutAction->setMenuRole(QAction::AboutRole);\n-    aboutQtAction = new QAction(TextColorIcon(\":/icons/about_qt\"), tr(\"About &Qt\"), this);\n+    aboutQtAction = new QAction(platformStyle->TextColorIcon(\":/icons/about_qt\"), tr(\"About &Qt\"), this);\n     aboutQtAction->setStatusTip(tr(\"Show information about Qt\"));\n     aboutQtAction->setMenuRole(QAction::AboutQtRole);\n-    optionsAction = new QAction(TextColorIcon(\":/icons/options\"), tr(\"&Options...\"), this);\n+    optionsAction = new QAction(platformStyle->TextColorIcon(\":/icons/options\"), tr(\"&Options...\"), this);\n     optionsAction->setStatusTip(tr(\"Modify configuration options for Bitcoin Core\"));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n-    toggleHideAction = new QAction(TextColorIcon(\":/icons/about\"), tr(\"&Show / Hide\"), this);\n+    toggleHideAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&Show / Hide\"), this);\n     toggleHideAction->setStatusTip(tr(\"Show or hide the main Window\"));\n \n-    encryptWalletAction = new QAction(TextColorIcon(\":/icons/lock_closed\"), tr(\"&Encrypt Wallet...\"), this);\n+    encryptWalletAction = new QAction(platformStyle->TextColorIcon(\":/icons/lock_closed\"), tr(\"&Encrypt Wallet...\"), this);\n     encryptWalletAction->setStatusTip(tr(\"Encrypt the private keys that belong to your wallet\"));\n     encryptWalletAction->setCheckable(true);\n-    backupWalletAction = new QAction(TextColorIcon(\":/icons/filesave\"), tr(\"&Backup Wallet...\"), this);\n+    backupWalletAction = new QAction(platformStyle->TextColorIcon(\":/icons/filesave\"), tr(\"&Backup Wallet...\"), this);\n     backupWalletAction->setStatusTip(tr(\"Backup wallet to another location\"));\n-    changePassphraseAction = new QAction(TextColorIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n+    changePassphraseAction = new QAction(platformStyle->TextColorIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n-    signMessageAction = new QAction(TextColorIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n+    signMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n     signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n-    verifyMessageAction = new QAction(TextColorIcon(\":/icons/verify\"), tr(\"&Verify message...\"), this);\n+    verifyMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/verify\"), tr(\"&Verify message...\"), this);\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n \n-    openRPCConsoleAction = new QAction(TextColorIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n+    openRPCConsoleAction = new QAction(platformStyle->TextColorIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n \n-    usedSendingAddressesAction = new QAction(TextColorIcon(\":/icons/address-book\"), tr(\"&Sending addresses...\"), this);\n+    usedSendingAddressesAction = new QAction(platformStyle->TextColorIcon(\":/icons/address-book\"), tr(\"&Sending addresses...\"), this);\n     usedSendingAddressesAction->setStatusTip(tr(\"Show the list of used sending addresses and labels\"));\n-    usedReceivingAddressesAction = new QAction(TextColorIcon(\":/icons/address-book\"), tr(\"&Receiving addresses...\"), this);\n+    usedReceivingAddressesAction = new QAction(platformStyle->TextColorIcon(\":/icons/address-book\"), tr(\"&Receiving addresses...\"), this);\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n-    openAction = new QAction(TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n+    openAction = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n \n-    showHelpMessageAction = new QAction(TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n+    showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options\"));\n \n@@ -650,7 +651,7 @@ void BitcoinGUI::setNumConnections(int count)\n     case 7: case 8: case 9: icon = \":/icons/connect_3\"; break;\n     default: icon = \":/icons/connect_4\"; break;\n     }\n-    labelConnectionsIcon->setPixmap(SingleColorIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n+    labelConnectionsIcon->setPixmap(platformStyle->SingleColorIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n     labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n }\n \n@@ -691,7 +692,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate)\n     if(secs < 90*60)\n     {\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n-        labelBlocksIcon->setPixmap(SingleColorIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n+        labelBlocksIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n \n #ifdef ENABLE_WALLET\n         if(walletFrame)\n@@ -737,7 +738,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate)\n         tooltip = tr(\"Catching up...\") + QString(\"<br>\") + tooltip;\n         if(count != prevBlocks)\n         {\n-            labelBlocksIcon->setPixmap(SingleColorIcon(QString(\n+            labelBlocksIcon->setPixmap(platformStyle->SingleColorIcon(QString(\n                 \":/movies/spinner-%1\").arg(spinnerFrame, 3, 10, QChar('0')))\n                 .pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n             spinnerFrame = (spinnerFrame + 1) % SPINNER_FRAMES;\n@@ -931,15 +932,15 @@ void BitcoinGUI::setEncryptionStatus(int status)\n         break;\n     case WalletModel::Unlocked:\n         labelEncryptionIcon->show();\n-        labelEncryptionIcon->setPixmap(SingleColorIcon(\":/icons/lock_open\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n+        labelEncryptionIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/lock_open\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n         labelEncryptionIcon->setToolTip(tr(\"Wallet is <b>encrypted</b> and currently <b>unlocked</b>\"));\n         encryptWalletAction->setChecked(true);\n         changePassphraseAction->setEnabled(true);\n         encryptWalletAction->setEnabled(false); // TODO: decrypt currently not supported\n         break;\n     case WalletModel::Locked:\n         labelEncryptionIcon->show();\n-        labelEncryptionIcon->setPixmap(SingleColorIcon(\":/icons/lock_closed\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n+        labelEncryptionIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/lock_closed\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n         labelEncryptionIcon->setToolTip(tr(\"Wallet is <b>encrypted</b> and currently <b>locked</b>\"));\n         encryptWalletAction->setChecked(true);\n         changePassphraseAction->setEnabled(true);\n@@ -1041,7 +1042,7 @@ void BitcoinGUI::unsubscribeFromCoreSignals()\n     uiInterface.ThreadSafeMessageBox.disconnect(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));\n }\n \n-UnitDisplayStatusBarControl::UnitDisplayStatusBarControl() :\n+UnitDisplayStatusBarControl::UnitDisplayStatusBarControl(const PlatformStyle *platformStyle) :\n     optionsModel(0),\n     menu(0)\n {\n@@ -1056,7 +1057,7 @@ UnitDisplayStatusBarControl::UnitDisplayStatusBarControl() :\n     }\n     setMinimumSize(max_width, 0);\n     setAlignment(Qt::AlignRight | Qt::AlignVCenter);\n-    setStyleSheet(QString(\"QLabel { color : %1 }\").arg(SingleColor().name()));\n+    setStyleSheet(QString(\"QLabel { color : %1 }\").arg(platformStyle->SingleColor().name()));\n }\n \n /** So that it responds to button clicks */"
      },
      {
        "sha": "dd0d4bb0e20fab93a325b4c4ce0535c093ca41a2",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -22,6 +22,7 @@ class ClientModel;\n class NetworkStyle;\n class Notificator;\n class OptionsModel;\n+class PlatformStyle;\n class RPCConsole;\n class SendCoinsRecipient;\n class UnitDisplayStatusBarControl;\n@@ -47,7 +48,7 @@ class BitcoinGUI : public QMainWindow\n public:\n     static const QString DEFAULT_WALLET;\n \n-    explicit BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent = 0);\n+    explicit BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent = 0);\n     ~BitcoinGUI();\n \n     /** Set the client model.\n@@ -117,6 +118,8 @@ class BitcoinGUI : public QMainWindow\n     int prevBlocks;\n     int spinnerFrame;\n \n+    const PlatformStyle *platformStyle;\n+\n     /** Create the main UI actions. */\n     void createActions();\n     /** Create the menu bar and sub-menus. */\n@@ -215,7 +218,7 @@ class UnitDisplayStatusBarControl : public QLabel\n     Q_OBJECT\n \n public:\n-    explicit UnitDisplayStatusBarControl();\n+    explicit UnitDisplayStatusBarControl(const PlatformStyle *platformStyle);\n     /** Lets the control know about the Options Model (and its signals) */\n     void setOptionsModel(OptionsModel *optionsModel);\n "
      },
      {
        "sha": "51008ad2deb51c3803b4ec1baf666d84cc5a3288",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -9,7 +9,7 @@\n #include \"bitcoinunits.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"txmempool.h\"\n #include \"walletmodel.h\"\n \n@@ -35,10 +35,11 @@ QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n-CoinControlDialog::CoinControlDialog(QWidget *parent) :\n+CoinControlDialog::CoinControlDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::CoinControlDialog),\n-    model(0)\n+    model(0),\n+    platformStyle(platformStyle)\n {\n     ui->setupUi(this);\n \n@@ -280,7 +281,7 @@ void CoinControlDialog::lockCoin()\n     COutPoint outpt(uint256S(contextMenuItem->text(COLUMN_TXHASH).toStdString()), contextMenuItem->text(COLUMN_VOUT_INDEX).toUInt());\n     model->lockCoin(outpt);\n     contextMenuItem->setDisabled(true);\n-    contextMenuItem->setIcon(COLUMN_CHECKBOX, SingleColorIcon(\":/icons/lock_closed\"));\n+    contextMenuItem->setIcon(COLUMN_CHECKBOX, platformStyle->SingleColorIcon(\":/icons/lock_closed\"));\n     updateLabelLocked();\n }\n \n@@ -791,7 +792,7 @@ void CoinControlDialog::updateView()\n                 COutPoint outpt(txhash, out.i);\n                 coinControl->UnSelect(outpt); // just to be sure\n                 itemOutput->setDisabled(true);\n-                itemOutput->setIcon(COLUMN_CHECKBOX, SingleColorIcon(\":/icons/lock_closed\"));\n+                itemOutput->setIcon(COLUMN_CHECKBOX, platformStyle->SingleColorIcon(\":/icons/lock_closed\"));\n             }\n \n             // set checkbox"
      },
      {
        "sha": "8ff1eac7093002afe59e7cae58c280b6b011b1f6",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -16,6 +16,7 @@\n #include <QString>\n #include <QTreeWidgetItem>\n \n+class PlatformStyle;\n class WalletModel;\n \n class CCoinControl;\n@@ -32,7 +33,7 @@ class CoinControlDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit CoinControlDialog(QWidget *parent = 0);\n+    explicit CoinControlDialog(const PlatformStyle *platformStyle, QWidget *parent = 0);\n     ~CoinControlDialog();\n \n     void setModel(WalletModel *model);\n@@ -57,6 +58,8 @@ class CoinControlDialog : public QDialog\n     QAction *lockAction;\n     QAction *unlockAction;\n \n+    const PlatformStyle *platformStyle;\n+\n     QString strPad(QString, int, QString);\n     void sortView(int, Qt::SortOrder);\n     void updateView();"
      },
      {
        "sha": "4ab87e0f32b04b098653a7b66070debe3a7ab2ef",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -6,7 +6,6 @@\n #include \"ui_intro.h\"\n \n #include \"guiutil.h\"\n-#include \"scicon.h\"\n \n #include \"util.h\"\n \n@@ -168,7 +167,7 @@ void Intro::pickDataDirectory()\n         /* If current default data directory does not exist, let the user choose one */\n         Intro intro;\n         intro.setDataDirectory(dataDir);\n-        intro.setWindowIcon(SingleColorIcon(\":icons/bitcoin\"));\n+        intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n \n         while(true)\n         {"
      },
      {
        "sha": "4541c75886b6f7c797900182dec08dde7f91a722",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -5,7 +5,6 @@\n #include \"networkstyle.h\"\n \n #include \"guiconstants.h\"\n-#include \"scicon.h\"\n \n #include <QApplication>\n "
      },
      {
        "sha": "a56c80ac6326ce9aaf6d90dd816e0628ab6955f0",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,7 +10,7 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"transactionfilterproxy.h\"\n #include \"transactiontablemodel.h\"\n #include \"walletmodel.h\"\n@@ -25,7 +25,9 @@ class TxViewDelegate : public QAbstractItemDelegate\n {\n     Q_OBJECT\n public:\n-    TxViewDelegate(): QAbstractItemDelegate(), unit(BitcoinUnits::BTC)\n+    TxViewDelegate(const PlatformStyle *platformStyle):\n+        QAbstractItemDelegate(), unit(BitcoinUnits::BTC),\n+        platformStyle(platformStyle)\n     {\n \n     }\n@@ -43,7 +45,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n         int halfheight = (mainRect.height() - 2*ypad)/2;\n         QRect amountRect(mainRect.left() + xspace, mainRect.top()+ypad, mainRect.width() - xspace, halfheight);\n         QRect addressRect(mainRect.left() + xspace, mainRect.top()+ypad+halfheight, mainRect.width() - xspace, halfheight);\n-        icon = SingleColorIcon(icon, SingleColor());\n+        icon = platformStyle->SingleColorIcon(icon);\n         icon.paint(painter, decorationRect);\n \n         QDateTime date = index.data(TransactionTableModel::DateRole).toDateTime();\n@@ -101,11 +103,12 @@ class TxViewDelegate : public QAbstractItemDelegate\n     }\n \n     int unit;\n+    const PlatformStyle *platformStyle;\n \n };\n #include \"overviewpage.moc\"\n \n-OverviewPage::OverviewPage(QWidget *parent) :\n+OverviewPage::OverviewPage(const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::OverviewPage),\n     clientModel(0),\n@@ -116,13 +119,13 @@ OverviewPage::OverviewPage(QWidget *parent) :\n     currentWatchOnlyBalance(-1),\n     currentWatchUnconfBalance(-1),\n     currentWatchImmatureBalance(-1),\n-    txdelegate(new TxViewDelegate()),\n+    txdelegate(new TxViewDelegate(platformStyle)),\n     filter(0)\n {\n     ui->setupUi(this);\n \n     // use a SingleColorIcon for the \"out of sync warning\" icon\n-    QIcon icon = SingleColorIcon(\":/icons/warning\");\n+    QIcon icon = platformStyle->SingleColorIcon(\":/icons/warning\");\n     icon.addPixmap(icon.pixmap(QSize(64,64), QIcon::Normal), QIcon::Disabled); // also set the disabled icon because we are using a disabled QPushButton to work around missing HiDPI support of QLabel (https://bugreports.qt.io/browse/QTBUG-42503)\n     ui->labelTransactionsStatus->setIcon(icon);\n     ui->labelWalletStatus->setIcon(icon);"
      },
      {
        "sha": "4139eb35d369fe543e7d34716d5bdf4fbe0b2930",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -12,6 +12,7 @@\n class ClientModel;\n class TransactionFilterProxy;\n class TxViewDelegate;\n+class PlatformStyle;\n class WalletModel;\n \n namespace Ui {\n@@ -28,7 +29,7 @@ class OverviewPage : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit OverviewPage(QWidget *parent = 0);\n+    explicit OverviewPage(const PlatformStyle *platformStyle, QWidget *parent = 0);\n     ~OverviewPage();\n \n     void setClientModel(ClientModel *clientModel);"
      },
      {
        "sha": "11cbc7a47c06fd9ab0e06c73d14aa3bac3e9abfa",
        "filename": "src/qt/platformstyle.cpp",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/platformstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/platformstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/platformstyle.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"platformstyle.h\"\n+\n+#include \"guiconstants.h\"\n+\n+#include <QApplication>\n+#include <QColor>\n+#include <QIcon>\n+#include <QImage>\n+#include <QPalette>\n+#include <QPixmap>\n+\n+static const struct {\n+    const char *platformId;\n+    /** Show images on push buttons */\n+    const bool imagesOnButtons;\n+    /** Colorize single-color icons */\n+    const bool colorizeIcons;\n+    /** Extra padding/spacing in transactionview */\n+    const bool useExtraSpacing;\n+} platform_styles[] = {\n+    {\"macosx\", false, false, true},\n+    {\"windows\", true, false, false},\n+    /* Other: linux, unix, ... */\n+    {\"other\", true, true, false}\n+};\n+static const unsigned platform_styles_count = sizeof(platform_styles)/sizeof(*platform_styles);\n+\n+namespace {\n+/* Local functions for colorizing single-color images */\n+\n+void MakeSingleColorImage(QImage& img, const QColor& colorbase)\n+{\n+    img = img.convertToFormat(QImage::Format_ARGB32);\n+    for (int x = img.width(); x--; )\n+    {\n+        for (int y = img.height(); y--; )\n+        {\n+            const QRgb rgb = img.pixel(x, y);\n+            img.setPixel(x, y, qRgba(colorbase.red(), colorbase.green(), colorbase.blue(), qAlpha(rgb)));\n+        }\n+    }\n+}\n+\n+QIcon ColorizeIcon(const QIcon& ico, const QColor& colorbase)\n+{\n+    QIcon new_ico;\n+    QSize sz;\n+    Q_FOREACH(sz, ico.availableSizes())\n+    {\n+        QImage img(ico.pixmap(sz).toImage());\n+        MakeSingleColorImage(img, colorbase);\n+        new_ico.addPixmap(QPixmap::fromImage(img));\n+    }\n+    return new_ico;\n+}\n+\n+QImage ColorizeImage(const QString& filename, const QColor& colorbase)\n+{\n+    QImage img(filename);\n+    MakeSingleColorImage(img, colorbase);\n+    return img;\n+}\n+\n+QIcon ColorizeIcon(const QString& filename, const QColor& colorbase)\n+{\n+    return QIcon(QPixmap::fromImage(ColorizeImage(filename, colorbase)));\n+}\n+\n+}\n+\n+\n+PlatformStyle::PlatformStyle(const QString &name, bool imagesOnButtons, bool colorizeIcons, bool useExtraSpacing):\n+    name(name),\n+    imagesOnButtons(imagesOnButtons),\n+    colorizeIcons(colorizeIcons),\n+    useExtraSpacing(useExtraSpacing),\n+    singleColor(0,0,0),\n+    textColor(0,0,0)\n+{\n+    // Determine icon highlighting color\n+    if (colorizeIcons) {\n+        const QColor colorHighlightBg(QApplication::palette().color(QPalette::Highlight));\n+        const QColor colorHighlightFg(QApplication::palette().color(QPalette::HighlightedText));\n+        const QColor colorText(QApplication::palette().color(QPalette::WindowText));\n+        const int colorTextLightness = colorText.lightness();\n+        QColor colorbase;\n+        if (abs(colorHighlightBg.lightness() - colorTextLightness) < abs(colorHighlightFg.lightness() - colorTextLightness))\n+            colorbase = colorHighlightBg;\n+        else\n+            colorbase = colorHighlightFg;\n+        singleColor = colorbase;\n+    }\n+    // Determine text color\n+    textColor = QColor(QApplication::palette().color(QPalette::WindowText));\n+}\n+\n+QImage PlatformStyle::SingleColorImage(const QString& filename) const\n+{\n+    if (!colorizeIcons)\n+        return QImage(filename);\n+    return ColorizeImage(filename, SingleColor());\n+}\n+\n+QIcon PlatformStyle::SingleColorIcon(const QString& filename) const\n+{\n+    if (!colorizeIcons)\n+        return QIcon(filename);\n+    return ColorizeIcon(filename, SingleColor());\n+}\n+\n+QIcon PlatformStyle::SingleColorIcon(const QIcon& icon) const\n+{\n+    if (!colorizeIcons)\n+        return icon;\n+    return ColorizeIcon(icon, SingleColor());\n+}\n+\n+QIcon PlatformStyle::TextColorIcon(const QString& filename) const\n+{\n+    return ColorizeIcon(filename, TextColor());\n+}\n+\n+QIcon PlatformStyle::TextColorIcon(const QIcon& icon) const\n+{\n+    return ColorizeIcon(icon, TextColor());\n+}\n+\n+const PlatformStyle *PlatformStyle::instantiate(const QString &platformId)\n+{\n+    for (unsigned x=0; x<platform_styles_count; ++x)\n+    {\n+        if (platformId == platform_styles[x].platformId)\n+        {\n+            return new PlatformStyle(\n+                    platform_styles[x].platformId,\n+                    platform_styles[x].imagesOnButtons,\n+                    platform_styles[x].colorizeIcons,\n+                    platform_styles[x].useExtraSpacing);\n+        }\n+    }\n+    return 0;\n+}\n+"
      },
      {
        "sha": "4e763e760ea26a90457468106161978721ab259f",
        "filename": "src/qt/platformstyle.h",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/platformstyle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/platformstyle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/platformstyle.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_PLATFORMSTYLE_H\n+#define BITCOIN_QT_PLATFORMSTYLE_H\n+\n+#include <QIcon>\n+#include <QPixmap>\n+#include <QString>\n+\n+/* Coin network-specific GUI style information */\n+class PlatformStyle\n+{\n+public:\n+    /** Get style associated with provided platform name, or 0 if not known */\n+    static const PlatformStyle *instantiate(const QString &platformId);\n+\n+    const QString &getName() const { return name; }\n+\n+    bool getImagesOnButtons() const { return imagesOnButtons; }\n+    bool getUseExtraSpacing() const { return useExtraSpacing; }\n+\n+    QColor TextColor() const { return textColor; }\n+    QColor SingleColor() const { return singleColor; }\n+\n+    /** Colorize an image (given filename) with the icon color */\n+    QImage SingleColorImage(const QString& filename) const;\n+\n+    /** Colorize an icon (given filename) with the icon color */\n+    QIcon SingleColorIcon(const QString& filename) const;\n+\n+    /** Colorize an icon (given object) with the icon color */\n+    QIcon SingleColorIcon(const QIcon& icon) const;\n+\n+    /** Colorize an icon (given filename) with the text color */\n+    QIcon TextColorIcon(const QString& filename) const;\n+\n+    /** Colorize an icon (given object) with the text color */\n+    QIcon TextColorIcon(const QIcon& icon) const;\n+\n+private:\n+    PlatformStyle(const QString &name, bool imagesOnButtons, bool colorizeIcons, bool useExtraSpacing);\n+\n+    QString name;\n+    bool imagesOnButtons;\n+    bool colorizeIcons;\n+    bool useExtraSpacing;\n+    QColor singleColor;\n+    QColor textColor;\n+    /* ... more to come later */\n+};\n+\n+#endif // BITCOIN_QT_PLATFORMSTYLE_H\n+"
      },
      {
        "sha": "7fb68cc32a20995962a3482f9b9e69158f69d18b",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,9 +10,9 @@\n #include \"bitcoinunits.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n+#include \"platformstyle.h\"\n #include \"receiverequestdialog.h\"\n #include \"recentrequeststablemodel.h\"\n-#include \"scicon.h\"\n #include \"walletmodel.h\"\n \n #include <QAction>\n@@ -22,24 +22,25 @@\n #include <QScrollBar>\n #include <QTextDocument>\n \n-ReceiveCoinsDialog::ReceiveCoinsDialog(QWidget *parent) :\n+ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::ReceiveCoinsDialog),\n-    model(0)\n+    model(0),\n+    platformStyle(platformStyle)\n {\n     ui->setupUi(this);\n \n-#ifdef Q_OS_MAC // Icons on push buttons are very uncommon on Mac\n-    ui->clearButton->setIcon(QIcon());\n-    ui->receiveButton->setIcon(QIcon());\n-    ui->showRequestButton->setIcon(QIcon());\n-    ui->removeRequestButton->setIcon(QIcon());\n-#else\n-    ui->clearButton->setIcon(SingleColorIcon(\":/icons/remove\"));\n-    ui->receiveButton->setIcon(SingleColorIcon(\":/icons/receiving_addresses\"));\n-    ui->showRequestButton->setIcon(SingleColorIcon(\":/icons/edit\"));\n-    ui->removeRequestButton->setIcon(SingleColorIcon(\":/icons/remove\"));\n-#endif\n+    if (!platformStyle->getImagesOnButtons()) {\n+        ui->clearButton->setIcon(QIcon());\n+        ui->receiveButton->setIcon(QIcon());\n+        ui->showRequestButton->setIcon(QIcon());\n+        ui->removeRequestButton->setIcon(QIcon());\n+    } else {\n+        ui->clearButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+        ui->receiveButton->setIcon(platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"));\n+        ui->showRequestButton->setIcon(platformStyle->SingleColorIcon(\":/icons/edit\"));\n+        ui->removeRequestButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+    }\n \n     // context menu actions\n     QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n@@ -132,7 +133,7 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n     if(ui->reuseAddress->isChecked())\n     {\n         /* Choose existing receiving address */\n-        AddressBookPage dlg(AddressBookPage::ForSelection, AddressBookPage::ReceivingTab, this);\n+        AddressBookPage dlg(platformStyle, AddressBookPage::ForSelection, AddressBookPage::ReceivingTab, this);\n         dlg.setModel(model->getAddressTableModel());\n         if(dlg.exec())\n         {"
      },
      {
        "sha": "eaaf129a91d5d34522832da4ed2b09c1e24f6d9d",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -16,6 +16,7 @@\n #include <QVariant>\n \n class OptionsModel;\n+class PlatformStyle;\n class WalletModel;\n \n namespace Ui {\n@@ -39,7 +40,7 @@ class ReceiveCoinsDialog : public QDialog\n         MINIMUM_COLUMN_WIDTH = 130\n     };\n \n-    explicit ReceiveCoinsDialog(QWidget *parent = 0);\n+    explicit ReceiveCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent = 0);\n     ~ReceiveCoinsDialog();\n \n     void setModel(WalletModel *model);\n@@ -57,6 +58,8 @@ public Q_SLOTS:\n     GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;\n     WalletModel *model;\n     QMenu *contextMenu;\n+    const PlatformStyle *platformStyle;\n+\n     void copyColumnToClipboard(int column);\n     virtual void resizeEvent(QResizeEvent *event);\n "
      },
      {
        "sha": "3231b392f29f2f3895d17f481b5996a06d17621b",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -8,7 +8,7 @@\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n #include \"peertablemodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n \n #include \"chainparams.h\"\n #include \"rpcserver.h\"\n@@ -200,21 +200,22 @@ void RPCExecutor::request(const QString &command)\n     }\n }\n \n-RPCConsole::RPCConsole(QWidget *parent) :\n+RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::RPCConsole),\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    contextMenu(0)\n+    contextMenu(0),\n+    platformStyle(platformStyle)\n {\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n \n-#ifndef Q_OS_MAC\n-    ui->openDebugLogfileButton->setIcon(SingleColorIcon(\":/icons/export\"));\n-#endif\n-    ui->clearButton->setIcon(SingleColorIcon(\":/icons/remove\"));\n+    if (platformStyle->getImagesOnButtons()) {\n+        ui->openDebugLogfileButton->setIcon(platformStyle->SingleColorIcon(\":/icons/export\"));\n+    }\n+    ui->clearButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n \n     // Install event filter for up and down arrow\n     ui->lineEdit->installEventFilter(this);\n@@ -363,7 +364,7 @@ void RPCConsole::clear()\n         ui->messagesWidget->document()->addResource(\n                     QTextDocument::ImageResource,\n                     QUrl(ICON_MAPPING[i].url),\n-                    SingleColorImage(ICON_MAPPING[i].source, SingleColor()).scaled(ICON_SIZE, Qt::IgnoreAspectRatio, Qt::SmoothTransformation));\n+                    platformStyle->SingleColorImage(ICON_MAPPING[i].source).scaled(ICON_SIZE, Qt::IgnoreAspectRatio, Qt::SmoothTransformation));\n     }\n \n     // Set default style sheet"
      },
      {
        "sha": "b94efee84ab1f5a0831fe3246cce255c25f2e5a7",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -13,6 +13,7 @@\n #include <QWidget>\n \n class ClientModel;\n+class PlatformStyle;\n \n namespace Ui {\n     class RPCConsole;\n@@ -29,7 +30,7 @@ class RPCConsole: public QWidget\n     Q_OBJECT\n \n public:\n-    explicit RPCConsole(QWidget *parent);\n+    explicit RPCConsole(const PlatformStyle *platformStyle, QWidget *parent);\n     ~RPCConsole();\n \n     void setClientModel(ClientModel *model);\n@@ -106,6 +107,7 @@ public Q_SLOTS:\n     int historyPtr;\n     NodeId cachedNodeid;\n     QMenu *contextMenu;\n+    const PlatformStyle *platformStyle;\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      },
      {
        "sha": "c493b5569e03c9fae22f5acb6b7b689361227c6d",
        "filename": "src/qt/scicon.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 98,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1369d699b6221818dc9ca72eb6c0cea30eeee914/src/qt/scicon.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1369d699b6221818dc9ca72eb6c0cea30eeee914/src/qt/scicon.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/scicon.cpp?ref=1369d699b6221818dc9ca72eb6c0cea30eeee914",
        "patch": "@@ -1,98 +0,0 @@\n-// Copyright (c) 2014 The Bitcoin developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include \"scicon.h\"\n-\n-#include <QApplication>\n-#include <QColor>\n-#include <QIcon>\n-#include <QImage>\n-#include <QPalette>\n-#include <QPixmap>\n-\n-namespace {\n-\n-void MakeSingleColorImage(QImage& img, const QColor& colorbase)\n-{\n-    img = img.convertToFormat(QImage::Format_ARGB32);\n-    for (int x = img.width(); x--; )\n-    {\n-        for (int y = img.height(); y--; )\n-        {\n-            const QRgb rgb = img.pixel(x, y);\n-            img.setPixel(x, y, qRgba(colorbase.red(), colorbase.green(), colorbase.blue(), qAlpha(rgb)));\n-        }\n-    }\n-}\n-\n-}\n-\n-QImage SingleColorImage(const QString& filename, const QColor& colorbase)\n-{\n-    QImage img(filename);\n-#if !defined(WIN32) && !defined(MAC_OSX)\n-    MakeSingleColorImage(img, colorbase);\n-#endif\n-    return img;\n-}\n-\n-QIcon SingleColorIcon(const QIcon& ico, const QColor& colorbase)\n-{\n-#if defined(WIN32) || defined(MAC_OSX)\n-    return ico;\n-#else\n-    QIcon new_ico;\n-    QSize sz;\n-    Q_FOREACH(sz, ico.availableSizes())\n-    {\n-        QImage img(ico.pixmap(sz).toImage());\n-        MakeSingleColorImage(img, colorbase);\n-        new_ico.addPixmap(QPixmap::fromImage(img));\n-    }\n-    return new_ico;\n-#endif\n-}\n-\n-QIcon SingleColorIcon(const QString& filename, const QColor& colorbase)\n-{\n-    return QIcon(QPixmap::fromImage(SingleColorImage(filename, colorbase)));\n-}\n-\n-QColor SingleColor()\n-{\n-#if defined(WIN32) || defined(MAC_OSX)\n-    return QColor(0,0,0);\n-#else\n-    const QColor colorHighlightBg(QApplication::palette().color(QPalette::Highlight));\n-    const QColor colorHighlightFg(QApplication::palette().color(QPalette::HighlightedText));\n-    const QColor colorText(QApplication::palette().color(QPalette::WindowText));\n-    const int colorTextLightness = colorText.lightness();\n-    QColor colorbase;\n-    if (abs(colorHighlightBg.lightness() - colorTextLightness) < abs(colorHighlightFg.lightness() - colorTextLightness))\n-        colorbase = colorHighlightBg;\n-    else\n-        colorbase = colorHighlightFg;\n-    return colorbase;\n-#endif\n-}\n-\n-QIcon SingleColorIcon(const QString& filename)\n-{\n-    return SingleColorIcon(filename, SingleColor());\n-}\n-\n-static QColor TextColor()\n-{\n-    return QColor(QApplication::palette().color(QPalette::WindowText));\n-}\n-\n-QIcon TextColorIcon(const QString& filename)\n-{\n-    return SingleColorIcon(filename, TextColor());\n-}\n-\n-QIcon TextColorIcon(const QIcon& ico)\n-{\n-    return SingleColorIcon(ico, TextColor());\n-}"
      },
      {
        "sha": "1388069ddb4c2a8fd9ccb2102aecaf93f77281d0",
        "filename": "src/qt/scicon.h",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1369d699b6221818dc9ca72eb6c0cea30eeee914/src/qt/scicon.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1369d699b6221818dc9ca72eb6c0cea30eeee914/src/qt/scicon.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/scicon.h?ref=1369d699b6221818dc9ca72eb6c0cea30eeee914",
        "patch": "@@ -1,24 +0,0 @@\n-// Copyright (c) 2014 The Bitcoin developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_QT_SCICON_H\n-#define BITCOIN_QT_SCICON_H\n-\n-#include <QtCore>\n-\n-QT_BEGIN_NAMESPACE\n-class QColor;\n-class QIcon;\n-class QString;\n-QT_END_NAMESPACE\n-\n-QImage SingleColorImage(const QString& filename, const QColor&);\n-QIcon SingleColorIcon(const QIcon&, const QColor&);\n-QIcon SingleColorIcon(const QString& filename, const QColor&);\n-QColor SingleColor();\n-QIcon SingleColorIcon(const QString& filename);\n-QIcon TextColorIcon(const QIcon&);\n-QIcon TextColorIcon(const QString& filename);\n-\n-#endif // BITCOIN_QT_SCICON_H"
      },
      {
        "sha": "449a7bc5e8838af3347ef48968345a55d23df3f7",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 14,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -11,7 +11,7 @@\n #include \"coincontroldialog.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"sendcoinsentry.h\"\n #include \"walletmodel.h\"\n \n@@ -27,25 +27,26 @@\n #include <QSettings>\n #include <QTextDocument>\n \n-SendCoinsDialog::SendCoinsDialog(QWidget *parent) :\n+SendCoinsDialog::SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SendCoinsDialog),\n     clientModel(0),\n     model(0),\n     fNewRecipientAllowed(true),\n-    fFeeMinimized(true)\n+    fFeeMinimized(true),\n+    platformStyle(platformStyle)\n {\n     ui->setupUi(this);\n \n-#ifdef Q_OS_MAC // Icons on push buttons are very uncommon on Mac\n-    ui->addButton->setIcon(QIcon());\n-    ui->clearButton->setIcon(QIcon());\n-    ui->sendButton->setIcon(QIcon());\n-#else\n-    ui->addButton->setIcon(SingleColorIcon(\":/icons/add\"));\n-    ui->clearButton->setIcon(SingleColorIcon(\":/icons/remove\"));\n-    ui->sendButton->setIcon(SingleColorIcon(\":/icons/send\"));\n-#endif\n+    if (!platformStyle->getImagesOnButtons()) {\n+        ui->addButton->setIcon(QIcon());\n+        ui->clearButton->setIcon(QIcon());\n+        ui->sendButton->setIcon(QIcon());\n+    } else {\n+        ui->addButton->setIcon(platformStyle->SingleColorIcon(\":/icons/add\"));\n+        ui->clearButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+        ui->sendButton->setIcon(platformStyle->SingleColorIcon(\":/icons/send\"));\n+    }\n \n     GUIUtil::setupAddressWidget(ui->lineEditCoinControlChange, this);\n \n@@ -364,7 +365,7 @@ void SendCoinsDialog::accept()\n \n SendCoinsEntry *SendCoinsDialog::addEntry()\n {\n-    SendCoinsEntry *entry = new SendCoinsEntry(this);\n+    SendCoinsEntry *entry = new SendCoinsEntry(platformStyle, this);\n     entry->setModel(model);\n     ui->entries->addWidget(entry);\n     connect(entry, SIGNAL(removeEntry(SendCoinsEntry*)), this, SLOT(removeEntry(SendCoinsEntry*)));\n@@ -711,7 +712,7 @@ void SendCoinsDialog::coinControlFeatureChanged(bool checked)\n // Coin Control: button inputs -> show actual coin control dialog\n void SendCoinsDialog::coinControlButtonClicked()\n {\n-    CoinControlDialog dlg;\n+    CoinControlDialog dlg(platformStyle);\n     dlg.setModel(model);\n     dlg.exec();\n     coinControlUpdateLabels();"
      },
      {
        "sha": "391905ffcd7ac06d657f9af90a9efa5c56987d7c",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -12,6 +12,7 @@\n \n class ClientModel;\n class OptionsModel;\n+class PlatformStyle;\n class SendCoinsEntry;\n class SendCoinsRecipient;\n \n@@ -31,7 +32,7 @@ class SendCoinsDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit SendCoinsDialog(QWidget *parent = 0);\n+    explicit SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent = 0);\n     ~SendCoinsDialog();\n \n     void setClientModel(ClientModel *clientModel);\n@@ -60,6 +61,7 @@ public Q_SLOTS:\n     WalletModel *model;\n     bool fNewRecipientAllowed;\n     bool fFeeMinimized;\n+    const PlatformStyle *platformStyle;\n \n     // Process WalletModel::SendCoinsReturn and generate a pair consisting\n     // of a message and message flags for use in Q_EMIT message()."
      },
      {
        "sha": "44aa8ad1af22a7aad4e42dfd51969eefef5c84ff",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -9,30 +9,30 @@\n #include \"addresstablemodel.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"walletmodel.h\"\n \n #include <QApplication>\n #include <QClipboard>\n \n-SendCoinsEntry::SendCoinsEntry(QWidget *parent) :\n+SendCoinsEntry::SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *parent) :\n     QStackedWidget(parent),\n     ui(new Ui::SendCoinsEntry),\n-    model(0)\n+    model(0),\n+    platformStyle(platformStyle)\n {\n     ui->setupUi(this);\n \n-    ui->addressBookButton->setIcon(SingleColorIcon(\":/icons/address-book\"));\n-    ui->pasteButton->setIcon(SingleColorIcon(\":/icons/editpaste\"));\n-    ui->deleteButton->setIcon(SingleColorIcon(\":/icons/remove\"));\n-    ui->deleteButton_is->setIcon(SingleColorIcon(\":/icons/remove\"));\n-    ui->deleteButton_s->setIcon(SingleColorIcon(\":/icons/remove\"));\n+    ui->addressBookButton->setIcon(platformStyle->SingleColorIcon(\":/icons/address-book\"));\n+    ui->pasteButton->setIcon(platformStyle->SingleColorIcon(\":/icons/editpaste\"));\n+    ui->deleteButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+    ui->deleteButton_is->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+    ui->deleteButton_s->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n \n     setCurrentWidget(ui->SendCoins);\n \n-#ifdef Q_OS_MAC\n-    ui->payToLayout->setSpacing(4);\n-#endif\n+    if (platformStyle->getUseExtraSpacing())\n+        ui->payToLayout->setSpacing(4);\n #if QT_VERSION >= 0x040700\n     ui->addAsLabel->setPlaceholderText(tr(\"Enter a label for this address to add it to your address book\"));\n #endif\n@@ -65,7 +65,7 @@ void SendCoinsEntry::on_addressBookButton_clicked()\n {\n     if(!model)\n         return;\n-    AddressBookPage dlg(AddressBookPage::ForSelection, AddressBookPage::SendingTab, this);\n+    AddressBookPage dlg(platformStyle, AddressBookPage::ForSelection, AddressBookPage::SendingTab, this);\n     dlg.setModel(model->getAddressTableModel());\n     if(dlg.exec())\n     {"
      },
      {
        "sha": "107ab70158c504e7674ed07eeaecae813490f38b",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,6 +10,7 @@\n #include <QStackedWidget>\n \n class WalletModel;\n+class PlatformStyle;\n \n namespace Ui {\n     class SendCoinsEntry;\n@@ -25,7 +26,7 @@ class SendCoinsEntry : public QStackedWidget\n     Q_OBJECT\n \n public:\n-    explicit SendCoinsEntry(QWidget *parent = 0);\n+    explicit SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *parent = 0);\n     ~SendCoinsEntry();\n \n     void setModel(WalletModel *model);\n@@ -64,6 +65,7 @@ private Q_SLOTS:\n     SendCoinsRecipient recipient;\n     Ui::SendCoinsEntry *ui;\n     WalletModel *model;\n+    const PlatformStyle *platformStyle;\n \n     bool updateLabel(const QString &address);\n };"
      },
      {
        "sha": "60e8e36ebe7548867b1c5eb45ac47153f5371580",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -7,7 +7,7 @@\n \n #include \"addressbookpage.h\"\n #include \"guiutil.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"walletmodel.h\"\n \n #include \"base58.h\"\n@@ -20,21 +20,22 @@\n \n #include <QClipboard>\n \n-SignVerifyMessageDialog::SignVerifyMessageDialog(QWidget *parent) :\n+SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SignVerifyMessageDialog),\n-    model(0)\n+    model(0),\n+    platformStyle(platformStyle)\n {\n     ui->setupUi(this);\n \n-    ui->addressBookButton_SM->setIcon(SingleColorIcon(\":/icons/address-book\"));\n-    ui->pasteButton_SM->setIcon(SingleColorIcon(\":/icons/editpaste\"));\n-    ui->copySignatureButton_SM->setIcon(SingleColorIcon(\":/icons/editcopy\"));\n-    ui->signMessageButton_SM->setIcon(SingleColorIcon(\":/icons/edit\"));\n-    ui->clearButton_SM->setIcon(SingleColorIcon(\":/icons/remove\"));\n-    ui->addressBookButton_VM->setIcon(SingleColorIcon(\":/icons/address-book\"));\n-    ui->verifyMessageButton_VM->setIcon(SingleColorIcon(\":/icons/transaction_0\"));\n-    ui->clearButton_VM->setIcon(SingleColorIcon(\":/icons/remove\"));\n+    ui->addressBookButton_SM->setIcon(platformStyle->SingleColorIcon(\":/icons/address-book\"));\n+    ui->pasteButton_SM->setIcon(platformStyle->SingleColorIcon(\":/icons/editpaste\"));\n+    ui->copySignatureButton_SM->setIcon(platformStyle->SingleColorIcon(\":/icons/editcopy\"));\n+    ui->signMessageButton_SM->setIcon(platformStyle->SingleColorIcon(\":/icons/edit\"));\n+    ui->clearButton_SM->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+    ui->addressBookButton_VM->setIcon(platformStyle->SingleColorIcon(\":/icons/address-book\"));\n+    ui->verifyMessageButton_VM->setIcon(platformStyle->SingleColorIcon(\":/icons/transaction_0\"));\n+    ui->clearButton_VM->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n \n #if QT_VERSION >= 0x040700\n     ui->signatureOut_SM->setPlaceholderText(tr(\"Click \\\"Sign Message\\\" to generate signature\"));\n@@ -94,7 +95,7 @@ void SignVerifyMessageDialog::on_addressBookButton_SM_clicked()\n {\n     if (model && model->getAddressTableModel())\n     {\n-        AddressBookPage dlg(AddressBookPage::ForSelection, AddressBookPage::ReceivingTab, this);\n+        AddressBookPage dlg(platformStyle, AddressBookPage::ForSelection, AddressBookPage::ReceivingTab, this);\n         dlg.setModel(model->getAddressTableModel());\n         if (dlg.exec())\n         {\n@@ -185,7 +186,7 @@ void SignVerifyMessageDialog::on_addressBookButton_VM_clicked()\n {\n     if (model && model->getAddressTableModel())\n     {\n-        AddressBookPage dlg(AddressBookPage::ForSelection, AddressBookPage::SendingTab, this);\n+        AddressBookPage dlg(platformStyle, AddressBookPage::ForSelection, AddressBookPage::SendingTab, this);\n         dlg.setModel(model->getAddressTableModel());\n         if (dlg.exec())\n         {"
      },
      {
        "sha": "d651d5049b5035dfcfee0e96b1d54148a6e43357",
        "filename": "src/qt/signverifymessagedialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/signverifymessagedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/signverifymessagedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <QDialog>\n \n+class PlatformStyle;\n class WalletModel;\n \n namespace Ui {\n@@ -18,7 +19,7 @@ class SignVerifyMessageDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit SignVerifyMessageDialog(QWidget *parent);\n+    explicit SignVerifyMessageDialog(const PlatformStyle *platformStyle, QWidget *parent);\n     ~SignVerifyMessageDialog();\n \n     void setModel(WalletModel *model);\n@@ -34,6 +35,7 @@ class SignVerifyMessageDialog : public QDialog\n private:\n     Ui::SignVerifyMessageDialog *ui;\n     WalletModel *model;\n+    const PlatformStyle *platformStyle;\n \n private Q_SLOTS:\n     /* sign message */"
      },
      {
        "sha": "98ad1a44b68fac46ac109e223a49d9dbc23bafe2",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -8,7 +8,7 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"transactiondesc.h\"\n #include \"transactionrecord.h\"\n #include \"walletmodel.h\"\n@@ -222,12 +222,13 @@ class TransactionTablePriv\n     }\n };\n \n-TransactionTableModel::TransactionTableModel(CWallet* wallet, WalletModel *parent):\n+TransactionTableModel::TransactionTableModel(const PlatformStyle *platformStyle, CWallet* wallet, WalletModel *parent):\n         QAbstractTableModel(parent),\n         wallet(wallet),\n         walletModel(parent),\n         priv(new TransactionTablePriv(wallet, this)),\n-        fProcessingQueuedTransactions(false)\n+        fProcessingQueuedTransactions(false),\n+        platformStyle(platformStyle)\n {\n     columns << QString() << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Label\") << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n     priv->refreshWallet();\n@@ -521,7 +522,7 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n     case Qt::DecorationRole:\n     {\n         QIcon icon = qvariant_cast<QIcon>(index.data(RawDecorationRole));\n-        return TextColorIcon(icon);\n+        return platformStyle->TextColorIcon(icon);\n     }\n     case Qt::DisplayRole:\n         switch(index.column())"
      },
      {
        "sha": "2089f703a66af616145a9e73e1c8d129d7466449",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,6 +10,7 @@\n #include <QAbstractTableModel>\n #include <QStringList>\n \n+class PlatformStyle;\n class TransactionRecord;\n class TransactionTablePriv;\n class WalletModel;\n@@ -23,7 +24,7 @@ class TransactionTableModel : public QAbstractTableModel\n     Q_OBJECT\n \n public:\n-    explicit TransactionTableModel(CWallet* wallet, WalletModel *parent = 0);\n+    explicit TransactionTableModel(const PlatformStyle *platformStyle, CWallet* wallet, WalletModel *parent = 0);\n     ~TransactionTableModel();\n \n     enum ColumnIndex {\n@@ -82,6 +83,7 @@ class TransactionTableModel : public QAbstractTableModel\n     QStringList columns;\n     TransactionTablePriv *priv;\n     bool fProcessingQueuedTransactions;\n+    const PlatformStyle *platformStyle;\n \n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();"
      },
      {
        "sha": "54e5a82720336cf47346f3eed8f34a8914fc8915",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 31,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,7 +10,7 @@\n #include \"editaddressdialog.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"scicon.h\"\n+#include \"platformstyle.h\"\n #include \"transactiondescdialog.h\"\n #include \"transactionfilterproxy.h\"\n #include \"transactionrecord.h\"\n@@ -35,7 +35,7 @@\n #include <QUrl>\n #include <QVBoxLayout>\n \n-TransactionView::TransactionView(QWidget *parent) :\n+TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent), model(0), transactionProxyModel(0),\n     transactionView(0)\n {\n@@ -44,27 +44,28 @@ TransactionView::TransactionView(QWidget *parent) :\n \n     QHBoxLayout *hlayout = new QHBoxLayout();\n     hlayout->setContentsMargins(0,0,0,0);\n-#ifdef Q_OS_MAC\n-    hlayout->setSpacing(5);\n-    hlayout->addSpacing(26);\n-#else\n-    hlayout->setSpacing(0);\n-    hlayout->addSpacing(23);\n-#endif\n+\n+    if (platformStyle->getUseExtraSpacing()) {\n+        hlayout->setSpacing(5);\n+        hlayout->addSpacing(26);\n+    } else {\n+        hlayout->setSpacing(0);\n+        hlayout->addSpacing(23);\n+    }\n \n     watchOnlyWidget = new QComboBox(this);\n     watchOnlyWidget->setFixedWidth(24);\n     watchOnlyWidget->addItem(\"\", TransactionFilterProxy::WatchOnlyFilter_All);\n-    watchOnlyWidget->addItem(SingleColorIcon(\":/icons/eye_plus\"), \"\", TransactionFilterProxy::WatchOnlyFilter_Yes);\n-    watchOnlyWidget->addItem(SingleColorIcon(\":/icons/eye_minus\"), \"\", TransactionFilterProxy::WatchOnlyFilter_No);\n+    watchOnlyWidget->addItem(platformStyle->SingleColorIcon(\":/icons/eye_plus\"), \"\", TransactionFilterProxy::WatchOnlyFilter_Yes);\n+    watchOnlyWidget->addItem(platformStyle->SingleColorIcon(\":/icons/eye_minus\"), \"\", TransactionFilterProxy::WatchOnlyFilter_No);\n     hlayout->addWidget(watchOnlyWidget);\n \n     dateWidget = new QComboBox(this);\n-#ifdef Q_OS_MAC\n-    dateWidget->setFixedWidth(121);\n-#else\n-    dateWidget->setFixedWidth(120);\n-#endif\n+    if (platformStyle->getUseExtraSpacing()) {\n+        dateWidget->setFixedWidth(121);\n+    } else {\n+        dateWidget->setFixedWidth(120);\n+    }\n     dateWidget->addItem(tr(\"All\"), All);\n     dateWidget->addItem(tr(\"Today\"), Today);\n     dateWidget->addItem(tr(\"This week\"), ThisWeek);\n@@ -75,11 +76,11 @@ TransactionView::TransactionView(QWidget *parent) :\n     hlayout->addWidget(dateWidget);\n \n     typeWidget = new QComboBox(this);\n-#ifdef Q_OS_MAC\n-    typeWidget->setFixedWidth(121);\n-#else\n-    typeWidget->setFixedWidth(120);\n-#endif\n+    if (platformStyle->getUseExtraSpacing()) {\n+        typeWidget->setFixedWidth(121);\n+    } else {\n+        typeWidget->setFixedWidth(120);\n+    }\n \n     typeWidget->addItem(tr(\"All\"), TransactionFilterProxy::ALL_TYPES);\n     typeWidget->addItem(tr(\"Received with\"), TransactionFilterProxy::TYPE(TransactionRecord::RecvWithAddress) |\n@@ -102,11 +103,11 @@ TransactionView::TransactionView(QWidget *parent) :\n #if QT_VERSION >= 0x040700\n     amountWidget->setPlaceholderText(tr(\"Min amount\"));\n #endif\n-#ifdef Q_OS_MAC\n-    amountWidget->setFixedWidth(97);\n-#else\n-    amountWidget->setFixedWidth(100);\n-#endif\n+    if (platformStyle->getUseExtraSpacing()) {\n+        amountWidget->setFixedWidth(97);\n+    } else {\n+        amountWidget->setFixedWidth(100);\n+    }\n     amountWidget->setValidator(new QDoubleValidator(0, 1e20, 8, this));\n     hlayout->addWidget(amountWidget);\n \n@@ -121,11 +122,11 @@ TransactionView::TransactionView(QWidget *parent) :\n     vlayout->setSpacing(0);\n     int width = view->verticalScrollBar()->sizeHint().width();\n     // Cover scroll bar width with spacing\n-#ifdef Q_OS_MAC\n-    hlayout->addSpacing(width+2);\n-#else\n-    hlayout->addSpacing(width);\n-#endif\n+    if (platformStyle->getUseExtraSpacing()) {\n+        hlayout->addSpacing(width+2);\n+    } else {\n+        hlayout->addSpacing(width);\n+    }\n     // Always show scroll bar\n     view->setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\n     view->setTabKeyNavigation(false);"
      },
      {
        "sha": "ac157fb98d86cbbe5199c1daba02241ea11b5b2d",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,6 +10,7 @@\n #include <QWidget>\n #include <QKeyEvent>\n \n+class PlatformStyle;\n class TransactionFilterProxy;\n class WalletModel;\n \n@@ -32,7 +33,7 @@ class TransactionView : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit TransactionView(QWidget *parent = 0);\n+    explicit TransactionView(const PlatformStyle *platformStyle, QWidget *parent = 0);\n \n     void setModel(WalletModel *model);\n "
      },
      {
        "sha": "ba8c28464d7f5654b61dd2f790b915cd60a9dee9",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -12,9 +12,10 @@\n #include <QHBoxLayout>\n #include <QLabel>\n \n-WalletFrame::WalletFrame(BitcoinGUI *_gui) :\n+WalletFrame::WalletFrame(const PlatformStyle *platformStyle, BitcoinGUI *_gui) :\n     QFrame(_gui),\n-    gui(_gui)\n+    gui(_gui),\n+    platformStyle(platformStyle)\n {\n     // Leave HBox hook for adding a list view later\n     QHBoxLayout *walletFrameLayout = new QHBoxLayout(this);\n@@ -42,7 +43,7 @@ bool WalletFrame::addWallet(const QString& name, WalletModel *walletModel)\n     if (!gui || !clientModel || !walletModel || mapWalletViews.count(name) > 0)\n         return false;\n \n-    WalletView *walletView = new WalletView(this);\n+    WalletView *walletView = new WalletView(platformStyle, this);\n     walletView->setBitcoinGUI(gui);\n     walletView->setClientModel(clientModel);\n     walletView->setWalletModel(walletModel);"
      },
      {
        "sha": "9a56e97f9cfe9eb5c0e557d5189fda98c0949622",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -10,6 +10,7 @@\n \n class BitcoinGUI;\n class ClientModel;\n+class PlatformStyle;\n class SendCoinsRecipient;\n class WalletModel;\n class WalletView;\n@@ -23,7 +24,7 @@ class WalletFrame : public QFrame\n     Q_OBJECT\n \n public:\n-    explicit WalletFrame(BitcoinGUI *_gui = 0);\n+    explicit WalletFrame(const PlatformStyle *platformStyle, BitcoinGUI *_gui = 0);\n     ~WalletFrame();\n \n     void setClientModel(ClientModel *clientModel);\n@@ -45,6 +46,8 @@ class WalletFrame : public QFrame\n \n     bool bOutOfSync;\n \n+    const PlatformStyle *platformStyle;\n+\n     WalletView *currentWalletView();\n \n public Q_SLOTS:"
      },
      {
        "sha": "f580853732cb76d3bf022ba316d11026c6c7a5a4",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -27,7 +27,7 @@\n \n #include <boost/foreach.hpp>\n \n-WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n+WalletModel::WalletModel(const PlatformStyle *platformStyle, CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n     transactionTableModel(0),\n     recentRequestsTableModel(0),\n@@ -39,7 +39,7 @@ WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *p\n     fForceCheckBalanceChanged = false;\n \n     addressTableModel = new AddressTableModel(wallet, this);\n-    transactionTableModel = new TransactionTableModel(wallet, this);\n+    transactionTableModel = new TransactionTableModel(platformStyle, wallet, this);\n     recentRequestsTableModel = new RecentRequestsTableModel(wallet, this);\n \n     // This timer will be fired repeatedly to update the balance"
      },
      {
        "sha": "c29682e4f67a21c89525990960bb060530829219",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -17,6 +17,7 @@\n \n class AddressTableModel;\n class OptionsModel;\n+class PlatformStyle;\n class RecentRequestsTableModel;\n class TransactionTableModel;\n class WalletModelTransaction;\n@@ -100,7 +101,7 @@ class WalletModel : public QObject\n     Q_OBJECT\n \n public:\n-    explicit WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent = 0);\n+    explicit WalletModel(const PlatformStyle *platformStyle, CWallet *wallet, OptionsModel *optionsModel, QObject *parent = 0);\n     ~WalletModel();\n \n     enum StatusCode // Returned by sendCoins"
      },
      {
        "sha": "fa96f62e033e17bfe76fd64bd76cb352a0e64c0f",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 14,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -11,8 +11,8 @@\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n #include \"overviewpage.h\"\n+#include \"platformstyle.h\"\n #include \"receivecoinsdialog.h\"\n-#include \"scicon.h\"\n #include \"sendcoinsdialog.h\"\n #include \"signverifymessagedialog.h\"\n #include \"transactiontablemodel.h\"\n@@ -29,31 +29,32 @@\n #include <QPushButton>\n #include <QVBoxLayout>\n \n-WalletView::WalletView(QWidget *parent):\n+WalletView::WalletView(const PlatformStyle *platformStyle, QWidget *parent):\n     QStackedWidget(parent),\n     clientModel(0),\n-    walletModel(0)\n+    walletModel(0),\n+    platformStyle(platformStyle)\n {\n     // Create tabs\n-    overviewPage = new OverviewPage();\n+    overviewPage = new OverviewPage(platformStyle);\n \n     transactionsPage = new QWidget(this);\n     QVBoxLayout *vbox = new QVBoxLayout();\n     QHBoxLayout *hbox_buttons = new QHBoxLayout();\n-    transactionView = new TransactionView(this);\n+    transactionView = new TransactionView(platformStyle, this);\n     vbox->addWidget(transactionView);\n     QPushButton *exportButton = new QPushButton(tr(\"&Export\"), this);\n     exportButton->setToolTip(tr(\"Export the data in the current tab to a file\"));\n-#ifndef Q_OS_MAC // Icons on push buttons are very uncommon on Mac\n-    exportButton->setIcon(SingleColorIcon(\":/icons/export\"));\n-#endif\n+    if (platformStyle->getImagesOnButtons()) {\n+        exportButton->setIcon(platformStyle->SingleColorIcon(\":/icons/export\"));\n+    }\n     hbox_buttons->addStretch();\n     hbox_buttons->addWidget(exportButton);\n     vbox->addLayout(hbox_buttons);\n     transactionsPage->setLayout(vbox);\n \n-    receiveCoinsPage = new ReceiveCoinsDialog();\n-    sendCoinsPage = new SendCoinsDialog();\n+    receiveCoinsPage = new ReceiveCoinsDialog(platformStyle);\n+    sendCoinsPage = new SendCoinsDialog(platformStyle);\n \n     addWidget(overviewPage);\n     addWidget(transactionsPage);\n@@ -182,7 +183,7 @@ void WalletView::gotoSendCoinsPage(QString addr)\n void WalletView::gotoSignMessageTab(QString addr)\n {\n     // calls show() in showTab_SM()\n-    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(this);\n+    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(platformStyle, this);\n     signVerifyMessageDialog->setAttribute(Qt::WA_DeleteOnClose);\n     signVerifyMessageDialog->setModel(walletModel);\n     signVerifyMessageDialog->showTab_SM(true);\n@@ -194,7 +195,7 @@ void WalletView::gotoSignMessageTab(QString addr)\n void WalletView::gotoVerifyMessageTab(QString addr)\n {\n     // calls show() in showTab_VM()\n-    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(this);\n+    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(platformStyle, this);\n     signVerifyMessageDialog->setAttribute(Qt::WA_DeleteOnClose);\n     signVerifyMessageDialog->setModel(walletModel);\n     signVerifyMessageDialog->showTab_VM(true);\n@@ -272,7 +273,7 @@ void WalletView::usedSendingAddresses()\n {\n     if(!walletModel)\n         return;\n-    AddressBookPage *dlg = new AddressBookPage(AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n+    AddressBookPage *dlg = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n     dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();\n@@ -282,7 +283,7 @@ void WalletView::usedReceivingAddresses()\n {\n     if(!walletModel)\n         return;\n-    AddressBookPage *dlg = new AddressBookPage(AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n+    AddressBookPage *dlg = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n     dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();"
      },
      {
        "sha": "f97cf1ee807778c01eed5c8176a287190be191cd",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=eec77574459dcbd8d59d8dbd35125eb1e3ec1a2e",
        "patch": "@@ -12,6 +12,7 @@\n class BitcoinGUI;\n class ClientModel;\n class OverviewPage;\n+class PlatformStyle;\n class ReceiveCoinsDialog;\n class SendCoinsDialog;\n class SendCoinsRecipient;\n@@ -34,7 +35,7 @@ class WalletView : public QStackedWidget\n     Q_OBJECT\n \n public:\n-    explicit WalletView(QWidget *parent);\n+    explicit WalletView(const PlatformStyle *platformStyle, QWidget *parent);\n     ~WalletView();\n \n     void setBitcoinGUI(BitcoinGUI *gui);\n@@ -64,6 +65,7 @@ class WalletView : public QStackedWidget\n     TransactionView *transactionView;\n \n     QProgressDialog *progressDialog;\n+    const PlatformStyle *platformStyle;\n \n public Q_SLOTS:\n     /** Switch to overview (home) page */"
      }
    ]
  }
]