[
  {
    "sha": "60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGM4MzVkMzk3YjVmZTY2OGY3ZjVjMDJiOGVhNjFiM2M2YmI0NDlj",
    "commit": {
      "author": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T19:37:35Z"
      },
      "committer": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T19:58:41Z"
      },
      "message": "Add BIP8 height parameters",
      "tree": {
        "sha": "e50e4164dfa76092c0bb436e7b790d9f2644716c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e50e4164dfa76092c0bb436e7b790d9f2644716c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/comments",
    "author": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6dbcc74a0e0a7d45d20b03bb4eb41a027397a21d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dbcc74a0e0a7d45d20b03bb4eb41a027397a21d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbcc74a0e0a7d45d20b03bb4eb41a027397a21d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8541921493e3e7e8ffa3841dee93285797726177",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
        "patch": "@@ -28,9 +28,13 @@ struct BIP9Deployment {\n     /** Bit position to select the particular bit in nVersion. */\n     int bit;\n     /** Start MedianTime for version bits miner confirmation. Can be a date in the past */\n-    int64_t nStartTime;\n+    int64_t nStartTime = 0;\n     /** Timeout/expiry MedianTime for the deployment attempt. */\n-    int64_t nTimeout;\n+    int64_t nTimeout = 0;\n+    /** Start block height for version bits miner confirmation. Should be a retarget block, can be in the past */\n+    int64_t nStartHeight = 0;\n+    /** Timeout/expiry block height for the deployment attempt. Should be a retarget block. */\n+    int64_t nTimeoutHeight = 0;\n };\n \n /**"
      },
      {
        "sha": "797240ddb98c6ec3474cce1400da2ab67acd6ea0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
        "patch": "@@ -1570,6 +1570,8 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n \n     int64_t BeginTime(const Consensus::Params& params) const override { return 0; }\n     int64_t EndTime(const Consensus::Params& params) const override { return std::numeric_limits<int64_t>::max(); }\n+    int64_t BeginHeight(const Consensus::Params& params) const override { return 0; }\n+    int64_t EndHeight(const Consensus::Params& params) const override { return std::numeric_limits<int64_t>::max(); }\n     int Period(const Consensus::Params& params) const override { return params.nMinerConfirmationWindow; }\n     int Threshold(const Consensus::Params& params) const override { return params.nRuleChangeActivationThreshold; }\n "
      },
      {
        "sha": "ee287d1a99d73c0fe900ea368d789f81b21e92f3",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
        "patch": "@@ -176,6 +176,8 @@ class VersionBitsConditionChecker : public AbstractThresholdConditionChecker {\n protected:\n     int64_t BeginTime(const Consensus::Params& params) const override { return params.vDeployments[id].nStartTime; }\n     int64_t EndTime(const Consensus::Params& params) const override { return params.vDeployments[id].nTimeout; }\n+    int64_t BeginHeight(const Consensus::Params& params) const override { return params.vDeployments[id].nStartHeight; }\n+    int64_t EndHeight(const Consensus::Params& params) const override { return params.vDeployments[id].nTimeoutHeight; }\n     int Period(const Consensus::Params& params) const override { return params.nMinerConfirmationWindow; }\n     int Threshold(const Consensus::Params& params) const override { return params.nRuleChangeActivationThreshold; }\n "
      },
      {
        "sha": "166ff2a394c0ad8f844de3e7e5d231df03d8192b",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
        "patch": "@@ -55,6 +55,8 @@ class AbstractThresholdConditionChecker {\n     virtual bool Condition(const CBlockIndex* pindex, const Consensus::Params& params) const =0;\n     virtual int64_t BeginTime(const Consensus::Params& params) const =0;\n     virtual int64_t EndTime(const Consensus::Params& params) const =0;\n+    virtual int64_t BeginHeight(const Consensus::Params& params) const =0;\n+    virtual int64_t EndHeight(const Consensus::Params& params) const =0;\n     virtual int Period(const Consensus::Params& params) const =0;\n     virtual int Threshold(const Consensus::Params& params) const =0;\n "
      }
    ]
  },
  {
    "sha": "affa1024396216fd25309fe2791e5aff8c25ba2d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmZhMTAyNDM5NjIxNmZkMjUzMDlmZTI3OTFlNWFmZjhjMjViYTJk",
    "commit": {
      "author": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T19:38:00Z"
      },
      "committer": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T20:06:02Z"
      },
      "message": "Main BIP8 implmentation",
      "tree": {
        "sha": "cd20efcd0ae7290de6c039d1dcb48df16ef85045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd20efcd0ae7290de6c039d1dcb48df16ef85045"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/affa1024396216fd25309fe2791e5aff8c25ba2d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/affa1024396216fd25309fe2791e5aff8c25ba2d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/affa1024396216fd25309fe2791e5aff8c25ba2d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/affa1024396216fd25309fe2791e5aff8c25ba2d/comments",
    "author": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60c835d397b5fe668f7f5c02b8ea61b3c6bb449c"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9da3c3ed9e989eb37f10d2aef2b226d0f1cbd734",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/affa1024396216fd25309fe2791e5aff8c25ba2d/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/affa1024396216fd25309fe2791e5aff8c25ba2d/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=affa1024396216fd25309fe2791e5aff8c25ba2d",
        "patch": "@@ -26,6 +26,9 @@ ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex*\n     int nThreshold = Threshold(params);\n     int64_t nTimeStart = BeginTime(params);\n     int64_t nTimeTimeout = EndTime(params);\n+    int64_t nHeightStart = BeginHeight(params);\n+    int64_t nHeightTimeout = EndHeight(params);\n+    bool fHeightBased = (nTimeStart == 0 && nTimeTimeout == 0) ? true : false;\n \n     // A block's state is always the same as that of the first of its period, so it is computed based on a pindexPrev whose height equals a multiple of nPeriod - 1.\n     if (pindexPrev != NULL) {\n@@ -40,7 +43,8 @@ ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex*\n             cache[pindexPrev] = THRESHOLD_DEFINED;\n             break;\n         }\n-        if (pindexPrev->GetMedianTimePast() < nTimeStart) {\n+        if ((fHeightBased && (pindexPrev->nHeight + 1) < nHeightStart) ||\n+            (!fHeightBased && pindexPrev->GetMedianTimePast() < nTimeStart)) {\n             // Optimization: don't recompute down further, as we know every earlier block will be before the start time\n             cache[pindexPrev] = THRESHOLD_DEFINED;\n             break;\n@@ -61,16 +65,19 @@ ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex*\n \n         switch (state) {\n             case THRESHOLD_DEFINED: {\n-                if (pindexPrev->GetMedianTimePast() >= nTimeTimeout) {\n+                if ((fHeightBased && (pindexPrev->nHeight + 1) >= nHeightTimeout) ||\n+                    (!fHeightBased && pindexPrev->GetMedianTimePast() >= nTimeTimeout)) {\n                     stateNext = THRESHOLD_FAILED;\n-                } else if (pindexPrev->GetMedianTimePast() >= nTimeStart) {\n+                } else if ((fHeightBased && (pindexPrev->nHeight + 1) >= nHeightStart) ||\n+                           (!fHeightBased && pindexPrev->GetMedianTimePast() >= nTimeStart)) {\n                     stateNext = THRESHOLD_STARTED;\n                 }\n                 break;\n             }\n             case THRESHOLD_STARTED: {\n-                if (pindexPrev->GetMedianTimePast() >= nTimeTimeout) {\n-                    stateNext = THRESHOLD_FAILED;\n+                if ((fHeightBased && (pindexPrev->nHeight + 1) >= nHeightTimeout) ||\n+                    (!fHeightBased && pindexPrev->GetMedianTimePast() >= nTimeTimeout)) {\n+                    stateNext = (fHeightBased == true) ? THRESHOLD_LOCKED_IN : THRESHOLD_FAILED;\n                     break;\n                 }\n                 // We need to count"
      }
    ]
  },
  {
    "sha": "747db77480c50e4f5f31ae9d2463c9b638b314df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDdkYjc3NDgwYzUwZTRmNWYzMWFlOWQyNDYzYzliNjM4YjMxNGRm",
    "commit": {
      "author": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T19:45:08Z"
      },
      "committer": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T20:06:02Z"
      },
      "message": "Add add tests for BIP8",
      "tree": {
        "sha": "6ec5e8ad4951a0bdd8e13481fd562aa24f127d31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ec5e8ad4951a0bdd8e13481fd562aa24f127d31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/747db77480c50e4f5f31ae9d2463c9b638b314df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747db77480c50e4f5f31ae9d2463c9b638b314df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/747db77480c50e4f5f31ae9d2463c9b638b314df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747db77480c50e4f5f31ae9d2463c9b638b314df/comments",
    "author": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "affa1024396216fd25309fe2791e5aff8c25ba2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/affa1024396216fd25309fe2791e5aff8c25ba2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/affa1024396216fd25309fe2791e5aff8c25ba2d"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 43,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6e9194215e2877c8175ce1ae7c71379b709eadb4",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/747db77480c50e4f5f31ae9d2463c9b638b314df/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/747db77480c50e4f5f31ae9d2463c9b638b314df/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=747db77480c50e4f5f31ae9d2463c9b638b314df",
        "patch": "@@ -20,13 +20,21 @@ class TestConditionChecker : public AbstractThresholdConditionChecker\n {\n private:\n     mutable ThresholdConditionCache cache;\n+    bool height_based = false;\n+    int64_t height_start = 0;\n+    int64_t height_timeout = 0;\n \n public:\n-    int64_t BeginTime(const Consensus::Params& params) const override { return TestTime(10000); }\n-    int64_t EndTime(const Consensus::Params& params) const override { return TestTime(20000); }\n+    int64_t BeginTime(const Consensus::Params& params) const override { return this->height_based ? 0 : TestTime(10000); }\n+    int64_t EndTime(const Consensus::Params& params) const override { return this->height_based ? 0 : TestTime(20000); }\n+    int64_t BeginHeight(const Consensus::Params& params) const override { return this->height_start; }\n+    int64_t EndHeight(const Consensus::Params& params) const override { return this->height_timeout; }\n     int Period(const Consensus::Params& params) const override { return 1000; }\n     int Threshold(const Consensus::Params& params) const override { return 900; }\n     bool Condition(const CBlockIndex* pindex, const Consensus::Params& params) const override { return (pindex->nVersion & 0x100); }\n+    void SetHeightBased(int64_t flag) { this->height_based = flag; }\n+    void SetHeightStart(int64_t n) { this->height_start = n; }\n+    void SetHeightTimeout(int64_t n) { this->height_timeout = n; }\n \n     ThresholdState GetStateFor(const CBlockIndex* pindexPrev) const { return AbstractThresholdConditionChecker::GetStateFor(pindexPrev, paramsDummy, cache); }\n     int GetStateSinceHeightFor(const CBlockIndex* pindexPrev) const { return AbstractThresholdConditionChecker::GetStateSinceHeightFor(pindexPrev, paramsDummy, cache); }\n@@ -50,6 +58,15 @@ class VersionBitsTester\n public:\n     VersionBitsTester() : num(0) {}\n \n+    VersionBitsTester& SetCheckerHeightBasedTest(bool flag, int64_t height_start, int64_t height_timeout) {\n+        for (unsigned int  i = 0; i < CHECKERS; i++) {\n+            checker[i].SetHeightBased(flag);\n+            checker[i].SetHeightStart(height_start);\n+            checker[i].SetHeightTimeout(height_timeout);\n+        }\n+        return *this;\n+    }\n+\n     VersionBitsTester& Reset() {\n         for (unsigned int i = 0; i < vpblock.size(); i++) {\n             delete vpblock[i];\n@@ -204,7 +221,30 @@ BOOST_AUTO_TEST_CASE(versionbits_test)\n                            .Mine(4000, TestTime(10000), 0).TestStarted().TestStateSinceHeight(3000)\n                            .Mine(5000, TestTime(10000), 0).TestStarted().TestStateSinceHeight(3000)\n                            .Mine(6000, TestTime(20000), 0).TestFailed().TestStateSinceHeight(6000)\n-                           .Mine(7000, TestTime(20000), 0x100).TestFailed().TestStateSinceHeight(6000);\n+                           .Mine(7000, TestTime(20000), 0x100).TestFailed().TestStateSinceHeight(6000)\n+\n+        // DEFINED -> STARTED -> LOCKEDIN -> ACTIVE (mandatory lockin)\n+                           .Reset().SetCheckerHeightBasedTest(true, 2000, 4000).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(999, TestTime(999), 0).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(1000, TestTime(1000), 0).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(2000, TestTime(10000), 0).TestStarted().TestStateSinceHeight(2000)\n+                           .Mine(4000, TestTime(10001), 0).TestLockedIn().TestStateSinceHeight(4000)\n+                           .Mine(5000, TestTime(10002), 0).TestActive().TestStateSinceHeight(5000)\n+                           .Mine(7000, TestTime(20000), 0x100).TestActive().TestStateSinceHeight(5000)\n+\n+        // DEFINED -> STARTED -> LOCKEDIN -> ACTIVE (mandatory lockin but activation by signalling)\n+                           .Reset().SetCheckerHeightBasedTest(true, 3000, 10000).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(1, TestTime(1), 0x200).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(1000, TestTime(9999) - 1, 0x200).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(2000, TestTime(10000), 0x101).TestDefined().TestStateSinceHeight(0)\n+                           .Mine(3000, TestTime(10010), 0x200).TestStarted().TestStateSinceHeight(3000)\n+                           .Mine(3050, TestTime(10020), 0x200).TestStarted().TestStateSinceHeight(3000) // 50 old blocks\n+                           .Mine(3950, TestTime(11999), 0x100).TestStarted().TestStateSinceHeight(3000) // 900 new blocks\n+                           .Mine(3999, TestTime(12000), 0x200).TestStarted().TestStateSinceHeight(3000) // 49 old blocks\n+                           .Mine(4000, TestTime(12500), 0x200).TestLockedIn().TestStateSinceHeight(4000) // 1 old block\n+                           .Mine(4999, TestTime(13000), 0).TestLockedIn().TestStateSinceHeight(4000)\n+                           .Mine(5000, TestTime(13001), 0).TestActive().TestStateSinceHeight(5000)\n+        ;\n     }\n \n     // Sanity checks of version bit deployments"
      }
    ]
  },
  {
    "sha": "64f63e729a95442337c27f704461cadfb4c7231a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NGY2M2U3MjlhOTU0NDIzMzdjMjdmNzA0NDYxY2FkZmI0YzcyMzFh",
    "commit": {
      "author": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T19:31:37Z"
      },
      "committer": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T20:06:02Z"
      },
      "message": "Add param override regtest and BIP8",
      "tree": {
        "sha": "b087a3b77b43b2caed5dcdcc099dd0229a117bbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b087a3b77b43b2caed5dcdcc099dd0229a117bbd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64f63e729a95442337c27f704461cadfb4c7231a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64f63e729a95442337c27f704461cadfb4c7231a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64f63e729a95442337c27f704461cadfb4c7231a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64f63e729a95442337c27f704461cadfb4c7231a/comments",
    "author": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "747db77480c50e4f5f31ae9d2463c9b638b314df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747db77480c50e4f5f31ae9d2463c9b638b314df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/747db77480c50e4f5f31ae9d2463c9b638b314df"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 19,
      "deletions": 12
    },
    "files": [
      {
        "sha": "fdd983683a680eace5ae6eac12881c4dc9114255",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64f63e729a95442337c27f704461cadfb4c7231a/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64f63e729a95442337c27f704461cadfb4c7231a/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=64f63e729a95442337c27f704461cadfb4c7231a",
        "patch": "@@ -53,10 +53,12 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n-void CChainParams::UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void CChainParams::UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout, int64_t nStartHeight, int64_t nTimeoutHeight)\n {\n     consensus.vDeployments[d].nStartTime = nStartTime;\n     consensus.vDeployments[d].nTimeout = nTimeout;\n+    consensus.vDeployments[d].nStartHeight = nStartHeight;\n+    consensus.vDeployments[d].nTimeoutHeight = nTimeoutHeight;\n }\n \n /**\n@@ -357,7 +359,7 @@ void SelectParams(const std::string& network)\n     globalChainParams = CreateChainParams(network);\n }\n \n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout, int64_t nStartHeight, int64_t nTimeoutHeight)\n {\n-    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n+    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout, nStartHeight, nTimeoutHeight);\n }"
      },
      {
        "sha": "b5465d3e8fd25c96d612faa9f18e1a189802a89b",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64f63e729a95442337c27f704461cadfb4c7231a/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64f63e729a95442337c27f704461cadfb4c7231a/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=64f63e729a95442337c27f704461cadfb4c7231a",
        "patch": "@@ -76,7 +76,7 @@ class CChainParams\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n     const ChainTxData& TxData() const { return chainTxData; }\n-    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout, int64_t nStartHeight, int64_t nTimeoutHeight);\n protected:\n     CChainParams() {}\n \n@@ -118,6 +118,6 @@ void SelectParams(const std::string& chain);\n /**\n  * Allows modifying the Version Bits regtest parameters.\n  */\n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n+void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout, int64_t nStartHeight, int64_t nTimeoutHeight);\n \n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "714799eca50c489ba7c56c8897ec42fb7177a091",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64f63e729a95442337c27f704461cadfb4c7231a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64f63e729a95442337c27f704461cadfb4c7231a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=64f63e729a95442337c27f704461cadfb4c7231a",
        "patch": "@@ -1091,21 +1091,26 @@ bool AppInitParameterInteraction()\n         for (const std::string& strDeployment : gArgs.GetArgs(\"-vbparams\")) {\n             std::vector<std::string> vDeploymentParams;\n             boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n-            if (vDeploymentParams.size() != 3) {\n-                return InitError(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            if (vDeploymentParams.size() != 5) {\n+                return InitError(\"Version bits parameters malformed, expecting deployment:timestart:timeend:heighstart:heightend\");\n             }\n-            int64_t nStartTime, nTimeout;\n+            int64_t nStartTime, nTimeout, nStartHeight, nTimeoutHeight;\n             if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n                 return InitError(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n             }\n             if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n                 return InitError(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n             }\n-            bool found = false;\n+            if (!ParseInt64(vDeploymentParams[3], &nStartHeight)) {\n+                return InitError(strprintf(\"Invalid nStartHeight (%s)\", vDeploymentParams[3]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[4], &nTimeoutHeight)) {\n+                return InitError(strprintf(\"Invalid nTimeoutHeight (%s)\", vDeploymentParams[4]));\n+            }            bool found = false;\n             for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n             {\n                 if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n-                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout, nStartHeight, nTimeoutHeight);\n                     found = true;\n                     LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n                     break;"
      },
      {
        "sha": "42ca065a842bcbecfba90daa8f7315a7a609a145",
        "filename": "test/functional/p2p-compactblocks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64f63e729a95442337c27f704461cadfb4c7231a/test/functional/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64f63e729a95442337c27f704461cadfb4c7231a/test/functional/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-compactblocks.py?ref=64f63e729a95442337c27f704461cadfb4c7231a",
        "patch": "@@ -98,7 +98,7 @@ def __init__(self):\n         self.setup_clean_chain = True\n         # Node0 = pre-segwit, node1 = segwit-aware\n         self.num_nodes = 2\n-        self.extra_args = [[\"-vbparams=segwit:0:0\"], [\"-txindex\"]]\n+        self.extra_args = [[\"-vbparams=segwit:0:0:0:0\"], [\"-txindex\"]]\n         self.utxos = []\n \n     def build_block_on_tip(self, node, segwit=False):"
      },
      {
        "sha": "d82637647b07d8254c0750ae98d3d979c43b70e8",
        "filename": "test/functional/p2p-segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64f63e729a95442337c27f704461cadfb4c7231a/test/functional/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64f63e729a95442337c27f704461cadfb4c7231a/test/functional/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-segwit.py?ref=64f63e729a95442337c27f704461cadfb4c7231a",
        "patch": "@@ -114,7 +114,7 @@ def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n         self.num_nodes = 3\n-        self.extra_args = [[\"-whitelist=127.0.0.1\"], [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\"], [\"-whitelist=127.0.0.1\", \"-vbparams=segwit:0:0\"]]\n+        self.extra_args = [[\"-whitelist=127.0.0.1\"], [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\"], [\"-whitelist=127.0.0.1\", \"-vbparams=segwit:0:0:0:0\"]]\n \n     def setup_network(self):\n         self.setup_nodes()"
      }
    ]
  },
  {
    "sha": "4525433b30823765de1ee892625691189008155f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTI1NDMzYjMwODIzNzY1ZGUxZWU4OTI2MjU2OTExODkwMDgxNTVm",
    "commit": {
      "author": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-04-30T20:20:55Z"
      },
      "committer": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-07-10T20:06:02Z"
      },
      "message": "Add BIP8 reporting to getblockchaininfo RPC",
      "tree": {
        "sha": "2d5bb6a3c652b329f7e13777c65c2e4e7bb2e6d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d5bb6a3c652b329f7e13777c65c2e4e7bb2e6d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4525433b30823765de1ee892625691189008155f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4525433b30823765de1ee892625691189008155f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4525433b30823765de1ee892625691189008155f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4525433b30823765de1ee892625691189008155f/comments",
    "author": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64f63e729a95442337c27f704461cadfb4c7231a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64f63e729a95442337c27f704461cadfb4c7231a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64f63e729a95442337c27f704461cadfb4c7231a"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 16,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8f09317a1952a750e5b4239f018b9019ec97a77c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4525433b30823765de1ee892625691189008155f/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4525433b30823765de1ee892625691189008155f/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=4525433b30823765de1ee892625691189008155f",
        "patch": "@@ -1075,7 +1075,7 @@ static UniValue SoftForkDesc(const std::string &name, int version, CBlockIndex*\n     return rv;\n }\n \n-static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n+static UniValue VBSoftForkDesc(const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n     UniValue rv(UniValue::VOBJ);\n     const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n@@ -1107,13 +1107,13 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n     return rv;\n }\n \n-void BIP9SoftForkDescPushBack(UniValue& bip9_softforks, const std::string &name, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n+void VBSoftForkDescPushBack(UniValue& vb_softforks, const std::string &name, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n     // Deployments with timeout value of 0 are hidden.\n     // A timeout value of 0 guarantees a softfork will never be activated.\n     // This is used when softfork codes are merged without specifying the deployment schedule.\n     if (consensusParams.vDeployments[id].nTimeout > 0)\n-        bip9_softforks.push_back(Pair(name, BIP9SoftForkDesc(consensusParams, id)));\n+        vb_softforks.push_back(Pair(name, VBSoftForkDesc(consensusParams, id)));\n }\n \n UniValue getblockchaininfo(const JSONRPCRequest& request)\n@@ -1143,6 +1143,15 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"        },\\n\"\n             \"     }, ...\\n\"\n             \"  ],\\n\"\n+            \"  \\\"bip8_softforks\\\": {          (object) status of BIP8 softforks in progress\\n\"\n+            \"     \\\"xxxx\\\" : {                (string) name of the softfork\\n\"\n+            \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n+            \"        \\\"bit\\\": xx,             (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n+            \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n+            \"        \\\"timeout\\\": xx,         (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n+            \"        \\\"since\\\": xx            (numeric) height of the first block to which the status applies\\n\"\n+            \"     }\\n\"\n+            \"  },\\n\"\n             \"  \\\"bip9_softforks\\\": {          (object) status of BIP9 softforks in progress\\n\"\n             \"     \\\"xxxx\\\" : {                (string) name of the softfork\\n\"\n             \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n@@ -1181,13 +1190,15 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     CBlockIndex* tip = chainActive.Tip();\n     UniValue softforks(UniValue::VARR);\n+    UniValue bip8_softforks(UniValue::VOBJ);\n     UniValue bip9_softforks(UniValue::VOBJ);\n     softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip66\", 3, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip65\", 4, tip, consensusParams));\n-    BIP9SoftForkDescPushBack(bip9_softforks, \"csv\", consensusParams, Consensus::DEPLOYMENT_CSV);\n-    BIP9SoftForkDescPushBack(bip9_softforks, \"segwit\", consensusParams, Consensus::DEPLOYMENT_SEGWIT);\n+    VBSoftForkDescPushBack(bip9_softforks, \"csv\", consensusParams, Consensus::DEPLOYMENT_CSV);\n+    VBSoftForkDescPushBack(bip9_softforks, \"segwit\", consensusParams, Consensus::DEPLOYMENT_SEGWIT);\n     obj.push_back(Pair(\"softforks\",             softforks));\n+    obj.push_back(Pair(\"bip8_softforks\", bip8_softforks));\n     obj.push_back(Pair(\"bip9_softforks\", bip9_softforks));\n \n     if (fPruneMode)"
      }
    ]
  }
]