[
  {
    "sha": "80044bd2ed96c391e9e87d77cc876e653b512657",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDA0NGJkMmVkOTZjMzkxZTllODdkNzdjYzg3NmU2NTNiNTEyNjU3",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2020-12-13T06:18:38Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-04-22T16:17:03Z"
      },
      "message": "[rpc, refactor] Simplify setban logic and consolidate BanMan::Ban() functions\n\n- consolidate Ban() functions\n- setban logic is simpler: adding a subset ban will not throw an error",
      "tree": {
        "sha": "659d8475d524290d3c2c3a33bdb1d4d3f40af79b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/659d8475d524290d3c2c3a33bdb1d4d3f40af79b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80044bd2ed96c391e9e87d77cc876e653b512657",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80044bd2ed96c391e9e87d77cc876e653b512657",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80044bd2ed96c391e9e87d77cc876e653b512657",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80044bd2ed96c391e9e87d77cc876e653b512657/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b5659c6b115315c9fd2902b4edd4b960a5e066e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b5659c6b115315c9fd2902b4edd4b960a5e066e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b5659c6b115315c9fd2902b4edd4b960a5e066e"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 87,
      "deletions": 52
    },
    "files": [
      {
        "sha": "0bdea3256ed4e45ef4395a6b9ffc2a98db083ab2",
        "filename": "doc/release-notes/release-notes-19825.md",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/doc/release-notes/release-notes-19825.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/doc/release-notes/release-notes-19825.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-19825.md?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -0,0 +1,2 @@\n+### RPC and other APIs\n+- #19825 `setban` behavior changed. Banning a subnet that is a subset of a previous ban is a no-op instead of an rpc error.\n\\ No newline at end of file"
      },
      {
        "sha": "c7090398d4304cf71b5da795972e22c20eda0da0",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -103,19 +103,13 @@ bool BanMan::IsBanned(const CSubNet& sub_net)\n     return false;\n }\n \n-void BanMan::Ban(const CNetAddr& net_addr, int64_t ban_time_offset, bool since_unix_epoch)\n-{\n-    CSubNet sub_net(net_addr);\n-    Ban(sub_net, ban_time_offset, since_unix_epoch);\n-}\n-\n void BanMan::Discourage(const CNetAddr& net_addr)\n {\n     LOCK(m_cs_banned);\n     m_discouraged.insert(net_addr.GetAddrBytes());\n }\n \n-void BanMan::Ban(const CSubNet& sub_net, int64_t ban_time_offset, bool since_unix_epoch)\n+bool BanMan::Ban(const CSubNet& sub_net, int64_t ban_time_offset, bool since_unix_epoch)\n {\n     CBanEntry ban_entry(GetTime());\n \n@@ -129,16 +123,18 @@ void BanMan::Ban(const CSubNet& sub_net, int64_t ban_time_offset, bool since_uni\n \n     {\n         LOCK(m_cs_banned);\n+        // If ban entry is absent, add it. If it's shorter, update it.\n         if (m_banned[sub_net].nBanUntil < ban_entry.nBanUntil) {\n             m_banned[sub_net] = ban_entry;\n             m_is_dirty = true;\n         } else\n-            return;\n+            return false; // nothing to do, longer ban already exists\n     }\n     if (m_client_interface) m_client_interface->BannedListChanged();\n \n     //store banlist to disk immediately\n     DumpBanlist();\n+    return true;\n }\n \n bool BanMan::Unban(const CNetAddr& net_addr)"
      },
      {
        "sha": "4abf78e25d1a4c32a35254702686292714b04c0d",
        "filename": "src/banman.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/banman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/banman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.h?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -59,8 +59,11 @@ class BanMan\n public:\n     ~BanMan();\n     BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time);\n-    void Ban(const CNetAddr& net_addr, int64_t ban_time_offset = 0, bool since_unix_epoch = false);\n-    void Ban(const CSubNet& sub_net, int64_t ban_time_offset = 0, bool since_unix_epoch = false);\n+\n+    //! Returns true if a new ban is added\n+    // Updates existing ban entries with longer ones\n+    bool Ban(const CSubNet& sub_net, int64_t ban_time_offset = 0, bool since_unix_epoch = false);\n+\n     void Discourage(const CNetAddr& net_addr);\n     void ClearBanned();\n "
      },
      {
        "sha": "b14a12b3aaeaadf547cc5eeac18468b070a97e8f",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -99,7 +99,7 @@ class Node\n     virtual bool getBanned(banmap_t& banmap) = 0;\n \n     //! Ban node.\n-    virtual bool ban(const CNetAddr& net_addr, int64_t ban_time_offset) = 0;\n+    virtual bool ban(const CSubNet& net_addr, int64_t ban_time_offset) = 0;\n \n     //! Unban node.\n     virtual bool unban(const CSubNet& ip) = 0;"
      },
      {
        "sha": "3de58fdfc9fa573a934ce70585fc2a2f6cd6213f",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -1116,7 +1116,7 @@ CSubNet::CSubNet(const CNetAddr& addr) : CSubNet()\n     switch (addr.m_net) {\n     case NET_IPV4:\n     case NET_IPV6:\n-        valid = true;\n+        valid = addr.IsValid();\n         assert(addr.m_addr.size() <= sizeof(netmask));\n         memset(netmask, 0xFF, addr.m_addr.size());\n         break;"
      },
      {
        "sha": "cc494a6362c198197da870d95d9f5a294bcfdd28",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -140,10 +140,10 @@ class NodeImpl : public Node\n         }\n         return false;\n     }\n-    bool ban(const CNetAddr& net_addr, int64_t ban_time_offset) override\n+    bool ban(const CSubNet& sub_net, int64_t ban_time_offset) override\n     {\n         if (m_context->banman) {\n-            m_context->banman->Ban(net_addr, ban_time_offset);\n+            m_context->banman->Ban(sub_net, ban_time_offset);\n             return true;\n         }\n         return false;"
      },
      {
        "sha": "695063fe1cbf18f55132db463ae55ab12be558ee",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -1209,7 +1209,8 @@ void RPCConsole::banSelectedNode(int bantime)\n         // Find possible nodes, ban it and clear the selected node\n         const auto stats = peer.data(PeerTableModel::StatsRole).value<CNodeCombinedStats*>();\n         if (stats) {\n-            m_node.ban(stats->nodeStats.addr, bantime);\n+            CSubNet sub_net(stats->nodeStats.addr);\n+            m_node.ban(sub_net, bantime);\n             m_node.disconnectByAddress(stats->nodeStats.addr);\n         }\n     }"
      },
      {
        "sha": "9c2fc1273663cf765c5d118eaf151bec87dda3ce",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 26,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -667,7 +667,7 @@ static RPCHelpMan getnetworkinfo()\n static RPCHelpMan setban()\n {\n     return RPCHelpMan{\"setban\",\n-                \"\\nAttempts to add or remove an IP/Subnet from the banned list.\\n\",\n+                \"\\nAttempts to add or remove an IP/Subnet from the banned list. If a ban is already in effect, no changes are made.\\n\",\n                 {\n                     {\"subnet\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP/Subnet (see getpeerinfo for nodes IP) with an optional netmask (default is /32 = single IP)\"},\n                     {\"command\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'add' to add an IP/Subnet to the list, 'remove' to remove an IP/Subnet from the list\"},\n@@ -694,29 +694,19 @@ static RPCHelpMan setban()\n     }\n \n     CSubNet subNet;\n-    CNetAddr netAddr;\n-    bool isSubnet = false;\n \n-    if (request.params[0].get_str().find('/') != std::string::npos)\n-        isSubnet = true;\n-\n-    if (!isSubnet) {\n+    if (request.params[0].get_str().find('/') == std::string::npos) {\n         CNetAddr resolved;\n         LookupHost(request.params[0].get_str(), resolved, false);\n-        netAddr = resolved;\n-    }\n-    else\n+        subNet = CSubNet(resolved);\n+    } else\n         LookupSubNet(request.params[0].get_str(), subNet);\n \n-    if (! (isSubnet ? subNet.IsValid() : netAddr.IsValid()) )\n+    if (!subNet.IsValid())\n         throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Invalid IP/Subnet\");\n \n     if (strCommand == \"add\")\n     {\n-        if (isSubnet ? node.banman->IsBanned(subNet) : node.banman->IsBanned(netAddr)) {\n-            throw JSONRPCError(RPC_CLIENT_NODE_ALREADY_ADDED, \"Error: IP/Subnet already banned\");\n-        }\n-\n         int64_t banTime = 0; //use standard bantime if not specified\n         if (!request.params[2].isNull())\n             banTime = request.params[2].get_int64();\n@@ -725,21 +715,13 @@ static RPCHelpMan setban()\n         if (request.params[3].isTrue())\n             absolute = true;\n \n-        if (isSubnet) {\n-            node.banman->Ban(subNet, banTime, absolute);\n-            if (node.connman) {\n-                node.connman->DisconnectNode(subNet);\n-            }\n-        } else {\n-            node.banman->Ban(netAddr, banTime, absolute);\n-            if (node.connman) {\n-                node.connman->DisconnectNode(netAddr);\n-            }\n+        if (node.banman->Ban(subNet, banTime, absolute) && node.connman) {\n+            node.connman->DisconnectNode(subNet);\n         }\n     }\n     else if(strCommand == \"remove\")\n     {\n-        if (!( isSubnet ? node.banman->Unban(subNet) : node.banman->Unban(netAddr) )) {\n+        if (!node.banman->Unban(subNet)) {\n             throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Unban failed. Requested address/subnet was not previously manually banned.\");\n         }\n     }"
      },
      {
        "sha": "aeccab1c0dcd36cec1eb0b2724450e4877731870",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -41,10 +41,6 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n         while (fuzzed_data_provider.ConsumeBool()) {\n             CallOneOf(\n                 fuzzed_data_provider,\n-                [&] {\n-                    ban_man.Ban(ConsumeNetAddr(fuzzed_data_provider),\n-                                ConsumeBanTimeOffset(fuzzed_data_provider), fuzzed_data_provider.ConsumeBool());\n-                },\n                 [&] {\n                     ban_man.Ban(ConsumeSubNet(fuzzed_data_provider),\n                                 ConsumeBanTimeOffset(fuzzed_data_provider), fuzzed_data_provider.ConsumeBool());"
      },
      {
        "sha": "d09f84084e3c019aac0ccdaabc652773057f7cde",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 4,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -293,16 +293,62 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     BOOST_CHECK_EQUAL(ban_duration, banned_until - ban_created);\n     BOOST_CHECK_EQUAL(time_remaining, time_remaining_expected);\n \n-    // must throw an exception because 127.0.0.1 is in already banned subnet range\n-    BOOST_CHECK_THROW(r = CallRPC(std::string(\"setban 127.0.0.1 add\")), std::runtime_error);\n+    // 127.0.0.1 is within 127.0.0.0/24 and this ban is for 86400 seconds (default)\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.1 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 2U);\n+    bool found = false;\n+    for (size_t i = 0; i < ar.size(); i++) {\n+        o1 = ar[i].get_obj();\n+        adr = find_value(o1, \"address\");\n+        if (adr.get_str() == \"127.0.0.1/32\") {\n+            banned_until = find_value(o1, \"banned_until\");\n+            now = GetTime();\n+            BOOST_CHECK(banned_until.get_int64() > now);\n+            BOOST_CHECK(banned_until.get_int64() - now > 86390);\n+            found = true;\n+        }\n+    }\n+    BOOST_CHECK_EQUAL(found, true);\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 127.0.0.1/32 remove\")));\n+    // Adding another ban for 127.0.0.0/24 with a longer time, updates the ban entry\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add 2000\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    o1 = ar[0].get_obj();\n+    adr = find_value(o1, \"address\");\n+    banned_until = find_value(o1, \"banned_until\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n+    now = GetTime();\n+    BOOST_CHECK(banned_until.get_int64() > now);\n+    BOOST_CHECK(banned_until.get_int64() - now > 1990);\n+\n+    // Adding another ban for 127.0.0.0/24 with a shorter time, does nothing leaving the longer ban in place\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add 200\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    o1 = ar[0].get_obj();\n+    adr = find_value(o1, \"address\");\n+    banned_until = find_value(o1, \"banned_until\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n+    now = GetTime();\n+    BOOST_CHECK(banned_until.get_int64() > now);\n+    BOOST_CHECK(banned_until.get_int64() - now > 1990);\n \n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 127.0.0.0/24 remove\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n     ar = r.get_array();\n     BOOST_CHECK_EQUAL(ar.size(), 0U);\n \n-    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/255.255.0.0 add\")));\n-    BOOST_CHECK_THROW(r = CallRPC(std::string(\"setban 127.0.1.1 add\")), std::runtime_error);\n+    // 9 bit netmask\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/255.128.0.0 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    o1 = ar[0].get_obj();\n+    adr = find_value(o1, \"address\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/9\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));"
      },
      {
        "sha": "2b682768e93f3ffdb1f3a476e8bd680d1dcff9b0",
        "filename": "test/functional/p2p_disconnect_ban.py",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80044bd2ed96c391e9e87d77cc876e653b512657/test/functional/p2p_disconnect_ban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80044bd2ed96c391e9e87d77cc876e653b512657/test/functional/p2p_disconnect_ban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_disconnect_ban.py?ref=80044bd2ed96c391e9e87d77cc876e653b512657",
        "patch": "@@ -7,6 +7,7 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n+    assert_approx,\n     assert_equal,\n     assert_raises_rpc_error,\n )\n@@ -38,13 +39,21 @@ def run_test(self):\n         assert_equal(len(self.nodes[1].listbanned()), 0)\n         self.nodes[1].setban(\"127.0.0.0/24\", \"add\")\n \n-        self.log.info(\"setban: fail to ban an already banned subnet\")\n+        self.log.info(\"adding a subset ban creates a new ban entry\")\n         assert_equal(len(self.nodes[1].listbanned()), 1)\n-        assert_raises_rpc_error(-23, \"IP/Subnet already banned\", self.nodes[1].setban, \"127.0.0.1\", \"add\")\n+        self.nodes[1].setban(\"127.0.0.1\", \"add\", 500)\n+        listbanned_response = self.nodes[1].listbanned()\n+        assert_equal(len(listbanned_response), 2)\n+        assert_equal(listbanned_response[1][\"address\"], \"127.0.0.1/32\")\n+\n+        # Verify that relative bantime is correct\n+        now = int(time.time())\n+        assert_approx(listbanned_response[1][\"banned_until\"] - now, 10, 500)\n+        self.nodes[1].setban(\"127.0.0.1/32\", \"remove\", 500)\n \n         self.log.info(\"setban: fail to ban an invalid subnet\")\n         assert_raises_rpc_error(-30, \"Error: Invalid IP/Subnet\", self.nodes[1].setban, \"127.0.0.1/42\", \"add\")\n-        assert_equal(len(self.nodes[1].listbanned()), 1)  # still only one banned ip because 127.0.0.1 is within the range of 127.0.0.0/24\n+        assert_equal(len(self.nodes[1].listbanned()), 1)  # still only one banned ip because 127.0.0.1/42 is invalid\n \n         self.log.info(\"setban remove: fail to unban a non-banned subnet\")\n         assert_raises_rpc_error(-30, \"Error: Unban failed\", self.nodes[1].setban, \"127.0.0.1\", \"remove\")"
      }
    ]
  },
  {
    "sha": "b2272c6816ccfbda455efd37628061fc79062977",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjI3MmM2ODE2Y2NmYmRhNDU1ZWZkMzc2MjgwNjFmYzc5MDYyOTc3",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2020-12-13T06:33:00Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-04-22T16:17:03Z"
      },
      "message": "[rpc, refactor] Consolidate BanMan::Unban() functions\n\nUnbanning a non-banned subnet should not raise an rpc error",
      "tree": {
        "sha": "e751b0918513f6ac7755e377acbc29311257ea86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e751b0918513f6ac7755e377acbc29311257ea86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2272c6816ccfbda455efd37628061fc79062977",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2272c6816ccfbda455efd37628061fc79062977",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2272c6816ccfbda455efd37628061fc79062977",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2272c6816ccfbda455efd37628061fc79062977/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80044bd2ed96c391e9e87d77cc876e653b512657",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80044bd2ed96c391e9e87d77cc876e653b512657",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80044bd2ed96c391e9e87d77cc876e653b512657"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 6,
      "deletions": 16
    },
    "files": [
      {
        "sha": "babea306f8c4229ae44e121a5f686ab86747dda3",
        "filename": "doc/release-notes/release-notes-19825.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2272c6816ccfbda455efd37628061fc79062977/doc/release-notes/release-notes-19825.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2272c6816ccfbda455efd37628061fc79062977/doc/release-notes/release-notes-19825.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-19825.md?ref=b2272c6816ccfbda455efd37628061fc79062977",
        "patch": "@@ -1,2 +1,3 @@\n ### RPC and other APIs\n-- #19825 `setban` behavior changed. Banning a subnet that is a subset of a previous ban is a no-op instead of an rpc error.\n\\ No newline at end of file\n+- #19825 `setban` behavior changed: Banning a subnet that is a subset of a previous ban is a no-op instead of an rpc error.\n+- #19825 `setban` behavior changed: Unbanning a non-banned subnet is a no-op instead of an rpc error.\n\\ No newline at end of file"
      },
      {
        "sha": "1d286133d75c0cab2ff29937602703f428161cb7",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2272c6816ccfbda455efd37628061fc79062977/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2272c6816ccfbda455efd37628061fc79062977/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=b2272c6816ccfbda455efd37628061fc79062977",
        "patch": "@@ -137,12 +137,6 @@ bool BanMan::Ban(const CSubNet& sub_net, int64_t ban_time_offset, bool since_uni\n     return true;\n }\n \n-bool BanMan::Unban(const CNetAddr& net_addr)\n-{\n-    CSubNet sub_net(net_addr);\n-    return Unban(sub_net);\n-}\n-\n bool BanMan::Unban(const CSubNet& sub_net)\n {\n     {"
      },
      {
        "sha": "9f258b1da87312eb59ccc0e2a2c991ae9f464971",
        "filename": "src/banman.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2272c6816ccfbda455efd37628061fc79062977/src/banman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2272c6816ccfbda455efd37628061fc79062977/src/banman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.h?ref=b2272c6816ccfbda455efd37628061fc79062977",
        "patch": "@@ -76,7 +76,6 @@ class BanMan\n     //! Return whether net_addr is discouraged.\n     bool IsDiscouraged(const CNetAddr& net_addr);\n \n-    bool Unban(const CNetAddr& net_addr);\n     bool Unban(const CSubNet& sub_net);\n     void GetBanned(banmap_t& banmap);\n     void DumpBanlist();"
      },
      {
        "sha": "5b6dda4d5b7ecd60468ab1c82fdb2ec35d2cd498",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2272c6816ccfbda455efd37628061fc79062977/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2272c6816ccfbda455efd37628061fc79062977/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=b2272c6816ccfbda455efd37628061fc79062977",
        "patch": "@@ -721,9 +721,7 @@ static RPCHelpMan setban()\n     }\n     else if(strCommand == \"remove\")\n     {\n-        if (!node.banman->Unban(subNet)) {\n-            throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Unban failed. Requested address/subnet was not previously manually banned.\");\n-        }\n+        node.banman->Unban(subNet);\n     }\n     return NullUniValue;\n },"
      },
      {
        "sha": "a9e078b4502e88b281615a6a0a6cd979627b27c5",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2272c6816ccfbda455efd37628061fc79062977/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2272c6816ccfbda455efd37628061fc79062977/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=b2272c6816ccfbda455efd37628061fc79062977",
        "patch": "@@ -55,9 +55,6 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n                 [&] {\n                     ban_man.IsBanned(ConsumeSubNet(fuzzed_data_provider));\n                 },\n-                [&] {\n-                    ban_man.Unban(ConsumeNetAddr(fuzzed_data_provider));\n-                },\n                 [&] {\n                     ban_man.Unban(ConsumeSubNet(fuzzed_data_provider));\n                 },"
      },
      {
        "sha": "a7801dc1b5c0e5cd0ca6af1d5da16241154d33b2",
        "filename": "test/functional/p2p_disconnect_ban.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2272c6816ccfbda455efd37628061fc79062977/test/functional/p2p_disconnect_ban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2272c6816ccfbda455efd37628061fc79062977/test/functional/p2p_disconnect_ban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_disconnect_ban.py?ref=b2272c6816ccfbda455efd37628061fc79062977",
        "patch": "@@ -55,8 +55,9 @@ def run_test(self):\n         assert_raises_rpc_error(-30, \"Error: Invalid IP/Subnet\", self.nodes[1].setban, \"127.0.0.1/42\", \"add\")\n         assert_equal(len(self.nodes[1].listbanned()), 1)  # still only one banned ip because 127.0.0.1/42 is invalid\n \n-        self.log.info(\"setban remove: fail to unban a non-banned subnet\")\n-        assert_raises_rpc_error(-30, \"Error: Unban failed\", self.nodes[1].setban, \"127.0.0.1\", \"remove\")\n+        # Unbanning a non-banned subnet should succeed as user intent is accomplished\n+        self.log.info(\"setban remove: unban a non-banned subnet\")\n+        self.nodes[1].setban(\"127.0.0.1\", \"remove\")\n         assert_equal(len(self.nodes[1].listbanned()), 1)\n \n         self.log.info(\"setban remove: successfully unban subnet\")"
      }
    ]
  },
  {
    "sha": "66457146bec503a122eb8b89613efd6fe6dc8374",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjQ1NzE0NmJlYzUwM2ExMjJlYjhiODk2MTNlZmQ2ZmU2ZGM4Mzc0",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2020-12-13T15:07:05Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-04-22T16:17:04Z"
      },
      "message": "[refactor] Remove unused BanMan::IsBanned(CSubNet)",
      "tree": {
        "sha": "a7314b1f1d9965b94c1a223b41307f27dbc1cf46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7314b1f1d9965b94c1a223b41307f27dbc1cf46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66457146bec503a122eb8b89613efd6fe6dc8374",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66457146bec503a122eb8b89613efd6fe6dc8374",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66457146bec503a122eb8b89613efd6fe6dc8374",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66457146bec503a122eb8b89613efd6fe6dc8374/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2272c6816ccfbda455efd37628061fc79062977",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2272c6816ccfbda455efd37628061fc79062977",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2272c6816ccfbda455efd37628061fc79062977"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 0,
      "deletions": 20
    },
    "files": [
      {
        "sha": "fdbb20edaeffaf7f6f145e28f9379c31b3ad0089",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66457146bec503a122eb8b89613efd6fe6dc8374/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66457146bec503a122eb8b89613efd6fe6dc8374/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=66457146bec503a122eb8b89613efd6fe6dc8374",
        "patch": "@@ -89,20 +89,6 @@ bool BanMan::IsBanned(const CNetAddr& net_addr)\n     return false;\n }\n \n-bool BanMan::IsBanned(const CSubNet& sub_net)\n-{\n-    auto current_time = GetTime();\n-    LOCK(m_cs_banned);\n-    banmap_t::iterator i = m_banned.find(sub_net);\n-    if (i != m_banned.end()) {\n-        CBanEntry ban_entry = (*i).second;\n-        if (current_time < ban_entry.nBanUntil) {\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n void BanMan::Discourage(const CNetAddr& net_addr)\n {\n     LOCK(m_cs_banned);"
      },
      {
        "sha": "e1e40887827443122a4c17fd48ce1f9bd82022d5",
        "filename": "src/banman.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66457146bec503a122eb8b89613efd6fe6dc8374/src/banman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66457146bec503a122eb8b89613efd6fe6dc8374/src/banman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.h?ref=66457146bec503a122eb8b89613efd6fe6dc8374",
        "patch": "@@ -70,9 +70,6 @@ class BanMan\n     //! Return whether net_addr is banned\n     bool IsBanned(const CNetAddr& net_addr);\n \n-    //! Return whether sub_net is exactly banned\n-    bool IsBanned(const CSubNet& sub_net);\n-\n     //! Return whether net_addr is discouraged.\n     bool IsDiscouraged(const CNetAddr& net_addr);\n "
      },
      {
        "sha": "a2ad023f0d2042123190182360e19d46aa339a77",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66457146bec503a122eb8b89613efd6fe6dc8374/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66457146bec503a122eb8b89613efd6fe6dc8374/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=66457146bec503a122eb8b89613efd6fe6dc8374",
        "patch": "@@ -52,9 +52,6 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n                 [&] {\n                     ban_man.IsBanned(ConsumeNetAddr(fuzzed_data_provider));\n                 },\n-                [&] {\n-                    ban_man.IsBanned(ConsumeSubNet(fuzzed_data_provider));\n-                },\n                 [&] {\n                     ban_man.Unban(ConsumeSubNet(fuzzed_data_provider));\n                 },"
      }
    ]
  },
  {
    "sha": "bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZmRiOGExYjFjNzk2YmI1ZDI4Y2IxZTU2MjIyZGZkOTlhNzdkNjc0",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2020-12-13T19:52:18Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-04-23T20:19:28Z"
      },
      "message": "[rpc] Add `setban ip removeall` command",
      "tree": {
        "sha": "536fadac0fcbc04f5f695b1c06a9747c0f962be1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/536fadac0fcbc04f5f695b1c06a9747c0f962be1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66457146bec503a122eb8b89613efd6fe6dc8374",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66457146bec503a122eb8b89613efd6fe6dc8374",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66457146bec503a122eb8b89613efd6fe6dc8374"
      }
    ],
    "stats": {
      "total": 133,
      "additions": 107,
      "deletions": 26
    },
    "files": [
      {
        "sha": "bdd9fc74a9e5d7a77c59adc63f196640ba9d4d88",
        "filename": "doc/release-notes/release-notes-19825.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/doc/release-notes/release-notes-19825.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/doc/release-notes/release-notes-19825.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-19825.md?ref=bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "patch": "@@ -1,3 +1,4 @@\n ### RPC and other APIs\n - #19825 `setban` behavior changed: Banning a subnet that is a subset of a previous ban is a no-op instead of an rpc error.\n-- #19825 `setban` behavior changed: Unbanning a non-banned subnet is a no-op instead of an rpc error.\n\\ No newline at end of file\n+- #19825 `setban` behavior changed: Unbanning a non-banned subnet is a no-op instead of an rpc error.\n+- #19825 `setban` behavior changed: Added `setban ip removeall` to remove all bans that affect an ip address."
      },
      {
        "sha": "6e89364deeb965f6ebf8b6316843416d2a256749",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "patch": "@@ -135,6 +135,25 @@ bool BanMan::Unban(const CSubNet& sub_net)\n     return true;\n }\n \n+void BanMan::UnbanAll(const CNetAddr& net_addr)\n+{\n+    {\n+        LOCK(m_cs_banned);\n+        for (auto it = m_banned.begin(); it != m_banned.end();) {\n+            CSubNet sub_net = it->first;\n+            if (sub_net.Match(net_addr)) {\n+                it = m_banned.erase(it);\n+                m_is_dirty = true;\n+            } else {\n+                ++it;\n+            }\n+        }\n+    }\n+\n+    if (m_client_interface) m_client_interface->BannedListChanged();\n+    DumpBanlist(); //store banlist to disk immediately\n+}\n+\n void BanMan::GetBanned(banmap_t& banmap)\n {\n     LOCK(m_cs_banned);"
      },
      {
        "sha": "6fd03e5a94b76457fb162dc0ea7101408cd68c9b",
        "filename": "src/banman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/banman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/banman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.h?ref=bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "patch": "@@ -74,6 +74,9 @@ class BanMan\n     bool IsDiscouraged(const CNetAddr& net_addr);\n \n     bool Unban(const CSubNet& sub_net);\n+\n+    // Removes all ban entries that include net_addr\n+    void UnbanAll(const CNetAddr& net_addr);\n     void GetBanned(banmap_t& banmap);\n     void DumpBanlist();\n "
      },
      {
        "sha": "464f63863fc3efb107e8a3bd006f193c80d3cf5d",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 13,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "patch": "@@ -670,7 +670,7 @@ static RPCHelpMan setban()\n                 \"\\nAttempts to add or remove an IP/Subnet from the banned list. If a ban is already in effect, no changes are made.\\n\",\n                 {\n                     {\"subnet\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP/Subnet (see getpeerinfo for nodes IP) with an optional netmask (default is /32 = single IP)\"},\n-                    {\"command\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'add' to add an IP/Subnet to the list, 'remove' to remove an IP/Subnet from the list\"},\n+                    {\"command\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'add' to add an IP/Subnet to the list, 'remove' to remove an IP/Subnet from the list, 'removeall' to remove all bans that include the single IP address\"},\n                     {\"bantime\", RPCArg::Type::NUM, RPCArg::Default{0}, \"time in seconds how long (or until when if [absolute] is set) the IP is banned (0 or empty means using the default time of 24h which can also be overwritten by the -bantime startup argument)\"},\n                     {\"absolute\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"If set, the bantime must be an absolute timestamp expressed in \" + UNIX_EPOCH_TIME},\n                 },\n@@ -685,28 +685,32 @@ static RPCHelpMan setban()\n     std::string strCommand;\n     if (!request.params[1].isNull())\n         strCommand = request.params[1].get_str();\n-    if (strCommand != \"add\" && strCommand != \"remove\") {\n+    if (strCommand != \"add\" && strCommand != \"remove\" && strCommand != \"removeall\") {\n         throw std::runtime_error(help.ToString());\n     }\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     if (!node.banman) {\n         throw JSONRPCError(RPC_DATABASE_ERROR, \"Error: Ban database not loaded\");\n     }\n \n-    CSubNet subNet;\n+    bool isSubnet = (request.params[0].get_str().find('/') != std::string::npos);\n+    if (strCommand == \"removeall\" && isSubnet) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Error: setban removeall requires a single IP address\");\n+    }\n \n-    if (request.params[0].get_str().find('/') == std::string::npos) {\n-        CNetAddr resolved;\n-        LookupHost(request.params[0].get_str(), resolved, false);\n-        subNet = CSubNet(resolved);\n-    } else\n+    CSubNet subNet;\n+    CNetAddr netAddr;\n+    if (isSubnet) {\n         LookupSubNet(request.params[0].get_str(), subNet);\n+    } else {\n+        LookupHost(request.params[0].get_str(), netAddr, false);\n+        subNet = CSubNet(netAddr);\n+    }\n \n     if (!subNet.IsValid())\n         throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Invalid IP/Subnet\");\n \n-    if (strCommand == \"add\")\n-    {\n+    if (strCommand == \"add\") {\n         int64_t banTime = 0; //use standard bantime if not specified\n         if (!request.params[2].isNull())\n             banTime = request.params[2].get_int64();\n@@ -718,10 +722,10 @@ static RPCHelpMan setban()\n         if (node.banman->Ban(subNet, banTime, absolute) && node.connman) {\n             node.connman->DisconnectNode(subNet);\n         }\n-    }\n-    else if(strCommand == \"remove\")\n-    {\n+    } else if (strCommand == \"remove\") {\n         node.banman->Unban(subNet);\n+    } else if (strCommand == \"removeall\") {\n+        node.banman->UnbanAll(netAddr);\n     }\n     return NullUniValue;\n },"
      },
      {
        "sha": "4fc9532de6f4902b4db5971f98deadfbe6998d06",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 12,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "patch": "@@ -303,10 +303,8 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n         o1 = ar[i].get_obj();\n         adr = find_value(o1, \"address\");\n         if (adr.get_str() == \"127.0.0.1/32\") {\n-            banned_until = find_value(o1, \"banned_until\");\n-            now = GetTime();\n-            BOOST_CHECK(banned_until.get_int64() > now);\n-            BOOST_CHECK(banned_until.get_int64() - now > 86390);\n+            banned_until = find_value(o1, \"banned_until\").get_int64();\n+            BOOST_CHECK(banned_until == now.count() + 86400);\n             found = true;\n         }\n     }\n@@ -319,23 +317,19 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    banned_until = find_value(o1, \"banned_until\");\n+    banned_until = find_value(o1, \"banned_until\").get_int64();\n     BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n-    now = GetTime();\n-    BOOST_CHECK(banned_until.get_int64() > now);\n-    BOOST_CHECK(banned_until.get_int64() - now > 1990);\n+    BOOST_CHECK(banned_until = now.count() + 2000);\n \n     // Adding another ban for 127.0.0.0/24 with a shorter time, does nothing leaving the longer ban in place\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add 200\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    banned_until = find_value(o1, \"banned_until\");\n+    banned_until = find_value(o1, \"banned_until\").get_int64();\n     BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n-    now = GetTime();\n-    BOOST_CHECK(banned_until.get_int64() > now);\n-    BOOST_CHECK(banned_until.get_int64() - now > 1990);\n+    BOOST_CHECK(banned_until = now.count() + 2000);\n \n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 127.0.0.0/24 remove\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n@@ -381,6 +375,40 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n+\n+    //removeall ipv4 test\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/16 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/32 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 3U);\n+    BOOST_CHECK_THROW(CallRPC(std::string(\"setban 127.0.0.3/32 removeall\")), std::runtime_error); // cannot removeall subnets\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 127.0.0.3 removeall\"))); // remove all subnets with 127.0.0.3\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 1U);\n+    o1 = ar[0].get_obj();\n+    adr = find_value(o1, \"address\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/32\");\n+\n+    //removeall ipv6 test\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/96 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/112 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 3U);\n+    BOOST_CHECK_THROW(CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64/128 removeall\")), std::runtime_error); // cannot removeall subnets\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64 removeall\"))); // remove all subnets with 127.0.0.3\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 1U);\n+    o1 = ar[0].get_obj();\n+    adr = find_value(o1, \"address\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n }\n \n BOOST_AUTO_TEST_CASE(rpc_convert_values_generatetoaddress)"
      },
      {
        "sha": "dc720121c1aa4312662f950a096caceff02fe968",
        "filename": "test/functional/p2p_disconnect_ban.py",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/test/functional/p2p_disconnect_ban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674/test/functional/p2p_disconnect_ban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_disconnect_ban.py?ref=bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "patch": "@@ -66,6 +66,32 @@ def run_test(self):\n         self.nodes[1].clearbanned()\n         assert_equal(len(self.nodes[1].listbanned()), 0)\n \n+        self.log.info(\"setban removeall: ipv4 test\")\n+        self.nodes[1].setban(\"127.0.0.1/16\", \"add\")\n+        self.nodes[1].setban(\"127.0.0.1/24\", \"add\")\n+        self.nodes[1].setban(\"127.0.0.1/32\", \"add\")\n+        assert_equal(len(self.nodes[1].listbanned()), 3)\n+        assert_raises_rpc_error(-8, \"Error: setban removeall requires a single IP address\",\n+            self.nodes[1].setban, \"127.0.0.3/32\", \"removeall\")\n+        self.nodes[1].setban(\"127.0.0.3\", \"removeall\")\n+        listbanned_response = self.nodes[1].listbanned()\n+        assert_equal(len(listbanned_response), 1)\n+        assert_equal(listbanned_response[0][\"address\"], \"127.0.0.1/32\")\n+        self.nodes[1].clearbanned()\n+\n+        self.log.info(\"setban removeall: ipv6 test\")\n+        self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/96\", \"add\")\n+        self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/112\", \"add\")\n+        self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\", \"add\")\n+        assert_equal(len(self.nodes[1].listbanned()), 3)\n+        assert_raises_rpc_error(-8, \"Error: setban removeall requires a single IP address\",\n+            self.nodes[1].setban, \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64/128\", \"removeall\")\n+        self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64\", \"removeall\")\n+        listbanned_response = self.nodes[1].listbanned()\n+        assert_equal(len(listbanned_response), 1)\n+        assert_equal(listbanned_response[0][\"address\"], \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\")\n+        self.nodes[1].clearbanned()\n+\n         self.log.info(\"setban: test persistence across node restart\")\n         self.nodes[1].setban(\"127.0.0.0/32\", \"add\")\n         self.nodes[1].setban(\"127.0.0.0/24\", \"add\")"
      }
    ]
  },
  {
    "sha": "b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODRlZTQ3MzBjM2E3ZWY3ZDQwZTc4YjQ4ZTA0YTcyMjA1MDU0ZmNj",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2020-12-14T03:02:30Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-04-23T20:23:16Z"
      },
      "message": "[rpc] Add `listbanned ip` command",
      "tree": {
        "sha": "f76222a04ea68b7b3ab2e89b66a2486317bfad9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f76222a04ea68b7b3ab2e89b66a2486317bfad9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bfdb8a1b1c796bb5d28cb1e56222dfd99a77d674"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 55,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1a325924a4654618e163b2215e892dea17c04a5e",
        "filename": "doc/release-notes/release-notes-19825.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/doc/release-notes/release-notes-19825.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/doc/release-notes/release-notes-19825.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-19825.md?ref=b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
        "patch": "@@ -2,3 +2,4 @@\n - #19825 `setban` behavior changed: Banning a subnet that is a subset of a previous ban is a no-op instead of an rpc error.\n - #19825 `setban` behavior changed: Unbanning a non-banned subnet is a no-op instead of an rpc error.\n - #19825 `setban` behavior changed: Added `setban ip removeall` to remove all bans that affect an ip address.\n+- #19825 `listbanned ip` added: Lists ban entries that include ip."
      },
      {
        "sha": "a0b2a478e0504a6e1cbd6b50d7c687fa3c57223b",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
        "patch": "@@ -736,7 +736,9 @@ static RPCHelpMan listbanned()\n {\n     return RPCHelpMan{\"listbanned\",\n                 \"\\nList all manually banned IPs/Subnets.\\n\",\n-                {},\n+                {\n+                    {\"ip\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If IP is provided, only bans which include the IP will be returned.\"},\n+                },\n         RPCResult{RPCResult::Type::ARR, \"\", \"\",\n             {\n                 {RPCResult::Type::OBJ, \"\", \"\",\n@@ -761,8 +763,24 @@ static RPCHelpMan listbanned()\n \n     banmap_t banMap;\n     node.banman->GetBanned(banMap);\n-    const int64_t current_time{GetTime()};\n \n+    if (!request.params[0].isNull()) {\n+        CNetAddr netAddr;\n+        LookupHost(request.params[0].get_str(), netAddr, false);\n+        if (!netAddr.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Error: Invalid IP address\");\n+        }\n+        for (auto it = banMap.begin(); it != banMap.end();) {\n+            CSubNet ban_sub_net = it->first;\n+            if (!ban_sub_net.Match(netAddr)) {\n+                it = banMap.erase(it);\n+            } else {\n+                ++it;\n+            }\n+        }\n+    }\n+\n+    const int64_t current_time{GetTime()};\n     UniValue bannedAddresses(UniValue::VARR);\n     for (const auto& entry : banMap)\n     {"
      },
      {
        "sha": "d34b3558c9547b0d4e7d44b7a2987fbca9695e80",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
        "patch": "@@ -376,14 +376,26 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     adr = find_value(o1, \"address\");\n     BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n \n-    //removeall ipv4 test\n+    //listbanned + removeall ipv4 test\n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/16 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/32 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n     ar = r.get_array();\n     BOOST_CHECK_EQUAL(ar.size(), 3U);\n+    BOOST_CHECK_THROW(CallRPC(std::string(\"listbanned 127.0.0.3/32\")), std::runtime_error); // requires single ip, not subnet representation\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned 127.0.0.3\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 2U);\n+    for (size_t i = 0; i < ar.size(); i++) {\n+        o1 = ar[i].get_obj();\n+        auto address = find_value(o1, \"address\").get_str();\n+        if (address != \"127.0.0.0/16\" &&\n+            address != \"127.0.0.0/24\") {\n+            BOOST_FAIL(\"Unexpected address in banlist\");\n+        }\n+    }\n     BOOST_CHECK_THROW(CallRPC(std::string(\"setban 127.0.0.3/32 removeall\")), std::runtime_error); // cannot removeall subnets\n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 127.0.0.3 removeall\"))); // remove all subnets with 127.0.0.3\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n@@ -393,14 +405,26 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     adr = find_value(o1, \"address\");\n     BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/32\");\n \n-    //removeall ipv6 test\n+    //listbanned + removeall ipv6 test\n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/96 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/112 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n     ar = r.get_array();\n     BOOST_CHECK_EQUAL(ar.size(), 3U);\n+    BOOST_CHECK_THROW(CallRPC(std::string(\"listbanned 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64/128\")), std::runtime_error); // requires single ip, not subnet representation\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64\")));\n+    ar = r.get_array();\n+    BOOST_CHECK_EQUAL(ar.size(), 2U);\n+    for (size_t i = 0; i < ar.size(); i++) {\n+        o1 = ar[i].get_obj();\n+        auto address = find_value(o1, \"address\").get_str();\n+        if (address != \"2001:4d48:ac57:400:cacf:e9ff::/96\" &&\n+            address != \"2001:4d48:ac57:400:cacf:e9ff:fe1d:0/112\") {\n+            BOOST_FAIL(\"Unexpected address in banlist\");\n+        }\n+    }\n     BOOST_CHECK_THROW(CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64/128 removeall\")), std::runtime_error); // cannot removeall subnets\n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64 removeall\"))); // remove all subnets with 127.0.0.3\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));"
      },
      {
        "sha": "d0931eed60d9d07712af24b4f4c76ce09cdc1bb1",
        "filename": "test/functional/p2p_disconnect_ban.py",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/test/functional/p2p_disconnect_ban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84ee4730c3a7ef7d40e78b48e04a72205054fcc/test/functional/p2p_disconnect_ban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_disconnect_ban.py?ref=b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
        "patch": "@@ -66,11 +66,14 @@ def run_test(self):\n         self.nodes[1].clearbanned()\n         assert_equal(len(self.nodes[1].listbanned()), 0)\n \n-        self.log.info(\"setban removeall: ipv4 test\")\n+        self.log.info(\"setban listbanned and removeall: ipv4 test\")\n         self.nodes[1].setban(\"127.0.0.1/16\", \"add\")\n         self.nodes[1].setban(\"127.0.0.1/24\", \"add\")\n         self.nodes[1].setban(\"127.0.0.1/32\", \"add\")\n         assert_equal(len(self.nodes[1].listbanned()), 3)\n+        assert_raises_rpc_error(-8, \"Error: Invalid IP address\", self.nodes[1].listbanned, \"127.0.0.3/32\")\n+        relevant_bans = self.nodes[1].listbanned(\"127.0.0.3\")\n+        assert_equal({x[\"address\"] for x in relevant_bans}, {\"127.0.0.0/16\", \"127.0.0.0/24\"})\n         assert_raises_rpc_error(-8, \"Error: setban removeall requires a single IP address\",\n             self.nodes[1].setban, \"127.0.0.3/32\", \"removeall\")\n         self.nodes[1].setban(\"127.0.0.3\", \"removeall\")\n@@ -79,11 +82,14 @@ def run_test(self):\n         assert_equal(listbanned_response[0][\"address\"], \"127.0.0.1/32\")\n         self.nodes[1].clearbanned()\n \n-        self.log.info(\"setban removeall: ipv6 test\")\n+        self.log.info(\"setban listbanned and removeall: ipv6 test\")\n         self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/96\", \"add\")\n         self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/112\", \"add\")\n         self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\", \"add\")\n         assert_equal(len(self.nodes[1].listbanned()), 3)\n+        assert_raises_rpc_error(-8, \"Error: Invalid IP address\",\n+            self.nodes[1].listbanned, \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64/128\")\n+        relevant_bans = self.nodes[1].listbanned(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64\")\n         assert_raises_rpc_error(-8, \"Error: setban removeall requires a single IP address\",\n             self.nodes[1].setban, \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64/128\", \"removeall\")\n         self.nodes[1].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c64\", \"removeall\")"
      }
    ]
  },
  {
    "sha": "a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMmEzNmY5M2ZmOTU2M2QxNGJmMGJhMTExOGQ4ZGFhMGE5NjliNGM1",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-01-26T22:48:07Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-04-23T20:23:18Z"
      },
      "message": "[fuzz] removing unused fuzz test branches (invalidates banman seeds)",
      "tree": {
        "sha": "0b25ce226debca850a60362165fc5ddf3e598b86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b25ce226debca850a60362165fc5ddf3e598b86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b84ee4730c3a7ef7d40e78b48e04a72205054fcc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b84ee4730c3a7ef7d40e78b48e04a72205054fcc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6d042cd916c9c2cd5dcb3f89313e3fbda5e4f64e",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=a2a36f93ff9563d14bf0ba1118d8daa0a969b4c5",
        "patch": "@@ -48,7 +48,6 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n                 [&] {\n                     ban_man.ClearBanned();\n                 },\n-                [] {},\n                 [&] {\n                     ban_man.IsBanned(ConsumeNetAddr(fuzzed_data_provider));\n                 },\n@@ -62,7 +61,6 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n                 [&] {\n                     ban_man.DumpBanlist();\n                 },\n-                [] {},\n                 [&] {\n                     ban_man.Discourage(ConsumeNetAddr(fuzzed_data_provider));\n                 });"
      }
    ]
  }
]