[
  {
    "sha": "21f123db98389b44fe898efc18c819228798b99e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMWYxMjNkYjk4Mzg5YjQ0ZmU4OThlZmMxOGM4MTkyMjg3OThiOTll",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-04-26T01:39:17Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-04-26T01:48:29Z"
      },
      "message": "Expire bitcoind & bitcoin-qt 7-8 years after its last change\n\nCOPYRIGHT_YEAR + 8 years is used as the basis for expiration, to achieve a constantly-moving-forward expiration date.\n\nIt is assumed that within 7 years, the software will become obsolete beyond any reasonable person's continuing to use it.\nIf not hardforks, then at least softforks will occur during this time rendering it insecure. Not to mention an almost certainty of exploits.\n\nFurthermore, this enables a sort of certainty of old nodes ending by a deadline, turning any hardfork into a de facto softfork provided it is planned 8 years out.\n\nAs a precaution against abuse, the expiration can be disabled or extended with a debug-visibility \"softwareexpiry\" configuration option.\n\n(Thanks to Wang Chun for suggesting a similar proposal this is based on.)",
      "tree": {
        "sha": "d2d510c55e32077351320b122ca803decc5de44f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2d510c55e32077351320b122ca803decc5de44f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21f123db98389b44fe898efc18c819228798b99e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21f123db98389b44fe898efc18c819228798b99e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/21f123db98389b44fe898efc18c819228798b99e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21f123db98389b44fe898efc18c819228798b99e/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9828f9a9962c1bee5c343847030b9cfd87a40a5e"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 37,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cf482bbe979083e73365b2e82f0504f2fde94515",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f123db98389b44fe898efc18c819228798b99e/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f123db98389b44fe898efc18c819228798b99e/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=21f123db98389b44fe898efc18c819228798b99e",
        "patch": "@@ -18,6 +18,7 @@\n #include \"httpserver.h\"\n #include \"httprpc.h\"\n #include \"utilstrencodings.h\"\n+#include \"validation.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/filesystem.hpp>\n@@ -117,6 +118,11 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n+        if (IsThisSoftwareExpired(GetTime())) {\n+            fprintf(stderr, \"This software is expired, and may be out of consensus. You must choose to upgrade or override this expiration.\\n\");\n+            exit(EXIT_FAILURE);\n+        }\n+\n         // Command-line RPC\n         bool fCommandLine = false;\n         for (int i = 1; i < argc; i++)"
      },
      {
        "sha": "699b8a6003d573d4117de705f9ef6a20705a2807",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f123db98389b44fe898efc18c819228798b99e/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f123db98389b44fe898efc18c819228798b99e/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=21f123db98389b44fe898efc18c819228798b99e",
        "patch": "@@ -6,6 +6,8 @@\n #ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n #define BITCOIN_CONSENSUS_CONSENSUS_H\n \n+#include \"config/bitcoin-config.h\"  // for COPYRIGHT_YEAR\n+\n #include <stdint.h>\n \n /** The maximum allowed size for a serialized block, in bytes (only for buffer size limits) */\n@@ -28,4 +30,8 @@ enum {\n     LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n };\n \n+static const int64_t SECONDS_PER_YEAR = 31558060;\n+static const int POSIX_EPOCH_YEAR = 1970;\n+static const int64_t DEFAULT_SOFTWARE_EXPIRY = ((COPYRIGHT_YEAR - POSIX_EPOCH_YEAR) * SECONDS_PER_YEAR) + (SECONDS_PER_YEAR * 8);\n+\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "b173dbe635fd8dc7c57ca02d612a0c8581d30bb4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f123db98389b44fe898efc18c819228798b99e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f123db98389b44fe898efc18c819228798b99e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=21f123db98389b44fe898efc18c819228798b99e",
        "patch": "@@ -344,6 +344,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n     strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n+    if (showDebug) {\n+        strUsage += HelpMessageOpt(\"-softwareexpiry\", strprintf(\"Stop working after this POSIX timestamp (default: %s)\", DEFAULT_SOFTWARE_EXPIRY));\n+    }\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n #ifndef WIN32"
      },
      {
        "sha": "48ac0810c9cf8704d9e5cf55a7e193bb3611b505",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f123db98389b44fe898efc18c819228798b99e/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f123db98389b44fe898efc18c819228798b99e/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=21f123db98389b44fe898efc18c819228798b99e",
        "patch": "@@ -18,6 +18,7 @@\n #include \"platformstyle.h\"\n #include \"splashscreen.h\"\n #include \"utilitydialog.h\"\n+#include \"validation.h\"\n #include \"winshutdownmonitor.h\"\n \n #ifdef ENABLE_WALLET\n@@ -635,6 +636,11 @@ int main(int argc, char *argv[])\n     PaymentServer::ipcParseCommandLine(argc, argv);\n #endif\n \n+    if (IsThisSoftwareExpired(GetTime())) {\n+        QMessageBox::critical(0, QObject::tr(\"Software expired\"), QObject::tr(\"This software is expired, and may be out of consensus. You must choose to upgrade or override this expiration.\"));\n+        return EXIT_FAILURE;\n+    }\n+\n     QScopedPointer<const NetworkStyle> networkStyle(NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n     assert(!networkStyle.isNull());\n     // Allow for separate UI settings for testnets"
      },
      {
        "sha": "9e9229741e5380518fffb00c3b6b71d73a63b3b6",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f123db98389b44fe898efc18c819228798b99e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f123db98389b44fe898efc18c819228798b99e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=21f123db98389b44fe898efc18c819228798b99e",
        "patch": "@@ -32,6 +32,7 @@\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\"\n+#include \"utiltime.h\"\n #include \"validationinterface.h\"\n #include \"versionbits.h\"\n #include \"warnings.h\"\n@@ -2825,12 +2826,25 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n+bool IsThisSoftwareExpired(int64_t nTime)\n+{\n+    int64_t nSoftwareExpiry = GetArg(\"-softwareexpiry\", DEFAULT_SOFTWARE_EXPIRY);\n+    if (nSoftwareExpiry <= 0) {\n+        nSoftwareExpiry = std::numeric_limits<int64_t>::max();\n+    }\n+    return (nTime > nSoftwareExpiry);\n+}\n+\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n     if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n \n+    if (IsThisSoftwareExpired(block.nTime)) {\n+        return state.DoS(0, false, REJECT_INVALID, \"node-expired\", true, \"node software has expired\");\n+    }\n+\n     return true;\n }\n "
      },
      {
        "sha": "37e0aa3760942d40d71914f53dce2b793d2dfce5",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21f123db98389b44fe898efc18c819228798b99e/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21f123db98389b44fe898efc18c819228798b99e/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=21f123db98389b44fe898efc18c819228798b99e",
        "patch": "@@ -468,6 +468,8 @@ bool WriteBlockToDisk(const CBlock& block, CDiskBlockPos& pos, const CMessageHea\n bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos, const Consensus::Params& consensusParams);\n bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n \n+bool IsThisSoftwareExpired(int64_t nTime);\n+\n /** Functions for validating blocks and updating the block tree */\n \n /** Context-independent validity checks */"
      }
    ]
  }
]