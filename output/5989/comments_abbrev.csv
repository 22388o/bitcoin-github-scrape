jgarzik,2015-04-09T21:02:13Z,Any possibility to use the timer stuff being added in #5964 ?\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-91355456,91355456,
pstratem,2015-04-10T03:38:02Z,"@jgarzik maybe later, porting wont be difficult\n",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-91418767,91418767,
sipa,2015-04-11T09:55:13Z,Concept ACK. I love getting rid of the vSendTrickle logic...\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-91811198,91811198,
gavinandresen,2015-04-24T15:18:39Z,"I'm with @jgarzik: this could be much cleaner built on top of #5964. All of the pnode->nNext\* variables could go away; just schedule a task that takes a NodeId and Does The Right Thing at some (random) time in the future.\n\n(the tasks would lock cs_vNodes and do the NodeId to CNode\* lookup... probably don't need to optimize that lookup, looping through even a 1,000-peer vector isn't a significa",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-95964175,95964175,
sipa,2015-04-24T15:29:56Z,"Unsure. I don't think running the scheduled operations makes sense if there\nis nothing else to do for a node, and there almost always is, at which time\nwe already hold the necessary locks.\n\nSmall benefit, small cost.\n",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-95967446,95967446,
gavinandresen,2015-04-24T17:18:21Z,"@sipa : benefit would be clearer logic. I find the ""set a variable here, test it over there and then do something"" hard to review/follow.\n",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-95998172,95998172,
pstratem,2015-04-24T17:55:12Z,@gavinandresen As I said to @jgarzik it's easy enough to back port this logic into CSchedule.\n\nI would rather not tie the two PR's together.\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-96012620,96012620,
sipa,2015-04-25T22:06:10Z,"@gavinandresen Yes, that's the small benefit. The small cost is extra locking/work. Not opposed to it, but it's not as clear an advantage as replacing the several pieces of code we had that were already using their own thread. This one doesn't need it.\n",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-96286291,96286291,
sipa,2015-04-27T13:07:37Z,"Can you fix the integer overflow, and perhaps rebase on top of #6066?\n",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-96643520,96643520,
sipa,2015-05-05T13:25:12Z,Rebase please?\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-99076924,99076924,
sipa,2015-06-14T14:16:59Z,"Needs rebase, and fixing the integer overflow.\n",https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-111829865,111829865,
sipa,2015-06-14T14:38:27Z,Did a rebase and fix: https://github.com/sipa/bitcoin/commits/trickle_fix\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-111835675,111835675,
sipa,2015-07-09T20:57:09Z,@pstratem ping\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-120141993,120141993,
pstratem,2015-07-09T20:58:10Z,@sipa pong\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-120142203,120142203,
pstratem,2015-07-12T23:17:21Z,setAddrKnown was replaced with a CRollingBloomFilter d81cff32e50fe5f686f985d0af2e74219f328ed0\n\nGiven this it seems reasonable to slowly unset bits of the bloomfilter rather than clearing the filter entirely every 24 hours.\n\nThoughts?\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-120772064,120772064,
pstratem,2015-07-13T00:44:28Z,Scratch that. There's no need to clear the filter explicitly with the rolling bloom filter.\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-120776749,120776749,
dcousens,2015-10-30T08:52:05Z,@pstratem rebase/close?\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-152462865,152462865,
sipa,2015-10-30T15:49:50Z,rebase please...\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-152562747,152562747,
sipa,2015-11-28T15:09:05Z,See #7125.\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-160309049,160309049,
pstratem,2015-12-08T01:08:14Z,we have better ideas on how to achieve the properties of the trickle logic (such as mempool sync at random interval)\n,https://github.com/bitcoin/bitcoin/pull/5989#issuecomment-162721410,162721410,
Diapolo,2015-04-10T06:13:18Z,Could that magic number be defined somehwere as constant? IMHO it's used quite often in this pull.\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28124119,28124119,src/main.cpp
pstratem,2015-04-10T21:11:47Z,At a later date in a different PR\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28180845,28180845,src/main.cpp
sipa,2015-04-11T09:41:43Z,"In a random walk, it is hard to efficiently avoid processing the same element twice. If shuffling is slow, create an array of indexes, and shuffle that. Also, where does std::random_shuffle() get its randomness?\n\nSuggested code:\n\n```\nstd::vector<int> vRandInv;\nvRandInv.resize(pto->vInventoryToSend.size());\nfor (int i = 0; i < pto->vRandInv.size(); i++) vRandInv[i] = i;\nfor (int i = 0; i < ",https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28193784,28193784,src/main.cpp
sipa,2015-04-11T09:45:27Z,You already have an initialized nNowMicros variable. No need to request the current time again?\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28193804,28193804,src/main.cpp
sipa,2015-04-11T09:54:44Z,"Maybe it is more efficient to keep a separate vInventoryToSend for MSG_BLOCK and MSG_FILTERED_BLOCK, and only shuffle/process the normal one when nNextInvSend is exceeded.\n",https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28193842,28193842,src/main.cpp
pstratem,2015-04-11T14:41:12Z,There's a certain amount of error from caching the value.\n\nThe value is updated twice to reduce this error.\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28195448,28195448,src/main.cpp
sipa,2015-04-22T16:57:20Z,"If the difference in time between them is more than a few milliseconds, we have different problems :)\n",https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28892524,28892524,src/main.cpp
pstratem,2015-04-22T17:54:22Z,I want to avoid changing the logic of anything im not explicitly touching.\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28897696,28897696,src/main.cpp
sipa,2015-04-22T17:55:19Z,Fair enough.\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r28897797,28897797,src/main.cpp
sipa,2015-04-25T22:04:37Z,Integer overflow on this line. You probably want to cast to int64_t first.\n,https://github.com/bitcoin/bitcoin/pull/5989#discussion_r29104543,29104543,src/main.cpp
