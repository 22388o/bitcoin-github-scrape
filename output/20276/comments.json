[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719964483",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-719964483",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 719964483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTk2NDQ4Mw==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-31T17:36:46Z",
    "updated_at": "2020-10-31T17:36:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke not to beat this to death, but I added another test case in https://github.com/bitcoin/bitcoin/pull/20276/commits/71081df19a816b5c243a6bcccab9fb11888732fa. While convincing myself that I was using `miniWallet` properly, and not getting lucky with any passing tests, I wrote this and figured it was useful enough to include in the PR",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719964483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735251035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-735251035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 735251035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTI1MTAzNQ==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-28T16:17:12Z",
    "updated_at": "2020-11-28T16:17:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and should be ready to merge",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735251035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735296850",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-735296850",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 735296850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTI5Njg1MA==",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?u=a20996a145f1be613c7b0a57e75d36508572e29d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xB10C/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-28T22:10:33Z",
    "updated_at": "2020-11-28T22:10:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ACK ec66561d87881f54d64c8d633e267efe1b18b4ad\r\n\r\nOnly changes are:\r\n- https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532085685 addressed\r\n- formatting of long lines changed: removed line breaks (multiple lines -> one line)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735296850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736809643",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-736809643",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 736809643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjgwOTY0Mw==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T20:46:25Z",
    "updated_at": "2020-12-01T20:46:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "So since we don't use the wallet in mempool_expiry.py after this PR, does this close https://github.com/bitcoin/bitcoin/issues/19448? Also, since https://github.com/bitcoin/bitcoin/pull/19450 is described as a temp workaround would we revert it after this is merged? cc @hebasto \r\n\r\nCan someone explain why (only?) this test is triggering a data race though? Everything seems pretty simple so I'm confused why only this test would expose it. And I wonder if it's not a hint at an underlying problem?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736809643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736825467",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-736825467",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 736825467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjgyNTQ2Nw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T21:16:18Z",
    "updated_at": "2020-12-01T21:16:18Z",
    "author_association": "MEMBER",
    "body": "> So since we don't use the wallet in mempool_expiry.py after this PR, does this close #19448? Also, since #19450 is described as a temp workaround would we revert it after this is merged? cc @hebasto\r\n\r\nAs noted in #19448 OP other similar issues are reported: #19211 and #19417. I think we could just wait until Berkley DB will [no longer used](https://github.com/bitcoin/bitcoin/issues/20160) in Bitcoin Core.\r\n\r\n> Can someone explain why (only?) this test is triggering a data race though? Everything seems pretty simple so I'm confused why only this test would expose it. And I wonder if it's not a hint at an underlying problem?\r\n\r\nI believe something is wrong with Berkeley DB code, but did not check it myself.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736825467/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740942858",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-740942858",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 740942858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDk0Mjg1OA==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-08T19:59:59Z",
    "updated_at": "2020-12-08T19:59:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, I cleaned this up and got rid of all the fluff that wasn't related to the core of this PR. Should be ready to go now, will make sure I keep PRs focused in the future",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740942858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742345843",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-742345843",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 742345843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjM0NTg0Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T08:02:27Z",
    "updated_at": "2020-12-10T08:02:27Z",
    "author_association": "MEMBER",
    "body": "Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742345843/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745450465",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-745450465",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 745450465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTQ1MDQ2NQ==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-15T17:39:30Z",
    "updated_at": "2020-12-15T17:39:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "This has been squashed/rebased and is ready to go",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745450465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746315220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#issuecomment-746315220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20276",
    "id": 746315220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjMxNTIyMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-16T13:51:08Z",
    "updated_at": "2020-12-16T13:51:08Z",
    "author_association": "MEMBER",
    "body": "ACK 3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746315220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968",
    "pull_request_review_id": 521122396,
    "id": 515471968,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3MTk2OA==",
    "diff_hunk": "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 51,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Pretty sure this is not the parent change. miniwallet should have two outputs at this point. One leftover coinbase and one change. Coin selection favors the largest output, so the coinbase one.\r\n\r\nI might be wrong, but I think it could make sense to check that the child tx really has parent_txid as ancestor via the mempool rpc",
    "created_at": "2020-10-31T08:21:41Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515471968",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515471968"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515471968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272",
    "pull_request_review_id": 521129683,
    "id": 515483272,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4MzI3Mg==",
    "diff_hunk": "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 51,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added an assertion verifying this to make it clear https://github.com/bitcoin/bitcoin/pull/20276/commits/de4173bacd3a2ce6294515072cb725d5c1074cd8.\r\n\r\nOriginally I had:\r\n```python\r\nparent_utxo = next(filter(lambda utxo: utxo['txid'] == parent_txid, wallet._utxos))\r\n```\r\n\r\nbut then I realized `get_utxo()` would do this for me: ```\"\"\"Return the last utxo. Can be used to get the change output immediately after a send_self_transfer\"\"\"``` ",
    "created_at": "2020-10-31T10:39:51Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515483272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515483272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515483272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT",
    "in_reply_to_id": 515471968
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515507542",
    "pull_request_review_id": 521147141,
    "id": 515507542,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwNzU0Mg==",
    "diff_hunk": "@@ -27,54 +27,52 @@ class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = wallet.send_self_transfer(from_node=node)['txid']\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        parent_utxo = wallet.get_utxo()",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 51,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "98796bba8f394c323a22afcfc6c474c5f0c81f7f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, sorry my bad in that case. Though, the mempool check would still make sense.",
    "created_at": "2020-10-31T15:22:47Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515507542",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515507542"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r515507542"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515507542/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT",
    "in_reply_to_id": 515471968
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532085685",
    "pull_request_review_id": 540406220,
    "id": 532085685,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA4NTY4NQ==",
    "diff_hunk": "@@ -26,57 +26,62 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def sync_mempool(self):\n+        \"\"\"Expiry of mempool txs are only checked when a new tx is added to the mempool.\"\"\"",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 32,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "124c8ab5df85b606e00cfa666de6105e0620de00",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xB10C/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I found this function name and doc string not to be super clear. `sync_mempool()` could be confused with something like `self.sync_all()`. If you happen to re-touch this then maybe something along the lines of the suggestion below would make it clearer.\r\n\r\n```suggestion\r\n    def trigger_mempool_expiry(self):\r\n        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked when a new transaction is added to the mempool.\"\"\"\r\n```",
    "created_at": "2020-11-28T17:35:11Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532085685",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532085685"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532085685"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532085685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 31,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532090976",
    "pull_request_review_id": 540408879,
    "id": 532090976,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5MDk3Ng==",
    "diff_hunk": "@@ -26,57 +26,62 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def sync_mempool(self):\n+        \"\"\"Expiry of mempool txs are only checked when a new tx is added to the mempool.\"\"\"",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 32,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "124c8ab5df85b606e00cfa666de6105e0620de00",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for the suggestion, I made this change and squashed it into the commit",
    "created_at": "2020-11-28T18:21:49Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532090976",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532090976"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r532090976"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532090976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 31,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 32,
    "side": "RIGHT",
    "in_reply_to_id": 532085685
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534026969",
    "pull_request_review_id": 542656545,
    "id": 534026969,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAyNjk2OQ==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 36,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "can you explain why this is needed? I'd prefer not to call the method when it won't do anything anyway",
    "created_at": "2020-12-02T09:43:00Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534026969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534026969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534026969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534026969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534028904",
    "pull_request_review_id": 542656545,
    "id": 534028904,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAyODkwNA==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:\n+            pass\n \n     def test_transaction_expiry(self, timeout):\n-        \"\"\"Tests that a transaction expires after the expiry timeout and its\n-        children are removed as well.\"\"\"\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        self.wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = self.wallet.send_self_transfer(from_node=node)['txid']\n+        parent_utxo = self.wallet.get_utxo(txid=parent_txid)\n+        independent_utxo = self.wallet.get_utxo()\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 71,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "it looks like you are fixing up style in the same commit as refactors, cleanups and miniwallet changes\r\n\r\nIt would be easier to follow if the formatting changes, the `trigger_mempool_expiry`, and the miniwallet changes were all in separate commits, where each passed on its own and can be reviewed on its own",
    "created_at": "2020-12-02T09:45:43Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534028904",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534028904"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534028904"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534028904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534029583",
    "pull_request_review_id": 542656545,
    "id": 534029583,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAyOTU4Mw==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:\n+            pass\n \n     def test_transaction_expiry(self, timeout):\n-        \"\"\"Tests that a transaction expires after the expiry timeout and its\n-        children are removed as well.\"\"\"\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        self.wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = self.wallet.send_self_transfer(from_node=node)['txid']\n+        parent_utxo = self.wallet.get_utxo(txid=parent_txid)\n+        independent_utxo = self.wallet.get_utxo()\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2\n         node.setmocktime(half_expiry_time)\n-        child_txid = node.sendrawtransaction(child_signed)\n+\n+        # Broadcast the child transaction spending the parent transaction.\n+        child_txid = self.wallet.send_self_transfer(from_node=node, utxo_to_spend=parent_utxo)['txid']\n+        assert_equal(parent_txid, node.getmempoolentry(child_txid)['depends'][0])\n         self.log.info('Broadcast child transaction after {} hours.'.format(\n-            timedelta(seconds=(half_expiry_time-entry_time))))\n+            timedelta(seconds=(half_expiry_time - entry_time))))\n+\n+        # Broadcast another (independent) transaction.\n+        independent_txid = self.wallet.send_self_transfer(from_node=node, utxo_to_spend=independent_utxo)['txid']\n \n-        # Let most of the timeout elapse and check that the parent tx is still\n-        # in the mempool.\n-        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        # Let most of the timeout elapse and check that the parent tx is still in the mempool.\n+        nearly_expiry_time = entry_time + 3600 * timeout - 5\n         node.setmocktime(nearly_expiry_time)\n-        # Expiry of mempool transactions is only checked when a new transaction\n-        # is added to the to the mempool.\n-        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.trigger_mempool_expiry()\n         self.log.info('Test parent tx not expired after {} hours.'.format(\n-            timedelta(seconds=(nearly_expiry_time-entry_time))))\n+            timedelta(seconds=(nearly_expiry_time - entry_time))))\n         assert_equal(entry_time, node.getmempoolentry(parent_txid)['time'])\n \n-        # Transaction should be evicted from the mempool after the expiry time\n-        # has passed.\n-        expiry_time = entry_time + 60 * 60 * timeout + 5\n+        # Transaction should be evicted from the mempool after the expiry time has passed.\n+        expiry_time = entry_time + 3600 * timeout + 5\n         node.setmocktime(expiry_time)\n-        # Expiry of mempool transactions is only checked when a new transaction\n-        # is added to the to the mempool.\n-        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.trigger_mempool_expiry()\n         self.log.info('Test parent tx expiry after {} hours.'.format(\n-            timedelta(seconds=(expiry_time-entry_time))))\n-        assert_raises_rpc_error(-5, 'Transaction not in mempool',\n-                                node.getmempoolentry, parent_txid)\n+            timedelta(seconds=(expiry_time - entry_time))))\n+        assert_raises_rpc_error(-5, 'Transaction not in mempool', node.getmempoolentry, parent_txid)\n \n         # The child transaction should be removed from the mempool as well.\n         self.log.info('Test child tx is evicted as well.')\n-        assert_raises_rpc_error(-5, 'Transaction not in mempool',\n-                                node.getmempoolentry, child_txid)\n+        assert_raises_rpc_error(-5, 'Transaction not in mempool', node.getmempoolentry, child_txid)\n+\n+        # Check that the other tx is still in the mempool.\n+        self.log.info('Test other tx not expired after {} hours.'.format(\n+            timedelta(seconds=(expiry_time - half_expiry_time))))\n+        assert_equal(half_expiry_time, node.getmempoolentry(independent_txid)['time'])\n \n     def run_test(self):\n-        self.log.info('Test default mempool expiry timeout of %d hours.' %\n-                      DEFAULT_MEMPOOL_EXPIRY)\n+        self.log.info('Test default mempool expiry timeout of {} hours.'.format(DEFAULT_MEMPOOL_EXPIRY))",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 131,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "not sure about mixing all the formatting changes in with the other changes. In either case if you want to change this, you can use f-strings",
    "created_at": "2020-12-02T09:46:45Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534029583",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534029583"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534029583"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534029583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 96,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534056506",
    "pull_request_review_id": 542693675,
    "id": 534056506,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NjUwNg==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 36,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xB10C/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[`CTxMemPool::Expire(..)`](https://github.com/bitcoin/bitcoin/blob/cd720337fe9c27422fe8d507726ca8c79f52b4ba/src/txmempool.cpp#L945) is only called in [ `LimitMempoolSize(..)`](https://github.com/bitcoin/bitcoin/blob/f17e8ba3a17b6516a1b1fb7f45d506a339e99f90/src/validation.cpp#L331) which is only called in [`UpdateMempoolForReorg(..)`](https://github.com/bitcoin/bitcoin/blob/f17e8ba3a17b6516a1b1fb7f45d506a339e99f90/src/validation.cpp#L370) and [`MemPoolAccept::Finalize(..)`](https://github.com/bitcoin/bitcoin/blob/f17e8ba3a17b6516a1b1fb7f45d506a339e99f90/src/validation.cpp#L983). \r\n\r\nTo trigger the expiry of a transaction in the mempool we send an unrelated transaction. For the unrelated transaction `MemPoolAccept::Finalize(..)` is called which calls `LimitMempoolSize(..)` which calls `CTxMemPool::Expire(..)` on all timed-out transactions. If we don't send a new transaction, we can't test if a transaction is really removed.",
    "created_at": "2020-12-02T10:25:25Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534056506",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534056506"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534056506"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534056506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 534026969
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534077473",
    "pull_request_review_id": 542720645,
    "id": 534077473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NzQ3Mw==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 36,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I meant the `except: pass` part, sorry for being unclear :sweat_smile: ",
    "created_at": "2020-12-02T10:58:10Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534077473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534077473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534077473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534077473/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 534026969
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534391823",
    "pull_request_review_id": 543125778,
    "id": 534391823,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5MTgyMw==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 36,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There's a minor problem here, re the **unrelated transaction** part of @0xB10C's explanation. With `MiniWallet` if we don't do any extra bookkeeping in this test, and just do `self.wallet.send_self_transfer(from_node=node)` to trigger the mempool update, the (now expired) utxo will be spent. So this `send_self_transfer` will throw `test_framework.authproxy.JSONRPCException: mempool full (-26)`\r\n\r\nWe'd need to ensure that we don't spend one of the expired UTXOs when we want to `trigger_mempool_expiry` if we don't catch the Exception. ie:\r\n```C++\r\nnode.setmocktime(expiry_time)\r\n# Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked when a new transaction is added to the mempool.\r\nnew_utxo = self.wallet.get_utxo(txid=independent_txid)\r\nnew_txid = self.wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=new_utxo)['txid']\r\n# parent_txid has now been evicted from the mempool.\r\n```\r\n\r\nBecause the mempool is still updated if `send_self_transfer` fails, I thought it was cleaner to catch the Exception rather than have extra logic (that's unrelated to what we're testing) to ensure we're not spending expired UTXOs in this trigger.\r\n\r\nMaybe I need to add a comment along these lines in the `except: pass` to make this clear? I'm realizing this is more confusing than I thought",
    "created_at": "2020-12-02T18:32:27Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534391823",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534391823"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534391823"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534391823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 534026969
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534395089",
    "pull_request_review_id": 543129882,
    "id": 534395089,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5NTA4OQ==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:\n+            pass\n \n     def test_transaction_expiry(self, timeout):\n-        \"\"\"Tests that a transaction expires after the expiry timeout and its\n-        children are removed as well.\"\"\"\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.\n+        self.wallet.generate(2)\n+        node.generate(100)\n \n         # Send a parent transaction that will expire.\n-        parent_address = node.getnewaddress()\n-        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+        parent_txid = self.wallet.send_self_transfer(from_node=node)['txid']\n+        parent_utxo = self.wallet.get_utxo(txid=parent_txid)\n+        independent_utxo = self.wallet.get_utxo()\n \n         # Set the mocktime to the arrival time of the parent transaction.\n         entry_time = node.getmempoolentry(parent_txid)['time']\n         node.setmocktime(entry_time)\n \n-        # Create child transaction spending the parent transaction\n-        vout = find_vout_for_address(node, parent_txid, parent_address)\n-        inputs = [{'txid': parent_txid, 'vout': vout}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        child_raw = node.createrawtransaction(inputs, outputs)\n-        child_signed = node.signrawtransactionwithwallet(child_raw)['hex']\n-\n-        # Let half of the timeout elapse and broadcast the child transaction.\n-        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        # Let half of the timeout elapse.\n+        half_expiry_time = entry_time + 3600 * timeout // 2",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 71,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah yeah, I did too much extra stuff in this PR. I'm gonna undo all this unrelated style/refactor stuff. Will undo the string formatting changes as well",
    "created_at": "2020-12-02T18:37:46Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534395089",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534395089"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534395089"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534395089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT",
    "in_reply_to_id": 534028904
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534850841",
    "pull_request_review_id": 543684775,
    "id": 534850841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1MDg0MQ==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 36,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand why spending an non-existent coin will throw 'mempool full' (not missing-inputs) and how that is going to trigger mempool expiry of other txs.\r\n\r\nAnyway, I guess the options are:\r\n\r\n* Add a comment\r\n* Remember the previous utxo (not expired) and use that\r\n* Drop utxos that are about to expire from the wallet (might require fresh coins later on in the script)\r\n* Something else?",
    "created_at": "2020-12-03T07:54:52Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534850841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534850841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r534850841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534850841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 534026969
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538766997",
    "pull_request_review_id": 547584603,
    "id": 538766997,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc2Njk5Nw==",
    "diff_hunk": "@@ -26,73 +26,78 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def trigger_mempool_expiry(self):\n+        \"\"\"Broadcasts an unrelated transaction as the expiry of the transactions in the mempool is only checked\n+        when a new transaction is added to the mempool.\"\"\"\n+        try:\n+            self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        except JSONRPCException:",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 36,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "ec66561d87881f54d64c8d633e267efe1b18b4ad",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So I figured out why there were some weird errors that didn't make sense as you point out. After the first subtest some UTXOs were hanging around in the mempool, that ended up being used in the second subtest because MiniWallet sorts for the largest UTXOs. That's why I ensure the mempool is clear at the beginning of each subtest run now.",
    "created_at": "2020-12-08T20:01:29Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r538766997",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538766997"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r538766997"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538766997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 534026969
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539138125",
    "pull_request_review_id": 547981842,
    "id": 539138125,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEzODEyNQ==",
    "diff_hunk": "@@ -26,44 +26,48 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-\n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        self.setup_clean_chain = True\n \n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Ensure the mempool starts empty.\n+        node.generate(1)",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 26,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "7a05d47cdf0cf3b2787c4583c4b920f98351b0b3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why is this needed? You are generating a block in the next line, which cleares the mempool",
    "created_at": "2020-12-09T09:19:05Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539138125",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539138125"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539138125"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539138125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 38,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539139300",
    "pull_request_review_id": 547981842,
    "id": 539139300,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEzOTMwMA==",
    "diff_hunk": "@@ -26,44 +26,48 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-\n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        self.setup_clean_chain = True\n \n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Ensure the mempool starts empty.\n+        node.generate(1)\n+        assert_equal(set(node.getrawmempool()), set())\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.",
    "path": "test/functional/mempool_expiry.py",
    "position": 25,
    "original_position": 28,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "7a05d47cdf0cf3b2787c4583c4b920f98351b0b3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this comment is not true. The \"trigger\" txs are chained txs. More inputs are needed.",
    "created_at": "2020-12-09T09:20:44Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539139300",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539139300"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539139300"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539139300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 37,
    "original_line": 37,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539651046",
    "pull_request_review_id": 548613093,
    "id": 539651046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MTA0Ng==",
    "diff_hunk": "@@ -26,44 +26,48 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-\n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        self.setup_clean_chain = True\n \n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Ensure the mempool starts empty.\n+        node.generate(1)",
    "path": "test/functional/mempool_expiry.py",
    "position": null,
    "original_position": 26,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "7a05d47cdf0cf3b2787c4583c4b920f98351b0b3",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "TLDR; I made everything explicit in this commit https://github.com/bitcoin/bitcoin/pull/20276/commits/4b99dc5ef62fe1d1a6e23d71f55570dc14aac9fa because I realized this is all confusing. Thanks for pointing this out. \r\n\r\nIt was because fees from the transactions in the first test run (that are still in the mempool) `self.test_transaction_expiry(DEFAULT_MEMPOOL_EXPIRY)` get included in `MiniWallet`'s utxo set when this runs for the next sub-test `self.test_transaction_expiry(CUSTOM_MEMPOOL_EXPIRY)` if the first block is generated with `self.wallet.generate`\r\n\r\nThen because of the way `MiniWallet` sorts UTXOs based on which is largest it means we end up using an expired transaction for the \"trigger\" transaction, and get a weird error in the 2nd test run, but not the first - which threw me for a loop",
    "created_at": "2020-12-09T21:12:23Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539651046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539651046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539651046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539651046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 38,
    "side": "RIGHT",
    "in_reply_to_id": 539138125
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539651684",
    "pull_request_review_id": 548613868,
    "id": 539651684,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MTY4NA==",
    "diff_hunk": "@@ -26,44 +26,48 @@\n class MempoolExpiryTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-\n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+        self.setup_clean_chain = True\n \n     def test_transaction_expiry(self, timeout):\n         \"\"\"Tests that a transaction expires after the expiry timeout and its\n         children are removed as well.\"\"\"\n         node = self.nodes[0]\n+        self.wallet = MiniWallet(node)\n+\n+        # Ensure the mempool starts empty.\n+        node.generate(1)\n+        assert_equal(set(node.getrawmempool()), set())\n+        # Add enough mature utxos to the wallet so that all txs spend confirmed coins.",
    "path": "test/functional/mempool_expiry.py",
    "position": 25,
    "original_position": 28,
    "commit_id": "3b064fcb9dd3df6c438a440f0fea86e9cf7b5f57",
    "original_commit_id": "7a05d47cdf0cf3b2787c4583c4b920f98351b0b3",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's a good point, addressed in most recent commit",
    "created_at": "2020-12-09T21:13:28Z",
    "updated_at": "2020-12-10T16:17:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539651684",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539651684"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20276#discussion_r539651684"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20276"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539651684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 37,
    "original_line": 37,
    "side": "RIGHT",
    "in_reply_to_id": 539139300
  }
]