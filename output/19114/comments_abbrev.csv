practicalswift,2020-05-30 14:48:00,"Concept ACK: [Prefer class enums over “plain” enums](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class) (C++ Core Guidelines)\n\nThese are the remaining non-class enums that might be worth investigating too:\n\n```\n$ git grep '^enum [^c][^l][^(]*$' -- ""*.h"" ""*.cpp"" "":(exclude)src/univalue/"" \n      "":(exclude)src/leveldb/"" | cut -f2 -d' ' | cut -f1 -d: | sort -u | tr ",https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-636340853,636340853,
hebasto,2020-05-30 15:09:46,"Concept ACK.\nAlso: #17877",https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-636343510,636343510,
MarcoFalke,2020-05-30 15:34:09,@practicalswift It might be best to open a new brainstorming issue for discussion about those. I think enum flags can not (or should not?) be switched to `enum class`.,https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-636347368,636347368,
DrahtBot,2020-05-30 21:38:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19326 (Simplify hash.h interface using Spans by sipa)\n* #15294 ([moveonly] wallet: Extract RipeMd160 by Empact)\n* #1352",https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-636388596,636388596,
MarcoFalke,2020-06-21 10:45:21,"Rebased due to merge conflict in adjacent line. Can be trivially re-ACKed with git range-diff\n\n\n<!-- \n\nChangeType\n\nDisconnectResult",https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-647111021,647111021,
practicalswift,2020-06-21 21:18:19,ACK fa32adf9dc25540ad27f5b82654c7057d7738627 -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-647182944,647182944,
hebasto,2020-06-22 08:59:21,@MarcoFalke from which key-server I could receive your non-expired key to verify commit signatures?,https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-647383886,647383886,
MarcoFalke,2020-06-28 12:24:52,@hebasto See #18385 ,https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-650745429,650745429,
hebasto,2020-06-28 12:59:46,"@MarcoFalke \n> @hebasto See #18385\n\nThanks. It was helpful!",https://github.com/bitcoin/bitcoin/pull/19114#issuecomment-650752109,650752109,
hebasto,2020-05-30 15:27:38,"nit:\n```suggestion\n * type is designated as TxoutType::NULL_DATA.\n```",https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432863795,432863795,src/script/standard.h
hebasto,2020-05-30 15:27:53,"nit:\n```suggestion\n/** Maximum size of TxoutType::NULL_DATA scripts that this node considers standard. */\n```",https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432863817,432863817,src/script/standard.h
hebasto,2020-05-30 15:32:03,"nit:\n```suggestion\n * @return                     The script type. TxoutType::NONSTANDARD represents a failed solve.\n```",https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432864135,432864135,src/script/standard.h
hebasto,2020-05-30 15:34:09,"nit:\n```suggestion\n    } // no default case, so the compiler can warn about missing cases\n```\nas described in [Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures)",https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432864255,432864255,src/script/standard.cpp
MarcoFalke,2020-05-30 15:54:59,I think in comments we don't need to be overly verbose. Especially not in the file that defines these values. I think the comment is clearer as is.,https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432865729,432865729,src/script/standard.h
MarcoFalke,2020-05-30 15:55:06,I think in comments we don't need to be overly verbose. Especially not in the file that defines these values. I think the comment is clearer as is.,https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432865750,432865750,src/script/standard.h
MarcoFalke,2020-05-30 15:55:37,I think in comments we don't need to be overly verbose. Especially not in the file that defines these values and where the return type is mentioned one line below the comment. I think the comment is clearer as is.,https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432865785,432865785,src/script/standard.h
MarcoFalke,2020-05-30 16:02:15,Thanks. Done,https://github.com/bitcoin/bitcoin/pull/19114#discussion_r432866230,432866230,src/script/standard.cpp
