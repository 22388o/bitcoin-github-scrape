[
  {
    "sha": "2887bffcfdc138f53c60091ab2906790971c9af5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODg3YmZmY2ZkYzEzOGY1M2M2MDA5MWFiMjkwNjc5MDk3MWM5YWY1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-09T16:17:23Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-28T20:08:13Z"
      },
      "message": "Update coding style and add .clang-format",
      "tree": {
        "sha": "7b29f1b4f629c51522a95aa77726bff3e6ff1ac3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b29f1b4f629c51522a95aa77726bff3e6ff1ac3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2887bffcfdc138f53c60091ab2906790971c9af5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2887bffcfdc138f53c60091ab2906790971c9af5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2887bffcfdc138f53c60091ab2906790971c9af5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2887bffcfdc138f53c60091ab2906790971c9af5/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f9de17ec2f3e22fe9d96557e328af836a3590660",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9de17ec2f3e22fe9d96557e328af836a3590660",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f9de17ec2f3e22fe9d96557e328af836a3590660"
      }
    ],
    "stats": {
      "total": 127,
      "additions": 82,
      "deletions": 45
    },
    "files": [
      {
        "sha": "ceed8c18b40fb1f76d084b592e70fcc64b294413",
        "filename": "doc/coding.md",
        "status": "modified",
        "additions": 31,
        "deletions": 45,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2887bffcfdc138f53c60091ab2906790971c9af5/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2887bffcfdc138f53c60091ab2906790971c9af5/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=2887bffcfdc138f53c60091ab2906790971c9af5",
        "patch": "@@ -1,29 +1,17 @@\n Coding\n ====================\n \n-Please be consistent with the existing coding style.\n-\n-Block style:\n-```c++\n-    bool Function(char* psz, int n)\n-    {\n-        // Comment summarising what this section of code does\n-        for (int i = 0; i < n; i++)\n-        {\n-            // When something fails, return early\n-            if (!Something())\n-                return false;\n-            ...\n-        }\n-\n-        // Success return is usually at the end\n-        return true;\n-    }\n-```\n-- ANSI/Allman block style\n-- 4 space indenting, no tabs\n-- No extra spaces inside parenthesis; please don't do ( this )\n-- No space after function names, one space after if, for and while\n+Various coding styles have been used during the history of the codebase,\n+and the result is not very consistent. However, we're now trying to converge to\n+a single style, so please use it in new code. Old code will be converted\n+gradually.\n+- Basic rules specified in src/.clang-format. Use a recent clang-format-3.5 to format automatically.\n+  - Braces on new lines for namespaces, classes, functions, methods.\n+  - Braces on the same line for everything else.\n+  - 4 space indentation (no tabs) for every block except namespaces.\n+  - No indentation for public/protected/private or for namespaces.\n+  - No extra spaces inside parenthesis; don't do ( this )\n+  - No space after function names; one space after if, for and while.\n - Includes need to be ordered alphabetically, separate own and foreign headers with a new-line (example key.cpp):\n ```c++\n #include \"key.h\"\n@@ -38,31 +26,29 @@ Block style:\n class CAlpha;\n class CBeta;\n ```\n-- When using namespace keyword use the following form:\n-```c++\n-namespace Foo {\n \n-...\n+Block style example:\n+```c++\n+namespace foo\n+{\n+class Class\n+{\n+    bool Function(char* psz, int n)\n+    {\n+        // Comment summarising what this section of code does\n+        for (int i = 0; i < n; i++) {\n+            // When something fails, return early\n+            if (!Something())\n+                return false;\n+            ...\n+        }\n \n-} // Foo\n+        // Success return is usually at the end\n+        return true;\n+    }\n+}\n+}\n ```\n-Variable names begin with the type in lowercase, like nSomeVariable.\n-Please don't put the first word of the variable name in lowercase like\n-someVariable.\n-\n-Common types:\n-\n-    n       integer number: short, unsigned short, int, unsigned int, int64, uint64, sometimes char if used as a number\n-    d       double, float\n-    f       flag\n-    hash    uint256\n-    p       pointer or array, one p for each level of indirection\n-    psz     pointer to null terminated string\n-    str     string object\n-    v       vector or similar list objects\n-    map     map or multimap\n-    set     set or multiset\n-    bn      CBigNum\n \n Doxygen comments\n -----------------"
      },
      {
        "sha": "226a15d185af4806bd32f22aead1e6a7367c7916",
        "filename": "src/.clang-format",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2887bffcfdc138f53c60091ab2906790971c9af5/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2887bffcfdc138f53c60091ab2906790971c9af5/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=2887bffcfdc138f53c60091ab2906790971c9af5",
        "patch": "@@ -0,0 +1,51 @@\n+AccessModifierOffset: -4\n+AlignEscapedNewlinesLeft: true\n+AlignTrailingComments: true\n+AllowAllParametersOfDeclarationOnNextLine: false\n+AllowShortBlocksOnASingleLine: false\n+AllowShortFunctionsOnASingleLine: All\n+AllowShortIfStatementsOnASingleLine: false\n+AllowShortLoopsOnASingleLine: false\n+AlwaysBreakBeforeMultilineStrings: false\n+AlwaysBreakTemplateDeclarations: true\n+BinPackParameters: false\n+BreakBeforeBinaryOperators: false\n+BreakBeforeBraces: Linux\n+BreakBeforeTernaryOperators: false\n+BreakConstructorInitializersBeforeComma: false\n+ColumnLimit:     0\n+CommentPragmas:  '^ IWYU pragma:'\n+ConstructorInitializerAllOnOneLineOrOnePerLine: false\n+ConstructorInitializerIndentWidth: 4\n+ContinuationIndentWidth: 4\n+Cpp11BracedListStyle: true\n+DerivePointerAlignment: false\n+DisableFormat:   false\n+ForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH, BOOST_REVERSE_FOREACH ]\n+IndentCaseLabels: false\n+IndentFunctionDeclarationAfterType: false\n+IndentWidth:     4\n+KeepEmptyLinesAtTheStartOfBlocks: false\n+Language:        Cpp\n+MaxEmptyLinesToKeep: 2\n+NamespaceIndentation: None\n+ObjCSpaceAfterProperty: false\n+ObjCSpaceBeforeProtocolList: false\n+PenaltyBreakBeforeFirstCallParameter: 1\n+PenaltyBreakComment: 300\n+PenaltyBreakFirstLessLess: 120\n+PenaltyBreakString: 1000\n+PenaltyExcessCharacter: 1000000\n+PenaltyReturnTypeOnItsOwnLine: 200\n+PointerAlignment: Left\n+SpaceBeforeAssignmentOperators: true\n+SpaceBeforeParens: ControlStatements\n+SpaceInEmptyParentheses: false\n+SpacesBeforeTrailingComments: 1\n+SpacesInAngles:  false\n+SpacesInContainerLiterals: true\n+SpacesInCStyleCastParentheses: false\n+SpacesInParentheses: false\n+Standard:        Cpp03\n+TabWidth:        8\n+UseTab:          Never"
      }
    ]
  }
]