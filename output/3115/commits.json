[
  {
    "sha": "fe5234645036178a540fdd4166b26493b0b40529",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTUyMzQ2NDUwMzYxNzhhNTQwZmRkNDE2NmIyNjQ5M2IwYjQwNTI5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-19T15:21:49Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-26T12:49:47Z"
      },
      "message": "Do not treat fFromMe transaction differently when broadcasting",
      "tree": {
        "sha": "37e7d06501542b28ebe30c4d44ee49a2ae8b7e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37e7d06501542b28ebe30c4d44ee49a2ae8b7e11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe5234645036178a540fdd4166b26493b0b40529",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe5234645036178a540fdd4166b26493b0b40529",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe5234645036178a540fdd4166b26493b0b40529",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe5234645036178a540fdd4166b26493b0b40529/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d09b3e8b0218169ab7ad2aa787c43ea11bc7060",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d09b3e8b0218169ab7ad2aa787c43ea11bc7060",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d09b3e8b0218169ab7ad2aa787c43ea11bc7060"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 0,
      "deletions": 35
    },
    "files": [
      {
        "sha": "f9c49a6f341b6277de745304d9c0c7889a4cce08",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe5234645036178a540fdd4166b26493b0b40529/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe5234645036178a540fdd4166b26493b0b40529/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=fe5234645036178a540fdd4166b26493b0b40529",
        "patch": "@@ -97,16 +97,6 @@ void UnregisterAllWallets()\n     setpwalletRegistered.clear();\n }\n \n-// get the wallet transaction with the given hash (if it exists)\n-bool static GetTransaction(const uint256& hashTx, CWalletTx& wtx)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        if (pwallet->GetTransaction(hashTx,wtx))\n-            return true;\n-    return false;\n-}\n-\n // erases transaction with the given hash from all wallets\n void static EraseFromWallets(uint256 hash)\n {\n@@ -4241,15 +4231,6 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     hashRand = Hash(BEGIN(hashRand), END(hashRand));\n                     bool fTrickleWait = ((hashRand & 3) != 0);\n \n-                    // always trickle our own transactions\n-                    if (!fTrickleWait)\n-                    {\n-                        CWalletTx wtx;\n-                        if (GetTransaction(inv.hash, wtx))\n-                            if (wtx.fFromMe)\n-                                fTrickleWait = true;\n-                    }\n-\n                     if (fTrickleWait)\n                     {\n                         vInvWait.push_back(inv);"
      },
      {
        "sha": "e37a8357820f2eaec683824a93414498bcf22876",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe5234645036178a540fdd4166b26493b0b40529/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe5234645036178a540fdd4166b26493b0b40529/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=fe5234645036178a540fdd4166b26493b0b40529",
        "patch": "@@ -1498,20 +1498,6 @@ void CWallet::PrintWallet(const CBlock& block)\n     LogPrintf(\"\\n\");\n }\n \n-bool CWallet::GetTransaction(const uint256 &hashTx, CWalletTx& wtx)\n-{\n-    {\n-        LOCK(cs_wallet);\n-        map<uint256, CWalletTx>::iterator mi = mapWallet.find(hashTx);\n-        if (mi != mapWallet.end())\n-        {\n-            wtx = (*mi).second;\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)\n {\n     if (fFileBacked)"
      },
      {
        "sha": "179709a15ad6eec67c3edffecea82f25f65e5d02",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe5234645036178a540fdd4166b26493b0b40529/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe5234645036178a540fdd4166b26493b0b40529/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=fe5234645036178a540fdd4166b26493b0b40529",
        "patch": "@@ -319,8 +319,6 @@ class CWallet : public CCryptoKeyStore\n         return setKeyPool.size();\n     }\n \n-    bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n-\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower"
      }
    ]
  },
  {
    "sha": "e010af7089b18af838b74a4dc7908885c1600d13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDEwYWY3MDg5YjE4YWY4MzhiNzRhNGRjNzkwODg4NWMxNjAwZDEz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-19T15:30:11Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-26T12:49:47Z"
      },
      "message": "Remove broken PrintWallet functionality",
      "tree": {
        "sha": "61a8eb728c2707d7e38015f7af2a5998d14e4b7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61a8eb728c2707d7e38015f7af2a5998d14e4b7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e010af7089b18af838b74a4dc7908885c1600d13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e010af7089b18af838b74a4dc7908885c1600d13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e010af7089b18af838b74a4dc7908885c1600d13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e010af7089b18af838b74a4dc7908885c1600d13/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe5234645036178a540fdd4166b26493b0b40529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe5234645036178a540fdd4166b26493b0b40529",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe5234645036178a540fdd4166b26493b0b40529"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 0,
      "deletions": 25
    },
    "files": [
      {
        "sha": "6ec261b5f8e7ba1898917f74d7976bf4772e1228",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e010af7089b18af838b74a4dc7908885c1600d13/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e010af7089b18af838b74a4dc7908885c1600d13/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e010af7089b18af838b74a4dc7908885c1600d13",
        "patch": "@@ -129,14 +129,6 @@ void static UpdatedTransaction(const uint256& hashTx)\n         pwallet->UpdatedTransaction(hashTx);\n }\n \n-// dump all wallets\n-void static PrintWallets(const CBlock& block)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->PrintWallet(block);\n-}\n-\n // notify wallets about an incoming inventory (for request counts)\n void static Inventory(const uint256& hash)\n {\n@@ -3031,8 +3023,6 @@ void PrintBlockTree()\n             DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", block.GetBlockTime()).c_str(),\n             block.vtx.size());\n \n-        PrintWallets(block);\n-\n         // put the main time-chain first\n         vector<CBlockIndex*>& vNext = mapNext[pindex];\n         for (unsigned int i = 0; i < vNext.size(); i++)"
      },
      {
        "sha": "24813c54ec16970ad6ac75bacb5336e8b91b8884",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e010af7089b18af838b74a4dc7908885c1600d13/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e010af7089b18af838b74a4dc7908885c1600d13/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=e010af7089b18af838b74a4dc7908885c1600d13",
        "patch": "@@ -1485,19 +1485,6 @@ bool CWallet::DelAddressBook(const CTxDestination& address)\n     return CWalletDB(strWalletFile).EraseName(CBitcoinAddress(address).ToString());\n }\n \n-void CWallet::PrintWallet(const CBlock& block)\n-{\n-    {\n-        LOCK(cs_wallet);\n-        if (mapWallet.count(block.vtx[0].GetHash()))\n-        {\n-            CWalletTx& wtx = mapWallet[block.vtx[0].GetHash()];\n-            LogPrintf(\"    mine:  %d  %d  %\"PRI64d\"\", wtx.GetDepthInMainChain(), wtx.GetBlocksToMaturity(), wtx.GetCredit());\n-        }\n-    }\n-    LogPrintf(\"\\n\");\n-}\n-\n bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)\n {\n     if (fFileBacked)"
      },
      {
        "sha": "7598efc1abe8d47c3dfacd6a02950056fccdd698",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e010af7089b18af838b74a4dc7908885c1600d13/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e010af7089b18af838b74a4dc7908885c1600d13/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=e010af7089b18af838b74a4dc7908885c1600d13",
        "patch": "@@ -302,8 +302,6 @@ class CWallet : public CCryptoKeyStore\n \n     void UpdatedTransaction(const uint256 &hashTx);\n \n-    void PrintWallet(const CBlock& block);\n-\n     void Inventory(const uint256 &hash)\n     {\n         {"
      }
    ]
  },
  {
    "sha": "00588c3fac4822d42ffde46ca55c029a74c378ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDU4OGMzZmFjNDgyMmQ0MmZmZGU0NmNhNTVjMDI5YTc0YzM3OGVl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-19T16:34:06Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-26T12:51:46Z"
      },
      "message": "Use boost signals for callbacks from main to wallet",
      "tree": {
        "sha": "9e3d048531cae00793f32b9e4a05116986cc1f58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e3d048531cae00793f32b9e4a05116986cc1f58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00588c3fac4822d42ffde46ca55c029a74c378ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00588c3fac4822d42ffde46ca55c029a74c378ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00588c3fac4822d42ffde46ca55c029a74c378ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00588c3fac4822d42ffde46ca55c029a74c378ee/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e010af7089b18af838b74a4dc7908885c1600d13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e010af7089b18af838b74a4dc7908885c1600d13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e010af7089b18af838b74a4dc7908885c1600d13"
      }
    ],
    "stats": {
      "total": 173,
      "additions": 77,
      "deletions": 96
    },
    "files": [
      {
        "sha": "b84c53ade15e747fbb44597e67d8ba68b9e706dd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 69,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00588c3fac4822d42ffde46ca55c029a74c378ee/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00588c3fac4822d42ffde46ca55c029a74c378ee/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=00588c3fac4822d42ffde46ca55c029a74c378ee",
        "patch": "@@ -74,75 +74,52 @@ int64 nTransactionFee = 0;\n \n // These functions dispatch to one or all registered wallets\n \n-\n-void RegisterWallet(CWallet* pwalletIn)\n-{\n-    {\n-        LOCK(cs_setpwalletRegistered);\n-        setpwalletRegistered.insert(pwalletIn);\n-    }\n-}\n-\n-void UnregisterWallet(CWallet* pwalletIn)\n-{\n-    {\n-        LOCK(cs_setpwalletRegistered);\n-        setpwalletRegistered.erase(pwalletIn);\n-    }\n-}\n-\n-void UnregisterAllWallets()\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    setpwalletRegistered.clear();\n+namespace {\n+struct CMainSignals {\n+    // Notifies listeners of updated transaction data (passing hash, transaction, and optionally the block it is found in.\n+    boost::signals2::signal<void (const uint256 &, const CTransaction &, const CBlock *)> SyncTransaction;\n+    // Notifies listeners of an erased transaction (currently disabled, requires transaction replacement).\n+    boost::signals2::signal<void (const uint256 &)> EraseTransaction;\n+    // Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible).\n+    boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;\n+    // Notifies listeners of a new active block chain.\n+    boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;\n+    // Notifies listeners about an inventory item being seen on the network.\n+    boost::signals2::signal<void (const uint256 &)> Inventory;\n+    // Tells listeners to broadcast their data.\n+    boost::signals2::signal<void ()> Broadcast;\n+} g_signals;\n }\n \n-// erases transaction with the given hash from all wallets\n-void static EraseFromWallets(uint256 hash)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->EraseFromWallet(hash);\n+void RegisterWallet(CWalletInterface* pwalletIn) {\n+    g_signals.SyncTransaction.connect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2, _3));\n+    g_signals.EraseTransaction.connect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n+    g_signals.UpdatedTransaction.connect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n+    g_signals.SetBestChain.connect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n+    g_signals.Inventory.connect(boost::bind(&CWalletInterface::Inventory, pwalletIn, _1));\n+    g_signals.Broadcast.connect(boost::bind(&CWalletInterface::ResendWalletTransactions, pwalletIn));\n }\n \n-// make sure all wallets know about the given transaction, in the given block\n-void SyncWithWallets(const uint256 &hash, const CTransaction& tx, const CBlock* pblock, bool fUpdate)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->AddToWalletIfInvolvingMe(hash, tx, pblock, fUpdate);\n+void UnregisterWallet(CWalletInterface* pwalletIn) {\n+    g_signals.Broadcast.disconnect(boost::bind(&CWalletInterface::ResendWalletTransactions, pwalletIn));\n+    g_signals.Inventory.disconnect(boost::bind(&CWalletInterface::Inventory, pwalletIn, _1));\n+    g_signals.SetBestChain.disconnect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n+    g_signals.UpdatedTransaction.disconnect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n+    g_signals.EraseTransaction.disconnect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n+    g_signals.SyncTransaction.disconnect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2, _3));\n }\n \n-// notify wallets about a new best chain\n-void static SetBestChain(const CBlockLocator& loc)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->SetBestChain(loc);\n+void UnregisterAllWallets() {\n+    g_signals.Broadcast.disconnect_all_slots();\n+    g_signals.Inventory.disconnect_all_slots();\n+    g_signals.SetBestChain.disconnect_all_slots();\n+    g_signals.UpdatedTransaction.disconnect_all_slots();\n+    g_signals.EraseTransaction.disconnect_all_slots();\n+    g_signals.SyncTransaction.disconnect_all_slots();\n }\n \n-// notify wallets about an updated transaction\n-void static UpdatedTransaction(const uint256& hashTx)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->UpdatedTransaction(hashTx);\n-}\n-\n-// notify wallets about an incoming inventory (for request counts)\n-void static Inventory(const uint256& hash)\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->Inventory(hash);\n-}\n-\n-// ask wallets to resend their transactions\n-void static ResendWalletTransactions()\n-{\n-    LOCK(cs_setpwalletRegistered);\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->ResendWalletTransactions();\n+void SyncWithWallets(const uint256 &hash, const CTransaction &tx, const CBlock *pblock) {\n+    g_signals.SyncTransaction(hash, tx, pblock);\n }\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -913,8 +890,8 @@ bool CTxMemPool::accept(CValidationState &state, const CTransaction &tx, bool fL\n     ///// are we sure this is ok when loading transactions or restoring block txes\n     // If updated, erase old tx from wallet\n     if (ptxOld)\n-        EraseFromWallets(ptxOld->GetHash());\n-    SyncWithWallets(hash, tx, NULL, true);\n+        g_signals.EraseTransaction(ptxOld->GetHash());\n+    g_signals.SyncTransaction(hash, tx, NULL);\n \n     LogPrint(\"mempool\", \"CTxMemPool::accept() : accepted %s (poolsz %\"PRIszu\")\\n\",\n            hash.ToString().c_str(),\n@@ -1974,7 +1951,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n \n     // Watch for transactions paying to me\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n-        SyncWithWallets(block.GetTxHash(i), block.vtx[i], &block, true);\n+        g_signals.SyncTransaction(block.GetTxHash(i), block.vtx[i], &block);\n \n     return true;\n }\n@@ -2108,7 +2085,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n \n     // Update best block in wallet (so we can detect restored wallets)\n     if ((pindexNew->nHeight % 20160) == 0 || (!fIsInitialDownload && (pindexNew->nHeight % 144) == 0))\n-        ::SetBestChain(chainActive.GetLocator(pindexNew));\n+        g_signals.SetBestChain(chainActive.GetLocator(pindexNew));\n \n     // New best block\n     nTimeBestReceived = GetTime();\n@@ -2188,7 +2165,7 @@ bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos\n         CheckForkWarningConditions();\n         // Notify UI to display prev block's coinbase if it was ours\n         static uint256 hashPrevBestCoinBase;\n-        UpdatedTransaction(hashPrevBestCoinBase);\n+        g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n         hashPrevBestCoinBase = block.GetTxHash(0);\n     } else\n         CheckForkWarningConditionsOnNewFork(pindexNew);\n@@ -3311,7 +3288,7 @@ void static ProcessGetData(CNode* pfrom)\n             }\n \n             // Track requests for our stuff.\n-            Inventory(inv.hash);\n+            g_signals.Inventory(inv.hash);\n         }\n     }\n \n@@ -3573,7 +3550,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             }\n \n             // Track requests for our stuff\n-            Inventory(inv.hash);\n+            g_signals.Inventory(inv.hash);\n         }\n     }\n \n@@ -4193,7 +4170,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // transactions become unconfirmed and spams other nodes.\n         if (!fReindex && !fImporting && !IsInitialBlockDownload())\n         {\n-            ResendWalletTransactions();\n+            g_signals.Broadcast();\n         }\n \n         //"
      },
      {
        "sha": "82a533749e915ca8f4cb8cb46df593437697abe0",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 18,
        "deletions": 9,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00588c3fac4822d42ffde46ca55c029a74c378ee/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00588c3fac4822d42ffde46ca55c029a74c378ee/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=00588c3fac4822d42ffde46ca55c029a74c378ee",
        "patch": "@@ -17,7 +17,6 @@\n \n #include <list>\n \n-class CWallet;\n class CBlock;\n class CBlockIndex;\n class CKeyItem;\n@@ -81,8 +80,6 @@ extern uint64 nLastBlockTx;\n extern uint64 nLastBlockSize;\n extern const std::string strMessageMagic;\n extern int64 nTimeBestReceived;\n-extern CCriticalSection cs_setpwalletRegistered;\n-extern std::set<CWallet*> setpwalletRegistered;\n extern bool fImporting;\n extern bool fReindex;\n extern bool fBenchmark;\n@@ -108,17 +105,18 @@ class CCoinsView;\n class CCoinsViewCache;\n class CScriptCheck;\n class CValidationState;\n+class CWalletInterface;\n \n struct CBlockTemplate;\n \n /** Register a wallet to receive updates from core */\n-void RegisterWallet(CWallet* pwalletIn);\n+void RegisterWallet(CWalletInterface* pwalletIn);\n /** Unregister a wallet from core */\n-void UnregisterWallet(CWallet* pwalletIn);\n+void UnregisterWallet(CWalletInterface* pwalletIn);\n /** Unregister all wallets from core */\n void UnregisterAllWallets();\n /** Push an updated transaction to all registered wallets */\n-void SyncWithWallets(const uint256 &hash, const CTransaction& tx, const CBlock* pblock = NULL, bool fUpdate = false);\n+void SyncWithWallets(const uint256 &hash, const CTransaction& tx, const CBlock* pblock = NULL);\n \n /** Register with a network node to receive its signals */\n void RegisterNodeSignals(CNodeSignals& nodeSignals);\n@@ -190,9 +188,6 @@ bool AbortNode(const std::string &msg);\n \n \n \n-\n-bool GetWalletFile(CWallet* pwallet, std::string &strWalletFileOut);\n-\n struct CDiskBlockPos\n {\n     int nFile;\n@@ -1256,4 +1251,18 @@ class CMerkleBlock\n     )\n };\n \n+\n+class CWalletInterface {\n+protected:\n+    virtual void SyncTransaction(const uint256 &hash, const CTransaction &tx, const CBlock *pblock) =0;\n+    virtual void EraseFromWallet(const uint256 &hash) =0;\n+    virtual void SetBestChain(const CBlockLocator &locator) =0;\n+    virtual void UpdatedTransaction(const uint256 &hash) =0;\n+    virtual void Inventory(const uint256 &hash) =0;\n+    virtual void ResendWalletTransactions() =0;\n+    friend void ::RegisterWallet(CWalletInterface*);\n+    friend void ::UnregisterWallet(CWalletInterface*);\n+    friend void ::UnregisterAllWallets();\n+};\n+\n #endif"
      },
      {
        "sha": "4d1381bc2013a7840529af9bdb1b43921425f5c1",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00588c3fac4822d42ffde46ca55c029a74c378ee/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00588c3fac4822d42ffde46ca55c029a74c378ee/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=00588c3fac4822d42ffde46ca55c029a74c378ee",
        "patch": "@@ -560,7 +560,7 @@ Value sendrawtransaction(const Array& params, bool fHelp)\n         // Not in block, but already in the memory pool; will drop\n         // through to re-relay it.\n     } else {\n-        SyncWithWallets(hashTx, tx, NULL, true);\n+        SyncWithWallets(hashTx, tx, NULL);\n     }\n     RelayTransaction(tx, hashTx);\n "
      },
      {
        "sha": "bd9e2c734776e5137325a936afee4d06e16032a2",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 12,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00588c3fac4822d42ffde46ca55c029a74c378ee/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00588c3fac4822d42ffde46ca55c029a74c378ee/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=00588c3fac4822d42ffde46ca55c029a74c378ee",
        "patch": "@@ -505,7 +505,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n // Add a transaction to the wallet, or update it.\n // pblock is optional, but should be provided if the transaction is known to be in a block.\n // If fUpdate is true, existing transactions will be updated.\n-bool CWallet::AddToWalletIfInvolvingMe(const uint256 &hash, const CTransaction& tx, const CBlock* pblock, bool fUpdate, bool fFindBlock)\n+bool CWallet::AddToWalletIfInvolvingMe(const uint256 &hash, const CTransaction& tx, const CBlock* pblock, bool fUpdate)\n {\n     {\n         LOCK(cs_wallet);\n@@ -525,16 +525,20 @@ bool CWallet::AddToWalletIfInvolvingMe(const uint256 &hash, const CTransaction&\n     return false;\n }\n \n-bool CWallet::EraseFromWallet(uint256 hash)\n+void CWallet::SyncTransaction(const uint256 &hash, const CTransaction& tx, const CBlock* pblock) {\n+    AddToWalletIfInvolvingMe(hash, tx, pblock, true);\n+}\n+\n+void CWallet::EraseFromWallet(const uint256 &hash)\n {\n     if (!fFileBacked)\n-        return false;\n+        return;\n     {\n         LOCK(cs_wallet);\n         if (mapWallet.erase(hash))\n             CWalletDB(strWalletFile).EraseTx(hash);\n     }\n-    return true;\n+    return;\n }\n \n \n@@ -1496,14 +1500,6 @@ bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)\n     return true;\n }\n \n-bool GetWalletFile(CWallet* pwallet, string &strWalletFileOut)\n-{\n-    if (!pwallet->fFileBacked)\n-        return false;\n-    strWalletFileOut = pwallet->strWalletFile;\n-    return true;\n-}\n-\n //\n // Mark old keypool keys as used,\n // and generate all new keys"
      },
      {
        "sha": "21510f8c396d90d4c0ff47b1a636b62ef831590d",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00588c3fac4822d42ffde46ca55c029a74c378ee/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00588c3fac4822d42ffde46ca55c029a74c378ee/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=00588c3fac4822d42ffde46ca55c029a74c378ee",
        "patch": "@@ -80,7 +80,7 @@ class CAddressBookData\n /** A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n  * and provides the ability to create new transactions.\n  */\n-class CWallet : public CCryptoKeyStore\n+class CWallet : public CCryptoKeyStore, public CWalletInterface\n {\n private:\n     bool SelectCoins(int64 nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const;\n@@ -197,8 +197,9 @@ class CWallet : public CCryptoKeyStore\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn);\n-    bool AddToWalletIfInvolvingMe(const uint256 &hash, const CTransaction& tx, const CBlock* pblock, bool fUpdate = false, bool fFindBlock = false);\n-    bool EraseFromWallet(uint256 hash);\n+    void SyncTransaction(const uint256 &hash, const CTransaction& tx, const CBlock* pblock);\n+    bool AddToWalletIfInvolvingMe(const uint256 &hash, const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n+    void EraseFromWallet(const uint256 &hash);\n     void WalletUpdateSpent(const CTransaction& prevout);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n@@ -887,6 +888,4 @@ class CAccountingEntry\n     std::vector<char> _ssExtra;\n };\n \n-bool GetWalletFile(CWallet* pwallet, std::string &strWalletFileOut);\n-\n #endif"
      }
    ]
  },
  {
    "sha": "722fa283d04dfe9c70418e69535a08eea06b4377",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjJmYTI4M2QwNGRmZTljNzA0MThlNjk1MzVhMDhlZWEwNmI0Mzc3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-19T16:42:14Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-26T12:51:47Z"
      },
      "message": "Break dependency of init on wallet.\n\nThis required some code movement (what was CWalletTx::AcceptToMemoryPool\ndoing in main?), and adding a few explicit includes that used to be\nimplicit through init.h.",
      "tree": {
        "sha": "c917f101a743cebd52c17ac777d47ed44c35c1fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c917f101a743cebd52c17ac777d47ed44c35c1fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/722fa283d04dfe9c70418e69535a08eea06b4377",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722fa283d04dfe9c70418e69535a08eea06b4377",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/722fa283d04dfe9c70418e69535a08eea06b4377",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722fa283d04dfe9c70418e69535a08eea06b4377/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00588c3fac4822d42ffde46ca55c029a74c378ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00588c3fac4822d42ffde46ca55c029a74c378ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00588c3fac4822d42ffde46ca55c029a74c378ee"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 32,
      "deletions": 22
    },
    "files": [
      {
        "sha": "4fd32960695d6dbba730e0733b5924c333d84e48",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -3,7 +3,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"ui_interface.h\"\n #include \"init.h\"\n+#include \"util.h\"\n+#include \"main.h\"\n #include \"bitcoinrpc.h\"\n #include <boost/algorithm/string/predicate.hpp>\n "
      },
      {
        "sha": "f3ea0adb403c6eb93745b4bb65467e31bc868490",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -4,6 +4,8 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"chainparams.h\"\n+#include \"main.h\"\n+#include \"wallet.h\"\n #include \"init.h\"\n #include \"util.h\"\n #include \"sync.h\""
      },
      {
        "sha": "8cb1bf52fcb5ba00d78023d48adb67f24f8ab2c4",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -5,7 +5,10 @@\n #ifndef BITCOIN_INIT_H\n #define BITCOIN_INIT_H\n \n-#include \"wallet.h\"\n+#include <string>\n+#include <boost/thread.hpp>\n+\n+class CWallet;\n \n extern std::string strWalletFile;\n extern CWallet* pwalletMain;"
      },
      {
        "sha": "072d0967f2bdc0991f0fd614c81a2bb9ff3b0384",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -1054,27 +1054,6 @@ bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree)\n }\n \n \n-\n-bool CWalletTx::AcceptWalletTransaction()\n-{\n-    {\n-        LOCK(mempool.cs);\n-        // Add previous supporting transactions first\n-        BOOST_FOREACH(CMerkleTx& tx, vtxPrev)\n-        {\n-            if (!tx.IsCoinBase())\n-            {\n-                uint256 hash = tx.GetHash();\n-                if (!mempool.exists(hash) && pcoinsTip->HaveCoins(hash))\n-                    tx.AcceptToMemoryPool(false);\n-            }\n-        }\n-        return AcceptToMemoryPool(false);\n-    }\n-    return false;\n-}\n-\n-\n // Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock\n bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow)\n {"
      },
      {
        "sha": "4db048dccef8473c11e99cc5fd1a113e71949c25",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -6,6 +6,9 @@\n \n #include \"bitcoinunits.h\"\n #include \"init.h\"\n+#include \"core.h\"\n+#include \"wallet.h\"\n+#include \"netbase.h\"\n #include \"walletdb.h\"\n #include \"guiutil.h\"\n "
      },
      {
        "sha": "a5f7a542de8c4b21a45cf92655b7259fc30bb945",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -6,6 +6,7 @@\n #include <fstream>\n \n #include \"init.h\" // for pwalletMain\n+#include \"wallet.h\"\n #include \"bitcoinrpc.h\"\n #include \"ui_interface.h\"\n #include \"base58.h\""
      },
      {
        "sha": "ea1e01e6e9f4c1b82f14df0e1692674748e5ccaa",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722fa283d04dfe9c70418e69535a08eea06b4377/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722fa283d04dfe9c70418e69535a08eea06b4377/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=722fa283d04dfe9c70418e69535a08eea06b4377",
        "patch": "@@ -777,6 +777,25 @@ void CWalletTx::AddSupportingTransactions()\n     reverse(vtxPrev.begin(), vtxPrev.end());\n }\n \n+bool CWalletTx::AcceptWalletTransaction()\n+{\n+    {\n+        LOCK(mempool.cs);\n+        // Add previous supporting transactions first\n+        BOOST_FOREACH(CMerkleTx& tx, vtxPrev)\n+        {\n+            if (!tx.IsCoinBase())\n+            {\n+                uint256 hash = tx.GetHash();\n+                if (!mempool.exists(hash) && pcoinsTip->HaveCoins(hash))\n+                    tx.AcceptToMemoryPool(false);\n+            }\n+        }\n+        return AcceptToMemoryPool(false);\n+    }\n+    return false;\n+}\n+\n bool CWalletTx::WriteToDisk()\n {\n     return CWalletDB(pwallet->strWalletFile).WriteTx(GetHash(), *this);"
      }
    ]
  }
]