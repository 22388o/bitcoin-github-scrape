[
  {
    "sha": "a7534a226012cb04bdc364c3627a7056086221ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzUzNGEyMjYwMTJjYjA0YmRjMzY0YzM2MjdhNzA1NjA4NjIyMWNh",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-10-14T02:19:09Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-10-14T02:55:36Z"
      },
      "message": "Add an update checker\n\nThis adds a system to check for updates",
      "tree": {
        "sha": "f2c86f46094e075eb0996587df296fc50996ec2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2c86f46094e075eb0996587df296fc50996ec2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7534a226012cb04bdc364c3627a7056086221ca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl2j47oACgkQL21BRcVf\nx8eYXxAA1dmDuIg0EORxTEagFj6dlbkkTunuBNVzF1LRpfIqgCvluZkPKePUo8/r\nAMr2oQa6ZWJJa4+fNqMK13JUhBfm2ThwPZTFPtQwBI9C3V2Y0gKBYh0SGiABVn++\nlSstypu4ZX0MjOWrDouAwIvhRgRMntCjOM4uunmn7yJ+NxHl+qw94wkMupLIFt32\nwHdug0jr9c3rnR1cUexaT+kwHQ4B7KcXunrlLFosn3aQNBXXozO+ZQGdwh5cQ/kZ\n7KwVdD9FMI7sJW5ijiRPt4oE5yA7+D1RtARtsiNi2/NTzJZ2hESy5FDairwaNoU5\nYf+rnnW0cO+slt7e6I8U1gZ7+m2DPaezmqKoq8zEOwvOk1vw25QJnsT3RUH7cZUJ\nsV/kSruWWy4+lk82LlezB4z9Jp8/VsxItrCv6kaEv+RmZZx0ZGQnu8syDkv5rc+p\np5P/ReawN9dIH8lbhVhPlNRdkM6rYExEdS4B/qiQs5NfB++riU0QbW1J3rl3DkOO\n4Dp3EZhlRl8+6C/FqGqK61IhTjLFWEuimpbXG2mc5qZlw08fy8Q2wtsJh3TSzP9l\nfScHxNH4AXODIeJ2sJtO+a1C244w0qgo8JrTJkUaijo/R/lCrrFSke5TumFj4ivn\nfMuuXXClZOMhaUjo1ld5Qc9SUfcljxedXKXSgW3BadZJl9WvpCE=\n=9+Ns\n-----END PGP SIGNATURE-----",
        "payload": "tree f2c86f46094e075eb0996587df296fc50996ec2d\nparent 561a7d30478b82f5d46dcf0f16e864a9608004f4\nauthor Emil Engler <me@emilengler.com> 1571019549 +0200\ncommitter Emil Engler <me@emilengler.com> 1571021736 +0200\n\nAdd an update checker\n\nThis adds a system to check for updates\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7534a226012cb04bdc364c3627a7056086221ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7534a226012cb04bdc364c3627a7056086221ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7534a226012cb04bdc364c3627a7056086221ca/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "561a7d30478b82f5d46dcf0f16e864a9608004f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/561a7d30478b82f5d46dcf0f16e864a9608004f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/561a7d30478b82f5d46dcf0f16e864a9608004f4"
      }
    ],
    "stats": {
      "total": 229,
      "additions": 228,
      "deletions": 1
    },
    "files": [
      {
        "sha": "566a5b2f61ff7d0a4ad54f4ad755cc8de4f4ec0e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7534a226012cb04bdc364c3627a7056086221ca/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7534a226012cb04bdc364c3627a7056086221ca/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a7534a226012cb04bdc364c3627a7056086221ca",
        "patch": "@@ -4,7 +4,7 @@\n \n DIST_SUBDIRS = secp256k1 univalue\n \n-AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS) -lcurl\n AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)\n AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS)\n AM_LIBTOOLFLAGS = --preserve-dup-deps\n@@ -220,6 +220,7 @@ BITCOIN_CORE_H = \\\n   util/translation.h \\\n   util/url.h \\\n   util/validation.h \\\n+  update.h \\\n   validation.h \\\n   validationinterface.h \\\n   versionbits.h \\\n@@ -303,6 +304,7 @@ libbitcoin_server_a_SOURCES = \\\n   txdb.cpp \\\n   txmempool.cpp \\\n   ui_interface.cpp \\\n+  update.cpp \\\n   validation.cpp \\\n   validationinterface.cpp \\\n   versionbits.cpp \\"
      },
      {
        "sha": "94aa37242e7c97b41a46aa2ecc90466f3d8cceff",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7534a226012cb04bdc364c3627a7056086221ca/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7534a226012cb04bdc364c3627a7056086221ca/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=a7534a226012cb04bdc364c3627a7056086221ca",
        "patch": "@@ -14,6 +14,7 @@\n #include <util/system.h>\n #include <util/strencodings.h>\n #include <util/validation.h>\n+#include <update.h>\n \n #include <stdint.h>\n #include <tuple>\n@@ -552,12 +553,29 @@ static UniValue echo(const JSONRPCRequest& request)\n     return request.params;\n }\n \n+static UniValue check_update(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"check-update\",\n+            \"\\nCheck if a newer version of Bitcoin Core is available.\\n\"\n+            \"\\nIt will never update Bitcoin Core.\",\n+            {},\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+    UpdateManager updater;\n+    return updater.checkUpdate();\n+}\n+\n // clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n     { \"control\",            \"logging\",                &logging,                {\"include\", \"exclude\"}},\n+    { \"util\",               \"check-update\",           &check_update,           {}, },\n     { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} },\n     { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\",\"address_type\"} },\n     { \"util\",               \"deriveaddresses\",        &deriveaddresses,        {\"descriptor\", \"range\"} },"
      },
      {
        "sha": "7a9480eb55a0645a8846caa3d4ce9b6063446cc3",
        "filename": "src/update.cpp",
        "status": "added",
        "additions": 162,
        "deletions": 0,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7534a226012cb04bdc364c3627a7056086221ca/src/update.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7534a226012cb04bdc364c3627a7056086221ca/src/update.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/update.cpp?ref=a7534a226012cb04bdc364c3627a7056086221ca",
        "patch": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <update.h>\n+\n+UpdateManager::UpdateManager()\n+{\n+    // Add sources from where to fetch the current version\n+    addSource(\"https://www.emilengler.com/bitcoin/version.txt\");\n+    // Add keys to verify the current version (needs to be legacy)\n+    addKey(\"14RdN6xBjrrqx5y4nH7VXYgtyRVRvBQeF1\"); // Emil Engler (@emilengler)\n+}\n+\n+void UpdateManager::addSource(std::string url)\n+{\n+    sources.push_back(url);\n+}\n+\n+void UpdateManager::addKey(std::string key)\n+{\n+    keys.push_back(key);\n+}\n+\n+// Function to check if an item is in a string vector\n+bool VectorContains(std::vector<std::string> &v, std::string &s) {\n+    if (std::find(v.begin(), v.end(), s) != v.end()) {\n+        // Item is in vector\n+        return true;\n+    }\n+    return false;\n+}\n+\n+// Checks for a new version and returns the newest version. If no new version is available or the source is not reachable it will return \"false\"\n+std::string UpdateManager::checkUpdate()\n+{\n+    // Ignore if the build isn't a release (needs to be activated before merge)\n+    /*if(!CLIENT_VERSION_IS_RELEASE)\n+        return \"false\";*/\n+\n+    // For security use a pseudo random source\n+    srand(time(NULL));\n+    std::string source = sources[rand() % sources.size()];\n+    std::string upstreamVersion = download(source);\n+\n+    // Repeat until a valid source was fetched\n+    std::vector<std::string> tried;                         // Sources that were already tried\n+    while (upstreamVersion == \"ERROR\") {\n+        tried.push_back(source);\n+        // Return \"false\" if no source is reachable\n+        if (tried.size() == sources.size())\n+            return \"false\";\n+        while (VectorContains(tried, source)) {\n+            source = sources[rand() % sources.size()];\n+        }\n+        upstreamVersion = download(source);\n+    }\n+\n+    // Split upstreamVersion into \"version\" and \"signature\"\n+    std::vector<std::string> versionDetails;\n+    std::string line;\n+    std::istringstream lineStream(upstreamVersion);\n+    while (std::getline(lineStream, line, '\\n')) {\n+        versionDetails.push_back(line);\n+    }\n+\n+    // Verify authentity\n+    if (versionDetails.size() < 2)\n+        return \"false\";\n+    // Verify signature\n+    if (!verify(versionDetails[1], versionDetails[0])) {\n+        return \"false\";\n+    }\n+\n+    // Check if the current version is the upstream version\n+    if (versionDetails[0] == FormatFullVersion())\n+        return \"false\";\n+\n+    // Check for invalid characters (only dots and numbers are permitted)\n+    std::string legalChars = \"v.0123456789\";\n+    for(long unsigned int i = 0; i < versionDetails[0].size(); ++i) {\n+        if (legalChars.find(versionDetails[0][i]) == std::string::npos)\n+            return \"false\";\n+    }\n+\n+    // Check if the version is newer (probably useless because of line 76)\n+    /*std::string currentVersion = FormatFullVersion();\n+    std::regex r(\"v0\\.(.+?)$\");\n+    std::smatch matches;\n+    while(std::regex_search(currentVersion, matches, r)) {\n+        // IF the current version is the same or higher, false\n+        if (atof(matches[1].str().c_str()) < atof(currentVersion.c_str()))\n+            return \"false\";\n+    }*/\n+\n+    // If no errors, return the newest version\n+    return versionDetails[0];\n+}\n+\n+// Just an internal function for making downloads possible\n+size_t write_data(void *ptr, size_t size, size_t nmemb, void *stream)\n+{\n+    std::string data((const char*) ptr, (size_t) size * nmemb);\n+    *((std::stringstream*) stream) << data;\n+    return size * nmemb;\n+}\n+\n+\n+std::string UpdateManager::download(std::string url)\n+{\n+    CURL *curl = curl_easy_init();\n+\n+    curl_easy_setopt(curl, CURLOPT_URL, url.c_str());\n+    curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);\n+    curl_easy_setopt(curl, CURLOPT_NOSIGNAL, 1);\n+    curl_easy_setopt(curl, CURLOPT_ACCEPT_ENCODING, \"\");\n+    std::stringstream out;\n+    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_data);\n+    curl_easy_setopt(curl, CURLOPT_WRITEDATA, &out);\n+    CURLcode res = curl_easy_perform(curl);\n+    if (res != CURLE_OK)\n+        return \"ERROR\";\n+\n+    curl_easy_cleanup(curl);\n+    return out.str();\n+}\n+\n+bool UpdateManager::verify(std::string strSign, std::string strMessage)\n+{\n+    for(unsigned long int i = 0; i < keys.size(); ++i)\n+    {\n+        std::string strAddress = keys[i];\n+\n+        CTxDestination destination = DecodeDestination(strAddress);\n+        if (!IsValidDestination(destination)) {\n+            continue;\n+        }\n+\n+        const PKHash *pkhash = boost::get<PKHash>(&destination);\n+        if (!pkhash) {\n+            continue;\n+        }\n+\n+        bool fInvalid = false;\n+        std::vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n+\n+        if (fInvalid)\n+            continue;\n+\n+        CHashWriter ss(SER_GETHASH, 0);\n+        ss << strMessageMagic;\n+        ss << strMessage;\n+\n+        CPubKey pubkey;\n+        if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n+            continue;\n+\n+        if (pubkey.GetID() == *pkhash)\n+            return true;\n+    }\n+    return false;\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "4ed5ac6c72dc85911500a14ad946cb7947ace014",
        "filename": "src/update.h",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7534a226012cb04bdc364c3627a7056086221ca/src/update.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7534a226012cb04bdc364c3627a7056086221ca/src/update.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/update.h?ref=a7534a226012cb04bdc364c3627a7056086221ca",
        "patch": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UPDATE_H\n+#define BITCOIN_UPDATE_H\n+\n+#include <vector>\n+#include <string>\n+#include <sstream>\n+#include <algorithm>\n+#include <curl/curl.h>\n+#include <clientversion.h>\n+#include <key_io.h>\n+#include <outputtype.h>\n+#include <script/descriptor.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <util/validation.h>\n+#include <stdlib.h>\n+#include <time.h>\n+#include <regex>\n+\n+class UpdateManager {\n+public:\n+    void addSource(std::string url);\n+    void addKey(std::string pubKey);\n+    std::string checkUpdate();\n+    UpdateManager();\n+private:\n+    std::vector<std::string> sources;\n+    std::vector<std::string> keys;\n+    std::string download(std::string url);\n+    bool verify(std::string strSign, std::string strMessage);\n+};\n+\n+#endif\n\\ No newline at end of file"
      },
      {
        "sha": "2286608cb7bcb951012a35863cc47e8679863149",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7534a226012cb04bdc364c3627a7056086221ca/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7534a226012cb04bdc364c3627a7056086221ca/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=a7534a226012cb04bdc364c3627a7056086221ca",
        "patch": "@@ -8,6 +8,7 @@\n #include <sync.h>\n #include <util/system.h>\n #include <util/translation.h>\n+#include <update.h>\n \n static RecursiveMutex cs_warnings;\n static std::string strMiscWarning GUARDED_BY(cs_warnings);\n@@ -43,6 +44,7 @@ std::string GetWarnings(const std::string& strFor)\n     std::string strStatusBar;\n     std::string strGUI;\n     const std::string uiAlertSeperator = \"<hr />\";\n+    UpdateManager manager;\n \n     LOCK(cs_warnings);\n \n@@ -51,6 +53,12 @@ std::string GetWarnings(const std::string& strFor)\n         strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\").translated;\n     }\n \n+    // If a newer version is available\n+    if (manager.checkUpdate() != \"false\") {\n+        strStatusBar = \"A newer version of Bitcoin Core is available, you may want to update\";\n+        strGUI = _(\"A newer version of Bitcoin Core is available, you may want to update\").translated;\n+    }\n+\n     // Misc warnings like out of disk space and clock is wrong\n     if (strMiscWarning != \"\")\n     {"
      }
    ]
  }
]