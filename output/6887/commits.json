[
  {
    "sha": "abd8b768ee889f28b3d2bc209307a9867a973556",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmQ4Yjc2OGVlODg5ZjI4YjNkMmJjMjA5MzA3YTk4NjdhOTczNTU2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-25T00:47:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-03T07:53:37Z"
      },
      "message": "[qt] Properly display required fee instead of minTxFee",
      "tree": {
        "sha": "85c5e1d4a31b2f61e53e2d9372afbb71fa1ca819",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85c5e1d4a31b2f61e53e2d9372afbb71fa1ca819"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abd8b768ee889f28b3d2bc209307a9867a973556",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd8b768ee889f28b3d2bc209307a9867a973556",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/abd8b768ee889f28b3d2bc209307a9867a973556",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd8b768ee889f28b3d2bc209307a9867a973556/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 26,
      "deletions": 12
    },
    "files": [
      {
        "sha": "781d8f7e02912fdf022be0bfac9a9e034de8570c",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -636,21 +636,21 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK())) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK()));\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n \n     QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n     double dFeeVary;\n     if (payTxFee.GetFeePerK() > 0)\n-        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), payTxFee.GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), payTxFee.GetFeePerK()) / 1000;\n     else\n-        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n     l3->setToolTip(toolTip4);"
      },
      {
        "sha": "d0191fa6d8aaf864ec69983037191c207b8fbf13",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -18,7 +18,7 @@\n #include \"txdb.h\" // for -dbcache defaults\n \n #ifdef ENABLE_WALLET\n-#include \"wallet/wallet.h\" // for CWallet::minTxFee\n+#include \"wallet/wallet.h\" // for CWallet::GetRequiredFee()\n #endif\n \n #include <boost/thread.hpp>"
      },
      {
        "sha": "ab277171c80077bc52dec9cba5946e6de06a6597",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -172,7 +172,7 @@ void SendCoinsDialog::setModel(WalletModel *model)\n         connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(updateGlobalFeeVariables()));\n         connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        ui->customFee->setSingleStep(CWallet::minTxFee.GetFeePerK());\n+        ui->customFee->setSingleStep(CWallet::GetRequiredFee(1000));\n         updateFeeSectionControls();\n         updateMinFeeLabel();\n         updateSmartFeeLabel();\n@@ -569,7 +569,7 @@ void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n void SendCoinsDialog::setMinimumFee()\n {\n     ui->radioCustomPerKilobyte->setChecked(true);\n-    ui->customFee->setValue(CWallet::minTxFee.GetFeePerK());\n+    ui->customFee->setValue(CWallet::GetRequiredFee(1000));\n }\n \n void SendCoinsDialog::updateFeeSectionControls()\n@@ -621,8 +621,8 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n void SendCoinsDialog::updateMinFeeLabel()\n {\n     if (model && model->getOptionsModel())\n-        ui->checkBoxMinimumFee->setText(tr(\"Pay only the minimum fee of %1\").arg(\n-            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\")\n+        ui->checkBoxMinimumFee->setText(tr(\"Pay only the required fee of %1\").arg(\n+            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\")\n         );\n }\n \n@@ -635,7 +635,7 @@ void SendCoinsDialog::updateSmartFeeLabel()\n     CFeeRate feeRate = mempool.estimateFee(nBlocksToConfirm);\n     if (feeRate <= CFeeRate(0)) // not enough data => minfee\n     {\n-        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\");\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\");\n         ui->labelSmartFee2->show(); // (Smart fee not initialized yet. This usually takes a few blocks...)\n         ui->labelFeeEstimation->setText(\"\");\n     }"
      },
      {
        "sha": "8c0dad2381b69743c4cd4b5b904889fbb26637d6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -2120,6 +2120,11 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n     return true;\n }\n \n+CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n+{\n+    return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));\n+}\n+\n CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool)\n {\n     // payTxFee is user-set \"I want to pay this much\"\n@@ -2131,9 +2136,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n     if (nFeeNeeded == 0)\n         nFeeNeeded = pool.estimateFee(nConfirmTarget).GetFee(nTxBytes);\n     // ... unless we don't have enough mempool data, in which case fall\n-    // back to a hard-coded fee\n+    // back to the required fee\n     if (nFeeNeeded == 0)\n-        nFeeNeeded = minTxFee.GetFee(nTxBytes);\n+        nFeeNeeded = GetRequiredFee(nTxBytes);\n     // prevent user from paying a non-sense fee (like 1 satoshi): 0 < fee < minRelayFee\n     if (nFeeNeeded < ::minRelayTxFee.GetFee(nTxBytes))\n         nFeeNeeded = ::minRelayTxFee.GetFee(nTxBytes);"
      },
      {
        "sha": "22fe08670f62399f9ff3b049bea2030784d7c691",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -628,7 +628,16 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     static CFeeRate minTxFee;\n+    /**\n+     * Estimate the minimum fee considering user set parameters\n+     * and the required fee\n+     */\n     static CAmount GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool);\n+    /**\n+     * Return the minimum required fee taking into account the\n+     * floating relay fee and user set minimum transaction fee\n+     */\n+    static CAmount GetRequiredFee(unsigned int nTxBytes);\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);"
      }
    ]
  },
  {
    "sha": "53238ff0b1085352e4aaa796d0e473551e573143",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzIzOGZmMGIxMDg1MzUyZTRhYWE3OTZkMGU0NzM1NTFlNTczMTQz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-25T02:01:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-03T07:53:37Z"
      },
      "message": "Clarify what minrelaytxfee does",
      "tree": {
        "sha": "62fce450d78982cedc2533d8bef1705e57304cef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62fce450d78982cedc2533d8bef1705e57304cef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53238ff0b1085352e4aaa796d0e473551e573143",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53238ff0b1085352e4aaa796d0e473551e573143",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53238ff0b1085352e4aaa796d0e473551e573143",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53238ff0b1085352e4aaa796d0e473551e573143/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abd8b768ee889f28b3d2bc209307a9867a973556",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd8b768ee889f28b3d2bc209307a9867a973556",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abd8b768ee889f28b3d2bc209307a9867a973556"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5fd06b34440aed88ddf471dd1fd0878f4f844680",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53238ff0b1085352e4aaa796d0e473551e573143/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53238ff0b1085352e4aaa796d0e473551e573143/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=53238ff0b1085352e4aaa796d0e473551e573143",
        "patch": "@@ -434,7 +434,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n     }\n-    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)\"),\n+    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(::minRelayTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)"
      },
      {
        "sha": "c340bcd5c4ffa3100d495266b843f33c86753a6f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53238ff0b1085352e4aaa796d0e473551e573143/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53238ff0b1085352e4aaa796d0e473551e573143/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=53238ff0b1085352e4aaa796d0e473551e573143",
        "patch": "@@ -74,7 +74,7 @@ size_t nCoinCacheUsage = 5000 * 300;\n uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n-/** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n+/** Fees smaller than this (in satoshi) are considered zero fee (for relaying, mining and transaction creation) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n \n CTxMemPool mempool(::minRelayTxFee);"
      }
    ]
  }
]