gmaxwell,2013-06-14T05:03:05Z,And how do you prevent very bad thing from happening when one of the many  duplicated definitions gets desynchronized?\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19439426,19439426,
brandondahler,2013-06-14T05:12:51Z,"Rebasing conflicts on the actual code changes made (one actual, moving some definitions from a header to the code file).  Due diligence was taken on my part to ensure that the conflicts were resolved correctly, I would still recommend someone bite the bullet and look at all the changes that are not adding/removing/reordering header files.\n\nRebasing additionally conflicted on include files being ",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19439617,19439617,
laanwj,2013-06-14T08:46:41Z,"@gmaxwell From what I understand this does not duplicate anything. It does pre-declare classes, but that only consists of the name and nothing more.\n\nAt first glance this seems like a lot of changes, but it's almost entirely restricted to the #include portion of files. The only substantial code move is moving WalletDB.h functions to its implementation file.\n\nThere's problems with compiling the",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19445776,19445776,
sipa,2013-06-14T09:42:05Z,"I'm generally in favor of cleanups like this, and it indeed seems pure code movement + include changes.\n\nHowever:\n- Some changes seem not up-to-date with recent refactors (see inline comments)\n- I'm not sure I like the increased use of forward declarations. They don't remove actual code dependencies, but they hide them. Of course we're already using them, and the compilation performance improv",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19448075,19448075,
laanwj,2013-06-14T10:58:20Z,"Getting rid of code dependencies is even better, but in the general case if it is possible do forward declarations instead of an #include in a header I'm in favor of that. It generates a flatter include hierarchy, let's not give the C++ compiler more work than need be.\n\nRe: uint64_t/int32_t I agree. If available, they should be used, as they take the burden of determining data type sizes from us",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19451029,19451029,
brandondahler,2013-06-15T16:40:32Z,"Addressed the specific problems references inline.\n\nHopefully should pass build, don't know why it built on my machine to be honest.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19499331,19499331,
brandondahler,2013-06-17T03:49:37Z,"Delt with cstdio problems.  Also normalized all [u]int64 types to [u]int64_t values from stdint.h, alongside replacing PRI64[xdu] with PRI[xdu]64 from inttypes.h .\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19525309,19525309,
luke-jr,2013-06-17T03:52:01Z,@brandondahler Simply replacing [u]int64 types with stdint will probably break something - we tried this like a year ago and had to revert it :(\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19525341,19525341,
brandondahler,2013-06-17T03:55:44Z,"@luke-jr It was a non-negligable change, but it did compile and pass tests on my linux machine.  Was the issue with compiling on other architectures?\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-19525403,19525403,
luke-jr,2013-07-16T21:46:52Z,"@brandondahler Reviewing logs, it looks like it didn't build on 64-bit Fedora. I don't believe we ever fully diagnosed the reason, but:\n\n```\n[Wednesday, December 21, 2011] [3:15:25 PM] <jgarzik>   serialize.h: In function ‘unsigned int GetSerializeSize(int64\n_t, int, int)’:\n[Wednesday, December 21, 2011] [3:15:26 PM] <jgarzik>   serialize.h:139:21: error: redefinition of ‘unsigned int GetS\ne",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-21076670,21076670,
sipa,2013-07-29T00:18:20Z,I think most other refactors that were in the pipeline are merged now. Care to rebase this?\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-21694280,21694280,
brandondahler,2013-07-29T03:41:57Z,Rebased branch onto master.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-21698075,21698075,
jgarzik,2013-08-25T03:11:14Z,"It would be nice to collapse the commits, and merge in the [u]int64_t change first.\n\nLooks pretty good overall, though I do worry there is a subtle compiler detail being missed in the int64/int64_t type changes.\n\nVery much like seeing use of stdint.h and int64_t, rather than using our own type.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-23221054,23221054,
Diapolo,2013-08-29T13:28:59Z,"I also like the intention of this pull, can you rebase and perhaps follow @jgarzik so we can differentiate the type-changes and the cleanup changes :).\n\nEdit: Also a merge-speedup is possible, if you create a Qt-only and a core-only pull, as @laanwj is able to merge Qt-pulls much faster than core changes.\n\nEdit 2: @laanwj Any objection, to start using quint64 or qint64 in Qt code? Perhaps that",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-23488877,23488877,
Diapolo,2013-09-07T10:56:43Z,I really hope to see PullTester happy and some final ACKs for your great work here.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-23992274,23992274,
brandondahler,2013-09-08T04:47:28Z,Rebased and squashed small commits (made sure that the resuting rebased version is equivalent to the previously merged version). \n\nI plan on going over the source again to re-alphabetize etc.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24015037,24015037,
gavinandresen,2013-09-09T01:30:26Z,"Pull-tester is fixed, so if it is complaining there is something wrong with your pull.  See the test.log to debug.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24034437,24034437,
brandondahler,2013-09-09T01:41:48Z,@gavinandresen: Are you sure?  First two errors for last log are:\n\n```\nleveldb.h:11:24: error: leveldb/db.h: No such file or directory\nleveldb.h:12:33: error: leveldb/write_batch.h: No such file or directory\n```\n\nI think I kicked off the last update by updating my original comment.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24034659,24034659,
gavinandresen,2013-09-09T02:19:48Z,"Am I sure pull-tester is working?  Yes, see\nhttp://jenkins.bluematt.me/pull-tester/102518fdb711b646dec8f0cc26fa170364bf2e0b/test.logfor\na successful pull-test from 2 hours ago.\n\nOn Mon, Sep 9, 2013 at 11:41 AM, Brandon Dahler notifications@github.comwrote:\n\n> @gavinandresen https://github.com/gavinandresen: Are you sure? First\n> two errors for last log are:\n> \n> leveldb.h:11:24: error: le",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24035486,24035486,
sipa,2013-09-13T16:11:04Z,"I started going through the changes, and noticed several missing dependencies, but maybe this is intentional, relying on indirect dependencies?\n\nI'm very much in favor of cleaning up our dependencies, but hiding things further by making them implicit only worsens understanding the dependency graph, makes things break when you reduce actual dependencies, and has no speed benefit.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24405579,24405579,
brandondahler,2013-09-15T16:18:13Z,"It is not intentional at all.  The idea is that if and only if we can replace a header dependency with a forward declare, do so.  Additionally (and this is harder to do), if there are indirect dependencies, add them to be a direct dependency.\n\nMy method to find direct dependencies has been to remove the header(s) that resolve the dependency (using doxygen to find indirect includes of a given hea",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24474405,24474405,
sipa,2013-09-15T16:22:47Z,"Ok, great! I understand finding indirect dependencies is hard, and the code certainly already has a ton of them, so anything is an improvement. I'll review it some more, if you're willing to address the comments.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24474505,24474505,
brandondahler,2013-09-15T16:30:12Z,"Without a doubt, ideally there are no indirect dependencies anywhere, but that would take a lot of knowledge about all files dependency fulfillment and usage.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24474635,24474635,
sipa,2013-09-15T16:32:04Z,"@brandondahler Sure, no need to fix everything. But I'll help avoiding introducing more of them.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24474671,24474671,
brandondahler,2013-09-16T03:22:48Z,"I am going to need some help fixing the build error the pull tester is encountering.  It looks like the tester is trying to build without setting HAVE_CONFIG_H. \n\nOn Sep 15, 2013, at 9:51 PM, BitcoinPullTester notifications@github.com wrote:\n\n> Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/10a08c93b5c7bc3dfb141da377a604a59599913c for binaries and test ",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-24487263,24487263,
brandondahler,2013-11-04T05:31:09Z,Rebased to current master and squashed all commits to single one.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-27665255,27665255,
laanwj,2013-11-08T09:13:27Z,"If we intend to merge this, I think we should merge it as soon as possible. Keeping a patch this size up to date must be frustrating.\n\nAfter squashing this you seem to have introduced some merge commits into the pull request, can you make it one commit again? (easiest way to get rid of merges is to merge the branch using `git merge --squash`)\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28049279,28049279,
laanwj,2013-11-08T17:30:43Z,I've read through the entire patch and verified code movement and renames.\nACK apart from the above minor nits\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28081206,28081206,
brandondahler,2013-11-09T00:29:36Z,"Replied to/fixed nits, rebase onto master, squash all but #3211 merge.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28109400,28109400,
laanwj,2013-11-09T05:57:20Z,"Another nit: the commit messages that we use are of the format  (see http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n\n```\nsubject line (~50 chars)\n(empty line)\nlonger description...\n```\n\nYou left out the empty line for commit 0de9da2, which causes git tools to merge your entire message into one line.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28120644,28120644,
brandondahler,2013-11-09T21:50:19Z,"Rebased, addressed nits.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28137826,28137826,
gavinandresen,2013-11-09T23:13:25Z,"Has anybody tested if the int64 changes run properly on Windows 32/64 machines ?\n\nUPDATE: I downloaded the pull-tester-created bitcoind.exe into a Windows XP, 32-bit virtual machine and it seems to be running -testnet just fine.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28139444,28139444,
gavinandresen,2013-11-10T01:40:56Z,ACK from me.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28141877,28141877,
brandondahler,2013-11-10T05:32:19Z,Address @sipa comments.  I think most of the main.h problems were caused by rebasing/merging so many times.\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28144493,28144493,
sipa,2013-11-10T09:48:30Z,"ACK, apart from my nits above.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28147331,28147331,
sipa,2013-11-10T11:22:13Z,"Some suggested changes, which seem to work: sipa/bitcoin@0762f57854af54d08c969c029f629c9741e79e64\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28148542,28148542,
brandondahler,2013-11-10T15:38:05Z,Merged sipa/bitcoin@header-cleanup (sipa/bitcoin@0762f57)\n,https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28152944,28152944,
BitcoinPullTester,2013-11-10T15:53:35Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/51ed9ec971614aebdbfbd9527aba365dd0afd437 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28153285,28153285,
sipa,2013-11-10T18:19:14Z,"ACK. Thanks a lot for the effort of writing this, and maintaining it.\n",https://github.com/bitcoin/bitcoin/pull/2767#issuecomment-28156606,28156606,
sipa,2013-06-14T09:30:29Z,What is this needed for?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r4698080,4698080,src/addrman.h
sipa,2013-06-14T09:34:13Z,CSecret doesn't exist anymore since #2600.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r4698107,4698107,src/crypter.h
sipa,2013-06-14T09:36:06Z,"Net shouldn't depend on main anymore since #2154, only on core.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r4698129,4698129,src/net.cpp
brandondahler,2013-06-15T16:31:55Z,"The ""printf""s on lines 406, 422, and 428.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r4714321,4714321,src/addrman.h
sipa,2013-06-15T19:03:19Z,printf is #define'd in util.h to be OutputDebugStringF.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r4714602,4714602,src/addrman.h
Diapolo,2013-06-16T15:56:12Z,"Yeah, printf is our own macro.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r4716216,4716216,src/addrman.h
luke-jr,2013-07-22T20:09:10Z,winsock2.h must be included before mswsock.h or build fails.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5329052,5329052,src/compat.h
Diapolo,2013-07-22T20:55:46Z,I also get a MinGW compiler warning that winsock2.h should be included before windows.h from this file in current master.\n\n<pre>\nd:\mingw\mingw32\i686-w64-mingw32\include\winsock2.h:15: Warnung:#warning Please include winsock2.h before windows.h [-Wcpp]\n #warning Please include winsock2.h before windows.h\n  ^\n</pre>\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5330387,5330387,src/compat.h
Diapolo,2013-07-23T06:40:24Z,"AFAIK you can leave out any mods to this file, as we have a script which generates it and that is likely to revert your small formatting changes everytime we update our translations.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5338236,5338236,src/qt/bitcoinstrings.cpp
Diapolo,2013-07-23T06:44:21Z,"Can you add `#undef loop /* Todo: ugh, remove this when the #define loop is gone from util.h */` before all `#include <QApplication>` you moved or it will break Qt5 compilation on some machines.\n\nNevermind, I created a pull for this: #2847\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5338270,5338270,src/qt/bitcoin.cpp
Diapolo,2013-07-29T06:52:02Z,"Is this needed, as we include it in addressbookpage.h?\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5443703,5443703,src/qt/addressbookpage.cpp
Diapolo,2013-07-29T06:56:31Z,"Ping - see extract_strings_qt.py in in share/qt, perhaps you can rework how that script outputs this file, if you really care :).\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5443741,5443741,src/qt/bitcoinstrings.cpp
Diapolo,2013-07-29T11:42:01Z,"Does this change fit into your proposed style? You move a lib-header in between 2 Qt includes (one of which is in a clause, yes).\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5447552,5447552,src/qt/qrcodedialog.cpp
brandondahler,2013-07-30T00:40:29Z,It is not included in addressbookpage.h--there is only forward declare (see below).\n\n```\nQT_BEGIN_NAMESPACE\n...\nclass QSortFilterProxyModel;\n...\nQT_END_NAMESPACE\n```\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5466150,5466150,src/qt/addressbookpage.cpp
brandondahler,2013-07-30T00:47:59Z,"It does fit how I proposed it (and consequently implemented it).  I decided to group all library headers together, see below for the excerpt from the original post with two lines added for clarity.\n\n```\n...\n#include ""json/a_file.h""\n#include <library1.h>\n#include <library2.h>\n#include ""namedLibrary.h""       // Added\n\n#ifdef SOMETHING2\n#include <aLibraryStartingWithA.h>       // Added\n#in",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5466241,5466241,src/qt/qrcodedialog.cpp
brandondahler,2013-07-30T00:59:19Z,"Not that I think it **really** matters, I updated it anyways :).  I did not revert the changes to src/qt/bitcoinstrings.cpp because it would just cause more changes later.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5466391,5466391,src/qt/bitcoinstrings.cpp
Diapolo,2013-07-30T05:01:04Z,"My fault, I didn't look correctly, sorry :).\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5468651,5468651,src/qt/addressbookpage.cpp
brandondahler,2013-07-31T02:03:43Z,"No problems at all, thanks for reviewing the changes :)\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r5494321,5494321,src/qt/addressbookpage.cpp
Diapolo,2013-08-29T13:32:06Z,Nit: remove this new-line.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6060109,6060109,src/qt/bitcoin.cpp
Diapolo,2013-08-29T13:35:33Z,"This includes QUrl also for Qt 5 and up, which is not needed AFAIK. Can you check if this was changed in other places also?\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6060202,6060202,src/qt/guiutil.cpp
Diapolo,2013-08-29T13:36:50Z,Nit: Above in bitcoin.cpp you keep a new-line after the license ^^.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6060236,6060236,src/qt/bitcoingui.cpp
Diapolo,2013-08-29T13:38:27Z,Nit: missing new-line after license :).\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6060277,6060277,src/qt/paymentserver.cpp
sipa,2013-09-13T11:14:34Z,You're hiding the SecureString dependency on allocators.h by indirect include via serialize.h?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6345670,6345670,src/crypter.h
sipa,2013-09-13T11:17:32Z,"serialize.h defines ::Serialize(S, T, int, int), which is used in this file.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6345714,6345714,src/hash.h
sipa,2013-09-13T11:19:53Z,This file uses for example ::WriteCompactSize from serialize.h.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6345744,6345744,src/key.h
sipa,2013-09-13T11:22:33Z,This is ugly...\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6345760,6345760,src/miner.cpp
sipa,2013-09-13T11:24:38Z,"This file uses CService, defined in netbase.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6345782,6345782,src/protocol.cpp
sipa,2013-09-13T16:01:11Z,Can you keep the alignment here (and elsewhere)?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6351321,6351321,src/uint256.h
sipa,2013-09-13T16:01:34Z,Why does this need util?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6351339,6351339,src/uint256.h
sipa,2013-09-13T16:03:52Z,You're making all dependencies indirect via txdb.h?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6351421,6351421,src/txdb.cpp
brandondahler,2013-09-15T16:20:38Z,I don't understand the question.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6367301,6367301,src/uint256.h
sipa,2013-09-15T16:31:14Z,"The function bodies used to align; by changing uint64 into uint64_t, operator== and operator!= are now shifted two spaces to the right compared to the rest.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6367338,6367338,src/uint256.h
brandondahler,2013-09-15T16:47:46Z,"No, but items which are fulfilled fully by the .cpp's .h file should not be re-included in the .cpp file.  I have made a minor change after reviewing txdb.{cpp,h}. \n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6367391,6367391,src/txdb.cpp
brandondahler,2013-09-15T17:03:22Z,Included in protocol.h\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6367433,6367433,src/protocol.cpp
brandondahler,2013-09-15T17:03:32Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6367434,6367434,src/uint256.h
brandondahler,2013-09-15T17:58:29Z,Added back.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r6367560,6367560,src/crypter.h
laanwj,2013-11-08T16:25:23Z,Why change 0LL to (uint64_t)0?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7530941,7530941,src/rpcwallet.cpp
laanwj,2013-11-08T16:29:07Z,Please keep using unit here instead of hardcoding BitcoinUnits::BTC. I suppose this is an accidental reversion.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7531041,7531041,src/qt/transactiondesc.cpp
laanwj,2013-11-08T16:36:43Z,"This added check is not needed IMO. Any specific reason to add it?\nIf HAVE_MSG_NOSIGNAL is set, MSG_NOSIGNAL _must_ not be defined, if HAVE_MSG_NOSIGNAL is not set, MSG_NOSIGNAL _must not_ be defined. \nIf the detection went wrong, a warning/error can and should be emitted, so I don't see why add this extra clause.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7531233,7531233,src/net.cpp
brandondahler,2013-11-09T00:10:22Z,"(0LL) is equivalent to ((long long) 0), which is not necessarily equivalent to ((uint64_t) 0).\n\nFor instance, uint64_t is actually defined by ""typedef long int64_t;"" my on x86_64 linux machine.  Leaving it as 0LL would cause it to emit a warning about implicit conversion from long long to uint64_t [long].\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7542887,7542887,src/rpcwallet.cpp
brandondahler,2013-11-09T00:22:31Z,Was changed to standardize it with the other 2 existing instances:\n\nutil.h:97\nnetbase.cpp:22\n\nI would imagine it is to prevent redefinition warnings/errors due to including util.h's define (indirectly).\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7543050,7543050,src/net.cpp
laanwj,2013-11-09T05:04:45Z,"Oh, right, agreed, I was just curious. It's fine in this case, though I don't think the (cast) notation without LL will work for specifying constants for numbers that don't fit in 32 bits on 32 bit architectures.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7544571,7544571,src/rpcwallet.cpp
laanwj,2013-11-09T05:04:59Z,OK\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7544573,7544573,src/net.cpp
laanwj,2013-11-09T05:52:42Z,"This extern CWallet declaration is now duplicated in various places, why?\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7544706,7544706,src/rpcdump.cpp
laanwj,2013-11-09T05:52:58Z,"Like here. I understand that you want to avoid header includes, but just copying variable declarations is a kind of cheating :)\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7544708,7544708,src/rpcrawtransaction.cpp
brandondahler,2013-11-09T21:51:52Z,"I think it was done before init.{h,cpp} existed and it would have required main.h -- which would have pulled a large amount of dependencies.\n\nGood catch, removed them.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7546935,7546935,src/rpcdump.cpp
sipa,2013-11-10T01:57:12Z,Nit: trailing space.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547438,7547438,src/Makefile.am
sipa,2013-11-10T01:59:29Z,Why does allocators.h need compat.h?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547444,7547444,src/allocators.h
sipa,2013-11-10T02:04:13Z,"AFAICS, this forward declaration is still necessary.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547458,7547458,src/keystore.h
sipa,2013-11-10T02:05:28Z,Nice catch!\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547462,7547462,src/limitedmap.h
sipa,2013-11-10T02:07:07Z,"No need to forward declare this; CBlockHeader is defined in core, which is included.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547465,7547465,src/main.h
sipa,2013-11-10T02:08:38Z,Same here; already defined in core.h.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547472,7547472,src/main.h
sipa,2013-11-10T02:11:15Z,"Net _really_ should not depend on main, it was really hard to break that circular dependency. Is it still lurking somewhere yet?\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547480,7547480,src/net.cpp
sipa,2013-11-10T02:14:17Z,So? I prefer no indirect dependencies...\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547484,7547484,src/protocol.cpp
sipa,2013-11-10T02:14:45Z,"Ugh, sorry - forgot which file I was looking at. Ignore my comment.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547486,7547486,src/protocol.cpp
sipa,2013-11-10T02:22:31Z,All these should really only be data types with known constant sizes. I'd prefer having int64_t here for that reason.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547489,7547489,src/serialize.h
sipa,2013-11-10T02:23:59Z,Why does script need to depend on main?\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547492,7547492,src/script.cpp
brandondahler,2013-11-10T04:32:22Z,"I have no clue, fixing.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547695,7547695,src/allocators.h
brandondahler,2013-11-10T05:33:36Z,I tried to do this but it caused build errors due to problems with the template version lower in the file.  Would be best to address this in a new issue/pull.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547805,7547805,src/serialize.h
brandondahler,2013-11-10T06:14:01Z,"Ended up being needed in util.h instead of allocators.h, specifically for windows.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7547881,7547881,src/allocators.h
sipa,2013-11-10T09:30:29Z,"Since #3115, this shouldn't be needed anymore.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548241,7548241,src/main.cpp
sipa,2013-11-10T09:31:05Z,Also defined in core.h.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548242,7548242,src/main.h
sipa,2013-11-10T09:31:29Z,Defined in net.h.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548243,7548243,src/main.h
sipa,2013-11-10T09:32:28Z,Also defined in net.h.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548245,7548245,src/main.h
sipa,2013-11-10T09:33:06Z,Not needed.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548247,7548247,src/main.h
sipa,2013-11-10T09:33:17Z,Not needed since #3115.\n,https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548250,7548250,src/main.h
sipa,2013-11-10T09:33:37Z,"Not needed, I think.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548252,7548252,src/main.h
sipa,2013-11-10T09:41:28Z,"Fair enough. I think that's a general problem that already exists, anyway.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548267,7548267,src/serialize.h
sipa,2013-11-10T10:10:00Z,"Oh, this is my fault: it was supposed to remove setpwalletRegistered and its critical section, but apparently didn't. In any case, they're obsolete now, and that can remove the dependency on CWallet.\n",https://github.com/bitcoin/bitcoin/pull/2767#discussion_r7548302,7548302,src/main.cpp
