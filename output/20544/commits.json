[
  {
    "sha": "2ed0a09baeac4f99460879e3d68741e3eeb69951",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWQwYTA5YmFlYWM0Zjk5NDYwODc5ZTNkNjg3NDFlM2VlYjY5OTUx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-11-26T17:00:58Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-04T19:32:18Z"
      },
      "message": "build: Do not repeat warning names in -Werror=... options\n\nThis change also effectively activates -W... flags for builds with\ndependencies.",
      "tree": {
        "sha": "bcdc9d4e99dc6e12d04feb66d50f62051a13cc7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcdc9d4e99dc6e12d04feb66d50f62051a13cc7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ed0a09baeac4f99460879e3d68741e3eeb69951",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/KjsIACgkQQQEIES5+\nqB+D9A/+Nb14La/Khb6D7cNbGoyWdpqyWJquFcQitG/j2LKweL9XzCG0wjgSB7ap\nFnMr80kIsXRa3N52CC5rSsQZ0/qbiQgnbTIbvjuwfUsTpEpR92gQU1+vyBMLlqNs\nrGcnPVd2H9nmp+rniPsQZm2DlFap/uQDkGONNjE4ZwjpGgtTJm8JsTkjzuupqoEu\nsWfgPiXTJb6V06zrco1zeKWFSxQfCvsuZjdXOQ8ukfL2DN/wi21CeDFYjDzjH1go\nFW355dCy1jVzY2bWd+nNX00uyxmnxb5BqrWV1vKe9l/mSEPKmgABQn5IqkPA/Mr9\nKXkVrloNVFZPfNyQS/iJJpa9aRhXsuFo3U/1yL+ySWSelTV5RWvxJCidKiq8fyR3\n0dagR4faOl9ixXhK1bIfZBj+APy3wHkGa8+1sErTv6eP7xCCHbEg/2gFamw5/TN1\ny5JK2qxoIp6S15MaRIJdbgwA0/w03kU++w0sEUOsuakKDP4RITWjYEDsx3HTrT6H\nxsRGWhy3J+gf1i48lyaXvB1VVniq4Wq93KaV1+Edt0fCdkm8mIF1c+KuWXYqYeG5\nr9A9bluPh5tpneBYEG0cIWmc99rY1MY0wMA8JDCs958rqSrZhA7SIC2QHCH+Y9Pd\naLrx4JudQbcUJVn6B1Iy38+VggNtos2Kyfd3+DJbOEHzV5lK1HE=\n=A9fa\n-----END PGP SIGNATURE-----",
        "payload": "tree bcdc9d4e99dc6e12d04feb66d50f62051a13cc7f\nparent dca80ffb45fcc8e6eedb6dc481d500dedab4248b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1606410058 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1607110338 +0200\n\nbuild: Do not repeat warning names in -Werror=... options\n\nThis change also effectively activates -W... flags for builds with\ndependencies.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed0a09baeac4f99460879e3d68741e3eeb69951",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed0a09baeac4f99460879e3d68741e3eeb69951",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed0a09baeac4f99460879e3d68741e3eeb69951/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dca80ffb45fcc8e6eedb6dc481d500dedab4248b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dca80ffb45fcc8e6eedb6dc481d500dedab4248b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dca80ffb45fcc8e6eedb6dc481d500dedab4248b"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 14,
      "deletions": 17
    },
    "files": [
      {
        "sha": "8a7d37c9453db8e1c18a66f8d4b9343cbad0e716",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 14,
        "deletions": 17,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed0a09baeac4f99460879e3d68741e3eeb69951/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed0a09baeac4f99460879e3d68741e3eeb69951/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2ed0a09baeac4f99460879e3d68741e3eeb69951",
        "patch": "@@ -384,25 +384,10 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n     AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n   fi\n-  AX_CHECK_COMPILE_FLAG([-Werror=gnu],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=gnu\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=shadow-field],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=shadow-field\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=range-loop-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=range-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=sign-compare],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=sign-compare\"],,[[$CXXFLAG_WERROR]])\n-  dnl -Wsuggest-override is broken with GCC before 9.2\n-  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78010\n-  AX_CHECK_COMPILE_FLAG([-Werror=suggest-override],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=suggest-override\"],,[[$CXXFLAG_WERROR]],\n-                        [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n+  ERROR_CXXFLAGS=$CXXFLAG_WERROR\n fi\n \n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+if test \"x$depends_prefix\" != \"x\" || test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n@@ -422,6 +407,8 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wduplicated-cond],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-cond\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wlogical-op],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wlogical-op\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\n+  dnl -Wsuggest-override is broken with GCC before 9.2\n+  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78010\n   AX_CHECK_COMPILE_FLAG([-Wsuggest-override],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsuggest-override\"],,[[$CXXFLAG_WERROR]],\n                         [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n   AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n@@ -435,6 +422,16 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+\n+  dnl This is a temporary workaround. See https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-674404780\n+  AX_CHECK_COMPILE_FLAG([-Wunused-command-line-argument],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-command-line-argument\"],,[[$CXXFLAG_WERROR]])\n+\n+  dnl -Wmissing-braces is broken for aggregate initialization of std::array in Clang (where it is enabled by -Wall) before 5.0\n+  dnl https://reviews.llvm.org/rL314838\n+  dnl As AX_CHECK_COMPILE_FLAG caches its result, a flag-shuffle hack is required.\n+  AX_CHECK_COMPILE_FLAG([$CXXFLAG_WERROR -Wmissing-braces],\n+                        [AX_CHECK_COMPILE_FLAG([-Wmissing-braces],, [NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-missing-braces\"], [$CXXFLAG_WERROR],\n+                                               [AC_LANG_PROGRAM([[#include <array>]], [[std::array a{1, 2, 3}]])])])\n fi\n \n dnl Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review."
      }
    ]
  }
]