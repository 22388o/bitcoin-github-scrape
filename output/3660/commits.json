[
  {
    "sha": "eebdd998e37252da4200b2e5218b3b121292249a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWJkZDk5OGUzNzI1MmRhNDIwMGIyZTUyMThiM2IxMjEyOTIyNDlh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-12T15:59:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-12T16:02:40Z"
      },
      "message": "Add `resendwallettx` RPC\n\nAdd a RPC that can be used to force resend of a single, or\nall unconfirmed wallet transactions.\n\nThis can be useful for cases in which the transaction submit\nwas lost and you're too impatient to wait for the automatic rebroadcast.\nIt's also useful in testing and development.",
      "tree": {
        "sha": "af2c4c7c63cea1753b0d0126c1e17c40fba4fd7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af2c4c7c63cea1753b0d0126c1e17c40fba4fd7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eebdd998e37252da4200b2e5218b3b121292249a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eebdd998e37252da4200b2e5218b3b121292249a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eebdd998e37252da4200b2e5218b3b121292249a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eebdd998e37252da4200b2e5218b3b121292249a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19e5b9d2dfcac4efadba636745485d9660fb1abe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19e5b9d2dfcac4efadba636745485d9660fb1abe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19e5b9d2dfcac4efadba636745485d9660fb1abe"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 37,
      "deletions": 3
    },
    "files": [
      {
        "sha": "013772ff8ec1341a69f4005a7b4a9b17824b00aa",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eebdd998e37252da4200b2e5218b3b121292249a/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eebdd998e37252da4200b2e5218b3b121292249a/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=eebdd998e37252da4200b2e5218b3b121292249a",
        "patch": "@@ -296,6 +296,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n     { \"settxfee\",               &settxfee,               false,     false,      true },\n+    { \"resendwallettx\",         &resendwallettx,         false,     false,      true },\n \n     /* Wallet-enabled mining */\n     { \"getgenerate\",            &getgenerate,            true,      false,      false },"
      },
      {
        "sha": "6b4e63f0a965b4e06e219ceef610bcfe45723a29",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eebdd998e37252da4200b2e5218b3b121292249a/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eebdd998e37252da4200b2e5218b3b121292249a/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=eebdd998e37252da4200b2e5218b3b121292249a",
        "patch": "@@ -163,6 +163,7 @@ extern json_spirit::Value walletlock(const json_spirit::Array& params, bool fHel\n extern json_spirit::Value encryptwallet(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value validateaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getinfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value resendwallettx(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "8369931a1122d03481cbc0dc7a2fce05e876d532",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eebdd998e37252da4200b2e5218b3b121292249a/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eebdd998e37252da4200b2e5218b3b121292249a/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=eebdd998e37252da4200b2e5218b3b121292249a",
        "patch": "@@ -1869,4 +1869,28 @@ Value settxfee(const Array& params, bool fHelp)\n     return true;\n }\n \n+Value resendwallettx(const Array& params, bool fHelp)\n+{\n+    if (fHelp)\n+        throw runtime_error(\n+            \"resendwallettx\\n\"\n+            \"\\nRebroadcast a specific wallet transaction or all wallet transactions.\\n\"\n+            \"1. \\\"txid\\\"    (string, optional) The transaction id, match all unconfirmed transactions if not provided\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"resendwallettx\", \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\")\n+            + HelpExampleRpc(\"resendwallettx\", \"\")\n+        );\n+    if(params.size() > 0)\n+    {\n+        uint256 hash;\n+        hash.SetHex(params[0].get_str());\n+        std::map<uint256, CWalletTx>::iterator i = pwalletMain->mapWallet.find(hash);\n+        if (i == pwalletMain->mapWallet.end())\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid or non-wallet transaction id\");\n+        i->second.RelayWalletTransaction();\n+    } else {\n+        pwalletMain->DoResendWalletTransactions(true);\n+    }\n+    return true;\n+}\n "
      },
      {
        "sha": "abe0f251dd8b9494dcadcbd419c8e5746182973e",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eebdd998e37252da4200b2e5218b3b121292249a/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eebdd998e37252da4200b2e5218b3b121292249a/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=eebdd998e37252da4200b2e5218b3b121292249a",
        "patch": "@@ -923,8 +923,13 @@ void CWallet::ResendWalletTransactions()\n         return;\n     nLastResend = GetTime();\n \n+    DoResendWalletTransactions(false);\n+}\n+\n+void CWallet::DoResendWalletTransactions(bool bForce)\n+{\n     // Rebroadcast any of our txes that aren't in a block yet\n-    LogPrintf(\"ResendWalletTransactions()\\n\");\n+    LogPrintf(\"DoResendWalletTransactions()\\n\");\n     {\n         LOCK(cs_wallet);\n         // Sort them in chronological order\n@@ -934,7 +939,7 @@ void CWallet::ResendWalletTransactions()\n             CWalletTx& wtx = item.second;\n             // Don't rebroadcast until it's had plenty of time that\n             // it should have gotten in already by now.\n-            if (nTimeBestReceived - (int64_t)wtx.nTimeReceived > 5 * 60)\n+            if (bForce || (nTimeBestReceived - (int64_t)wtx.nTimeReceived > 5 * 60))\n                 mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));\n         }\n         BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)\n@@ -949,7 +954,6 @@ void CWallet::ResendWalletTransactions()\n \n \n \n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // Actions"
      },
      {
        "sha": "853d292995365abf0cf2f578638ea9a6603e984b",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eebdd998e37252da4200b2e5218b3b121292249a/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eebdd998e37252da4200b2e5218b3b121292249a/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=eebdd998e37252da4200b2e5218b3b121292249a",
        "patch": "@@ -230,7 +230,11 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     void WalletUpdateSpent(const CTransaction& prevout);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n+    /// Conditionally resend wallet transactions if it has been long enough ago\n     void ResendWalletTransactions();\n+    /// Resend wallet transactions now\n+    /// @argument bForce flag to resend all wallet transactions, even those that have been sent less than 5 hours ago\n+    void DoResendWalletTransactions(bool bForce);\n     int64_t GetBalance() const;\n     int64_t GetUnconfirmedBalance() const;\n     int64_t GetImmatureBalance() const;"
      }
    ]
  }
]