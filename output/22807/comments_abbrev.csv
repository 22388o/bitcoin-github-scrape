ryanofsky,2021-08-26 17:26:23,"I think #19762 is a better solution to the problem of supporting large numbers of optional arguments. #19762 allows options to be specified without having to quote JSON on the command line and provides a more natural calling interface for languages like python that support named arguments. Unlike this PR, it is fully generic and does not require adding and maintaining confusing backwards compatibi",https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-906601116,906601116,
luke-jr,2021-08-26 21:25:40,"Concept ACK\n\n>I think #19762 is a better solution to the problem of supporting large numbers of optional arguments.\n\nIt's a good idea, but non-standard and IMO complimentary.\n\n> #19762 can also be a foundation for supporting future usability improvements like being able to declare individual arguments keyword-only (only allowed to be passed by name and not position).\n\nThis would ma",https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-906754176,906754176,
ryanofsky,2021-08-26 21:59:57,"> Concept ACK\n> \n> > I think #19762 is a better solution to the problem of supporting large numbers of optional arguments.\n> \n> It's a good idea\n\nGreat, review is welcome.\n\n> , but non-standard\n\nnon-standard != not standardized\n\nThe ""args"" parameter added by #19762 is documented, but not standardized, in the exact same way the ""options"" parameter added by this PR is documen",https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-906771444,906771444,
kristapsk,2021-08-27 10:20:53,"> functional tests currently don't have tests for `skip` at all\n\nI was wrong, `skip` is covered by `test/functional/wallet_coinbase_category.py`.",https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-907095884,907095884,
kristapsk,2021-08-27 10:37:38,Addressed review suggestions from @luke-jr.,https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-907106526,907106526,
kristapsk,2021-08-28 18:23:29,Removed unnecessary extra blank line inside `RPCHelpMan()` added by accident.,https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-907668664,907668664,
kristapsk,2021-08-30 14:20:06,"@promag That was initial way it was done, to add new positional arguments, see #14898. It was @luke-jr idea to add it instead in place of existing `skip` and I think it makes sense. Together `skip`, `paginatebypointer`, `nextpagepointer` and `ascending_order` can be seen as analogue to MySQL's `ORDER BY x LIMIT y,z` and they will be used most likely rarely, so not adding four additional positional",https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-908384413,908384413,
promag,2021-09-03 08:03:45,"@kristapsk I think it's mixing 2 different things: add `options` parameter VS allow shorter -cli calls. If we want to simplify/improve -cli usage then I think we should try @ryanofsky approach first before ""hijacking"" one argument to support the other on the server-side.",https://github.com/bitcoin/bitcoin/pull/22807#issuecomment-912343094,912343094,
luke-jr,2021-08-26 21:27:48,"```suggestion\n    if (options.type() == UniValue::VNUM) {\n    ...\n    } else if (!options.isNull()) {\n```",https://github.com/bitcoin/bitcoin/pull/22807#discussion_r696989866,696989866,src/wallet/rpcwallet.cpp
luke-jr,2021-08-26 21:30:21,"```suggestion\n                }, /* allow missing/null keys */ true, /* disallow unknown keys */ true);\n```",https://github.com/bitcoin/bitcoin/pull/22807#discussion_r696991289,696991289,src/wallet/rpcwallet.cpp
jonatack,2021-09-15 15:54:00,"I'm not sure here, but previous reviews on questions like this and `doc/developer-notes.md` generally seemed to discourage mixing types / overloading:\n\n```\n- Try not to overload methods on argument type. E.g. don't make `getblock(true)`\n  and `getblock(""hash"")` do different things.\n```\n",https://github.com/bitcoin/bitcoin/pull/22807#discussion_r709325545,709325545,src/wallet/rpcwallet.cpp
luke-jr,2021-09-15 20:03:39,"That's about supported use, not deprecation compatibility...",https://github.com/bitcoin/bitcoin/pull/22807#discussion_r709533286,709533286,src/wallet/rpcwallet.cpp
