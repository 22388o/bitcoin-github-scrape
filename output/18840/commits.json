[
  {
    "sha": "fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTNmMTQ3NzEzN2QzZTMzZDc0N2NiMmM4NjFmNjFiZmYzYjFjYmM3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-01T13:19:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-01T13:19:02Z"
      },
      "message": "wallet: Fully process previous wallet calls before accepting new ones",
      "tree": {
        "sha": "fd56878e164bdba9d0e8657bc4150e53abf49177",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd56878e164bdba9d0e8657bc4150e53abf49177"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiEhAwAzqsrctNnO0fNlHPgYx6AaN/+kY2P+kDmsgWIkRxgJzJmKZ9GclFc0rVB\nk0u0Z85V/7LGQ3u5/2jT3p2dcezw+ZVJJ9EY6SWC9c4tBem1PrGt07v0twc/0dDD\nKcs1V1T56tFDn01IcpgWrvjde6LGRanWdKKWTIehh7RiGyk6Qn+ArlINVHHc5nAx\nMIma2v4vK+OTmzGamF3HsKvZNL019XDm0qOkEB0lSLvFhfK2kAmGYSC8h7j3M9fd\nlVilMcgFZqwle47Q7MCd/+afvvX3TZWyl667f3g256xpORaBPg1yCR850tC5D26t\nPOwhb3gP0XTqbvZ4+O0biGqsKHrinQ5yCrc1ONsxZHl20JwsdxCjyKGBe2Bdesi9\ncR+fcOI59pGmwyp9D/agoA/o1I+nmqe+0800A2SCAqShw6I7MSQRTnOXikSkdjZP\n0sRdyHomuhqxkqgnIyRm6pG1EIAtGO++E2Tz/zjvqQOEO4pDpIIXANBd9VQyjCgf\n5Aci1qqT\n=E5Rn\n-----END PGP SIGNATURE-----",
        "payload": "tree fd56878e164bdba9d0e8657bc4150e53abf49177\nparent ae32e5ce3d268881cbf631de1903b2a414bb64e1\nauthor MarcoFalke <falke.marco@gmail.com> 1588339164 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1588339142 -0400\n\nwallet: Fully process previous wallet calls before accepting new ones\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae32e5ce3d268881cbf631de1903b2a414bb64e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae32e5ce3d268881cbf631de1903b2a414bb64e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae32e5ce3d268881cbf631de1903b2a414bb64e1"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 10,
      "deletions": 16
    },
    "files": [
      {
        "sha": "1976566c4f14c810e220248de1f28fd0de06812c",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
        "patch": "@@ -384,12 +384,8 @@ class ChainImpl : public Chain\n     {\n         return MakeUnique<NotificationsHandlerImpl>(std::move(notifications));\n     }\n-    void waitForNotificationsIfTipChanged(const uint256& old_tip) override\n+    void waitForNotifications() override\n     {\n-        if (!old_tip.IsNull()) {\n-            LOCK(::cs_main);\n-            if (old_tip == ::ChainActive().Tip()->GetBlockHash()) return;\n-        }\n         SyncWithValidationInterfaceQueue();\n     }\n     std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override"
      },
      {
        "sha": "7563c204f1e4a6f1bc1d5c0a25e5363dca50760e",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
        "patch": "@@ -268,9 +268,8 @@ class Chain\n     //! Register handler for notifications.\n     virtual std::unique_ptr<Handler> handleNotifications(std::shared_ptr<Notifications> notifications) = 0;\n \n-    //! Wait for pending notifications to be processed unless block hash points to the current\n-    //! chain tip.\n-    virtual void waitForNotificationsIfTipChanged(const uint256& old_tip) = 0;\n+    //! Wait for pending notifications to be processed\n+    virtual void waitForNotifications() = 0;\n \n     //! Register handler for RPC. Command is not copied, so reference\n     //! needs to remain valid until Handler is disconnected."
      },
      {
        "sha": "cb8bc99838e7b822fbcfc1c3067abe2e27325c8b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
        "patch": "@@ -1154,14 +1154,13 @@ void CWallet::updatedBlockTip()\n }\n \n \n-void CWallet::BlockUntilSyncedToCurrentChain() const {\n+void CWallet::BlockUntilSyncedToCurrentChain() const\n+{\n     AssertLockNotHeld(cs_wallet);\n-    // Skip the queue-draining stuff if we know we're caught up with\n-    // ::ChainActive().Tip(), otherwise put a callback in the validation interface queue and wait\n-    // for the queue to drain enough to execute it (indicating we are caught up\n-    // at least with the time we entered this function).\n-    uint256 last_block_hash = WITH_LOCK(cs_wallet, return m_last_block_processed);\n-    chain().waitForNotificationsIfTipChanged(last_block_hash);\n+    // Wait for all chain and mempool notifications that\n+    // * may have been reported in previous RPCs\n+    // * or may have been fired by previous RPCs, while not yet being reflected in RPCs because they are still in the queue\n+    chain().waitForNotifications();\n }\n \n "
      },
      {
        "sha": "a1056dd7ede12343dfb8b4a4e6cfa08fa46f9dc5",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3f1477137d3e33d747cb2c861f61bff3b1cbc7/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=fa3f1477137d3e33d747cb2c861f61bff3b1cbc7",
        "patch": "@@ -1144,7 +1144,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /**\n      * Blocks until the wallet state is up-to-date to /at least/ the current\n-     * chain at the time this function is entered\n+     * chain and mempool at the time this function is entered\n      * Obviously holding cs_main/cs_wallet when going into this call may cause\n      * deadlock\n      */"
      }
    ]
  }
]