[
  {
    "sha": "6eddd43e6d2222895a4b8e7fae800b919131db66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWRkZDQzZTZkMjIyMjg5NWE0YjhlN2ZhZTgwMGI5MTkxMzFkYjY2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-10-30T09:29:27Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-10-30T09:29:27Z"
      },
      "message": "Fix warnings when building with DEBUG_ADDRMAN\n\nWarnings prior to this commit:\n\n```\naddrman.cpp:390:24: warning: comparison of integers of different signs: 'size_type' (aka 'unsigned long') and 'int' [-Wsign-compare]\n    if (vRandom.size() != nTried + nNew)\n        ~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~\naddrman.cpp:411:52: warning: comparison of integers of different signs: 'int' and 'size_type' (aka 'unsigned long') [-Wsign-compare]\n        if (info.nRandomPos < 0 || info.nRandomPos >= vRandom.size() || vRandom[info.nRandomPos] != n)\n                                   ~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~\naddrman.cpp:419:25: warning: comparison of integers of different signs: 'size_type' (aka 'unsigned long') and 'int' [-Wsign-compare]\n    if (setTried.size() != nTried)\n        ~~~~~~~~~~~~~~~ ^  ~~~~~~\naddrman.cpp:421:23: warning: comparison of integers of different signs: 'size_type' (aka 'unsigned long') and 'int' [-Wsign-compare]\n    if (mapNew.size() != nNew)\n        ~~~~~~~~~~~~~ ^  ~~~~\n4 warnings generated.\n```",
      "tree": {
        "sha": "5ae18bef38c9dfb437323325ee80ac620fe894eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ae18bef38c9dfb437323325ee80ac620fe894eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6eddd43e6d2222895a4b8e7fae800b919131db66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6eddd43e6d2222895a4b8e7fae800b919131db66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6eddd43e6d2222895a4b8e7fae800b919131db66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6eddd43e6d2222895a4b8e7fae800b919131db66/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "aa19da0add3964fc3d051266b3d4899f57d49d45",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6eddd43e6d2222895a4b8e7fae800b919131db66/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6eddd43e6d2222895a4b8e7fae800b919131db66/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=6eddd43e6d2222895a4b8e7fae800b919131db66",
        "patch": "@@ -387,7 +387,7 @@ int CAddrMan::Check_()\n     std::set<int> setTried;\n     std::map<int, int> mapNew;\n \n-    if (vRandom.size() != nTried + nNew)\n+    if (vRandom.size() != (size_t)(nTried + nNew))\n         return -7;\n \n     for (std::map<int, CAddrInfo>::iterator it = mapInfo.begin(); it != mapInfo.end(); it++) {\n@@ -408,17 +408,17 @@ int CAddrMan::Check_()\n         }\n         if (mapAddr[info] != n)\n             return -5;\n-        if (info.nRandomPos < 0 || info.nRandomPos >= vRandom.size() || vRandom[info.nRandomPos] != n)\n+        if (info.nRandomPos < 0 || (size_t)info.nRandomPos >= vRandom.size() || vRandom[info.nRandomPos] != n)\n             return -14;\n         if (info.nLastTry < 0)\n             return -6;\n         if (info.nLastSuccess < 0)\n             return -8;\n     }\n \n-    if (setTried.size() != nTried)\n+    if (setTried.size() != (size_t)nTried)\n         return -9;\n-    if (mapNew.size() != nNew)\n+    if (mapNew.size() != (size_t)nNew)\n         return -10;\n \n     for (int n = 0; n < ADDRMAN_TRIED_BUCKET_COUNT; n++) {"
      }
    ]
  }
]