[
  {
    "sha": "ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTJkMTBhZDBjMGUwNGQwYjlkYTQ1MzVhNmZmZjI2NWFjMjUwMWU1",
    "commit": {
      "author": {
        "name": "James Hilliard",
        "email": "james.hilliard1@gmail.com",
        "date": "2017-07-27T12:34:09Z"
      },
      "committer": {
        "name": "James Hilliard",
        "email": "james.hilliard1@gmail.com",
        "date": "2017-07-27T12:34:09Z"
      },
      "message": "Check if sys/random.h is required for getentropy on OSX.",
      "tree": {
        "sha": "3818176646573cda7792fdf472408e345c7e33c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3818176646573cda7792fdf472408e345c7e33c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5/comments",
    "author": {
      "login": "jameshilliard",
      "id": 3298484,
      "node_id": "MDQ6VXNlcjMyOTg0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3298484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jameshilliard",
      "html_url": "https://github.com/jameshilliard",
      "followers_url": "https://api.github.com/users/jameshilliard/followers",
      "following_url": "https://api.github.com/users/jameshilliard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jameshilliard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jameshilliard/subscriptions",
      "organizations_url": "https://api.github.com/users/jameshilliard/orgs",
      "repos_url": "https://api.github.com/users/jameshilliard/repos",
      "events_url": "https://api.github.com/users/jameshilliard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jameshilliard/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jameshilliard",
      "id": 3298484,
      "node_id": "MDQ6VXNlcjMyOTg0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3298484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jameshilliard",
      "html_url": "https://github.com/jameshilliard",
      "followers_url": "https://api.github.com/users/jameshilliard/followers",
      "following_url": "https://api.github.com/users/jameshilliard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jameshilliard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jameshilliard/subscriptions",
      "organizations_url": "https://api.github.com/users/jameshilliard/orgs",
      "repos_url": "https://api.github.com/users/jameshilliard/repos",
      "events_url": "https://api.github.com/users/jameshilliard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jameshilliard/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba1bbb049b8f3ad295f36b060f775591b1fed8c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba1bbb049b8f3ad295f36b060f775591b1fed8c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba1bbb049b8f3ad295f36b060f775591b1fed8c1"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 21,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1fc4e3219e254fdf260606a7e22c9b50aa7523e7",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5",
        "patch": "@@ -675,6 +675,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],"
      },
      {
        "sha": "e07ef444712795b93a3e8b00fa2fb9a4d01c7b62",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5",
        "patch": "@@ -27,9 +27,12 @@\n #include <sys/syscall.h>\n #include <linux/random.h>\n #endif\n-#ifdef HAVE_GETENTROPY\n+#if defined(HAVE_GETENTROPY) || (defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX))\n #include <unistd.h>\n #endif\n+#if defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX)\n+#include <sys/random.h>\n+#endif\n #ifdef HAVE_SYSCTL_ARND\n #include <sys/sysctl.h>\n #endif\n@@ -237,6 +240,15 @@ void GetOSRand(unsigned char *ent32)\n     if (getentropy(ent32, NUM_OS_RANDOM_BYTES) != 0) {\n         RandFailure();\n     }\n+#elif defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX)\n+    // We need a fallback for OSX < 10.12\n+    if (&getentropy != NULL) {\n+        if (getentropy(ent32, NUM_OS_RANDOM_BYTES) != 0) {\n+            RandFailure();\n+        }\n+    } else {\n+        GetDevURandom(ent32);\n+    }\n #elif defined(HAVE_SYSCTL_ARND)\n     /* FreeBSD and similar. It is possible for the call to return less\n      * bytes than requested, so need to read in a loop."
      }
    ]
  }
]