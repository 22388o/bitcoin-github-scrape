[
  {
    "sha": "fed30940ef22f242b9dada2dc4f7c5348faf8922",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWQzMDk0MGVmMjJmMjQyYjlkYWRhMmRjNGY3YzUzNDhmYWY4OTIy",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:30:02Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:30:02Z"
      },
      "message": "Acquire cs_vNodes before changing refrence counts",
      "tree": {
        "sha": "c397e6d31f3ab7dc4b723bb4cc9dc6fd6f7512ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c397e6d31f3ab7dc4b723bb4cc9dc6fd6f7512ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fed30940ef22f242b9dada2dc4f7c5348faf8922",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fed30940ef22f242b9dada2dc4f7c5348faf8922",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fed30940ef22f242b9dada2dc4f7c5348faf8922",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fed30940ef22f242b9dada2dc4f7c5348faf8922/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69ee1aab00b9189865dfca6fb5c33c61a3c3ea67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69ee1aab00b9189865dfca6fb5c33c61a3c3ea67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69ee1aab00b9189865dfca6fb5c33c61a3c3ea67"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e1b0e83e992bfe37db22e942abfa6c9db544d6d5",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fed30940ef22f242b9dada2dc4f7c5348faf8922/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fed30940ef22f242b9dada2dc4f7c5348faf8922/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fed30940ef22f242b9dada2dc4f7c5348faf8922",
        "patch": "@@ -777,15 +777,24 @@ static list<CNode*> vNodesDisconnected;\n \n class CNodeRef {\n public:\n-    CNodeRef(CNode *pnode) : _pnode(pnode)  {_pnode->AddRef();}\n-    ~CNodeRef() {_pnode->Release();}\n+    CNodeRef(CNode *pnode) : _pnode(pnode) {\n+        LOCK(cs_vNodes);\n+        _pnode->AddRef();\n+    }\n+\n+    ~CNodeRef() {\n+        LOCK(cs_vNodes);\n+        _pnode->Release();\n+    }\n \n     CNode& operator *() const {return *_pnode;};\n     CNode* operator ->() const {return _pnode;};\n \n     CNodeRef& operator =(const CNodeRef& other)\n     {\n         if (this != &other) {\n+            LOCK(cs_vNodes);\n+\n             _pnode->Release();\n             _pnode = other._pnode;\n             _pnode->AddRef();\n@@ -796,6 +805,7 @@ class CNodeRef {\n     CNodeRef(const CNodeRef& other):\n         _pnode(other._pnode)\n     {\n+        LOCK(cs_vNodes);\n         _pnode->AddRef();\n     }\n private:"
      }
    ]
  },
  {
    "sha": "000c18aaceeebdcaf65508fcdc3d00397971dcae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDBjMThhYWNlZWViZGNhZjY1NTA4ZmNkYzNkMDAzOTc5NzFkY2Fl",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:31:13Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-25T23:31:13Z"
      },
      "message": "Fix comment",
      "tree": {
        "sha": "fd59febebcce3aa0ba7cb550aa5e5765b782e264",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd59febebcce3aa0ba7cb550aa5e5765b782e264"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/000c18aaceeebdcaf65508fcdc3d00397971dcae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/000c18aaceeebdcaf65508fcdc3d00397971dcae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/000c18aaceeebdcaf65508fcdc3d00397971dcae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/000c18aaceeebdcaf65508fcdc3d00397971dcae/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fed30940ef22f242b9dada2dc4f7c5348faf8922",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fed30940ef22f242b9dada2dc4f7c5348faf8922",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fed30940ef22f242b9dada2dc4f7c5348faf8922"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d266b2f21fd3fe391a3954153e3f300300a9ddc1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/000c18aaceeebdcaf65508fcdc3d00397971dcae/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/000c18aaceeebdcaf65508fcdc3d00397971dcae/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=000c18aaceeebdcaf65508fcdc3d00397971dcae",
        "patch": "@@ -891,7 +891,7 @@ static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n \n     if (vEvictionCandidates.empty()) return false;\n \n-    // Protect the 64 nodes which have been connected the longest.\n+    // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the existing implicit behavior.\n     std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n     vEvictionCandidates.erase(vEvictionCandidates.end() - static_cast<int>(vEvictionCandidates.size() / 2), vEvictionCandidates.end());"
      }
    ]
  },
  {
    "sha": "c33c11ebacb93d74370f44f6c24d447da88648f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzNjMTFlYmFjYjkzZDc0MzcwZjQ0ZjZjMjRkNDQ3ZGE4ODY0OGY0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-08-06T17:49:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-08-25T23:59:09Z"
      },
      "message": "Improve addrman Select() performance when buckets are nearly empty",
      "tree": {
        "sha": "4106b2c5f11c440cf1705ca64cbebcee52cd728d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4106b2c5f11c440cf1705ca64cbebcee52cd728d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c33c11ebacb93d74370f44f6c24d447da88648f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c33c11ebacb93d74370f44f6c24d447da88648f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c33c11ebacb93d74370f44f6c24d447da88648f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c33c11ebacb93d74370f44f6c24d447da88648f4/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da9beb288d2ee35b9c70513dd18f220b2dc32f16"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ff1f7e918778bf623b876df1a298e66bad2c892a",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c33c11ebacb93d74370f44f6c24d447da88648f4/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c33c11ebacb93d74370f44f6c24d447da88648f4/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=c33c11ebacb93d74370f44f6c24d447da88648f4",
        "patch": "@@ -341,8 +341,10 @@ CAddrInfo CAddrMan::Select_()\n         while (1) {\n             int nKBucket = GetRandInt(ADDRMAN_TRIED_BUCKET_COUNT);\n             int nKBucketPos = GetRandInt(ADDRMAN_BUCKET_SIZE);\n-            if (vvTried[nKBucket][nKBucketPos] == -1)\n-                continue;\n+            while (vvTried[nKBucket][nKBucketPos] == -1) {\n+                nKBucket = (nKBucket + insecure_rand()) % ADDRMAN_TRIED_BUCKET_COUNT;\n+                nKBucketPos = (nKBucketPos + insecure_rand()) % ADDRMAN_BUCKET_SIZE;\n+            }\n             int nId = vvTried[nKBucket][nKBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];\n@@ -356,8 +358,10 @@ CAddrInfo CAddrMan::Select_()\n         while (1) {\n             int nUBucket = GetRandInt(ADDRMAN_NEW_BUCKET_COUNT);\n             int nUBucketPos = GetRandInt(ADDRMAN_BUCKET_SIZE);\n-            if (vvNew[nUBucket][nUBucketPos] == -1)\n-                continue;\n+            while (vvNew[nUBucket][nUBucketPos] == -1) {\n+                nUBucket = (nUBucket + insecure_rand()) % ADDRMAN_NEW_BUCKET_COUNT;\n+                nUBucketPos = (nUBucketPos + insecure_rand()) % ADDRMAN_BUCKET_SIZE;\n+            }\n             int nId = vvNew[nUBucket][nUBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];"
      }
    ]
  },
  {
    "sha": "981fd92bc5e233b15cb4205f17c9b707e6846a18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODFmZDkyYmM1ZTIzM2IxNWNiNDIwNWYxN2M5YjcwN2U2ODQ2YTE4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-26T10:04:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-26T10:06:08Z"
      },
      "message": "Merge pull request #6590\n\nbd30c3d rpc-tests: re-enable rpc-tests for Windows (Cory Fields)\na193387 net: Set SO_REUSEADDR for Windows too (Cory Fields)",
      "tree": {
        "sha": "7649a5389c7174dff7c5c0fe3be7bc0db1949ac5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7649a5389c7174dff7c5c0fe3be7bc0db1949ac5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/981fd92bc5e233b15cb4205f17c9b707e6846a18",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV3Y+QAAoJEHSBCwEjRsmmgTIH/RqcZMK/nTr7F+sG2YwWbQoa\nc5TMg0oBjoFW0TNd2zM9xSn3p2e00T7P/9jTb7ZOPXrHo+cEnrJB0jGun25vb5oi\nEgyBCv31moy+nPsoqnZapV7KjoRdAfEtRNcAdPQJhqg+Po46bpQcgncgNgG1i0YB\nMU0gY3cekvXPGbrUx0Q6+dwsWvuax0urNO0UXPBWw7VmFnnk7+ZXTK5mYW8zc/UE\nO9OXSGgJiB4pmaDbAtBMbwk9HONNAX+eRv6cySINMyHOIUsMhI/6PNyjfweaoIDF\n521lhsmnMmv7K0Od1S5MIm5FJZwYWhLSOOiNJv88wLtx+kRiMPo9Ww51nWOOYx4=\n=yqb/\n-----END PGP SIGNATURE-----",
        "payload": "tree 7649a5389c7174dff7c5c0fe3be7bc0db1949ac5\nparent da9beb288d2ee35b9c70513dd18f220b2dc32f16\nparent bd30c3dced21fca869a14c75081f15195762afe1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1440583474 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1440583568 +0200\n\nMerge pull request #6590\n\nbd30c3d rpc-tests: re-enable rpc-tests for Windows (Cory Fields)\na193387 net: Set SO_REUSEADDR for Windows too (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/981fd92bc5e233b15cb4205f17c9b707e6846a18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/981fd92bc5e233b15cb4205f17c9b707e6846a18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/981fd92bc5e233b15cb4205f17c9b707e6846a18/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da9beb288d2ee35b9c70513dd18f220b2dc32f16"
      },
      {
        "sha": "bd30c3dced21fca869a14c75081f15195762afe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd30c3dced21fca869a14c75081f15195762afe1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd30c3dced21fca869a14c75081f15195762afe1"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "555d2c224bb588eb4326b3ee5e79da39a69ae48d",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/981fd92bc5e233b15cb4205f17c9b707e6846a18/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/981fd92bc5e233b15cb4205f17c9b707e6846a18/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=981fd92bc5e233b15cb4205f17c9b707e6846a18",
        "patch": "@@ -8,11 +8,6 @@ CURDIR=$(cd $(dirname \"$0\"); pwd)\n export BITCOINCLI=${BUILDDIR}/qa/pull-tester/run-bitcoin-cli\n export BITCOIND=${REAL_BITCOIND}\n \n-if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n-  echo \"Win tests currently disabled\"\n-  exit 0\n-fi\n-\n #Run the tests\n \n testScripts=("
      },
      {
        "sha": "8fda5140cadcff245a00da017b3c1ec14447dd38",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/981fd92bc5e233b15cb4205f17c9b707e6846a18/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/981fd92bc5e233b15cb4205f17c9b707e6846a18/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=981fd92bc5e233b15cb4205f17c9b707e6846a18",
        "patch": "@@ -1625,8 +1625,10 @@ bool BindListenPort(const CService &addrBind, string& strError, bool fWhiteliste\n     setsockopt(hListenSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&nOne, sizeof(int));\n #endif\n     // Allow binding if the port is still in TIME_WAIT state after\n-    // the program was closed and restarted. Not an issue on windows!\n+    // the program was closed and restarted.\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (void*)&nOne, sizeof(int));\n+#else\n+    setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (const char*)&nOne, sizeof(int));\n #endif\n \n     // Set to non-blocking, incoming connections will also inherit this"
      }
    ]
  },
  {
    "sha": "ea19c2bc3f2281ad319457c6fa518bff96af13e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTE5YzJiYzNmMjI4MWFkMzE5NDU3YzZmYTUxOGJmZjk2YWYxM2Uz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-26T15:58:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-26T15:58:40Z"
      },
      "message": "Merge pull request #6530\n\nc33c11e Improve addrman Select() performance when buckets are nearly empty (Pieter Wuille)",
      "tree": {
        "sha": "3bc4005f6a87c6ce4119ab5178a036a12960275f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bc4005f6a87c6ce4119ab5178a036a12960275f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV3eIwAAoJEHSBCwEjRsmmEfkH/3gbdT2v7VTDZLII9B7REK8X\nIkNr4GbQ34hS0bf3tlx9MaetRzPK/YUn9dpFTz8lStKWNqB7pRVUMWawJU/dA8KB\nCpLQFbtOFfALC8yeiQymNiqPwbOhERbOhR21XFAEZ7rxLuIoYeZlMre7PLK3MpIC\nXAWkPWOCBvyHpwkh8QDWuDAPKBn9E9s40Hwp+FrGHJTvGwaRPH6FApvyDmDPfpKQ\nr8BBC9WNncEAr0abKLI6vRtZesaHSNRFhtfzWBwe3j90iLPyGr3cKfXPBdz/2XML\noGl7a2NMg04kCB0RQ0Wvy/985ZvphEuBNFwShbs+opswEeJGAZRhZ6cRrIV6+ys=\n=xTzl\n-----END PGP SIGNATURE-----",
        "payload": "tree 3bc4005f6a87c6ce4119ab5178a036a12960275f\nparent 981fd92bc5e233b15cb4205f17c9b707e6846a18\nparent c33c11ebacb93d74370f44f6c24d447da88648f4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1440604707 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1440604720 +0200\n\nMerge pull request #6530\n\nc33c11e Improve addrman Select() performance when buckets are nearly empty (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "981fd92bc5e233b15cb4205f17c9b707e6846a18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/981fd92bc5e233b15cb4205f17c9b707e6846a18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/981fd92bc5e233b15cb4205f17c9b707e6846a18"
      },
      {
        "sha": "c33c11ebacb93d74370f44f6c24d447da88648f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c33c11ebacb93d74370f44f6c24d447da88648f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c33c11ebacb93d74370f44f6c24d447da88648f4"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ff1f7e918778bf623b876df1a298e66bad2c892a",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea19c2bc3f2281ad319457c6fa518bff96af13e3/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea19c2bc3f2281ad319457c6fa518bff96af13e3/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "patch": "@@ -341,8 +341,10 @@ CAddrInfo CAddrMan::Select_()\n         while (1) {\n             int nKBucket = GetRandInt(ADDRMAN_TRIED_BUCKET_COUNT);\n             int nKBucketPos = GetRandInt(ADDRMAN_BUCKET_SIZE);\n-            if (vvTried[nKBucket][nKBucketPos] == -1)\n-                continue;\n+            while (vvTried[nKBucket][nKBucketPos] == -1) {\n+                nKBucket = (nKBucket + insecure_rand()) % ADDRMAN_TRIED_BUCKET_COUNT;\n+                nKBucketPos = (nKBucketPos + insecure_rand()) % ADDRMAN_BUCKET_SIZE;\n+            }\n             int nId = vvTried[nKBucket][nKBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];\n@@ -356,8 +358,10 @@ CAddrInfo CAddrMan::Select_()\n         while (1) {\n             int nUBucket = GetRandInt(ADDRMAN_NEW_BUCKET_COUNT);\n             int nUBucketPos = GetRandInt(ADDRMAN_BUCKET_SIZE);\n-            if (vvNew[nUBucket][nUBucketPos] == -1)\n-                continue;\n+            while (vvNew[nUBucket][nUBucketPos] == -1) {\n+                nUBucket = (nUBucket + insecure_rand()) % ADDRMAN_NEW_BUCKET_COUNT;\n+                nUBucketPos = (nUBucketPos + insecure_rand()) % ADDRMAN_BUCKET_SIZE;\n+            }\n             int nId = vvNew[nUBucket][nUBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];"
      }
    ]
  },
  {
    "sha": "060058e9557f4d3094b6a8d2fa079539c5658d95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjAwNThlOTU1N2Y0ZDMwOTRiNmE4ZDJmYTA3OTUzOWM1NjU4ZDk1",
    "commit": {
      "author": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-08-26T13:02:21Z"
      },
      "committer": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-08-26T17:59:22Z"
      },
      "message": "Enable python tests for Native Windows\n\n1) Multiplatorm support for devnull\n2) Fixed a bug in the handling of cache files\n3) Deleted run-bitcoin-cli as no longer needed",
      "tree": {
        "sha": "712cf6d8711eeff8540d54ae15a623bff1b84957",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/712cf6d8711eeff8540d54ae15a623bff1b84957"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/060058e9557f4d3094b6a8d2fa079539c5658d95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/060058e9557f4d3094b6a8d2fa079539c5658d95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/060058e9557f4d3094b6a8d2fa079539c5658d95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/060058e9557f4d3094b6a8d2fa079539c5658d95/comments",
    "author": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea19c2bc3f2281ad319457c6fa518bff96af13e3"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 14,
      "deletions": 18
    },
    "files": [
      {
        "sha": "dfde0d43ecee34e6bab14b74fc673807df98e978",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/060058e9557f4d3094b6a8d2fa079539c5658d95/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/060058e9557f4d3094b6a8d2fa079539c5658d95/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=060058e9557f4d3094b6a8d2fa079539c5658d95",
        "patch": "@@ -204,7 +204,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/pull-tester/run-bitcoin-cli qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "f928cd09e347946e59cbfe0fc5ded48acd201db3",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/060058e9557f4d3094b6a8d2fa079539c5658d95/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/060058e9557f4d3094b6a8d2fa079539c5658d95/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=060058e9557f4d3094b6a8d2fa079539c5658d95",
        "patch": "@@ -5,8 +5,8 @@ CURDIR=$(cd $(dirname \"$0\"); pwd)\n # Get BUILDDIR and REAL_BITCOIND\n . \"${CURDIR}/tests-config.sh\"\n \n-export BITCOINCLI=${BUILDDIR}/qa/pull-tester/run-bitcoin-cli\n export BITCOIND=${REAL_BITCOIND}\n+export BITCOINCLI=${REAL_BITCOINCLI}\n \n #Run the tests\n "
      },
      {
        "sha": "93c25bb9fca29e20e4b3b75718978e303268fac1",
        "filename": "qa/pull-tester/run-bitcoin-cli",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea19c2bc3f2281ad319457c6fa518bff96af13e3/qa/pull-tester/run-bitcoin-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea19c2bc3f2281ad319457c6fa518bff96af13e3/qa/pull-tester/run-bitcoin-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoin-cli?ref=ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "patch": "@@ -1,13 +0,0 @@\n-#!/bin/bash\n-\n-# This is a thin wrapper around bitcoin-cli that strips the Windows-style EOLs\n-# from the output if present. It is necessary when using bitcoin-cli.exe on\n-# Linux since shells will interpret the line-endings as part of the result.\n-\n-CURDIR=$(cd $(dirname \"$0\"); pwd)\n-# Get BUILDDIR and REAL_BITCOIND\n-\n-# Grab the value of $REAL_BITCOINCLI which may be bitcoin-cli.exe.\n-. \"${CURDIR}/tests-config.sh\"\n-\n-\"${REAL_BITCOINCLI}\" \"$@\" | sed 's/\\r//'"
      },
      {
        "sha": "3759cc8162871dcea0f09b1e7cae3428fa460f72",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/060058e9557f4d3094b6a8d2fa079539c5658d95/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/060058e9557f4d3094b6a8d2fa079539c5658d95/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=060058e9557f4d3094b6a8d2fa079539c5658d95",
        "patch": "@@ -78,8 +78,17 @@ def initialize_chain(test_dir):\n     bitcoind and bitcoin-cli must be in search path.\n     \"\"\"\n \n-    if not os.path.isdir(os.path.join(\"cache\", \"node0\")):\n-        devnull = open(\"/dev/null\", \"w+\")\n+    if (not os.path.isdir(os.path.join(\"cache\",\"node0\"))\n+        or not os.path.isdir(os.path.join(\"cache\",\"node1\")) \n+        or not os.path.isdir(os.path.join(\"cache\",\"node2\")) \n+        or not os.path.isdir(os.path.join(\"cache\",\"node3\"))):\n+\n+        #find and delete old cache directories if any exist\n+        for i in range(4):\n+            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))): \n+                shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n+\n+        devnull = open(os.devnull, \"w\")\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n             datadir=initialize_datadir(\"cache\", i)\n@@ -171,7 +180,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n     args = [ binary, \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\", \"-rest\" ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n-    devnull = open(\"/dev/null\", \"w+\")\n+    devnull = open(os.devnull, \"w\")\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n         print \"start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount\"\n     subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir] +"
      }
    ]
  },
  {
    "sha": "9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmViZjYwNjk4YzM0NTAyMzE5ZDZhODIxOGYyZWUwYzRmYTcyZWY2",
    "commit": {
      "author": {
        "name": "J Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2015-08-29T16:40:13Z"
      },
      "committer": {
        "name": "J Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2015-08-29T16:40:13Z"
      },
      "message": "Make sure LogPrint strings are line-terminated",
      "tree": {
        "sha": "21197260ba4a6e6e0251fc03fd6c7e0e07ccfce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21197260ba4a6e6e0251fc03fd6c7e0e07ccfce9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJV4eB6AAoJEJFC5fflM847GoYH/2GaHbowb4+8nKxnu7TIkDBV\nolTCQ06nNETT9JeuRtQgz9NZ6oAffbaBFG819wCGBSmMNsrraARPSNLvCzRFtIbj\nV/R/OJy4tVdkMFg4d8LQz29rnl4N3RLTgLlrZHw7o8gsEE8rVaWUXhO/PGcAf6yH\nEpClLhRn+m0yhbpEldhGSTJy2NeZzAUJ/QvjH+h4r6dwJHE6QJTMHkfy/k4DRP9a\nVtrwGO0m6v+izQUQXKl2poAfZpd8UkliiH6fghZjq5zuLbLJqMjxDJHXf9T8bWbM\n/Pee0CFui9dvKTwCBUkulXY+Mxy3Wbz6nSla+rJPZldjWoYlt31MYlQDVcA9f0o=\n=8p/L\n-----END PGP SIGNATURE-----",
        "payload": "tree 21197260ba4a6e6e0251fc03fd6c7e0e07ccfce9\nparent ea19c2bc3f2281ad319457c6fa518bff96af13e3\nauthor J Ross Nicoll <jrn@jrn.me.uk> 1440866413 +0100\ncommitter J Ross Nicoll <jrn@jrn.me.uk> 1440866413 +0100\n\nMake sure LogPrint strings are line-terminated\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bebf60698c34502319d6a8218f2ee0c4fa72ef6/comments",
    "author": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea19c2bc3f2281ad319457c6fa518bff96af13e3"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b61f7325a9e4a267a05fc47753805a05f4d3f3bf",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9bebf60698c34502319d6a8218f2ee0c4fa72ef6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9bebf60698c34502319d6a8218f2ee0c4fa72ef6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
        "patch": "@@ -659,7 +659,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes)\n                 return false;\n \n         if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n-            LogPrint(\"net\", \"Oversized message from peer=%i, disconnecting\", GetId());\n+            LogPrint(\"net\", \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n             return false;\n         }\n "
      }
    ]
  },
  {
    "sha": "05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTE3OWY3ZTlkNGI0ZDlkNTYyYmQwM2E1NTRhMmQ2OWIyNzY3ZjM4",
    "commit": {
      "author": {
        "name": "Zak Wilcox",
        "email": "iwilcox@iwilcox.me.uk",
        "date": "2015-08-29T17:52:44Z"
      },
      "committer": {
        "name": "Zak Wilcox",
        "email": "iwilcox@iwilcox.me.uk",
        "date": "2015-08-29T17:52:44Z"
      },
      "message": "Include bitcoin-tx binary on Debian/Ubuntu\n\nCurrently left out of Matt's PPA.  Debian's package for unstable already has it.",
      "tree": {
        "sha": "05e1745b2e0123a67b8a707a75088b8fd0e9d364",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05e1745b2e0123a67b8a707a75088b8fd0e9d364"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05179f7e9d4b4d9d562bd03a554a2d69b2767f38/comments",
    "author": {
      "login": "zw",
      "id": 263299,
      "node_id": "MDQ6VXNlcjI2MzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zw",
      "html_url": "https://github.com/zw",
      "followers_url": "https://api.github.com/users/zw/followers",
      "following_url": "https://api.github.com/users/zw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zw/subscriptions",
      "organizations_url": "https://api.github.com/users/zw/orgs",
      "repos_url": "https://api.github.com/users/zw/repos",
      "events_url": "https://api.github.com/users/zw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zw/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "zw",
      "id": 263299,
      "node_id": "MDQ6VXNlcjI2MzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zw",
      "html_url": "https://github.com/zw",
      "followers_url": "https://api.github.com/users/zw/followers",
      "following_url": "https://api.github.com/users/zw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zw/subscriptions",
      "organizations_url": "https://api.github.com/users/zw/orgs",
      "repos_url": "https://api.github.com/users/zw/repos",
      "events_url": "https://api.github.com/users/zw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zw/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea19c2bc3f2281ad319457c6fa518bff96af13e3"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "494e5cbdc3a6076d999f5550659dabc6e9b79c04",
        "filename": "contrib/debian/bitcoind.install",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05179f7e9d4b4d9d562bd03a554a2d69b2767f38/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05179f7e9d4b4d9d562bd03a554a2d69b2767f38/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
        "patch": "@@ -1,2 +1,3 @@\n usr/local/bin/bitcoind usr/bin\n usr/local/bin/bitcoin-cli usr/bin\n+usr/local/bin/bitcoin-tx usr/bin"
      }
    ]
  },
  {
    "sha": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjdkZTk0ZTFmYmE1NDg0YWVkMjM5M2FmZDg5ZWRiYWFmZmRiMGVi",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-26T00:06:15Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-08-31T05:09:14Z"
      },
      "message": "Use network group instead of CNetAddr in final pass to select node to disconnect",
      "tree": {
        "sha": "f6feda479eed58f628c375b1834101b7a805f895",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6feda479eed58f628c375b1834101b7a805f895"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/027de94e1fba5484aed2393afd89edbaaffdb0eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJV4+GBAAoJEHfoBoKoPbQO6cMH+gMJvZkwobFoe0W4KaJdF0tv\n3AtjqLXXJKgsHJrWV5tkZyT5DnoQW1lhUcb9A2xdE3gpJtWaUp2k3cfgno6szakF\npja2iJHrnr9N74lWRA4Hh83DZLDmJeYIuczIlTvkjebBdxkTXyWuM7Zfn0XvIl9s\njGgVRyYYkpYR2XlLM3+kQikDd8Suj+5IBuBdaZpX0HdYiyS2CWxbe9H+aDR+rMVq\neddUxryNGXM11mnO8YpmDG90XGA2/xz6TgKarQYALXFsF20Fi2JnPZ6U7igkR/au\n49dSAYkJgXQLCZpsZ3b9KTU8aF658njOJX/kFh/mvy6fNM9BdOLISm/kDizZ3Vs=\n=tFij\n-----END PGP SIGNATURE-----",
        "payload": "tree f6feda479eed58f628c375b1834101b7a805f895\nparent 000c18aaceeebdcaf65508fcdc3d00397971dcae\nauthor Patrick Strateman <patrick.strateman@gmail.com> 1440547575 -0700\ncommitter Patrick Strateman <patrick.strateman@gmail.com> 1440997754 -0700\n\nUse network group instead of CNetAddr in final pass to select node to disconnect\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027de94e1fba5484aed2393afd89edbaaffdb0eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/027de94e1fba5484aed2393afd89edbaaffdb0eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027de94e1fba5484aed2393afd89edbaaffdb0eb/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "000c18aaceeebdcaf65508fcdc3d00397971dcae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/000c18aaceeebdcaf65508fcdc3d00397971dcae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/000c18aaceeebdcaf65508fcdc3d00397971dcae"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "9264d68656a81322e88b463e7bfae1a42ee97f5b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027de94e1fba5484aed2393afd89edbaaffdb0eb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027de94e1fba5484aed2393afd89edbaaffdb0eb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=027de94e1fba5484aed2393afd89edbaaffdb0eb",
        "patch": "@@ -898,29 +898,29 @@ static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n \n     if (vEvictionCandidates.empty()) return false;\n \n-    // Identify CNetAddr with the most connections\n-    CNetAddr naMostConnections;\n+    // Identify the network group with the most connections\n+    std::vector<unsigned char> naMostConnections;\n     unsigned int nMostConnections = 0;\n-    std::map<CNetAddr, std::vector<CNodeRef> > mapAddrCounts;\n+    std::map<std::vector<unsigned char>, std::vector<CNodeRef> > mapAddrCounts;\n     BOOST_FOREACH(const CNodeRef &node, vEvictionCandidates) {\n-        mapAddrCounts[node->addr].push_back(node);\n+        mapAddrCounts[node->addr.GetGroup()].push_back(node);\n \n-        if (mapAddrCounts[node->addr].size() > nMostConnections) {\n-            nMostConnections = mapAddrCounts[node->addr].size();\n-            naMostConnections = node->addr;\n+        if (mapAddrCounts[node->addr.GetGroup()].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr.GetGroup()].size();\n+            naMostConnections = node->addr.GetGroup();\n         }\n     }\n \n-    // Reduce to the CNetAddr with the most connections\n+    // Reduce to the network group with the most connections\n     vEvictionCandidates = mapAddrCounts[naMostConnections];\n \n-    // Do not disconnect peers who have only 1 evictable connection\n+    // Do not disconnect peers if there is only 1 connection from their network group\n     if (vEvictionCandidates.size() <= 1)\n         // unless we prefer the new connection (for whitelisted peers)\n         if (!fPreferNewConnection)\n             return false;\n \n-    // Disconnect the most recent connection from the CNetAddr with the most connections\n+    // Disconnect the most recent connection from the network group with the most connections\n     std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n     vEvictionCandidates[0]->fDisconnect = true;\n "
      }
    ]
  },
  {
    "sha": "f4d88c404136b410c41be936f26e8cb4e68589ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGQ4OGM0MDQxMzZiNDEwYzQxYmU5MzZmMjZlOGNiNGU2ODU4OWNh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-31T09:49:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-31T09:56:18Z"
      },
      "message": "Merge pull request #6599\n\n9bebf60 Make sure LogPrint strings are line-terminated (J Ross Nicoll)",
      "tree": {
        "sha": "21197260ba4a6e6e0251fc03fd6c7e0e07ccfce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21197260ba4a6e6e0251fc03fd6c7e0e07ccfce9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4d88c404136b410c41be936f26e8cb4e68589ca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV5CTCAAoJEHSBCwEjRsmmzk4H/R+9GskOOs/nP4k1qpslHo0b\nvvQhRb8rdYXhZWwK8Zh1N+BPAGDdYEttWfajfF1YvLllJ2j49E3uXGEXShj8s+eO\nOHfLRozBZztwVkKqc9MSluFDMxdf9zX0jJ7Z2/NKx/uq1q2ImJjDBT4ErqVIpX7W\nOsBVhWN167VJ3Yd5/PwVxeKcCWp5ZP0X73VqzaEsRxxI16uv3+njggQbIl8HHn0t\nCt1m6e3ATm1TBFTKwp+ouMk9wWsxedU45UkOVFf4v3yqyMVOA0oCs1q7woKFQ6W0\n1ETAFn/fwbOcY7g84sVj0x0oIFZNSBDG6uJCYMcq+jnqWWm8f2UxQRv040UCGj4=\n=Q8ff\n-----END PGP SIGNATURE-----",
        "payload": "tree 21197260ba4a6e6e0251fc03fd6c7e0e07ccfce9\nparent ea19c2bc3f2281ad319457c6fa518bff96af13e3\nparent 9bebf60698c34502319d6a8218f2ee0c4fa72ef6\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441014593 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441014978 +0200\n\nMerge pull request #6599\n\n9bebf60 Make sure LogPrint strings are line-terminated (J Ross Nicoll)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d88c404136b410c41be936f26e8cb4e68589ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4d88c404136b410c41be936f26e8cb4e68589ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d88c404136b410c41be936f26e8cb4e68589ca/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea19c2bc3f2281ad319457c6fa518bff96af13e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea19c2bc3f2281ad319457c6fa518bff96af13e3"
      },
      {
        "sha": "9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bebf60698c34502319d6a8218f2ee0c4fa72ef6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9bebf60698c34502319d6a8218f2ee0c4fa72ef6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b61f7325a9e4a267a05fc47753805a05f4d3f3bf",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4d88c404136b410c41be936f26e8cb4e68589ca/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4d88c404136b410c41be936f26e8cb4e68589ca/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f4d88c404136b410c41be936f26e8cb4e68589ca",
        "patch": "@@ -659,7 +659,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes)\n                 return false;\n \n         if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n-            LogPrint(\"net\", \"Oversized message from peer=%i, disconnecting\", GetId());\n+            LogPrint(\"net\", \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n             return false;\n         }\n "
      }
    ]
  },
  {
    "sha": "af9305a7e8a40014508fb66a22ae95e8afe142c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjkzMDVhN2U4YTQwMDE0NTA4ZmI2NmEyMmFlOTVlOGFmZTE0MmM2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-31T15:38:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-31T15:38:07Z"
      },
      "message": "Merge pull request #6583\n\n9f3e48e add support for miniupnpc api version 14 (Pavel Vasin)",
      "tree": {
        "sha": "a9e112f54f6db66537e90ba35c38edd2678ab588",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9e112f54f6db66537e90ba35c38edd2678ab588"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af9305a7e8a40014508fb66a22ae95e8afe142c6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV5HTfAAoJEHSBCwEjRsmms2MH/iAiyo6MhDQwh4fTYIJvQuvv\nG83xjV8h1OokUleO9J1UhPDtAPqYgzFvfUMFMrEiL0Hu3l+jl6tcP7lE2kIxunS8\nOvPfPEesIMdoqJQZ4LzgeyA0PPziXf4kg+wRPsD4PE9ZnrM51d9JObtbuDnkqlNu\nnhCe0dEiQHh9bT9GCAgLaVl9zuudGQn+l1eXVCA2FYl+8hNI5UWpbXzs9iS0DcOY\nW6NRKle1gdGXMyydoumxE/mRuz+xvPSCBnFboZzgzFCR0+yFd9Iz4KtTQMUZJ3RB\nCSZVZ27Qn2HTlo3gO9KUEu8kvT5UTqkUqiLutrmWoTTSsWLIJsyP6ChT8I7hU3U=\n=33wM\n-----END PGP SIGNATURE-----",
        "payload": "tree a9e112f54f6db66537e90ba35c38edd2678ab588\nparent f4d88c404136b410c41be936f26e8cb4e68589ca\nparent 9f3e48e5219a09b5ddfd6883d1f0498910eff4b6\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441035480 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441035487 +0200\n\nMerge pull request #6583\n\n9f3e48e add support for miniupnpc api version 14 (Pavel Vasin)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9305a7e8a40014508fb66a22ae95e8afe142c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af9305a7e8a40014508fb66a22ae95e8afe142c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9305a7e8a40014508fb66a22ae95e8afe142c6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4d88c404136b410c41be936f26e8cb4e68589ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d88c404136b410c41be936f26e8cb4e68589ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4d88c404136b410c41be936f26e8cb4e68589ca"
      },
      {
        "sha": "9f3e48e5219a09b5ddfd6883d1f0498910eff4b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f3e48e5219a09b5ddfd6883d1f0498910eff4b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f3e48e5219a09b5ddfd6883d1f0498910eff4b6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "105ccce848b0c124c6d8e656d4201d95c3a5404d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af9305a7e8a40014508fb66a22ae95e8afe142c6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af9305a7e8a40014508fb66a22ae95e8afe142c6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=af9305a7e8a40014508fb66a22ae95e8afe142c6",
        "patch": "@@ -1120,10 +1120,14 @@ void ThreadMapPort()\n #ifndef UPNPDISCOVER_SUCCESS\n     /* miniupnpc 1.5 */\n     devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0);\n-#else\n+#elif MINIUPNPC_API_VERSION < 14\n     /* miniupnpc 1.6 */\n     int error = 0;\n     devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    /* miniupnpc 1.9.20150730 */\n+    int error = 0;\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n #endif\n \n     struct UPNPUrls urls;"
      }
    ]
  },
  {
    "sha": "10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGMwZTUyYjY4Yzc3ZDZjZjFiYTRhZWIwNTYxODIyOWJiYTNjZDNk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-01T09:36:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-01T09:37:13Z"
      },
      "message": "Merge pull request #6548\n\n060058e Enable python tests for Native Windows (ptschip)",
      "tree": {
        "sha": "c9c2c5c36e568b3f2c33b5d501bf029a84d12dc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9c2c5c36e568b3f2c33b5d501bf029a84d12dc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV5XHJAAoJEHSBCwEjRsmmHCUH/2nMi1P/zcLyv3M/K1LQVkur\ntJn9eY9WYs/ziSDBf78jSFTS1qDtjiJFQKwF8yx5x3j73OQGssQKHYFj1Jujr3Na\nEjECpvhqQCCZ5hszJ/VI18d5ZTFIt3A4pK+NVqSvzmniwwlZLUcAOG6bMwjkYsWG\nPivnnQVYKLD6xOCnBXd4FsVnSW/aggSuaaxlTwRwKNVUk7SV+vMqBe1+TkqcOtRi\n5WjBx7xJwYqVv+HSWq+516WCGCUOMrnIkCFVwsoxGJ2n3C5IEVDjkZFHmoaQ0TrM\ntQrOYwuSfR+ghKANz+heFbSw/C4UMOlDeC5nsy9uAV+65bmLpSAT1S0VZ1G+nuc=\n=yT/P\n-----END PGP SIGNATURE-----",
        "payload": "tree c9c2c5c36e568b3f2c33b5d501bf029a84d12dc8\nparent af9305a7e8a40014508fb66a22ae95e8afe142c6\nparent 060058e9557f4d3094b6a8d2fa079539c5658d95\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441100216 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441100233 +0200\n\nMerge pull request #6548\n\n060058e Enable python tests for Native Windows (ptschip)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af9305a7e8a40014508fb66a22ae95e8afe142c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9305a7e8a40014508fb66a22ae95e8afe142c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af9305a7e8a40014508fb66a22ae95e8afe142c6"
      },
      {
        "sha": "060058e9557f4d3094b6a8d2fa079539c5658d95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/060058e9557f4d3094b6a8d2fa079539c5658d95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/060058e9557f4d3094b6a8d2fa079539c5658d95"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 14,
      "deletions": 18
    },
    "files": [
      {
        "sha": "dfde0d43ecee34e6bab14b74fc673807df98e978",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "patch": "@@ -204,7 +204,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/pull-tester/run-bitcoin-cli qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "f928cd09e347946e59cbfe0fc5ded48acd201db3",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "patch": "@@ -5,8 +5,8 @@ CURDIR=$(cd $(dirname \"$0\"); pwd)\n # Get BUILDDIR and REAL_BITCOIND\n . \"${CURDIR}/tests-config.sh\"\n \n-export BITCOINCLI=${BUILDDIR}/qa/pull-tester/run-bitcoin-cli\n export BITCOIND=${REAL_BITCOIND}\n+export BITCOINCLI=${REAL_BITCOINCLI}\n \n #Run the tests\n "
      },
      {
        "sha": "93c25bb9fca29e20e4b3b75718978e303268fac1",
        "filename": "qa/pull-tester/run-bitcoin-cli",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af9305a7e8a40014508fb66a22ae95e8afe142c6/qa/pull-tester/run-bitcoin-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af9305a7e8a40014508fb66a22ae95e8afe142c6/qa/pull-tester/run-bitcoin-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoin-cli?ref=af9305a7e8a40014508fb66a22ae95e8afe142c6",
        "patch": "@@ -1,13 +0,0 @@\n-#!/bin/bash\n-\n-# This is a thin wrapper around bitcoin-cli that strips the Windows-style EOLs\n-# from the output if present. It is necessary when using bitcoin-cli.exe on\n-# Linux since shells will interpret the line-endings as part of the result.\n-\n-CURDIR=$(cd $(dirname \"$0\"); pwd)\n-# Get BUILDDIR and REAL_BITCOIND\n-\n-# Grab the value of $REAL_BITCOINCLI which may be bitcoin-cli.exe.\n-. \"${CURDIR}/tests-config.sh\"\n-\n-\"${REAL_BITCOINCLI}\" \"$@\" | sed 's/\\r//'"
      },
      {
        "sha": "3759cc8162871dcea0f09b1e7cae3428fa460f72",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "patch": "@@ -78,8 +78,17 @@ def initialize_chain(test_dir):\n     bitcoind and bitcoin-cli must be in search path.\n     \"\"\"\n \n-    if not os.path.isdir(os.path.join(\"cache\", \"node0\")):\n-        devnull = open(\"/dev/null\", \"w+\")\n+    if (not os.path.isdir(os.path.join(\"cache\",\"node0\"))\n+        or not os.path.isdir(os.path.join(\"cache\",\"node1\")) \n+        or not os.path.isdir(os.path.join(\"cache\",\"node2\")) \n+        or not os.path.isdir(os.path.join(\"cache\",\"node3\"))):\n+\n+        #find and delete old cache directories if any exist\n+        for i in range(4):\n+            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))): \n+                shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n+\n+        devnull = open(os.devnull, \"w\")\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n             datadir=initialize_datadir(\"cache\", i)\n@@ -171,7 +180,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n     args = [ binary, \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\", \"-rest\" ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n-    devnull = open(\"/dev/null\", \"w+\")\n+    devnull = open(os.devnull, \"w\")\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n         print \"start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount\"\n     subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir] +"
      }
    ]
  },
  {
    "sha": "bfadae33741ff3a58ed47f939080a3122bc2307d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZmFkYWUzMzc0MWZmM2E1OGVkNDdmOTM5MDgwYTMxMjJiYzIzMDdk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-09-02T01:45:23Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-09-02T01:45:23Z"
      },
      "message": "travis: for travis generating an extra build",
      "tree": {
        "sha": "2eb0a0f7909f6320b27e7cee045c321c763b0b95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2eb0a0f7909f6320b27e7cee045c321c763b0b95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfadae33741ff3a58ed47f939080a3122bc2307d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfadae33741ff3a58ed47f939080a3122bc2307d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bfadae33741ff3a58ed47f939080a3122bc2307d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfadae33741ff3a58ed47f939080a3122bc2307d/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0537d69a46a15f357d8bf04d917274ffe006af73",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfadae33741ff3a58ed47f939080a3122bc2307d/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfadae33741ff3a58ed47f939080a3122bc2307d/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=bfadae33741ff3a58ed47f939080a3122bc2307d",
        "patch": "@@ -6,6 +6,7 @@\n \n os: linux\n language: cpp\n+compiler: gcc\n env:\n   global:\n     - MAKEJOBS=-j3\n@@ -41,6 +42,8 @@ matrix:\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n       env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+  exclude:\n+    - compiler: gcc\n install:\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi"
      }
    ]
  },
  {
    "sha": "5b85126863dc788a6d55e57552f27841ff00abdb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Yjg1MTI2ODYzZGM3ODhhNmQ1NWU1NzU1MmYyNzg0MWZmMDBhYmRi",
    "commit": {
      "author": {
        "name": "Altoidnerd",
        "email": "allenmajs1@gmail.com",
        "date": "2015-09-01T11:14:53Z"
      },
      "committer": {
        "name": "altoidnerd",
        "email": "allenmajs1@gmail.com",
        "date": "2015-09-02T09:13:04Z"
      },
      "message": "Update build-unix.md\n\nIf a user hasn't ready run autogen.sh, configure doesn't yet exist.  Do the instructions seem to presume you have already built bitcoin?  I don't think they do.\n\nWould stifle beginners.\n\nUpdate build-unix.md",
      "tree": {
        "sha": "6f222a9d0b9d322eaec09a16e58242dd3f61938f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f222a9d0b9d322eaec09a16e58242dd3f61938f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b85126863dc788a6d55e57552f27841ff00abdb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b85126863dc788a6d55e57552f27841ff00abdb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b85126863dc788a6d55e57552f27841ff00abdb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b85126863dc788a6d55e57552f27841ff00abdb/comments",
    "author": {
      "login": "Altoidnerd",
      "id": 5143993,
      "node_id": "MDQ6VXNlcjUxNDM5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5143993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Altoidnerd",
      "html_url": "https://github.com/Altoidnerd",
      "followers_url": "https://api.github.com/users/Altoidnerd/followers",
      "following_url": "https://api.github.com/users/Altoidnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/Altoidnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Altoidnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Altoidnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/Altoidnerd/orgs",
      "repos_url": "https://api.github.com/users/Altoidnerd/repos",
      "events_url": "https://api.github.com/users/Altoidnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Altoidnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Altoidnerd",
      "id": 5143993,
      "node_id": "MDQ6VXNlcjUxNDM5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5143993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Altoidnerd",
      "html_url": "https://github.com/Altoidnerd",
      "followers_url": "https://api.github.com/users/Altoidnerd/followers",
      "following_url": "https://api.github.com/users/Altoidnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/Altoidnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Altoidnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Altoidnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/Altoidnerd/orgs",
      "repos_url": "https://api.github.com/users/Altoidnerd/repos",
      "events_url": "https://api.github.com/users/Altoidnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Altoidnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "95e501ac6967b25e8e30eea666d9f77b7386ac56",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b85126863dc788a6d55e57552f27841ff00abdb/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b85126863dc788a6d55e57552f27841ff00abdb/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=5b85126863dc788a6d55e57552f27841ff00abdb",
        "patch": "@@ -154,7 +154,8 @@ make install\n \n # Configure Bitcoin Core to use our own-built instance of BDB\n cd $BITCOIN_ROOT\n-./configure (other args...) LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+./autogen.sh\n+./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n \n **Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below)."
      }
    ]
  },
  {
    "sha": "b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzE5ZjA4MjhlZjdhOTQ0ZjIyNTc3OTlmN2NlNmQ3YmE3YWI3MWFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T15:14:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T15:14:29Z"
      },
      "message": "Merge pull request #6617\n\nbfadae3 travis: for travis generating an extra build (Cory Fields)",
      "tree": {
        "sha": "2eb0a0f7909f6320b27e7cee045c321c763b0b95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2eb0a0f7909f6320b27e7cee045c321c763b0b95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV5xJVAAoJEHSBCwEjRsmm+yYH/0P6Nv5Fwp5XtYsBegPh6JUa\nXH1lj/zo68SkuqfHhkH5nYNOjwDb/pcKHoaUsrMLnc6tqKl/OEaVp61j/tPR7uky\nhhw1BIAQnhIkwMz638MfqkxzPj2Xnay31mQQZ/v3Mq0LwRxO/Msdj48e6uy8Vf7q\nRNXECKtGsyu1+3JvxyAeAIMUNvCxPpnD9pResJwb61Co5Kw8z0gpSTsmRNG8UVwJ\nCLHV/3Bm+FoBceLVLo/O8QPTCQpTFSeHiGl+KZTL7h2NG5TNi7y107CTLKSTupls\n+0OypAPd7lKJWhkANDy1JbWRlozEOSrVHSsXVbR5R8hW9DsYdtaeBrxPngtRAlM=\n=qYTc\n-----END PGP SIGNATURE-----",
        "payload": "tree 2eb0a0f7909f6320b27e7cee045c321c763b0b95\nparent 10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d\nparent bfadae33741ff3a58ed47f939080a3122bc2307d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441206862 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441206869 +0200\n\nMerge pull request #6617\n\nbfadae3 travis: for travis generating an extra build (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "bfadae33741ff3a58ed47f939080a3122bc2307d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfadae33741ff3a58ed47f939080a3122bc2307d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bfadae33741ff3a58ed47f939080a3122bc2307d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0537d69a46a15f357d8bf04d917274ffe006af73",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
        "patch": "@@ -6,6 +6,7 @@\n \n os: linux\n language: cpp\n+compiler: gcc\n env:\n   global:\n     - MAKEJOBS=-j3\n@@ -41,6 +42,8 @@ matrix:\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n       env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+  exclude:\n+    - compiler: gcc\n install:\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi"
      }
    ]
  },
  {
    "sha": "10e469ae378323faf84f25459f52ac860a8bd81f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGU0NjlhZTM3ODMyM2ZhZjg0ZjI1NDU5ZjUyYWM4NjBhOGJkODFm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-09-02T15:39:23Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-09-02T15:42:27Z"
      },
      "message": "travis: bump wine to 1.7",
      "tree": {
        "sha": "9cc93f744d43c155d48d769e27c146373c75dce0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cc93f744d43c155d48d769e27c146373c75dce0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10e469ae378323faf84f25459f52ac860a8bd81f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10e469ae378323faf84f25459f52ac860a8bd81f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10e469ae378323faf84f25459f52ac860a8bd81f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10e469ae378323faf84f25459f52ac860a8bd81f/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c8785144adc03df3400e315b22d8d73e4eb2dc37",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10e469ae378323faf84f25459f52ac860a8bd81f/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10e469ae378323faf84f25459f52ac860a8bd81f/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=10e469ae378323faf84f25459f52ac860a8bd81f",
        "patch": "@@ -31,11 +31,11 @@ matrix:\n     - compiler: \": ARM\"\n       env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": 32-bit + dash\"\n       env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": bitcoind\"\n       env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n@@ -45,6 +45,7 @@ matrix:\n   exclude:\n     - compiler: gcc\n install:\n+    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:"
      }
    ]
  },
  {
    "sha": "888c595cffe73b0d49434acf49a9611cbff1ea1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODhjNTk1Y2ZmZTczYjBkNDk0MzRhY2Y0OWE5NjExY2JmZjFlYTFk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-09-02T10:46:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-09-02T16:05:35Z"
      },
      "message": "depends: bump miniupnpc to 1.9.20150730",
      "tree": {
        "sha": "37df58403c9b16275c53b7059aaa202cd9961ac6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37df58403c9b16275c53b7059aaa202cd9961ac6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/888c595cffe73b0d49434acf49a9611cbff1ea1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/888c595cffe73b0d49434acf49a9611cbff1ea1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/888c595cffe73b0d49434acf49a9611cbff1ea1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/888c595cffe73b0d49434acf49a9611cbff1ea1d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af9305a7e8a40014508fb66a22ae95e8afe142c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9305a7e8a40014508fb66a22ae95e8afe142c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af9305a7e8a40014508fb66a22ae95e8afe142c6"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ee1ee2f4b8e7b55d17583fc63ed19090835c4c21",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/888c595cffe73b0d49434acf49a9611cbff1ea1d/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/888c595cffe73b0d49434acf49a9611cbff1ea1d/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=888c595cffe73b0d49434acf49a9611cbff1ea1d",
        "patch": "@@ -1,8 +1,8 @@\n package=miniupnpc\n-$(package)_version=1.9.20150609\n+$(package)_version=1.9.20150730\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=86e6ccec5b660ba6889893d1f3fca21db087c6466b1a90f495a1f87ab1cd1c36\n+$(package)_sha256_hash=1d64fab1fd3b4c8545139341ba197f19329a863f4f21b578fc2a228ab586a604\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\""
      }
    ]
  },
  {
    "sha": "42cf08905f786ebd4acf74ca9d17984d8be0d32d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmNmMDg5MDVmNzg2ZWJkNGFjZjc0Y2E5ZDE3OTg0ZDhiZTBkMzJk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-09-02T14:20:54Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-09-02T16:05:35Z"
      },
      "message": "depends: bump ccache to 3.2.3",
      "tree": {
        "sha": "db46cfd325d153aa693dffe255270b10c3686352",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db46cfd325d153aa693dffe255270b10c3686352"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42cf08905f786ebd4acf74ca9d17984d8be0d32d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cf08905f786ebd4acf74ca9d17984d8be0d32d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42cf08905f786ebd4acf74ca9d17984d8be0d32d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cf08905f786ebd4acf74ca9d17984d8be0d32d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "888c595cffe73b0d49434acf49a9611cbff1ea1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/888c595cffe73b0d49434acf49a9611cbff1ea1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/888c595cffe73b0d49434acf49a9611cbff1ea1d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "317674f7955a0d662721ee51f7663289cc087d71",
        "filename": "depends/packages/native_ccache.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cf08905f786ebd4acf74ca9d17984d8be0d32d/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cf08905f786ebd4acf74ca9d17984d8be0d32d/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=42cf08905f786ebd4acf74ca9d17984d8be0d32d",
        "patch": "@@ -1,8 +1,8 @@\n package=native_ccache\n-$(package)_version=3.2.2\n+$(package)_version=3.2.3\n $(package)_download_path=http://samba.org/ftp/ccache\n $(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=440f5e15141cc72d2bfff467c977020979810eb800882e3437ad1a7153cce7b2\n+$(package)_sha256_hash=b07165d4949d107d17f2f84b90b52953617bf1abbf249d5cc20636f43337c98c\n \n define $(package)_set_vars\n $(package)_config_opts="
      }
    ]
  },
  {
    "sha": "3932ff50c563df19c14e9987f2297d9f99a299ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTMyZmY1MGM1NjNkZjE5YzE0ZTk5ODdmMjI5N2Q5Zjk5YTI5OWFj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:10Z"
      },
      "message": "Merge pull request #6620\n\n10e469a travis: bump wine to 1.7 (Cory Fields)",
      "tree": {
        "sha": "9cc93f744d43c155d48d769e27c146373c75dce0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cc93f744d43c155d48d769e27c146373c75dce0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3932ff50c563df19c14e9987f2297d9f99a299ac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV5yXyAAoJEHSBCwEjRsmmEFQH/0QbngzWucUW2lncOz17QVx2\neZLfUObw3Bi2iuospQJ0JnrUXUPZrT+TFi7rFHwP712zc93u55DoN/P0sp6C8rxW\n0QdOjM1AQtfg7QkiVA1Le/94Oa5XuLJDdmVtQEhQ+b/7g/eRFIr0G87bDmcCYFmQ\n4AnkCG39HOeImKkau3DkRmCxBbzEINNaSHxATwg9ZqL1NYdYte+z/eKo2O/DyHnd\n+GJJNjUqJX7EZVnIES0PRtOO5OJmGQhgKdmQQ6XWPzyp7TFqnDHs5AiaVIsuDEyS\n8sb+l+HISZ6HaHRqPsFCoZFr5D6ErsKjjbYVV0VfBm186uzH9hyOzidVI1Vqb44=\n=z7uk\n-----END PGP SIGNATURE-----",
        "payload": "tree 9cc93f744d43c155d48d769e27c146373c75dce0\nparent b319f0828ef7a944f2257799f7ce6d7ba7ab71ae\nparent 10e469ae378323faf84f25459f52ac860a8bd81f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441211880 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441211890 +0200\n\nMerge pull request #6620\n\n10e469a travis: bump wine to 1.7 (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3932ff50c563df19c14e9987f2297d9f99a299ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3932ff50c563df19c14e9987f2297d9f99a299ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3932ff50c563df19c14e9987f2297d9f99a299ac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b319f0828ef7a944f2257799f7ce6d7ba7ab71ae"
      },
      {
        "sha": "10e469ae378323faf84f25459f52ac860a8bd81f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10e469ae378323faf84f25459f52ac860a8bd81f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10e469ae378323faf84f25459f52ac860a8bd81f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c8785144adc03df3400e315b22d8d73e4eb2dc37",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3932ff50c563df19c14e9987f2297d9f99a299ac/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3932ff50c563df19c14e9987f2297d9f99a299ac/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=3932ff50c563df19c14e9987f2297d9f99a299ac",
        "patch": "@@ -31,11 +31,11 @@ matrix:\n     - compiler: \": ARM\"\n       env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": 32-bit + dash\"\n       env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": bitcoind\"\n       env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n@@ -45,6 +45,7 @@ matrix:\n   exclude:\n     - compiler: gcc\n install:\n+    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:"
      }
    ]
  },
  {
    "sha": "51fcfc022ce29aa8575d361497bfe458c973b1c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWZjZmMwMjJjZTI5YWE4NTc1ZDM2MTQ5N2JmZTQ1OGM5NzNiMWM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-23T06:53:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:41Z"
      },
      "message": "doc: remove documentation for rpcssl",
      "tree": {
        "sha": "bd0484ff6573662eca5f557d06e4a25695e41cc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd0484ff6573662eca5f557d06e4a25695e41cc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51fcfc022ce29aa8575d361497bfe458c973b1c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51fcfc022ce29aa8575d361497bfe458c973b1c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51fcfc022ce29aa8575d361497bfe458c973b1c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51fcfc022ce29aa8575d361497bfe458c973b1c5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3932ff50c563df19c14e9987f2297d9f99a299ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3932ff50c563df19c14e9987f2297d9f99a299ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3932ff50c563df19c14e9987f2297d9f99a299ac"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 1,
      "deletions": 49
    },
    "files": [
      {
        "sha": "1338d2f2b5c3b5dc48a36f93c5afbac330b9a065",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "patch": "@@ -96,7 +96,7 @@ _bitcoind() {\n     esac\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-wallet=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n+        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0"
      },
      {
        "sha": "62ffd7123a666eaeb140a1ec2846a0e6a3a91ad8",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "patch": "@@ -95,15 +95,6 @@\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n-# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n-# with Bitcoin -server or bitcoind\n-#rpcssl=1\n-\n-# OpenSSL settings used when rpcssl=1\n-#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-#rpcsslcertificatechainfile=server.cert\n-#rpcsslprivatekeyfile=server.pem\n-\n # Transaction Fee Changes in 0.10.0\n \n # Send transactions as zero-fee transactions if possible (default: 0)"
      },
      {
        "sha": "154b45873940c9d23b8d1fe96d516ee7b5bdf7f0",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "patch": "@@ -36,9 +36,6 @@ Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332).\n .TP\n \\fB\\-rpcconnect=\\fR<ip>\n Send commands to node running on <ip> (default: 127.0.0.1).\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections (see the Bitcoin Wiki for SSL setup instructions).\n \n .SH \"SEE ALSO\"\n \\fBbitcoind\\fP, \\fBbitcoin.conf\\fP"
      },
      {
        "sha": "05eadc94cdd441d5c3c6e32137884d43e506b4fb",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "patch": "@@ -178,18 +178,6 @@ Set maximum block size in bytes (default: 250000)\n .HP\n \\fB\\-blockprioritysize=\\fR<n> Set maximum size of high\\-priority/low\\-fee transactions in bytes (default: 27000)\n .PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatechainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n .SS \"UI options:\"\n .TP"
      },
      {
        "sha": "0cf4d991e34c90bf2d38e3fcb982c89cfee6aed6",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "patch": "@@ -46,16 +46,6 @@ Listen for RPC connections on this TCP port.\n \\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n .TP\n-\\fBrpcssl=\\fR\\fI'1'\\fR\n-Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *bitcoin* '\\-server' or *bitcoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n-.TP\n-\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n-.TP\n-\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n-.TP\n .SH MISCELLANEOUS OPTIONS\n .TP\n \\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]"
      },
      {
        "sha": "5b0f2921aa415b04663e472162bf95458d308e75",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51fcfc022ce29aa8575d361497bfe458c973b1c5/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "patch": "@@ -62,20 +62,6 @@ Allow JSON\\-RPC connections from specified IP address\n .TP\n \\fB\\-rpcconnect=\\fR<ip>\n Send commands to node running on <ip>\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n .TP\n \\-?\n This help message"
      }
    ]
  },
  {
    "sha": "8f9301cdaae3682a650e42dfee6c7013b9703ff0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjkzMDFjZGFhZTM2ODJhNjUwZTQyZGZlZTZjNzAxM2I5NzAzZmYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-23T06:54:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:41Z"
      },
      "message": "qa: Remove -rpckeepalive tests from httpbasics\n\nThis option was a temporary workaround, and is no longer necessary\nwith the new web server.",
      "tree": {
        "sha": "a9961561919e825df38b379745cc707b066e1fc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9961561919e825df38b379745cc707b066e1fc3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f9301cdaae3682a650e42dfee6c7013b9703ff0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9301cdaae3682a650e42dfee6c7013b9703ff0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f9301cdaae3682a650e42dfee6c7013b9703ff0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9301cdaae3682a650e42dfee6c7013b9703ff0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51fcfc022ce29aa8575d361497bfe458c973b1c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51fcfc022ce29aa8575d361497bfe458c973b1c5"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b66533543d755b37c4cc10e5d580686c220fc918",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f9301cdaae3682a650e42dfee6c7013b9703ff0/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f9301cdaae3682a650e42dfee6c7013b9703ff0/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=8f9301cdaae3682a650e42dfee6c7013b9703ff0",
        "patch": "@@ -22,7 +22,7 @@\n \n class HTTPBasicsTest (BitcoinTestFramework):\n     def setup_nodes(self):\n-        return start_nodes(4, self.options.tmpdir, extra_args=[['-rpckeepalive=1'], ['-rpckeepalive=0'], [], []])\n+        return start_nodes(4, self.options.tmpdir)\n \n     def run_test(self):\n \n@@ -84,9 +84,8 @@ def run_test(self):\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, False) #connection must be closed because keep-alive was set to false\n \n-        #node2 (third node) is running with standard keep-alive parameters which means keep-alive is off\n+        #node2 (third node) is running with standard keep-alive parameters which means keep-alive is on\n         urlNode2 = urlparse.urlparse(self.nodes[2].url)\n         authpair = urlNode2.username + ':' + urlNode2.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}"
      }
    ]
  },
  {
    "sha": "6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTIxZGQ1OThjMDFkZWI5Mzk2ODFlNDU5NGJmZDdiNzVlY2I3Y2Ez",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-23T06:55:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:41Z"
      },
      "message": "Remove rpc_boostasiotocnetaddr test\n\nDropping all use of boost::asio.",
      "tree": {
        "sha": "259dc0591186c3189c4930d8d8cdaffba3a12da0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/259dc0591186c3189c4930d8d8cdaffba3a12da0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a21dd598c01deb939681e4594bfd7b75ecb7ca3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f9301cdaae3682a650e42dfee6c7013b9703ff0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9301cdaae3682a650e42dfee6c7013b9703ff0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f9301cdaae3682a650e42dfee6c7013b9703ff0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 0,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c0476db99b25983bfc02bd64e6ac7966e5944e90",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a21dd598c01deb939681e4594bfd7b75ecb7ca3/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a21dd598c01deb939681e4594bfd7b75ecb7ca3/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
        "patch": "@@ -224,21 +224,6 @@ BOOST_AUTO_TEST_CASE(json_parse_errors)\n     BOOST_CHECK_THROW(ParseNonRFCJSONValue(\"3J98t1WpEZ73CNmQviecrnyiWrnqRhWNL\"), std::runtime_error);\n }\n \n-BOOST_AUTO_TEST_CASE(rpc_boostasiotocnetaddr)\n-{\n-    // Check IPv4 addresses\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"1.2.3.4\")).ToString(), \"1.2.3.4\");\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"127.0.0.1\")).ToString(), \"127.0.0.1\");\n-    // Check IPv6 addresses\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::1\")).ToString(), \"::1\");\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"123:4567:89ab:cdef:123:4567:89ab:cdef\")).ToString(),\n-                                         \"123:4567:89ab:cdef:123:4567:89ab:cdef\");\n-    // v4 compatible must be interpreted as IPv4\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::0:127.0.0.1\")).ToString(), \"127.0.0.1\");\n-    // v4 mapped must be interpreted as IPv4\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::ffff:127.0.0.1\")).ToString(), \"127.0.0.1\");\n-}\n-\n BOOST_AUTO_TEST_CASE(rpc_ban)\n {\n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));"
      }
    ]
  },
  {
    "sha": "a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWFmMjM0YzFmMjJkM2U4YjQ5YzZkOGFiYjg5Y2M4YjhjMDA5YTMw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-01-20T03:47:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:41Z"
      },
      "message": "libevent: add depends",
      "tree": {
        "sha": "c47f2eade458b3206c24b6eeef7aadd9381f0e63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c47f2eade458b3206c24b6eeef7aadd9381f0e63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a21dd598c01deb939681e4594bfd7b75ecb7ca3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a21dd598c01deb939681e4594bfd7b75ecb7ca3"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3388a28437312ff6610096639104d91234b9298b",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
        "patch": "@@ -0,0 +1,26 @@\n+package=libevent\n+$(package)_version=2.0.22\n+$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n+$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n+$(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts_release=--disable-debug-mode\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+endef"
      },
      {
        "sha": "a0d377bb43658efc700b9ea2ecd19aa48b74beed",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
        "patch": "@@ -1,4 +1,4 @@\n-packages:=boost openssl\n+packages:=boost openssl libevent\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf"
      }
    ]
  },
  {
    "sha": "3140ef92493169f1f993312b4add1fb87943c7b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTQwZWY5MjQ5MzE2OWYxZjk5MzMxMmI0YWRkMWZiODc5NDNjN2I0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-20T05:04:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:41Z"
      },
      "message": "build: build-system changes for libevent",
      "tree": {
        "sha": "177136285a73e36db5a57425a01890cb1faef4c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/177136285a73e36db5a57425a01890cb1faef4c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3140ef92493169f1f993312b4add1fb87943c7b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3140ef92493169f1f993312b4add1fb87943c7b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3140ef92493169f1f993312b4add1fb87943c7b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3140ef92493169f1f993312b4add1fb87943c7b4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9af234c1f22d3e8b49c6d8abb89cc8b8c009a30"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 22,
      "deletions": 6
    },
    "files": [
      {
        "sha": "07ee28f84e69ccd5cc41afc9aaeb7360dbb81bb8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3140ef92493169f1f993312b4add1fb87943c7b4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3140ef92493169f1f993312b4add1fb87943c7b4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3140ef92493169f1f993312b4add1fb87943c7b4",
        "patch": "@@ -664,6 +664,12 @@ if test x$use_pkgconfig = xyes; then\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n+      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+        if test x$TARGET_OS != xwindows; then\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n+        fi\n+      fi\n     ]\n   )\n else\n@@ -673,6 +679,14 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n+  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n+    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n+    if test x$TARGET_OS != xwindows; then\n+      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n+    fi\n+  fi\n+\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])"
      },
      {
        "sha": "4b646f01839fe0921025569f259af556a51dc6b4",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3140ef92493169f1f993312b4add1fb87943c7b4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3140ef92493169f1f993312b4add1fb87943c7b4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3140ef92493169f1f993312b4add1fb87943c7b4",
        "patch": "@@ -163,7 +163,7 @@ obj/build.h: FORCE\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS)\n+libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n@@ -319,12 +319,12 @@ if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -337,7 +337,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBSECP256K1)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #"
      },
      {
        "sha": "8d60aca25c531b4068c258cf2574bb7c7d36d7f4",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3140ef92493169f1f993312b4add1fb87943c7b4/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3140ef92493169f1f993312b4add1fb87943c7b4/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=3140ef92493169f1f993312b4add1fb87943c7b4",
        "patch": "@@ -362,7 +362,8 @@ if ENABLE_WALLET\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n "
      },
      {
        "sha": "4250bb8f3b27b2a49452aa4ea93e3307a9062271",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3140ef92493169f1f993312b4add1fb87943c7b4/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3140ef92493169f1f993312b4add1fb87943c7b4/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=3140ef92493169f1f993312b4add1fb87943c7b4",
        "patch": "@@ -32,7 +32,8 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)\n+  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno"
      }
    ]
  },
  {
    "sha": "6e996d39da60006c47ea34e183164cbb4acd8af8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTk5NmQzOWRhNjAwMDZjNDdlYTM0ZTE4MzE2NGNiYjRhY2Q4YWY4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-01-20T12:35:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:41Z"
      },
      "message": "tests: fix qt payment test\n\nNow that boost no longer automatically initializes openssl, we have to\ndo it ourselves.",
      "tree": {
        "sha": "802baca02102afbda69cd31159fd20fd4a63bc4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/802baca02102afbda69cd31159fd20fd4a63bc4d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e996d39da60006c47ea34e183164cbb4acd8af8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e996d39da60006c47ea34e183164cbb4acd8af8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e996d39da60006c47ea34e183164cbb4acd8af8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e996d39da60006c47ea34e183164cbb4acd8af8/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3140ef92493169f1f993312b4add1fb87943c7b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3140ef92493169f1f993312b4add1fb87943c7b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3140ef92493169f1f993312b4add1fb87943c7b4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f91de2008c6fc10714904952020569051788be09",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e996d39da60006c47ea34e183164cbb4acd8af8/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e996d39da60006c47ea34e183164cbb4acd8af8/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=6e996d39da60006c47ea34e183164cbb4acd8af8",
        "patch": "@@ -17,6 +17,8 @@\n #include <QObject>\n #include <QTest>\n \n+#include <openssl/ssl.h>\n+\n #if defined(QT_STATICPLUGIN) && QT_VERSION < 0x050000\n #include <QtPlugin>\n Q_IMPORT_PLUGIN(qcncodecs)\n@@ -36,6 +38,8 @@ int main(int argc, char *argv[])\n     QCoreApplication app(argc, argv);\n     app.setApplicationName(\"Bitcoin-Qt-test\");\n \n+    SSL_library_init();\n+\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;"
      }
    ]
  },
  {
    "sha": "ee2a42b447eebacc05ec4238d562b04a9a0d8462",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTJhNDJiNDQ3ZWViYWNjMDVlYzQyMzhkNTYyYjA0YTlhMGQ4NDYy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-27T18:27:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T16:38:42Z"
      },
      "message": "tests: GET requests cannot have request body, use POST in rest.py\n\nSending a request body with GET request is not valid in HTTP spec, and\nnot compatible with evhttpd.",
      "tree": {
        "sha": "59becd12662cb2cefb082ad7fb9c559f9225f7be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59becd12662cb2cefb082ad7fb9c559f9225f7be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee2a42b447eebacc05ec4238d562b04a9a0d8462",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2a42b447eebacc05ec4238d562b04a9a0d8462",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee2a42b447eebacc05ec4238d562b04a9a0d8462",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2a42b447eebacc05ec4238d562b04a9a0d8462/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e996d39da60006c47ea34e183164cbb4acd8af8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e996d39da60006c47ea34e183164cbb4acd8af8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e996d39da60006c47ea34e183164cbb4acd8af8"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 26,
      "deletions": 16
    },
    "files": [
      {
        "sha": "e084ad55abb4b52b96893f6fe7eb942103d9dcb4",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 26,
        "deletions": 16,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee2a42b447eebacc05ec4238d562b04a9a0d8462/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee2a42b447eebacc05ec4238d562b04a9a0d8462/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=ee2a42b447eebacc05ec4238d562b04a9a0d8462",
        "patch": "@@ -32,10 +32,20 @@ def deser_uint256(f):\n         r += t << (i * 32)\n     return r\n \n-#allows simple http get calls with a request body\n-def http_get_call(host, port, path, requestdata = '', response_object = 0):\n+#allows simple http get calls\n+def http_get_call(host, port, path, response_object = 0):\n     conn = httplib.HTTPConnection(host, port)\n-    conn.request('GET', path, requestdata)\n+    conn.request('GET', path)\n+\n+    if response_object:\n+        return conn.getresponse()\n+\n+    return conn.getresponse().read()\n+\n+#allows simple http post calls with a request body\n+def http_post_call(host, port, path, requestdata = '', response_object = 0):\n+    conn = httplib.HTTPConnection(host, port)\n+    conn.request('POST', path, requestdata)\n \n     if response_object:\n         return conn.getresponse()\n@@ -137,7 +147,7 @@ def run_test(self):\n         binaryRequest += binascii.unhexlify(vintx);\n         binaryRequest += pack(\"i\", 0);\n \n-        bin_response = http_get_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', binaryRequest)\n+        bin_response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', binaryRequest)\n         output = StringIO.StringIO()\n         output.write(bin_response)\n         output.seek(0)\n@@ -175,29 +185,29 @@ def run_test(self):\n \n         #do some invalid requests\n         json_request = '{\"checkmempool'\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'json', json_request, True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'json', json_request, True)\n         assert_equal(response.status, 500) #must be a 500 because we send a invalid json request\n \n         json_request = '{\"checkmempool'\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', json_request, True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', json_request, True)\n         assert_equal(response.status, 500) #must be a 500 because we send a invalid bin request\n \n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos/checkmempool'+self.FORMAT_SEPARATOR+'bin', '', True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos/checkmempool'+self.FORMAT_SEPARATOR+'bin', '', True)\n         assert_equal(response.status, 500) #must be a 500 because we send a invalid bin request\n \n         #test limits\n         json_request = '/checkmempool/'\n         for x in range(0, 20):\n             json_request += txid+'-'+str(n)+'/'\n         json_request = json_request.rstrip(\"/\")\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n         assert_equal(response.status, 500) #must be a 500 because we exceeding the limits\n \n         json_request = '/checkmempool/'\n         for x in range(0, 15):\n             json_request += txid+'-'+str(n)+'/'\n         json_request = json_request.rstrip(\"/\");\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n         assert_equal(response.status, 200) #must be a 500 because we exceeding the limits\n \n         self.nodes[0].generate(1) #generate block to not affect upcoming tests\n@@ -208,27 +218,27 @@ def run_test(self):\n         ################\n \n         # check binary format\n-        response = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", \"\", True)\n+        response = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", True)\n         assert_equal(response.status, 200)\n         assert_greater_than(int(response.getheader('content-length')), 80)\n         response_str = response.read()\n \n         # compare with block header\n-        response_header = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", \"\", True)\n+        response_header = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", True)\n         assert_equal(response_header.status, 200)\n         assert_equal(int(response_header.getheader('content-length')), 80)\n         response_header_str = response_header.read()\n         assert_equal(response_str[0:80], response_header_str)\n \n         # check block hex format\n-        response_hex = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", \"\", True)\n+        response_hex = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n         assert_equal(response_hex.status, 200)\n         assert_greater_than(int(response_hex.getheader('content-length')), 160)\n         response_hex_str = response_hex.read()\n         assert_equal(response_str.encode(\"hex\")[0:160], response_hex_str[0:160])\n \n         # compare with hex block header\n-        response_header_hex = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", \"\", True)\n+        response_header_hex = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n         assert_equal(response_header_hex.status, 200)\n         assert_greater_than(int(response_header_hex.getheader('content-length')), 160)\n         response_header_hex_str = response_header_hex.read()\n@@ -241,7 +251,7 @@ def run_test(self):\n         assert_equal(block_json_obj['hash'], bb_hash)\n \n         # compare with json block header\n-        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", \"\", True)\n+        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", True)\n         assert_equal(response_header_json.status, 200)\n         response_header_json_str = response_header_json.read()\n         json_obj = json.loads(response_header_json_str, parse_float=decimal.Decimal)\n@@ -265,7 +275,7 @@ def run_test(self):\n         #see if we can get 5 headers in one response\n         self.nodes[1].generate(5)\n         self.sync_all()\n-        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/5/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", \"\", True)\n+        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/5/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", True)\n         assert_equal(response_header_json.status, 200)\n         response_header_json_str = response_header_json.read()\n         json_obj = json.loads(response_header_json_str)\n@@ -278,7 +288,7 @@ def run_test(self):\n         assert_equal(json_obj['txid'], tx_hash)\n \n         # check hex format response\n-        hex_string = http_get_call(url.hostname, url.port, '/rest/tx/'+tx_hash+self.FORMAT_SEPARATOR+\"hex\", \"\", True)\n+        hex_string = http_get_call(url.hostname, url.port, '/rest/tx/'+tx_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n         assert_equal(hex_string.status, 200)\n         assert_greater_than(int(response.getheader('content-length')), 10)\n "
      }
    ]
  },
  {
    "sha": "f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGI5MTMyZDBjN2Y2Mzk1YzNhOTA5NTNmZjc4ZThiNzhmY2NjZGVm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-09-02T15:49:26Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-09-03T07:51:37Z"
      },
      "message": "Update gitian build guide for Debian 8.1\n\nSigned-off-by: fanquake <fanquake@gmail.com>",
      "tree": {
        "sha": "fd5274ceaadf3f980597df08a85926b03af16162",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd5274ceaadf3f980597df08a85926b03af16162"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 81,
      "deletions": 58
    },
    "files": [
      {
        "sha": "169727adc0fb885bb008b77ecdbd49a52f00561d",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 81,
        "deletions": 58,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
        "patch": "@@ -5,16 +5,16 @@ Gitian building\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n Core executables. It provides a way to be reasonably sure that the\n-executables are really built from source on GitHub. It also makes sure that\n+executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n to bitcoin.org.\n \n-More independent gitian builders are needed, which is why I wrote this\n-guide. It is preferred to follow these steps yourself instead of using someone else's\n+More independent gitian builders are needed, which is why this guide exists. \n+It is preferred you follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n Table of Contents\n@@ -39,46 +39,46 @@ This guide explains how to set up the environment, and how to start the builds.\n \n Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n Any kind of virtualization can be used, for example:\n-- [VirtualBox](https://www.virtualbox.org/), covered by this guide\n+- [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n - [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n-You can also install on actual hardware instead of using virtualization.\n+You can also install gitian on actual hardware instead of using virtualization.\n \n Create a new VirtualBox VM\n ---------------------------\n In the VirtualBox GUI click \"Create\" and choose the following parameters in the wizard:\n \n-![](gitian-building/create_vm_page1.png)\n+![](gitian-building/create_new_vm.png)\n \n-- Type: Linux, Debian (64 bit)\n+- Type: Linux, Debian (64-bit)\n \n ![](gitian-building/create_vm_memsize.png)\n \n-- Memory Size: at least 1024MB, anything lower will really slow the build down\n+- Memory Size: at least 1024MB, anything less will really slow down the build.\n \n-![](gitian-building/create_vm_hard_drive.png)\n+![](gitian-building/create_vm_hard_disk.png)\n \n-- Hard Drive: Create a virtual hard drive now\n+- Hard Disk: Create a virtual hard disk now\n     \n-![](gitian-building/create_vm_hard_drive_file_type.png)\n+![](gitian-building/create_vm_hard_disk_file_type.png)\n \n-- Hard Drive file type: Use the default, VDI (VirtualBox Disk Image) \n+- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image) \n \n-![](gitian-building/create_vm_storage_physical_hard_drive.png)\n+![](gitian-building/create_vm_storage_physical_hard_disk.png)\n     \n-- Storage on Physical hard drive: Dynamically Allocated \n+- Storage on physical hard disk: Dynamically Allocated \n     \n ![](gitian-building/create_vm_file_location_size.png)\n \n-- Disk size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n-- Push the `Create` button\n+- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n+- Click `Create`\n \n-Get the [Debian 7.8 net installer](http://cdimage.debian.org/cdimage/archive/7.8.0/amd64/iso-cd/debian-7.8.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+Get the [Debian 8.1 net installer](http://cdimage.debian.org/debian-cd/8.1.0/amd64/iso-cd/debian-8.1.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"e39c36d6adc0fd86c6edb0e03e22919086c883b37ca194d063b8e3e8f6ff6a3a  debian-7.8.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"5d0a1f804d73aee73eee7efbb38456390558094fd19894a573f1514ca44347e0  debian-8.1.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it. \n@@ -115,8 +115,9 @@ This section will explain how to install Debian on the newly created VM.\n \n ![](gitian-building/debian_install_1_boot_menu.png)\n \n-**Note**: Navigation in the Debian installer: To keep a setting at the default\n-and proceed, just press `Enter`. To select a different button, press `Tab`.\n+**Note**: Navigating in the Debian installer: \n+To keep a setting at the default and proceed, just press `Enter`. \n+To select a different button, press `Tab`.\n \n - Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n \n@@ -126,7 +127,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n \n - The VM will detect network settings using DHCP, this should all proceed automatically\n - Configure the network: \n-  - System name `debian`.\n+  - Hostname `debian`.\n   - Leave domain name empty.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n@@ -136,6 +137,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n - Name the new user `debian` (the full name doesn't matter, you can leave it empty) \n+- Set the account username as `debian`\n \n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n@@ -158,65 +160,89 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n \n ![](gitian-building/debian_install_12_choose_disk.png)\n \n-  - Partitioning scheme: All files in one partition \n-  \n-![](gitian-building/debian_install_13_partition_scheme.png)\n-\n   - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n \n-![](gitian-building/debian_install_14_finish.png) \n+![](gitian-building/debian_install_14_finish.png)\n ![](gitian-building/debian_install_15_write_changes.png)\n \n - The base system will be installed, this will take a minute or so\n - Choose a mirror (any will do) \n \n ![](gitian-building/debian_install_16_choose_a_mirror.png)\n \n-- Enter proxy information (unless you are on an intranet, you can leave this empty)\n+- Enter proxy information (unless you are on an intranet, leave this empty)\n \n ![](gitian-building/debian_install_18_proxy_settings.png)\n \n - Wait a bit while 'Select and install software' runs\n - Participate in popularity contest -> *No*\n-- Choose software to install. We need just the base system. \n+- Choose software to install. We need just the base system.\n+- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n+- Uncheck 'Debian Desktop Environment' and 'Print Server'\n \n ![](gitian-building/debian_install_19_software_selection.png)\n \n-- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n-- Uncheck 'Debian Desktop Environment' and 'Print Server'\n+- Install the GRUB boot loader to the master boot record? -> Yes\n \n ![](gitian-building/debian_install_20_install_grub.png)\n \n-- Install the GRUB boot loader to the master boot record? -> Yes \n+- Device for boot loader installation -> ata-VBOX_HARDDISK\n \n-![](gitian-building/debian_install_21_finish_installation.png)\n+![](gitian-building/debian_install_21_install_grub_bootloader.png)\n \n - Installation Complete -> *Continue*\n - After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n \n+![](gitian-building/debian_install_22_finish_installation.png)\n+\n+\n+After Installation\n+-------------------\n+The next step in the guide involves logging in as root via SSH.\n+SSH login for root users is disabled by default, so we'll enable that now.\n+\n+Login to the VM using username `root` and the root password you choose earlier.\n+You'll be presented with a screen similar to this.\n+\n+![](gitian-building/debian_root_login.png)\n+\n+Type:\n+\n+```\n+sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n+```\n+and press enter. Then,\n+```\n+/etc/init.d/ssh restart\n+```\n+and enter to restart SSH. Logout by typing 'logout' and pressing 'enter'.\n+\n Connecting to the VM\n ----------------------\n \n After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n-On Windows you can use putty[1] and WinSCP[2].\n+On Windows you can use [putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and [WinSCP](http://winscp.net/eng/index.php).\n \n-For example to connect as `root` from a Linux command prompt use\n+For example, to connect as `root` from a Linux command prompt use\n \n     $ ssh root@localhost -p 22222\n     The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n-    ECDSA key fingerprint is 8e:71:f9:5b:62:46:de:44:01:da:fb:5f:34:b5:f2:18.\n+    RSA key fingerprint is ae:f5:c8:9f:17:c6:c7:1b:c2:1b:12:31:1d:bb:d0:c7.\n     Are you sure you want to continue connecting (yes/no)? yes\n-    Warning: Permanently added '[localhost]:22222' (ECDSA) to the list of known hosts.\n+    Warning: Permanently added '[localhost]:22222' (RSA) to the list of known hosts.\n     root@localhost's password: (enter root password configured during install)\n-    Linux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64\n+\n+    The programs included with the Debian GNU/Linux system are free software;\n+    the exact distribution terms for each program are described in the\n+    individual files in /usr/share/doc/*/copyright.\n+\n+    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n+    permitted by applicable law.\n     root@debian:~#\n \n Replace `root` with `debian` to log in as user.\n \n-[1] http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n-[2] http://winscp.net/eng/index.php\n-\n Setting up Debian for gitian building\n --------------------------------------\n \n@@ -226,13 +252,10 @@ First we need to log in as `root` to set up dependencies and make sure that our\n user can use the sudo command. Type/paste the following in the terminal:\n \n ```bash\n-apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils\n+apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring\n adduser debian sudo\n ```\n \n-When you get a colorful screen with a question about the 'LXC directory', just\n-go with the default (`/var/lib/lxc`).\n-\n Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n \n ```bash\n@@ -255,7 +278,7 @@ reboot\n ```\n \n At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n-section need only to be performed once.\n+section only need to be performed once.\n \n Installing gitian\n ------------------\n@@ -300,26 +323,26 @@ cd gitian-builder\n bin/make-base-vm --lxc --arch amd64 --suite precise\n ```\n \n-There will be a lot of warnings printed during build of the image. These can be ignored.\n+There will be a lot of warnings printed during the build of the image. These can be ignored.\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n Getting and building the inputs\n --------------------------------\n \n-Follow the instructions in [doc/release-process.md](release-process.md) in the bitcoin repository\n-under 'Fetch and build inputs' to install sources which require manual intervention. Also follow\n-the next step: 'Seed the Gitian sources cache', which will fetch all necessary source files allowing\n-for gitian to work offline.\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change) \n+in the bitcoin repository to install sources which require manual intervention. Also follow\n+the next step: 'Seed the Gitian sources cache', which will fetch all the necessary source \n+files to allow gitian to work offline.\n \n Building Bitcoin\n ----------------\n \n To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n-gitian builds' in [doc/release-process.md](release-process.md) in the bitcoin repository.\n+gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n \n-This may take a long time as it also builds the dependencies needed for each descriptor.\n-These dependencies will be cached after a successful build to avoid rebuilding them where possible.\n+This may take some time as it will build all the dependencies needed for each descriptor.\n+These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n \n At any time you can check the package installation and build progress with\n \n@@ -331,13 +354,13 @@ tail -f var/build.log\n Output from `gbuild` will look something like\n \n     Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n-    remote: Reusing existing pack: 35606, done.\n-    remote: Total 35606 (delta 0), reused 0 (delta 0)\n-    Receiving objects: 100% (35606/35606), 26.52 MiB | 4.28 MiB/s, done.\n-    Resolving deltas: 100% (25724/25724), done.\n+    remote: Counting objects: 57959, done.\n+    remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n+    Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n+    Resolving deltas: 100% (41590/41590), done.\n     From https://github.com/bitcoin/bitcoin\n     ... (new tags, new branch etc)\n-    --- Building for precise x86_64 ---\n+    --- Building for precise amd64 ---\n     Stopping target if it is up\n     Making a new image copy\n     stdin: is not a tty"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "a1706e14fda1488dbc180a4f619e5c3de98fae2b",
        "filename": "doc/gitian-building/create_vm_hard_drive.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive.png?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "251b8ee3e2757a090a8fd045cd3ba76354459915",
        "filename": "doc/gitian-building/create_vm_hard_drive_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive_file_type.png?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "5abfee5337058f9bd638a79416040bd6c6496194",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "edaebc6223708e1473d893dd480a5ef439a39473",
        "filename": "doc/gitian-building/create_vm_page1.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_page1.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_page1.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_page1.png?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "987efaa40c2e3c57ef7fb6c64fee8efa0e63241e",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_drive.png?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "2f80f19b631c0cbf7ebeddc71c309aca8cf86eed",
        "filename": "doc/gitian-building/debian_install_13_partition_scheme.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/debian_install_13_partition_scheme.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/debian_install_13_partition_scheme.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_13_partition_scheme.png?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "cef2db07815451cf16099e063f94bb40202ee822",
        "filename": "doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_17_choose_a_mirror2.png?ref=10c0e52b68c77d6cf1ba4aeb05618229bba3cd3d"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
        "previous_filename": "doc/gitian-building/debian_install_21_finish_installation.png"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      },
      {
        "sha": "5acdc3fe10eebce2422cdb6d6ae799a7630f0b8d",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      }
    ]
  },
  {
    "sha": "40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGI1NTZkMzc0MmExZjY1ZDY3ZTJkNGM3NjBkMGIxM2ZlOGJlNWI3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-23T06:53:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:18Z"
      },
      "message": "evhttpd implementation\n\n- *Replace usage of boost::asio with [libevent2](http://libevent.org/)*.\nboost::asio is not part of C++11, so unlike other boost there is no\nforwards-compatibility reason to stick with it. Together with #4738 (convert\njson_spirit to UniValue), this rids Bitcoin Core of the worst offenders with\nregard to compile-time slowness.\n\n- *Replace spit-and-duct-tape http server with evhttp*. Front-end http handling\nis handled by libevent, a work queue (with configurable depth and parallelism)\nis used to handle application requests.\n\n- *Wrap HTTP request in C++ class*; this makes the application code mostly\nHTTP-server-neutral\n\n- *Refactor RPC to move all http-specific code to a separate file*.\nTheoreticaly this can allow building without HTTP server but with another RPC\nbackend, e.g. Qt's debug console (currently not implemented) or future RPC\nmechanisms people may want to use.\n\n- *HTTP dispatch mechanism*; services (e.g., RPC, REST) register which URL\npaths they want to handle.\n\nBy using a proven, high-performance asynchronous networking library (also used\nby Tor) and HTTP server, problems such as #5674, #5655, #344 should be avoided.\n\nWhat works? bitcoind, bitcoin-cli, bitcoin-qt. Unit tests and RPC/REST tests\npass. The aim for now is everything but SSL support.\n\nConfiguration options:\n\n- `-rpcthreads`: repurposed as \"number of  work handler threads\". Still\ndefaults to 4.\n\n- `-rpcworkqueue`: maximum depth of work queue. When this is reached, new\nrequests will return a 500 Internal Error.\n\n- `-rpctimeout`: inactivity time, in seconds, after which to disconnect a\nclient.\n\n- `-debug=http`: low-level http activity logging",
      "tree": {
        "sha": "2a8117475070db6a8498201f7bee6cc85f2606ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a8117475070db6a8498201f7bee6cc85f2606ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee2a42b447eebacc05ec4238d562b04a9a0d8462",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2a42b447eebacc05ec4238d562b04a9a0d8462",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee2a42b447eebacc05ec4238d562b04a9a0d8462"
      }
    ],
    "stats": {
      "total": 2348,
      "additions": 1299,
      "deletions": 1049
    },
    "files": [
      {
        "sha": "4dfd56626c83c912a831ead0c8939129157f6544",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -98,6 +98,8 @@ BITCOIN_CORE_H = \\\n   eccryptoverify.h \\\n   ecwrapper.h \\\n   hash.h \\\n+  httprpc.h \\\n+  httpserver.h \\\n   init.h \\\n   key.h \\\n   keystore.h \\\n@@ -170,6 +172,8 @@ libbitcoin_server_a_SOURCES = \\\n   bloom.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  httprpc.cpp \\\n+  httpserver.cpp \\\n   init.cpp \\\n   leveldbwrapper.cpp \\\n   main.cpp \\"
      },
      {
        "sha": "2e094fde227afb122b7b3d1953fe7bfafacdcdd0",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 93,
        "deletions": 40,
        "changes": 133,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -11,6 +11,12 @@\n #include \"utilstrencodings.h\"\n \n #include <boost/filesystem/operations.hpp>\n+#include <stdio.h>\n+\n+#include <event2/event.h>\n+#include <event2/http.h>\n+#include <event2/buffer.h>\n+#include <event2/keyvalq_struct.h>\n \n #include \"univalue/univalue.h\"\n \n@@ -32,9 +38,6 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n \n-    strUsage += HelpMessageGroup(_(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"));\n-    strUsage += HelpMessageOpt(\"-rpcssl\", _(\"Use OpenSSL (https) for JSON-RPC connections\"));\n-\n     return strUsage;\n }\n \n@@ -92,67 +95,117 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n         return false;\n     }\n+    if (GetBoolArg(\"-rpcssl\", false))\n+    {\n+        fprintf(stderr, \"Error: SSL mode for RPC (-rpcssl) is no longer supported.\\n\");\n+        return false;\n+    }\n     return true;\n }\n \n-UniValue CallRPC(const string& strMethod, const UniValue& params)\n+\n+/** Reply structure for request_done to fill in */\n+struct HTTPReply\n {\n-    // Connect to localhost\n-    bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n-    boost::asio::io_service io_service;\n-    boost::asio::ssl::context context(io_service, boost::asio::ssl::context::sslv23);\n-    context.set_options(boost::asio::ssl::context::no_sslv2 | boost::asio::ssl::context::no_sslv3);\n-    boost::asio::ssl::stream<boost::asio::ip::tcp::socket> sslStream(io_service, context);\n-    SSLIOStreamDevice<boost::asio::ip::tcp> d(sslStream, fUseSSL);\n-    boost::iostreams::stream< SSLIOStreamDevice<boost::asio::ip::tcp> > stream(d);\n-\n-    const bool fConnected = d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(BaseParams().RPCPort())));\n-    if (!fConnected)\n-        throw CConnectionFailed(\"couldn't connect to server\");\n+    int status;\n+    std::string body;\n+};\n+\n+static void http_request_done(struct evhttp_request *req, void *ctx)\n+{\n+    HTTPReply *reply = static_cast<HTTPReply*>(ctx);\n+\n+    if (req == NULL) {\n+        /* If req is NULL, it means an error occurred while connecting, but\n+         * I'm not sure how to find out which one. We also don't really care.\n+         */\n+        reply->status = 0;\n+        return;\n+    }\n \n-    // Find credentials to use\n+    reply->status = evhttp_request_get_response_code(req);\n+\n+    struct evbuffer *buf = evhttp_request_get_input_buffer(req);\n+    if (buf)\n+    {\n+        size_t size = evbuffer_get_length(buf);\n+        const char *data = (const char*)evbuffer_pullup(buf, size);\n+        if (data)\n+            reply->body = std::string(data, size);\n+        evbuffer_drain(buf, size);\n+    }\n+}\n+\n+UniValue CallRPC(const string& strMethod, const UniValue& params)\n+{\n+    std::string host = GetArg(\"-rpcconnect\", \"127.0.0.1\");\n+    int port = GetArg(\"-rpcport\", BaseParams().RPCPort());\n+\n+    // Create event base\n+    struct event_base *base = event_base_new(); // TODO RAII\n+    if (!base)\n+        throw runtime_error(\"cannot create event_base\");\n+\n+    // Synchronously look up hostname\n+    struct evhttp_connection *evcon = evhttp_connection_base_new(base, NULL, host.c_str(), port); // TODO RAII\n+    if (evcon == NULL)\n+        throw runtime_error(\"create connection failed\");\n+    evhttp_connection_set_timeout(evcon, GetArg(\"-rpctimeout\", 30));\n+\n+    HTTPReply response;\n+    struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII\n+    if (req == NULL)\n+        throw runtime_error(\"create http request failed\");\n+\n+    // Get credentials\n     std::string strRPCUserColonPass;\n     if (mapArgs[\"-rpcpassword\"] == \"\") {\n         // Try fall back to cookie-based authentication if no password is provided\n         if (!GetAuthCookie(&strRPCUserColonPass)) {\n             throw runtime_error(strprintf(\n-                _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n-                  \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n+                _(\"Could not locate RPC credentials. No authentication cookie could be found, and no rpcpassword is set in the configuration file (%s)\"),\n                     GetConfigFile().string().c_str()));\n \n         }\n     } else {\n         strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n     }\n \n-    // HTTP basic authentication\n-    map<string, string> mapRequestHeaders;\n-    mapRequestHeaders[\"Authorization\"] = string(\"Basic \") + EncodeBase64(strRPCUserColonPass);\n-\n-    // Send request\n-    string strRequest = JSONRPCRequest(strMethod, params, 1);\n-    string strPost = HTTPPost(strRequest, mapRequestHeaders);\n-    stream << strPost << std::flush;\n-\n-    // Receive HTTP reply status\n-    int nProto = 0;\n-    int nStatus = ReadHTTPStatus(stream, nProto);\n+    struct evkeyvalq *output_headers = evhttp_request_get_output_headers(req);\n+    assert(output_headers);\n+    evhttp_add_header(output_headers, \"Host\", host.c_str());\n+    evhttp_add_header(output_headers, \"Connection\", \"close\");\n+    evhttp_add_header(output_headers, \"Authorization\", (std::string(\"Basic \") + EncodeBase64(strRPCUserColonPass)).c_str());\n+\n+    // Attach request data\n+    std::string strRequest = JSONRPCRequest(strMethod, params, 1);\n+    struct evbuffer * output_buffer = evhttp_request_get_output_buffer(req);\n+    assert(output_buffer);\n+    evbuffer_add(output_buffer, strRequest.data(), strRequest.size());\n+\n+    int r = evhttp_make_request(evcon, req, EVHTTP_REQ_POST, \"/\");\n+    if (r != 0) {\n+        evhttp_connection_free(evcon);\n+        event_base_free(base);\n+        throw CConnectionFailed(\"send http request failed\");\n+    }\n \n-    // Receive HTTP reply message headers and body\n-    map<string, string> mapHeaders;\n-    string strReply;\n-    ReadHTTPMessage(stream, mapHeaders, strReply, nProto, std::numeric_limits<size_t>::max());\n+    event_base_dispatch(base);\n+    evhttp_connection_free(evcon);\n+    event_base_free(base);\n \n-    if (nStatus == HTTP_UNAUTHORIZED)\n+    if (response.status == 0)\n+        throw CConnectionFailed(\"couldn't connect to server\");\n+    else if (response.status == HTTP_UNAUTHORIZED)\n         throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n-    else if (nStatus >= 400 && nStatus != HTTP_BAD_REQUEST && nStatus != HTTP_NOT_FOUND && nStatus != HTTP_INTERNAL_SERVER_ERROR)\n-        throw runtime_error(strprintf(\"server returned HTTP error %d\", nStatus));\n-    else if (strReply.empty())\n+    else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n+        throw runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\n+    else if (response.body.empty())\n         throw runtime_error(\"no response from server\");\n \n     // Parse reply\n     UniValue valReply(UniValue::VSTR);\n-    if (!valReply.read(strReply))\n+    if (!valReply.read(response.body))\n         throw runtime_error(\"couldn't parse reply from server\");\n     const UniValue& reply = valReply.get_obj();\n     if (reply.empty())"
      },
      {
        "sha": "b512f74c227003c3393aa099f4c4fe3cba55f818",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -10,11 +10,16 @@\n #include \"noui.h\"\n #include \"scheduler.h\"\n #include \"util.h\"\n+#include \"httpserver.h\"\n+#include \"httprpc.h\"\n+#include \"rpcserver.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n+#include <stdio.h>\n+\n /* Introduction text for doxygen: */\n \n /*! \\mainpage Developer documentation\n@@ -44,7 +49,7 @@ void WaitForShutdown(boost::thread_group* threadGroup)\n     }\n     if (threadGroup)\n     {\n-        threadGroup->interrupt_all();\n+        Interrupt(*threadGroup);\n         threadGroup->join_all();\n     }\n }\n@@ -154,7 +159,7 @@ bool AppInit(int argc, char* argv[])\n \n     if (!fRet)\n     {\n-        threadGroup.interrupt_all();\n+        Interrupt(threadGroup);\n         // threadGroup.join_all(); was left out intentionally here, because we didn't re-test all of\n         // the startup-failure cases to make sure they don't result in a hang due to some\n         // thread-blocking-waiting-for-another-thread-during-startup case"
      },
      {
        "sha": "570beadc5f5e1fc555ce765cbed2fb99f86d9b4d",
        "filename": "src/httprpc.cpp",
        "status": "added",
        "additions": 201,
        "deletions": 0,
        "changes": 201,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -0,0 +1,201 @@\n+#include \"httprpc.h\"\n+\n+#include \"base58.h\"\n+#include \"chainparams.h\"\n+#include \"httpserver.h\"\n+#include \"rpcprotocol.h\"\n+#include \"rpcserver.h\"\n+#include \"random.h\"\n+#include \"sync.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"ui_interface.h\"\n+\n+#include <boost/algorithm/string.hpp> // boost::trim\n+\n+/** Simple one-shot callback timer to be used by the RPC mechanism to e.g.\n+ * re-lock the wellet.\n+ */\n+class HTTPRPCTimer : public RPCTimerBase\n+{\n+public:\n+    HTTPRPCTimer(struct event_base* eventBase, boost::function<void(void)>& func, int64_t seconds) : ev(eventBase, false, new Handler(func))\n+    {\n+        struct timeval tv = {seconds, 0};\n+        ev.trigger(&tv);\n+    }\n+private:\n+    HTTPEvent ev;\n+\n+    class Handler : public HTTPClosure\n+    {\n+    public:\n+        Handler(const boost::function<void(void)>& func) : func(func)\n+        {\n+        }\n+    private:\n+        boost::function<void(void)> func;\n+        void operator()() { func(); }\n+    };\n+};\n+\n+class HTTPRPCTimerInterface : public RPCTimerInterface\n+{\n+public:\n+    HTTPRPCTimerInterface(struct event_base* base) : base(base)\n+    {\n+    }\n+    const char* Name()\n+    {\n+        return \"HTTP\";\n+    }\n+    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t seconds)\n+    {\n+        return new HTTPRPCTimer(base, func, seconds);\n+    }\n+private:\n+    struct event_base* base;\n+};\n+\n+\n+/* Pre-base64-encoded authentication token */\n+static std::string strRPCUserColonPass;\n+/* Stored RPC timer interface (for unregistration) */\n+static HTTPRPCTimerInterface* httpRPCTimerInterface = 0;\n+\n+static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\n+{\n+    // Send error reply from json-rpc error object\n+    int nStatus = HTTP_INTERNAL_SERVER_ERROR;\n+    int code = find_value(objError, \"code\").get_int();\n+\n+    if (code == RPC_INVALID_REQUEST)\n+        nStatus = HTTP_BAD_REQUEST;\n+    else if (code == RPC_METHOD_NOT_FOUND)\n+        nStatus = HTTP_NOT_FOUND;\n+\n+    std::string strReply = JSONRPCReply(NullUniValue, objError, id);\n+\n+    req->WriteHeader(\"Content-Type\", \"application/json\");\n+    req->WriteReply(nStatus, strReply);\n+}\n+\n+static bool RPCAuthorized(const std::string& strAuth)\n+{\n+    if (strRPCUserColonPass.empty()) // Belt-and-suspenders measure if InitRPCAuthentication was not called\n+        return false;\n+    if (strAuth.substr(0, 6) != \"Basic \")\n+        return false;\n+    std::string strUserPass64 = strAuth.substr(6);\n+    boost::trim(strUserPass64);\n+    std::string strUserPass = DecodeBase64(strUserPass64);\n+    return TimingResistantEqual(strUserPass, strRPCUserColonPass);\n+}\n+\n+static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n+{\n+    // JSONRPC handles only POST\n+    if (req->GetRequestMethod() != HTTPRequest::POST) {\n+        req->WriteReply(HTTP_BAD_METHOD, \"JSONRPC server handles only POST requests\");\n+        return false;\n+    }\n+    // Check authorization\n+    std::pair<bool, std::string> authHeader = req->GetHeader(\"authorization\");\n+    if (!authHeader.first) {\n+        req->WriteReply(HTTP_UNAUTHORIZED);\n+        return false;\n+    }\n+\n+    if (!RPCAuthorized(authHeader.second)) {\n+        LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", req->GetPeer().ToString());\n+\n+        /* Deter brute-forcing\n+           If this results in a DoS the user really\n+           shouldn't have their RPC port exposed. */\n+        MilliSleep(250);\n+\n+        req->WriteReply(HTTP_UNAUTHORIZED);\n+        return false;\n+    }\n+\n+    JSONRequest jreq;\n+    try {\n+        // Parse request\n+        UniValue valRequest;\n+        if (!valRequest.read(req->ReadBody()))\n+            throw JSONRPCError(RPC_PARSE_ERROR, \"Parse error\");\n+\n+        std::string strReply;\n+        // singleton request\n+        if (valRequest.isObject()) {\n+            jreq.parse(valRequest);\n+\n+            UniValue result = tableRPC.execute(jreq.strMethod, jreq.params);\n+\n+            // Send reply\n+            strReply = JSONRPCReply(result, NullUniValue, jreq.id);\n+\n+        // array of requests\n+        } else if (valRequest.isArray())\n+            strReply = JSONRPCExecBatch(valRequest.get_array());\n+        else\n+            throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\n+\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strReply);\n+    } catch (const UniValue& objError) {\n+        JSONErrorReply(req, objError, jreq.id);\n+        return false;\n+    } catch (const std::exception& e) {\n+        JSONErrorReply(req, JSONRPCError(RPC_PARSE_ERROR, e.what()), jreq.id);\n+        return false;\n+    }\n+    return true;\n+}\n+\n+static bool InitRPCAuthentication()\n+{\n+    if (mapArgs[\"-rpcpassword\"] == \"\")\n+    {\n+        LogPrintf(\"No rpcpassword set - using random cookie authentication\\n\");\n+        if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n+            uiInterface.ThreadSafeMessageBox(\n+                _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n+                \"\", CClientUIInterface::MSG_ERROR);\n+            return false;\n+        }\n+    } else {\n+        strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n+    }\n+    return true;\n+}\n+\n+bool StartHTTPRPC()\n+{\n+    LogPrint(\"rpc\", \"Starting HTTP RPC server\\n\");\n+    if (!InitRPCAuthentication())\n+        return false;\n+\n+    RegisterHTTPHandler(\"/\", true, HTTPReq_JSONRPC);\n+\n+    assert(EventBase());\n+    httpRPCTimerInterface = new HTTPRPCTimerInterface(EventBase());\n+    RPCRegisterTimerInterface(httpRPCTimerInterface);\n+    return true;\n+}\n+\n+void InterruptHTTPRPC()\n+{\n+    LogPrint(\"rpc\", \"Interrupting HTTP RPC server\\n\");\n+}\n+\n+void StopHTTPRPC()\n+{\n+    LogPrint(\"rpc\", \"Stopping HTTP RPC server\\n\");\n+    UnregisterHTTPHandler(\"/\", true);\n+    if (httpRPCTimerInterface) {\n+        RPCUnregisterTimerInterface(httpRPCTimerInterface);\n+        delete httpRPCTimerInterface;\n+        httpRPCTimerInterface = 0;\n+    }\n+}"
      },
      {
        "sha": "d35445718871ee6339ece7caf1c0c3cdc3872f4f",
        "filename": "src/httprpc.h",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httprpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httprpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.h?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_HTTPRPC_H\n+#define BITCOIN_HTTPRPC_H\n+\n+#include <string>\n+#include <map>\n+\n+class HTTPRequest;\n+\n+/** Start HTTP RPC subsystem.\n+ * Precondition; HTTP and RPC has been started.\n+ */\n+bool StartHTTPRPC();\n+/** Interrupt HTTP RPC subsystem.\n+ */\n+void InterruptHTTPRPC();\n+/** Stop HTTP RPC subsystem.\n+ * Precondition; HTTP and RPC has been stopped.\n+ */\n+void StopHTTPRPC();\n+\n+/** Start HTTP REST subsystem.\n+ * Precondition; HTTP and RPC has been started.\n+ */\n+bool StartREST();\n+/** Interrupt RPC REST subsystem.\n+ */\n+void InterruptREST();\n+/** Stop HTTP REST subsystem.\n+ * Precondition; HTTP and RPC has been stopped.\n+ */\n+void StopREST();\n+\n+#endif"
      },
      {
        "sha": "89366b2e4e9084fa8fc2dded3fb10df13bf08d3e",
        "filename": "src/httpserver.cpp",
        "status": "added",
        "additions": 586,
        "deletions": 0,
        "changes": 586,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -0,0 +1,586 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"httpserver.h\"\n+\n+#include \"chainparamsbase.h\"\n+#include \"compat.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"rpcprotocol.h\" // For HTTP status codes\n+#include \"sync.h\"\n+#include \"ui_interface.h\"\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+#include <signal.h>\n+\n+#include <event2/event.h>\n+#include <event2/http.h>\n+#include <event2/thread.h>\n+#include <event2/buffer.h>\n+#include <event2/util.h>\n+#include <event2/keyvalq_struct.h>\n+\n+#ifdef EVENT__HAVE_NETINET_IN_H\n+#include <netinet/in.h>\n+#ifdef _XOPEN_SOURCE_EXTENDED\n+#include <arpa/inet.h>\n+#endif\n+#endif\n+\n+#include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n+#include <boost/foreach.hpp>\n+#include <boost/scoped_ptr.hpp>\n+\n+/** HTTP request work item */\n+class HTTPWorkItem : public HTTPClosure\n+{\n+public:\n+    HTTPWorkItem(HTTPRequest* req, const std::string &path, const HTTPRequestHandler& func):\n+        req(req), path(path), func(func)\n+    {\n+    }\n+    void operator()()\n+    {\n+        func(req.get(), path);\n+    }\n+\n+    boost::scoped_ptr<HTTPRequest> req;\n+\n+private:\n+    std::string path;\n+    HTTPRequestHandler func;\n+};\n+\n+/** Simple work queue for distributing work over multiple threads.\n+ * Work items are simply callable objects.\n+ */\n+template <typename WorkItem>\n+class WorkQueue\n+{\n+private:\n+    /** Mutex protects entire object */\n+    CWaitableCriticalSection cs;\n+    CConditionVariable cond;\n+    /* XXX in C++11 we can use std::unique_ptr here and avoid manual cleanup */\n+    std::deque<WorkItem*> queue;\n+    bool running;\n+    size_t maxDepth;\n+\n+public:\n+    WorkQueue(size_t maxDepth) : running(true),\n+                                 maxDepth(maxDepth)\n+    {\n+    }\n+    /* Precondition: worker threads have all stopped */\n+    ~WorkQueue()\n+    {\n+        while (!queue.empty()) {\n+            delete queue.front();\n+            queue.pop_front();\n+        }\n+    }\n+    /** Enqueue a work item */\n+    bool Enqueue(WorkItem* item)\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        if (queue.size() >= maxDepth) {\n+            return false;\n+        }\n+        queue.push_back(item);\n+        cond.notify_one();\n+        return true;\n+    }\n+    /** Thread function */\n+    void Run()\n+    {\n+        while (running) {\n+            WorkItem* i = 0;\n+            {\n+                boost::unique_lock<boost::mutex> lock(cs);\n+                while (running && queue.empty())\n+                    cond.wait(lock);\n+                if (!running)\n+                    break;\n+                i = queue.front();\n+                queue.pop_front();\n+            }\n+            (*i)();\n+            delete i;\n+        }\n+    }\n+    /** Interrupt and exit loops */\n+    void Interrupt()\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        running = false;\n+        cond.notify_all();\n+    }\n+\n+    /** Return current depth of queue */\n+    size_t Depth()\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        return queue.size();\n+    }\n+};\n+\n+struct HTTPPathHandler\n+{\n+    HTTPPathHandler() {}\n+    HTTPPathHandler(std::string prefix, bool exactMatch, HTTPRequestHandler handler):\n+        prefix(prefix), exactMatch(exactMatch), handler(handler)\n+    {\n+    }\n+    std::string prefix;\n+    bool exactMatch;\n+    HTTPRequestHandler handler;\n+};\n+\n+/** HTTP module state */\n+\n+//! libevent event loop\n+static struct event_base* eventBase = 0;\n+//! HTTP server\n+struct evhttp* eventHTTP = 0;\n+//! List of subnets to allow RPC connections from\n+static std::vector<CSubNet> rpc_allow_subnets;\n+//! Work queue for handling longer requests off the event loop thread\n+static WorkQueue<HTTPClosure>* workQueue = 0;\n+//! Handlers for (sub)paths\n+std::vector<HTTPPathHandler> pathHandlers;\n+\n+/** Check if a network address is allowed to access the HTTP server */\n+static bool ClientAllowed(const CNetAddr& netaddr)\n+{\n+    if (!netaddr.IsValid())\n+        return false;\n+    BOOST_FOREACH (const CSubNet& subnet, rpc_allow_subnets)\n+        if (subnet.Match(netaddr))\n+            return true;\n+    return false;\n+}\n+\n+/** Initialize ACL list for HTTP server */\n+static bool InitHTTPAllowList()\n+{\n+    rpc_allow_subnets.clear();\n+    rpc_allow_subnets.push_back(CSubNet(\"127.0.0.0/8\")); // always allow IPv4 local subnet\n+    rpc_allow_subnets.push_back(CSubNet(\"::1\"));         // always allow IPv6 localhost\n+    if (mapMultiArgs.count(\"-rpcallowip\")) {\n+        const std::vector<std::string>& vAllow = mapMultiArgs[\"-rpcallowip\"];\n+        BOOST_FOREACH (std::string strAllow, vAllow) {\n+            CSubNet subnet(strAllow);\n+            if (!subnet.IsValid()) {\n+                uiInterface.ThreadSafeMessageBox(\n+                    strprintf(\"Invalid -rpcallowip subnet specification: %s. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\", strAllow),\n+                    \"\", CClientUIInterface::MSG_ERROR);\n+                return false;\n+            }\n+            rpc_allow_subnets.push_back(subnet);\n+        }\n+    }\n+    std::string strAllowed;\n+    BOOST_FOREACH (const CSubNet& subnet, rpc_allow_subnets)\n+        strAllowed += subnet.ToString() + \" \";\n+    LogPrint(\"http\", \"Allowing HTTP connections from: %s\\n\", strAllowed);\n+    return true;\n+}\n+\n+/** HTTP request method as string - use for logging only */\n+static std::string RequestMethodString(HTTPRequest::RequestMethod m)\n+{\n+    switch (m) {\n+    case HTTPRequest::GET:\n+        return \"GET\";\n+        break;\n+    case HTTPRequest::POST:\n+        return \"POST\";\n+        break;\n+    case HTTPRequest::HEAD:\n+        return \"HEAD\";\n+        break;\n+    case HTTPRequest::PUT:\n+        return \"PUT\";\n+        break;\n+    default:\n+        return \"unknown\";\n+    }\n+}\n+\n+/** HTTP request callback */\n+static void http_request_cb(struct evhttp_request* req, void* arg)\n+{\n+    std::auto_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n+\n+    LogPrint(\"http\", \"Received a %s request for %s from %s\\n\",\n+             RequestMethodString(hreq->GetRequestMethod()), hreq->GetURI(), hreq->GetPeer().ToString());\n+\n+    // Early address-based allow check\n+    if (!ClientAllowed(hreq->GetPeer())) {\n+        hreq->WriteReply(HTTP_FORBIDDEN);\n+        return;\n+    }\n+\n+    // Early reject unknown HTTP methods\n+    if (hreq->GetRequestMethod() == HTTPRequest::UNKNOWN) {\n+        hreq->WriteReply(HTTP_BADMETHOD);\n+        return;\n+    }\n+\n+    // Find registered handler for prefix\n+    std::string strURI = hreq->GetURI();\n+    std::string path;\n+    std::vector<HTTPPathHandler>::const_iterator i = pathHandlers.begin();\n+    std::vector<HTTPPathHandler>::const_iterator iend = pathHandlers.end();\n+    for (; i != iend; ++i) {\n+        bool match = false;\n+        if (i->exactMatch)\n+            match = (strURI == i->prefix);\n+        else\n+            match = (strURI.substr(0, i->prefix.size()) == i->prefix);\n+        if (match) {\n+            path = strURI.substr(i->prefix.size());\n+            break;\n+        }\n+    }\n+\n+    // Dispatch to worker thread\n+    if (i != iend) {\n+        std::auto_ptr<HTTPWorkItem> item(new HTTPWorkItem(hreq.release(), path, i->handler));\n+        assert(workQueue);\n+        if (workQueue->Enqueue(item.get()))\n+            item.release(); /* if true, queue took ownership */\n+        else\n+            item->req->WriteReply(HTTP_INTERNAL, \"Work queue depth exceeded\");\n+    } else {\n+        hreq->WriteReply(HTTP_NOTFOUND);\n+    }\n+}\n+\n+/** Event dispatcher thread */\n+static void ThreadHTTP(struct event_base* base, struct evhttp* http)\n+{\n+    RenameThread(\"bitcoin-http\");\n+    LogPrint(\"http\", \"Entering http event loop\\n\");\n+    event_base_dispatch(base);\n+    // Event loop will be interrupted by InterruptHTTPServer()\n+    LogPrint(\"http\", \"Exited http event loop\\n\");\n+}\n+\n+/** Bind HTTP server to specified addresses */\n+static bool HTTPBindAddresses(struct evhttp* http)\n+{\n+    int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int nBound = 0;\n+    std::vector<std::pair<std::string, uint16_t> > endpoints;\n+\n+    // Determine what addresses to bind to\n+    if (!mapArgs.count(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n+        endpoints.push_back(std::make_pair(\"::1\", defaultPort));\n+        endpoints.push_back(std::make_pair(\"127.0.0.1\", defaultPort));\n+        if (mapArgs.count(\"-rpcbind\")) {\n+            LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n+        }\n+    } else if (mapArgs.count(\"-rpcbind\")) { // Specific bind address\n+        const std::vector<std::string>& vbind = mapMultiArgs[\"-rpcbind\"];\n+        for (std::vector<std::string>::const_iterator i = vbind.begin(); i != vbind.end(); ++i) {\n+            int port = defaultPort;\n+            std::string host;\n+            SplitHostPort(*i, port, host);\n+            endpoints.push_back(std::make_pair(host, port));\n+        }\n+    } else { // No specific bind address specified, bind to any\n+        endpoints.push_back(std::make_pair(\"::\", defaultPort));\n+        endpoints.push_back(std::make_pair(\"0.0.0.0\", defaultPort));\n+    }\n+\n+    // Bind addresses\n+    for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n+        LogPrint(\"http\", \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n+        if (evhttp_bind_socket(http, i->first.empty() ? NULL : i->first.c_str(), i->second) == 0) {\n+            nBound += 1;\n+        } else {\n+            LogPrintf(\"Binding RPC on address %s port %i failed.\\n\", i->first, i->second);\n+        }\n+    }\n+    return nBound > 0;\n+}\n+\n+/** Simple wrapper to set thread name and run work queue */\n+static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n+{\n+    RenameThread(\"bitcoin-httpworker\");\n+    queue->Run();\n+}\n+\n+bool StartHTTPServer(boost::thread_group& threadGroup)\n+{\n+    struct evhttp* http = 0;\n+    struct event_base* base = 0;\n+\n+    if (!InitHTTPAllowList())\n+        return false;\n+\n+    if (GetBoolArg(\"-rpcssl\", false)) {\n+        uiInterface.ThreadSafeMessageBox(\n+            \"SSL mode for RPC (-rpcssl) is no longer supported.\",\n+            \"\", CClientUIInterface::MSG_ERROR);\n+        return false;\n+    }\n+\n+#ifdef WIN32\n+    evthread_use_windows_threads();\n+#else\n+    evthread_use_pthreads();\n+#endif\n+\n+    base = event_base_new(); // XXX RAII\n+    if (!base) {\n+        LogPrintf(\"Couldn't create an event_base: exiting\\n\");\n+        return false;\n+    }\n+\n+    /* Create a new evhttp object to handle requests. */\n+    http = evhttp_new(base); // XXX RAII\n+    if (!http) {\n+        LogPrintf(\"couldn't create evhttp. Exiting.\\n\");\n+        event_base_free(base);\n+        return false;\n+    }\n+\n+    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", 30));\n+    evhttp_set_max_body_size(http, MAX_SIZE);\n+    evhttp_set_gencb(http, http_request_cb, NULL);\n+\n+    if (!HTTPBindAddresses(http)) {\n+        LogPrintf(\"Unable to bind any endpoint for RPC server\\n\");\n+        evhttp_free(http);\n+        event_base_free(base);\n+        return false;\n+    }\n+\n+    LogPrint(\"http\", \"Starting HTTP server\\n\");\n+    int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", 16), 1L);\n+    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", 4), 1L);\n+    LogPrintf(\"HTTP: creating work queue of depth %d and %d worker threads\\n\", workQueueDepth, rpcThreads);\n+    workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n+\n+    threadGroup.create_thread(boost::bind(&ThreadHTTP, base, http));\n+\n+    for (int i = 0; i < rpcThreads; i++)\n+        threadGroup.create_thread(boost::bind(&HTTPWorkQueueRun, workQueue));\n+\n+    eventBase = base;\n+    eventHTTP = http;\n+    return true;\n+}\n+\n+void InterruptHTTPServer()\n+{\n+    LogPrint(\"http\", \"Interrupting HTTP server\\n\");\n+    if (eventBase)\n+        event_base_loopbreak(eventBase);\n+    if (workQueue)\n+        workQueue->Interrupt();\n+}\n+\n+void StopHTTPServer()\n+{\n+    LogPrint(\"http\", \"Stopping HTTP server\\n\");\n+    delete workQueue;\n+    if (eventHTTP) {\n+        evhttp_free(eventHTTP);\n+        eventHTTP = 0;\n+    }\n+    if (eventBase) {\n+        event_base_free(eventBase);\n+        eventBase = 0;\n+    }\n+}\n+\n+struct event_base* EventBase()\n+{\n+    return eventBase;\n+}\n+\n+static void httpevent_callback_fn(evutil_socket_t, short, void* data)\n+{\n+    // Static handler simply passes through execution flow to _handle method\n+    ((HTTPEvent*)data)->_handle();\n+}\n+\n+void HTTPEvent::_handle()\n+{\n+    (*handler)();\n+    if (deleteWhenTriggered)\n+        delete this;\n+}\n+\n+HTTPEvent::HTTPEvent(struct event_base* base, bool deleteWhenTriggered, HTTPClosure* handler) : deleteWhenTriggered(deleteWhenTriggered), handler(handler)\n+{\n+    ev = event_new(base, -1, 0, httpevent_callback_fn, this);\n+    assert(ev);\n+}\n+HTTPEvent::~HTTPEvent()\n+{\n+    event_free(ev);\n+}\n+void HTTPEvent::trigger(struct timeval* tv)\n+{\n+    if (tv == NULL)\n+        event_active(ev, 0, 0); // immediately trigger event in main thread\n+    else\n+        evtimer_add(ev, tv); // trigger after timeval passed\n+}\n+HTTPRequest::HTTPRequest(struct evhttp_request* req) : req(req),\n+                                                       replySent(false)\n+{\n+}\n+HTTPRequest::~HTTPRequest()\n+{\n+    if (!replySent) {\n+        // Keep track of whether reply was sent to avoid request leaks\n+        LogPrintf(\"%s: Unhandled request\\n\", __func__);\n+        WriteReply(HTTP_INTERNAL, \"Unhandled request\");\n+    }\n+    // evhttpd cleans up the request, as long as a reply was sent.\n+}\n+\n+std::pair<bool, std::string> HTTPRequest::GetHeader(const std::string& hdr)\n+{\n+    const struct evkeyvalq* headers = evhttp_request_get_input_headers(req);\n+    assert(headers);\n+    const char* val = evhttp_find_header(headers, hdr.c_str());\n+    if (val)\n+        return std::make_pair(true, val);\n+    else\n+        return std::make_pair(false, \"\");\n+}\n+\n+std::string HTTPRequest::ReadBody()\n+{\n+    struct evbuffer* buf = evhttp_request_get_input_buffer(req);\n+    if (!buf)\n+        return \"\";\n+    size_t size = evbuffer_get_length(buf);\n+    /** Trivial implementation: if this is ever a performance bottleneck,\n+     * internal copying can be avoided in multi-segment buffers by using\n+     * evbuffer_peek and an awkward loop. Though in that case, it'd be even\n+     * better to not copy into an intermediate string but use a stream\n+     * abstraction to consume the evbuffer on the fly in the parsing algorithm.\n+     */\n+    const char* data = (const char*)evbuffer_pullup(buf, size);\n+    if (!data) // returns NULL in case of empty buffer\n+        return \"\";\n+    std::string rv(data, size);\n+    evbuffer_drain(buf, size);\n+    return rv;\n+}\n+\n+void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\n+{\n+    struct evkeyvalq* headers = evhttp_request_get_output_headers(req);\n+    assert(headers);\n+    evhttp_add_header(headers, hdr.c_str(), value.c_str());\n+}\n+\n+/** Closure sent to main thread to request a reply to be sent to\n+ * a HTTP request.\n+ * Replies must be sent in the main loop in the main http thread,\n+ * this cannot be done from worker threads.\n+ */\n+struct HTTPSendReplyHandler : HTTPClosure {\n+public:\n+    HTTPSendReplyHandler(struct evhttp_request* req, int nStatus) : req(req), nStatus(nStatus)\n+    {\n+    }\n+    void operator()()\n+    {\n+        evhttp_send_reply(req, nStatus, NULL, NULL);\n+    }\n+private:\n+    struct evhttp_request* req;\n+    int nStatus;\n+};\n+\n+void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n+{\n+    assert(!replySent && req);\n+    // Send event to main http thread to send reply message\n+    struct evbuffer* evb = evhttp_request_get_output_buffer(req);\n+    assert(evb);\n+    evbuffer_add(evb, strReply.data(), strReply.size());\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true,\n+                                  new HTTPSendReplyHandler(req, nStatus));\n+    ev->trigger(0);\n+    replySent = true;\n+    req = 0; // transferred back to main thread\n+}\n+\n+CService HTTPRequest::GetPeer()\n+{\n+    evhttp_connection* con = evhttp_request_get_connection(req);\n+    CService peer;\n+    if (con) {\n+        // evhttp retains ownership over returned address string\n+        const char* address = \"\";\n+        uint16_t port = 0;\n+        evhttp_connection_get_peer(con, (char**)&address, &port);\n+        peer = CService(address, port);\n+    }\n+    return peer;\n+}\n+\n+std::string HTTPRequest::GetURI()\n+{\n+    return evhttp_request_get_uri(req);\n+}\n+\n+HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n+{\n+    switch (evhttp_request_get_command(req)) {\n+    case EVHTTP_REQ_GET:\n+        return GET;\n+        break;\n+    case EVHTTP_REQ_POST:\n+        return POST;\n+        break;\n+    case EVHTTP_REQ_HEAD:\n+        return HEAD;\n+        break;\n+    case EVHTTP_REQ_PUT:\n+        return PUT;\n+        break;\n+    default:\n+        return UNKNOWN;\n+        break;\n+    }\n+}\n+\n+void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler)\n+{\n+    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+    pathHandlers.push_back(HTTPPathHandler(prefix, exactMatch, handler));\n+}\n+\n+void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n+{\n+    std::vector<HTTPPathHandler>::iterator i = pathHandlers.begin();\n+    std::vector<HTTPPathHandler>::iterator iend = pathHandlers.end();\n+    for (; i != iend; ++i)\n+        if (i->prefix == prefix && i->exactMatch == exactMatch)\n+            break;\n+    if (i != iend)\n+    {\n+        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+        pathHandlers.erase(i);\n+    }\n+}\n+"
      },
      {
        "sha": "c6a7804195f53a8d70da502e7164ebb032a8f13f",
        "filename": "src/httpserver.h",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -0,0 +1,138 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_HTTPSERVER_H\n+#define BITCOIN_HTTPSERVER_H\n+\n+#include <string>\n+#include <stdint.h>\n+#include <boost/thread.hpp>\n+#include <boost/scoped_ptr.hpp>\n+#include <boost/function.hpp>\n+\n+struct evhttp_request;\n+struct event_base;\n+class CService;\n+class HTTPRequest;\n+\n+/** Start HTTP server */\n+bool StartHTTPServer(boost::thread_group& threadGroup);\n+/** Interrupt HTTP server threads */\n+void InterruptHTTPServer();\n+/** Stop HTTP server */\n+void StopHTTPServer();\n+\n+/** Handler for requests to a certain HTTP path */\n+typedef boost::function<void(HTTPRequest* req, const std::string &)> HTTPRequestHandler;\n+/** Register handler for prefix.\n+ * If multiple handlers match a prefix, the first-registered one will\n+ * be invoked.\n+ */\n+void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler);\n+/** Unregister handler for prefix */\n+void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch);\n+\n+/** Return evhttp event base. This can be used by submodules to\n+ * queue timers or custom events.\n+ */\n+struct event_base* EventBase();\n+\n+/** In-flight HTTP request.\n+ * Thin C++ wrapper around evhttp_request.\n+ */\n+class HTTPRequest\n+{\n+private:\n+    struct evhttp_request* req;\n+    bool replySent;\n+\n+public:\n+    HTTPRequest(struct evhttp_request* req);\n+    ~HTTPRequest();\n+\n+    enum RequestMethod {\n+        UNKNOWN,\n+        GET,\n+        POST,\n+        HEAD,\n+        PUT\n+    };\n+\n+    /** Get requested URI.\n+     */\n+    std::string GetURI();\n+\n+    /** Get CService (address:ip) for the origin of the http request.\n+     */\n+    CService GetPeer();\n+\n+    /** Get request method.\n+     */\n+    RequestMethod GetRequestMethod();\n+\n+    /**\n+     * Get the request header specified by hdr, or an empty string.\n+     * Return an pair (isPresent,string).\n+     */\n+    std::pair<bool, std::string> GetHeader(const std::string& hdr);\n+\n+    /**\n+     * Read request body.\n+     *\n+     * @note As this consumes the underlying buffer, call this only once.\n+     * Repeated calls will return an empty string.\n+     */\n+    std::string ReadBody();\n+\n+    /**\n+     * Write output header.\n+     *\n+     * @note call this before calling WriteErrorReply or Reply.\n+     */\n+    void WriteHeader(const std::string& hdr, const std::string& value);\n+\n+    /**\n+     * Write HTTP reply.\n+     * nStatus is the HTTP status code to send.\n+     * strReply is the body of the reply. Keep it empty to send a standard message.\n+     *\n+     * @note Can be called only once. As this will give the request back to the\n+     * main thread, do not call any other HTTPRequest methods after calling this.\n+     */\n+    void WriteReply(int nStatus, const std::string& strReply = \"\");\n+};\n+\n+/** Event handler closure.\n+ */\n+class HTTPClosure\n+{\n+public:\n+    virtual void operator()() = 0;\n+    virtual ~HTTPClosure() {}\n+};\n+\n+/** Event class. This can be used either as an cross-thread trigger or as a timer.\n+ */\n+class HTTPEvent\n+{\n+public:\n+    /** Create a new event */\n+    HTTPEvent(struct event_base* base, bool deleteWhenTriggered, HTTPClosure* handler);\n+    ~HTTPEvent();\n+\n+    /** Trigger the event. If tv is 0, trigger it immediately. Otherwise trigger it after\n+     * the given time has elapsed.\n+     */\n+    void trigger(struct timeval* tv);\n+\n+    /** Internal function for handling, do not call directly */\n+    void _handle();\n+\n+private:\n+    bool deleteWhenTriggered;\n+    struct event* ev;\n+    boost::scoped_ptr<HTTPClosure> handler;\n+};\n+\n+#endif // BITCOIN_HTTPSERVER_H"
      },
      {
        "sha": "835ed4001072d636b7770702b6bc6a5cf447d832",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 11,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -16,6 +16,8 @@\n #include \"checkpoints.h\"\n #include \"compat/sanity.h\"\n #include \"consensus/validation.h\"\n+#include \"httpserver.h\"\n+#include \"httprpc.h\"\n #include \"key.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -144,6 +146,15 @@ class CCoinsViewErrorCatcher : public CCoinsViewBacked\n static CCoinsViewDB *pcoinsdbview = NULL;\n static CCoinsViewErrorCatcher *pcoinscatcher = NULL;\n \n+void Interrupt(boost::thread_group& threadGroup)\n+{\n+    InterruptHTTPServer();\n+    InterruptHTTPRPC();\n+    InterruptRPC();\n+    InterruptREST();\n+    threadGroup.interrupt_all();\n+}\n+\n void Shutdown()\n {\n     LogPrintf(\"%s: In progress...\\n\", __func__);\n@@ -158,7 +169,11 @@ void Shutdown()\n     /// module was initialized.\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n-    StopRPCThreads();\n+\n+    StopHTTPRPC();\n+    StopREST();\n+    StopRPC();\n+    StopHTTPServer();\n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n         pwalletMain->Flush(false);\n@@ -424,13 +439,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), 4));\n-    strUsage += HelpMessageOpt(\"-rpckeepalive\", strprintf(_(\"RPC support for HTTP persistent connections (default: %d)\"), 1));\n-\n-    strUsage += HelpMessageGroup(_(\"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"));\n-    strUsage += HelpMessageOpt(\"-rpcssl\", _(\"Use OpenSSL (https) for JSON-RPC connections\"));\n-    strUsage += HelpMessageOpt(\"-rpcsslcertificatechainfile=<file.cert>\", strprintf(_(\"Server certificate file (default: %s)\"), \"server.cert\"));\n-    strUsage += HelpMessageOpt(\"-rpcsslprivatekeyfile=<file.pem>\", strprintf(_(\"Server private key (default: %s)\"), \"server.pem\"));\n-    strUsage += HelpMessageOpt(\"-rpcsslciphers=<ciphers>\", strprintf(_(\"Acceptable ciphers (default: %s)\"), \"TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH\"));\n \n     if (mode == HMM_BITCOIN_QT)\n     {\n@@ -602,6 +610,21 @@ bool InitSanityCheck(void)\n     return true;\n }\n \n+bool AppInitServers(boost::thread_group& threadGroup)\n+{\n+    RPCServer::OnStopped(&OnRPCStopped);\n+    RPCServer::OnPreCommand(&OnRPCPreCommand);\n+    if (!StartHTTPServer(threadGroup))\n+        return false;\n+    if (!StartRPC())\n+        return false;\n+    if (!StartHTTPRPC())\n+        return false;\n+    if (GetBoolArg(\"-rest\", false) && !StartREST())\n+        return false;\n+    return true;\n+}\n+\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n@@ -990,9 +1013,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (fServer)\n     {\n         uiInterface.InitMessage.connect(SetRPCWarmupStatus);\n-        RPCServer::OnStopped(&OnRPCStopped);\n-        RPCServer::OnPreCommand(&OnRPCPreCommand);\n-        StartRPCThreads();\n+        if (!AppInitServers(threadGroup))\n+            return InitError(_(\"Unable to start HTTP server. See debug log for details.\"));\n     }\n \n     int64_t nStart;"
      },
      {
        "sha": "8cd51b0286f5dfe0d33b5b02c179568627a05737",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -20,6 +20,8 @@ extern CWallet* pwalletMain;\n \n void StartShutdown();\n bool ShutdownRequested();\n+/** Interrupt threads */\n+void Interrupt(boost::thread_group& threadGroup);\n void Shutdown();\n bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler);\n "
      },
      {
        "sha": "ea7f86d18e53f78a9a3b1e28f04fe645e75e430c",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -266,13 +266,6 @@ void BitcoinCore::initialize()\n     {\n         qDebug() << __func__ << \": Running AppInit2 in thread\";\n         int rv = AppInit2(threadGroup, scheduler);\n-        if(rv)\n-        {\n-            /* Start a dummy RPC thread if no RPC thread is active yet\n-             * to handle timeouts.\n-             */\n-            StartDummyRPCThread();\n-        }\n         Q_EMIT initializeResult(rv);\n     } catch (const std::exception& e) {\n         handleRunawayException(&e);\n@@ -286,7 +279,7 @@ void BitcoinCore::shutdown()\n     try\n     {\n         qDebug() << __func__ << \": Running Shutdown in thread\";\n-        threadGroup.interrupt_all();\n+        Interrupt(threadGroup);\n         threadGroup.join_all();\n         Shutdown();\n         qDebug() << __func__ << \": Shutdown finished\";"
      },
      {
        "sha": "940526706798faec6c4e935b0012cea1e9089aa2",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 111,
        "deletions": 132,
        "changes": 243,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -7,6 +7,7 @@\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"main.h\"\n+#include \"httpserver.h\"\n #include \"rpcserver.h\"\n #include \"streams.h\"\n #include \"sync.h\"\n@@ -56,29 +57,21 @@ struct CCoin {\n     }\n };\n \n-class RestErr\n-{\n-public:\n-    enum HTTPStatusCode status;\n-    string message;\n-};\n-\n extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n extern UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n extern UniValue mempoolInfoToJSON();\n extern UniValue mempoolToJSON(bool fVerbose = false);\n extern void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n extern UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n \n-static RestErr RESTERR(enum HTTPStatusCode status, string message)\n+static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, string message)\n {\n-    RestErr re;\n-    re.status = status;\n-    re.message = message;\n-    return re;\n+    req->WriteHeader(\"Content-Type\", \"text/plain\");\n+    req->WriteReply(status, message + \"\\r\\n\");\n+    return false;\n }\n \n-static enum RetFormat ParseDataFormat(vector<string>& params, const string strReq)\n+static enum RetFormat ParseDataFormat(vector<string>& params, const string& strReq)\n {\n     boost::split(params, strReq, boost::is_any_of(\".\"));\n     if (params.size() > 1) {\n@@ -115,28 +108,35 @@ static bool ParseHashStr(const string& strReq, uint256& v)\n     return true;\n }\n \n-static bool rest_headers(AcceptedConnection* conn,\n-                         const std::string& strURIPart,\n-                         const std::string& strRequest,\n-                         const std::map<std::string, std::string>& mapHeaders,\n-                         bool fRun)\n+static bool CheckWarmup(HTTPRequest* req)\n+{\n+    std::string statusmessage;\n+    if (RPCIsInWarmup(&statusmessage))\n+         return RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Service temporarily unavailable: \" + statusmessage);\n+    return true;\n+}\n+\n+static bool rest_headers(HTTPRequest* req,\n+                         const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n     vector<string> path;\n     boost::split(path, params[0], boost::is_any_of(\"/\"));\n \n     if (path.size() != 2)\n-        throw RESTERR(HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n \n     long count = strtol(path[0].c_str(), NULL, 10);\n     if (count < 1 || count > 2000)\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Header count out of range: \" + path[0]);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Header count out of range: \" + path[0]);\n \n     string hashStr = path[1];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n     std::vector<const CBlockIndex *> headers;\n     headers.reserve(count);\n@@ -160,63 +160,63 @@ static bool rest_headers(AcceptedConnection* conn,\n     switch (rf) {\n     case RF_BINARY: {\n         string binaryHeader = ssHeader.str();\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, binaryHeader.size(), \"application/octet-stream\") << binaryHeader << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryHeader);\n         return true;\n     }\n \n     case RF_HEX: {\n         string strHex = HexStr(ssHeader.begin(), ssHeader.end()) + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n-\n     case RF_JSON: {\n         UniValue jsonHeaders(UniValue::VARR);\n         BOOST_FOREACH(const CBlockIndex *pindex, headers) {\n             jsonHeaders.push_back(blockheaderToJSON(pindex));\n         }\n         string strJSON = jsonHeaders.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n-\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_block(AcceptedConnection* conn,\n+static bool rest_block(HTTPRequest* req,\n                        const std::string& strURIPart,\n-                       const std::string& strRequest,\n-                       const std::map<std::string, std::string>& mapHeaders,\n-                       bool fRun,\n                        bool showTxDetails)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n     string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n     CBlock block;\n     CBlockIndex* pblockindex = NULL;\n     {\n         LOCK(cs_main);\n         if (mapBlockIndex.count(hash) == 0)\n-            throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not found\");\n+            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n         pblockindex = mapBlockIndex[hash];\n         if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n-            throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\n+            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\n \n         if (!ReadBlockFromDisk(block, pblockindex))\n-            throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not found\");\n+            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n     CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n@@ -225,56 +225,49 @@ static bool rest_block(AcceptedConnection* conn,\n     switch (rf) {\n     case RF_BINARY: {\n         string binaryBlock = ssBlock.str();\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, binaryBlock.size(), \"application/octet-stream\") << binaryBlock << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryBlock);\n         return true;\n     }\n \n     case RF_HEX: {\n         string strHex = HexStr(ssBlock.begin(), ssBlock.end()) + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n \n     case RF_JSON: {\n         UniValue objBlock = blockToJSON(block, pblockindex, showTxDetails);\n         string strJSON = objBlock.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n \n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_block_extended(AcceptedConnection* conn,\n-                       const std::string& strURIPart,\n-                       const std::string& strRequest,\n-                       const std::map<std::string, std::string>& mapHeaders,\n-                       bool fRun)\n+static bool rest_block_extended(HTTPRequest* req, const std::string& strURIPart)\n {\n-    return rest_block(conn, strURIPart, strRequest, mapHeaders, fRun, true);\n+    return rest_block(req, strURIPart, true);\n }\n \n-static bool rest_block_notxdetails(AcceptedConnection* conn,\n-                       const std::string& strURIPart,\n-                       const std::string& strRequest,\n-                       const std::map<std::string, std::string>& mapHeaders,\n-                       bool fRun)\n+static bool rest_block_notxdetails(HTTPRequest* req, const std::string& strURIPart)\n {\n-    return rest_block(conn, strURIPart, strRequest, mapHeaders, fRun, false);\n+    return rest_block(req, strURIPart, false);\n }\n \n-static bool rest_chaininfo(AcceptedConnection* conn,\n-                           const std::string& strURIPart,\n-                           const std::string& strRequest,\n-                           const std::map<std::string, std::string>& mapHeaders,\n-                           bool fRun)\n+static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -283,24 +276,23 @@ static bool rest_chaininfo(AcceptedConnection* conn,\n         UniValue rpcParams(UniValue::VARR);\n         UniValue chainInfoObject = getblockchaininfo(rpcParams, false);\n         string strJSON = chainInfoObject.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_mempool_info(AcceptedConnection* conn,\n-                              const std::string& strURIPart,\n-                              const std::string& strRequest,\n-                              const std::map<std::string, std::string>& mapHeaders,\n-                              bool fRun)\n+static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -309,24 +301,23 @@ static bool rest_mempool_info(AcceptedConnection* conn,\n         UniValue mempoolInfoObject = mempoolInfoToJSON();\n \n         string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_mempool_contents(AcceptedConnection* conn,\n-                                  const std::string& strURIPart,\n-                                  const std::string& strRequest,\n-                                  const std::map<std::string, std::string>& mapHeaders,\n-                                  bool fRun)\n+static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -335,76 +326,76 @@ static bool rest_mempool_contents(AcceptedConnection* conn,\n         UniValue mempoolObject = mempoolToJSON(true);\n \n         string strJSON = mempoolObject.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_tx(AcceptedConnection* conn,\n-                    const std::string& strURIPart,\n-                    const std::string& strRequest,\n-                    const std::map<std::string, std::string>& mapHeaders,\n-                    bool fRun)\n+static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n     string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n     CTransaction tx;\n     uint256 hashBlock = uint256();\n     if (!GetTransaction(hash, tx, hashBlock, true))\n-        throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not found\");\n+        return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << tx;\n \n     switch (rf) {\n     case RF_BINARY: {\n         string binaryTx = ssTx.str();\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, binaryTx.size(), \"application/octet-stream\") << binaryTx << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryTx);\n         return true;\n     }\n \n     case RF_HEX: {\n         string strHex = HexStr(ssTx.begin(), ssTx.end()) + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n \n     case RF_JSON: {\n         UniValue objTx(UniValue::VOBJ);\n         TxToJSON(tx, hashBlock, objTx);\n         string strJSON = objTx.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n \n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_getutxos(AcceptedConnection* conn,\n-                          const std::string& strURIPart,\n-                          const std::string& strRequest,\n-                          const std::map<std::string, std::string>& mapHeaders,\n-                          bool fRun)\n+static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     enum RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -416,8 +407,9 @@ static bool rest_getutxos(AcceptedConnection* conn,\n     }\n \n     // throw exception in case of a empty request\n-    if (strRequest.length() == 0 && uriParts.size() == 0)\n-        throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n+    std::string strRequestMutable = req->ReadBody();\n+    if (strRequestMutable.length() == 0 && uriParts.size() == 0)\n+        return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n \n     bool fInputParsed = false;\n     bool fCheckMemPool = false;\n@@ -441,7 +433,7 @@ static bool rest_getutxos(AcceptedConnection* conn,\n             std::string strOutput = uriParts[i].substr(uriParts[i].find(\"-\")+1);\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n-                throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n+                return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n \n             txid.SetHex(strTxid);\n             vOutPoints.push_back(COutPoint(txid, (uint32_t)nOutput));\n@@ -450,15 +442,13 @@ static bool rest_getutxos(AcceptedConnection* conn,\n         if (vOutPoints.size() > 0)\n             fInputParsed = true;\n         else\n-            throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n+            return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n     }\n \n-    string strRequestMutable = strRequest; //convert const string to string for allowing hex to bin converting\n-\n     switch (rf) {\n     case RF_HEX: {\n         // convert hex to bin, continue then with bin part\n-        std::vector<unsigned char> strRequestV = ParseHex(strRequest);\n+        std::vector<unsigned char> strRequestV = ParseHex(strRequestMutable);\n         strRequestMutable.assign(strRequestV.begin(), strRequestV.end());\n     }\n \n@@ -468,7 +458,7 @@ static bool rest_getutxos(AcceptedConnection* conn,\n             if (strRequestMutable.size() > 0)\n             {\n                 if (fInputParsed) //don't allow sending input over URI and HTTP RAW DATA\n-                    throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Combination of URI scheme inputs and raw post data is not allowed\");\n+                    return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Combination of URI scheme inputs and raw post data is not allowed\");\n \n                 CDataStream oss(SER_NETWORK, PROTOCOL_VERSION);\n                 oss << strRequestMutable;\n@@ -477,24 +467,24 @@ static bool rest_getutxos(AcceptedConnection* conn,\n             }\n         } catch (const std::ios_base::failure& e) {\n             // abort in case of unreadable binary data\n-            throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n+            return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n         }\n         break;\n     }\n \n     case RF_JSON: {\n         if (!fInputParsed)\n-            throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n+            return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n         break;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n     // limit max outpoints\n     if (vOutPoints.size() > MAX_GETUTXOS_OUTPOINTS)\n-        throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, strprintf(\"Error: max outpoints exceeded (max: %d, tried: %d)\", MAX_GETUTXOS_OUTPOINTS, vOutPoints.size()));\n+        return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, strprintf(\"Error: max outpoints exceeded (max: %d, tried: %d)\", MAX_GETUTXOS_OUTPOINTS, vOutPoints.size()));\n \n     // check spentness and form a bitmap (as well as a JSON capable human-readble string representation)\n     vector<unsigned char> bitmap;\n@@ -544,7 +534,8 @@ static bool rest_getutxos(AcceptedConnection* conn,\n         ssGetUTXOResponse << chainActive.Height() << chainActive.Tip()->GetBlockHash() << bitmap << outs;\n         string ssGetUTXOResponseString = ssGetUTXOResponse.str();\n \n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, ssGetUTXOResponseString.size(), \"application/octet-stream\") << ssGetUTXOResponseString << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, ssGetUTXOResponseString);\n         return true;\n     }\n \n@@ -553,7 +544,8 @@ static bool rest_getutxos(AcceptedConnection* conn,\n         ssGetUTXOResponse << chainActive.Height() << chainActive.Tip()->GetBlockHash() << bitmap << outs;\n         string strHex = HexStr(ssGetUTXOResponse.begin(), ssGetUTXOResponse.end()) + \"\\n\";\n \n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n \n@@ -583,11 +575,12 @@ static bool rest_getutxos(AcceptedConnection* conn,\n \n         // return json string\n         string strJSON = objGetUTXOResponse.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n@@ -597,11 +590,7 @@ static bool rest_getutxos(AcceptedConnection* conn,\n \n static const struct {\n     const char* prefix;\n-    bool (*handler)(AcceptedConnection* conn,\n-                    const std::string& strURIPart,\n-                    const std::string& strRequest,\n-                    const std::map<std::string, std::string>& mapHeaders,\n-                    bool fRun);\n+    bool (*handler)(HTTPRequest* req, const std::string& strReq);\n } uri_prefixes[] = {\n       {\"/rest/tx/\", rest_tx},\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n@@ -613,29 +602,19 @@ static const struct {\n       {\"/rest/getutxos\", rest_getutxos},\n };\n \n-bool HTTPReq_REST(AcceptedConnection* conn,\n-                  const std::string& strURI,\n-                  const string& strRequest,\n-                  const std::map<std::string, std::string>& mapHeaders,\n-                  bool fRun)\n+bool StartREST()\n {\n-    try {\n-        std::string statusmessage;\n-        if (RPCIsInWarmup(&statusmessage))\n-            throw RESTERR(HTTP_SERVICE_UNAVAILABLE, \"Service temporarily unavailable: \" + statusmessage);\n-\n-        for (unsigned int i = 0; i < ARRAYLEN(uri_prefixes); i++) {\n-            unsigned int plen = strlen(uri_prefixes[i].prefix);\n-            if (strURI.substr(0, plen) == uri_prefixes[i].prefix) {\n-                string strURIPart = strURI.substr(plen);\n-                return uri_prefixes[i].handler(conn, strURIPart, strRequest, mapHeaders, fRun);\n-            }\n-        }\n-    } catch (const RestErr& re) {\n-        conn->stream() << HTTPReply(re.status, re.message + \"\\r\\n\", false, false, \"text/plain\") << std::flush;\n-        return false;\n-    }\n+    for (unsigned int i = 0; i < ARRAYLEN(uri_prefixes); i++)\n+        RegisterHTTPHandler(uri_prefixes[i].prefix, false, uri_prefixes[i].handler);\n+    return true;\n+}\n \n-    conn->stream() << HTTPError(HTTP_NOT_FOUND, false) << std::flush;\n-    return false;\n+void InterruptREST()\n+{\n+}\n+\n+void StopREST()\n+{\n+    for (unsigned int i = 0; i < ARRAYLEN(uri_prefixes); i++)\n+        UnregisterHTTPHandler(uri_prefixes[i].prefix, false);\n }"
      },
      {
        "sha": "d83cd87f9400a23c9e23fc0c8da13a38aa0f49b2",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 229,
        "changes": 229,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -5,7 +5,6 @@\n \n #include \"rpcprotocol.h\"\n \n-#include \"clientversion.h\"\n #include \"random.h\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n@@ -16,236 +15,8 @@\n #include <stdint.h>\n #include <fstream>\n \n-#include <boost/algorithm/string.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n-#include <boost/bind.hpp>\n-#include <boost/filesystem.hpp>\n-#include <boost/foreach.hpp>\n-#include <boost/iostreams/concepts.hpp>\n-#include <boost/iostreams/stream.hpp>\n-#include <boost/shared_ptr.hpp>\n-\n-#include \"univalue/univalue.h\"\n-\n using namespace std;\n \n-//! Number of bytes to allocate and read at most at once in post data\n-const size_t POST_READ_SIZE = 256 * 1024;\n-\n-/**\n- * HTTP protocol\n- * \n- * This ain't Apache.  We're just using HTTP header for the length field\n- * and to be compatible with other JSON-RPC implementations.\n- */\n-\n-string HTTPPost(const string& strMsg, const map<string,string>& mapRequestHeaders)\n-{\n-    ostringstream s;\n-    s << \"POST / HTTP/1.1\\r\\n\"\n-      << \"User-Agent: bitcoin-json-rpc/\" << FormatFullVersion() << \"\\r\\n\"\n-      << \"Host: 127.0.0.1\\r\\n\"\n-      << \"Content-Type: application/json\\r\\n\"\n-      << \"Content-Length: \" << strMsg.size() << \"\\r\\n\"\n-      << \"Connection: close\\r\\n\"\n-      << \"Accept: application/json\\r\\n\";\n-    BOOST_FOREACH(const PAIRTYPE(string, string)& item, mapRequestHeaders)\n-        s << item.first << \": \" << item.second << \"\\r\\n\";\n-    s << \"\\r\\n\" << strMsg;\n-\n-    return s.str();\n-}\n-\n-static string rfc1123Time()\n-{\n-    return DateTimeStrFormat(\"%a, %d %b %Y %H:%M:%S +0000\", GetTime());\n-}\n-\n-static const char *httpStatusDescription(int nStatus)\n-{\n-    switch (nStatus) {\n-        case HTTP_OK: return \"OK\";\n-        case HTTP_BAD_REQUEST: return \"Bad Request\";\n-        case HTTP_FORBIDDEN: return \"Forbidden\";\n-        case HTTP_NOT_FOUND: return \"Not Found\";\n-        case HTTP_INTERNAL_SERVER_ERROR: return \"Internal Server Error\";\n-        default: return \"\";\n-    }\n-}\n-\n-string HTTPError(int nStatus, bool keepalive, bool headersOnly)\n-{\n-    if (nStatus == HTTP_UNAUTHORIZED)\n-        return strprintf(\"HTTP/1.0 401 Authorization Required\\r\\n\"\n-            \"Date: %s\\r\\n\"\n-            \"Server: bitcoin-json-rpc/%s\\r\\n\"\n-            \"WWW-Authenticate: Basic realm=\\\"jsonrpc\\\"\\r\\n\"\n-            \"Content-Type: text/html\\r\\n\"\n-            \"Content-Length: 296\\r\\n\"\n-            \"\\r\\n\"\n-            \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\"\\r\\n\"\n-            \"\\\"http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd\\\">\\r\\n\"\n-            \"<HTML>\\r\\n\"\n-            \"<HEAD>\\r\\n\"\n-            \"<TITLE>Error</TITLE>\\r\\n\"\n-            \"<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=ISO-8859-1'>\\r\\n\"\n-            \"</HEAD>\\r\\n\"\n-            \"<BODY><H1>401 Unauthorized.</H1></BODY>\\r\\n\"\n-            \"</HTML>\\r\\n\", rfc1123Time(), FormatFullVersion());\n-\n-    return HTTPReply(nStatus, httpStatusDescription(nStatus), keepalive,\n-                     headersOnly, \"text/plain\");\n-}\n-\n-string HTTPReplyHeader(int nStatus, bool keepalive, size_t contentLength, const char *contentType)\n-{\n-    return strprintf(\n-            \"HTTP/1.1 %d %s\\r\\n\"\n-            \"Date: %s\\r\\n\"\n-            \"Connection: %s\\r\\n\"\n-            \"Content-Length: %u\\r\\n\"\n-            \"Content-Type: %s\\r\\n\"\n-            \"Server: bitcoin-json-rpc/%s\\r\\n\"\n-            \"\\r\\n\",\n-        nStatus,\n-        httpStatusDescription(nStatus),\n-        rfc1123Time(),\n-        keepalive ? \"keep-alive\" : \"close\",\n-        contentLength,\n-        contentType,\n-        FormatFullVersion());\n-}\n-\n-string HTTPReply(int nStatus, const string& strMsg, bool keepalive,\n-                 bool headersOnly, const char *contentType)\n-{\n-    if (headersOnly)\n-    {\n-        return HTTPReplyHeader(nStatus, keepalive, 0, contentType);\n-    } else {\n-        return HTTPReplyHeader(nStatus, keepalive, strMsg.size(), contentType) + strMsg;\n-    }\n-}\n-\n-bool ReadHTTPRequestLine(std::basic_istream<char>& stream, int &proto,\n-                         string& http_method, string& http_uri)\n-{\n-    string str;\n-    getline(stream, str);\n-\n-    // HTTP request line is space-delimited\n-    vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n-    if (vWords.size() < 2)\n-        return false;\n-\n-    // HTTP methods permitted: GET, POST\n-    http_method = vWords[0];\n-    if (http_method != \"GET\" && http_method != \"POST\")\n-        return false;\n-\n-    // HTTP URI must be an absolute path, relative to current host\n-    http_uri = vWords[1];\n-    if (http_uri.size() == 0 || http_uri[0] != '/')\n-        return false;\n-\n-    // parse proto, if present\n-    string strProto = \"\";\n-    if (vWords.size() > 2)\n-        strProto = vWords[2];\n-\n-    proto = 0;\n-    const char *ver = strstr(strProto.c_str(), \"HTTP/1.\");\n-    if (ver != NULL)\n-        proto = atoi(ver+7);\n-\n-    return true;\n-}\n-\n-int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n-{\n-    string str;\n-    getline(stream, str);\n-    vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n-    if (vWords.size() < 2)\n-        return HTTP_INTERNAL_SERVER_ERROR;\n-    proto = 0;\n-    const char *ver = strstr(str.c_str(), \"HTTP/1.\");\n-    if (ver != NULL)\n-        proto = atoi(ver+7);\n-    return atoi(vWords[1].c_str());\n-}\n-\n-int ReadHTTPHeaders(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet)\n-{\n-    int nLen = 0;\n-    while (true)\n-    {\n-        string str;\n-        std::getline(stream, str);\n-        if (str.empty() || str == \"\\r\")\n-            break;\n-        string::size_type nColon = str.find(\":\");\n-        if (nColon != string::npos)\n-        {\n-            string strHeader = str.substr(0, nColon);\n-            boost::trim(strHeader);\n-            boost::to_lower(strHeader);\n-            string strValue = str.substr(nColon+1);\n-            boost::trim(strValue);\n-            mapHeadersRet[strHeader] = strValue;\n-            if (strHeader == \"content-length\")\n-                nLen = atoi(strValue.c_str());\n-        }\n-    }\n-    return nLen;\n-}\n-\n-\n-int ReadHTTPMessage(std::basic_istream<char>& stream, map<string,\n-                    string>& mapHeadersRet, string& strMessageRet,\n-                    int nProto, size_t max_size)\n-{\n-    mapHeadersRet.clear();\n-    strMessageRet = \"\";\n-\n-    // Read header\n-    int nLen = ReadHTTPHeaders(stream, mapHeadersRet);\n-    if (nLen < 0 || (size_t)nLen > max_size)\n-        return HTTP_INTERNAL_SERVER_ERROR;\n-\n-    // Read message\n-    if (nLen > 0)\n-    {\n-        vector<char> vch;\n-        size_t ptr = 0;\n-        while (ptr < (size_t)nLen)\n-        {\n-            size_t bytes_to_read = std::min((size_t)nLen - ptr, POST_READ_SIZE);\n-            vch.resize(ptr + bytes_to_read);\n-            stream.read(&vch[ptr], bytes_to_read);\n-            if (!stream) // Connection lost while reading\n-                return HTTP_INTERNAL_SERVER_ERROR;\n-            ptr += bytes_to_read;\n-        }\n-        strMessageRet = string(vch.begin(), vch.end());\n-    }\n-\n-    string sConHdr = mapHeadersRet[\"connection\"];\n-\n-    if ((sConHdr != \"close\") && (sConHdr != \"keep-alive\"))\n-    {\n-        if (nProto >= 1)\n-            mapHeadersRet[\"connection\"] = \"keep-alive\";\n-        else\n-            mapHeadersRet[\"connection\"] = \"close\";\n-    }\n-\n-    return HTTP_OK;\n-}\n-\n /**\n  * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n  * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were"
      },
      {
        "sha": "5381e4bcfd258e4e7e9d4803f8f19909ca2eef0e",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 86,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -10,10 +10,6 @@\n #include <map>\n #include <stdint.h>\n #include <string>\n-#include <boost/iostreams/concepts.hpp>\n-#include <boost/iostreams/stream.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n #include <boost/filesystem.hpp>\n \n #include \"univalue/univalue.h\"\n@@ -26,6 +22,7 @@ enum HTTPStatusCode\n     HTTP_UNAUTHORIZED          = 401,\n     HTTP_FORBIDDEN             = 403,\n     HTTP_NOT_FOUND             = 404,\n+    HTTP_BAD_METHOD            = 405,\n     HTTP_INTERNAL_SERVER_ERROR = 500,\n     HTTP_SERVICE_UNAVAILABLE   = 503,\n };\n@@ -79,88 +76,6 @@ enum RPCErrorCode\n     RPC_WALLET_ALREADY_UNLOCKED     = -17, //! Wallet is already unlocked\n };\n \n-/**\n- * IOStream device that speaks SSL but can also speak non-SSL\n- */\n-template <typename Protocol>\n-class SSLIOStreamDevice : public boost::iostreams::device<boost::iostreams::bidirectional> {\n-public:\n-    SSLIOStreamDevice(boost::asio::ssl::stream<typename Protocol::socket> &streamIn, bool fUseSSLIn) : stream(streamIn)\n-    {\n-        fUseSSL = fUseSSLIn;\n-        fNeedHandshake = fUseSSLIn;\n-    }\n-\n-    void handshake(boost::asio::ssl::stream_base::handshake_type role)\n-    {\n-        if (!fNeedHandshake) return;\n-        fNeedHandshake = false;\n-        stream.handshake(role);\n-    }\n-    std::streamsize read(char* s, std::streamsize n)\n-    {\n-        handshake(boost::asio::ssl::stream_base::server); // HTTPS servers read first\n-        if (fUseSSL) return stream.read_some(boost::asio::buffer(s, n));\n-        return stream.next_layer().read_some(boost::asio::buffer(s, n));\n-    }\n-    std::streamsize write(const char* s, std::streamsize n)\n-    {\n-        handshake(boost::asio::ssl::stream_base::client); // HTTPS clients write first\n-        if (fUseSSL) return boost::asio::write(stream, boost::asio::buffer(s, n));\n-        return boost::asio::write(stream.next_layer(), boost::asio::buffer(s, n));\n-    }\n-    bool connect(const std::string& server, const std::string& port)\n-    {\n-        using namespace boost::asio::ip;\n-        tcp::resolver resolver(stream.get_io_service());\n-        tcp::resolver::iterator endpoint_iterator;\n-#if BOOST_VERSION >= 104300\n-        try {\n-#endif\n-            // The default query (flags address_configured) tries IPv6 if\n-            // non-localhost IPv6 configured, and IPv4 if non-localhost IPv4\n-            // configured.\n-            tcp::resolver::query query(server.c_str(), port.c_str());\n-            endpoint_iterator = resolver.resolve(query);\n-#if BOOST_VERSION >= 104300\n-        } catch (const boost::system::system_error&) {\n-            // If we at first don't succeed, try blanket lookup (IPv4+IPv6 independent of configured interfaces)\n-            tcp::resolver::query query(server.c_str(), port.c_str(), resolver_query_base::flags());\n-            endpoint_iterator = resolver.resolve(query);\n-        }\n-#endif\n-        boost::system::error_code error = boost::asio::error::host_not_found;\n-        tcp::resolver::iterator end;\n-        while (error && endpoint_iterator != end)\n-        {\n-            stream.lowest_layer().close();\n-            stream.lowest_layer().connect(*endpoint_iterator++, error);\n-        }\n-        if (error)\n-            return false;\n-        return true;\n-    }\n-\n-private:\n-    bool fNeedHandshake;\n-    bool fUseSSL;\n-    boost::asio::ssl::stream<typename Protocol::socket>& stream;\n-};\n-\n-std::string HTTPPost(const std::string& strMsg, const std::map<std::string,std::string>& mapRequestHeaders);\n-std::string HTTPError(int nStatus, bool keepalive,\n-                      bool headerOnly = false);\n-std::string HTTPReplyHeader(int nStatus, bool keepalive, size_t contentLength,\n-                      const char *contentType = \"application/json\");\n-std::string HTTPReply(int nStatus, const std::string& strMsg, bool keepalive,\n-                      bool headerOnly = false,\n-                      const char *contentType = \"application/json\");\n-bool ReadHTTPRequestLine(std::basic_istream<char>& stream, int &proto,\n-                         std::string& http_method, std::string& http_uri);\n-int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto);\n-int ReadHTTPHeaders(std::basic_istream<char>& stream, std::map<std::string, std::string>& mapHeadersRet);\n-int ReadHTTPMessage(std::basic_istream<char>& stream, std::map<std::string, std::string>& mapHeadersRet,\n-                    std::string& strMessageRet, int nProto, size_t max_size);\n std::string JSONRPCRequest(const std::string& strMethod, const UniValue& params, const UniValue& id);\n UniValue JSONRPCReplyObj(const UniValue& result, const UniValue& error, const UniValue& id);\n std::string JSONRPCReply(const UniValue& result, const UniValue& error, const UniValue& id);"
      },
      {
        "sha": "5d7e2125e54a9c1e9b4f72721a285030ec8bc41c",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 513,
        "changes": 554,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -12,13 +12,9 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n-#ifdef ENABLE_WALLET\n-#include \"wallet/wallet.h\"\n-#endif\n \n-#include <boost/algorithm/string.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n+#include \"univalue/univalue.h\"\n+\n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n@@ -27,28 +23,20 @@\n #include <boost/shared_ptr.hpp>\n #include <boost/signals2/signal.hpp>\n #include <boost/thread.hpp>\n+#include <boost/algorithm/string/case_conv.hpp> // for to_upper()\n \n-#include \"univalue/univalue.h\"\n-\n-using namespace boost::asio;\n using namespace RPCServer;\n using namespace std;\n \n-static std::string strRPCUserColonPass;\n-\n static bool fRPCRunning = false;\n static bool fRPCInWarmup = true;\n static std::string rpcWarmupStatus(\"RPC server started\");\n static CCriticalSection cs_rpcWarmup;\n-\n-//! These are created by StartRPCThreads, destroyed in StopRPCThreads\n-static boost::asio::io_service* rpc_io_service = NULL;\n-static map<string, boost::shared_ptr<deadline_timer> > deadlineTimers;\n-static ssl::context* rpc_ssl_context = NULL;\n-static boost::thread_group* rpc_worker_group = NULL;\n-static boost::asio::io_service::work *rpc_dummy_work = NULL;\n-static std::vector<CSubNet> rpc_allow_subnets; //!< List of subnets to allow RPC connections from\n-static std::vector< boost::shared_ptr<ip::tcp::acceptor> > rpc_acceptors;\n+/* Timer-creating functions */\n+static std::vector<RPCTimerInterface*> timerInterfaces;\n+/* Map of name to timer.\n+ * @note Can be changed to std::unique_ptr when C++11 */\n+static std::map<std::string, boost::shared_ptr<RPCTimerBase> > deadlineTimers;\n \n static struct CRPCSignals\n {\n@@ -169,7 +157,6 @@ vector<unsigned char> ParseHexO(const UniValue& o, string strKey)\n     return ParseHexV(find_value(o, strKey), strKey);\n }\n \n-\n /**\n  * Note: This interface may still be subject to change.\n  */\n@@ -261,8 +248,6 @@ UniValue stop(const UniValue& params, bool fHelp)\n     return \"Bitcoin server stopping\";\n }\n \n-\n-\n /**\n  * Call Table\n  */\n@@ -399,381 +384,34 @@ CRPCTable::CRPCTable()\n     }\n }\n \n-const CRPCCommand *CRPCTable::operator[](const std::string& name) const\n+const CRPCCommand *CRPCTable::operator[](const std::string &name) const\n {\n     map<string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n     if (it == mapCommands.end())\n         return NULL;\n     return (*it).second;\n }\n \n-\n-bool HTTPAuthorized(map<string, string>& mapHeaders)\n-{\n-    string strAuth = mapHeaders[\"authorization\"];\n-    if (strAuth.substr(0,6) != \"Basic \")\n-        return false;\n-    string strUserPass64 = strAuth.substr(6); boost::trim(strUserPass64);\n-    string strUserPass = DecodeBase64(strUserPass64);\n-    return TimingResistantEqual(strUserPass, strRPCUserColonPass);\n-}\n-\n-void ErrorReply(std::ostream& stream, const UniValue& objError, const UniValue& id)\n-{\n-    // Send error reply from json-rpc error object\n-    int nStatus = HTTP_INTERNAL_SERVER_ERROR;\n-    int code = find_value(objError, \"code\").get_int();\n-    if (code == RPC_INVALID_REQUEST) nStatus = HTTP_BAD_REQUEST;\n-    else if (code == RPC_METHOD_NOT_FOUND) nStatus = HTTP_NOT_FOUND;\n-    string strReply = JSONRPCReply(NullUniValue, objError, id);\n-    stream << HTTPReply(nStatus, strReply, false) << std::flush;\n-}\n-\n-CNetAddr BoostAsioToCNetAddr(boost::asio::ip::address address)\n-{\n-    CNetAddr netaddr;\n-    // Make sure that IPv4-compatible and IPv4-mapped IPv6 addresses are treated as IPv4 addresses\n-    if (address.is_v6()\n-     && (address.to_v6().is_v4_compatible()\n-      || address.to_v6().is_v4_mapped()))\n-        address = address.to_v6().to_v4();\n-\n-    if(address.is_v4())\n-    {\n-        boost::asio::ip::address_v4::bytes_type bytes = address.to_v4().to_bytes();\n-        netaddr.SetRaw(NET_IPV4, &bytes[0]);\n-    }\n-    else\n-    {\n-        boost::asio::ip::address_v6::bytes_type bytes = address.to_v6().to_bytes();\n-        netaddr.SetRaw(NET_IPV6, &bytes[0]);\n-    }\n-    return netaddr;\n-}\n-\n-bool ClientAllowed(const boost::asio::ip::address& address)\n-{\n-    CNetAddr netaddr = BoostAsioToCNetAddr(address);\n-    BOOST_FOREACH(const CSubNet &subnet, rpc_allow_subnets)\n-        if (subnet.Match(netaddr))\n-            return true;\n-    return false;\n-}\n-\n-template <typename Protocol>\n-class AcceptedConnectionImpl : public AcceptedConnection\n-{\n-public:\n-    AcceptedConnectionImpl(\n-            boost::asio::io_service& io_service,\n-            ssl::context &context,\n-            bool fUseSSL) :\n-        sslStream(io_service, context),\n-        _d(sslStream, fUseSSL),\n-        _stream(_d)\n-    {\n-    }\n-\n-    virtual std::iostream& stream()\n-    {\n-        return _stream;\n-    }\n-\n-    virtual std::string peer_address_to_string() const\n-    {\n-        return peer.address().to_string();\n-    }\n-\n-    virtual void close()\n-    {\n-        _stream.close();\n-    }\n-\n-    typename Protocol::endpoint peer;\n-    boost::asio::ssl::stream<typename Protocol::socket> sslStream;\n-\n-private:\n-    SSLIOStreamDevice<Protocol> _d;\n-    boost::iostreams::stream< SSLIOStreamDevice<Protocol> > _stream;\n-};\n-\n-void ServiceConnection(AcceptedConnection *conn);\n-\n-//! Forward declaration required for RPCListen\n-template <typename Protocol, typename SocketAcceptorService>\n-static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n-                             ssl::context& context,\n-                             bool fUseSSL,\n-                             boost::shared_ptr< AcceptedConnection > conn,\n-                             const boost::system::error_code& error);\n-\n-/**\n- * Sets up I/O resources to accept and handle a new connection.\n- */\n-template <typename Protocol, typename SocketAcceptorService>\n-static void RPCListen(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n-                   ssl::context& context,\n-                   const bool fUseSSL)\n-{\n-    // Accept connection\n-    boost::shared_ptr< AcceptedConnectionImpl<Protocol> > conn(new AcceptedConnectionImpl<Protocol>(acceptor->get_io_service(), context, fUseSSL));\n-\n-    acceptor->async_accept(\n-            conn->sslStream.lowest_layer(),\n-            conn->peer,\n-            boost::bind(&RPCAcceptHandler<Protocol, SocketAcceptorService>,\n-                acceptor,\n-                boost::ref(context),\n-                fUseSSL,\n-                conn,\n-                _1));\n-}\n-\n-\n-/**\n- * Accept and handle incoming connection.\n- */\n-template <typename Protocol, typename SocketAcceptorService>\n-static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n-                             ssl::context& context,\n-                             const bool fUseSSL,\n-                             boost::shared_ptr< AcceptedConnection > conn,\n-                             const boost::system::error_code& error)\n+bool StartRPC()\n {\n-    // Immediately start accepting new connections, except when we're cancelled or our socket is closed.\n-    if (error != boost::asio::error::operation_aborted && acceptor->is_open())\n-        RPCListen(acceptor, context, fUseSSL);\n-\n-    AcceptedConnectionImpl<ip::tcp>* tcp_conn = dynamic_cast< AcceptedConnectionImpl<ip::tcp>* >(conn.get());\n-\n-    if (error)\n-    {\n-        // TODO: Actually handle errors\n-        LogPrintf(\"%s: Error: %s\\n\", __func__, error.message());\n-    }\n-    // Restrict callers by IP.  It is important to\n-    // do this before starting client thread, to filter out\n-    // certain DoS and misbehaving clients.\n-    else if (tcp_conn && !ClientAllowed(tcp_conn->peer.address()))\n-    {\n-        // Only send a 403 if we're not using SSL to prevent a DoS during the SSL handshake.\n-        if (!fUseSSL)\n-            conn->stream() << HTTPError(HTTP_FORBIDDEN, false) << std::flush;\n-        conn->close();\n-    }\n-    else {\n-        ServiceConnection(conn.get());\n-        conn->close();\n-    }\n-}\n-\n-static ip::tcp::endpoint ParseEndpoint(const std::string &strEndpoint, int defaultPort)\n-{\n-    std::string addr;\n-    int port = defaultPort;\n-    SplitHostPort(strEndpoint, port, addr);\n-    return ip::tcp::endpoint(boost::asio::ip::address::from_string(addr), port);\n-}\n-\n-void StartRPCThreads()\n-{\n-    rpc_allow_subnets.clear();\n-    rpc_allow_subnets.push_back(CSubNet(\"127.0.0.0/8\")); // always allow IPv4 local subnet\n-    rpc_allow_subnets.push_back(CSubNet(\"::1\")); // always allow IPv6 localhost\n-    if (mapMultiArgs.count(\"-rpcallowip\"))\n-    {\n-        const vector<string>& vAllow = mapMultiArgs[\"-rpcallowip\"];\n-        BOOST_FOREACH(string strAllow, vAllow)\n-        {\n-            CSubNet subnet(strAllow);\n-            if(!subnet.IsValid())\n-            {\n-                uiInterface.ThreadSafeMessageBox(\n-                    strprintf(\"Invalid -rpcallowip subnet specification: %s. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\", strAllow),\n-                    \"\", CClientUIInterface::MSG_ERROR);\n-                StartShutdown();\n-                return;\n-            }\n-            rpc_allow_subnets.push_back(subnet);\n-        }\n-    }\n-    std::string strAllowed;\n-    BOOST_FOREACH(const CSubNet &subnet, rpc_allow_subnets)\n-        strAllowed += subnet.ToString() + \" \";\n-    LogPrint(\"rpc\", \"Allowing RPC connections from: %s\\n\", strAllowed);\n-\n-    if (mapArgs[\"-rpcpassword\"] == \"\")\n-    {\n-        LogPrintf(\"No rpcpassword set - using random cookie authentication\\n\");\n-        if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n-            uiInterface.ThreadSafeMessageBox(\n-                _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n-                \"\", CClientUIInterface::MSG_ERROR);\n-            StartShutdown();\n-            return;\n-        }\n-    } else {\n-        strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    }\n-\n-    assert(rpc_io_service == NULL);\n-    rpc_io_service = new boost::asio::io_service();\n-    rpc_ssl_context = new ssl::context(*rpc_io_service, ssl::context::sslv23);\n-\n-    const bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n-\n-    if (fUseSSL)\n-    {\n-        rpc_ssl_context->set_options(ssl::context::no_sslv2 | ssl::context::no_sslv3);\n-\n-        boost::filesystem::path pathCertFile(GetArg(\"-rpcsslcertificatechainfile\", \"server.cert\"));\n-        if (!pathCertFile.is_complete()) pathCertFile = boost::filesystem::path(GetDataDir()) / pathCertFile;\n-        if (boost::filesystem::exists(pathCertFile)) rpc_ssl_context->use_certificate_chain_file(pathCertFile.string());\n-        else LogPrintf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string());\n-\n-        boost::filesystem::path pathPKFile(GetArg(\"-rpcsslprivatekeyfile\", \"server.pem\"));\n-        if (!pathPKFile.is_complete()) pathPKFile = boost::filesystem::path(GetDataDir()) / pathPKFile;\n-        if (boost::filesystem::exists(pathPKFile)) rpc_ssl_context->use_private_key_file(pathPKFile.string(), ssl::context::pem);\n-        else LogPrintf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string());\n-\n-        string strCiphers = GetArg(\"-rpcsslciphers\", \"TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH\");\n-        SSL_CTX_set_cipher_list(rpc_ssl_context->impl(), strCiphers.c_str());\n-    }\n-\n-    std::vector<ip::tcp::endpoint> vEndpoints;\n-    bool bBindAny = false;\n-    int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n-    if (!mapArgs.count(\"-rpcallowip\")) // Default to loopback if not allowing external IPs\n-    {\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v6::loopback(), defaultPort));\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v4::loopback(), defaultPort));\n-        if (mapArgs.count(\"-rpcbind\"))\n-        {\n-            LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n-        }\n-    } else if (mapArgs.count(\"-rpcbind\")) // Specific bind address\n-    {\n-        BOOST_FOREACH(const std::string &addr, mapMultiArgs[\"-rpcbind\"])\n-        {\n-            try {\n-                vEndpoints.push_back(ParseEndpoint(addr, defaultPort));\n-            }\n-            catch (const boost::system::system_error&)\n-            {\n-                uiInterface.ThreadSafeMessageBox(\n-                    strprintf(_(\"Could not parse -rpcbind value %s as network address\"), addr),\n-                    \"\", CClientUIInterface::MSG_ERROR);\n-                StartShutdown();\n-                return;\n-            }\n-        }\n-    } else { // No specific bind address specified, bind to any\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v6::any(), defaultPort));\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v4::any(), defaultPort));\n-        // Prefer making the socket dual IPv6/IPv4 instead of binding\n-        // to both addresses separately.\n-        bBindAny = true;\n-    }\n-\n-    bool fListening = false;\n-    std::string strerr;\n-    std::string straddress;\n-    BOOST_FOREACH(const ip::tcp::endpoint &endpoint, vEndpoints)\n-    {\n-        try {\n-            boost::asio::ip::address bindAddress = endpoint.address();\n-            straddress = bindAddress.to_string();\n-            LogPrintf(\"Binding RPC on address %s port %i (IPv4+IPv6 bind any: %i)\\n\", straddress, endpoint.port(), bBindAny);\n-            boost::system::error_code v6_only_error;\n-            boost::shared_ptr<ip::tcp::acceptor> acceptor(new ip::tcp::acceptor(*rpc_io_service));\n-\n-            acceptor->open(endpoint.protocol());\n-            acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n-\n-            // Try making the socket dual IPv6/IPv4 when listening on the IPv6 \"any\" address\n-            acceptor->set_option(boost::asio::ip::v6_only(\n-                !bBindAny || bindAddress != boost::asio::ip::address_v6::any()), v6_only_error);\n-\n-            acceptor->bind(endpoint);\n-            acceptor->listen(socket_base::max_connections);\n-\n-            RPCListen(acceptor, *rpc_ssl_context, fUseSSL);\n-\n-            fListening = true;\n-            rpc_acceptors.push_back(acceptor);\n-            // If dual IPv6/IPv4 bind successful, skip binding to IPv4 separately\n-            if(bBindAny && bindAddress == boost::asio::ip::address_v6::any() && !v6_only_error)\n-                break;\n-        }\n-        catch (const boost::system::system_error& e)\n-        {\n-            LogPrintf(\"ERROR: Binding RPC on address %s port %i failed: %s\\n\", straddress, endpoint.port(), e.what());\n-            strerr = strprintf(_(\"An error occurred while setting up the RPC address %s port %u for listening: %s\"), straddress, endpoint.port(), e.what());\n-        }\n-    }\n-\n-    if (!fListening) {\n-        uiInterface.ThreadSafeMessageBox(strerr, \"\", CClientUIInterface::MSG_ERROR);\n-        StartShutdown();\n-        return;\n-    }\n-\n-    rpc_worker_group = new boost::thread_group();\n-    for (int i = 0; i < GetArg(\"-rpcthreads\", 4); i++)\n-        rpc_worker_group->create_thread(boost::bind(&boost::asio::io_service::run, rpc_io_service));\n+    LogPrint(\"rpc\", \"Starting RPC\\n\");\n     fRPCRunning = true;\n     g_rpcSignals.Started();\n+    return true;\n }\n \n-void StartDummyRPCThread()\n+void InterruptRPC()\n {\n-    if(rpc_io_service == NULL)\n-    {\n-        rpc_io_service = new boost::asio::io_service();\n-        /* Create dummy \"work\" to keep the thread from exiting when no timeouts active,\n-         * see http://www.boost.org/doc/libs/1_51_0/doc/html/boost_asio/reference/io_service.html#boost_asio.reference.io_service.stopping_the_io_service_from_running_out_of_work */\n-        rpc_dummy_work = new boost::asio::io_service::work(*rpc_io_service);\n-        rpc_worker_group = new boost::thread_group();\n-        rpc_worker_group->create_thread(boost::bind(&boost::asio::io_service::run, rpc_io_service));\n-        fRPCRunning = true;\n-    }\n+    LogPrint(\"rpc\", \"Interrupting RPC\\n\");\n+    // Interrupt e.g. running longpolls\n+    fRPCRunning = false;\n }\n \n-void StopRPCThreads()\n+void StopRPC()\n {\n-    if (rpc_io_service == NULL) return;\n-    // Set this to false first, so that longpolling loops will exit when woken up\n-    fRPCRunning = false;\n-\n-    // First, cancel all timers and acceptors\n-    // This is not done automatically by ->stop(), and in some cases the destructor of\n-    // boost::asio::io_service can hang if this is skipped.\n-    boost::system::error_code ec;\n-    BOOST_FOREACH(const boost::shared_ptr<ip::tcp::acceptor> &acceptor, rpc_acceptors)\n-    {\n-        acceptor->cancel(ec);\n-        if (ec)\n-            LogPrintf(\"%s: Warning: %s when cancelling acceptor\\n\", __func__, ec.message());\n-    }\n-    rpc_acceptors.clear();\n-    BOOST_FOREACH(const PAIRTYPE(std::string, boost::shared_ptr<deadline_timer>) &timer, deadlineTimers)\n-    {\n-        timer.second->cancel(ec);\n-        if (ec)\n-            LogPrintf(\"%s: Warning: %s when cancelling timer\\n\", __func__, ec.message());\n-    }\n+    LogPrint(\"rpc\", \"Stopping RPC\\n\");\n     deadlineTimers.clear();\n-\n-    DeleteAuthCookie();\n-\n-    rpc_io_service->stop();\n     g_rpcSignals.Stopped();\n-    if (rpc_worker_group != NULL)\n-        rpc_worker_group->join_all();\n-    delete rpc_dummy_work; rpc_dummy_work = NULL;\n-    delete rpc_worker_group; rpc_worker_group = NULL;\n-    delete rpc_ssl_context; rpc_ssl_context = NULL;\n-    delete rpc_io_service; rpc_io_service = NULL;\n }\n \n bool IsRPCRunning()\n@@ -802,36 +440,6 @@ bool RPCIsInWarmup(std::string *outStatus)\n     return fRPCInWarmup;\n }\n \n-void RPCRunHandler(const boost::system::error_code& err, boost::function<void(void)> func)\n-{\n-    if (!err)\n-        func();\n-}\n-\n-void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds)\n-{\n-    assert(rpc_io_service != NULL);\n-\n-    if (deadlineTimers.count(name) == 0)\n-    {\n-        deadlineTimers.insert(make_pair(name,\n-                                        boost::shared_ptr<deadline_timer>(new deadline_timer(*rpc_io_service))));\n-    }\n-    deadlineTimers[name]->expires_from_now(boost::posix_time::seconds(nSeconds));\n-    deadlineTimers[name]->async_wait(boost::bind(RPCRunHandler, _1, func));\n-}\n-\n-class JSONRequest\n-{\n-public:\n-    UniValue id;\n-    string strMethod;\n-    UniValue params;\n-\n-    JSONRequest() { id = NullUniValue; }\n-    void parse(const UniValue& valRequest);\n-};\n-\n void JSONRequest::parse(const UniValue& valRequest)\n {\n     // Parse request\n@@ -862,7 +470,6 @@ void JSONRequest::parse(const UniValue& valRequest)\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array\");\n }\n \n-\n static UniValue JSONRPCExecOne(const UniValue& req)\n {\n     UniValue rpc_result(UniValue::VOBJ);\n@@ -887,7 +494,7 @@ static UniValue JSONRPCExecOne(const UniValue& req)\n     return rpc_result;\n }\n \n-static string JSONRPCExecBatch(const UniValue& vReq)\n+std::string JSONRPCExecBatch(const UniValue& vReq)\n {\n     UniValue ret(UniValue::VARR);\n     for (unsigned int reqIdx = 0; reqIdx < vReq.size(); reqIdx++)\n@@ -896,107 +503,6 @@ static string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n-static bool HTTPReq_JSONRPC(AcceptedConnection *conn,\n-                            string& strRequest,\n-                            map<string, string>& mapHeaders,\n-                            bool fRun)\n-{\n-    // Check authorization\n-    if (mapHeaders.count(\"authorization\") == 0)\n-    {\n-        conn->stream() << HTTPError(HTTP_UNAUTHORIZED, false) << std::flush;\n-        return false;\n-    }\n-\n-    if (!HTTPAuthorized(mapHeaders))\n-    {\n-        LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string());\n-        /* Deter brute-forcing\n-           We don't support exposing the RPC port, so this shouldn't result\n-           in a DoS. */\n-        MilliSleep(250);\n-\n-        conn->stream() << HTTPError(HTTP_UNAUTHORIZED, false) << std::flush;\n-        return false;\n-    }\n-\n-    JSONRequest jreq;\n-    try\n-    {\n-        // Parse request\n-        UniValue valRequest;\n-        if (!valRequest.read(strRequest))\n-            throw JSONRPCError(RPC_PARSE_ERROR, \"Parse error\");\n-\n-        string strReply;\n-\n-        // singleton request\n-        if (valRequest.isObject()) {\n-            jreq.parse(valRequest);\n-\n-            UniValue result = tableRPC.execute(jreq.strMethod, jreq.params);\n-\n-            // Send reply\n-            strReply = JSONRPCReply(result, NullUniValue, jreq.id);\n-\n-        // array of requests\n-        } else if (valRequest.isArray())\n-            strReply = JSONRPCExecBatch(valRequest.get_array());\n-        else\n-            throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\n-\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, strReply.size()) << strReply << std::flush;\n-    }\n-    catch (const UniValue& objError)\n-    {\n-        ErrorReply(conn->stream(), objError, jreq.id);\n-        return false;\n-    }\n-    catch (const std::exception& e)\n-    {\n-        ErrorReply(conn->stream(), JSONRPCError(RPC_PARSE_ERROR, e.what()), jreq.id);\n-        return false;\n-    }\n-    return true;\n-}\n-\n-void ServiceConnection(AcceptedConnection *conn)\n-{\n-    bool fRun = true;\n-    while (fRun && !ShutdownRequested())\n-    {\n-        int nProto = 0;\n-        map<string, string> mapHeaders;\n-        string strRequest, strMethod, strURI;\n-\n-        // Read HTTP request line\n-        if (!ReadHTTPRequestLine(conn->stream(), nProto, strMethod, strURI))\n-            break;\n-\n-        // Read HTTP message headers and body\n-        ReadHTTPMessage(conn->stream(), mapHeaders, strRequest, nProto, MAX_SIZE);\n-\n-        // HTTP Keep-Alive is false; close connection immediately\n-        if ((mapHeaders[\"connection\"] == \"close\") || (!GetBoolArg(\"-rpckeepalive\", true)))\n-            fRun = false;\n-\n-        // Process via JSON-RPC API\n-        if (strURI == \"/\") {\n-            if (!HTTPReq_JSONRPC(conn, strRequest, mapHeaders, fRun))\n-                break;\n-\n-        // Process via HTTP REST API\n-        } else if (strURI.substr(0, 6) == \"/rest/\" && GetBoolArg(\"-rest\", false)) {\n-            if (!HTTPReq_REST(conn, strURI, strRequest, mapHeaders, fRun))\n-                break;\n-\n-        } else {\n-            conn->stream() << HTTPError(HTTP_NOT_FOUND, false) << std::flush;\n-            break;\n-        }\n-    }\n-}\n-\n UniValue CRPCTable::execute(const std::string &strMethod, const UniValue &params) const\n {\n     // Return immediately if in warmup\n@@ -1037,4 +543,26 @@ std::string HelpExampleRpc(const std::string& methodname, const std::string& arg\n         \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n }\n \n+void RPCRegisterTimerInterface(RPCTimerInterface *iface)\n+{\n+    timerInterfaces.push_back(iface);\n+}\n+\n+void RPCUnregisterTimerInterface(RPCTimerInterface *iface)\n+{\n+    std::vector<RPCTimerInterface*>::iterator i = std::find(timerInterfaces.begin(), timerInterfaces.end(), iface);\n+    assert(i != timerInterfaces.end());\n+    timerInterfaces.erase(i);\n+}\n+\n+void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds)\n+{\n+    if (timerInterfaces.empty())\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");\n+    deadlineTimers.erase(name);\n+    RPCTimerInterface* timerInterface = timerInterfaces[0];\n+    LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n+    deadlineTimers.insert(std::make_pair(name, timerInterface->NewTimer(func, nSeconds)));\n+}\n+\n const CRPCTable tableRPC;"
      },
      {
        "sha": "ac821d5b5540428a6169d624276683deb771d945",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 44,
        "deletions": 28,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "patch": "@@ -32,26 +32,17 @@ namespace RPCServer\n class CBlockIndex;\n class CNetAddr;\n \n-class AcceptedConnection\n+class JSONRequest\n {\n public:\n-    virtual ~AcceptedConnection() {}\n+    UniValue id;\n+    std::string strMethod;\n+    UniValue params;\n \n-    virtual std::iostream& stream() = 0;\n-    virtual std::string peer_address_to_string() const = 0;\n-    virtual void close() = 0;\n+    JSONRequest() { id = NullUniValue; }\n+    void parse(const UniValue& valRequest);\n };\n \n-/** Start RPC threads */\n-void StartRPCThreads();\n-/**\n- * Alternative to StartRPCThreads for the GUI, when no server is\n- * used. The RPC thread in this case is only used to handle timeouts.\n- * If real RPC threads have already been started this is a no-op.\n- */\n-void StartDummyRPCThread();\n-/** Stop RPC threads */\n-void StopRPCThreads();\n /** Query whether RPC is running */\n bool IsRPCRunning();\n \n@@ -81,15 +72,45 @@ void RPCTypeCheck(const UniValue& params,\n void RPCTypeCheckObj(const UniValue& o,\n                   const std::map<std::string, UniValue::VType>& typesExpected, bool fAllowNull=false);\n \n+/** Opaque base class for timers returned by NewTimerFunc.\n+ * This provides no methods at the moment, but makes sure that delete\n+ * cleans up the whole state.\n+ */\n+class RPCTimerBase\n+{\n+public:\n+    virtual ~RPCTimerBase() {}\n+};\n+\n /**\n- * Run func nSeconds from now. Uses boost deadline timers.\n+ * RPC timer \"driver\".\n+ */\n+class RPCTimerInterface\n+{\n+public:\n+    virtual ~RPCTimerInterface() {}\n+    /** Implementation name */\n+    virtual const char *Name() = 0;\n+    /** Factory function for timers.\n+     * RPC will call the function to create a timer that will call func in *seconds* seconds.\n+     * @note As the RPC mechanism is backend-neutral, it can use different implementations of timers.\n+     * This is needed to cope with the case in which there is no HTTP server, but\n+     * only GUI RPC console, and to break the dependency of pcserver on httprpc.\n+     */\n+    virtual RPCTimerBase* NewTimer(boost::function<void(void)>&, int64_t) = 0;\n+};\n+\n+/** Register factory function for timers */\n+void RPCRegisterTimerInterface(RPCTimerInterface *iface);\n+/** Unregister factory function for timers */\n+void RPCUnregisterTimerInterface(RPCTimerInterface *iface);\n+\n+/**\n+ * Run func nSeconds from now.\n  * Overrides previous timer <name> (if any).\n  */\n void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds);\n \n-//! Convert boost::asio address to CNetAddr\n-extern CNetAddr BoostAsioToCNetAddr(boost::asio::ip::address address);\n-\n typedef UniValue(*rpcfn_type)(const UniValue& params, bool fHelp);\n \n class CRPCCommand\n@@ -134,9 +155,6 @@ extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n-extern void InitRPCMining();\n-extern void ShutdownRPCMining();\n-\n extern int64_t nWalletUnlockTime;\n extern CAmount AmountFromValue(const UniValue& value);\n extern UniValue ValueFromAmount(const CAmount& amount);\n@@ -244,11 +262,9 @@ extern UniValue getchaintips(const UniValue& params, bool fHelp);\n extern UniValue invalidateblock(const UniValue& params, bool fHelp);\n extern UniValue reconsiderblock(const UniValue& params, bool fHelp);\n \n-// in rest.cpp\n-extern bool HTTPReq_REST(AcceptedConnection *conn,\n-                  const std::string& strURI,\n-                  const std::string& strRequest,\n-                  const std::map<std::string, std::string>& mapHeaders,\n-                  bool fRun);\n+bool StartRPC();\n+void InterruptRPC();\n+void StopRPC();\n+std::string JSONRPCExecBatch(const UniValue& vReq);\n \n #endif // BITCOIN_RPCSERVER_H"
      }
    ]
  },
  {
    "sha": "57d85d9bee20edb6c3070504f23b6a2be2802654",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2Q4NWQ5YmVlMjBlZGI2YzMwNzA1MDRmMjNiNmEyYmUyODAyNjU0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-28T10:20:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:19Z"
      },
      "message": "doc: mention SSL support dropped for RPC in release notes",
      "tree": {
        "sha": "b08ba54e5e74d3353a717feada510b4fb97bbf27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b08ba54e5e74d3353a717feada510b4fb97bbf27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57d85d9bee20edb6c3070504f23b6a2be2802654",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d85d9bee20edb6c3070504f23b6a2be2802654",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57d85d9bee20edb6c3070504f23b6a2be2802654",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d85d9bee20edb6c3070504f23b6a2be2802654/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40b556d3742a1f65d67e2d4c760d0b13fe8be5b7"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2fc601d4354259796a04650c75315aa5b41f8b15",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d85d9bee20edb6c3070504f23b6a2be2802654/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d85d9bee20edb6c3070504f23b6a2be2802654/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=57d85d9bee20edb6c3070504f23b6a2be2802654",
        "patch": "@@ -4,6 +4,29 @@ release-notes at release time)\n Notable changes\n ===============\n \n+SSL support for RPC dropped\n+----------------------------\n+\n+SSL support for RPC, previously enabled by the option `rpcssl` has been dropped\n+from both the client and the server. This was done in preparation for removing\n+the dependency on OpenSSL for the daemon completely.\n+\n+Trying to use `rpcssl` will result in an error:\n+\n+    Error: SSL mode for RPC (-rpcssl) is no longer supported.\n+\n+If you are one of the few people that relies on this feature, a flexible\n+migration path is to use `stunnel`. This is an utility that can tunnel\n+arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:\n+\n+    sudo apt-get install stunnel4\n+\n+Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:\n+\n+    stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''\n+\n+It can also be set up system-wide in inetd style.\n+\n Random-cookie RPC authentication\n ---------------------------------\n "
      }
    ]
  },
  {
    "sha": "be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTMzZjNmNTBiNzM1OGJiYWQ5ZTE2YmY3MzBmYWMyYWIzYzQ4ODZi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-28T14:46:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:19Z"
      },
      "message": "Implement RPCTimerHandler for Qt RPC console\n\nImplement RPCTimerHandler for Qt RPC console, so that `walletpassphrase`\nworks with GUI and `-server=0`.\n\nAlso simplify HTTPEvent-related code by using boost::function directly.",
      "tree": {
        "sha": "534b59ec81e5baf95c85980013304eb31b24d0c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/534b59ec81e5baf95c85980013304eb31b24d0c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57d85d9bee20edb6c3070504f23b6a2be2802654",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d85d9bee20edb6c3070504f23b6a2be2802654",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57d85d9bee20edb6c3070504f23b6a2be2802654"
      }
    ],
    "stats": {
      "total": 117,
      "additions": 67,
      "deletions": 50
    },
    "files": [
      {
        "sha": "98ac750bb1938f2bcd7a3125611ee383bcaaff16",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 15,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -19,24 +19,16 @@\n class HTTPRPCTimer : public RPCTimerBase\n {\n public:\n-    HTTPRPCTimer(struct event_base* eventBase, boost::function<void(void)>& func, int64_t seconds) : ev(eventBase, false, new Handler(func))\n+    HTTPRPCTimer(struct event_base* eventBase, boost::function<void(void)>& func, int64_t millis) :\n+        ev(eventBase, false, func)\n     {\n-        struct timeval tv = {seconds, 0};\n+        struct timeval tv;\n+        tv.tv_sec = millis/1000;\n+        tv.tv_usec = (millis%1000)*1000;\n         ev.trigger(&tv);\n     }\n private:\n     HTTPEvent ev;\n-\n-    class Handler : public HTTPClosure\n-    {\n-    public:\n-        Handler(const boost::function<void(void)>& func) : func(func)\n-        {\n-        }\n-    private:\n-        boost::function<void(void)> func;\n-        void operator()() { func(); }\n-    };\n };\n \n class HTTPRPCTimerInterface : public RPCTimerInterface\n@@ -49,9 +41,9 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n     {\n         return \"HTTP\";\n     }\n-    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t seconds)\n+    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis)\n     {\n-        return new HTTPRPCTimer(base, func, seconds);\n+        return new HTTPRPCTimer(base, func, millis);\n     }\n private:\n     struct event_base* base;"
      },
      {
        "sha": "13f870567806f3b5233c87a2544c3a75ab49b6d0",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 25,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -412,18 +412,15 @@ struct event_base* EventBase()\n \n static void httpevent_callback_fn(evutil_socket_t, short, void* data)\n {\n-    // Static handler simply passes through execution flow to _handle method\n-    ((HTTPEvent*)data)->_handle();\n+    // Static handler: simply call inner handler\n+    HTTPEvent *self = ((HTTPEvent*)data);\n+    self->handler();\n+    if (self->deleteWhenTriggered)\n+        delete self;\n }\n \n-void HTTPEvent::_handle()\n-{\n-    (*handler)();\n-    if (deleteWhenTriggered)\n-        delete this;\n-}\n-\n-HTTPEvent::HTTPEvent(struct event_base* base, bool deleteWhenTriggered, HTTPClosure* handler) : deleteWhenTriggered(deleteWhenTriggered), handler(handler)\n+HTTPEvent::HTTPEvent(struct event_base* base, bool deleteWhenTriggered, const boost::function<void(void)>& handler):\n+    deleteWhenTriggered(deleteWhenTriggered), handler(handler)\n {\n     ev = event_new(base, -1, 0, httpevent_callback_fn, this);\n     assert(ev);\n@@ -496,20 +493,6 @@ void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\n  * Replies must be sent in the main loop in the main http thread,\n  * this cannot be done from worker threads.\n  */\n-struct HTTPSendReplyHandler : HTTPClosure {\n-public:\n-    HTTPSendReplyHandler(struct evhttp_request* req, int nStatus) : req(req), nStatus(nStatus)\n-    {\n-    }\n-    void operator()()\n-    {\n-        evhttp_send_reply(req, nStatus, NULL, NULL);\n-    }\n-private:\n-    struct evhttp_request* req;\n-    int nStatus;\n-};\n-\n void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n {\n     assert(!replySent && req);\n@@ -518,7 +501,7 @@ void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n     assert(evb);\n     evbuffer_add(evb, strReply.data(), strReply.size());\n     HTTPEvent* ev = new HTTPEvent(eventBase, true,\n-                                  new HTTPSendReplyHandler(req, nStatus));\n+        boost::bind(evhttp_send_reply, req, nStatus, (const char*)NULL, (struct evbuffer *)NULL));\n     ev->trigger(0);\n     replySent = true;\n     req = 0; // transferred back to main thread"
      },
      {
        "sha": "648e8b6f8648c320645d7e6db7d15f24fc259fce",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -117,22 +117,22 @@ class HTTPClosure\n class HTTPEvent\n {\n public:\n-    /** Create a new event */\n-    HTTPEvent(struct event_base* base, bool deleteWhenTriggered, HTTPClosure* handler);\n+    /** Create a new event.\n+     * deleteWhenTriggered deletes this event object after the event is triggered (and the handler called)\n+     * handler is the handler to call when the event is triggered.\n+     */\n+    HTTPEvent(struct event_base* base, bool deleteWhenTriggered, const boost::function<void(void)>& handler);\n     ~HTTPEvent();\n \n     /** Trigger the event. If tv is 0, trigger it immediately. Otherwise trigger it after\n      * the given time has elapsed.\n      */\n     void trigger(struct timeval* tv);\n \n-    /** Internal function for handling, do not call directly */\n-    void _handle();\n-\n-private:\n     bool deleteWhenTriggered;\n+    boost::function<void(void)> handler;\n+private:\n     struct event* ev;\n-    boost::scoped_ptr<HTTPClosure> handler;\n };\n \n #endif // BITCOIN_HTTPSERVER_H"
      },
      {
        "sha": "b742a47c9ba323e359604bb300c68e3694ea9d05",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -28,6 +28,7 @@\n #include <QScrollBar>\n #include <QThread>\n #include <QTime>\n+#include <QTimer>\n \n #if QT_VERSION < 0x050000\n #include <QUrl>\n@@ -66,6 +67,40 @@ public Q_SLOTS:\n     void reply(int category, const QString &command);\n };\n \n+/** Class for handling RPC timers\n+ * (used for e.g. re-locking the wallet after a timeout)\n+ */\n+class QtRPCTimerBase: public QObject, public RPCTimerBase\n+{\n+    Q_OBJECT\n+public:\n+    QtRPCTimerBase(boost::function<void(void)>& func, int64_t millis):\n+        func(func)\n+    {\n+        timer.setSingleShot(true);\n+        connect(&timer, SIGNAL(timeout()), this, SLOT(timeout()));\n+        timer.start(millis);\n+    }\n+    ~QtRPCTimerBase() {}\n+private Q_SLOTS:\n+    void timeout() { func(); }\n+private:\n+    QTimer timer;\n+    boost::function<void(void)> func;\n+};\n+\n+class QtRPCTimerInterface: public RPCTimerInterface\n+{\n+public:\n+    ~QtRPCTimerInterface() {}\n+    const char *Name() { return \"Qt\"; }\n+    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis)\n+    {\n+        return new QtRPCTimerBase(func, millis);\n+    }\n+};\n+\n+\n #include \"rpcconsole.moc\"\n \n /**\n@@ -232,6 +267,9 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     ui->label_berkeleyDBVersion->hide();\n     ui->berkeleyDBVersion->hide();\n #endif\n+    // Register RPC timer interface\n+    rpcTimerInterface = new QtRPCTimerInterface();\n+    RPCRegisterTimerInterface(rpcTimerInterface);\n \n     startExecutor();\n     setTrafficGraphRange(INITIAL_TRAFFIC_GRAPH_MINS);\n@@ -246,6 +284,8 @@ RPCConsole::~RPCConsole()\n {\n     GUIUtil::saveWindowGeometry(\"nRPCConsoleWindow\", this);\n     Q_EMIT stopExecutor();\n+    RPCUnregisterTimerInterface(rpcTimerInterface);\n+    delete rpcTimerInterface;\n     delete ui;\n }\n "
      },
      {
        "sha": "1409fca525ad9f30e36fe3a608791becbc71b81f",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -14,6 +14,7 @@\n \n class ClientModel;\n class PlatformStyle;\n+class RPCTimerInterface;\n \n namespace Ui {\n     class RPCConsole;\n@@ -108,6 +109,7 @@ public Q_SLOTS:\n     NodeId cachedNodeid;\n     QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n+    RPCTimerInterface *rpcTimerInterface;\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      },
      {
        "sha": "b831d3d3b2bd6fbfc85827e2ca064495d04ae4a8",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -562,7 +562,7 @@ void RPCRunLater(const std::string& name, boost::function<void(void)> func, int6\n     deadlineTimers.erase(name);\n     RPCTimerInterface* timerInterface = timerInterfaces[0];\n     LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n-    deadlineTimers.insert(std::make_pair(name, timerInterface->NewTimer(func, nSeconds)));\n+    deadlineTimers.insert(std::make_pair(name, timerInterface->NewTimer(func, nSeconds*1000)));\n }\n \n const CRPCTable tableRPC;"
      },
      {
        "sha": "83cc37918ba5785d8f8d29e0bd663e39857e41d9",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be33f3f50b7358bbad9e16bf730fac2ab3c4886b/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "patch": "@@ -92,12 +92,12 @@ class RPCTimerInterface\n     /** Implementation name */\n     virtual const char *Name() = 0;\n     /** Factory function for timers.\n-     * RPC will call the function to create a timer that will call func in *seconds* seconds.\n+     * RPC will call the function to create a timer that will call func in *millis* milliseconds.\n      * @note As the RPC mechanism is backend-neutral, it can use different implementations of timers.\n      * This is needed to cope with the case in which there is no HTTP server, but\n      * only GUI RPC console, and to break the dependency of pcserver on httprpc.\n      */\n-    virtual RPCTimerBase* NewTimer(boost::function<void(void)>&, int64_t) = 0;\n+    virtual RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis) = 0;\n };\n \n /** Register factory function for timers */"
      }
    ]
  },
  {
    "sha": "6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDJiYzIyMTQ2M2ZmZTNlZDNhOTllOGM2ODJiMDkwOTgzYjJlN2I1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-28T15:14:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:19Z"
      },
      "message": "Document options for new HTTP/RPC server in --help",
      "tree": {
        "sha": "4370d570b38fea9ffa1ad630b481433cfb2b890b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4370d570b38fea9ffa1ad630b481433cfb2b890b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be33f3f50b7358bbad9e16bf730fac2ab3c4886b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be33f3f50b7358bbad9e16bf730fac2ab3c4886b"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "813764f22c78038edf57a5344cd81b11441b37db",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
        "patch": "@@ -355,7 +355,7 @@ bool StartHTTPServer(boost::thread_group& threadGroup)\n         return false;\n     }\n \n-    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", 30));\n+    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", DEFAULT_HTTP_TIMEOUT));\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n \n@@ -367,8 +367,8 @@ bool StartHTTPServer(boost::thread_group& threadGroup)\n     }\n \n     LogPrint(\"http\", \"Starting HTTP server\\n\");\n-    int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", 16), 1L);\n-    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", 4), 1L);\n+    int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n+    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n     LogPrintf(\"HTTP: creating work queue of depth %d and %d worker threads\\n\", workQueueDepth, rpcThreads);\n     workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n "
      },
      {
        "sha": "1b0d77ad4d2d50b0c0872041dd0d190d01eb33bf",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
        "patch": "@@ -11,6 +11,10 @@\n #include <boost/scoped_ptr.hpp>\n #include <boost/function.hpp>\n \n+static const int DEFAULT_HTTP_THREADS=4;\n+static const int DEFAULT_HTTP_WORKQUEUE=16;\n+static const int DEFAULT_HTTP_TIMEOUT=30;\n+\n struct evhttp_request;\n struct event_base;\n class CService;"
      },
      {
        "sha": "bbf73dc8f448068ea7404c9d558131b366d9c6e0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
        "patch": "@@ -388,7 +388,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n@@ -438,7 +438,11 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n-    strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), 4));\n+    strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n+    if (showDebug) {\n+        strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n+        strUsage += HelpMessageOpt(\"-rpctimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_TIMEOUT));\n+    }\n \n     if (mode == HMM_BITCOIN_QT)\n     {"
      }
    ]
  },
  {
    "sha": "3a174cd400c6c239539d4c0c10b557c3e0615212",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTE3NGNkNDAwYzZjMjM5NTM5ZDRjMGMxMGI1NTdjM2UwNjE1MjEy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-28T14:55:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:19Z"
      },
      "message": "Fix race condition between starting HTTP server thread and setting EventBase()\n\nSplit StartHTTPServer into InitHTTPServer and StartHTTPServer to give\nclients a window to register their handlers without race conditions.\n\nThanks @ajweiss for figuring this out.",
      "tree": {
        "sha": "3a7b26b9218f9e3d17d8a3f5f77e032b35f6e416",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a7b26b9218f9e3d17d8a3f5f77e032b35f6e416"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a174cd400c6c239539d4c0c10b557c3e0615212",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a174cd400c6c239539d4c0c10b557c3e0615212",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a174cd400c6c239539d4c0c10b557c3e0615212",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a174cd400c6c239539d4c0c10b557c3e0615212/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d2bc221463ffe3ed3a99e8c682b090983b2e7b5"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 25,
      "deletions": 10
    },
    "files": [
      {
        "sha": "7e599b1d78d31a16151d455e000677de2543a408",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 8,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a174cd400c6c239539d4c0c10b557c3e0615212/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a174cd400c6c239539d4c0c10b557c3e0615212/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=3a174cd400c6c239539d4c0c10b557c3e0615212",
        "patch": "@@ -320,7 +320,7 @@ static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n     queue->Run();\n }\n \n-bool StartHTTPServer(boost::thread_group& threadGroup)\n+bool InitHTTPServer()\n {\n     struct evhttp* http = 0;\n     struct event_base* base = 0;\n@@ -366,19 +366,25 @@ bool StartHTTPServer(boost::thread_group& threadGroup)\n         return false;\n     }\n \n-    LogPrint(\"http\", \"Starting HTTP server\\n\");\n+    LogPrint(\"http\", \"Initialized HTTP server\\n\");\n     int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n-    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n-    LogPrintf(\"HTTP: creating work queue of depth %d and %d worker threads\\n\", workQueueDepth, rpcThreads);\n+    LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n+\n     workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n+    eventBase = base;\n+    eventHTTP = http;\n+    return true;\n+}\n \n-    threadGroup.create_thread(boost::bind(&ThreadHTTP, base, http));\n+bool StartHTTPServer(boost::thread_group& threadGroup)\n+{\n+    LogPrint(\"http\", \"Starting HTTP server\\n\");\n+    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n+    LogPrintf(\"HTTP: starting %d worker threads\\n\", rpcThreads);\n+    threadGroup.create_thread(boost::bind(&ThreadHTTP, eventBase, eventHTTP));\n \n     for (int i = 0; i < rpcThreads; i++)\n         threadGroup.create_thread(boost::bind(&HTTPWorkQueueRun, workQueue));\n-\n-    eventBase = base;\n-    eventHTTP = http;\n     return true;\n }\n "
      },
      {
        "sha": "459c60c04724c0281ffcea3cccbbc3fb994fc29c",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a174cd400c6c239539d4c0c10b557c3e0615212/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a174cd400c6c239539d4c0c10b557c3e0615212/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=3a174cd400c6c239539d4c0c10b557c3e0615212",
        "patch": "@@ -20,7 +20,14 @@ struct event_base;\n class CService;\n class HTTPRequest;\n \n-/** Start HTTP server */\n+/** Initialize HTTP server.\n+ * Call this before RegisterHTTPHandler or EventBase().\n+ */\n+bool InitHTTPServer();\n+/** Start HTTP server.\n+ * This is separate from InitHTTPServer to give users race-condition-free time\n+ * to register their handlers between InitHTTPServer and StartHTTPServer.\n+ */\n bool StartHTTPServer(boost::thread_group& threadGroup);\n /** Interrupt HTTP server threads */\n void InterruptHTTPServer();"
      },
      {
        "sha": "4aaeee257b35da4f8424dfd6b6853a082086ec2e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a174cd400c6c239539d4c0c10b557c3e0615212/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a174cd400c6c239539d4c0c10b557c3e0615212/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3a174cd400c6c239539d4c0c10b557c3e0615212",
        "patch": "@@ -618,14 +618,16 @@ bool AppInitServers(boost::thread_group& threadGroup)\n {\n     RPCServer::OnStopped(&OnRPCStopped);\n     RPCServer::OnPreCommand(&OnRPCPreCommand);\n-    if (!StartHTTPServer(threadGroup))\n+    if (!InitHTTPServer())\n         return false;\n     if (!StartRPC())\n         return false;\n     if (!StartHTTPRPC())\n         return false;\n     if (GetBoolArg(\"-rest\", false) && !StartREST())\n         return false;\n+    if (!StartHTTPServer(threadGroup))\n+        return false;\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "4be0b082b97062be4df20e9c45dafa577b05b07c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmUwYjA4MmI5NzA2MmJlNGRmMjBlOWM0NWRhZmE1NzdiMDViMDdj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-08-31T09:17:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:19Z"
      },
      "message": "libevent: Windows reuseaddr workaround in depends\n\nMake it possible to reuse sockets.\nThis is necessary to make the RPC tests work in WINE.",
      "tree": {
        "sha": "6f331d8dc827ef0f7a27ffb89348800bb7bd4936",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f331d8dc827ef0f7a27ffb89348800bb7bd4936"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4be0b082b97062be4df20e9c45dafa577b05b07c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4be0b082b97062be4df20e9c45dafa577b05b07c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4be0b082b97062be4df20e9c45dafa577b05b07c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4be0b082b97062be4df20e9c45dafa577b05b07c/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a174cd400c6c239539d4c0c10b557c3e0615212",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a174cd400c6c239539d4c0c10b557c3e0615212",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a174cd400c6c239539d4c0c10b557c3e0615212"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2e9be1e98ccedda520459b8d4deed2f686473746",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4be0b082b97062be4df20e9c45dafa577b05b07c/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4be0b082b97062be4df20e9c45dafa577b05b07c/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=4be0b082b97062be4df20e9c45dafa577b05b07c",
        "patch": "@@ -3,6 +3,11 @@ $(package)_version=2.0.22\n $(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n $(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n $(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n+$(package)_patches=reuseaddr.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/reuseaddr.patch\n+endef\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4be0b082b97062be4df20e9c45dafa577b05b07c/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4be0b082b97062be4df20e9c45dafa577b05b07c/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=4be0b082b97062be4df20e9c45dafa577b05b07c",
        "patch": "@@ -0,0 +1,21 @@\n+--- old/evutil.c   2015-08-28 19:26:23.488765923 -0400\n++++ new/evutil.c   2015-08-28 19:27:41.392767019 -0400\n+@@ -321,15 +321,16 @@\n+ int\n+ evutil_make_listen_socket_reuseable(evutil_socket_t sock)\n+ {\n+-#ifndef WIN32\n+ \tint one = 1;\n++#ifndef WIN32\n+ \t/* REUSEADDR on Unix means, \"don't hang on to this address after the\n+ \t * listener is closed.\"  On Windows, though, it means \"don't keep other\n+ \t * processes from binding to this address while we're using it. */\n+ \treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &one,\n+ \t    (ev_socklen_t)sizeof(one));\n+ #else\n+-\treturn 0;\n++\treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char*) &one,\n++\t\t(ev_socklen_t)sizeof(one));\n+ #endif\n+ }\n+ "
      }
    ]
  },
  {
    "sha": "26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmM5YjgzNjc3OGNiYWY5YjljY2I5YjkyZTg0MWQ3YmQ2ZWEyZmRj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-02T14:18:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T08:59:19Z"
      },
      "message": "Move windows socket init to utility function",
      "tree": {
        "sha": "36f589364a3040c46914c1e038e6544bb48e4b7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36f589364a3040c46914c1e038e6544bb48e4b7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4be0b082b97062be4df20e9c45dafa577b05b07c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4be0b082b97062be4df20e9c45dafa577b05b07c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4be0b082b97062be4df20e9c45dafa577b05b07c"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 21,
      "deletions": 9
    },
    "files": [
      {
        "sha": "866c6f2d4443cd2565a3ef86255833573d932de9",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
        "patch": "@@ -301,6 +301,10 @@ int CommandLineRPC(int argc, char *argv[])\n int main(int argc, char* argv[])\n {\n     SetupEnvironment();\n+    if (!SetupNetworking()) {\n+        fprintf(stderr, \"Error: Initializing networking failed\\n\");\n+        exit(1);\n+    }\n \n     try {\n         if(!AppInitRPC(argc, argv))"
      },
      {
        "sha": "4cdbd5edaaa0d9d6293ca491913555b3d82645bc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
        "patch": "@@ -658,17 +658,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     typedef BOOL (WINAPI *PSETPROCDEPPOL)(DWORD);\n     PSETPROCDEPPOL setProcDEPPol = (PSETPROCDEPPOL)GetProcAddress(GetModuleHandleA(\"Kernel32.dll\"), \"SetProcessDEPPolicy\");\n     if (setProcDEPPol != NULL) setProcDEPPol(PROCESS_DEP_ENABLE);\n-\n-    // Initialize Windows Sockets\n-    WSADATA wsadata;\n-    int ret = WSAStartup(MAKEWORD(2,2), &wsadata);\n-    if (ret != NO_ERROR || LOBYTE(wsadata.wVersion ) != 2 || HIBYTE(wsadata.wVersion) != 2)\n-    {\n-        return InitError(strprintf(\"Error: Winsock library failed to start (WSAStartup returned error %d)\", ret));\n-    }\n #endif\n-#ifndef WIN32\n \n+    if (!SetupNetworking())\n+        return InitError(\"Error: Initializing networking failed\");\n+\n+#ifndef WIN32\n     if (GetBoolArg(\"-sysperms\", false)) {\n #ifdef ENABLE_WALLET\n         if (!GetBoolArg(\"-disablewallet\", false))"
      },
      {
        "sha": "f50d25e17a14e55063daa790b009bf751db7b181",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
        "patch": "@@ -794,6 +794,18 @@ void SetupEnvironment()\n     boost::filesystem::path::imbue(loc);\n }\n \n+bool SetupNetworking()\n+{\n+#ifdef WIN32\n+    // Initialize Windows Sockets\n+    WSADATA wsadata;\n+    int ret = WSAStartup(MAKEWORD(2,2), &wsadata);\n+    if (ret != NO_ERROR || LOBYTE(wsadata.wVersion ) != 2 || HIBYTE(wsadata.wVersion) != 2)\n+        return false;\n+#endif\n+    return true;\n+}\n+\n void SetThreadPriority(int nPriority)\n {\n #ifdef WIN32"
      },
      {
        "sha": "0b2dc01ac65f397c86e69eeb3fe821f70c69b110",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
        "patch": "@@ -59,6 +59,7 @@ inline std::string _(const char* psz)\n }\n \n void SetupEnvironment();\n+bool SetupNetworking();\n \n /** Return true if log accepts specified category */\n bool LogAcceptCategory(const char* category);"
      }
    ]
  },
  {
    "sha": "88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGY4NTZhOWU3OGExNDQwZDlmZGQ4ZjlkNWFhM2NkMDM0ZDY2YmY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-08-07T14:14:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-03T12:22:57Z"
      },
      "message": "[doc] Clarify authors in assets-attribution.md",
      "tree": {
        "sha": "8c3d1c94f848a3c628e10ad61039aae714423f61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c3d1c94f848a3c628e10ad61039aae714423f61"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df9c2ee1c9c02b79ccbb6cbae03096c3f9af23c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df9c2ee1c9c02b79ccbb6cbae03096c3f9af23c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df9c2ee1c9c02b79ccbb6cbae03096c3f9af23c7"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 28,
      "deletions": 25
    },
    "files": [
      {
        "sha": "460c1f8e2edc7e08eba3b49e60c41ded9b0c2434",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 28,
        "deletions": 25,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
        "patch": "@@ -11,57 +11,60 @@ The following is a list of assets used in the bitcoin source and their proper at\n \n ### Assets Used\n     src/qt/res/icons/add.png\n-    src/qt/res/icons/address-book.png,\n+    src/qt/res/icons/address-book.png\n     src/qt/res/icons/configure.png\n     src/qt/res/icons/debugwindow.png\n-    src/qt/res/icons/edit.png,\n-    src/qt/res/icons/exitcopy.png\n-    src/qt/res/icons/editpaste.png,\n+    src/qt/res/icons/edit.png\n+    src/qt/res/icons/editcopy.png\n+    src/qt/res/icons/editpaste.png\n     src/qt/res/icons/export.png\n-    src/qt/res/icons/eye.png,\n+    src/qt/res/icons/eye.png\n     src/qt/res/icons/filesave.png\n-    src/qt/res/icons/history.png,\n+    src/qt/res/icons/history.png\n     src/qt/res/icons/info.png\n-    src/qt/res/icons/key.png,\n+    src/qt/res/icons/key.png\n     src/qt/res/icons/lock_*.png\n-    src/qt/res/icons/open.png,\n+    src/qt/res/icons/open.png\n     src/qt/res/icons/overview.png\n-    src/qt/res/icons/quit.png,\n+    src/qt/res/icons/quit.png\n     src/qt/res/icons/receive.png\n-    src/qt/res/icons/remove.png,\n+    src/qt/res/icons/remove.png\n     src/qt/res/icons/send.png\n-    src/qt/res/icons/synced.png,\n+    src/qt/res/icons/synced.png\n     src/qt/res/icons/transaction*.png\n-    src/qt/res/icons/tx_output.png,\n+    src/qt/res/icons/tx_output.png\n     src/qt/res/icons/warning.png\n \n Other\n -----------------------\n \n ### Info\n * Designer: Jonas Schnelli, Bitboy, Stephen Hutchings, Marco Falke\n-* Bitcoin Icon: Based on the original bitcoin logo from Bitboy\n-* Network connection icon: Inspired by flow-merge.svg from Stephen Hutchings\n-* Some icons are based on Stephan Hutchings Typicons\n+* Bitcoin icon: Based on the original bitcoin logo from Bitboy\n+* Network connection icons: Marco Falke, inspired by flow-merge.svg from Stephen Hutchings\n+* Transaction-mined icon: Jonas Schnelli\n+* Other icons are based on Stephan Hutchings Typicons\n * License: MIT\n \n ### Assets Used\n     src/qt/res/icons/about.png\n-    src/qt/res/icons/about_qt.png,\n+    src/qt/res/icons/about_qt.png\n     src/qt/res/icons/bitcoin.icns\n-    src/qt/res/icons/bitcoin.ico,\n+    src/qt/res/icons/bitcoin.ico\n     src/qt/res/icons/bitcoin.png\n-    src/qt/res/icons/clock*.png,\n+    src/qt/res/icons/clock*.png\n     src/qt/res/icons/connect*.png\n-    src/qt/res/icons/eye_minus.png,\n+    src/qt/res/icons/eye_minus.png\n     src/qt/res/icons/eye_plus.png\n-    src/qt/res/icons/verify.png,\n+    src/qt/res/icons/verify.png\n     src/qt/res/icons/tx_inout.png\n-    src/qt/res/icons/tx_input.png,\n-    src/qt/res/src/bitcoin.svg,\n-    src/qt/res/src/clock*.svg\n-    src/qt/res/src/connect*.svg,\n+    src/qt/res/icons/tx_input.png\n+    src/qt/res/icons/tx_mined.png\n+    src/qt/res/src/bitcoin.svg\n+    src/qt/res/src/clock_*.svg\n+    src/qt/res/src/connect-*.svg\n     src/qt/res/src/mine.svg\n     src/qt/res/src/qt.svg\n-    src/qt/res/src/tx*.svg,\n+    src/qt/res/src/tx_*.svg\n+    src/qt/res/src/transaction0.svg\n     src/qt/res/src/verify.svg"
      }
    ]
  },
  {
    "sha": "0c02a75787fe14115c4283290c1d37fbf2bee67e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzAyYTc1Nzg3ZmUxNDExNWM0MjgzMjkwYzFkMzdmYmYyYmVlNjdl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T15:01:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T15:03:46Z"
      },
      "message": "Merge pull request #6627\n\n88f856a [doc] Clarify authors in assets-attribution.md (MarcoFalke)",
      "tree": {
        "sha": "cc7f6f0061af7d687f00ce706f5a0182511d51b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc7f6f0061af7d687f00ce706f5a0182511d51b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c02a75787fe14115c4283290c1d37fbf2bee67e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6GFSAAoJEHSBCwEjRsmmlIoH/3sLh5xChymRGhnMfxkzG9XX\nr+VUOGUv2YGUMT5dwxI6mXIIMFzIW9fR77Dv+wvIsQlfZOpod51CE+eA2xiHmTtU\nbVp5kVZCyQt5HN1KbXMNsAwxioS9Of/4SaJu/2I3WRLx1WZ6I4XdvkodaPzsCrSE\nEXBZ0JlmVN8s2gTB+m/JI/T4C6xrNXEdwhnFNhIeSp9INnfhSvQ6JCrAAM9QDA5g\n49Mvf4BDfCtpOYehkBvfgKqd/3FqXqRzg3sV+vFKzPis0OwhZ6eznflipkm3wlBA\nLeXPe3SOaJSNg/WdkenZtFyogDZa7bgKa8bbKWXAVfh9pWg7h4FzcLuyhQGruAw=\n=Mq8l\n-----END PGP SIGNATURE-----",
        "payload": "tree cc7f6f0061af7d687f00ce706f5a0182511d51b4\nparent 3932ff50c563df19c14e9987f2297d9f99a299ac\nparent 88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441292470 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441292626 +0200\n\nMerge pull request #6627\n\n88f856a [doc] Clarify authors in assets-attribution.md (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c02a75787fe14115c4283290c1d37fbf2bee67e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c02a75787fe14115c4283290c1d37fbf2bee67e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c02a75787fe14115c4283290c1d37fbf2bee67e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3932ff50c563df19c14e9987f2297d9f99a299ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3932ff50c563df19c14e9987f2297d9f99a299ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3932ff50c563df19c14e9987f2297d9f99a299ac"
      },
      {
        "sha": "88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88f856a9e78a1440d9fdd8f9d5aa3cd034d66bf9"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 28,
      "deletions": 25
    },
    "files": [
      {
        "sha": "460c1f8e2edc7e08eba3b49e60c41ded9b0c2434",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 28,
        "deletions": 25,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c02a75787fe14115c4283290c1d37fbf2bee67e/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c02a75787fe14115c4283290c1d37fbf2bee67e/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=0c02a75787fe14115c4283290c1d37fbf2bee67e",
        "patch": "@@ -11,57 +11,60 @@ The following is a list of assets used in the bitcoin source and their proper at\n \n ### Assets Used\n     src/qt/res/icons/add.png\n-    src/qt/res/icons/address-book.png,\n+    src/qt/res/icons/address-book.png\n     src/qt/res/icons/configure.png\n     src/qt/res/icons/debugwindow.png\n-    src/qt/res/icons/edit.png,\n-    src/qt/res/icons/exitcopy.png\n-    src/qt/res/icons/editpaste.png,\n+    src/qt/res/icons/edit.png\n+    src/qt/res/icons/editcopy.png\n+    src/qt/res/icons/editpaste.png\n     src/qt/res/icons/export.png\n-    src/qt/res/icons/eye.png,\n+    src/qt/res/icons/eye.png\n     src/qt/res/icons/filesave.png\n-    src/qt/res/icons/history.png,\n+    src/qt/res/icons/history.png\n     src/qt/res/icons/info.png\n-    src/qt/res/icons/key.png,\n+    src/qt/res/icons/key.png\n     src/qt/res/icons/lock_*.png\n-    src/qt/res/icons/open.png,\n+    src/qt/res/icons/open.png\n     src/qt/res/icons/overview.png\n-    src/qt/res/icons/quit.png,\n+    src/qt/res/icons/quit.png\n     src/qt/res/icons/receive.png\n-    src/qt/res/icons/remove.png,\n+    src/qt/res/icons/remove.png\n     src/qt/res/icons/send.png\n-    src/qt/res/icons/synced.png,\n+    src/qt/res/icons/synced.png\n     src/qt/res/icons/transaction*.png\n-    src/qt/res/icons/tx_output.png,\n+    src/qt/res/icons/tx_output.png\n     src/qt/res/icons/warning.png\n \n Other\n -----------------------\n \n ### Info\n * Designer: Jonas Schnelli, Bitboy, Stephen Hutchings, Marco Falke\n-* Bitcoin Icon: Based on the original bitcoin logo from Bitboy\n-* Network connection icon: Inspired by flow-merge.svg from Stephen Hutchings\n-* Some icons are based on Stephan Hutchings Typicons\n+* Bitcoin icon: Based on the original bitcoin logo from Bitboy\n+* Network connection icons: Marco Falke, inspired by flow-merge.svg from Stephen Hutchings\n+* Transaction-mined icon: Jonas Schnelli\n+* Other icons are based on Stephan Hutchings Typicons\n * License: MIT\n \n ### Assets Used\n     src/qt/res/icons/about.png\n-    src/qt/res/icons/about_qt.png,\n+    src/qt/res/icons/about_qt.png\n     src/qt/res/icons/bitcoin.icns\n-    src/qt/res/icons/bitcoin.ico,\n+    src/qt/res/icons/bitcoin.ico\n     src/qt/res/icons/bitcoin.png\n-    src/qt/res/icons/clock*.png,\n+    src/qt/res/icons/clock*.png\n     src/qt/res/icons/connect*.png\n-    src/qt/res/icons/eye_minus.png,\n+    src/qt/res/icons/eye_minus.png\n     src/qt/res/icons/eye_plus.png\n-    src/qt/res/icons/verify.png,\n+    src/qt/res/icons/verify.png\n     src/qt/res/icons/tx_inout.png\n-    src/qt/res/icons/tx_input.png,\n-    src/qt/res/src/bitcoin.svg,\n-    src/qt/res/src/clock*.svg\n-    src/qt/res/src/connect*.svg,\n+    src/qt/res/icons/tx_input.png\n+    src/qt/res/icons/tx_mined.png\n+    src/qt/res/src/bitcoin.svg\n+    src/qt/res/src/clock_*.svg\n+    src/qt/res/src/connect-*.svg\n     src/qt/res/src/mine.svg\n     src/qt/res/src/qt.svg\n-    src/qt/res/src/tx*.svg,\n+    src/qt/res/src/tx_*.svg\n+    src/qt/res/src/transaction0.svg\n     src/qt/res/src/verify.svg"
      }
    ]
  },
  {
    "sha": "5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTFlYzNiNWJlOTVjZTRhYjg3MDc5Njk4M2RhN2I1NjE1NGJiZmQ2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T15:19:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T15:19:50Z"
      },
      "message": "Merge pull request #6611\n\n5b85126 Update build-unix.md (Altoidnerd)",
      "tree": {
        "sha": "90dca46e7a96a61d68c4da74a166686be0d85a4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90dca46e7a96a61d68c4da74a166686be0d85a4d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6GUWAAoJEHSBCwEjRsmmEyQH/AmSK/mNbn9ueuLhstSibi7d\nMR62sngWEGaCV+H0i6116YvrFloJjIIwbgM93psZTybJumiBQYgbpgxzaySJlc1n\nSW5T/wLc1tpXu+lihEDubSZmh2dh5JVKRYetSVO74OD1ivjD7SOZGpzlsYe5SpZv\nG+nKDxrubBKsU0kURcyzGBMcMC+e5WGRZjR7O5xHbWYR2Vyr1RFMfCHgtoxxaubG\n4PFayXJUzGLpL0roJpinr7fSYf4uPQeT2F1/Z3FUEEL2YVfCi4mbGpr6A/NaMxMA\nlZEdpjI1dyoNMNxr4mYxTEg5jD0h2rIaFx3P3TrpYAezRorUzjIYZvgf0f/63Bw=\n=Q9ZY\n-----END PGP SIGNATURE-----",
        "payload": "tree 90dca46e7a96a61d68c4da74a166686be0d85a4d\nparent 0c02a75787fe14115c4283290c1d37fbf2bee67e\nparent 5b85126863dc788a6d55e57552f27841ff00abdb\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441293584 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441293590 +0200\n\nMerge pull request #6611\n\n5b85126 Update build-unix.md (Altoidnerd)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e1ec3b5be95ce4ab870796983da7b56154bbfd6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c02a75787fe14115c4283290c1d37fbf2bee67e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c02a75787fe14115c4283290c1d37fbf2bee67e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c02a75787fe14115c4283290c1d37fbf2bee67e"
      },
      {
        "sha": "5b85126863dc788a6d55e57552f27841ff00abdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b85126863dc788a6d55e57552f27841ff00abdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b85126863dc788a6d55e57552f27841ff00abdb"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "95e501ac6967b25e8e30eea666d9f77b7386ac56",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e1ec3b5be95ce4ab870796983da7b56154bbfd6/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e1ec3b5be95ce4ab870796983da7b56154bbfd6/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
        "patch": "@@ -154,7 +154,8 @@ make install\n \n # Configure Bitcoin Core to use our own-built instance of BDB\n cd $BITCOIN_ROOT\n-./configure (other args...) LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+./autogen.sh\n+./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n \n **Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below)."
      }
    ]
  },
  {
    "sha": "69dc5b51a023a23ae66017f05fa43a0203f3c627",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWRjNWI1MWEwMjNhMjNhZTY2MDE3ZjA1ZmE0M2EwMjAzZjNjNjI3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T16:12:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T16:27:24Z"
      },
      "message": "Merge pull request #6374\n\n027de94 Use network group instead of CNetAddr in final pass to select node to disconnect (Patrick Strateman)\n000c18a Fix comment (Patrick Strateman)\nfed3094 Acquire cs_vNodes before changing refrence counts (Patrick Strateman)\n69ee1aa CNodeRef copy constructor and assignment operator (Patrick Strateman)\ndc81dd0 Return false early if vEvictionCandidates is empty (Patrick Strateman)\n17f3533 Better support for nodes with non-standard nMaxConnections (Patrick Strateman)\n1317cd1 RAII wrapper for CNode* (Patrick Strateman)\ndf23937 Add comments to AttemptToEvictConnection (Patrick Strateman)\na8f6e45 Remove redundant whiteconnections option (Patrick Strateman)\nb105ba3 Prefer to disconnect peers in favor of whitelisted peers (Patrick Strateman)\n2c70153 AttemptToEvictConnection (Patrick Strateman)\n4bac601 Record nMinPingUsecTime (Patrick Strateman)\nae037b7 Refactor: Move failure conditions to the top of AcceptConnection (Patrick Strateman)\n1ef4817 Refactor: Bail early in AcceptConnection (Patrick Strateman)\n541a1dd Refactor: AcceptConnection (Patrick Strateman)",
      "tree": {
        "sha": "0caade1f90630a930a73e5dd61293f31e18e0b08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0caade1f90630a930a73e5dd61293f31e18e0b08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6HTsAAoJEHSBCwEjRsmmjtsH/RkL48tNKQHyyWUX69764WUQ\nnZVNZWKGKWtPb17Vp/oUrTxFjMFCjVUqHsmcQs0k/iKLIcNoeSpSfBLsKUiA4d7A\nmaQfuStSJ44iOtycDaGxNNNKtO6xG9U02PcQUArsURVyLrWSHCn+PgW/4OLZRCWt\nZ02kJNjvRGIv6rHy7oFB1NObxiGR8Ed37EdYsmq0HJJXBwunFIjI1wYMqbFuyCqZ\ny9foqXwpmVLbvbJfRpOYpZzDWlbQWcTQxwrU8DDKJy/WNGhOipqzfvAaqs/uNrAo\nWMxBkfy7TA5fJRegfy/wq962BmHOjwhWd8z2EEKAsI71hENcyluZxH2d6oweaEE=\n=xiEN\n-----END PGP SIGNATURE-----",
        "payload": "tree 0caade1f90630a930a73e5dd61293f31e18e0b08\nparent 5e1ec3b5be95ce4ab870796983da7b56154bbfd6\nparent 027de94e1fba5484aed2393afd89edbaaffdb0eb\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441296730 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441297644 +0200\n\nMerge pull request #6374\n\n027de94 Use network group instead of CNetAddr in final pass to select node to disconnect (Patrick Strateman)\n000c18a Fix comment (Patrick Strateman)\nfed3094 Acquire cs_vNodes before changing refrence counts (Patrick Strateman)\n69ee1aa CNodeRef copy constructor and assignment operator (Patrick Strateman)\ndc81dd0 Return false early if vEvictionCandidates is empty (Patrick Strateman)\n17f3533 Better support for nodes with non-standard nMaxConnections (Patrick Strateman)\n1317cd1 RAII wrapper for CNode* (Patrick Strateman)\ndf23937 Add comments to AttemptToEvictConnection (Patrick Strateman)\na8f6e45 Remove redundant whiteconnections option (Patrick Strateman)\nb105ba3 Prefer to disconnect peers in favor of whitelisted peers (Patrick Strateman)\n2c70153 AttemptToEvictConnection (Patrick Strateman)\n4bac601 Record nMinPingUsecTime (Patrick Strateman)\nae037b7 Refactor: Move failure conditions to the top of AcceptConnection (Patrick Strateman)\n1ef4817 Refactor: Bail early in AcceptConnection (Patrick Strateman)\n541a1dd Refactor: AcceptConnection (Patrick Strateman)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69dc5b51a023a23ae66017f05fa43a0203f3c627",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e1ec3b5be95ce4ab870796983da7b56154bbfd6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e1ec3b5be95ce4ab870796983da7b56154bbfd6"
      },
      {
        "sha": "027de94e1fba5484aed2393afd89edbaaffdb0eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027de94e1fba5484aed2393afd89edbaaffdb0eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/027de94e1fba5484aed2393afd89edbaaffdb0eb"
      }
    ],
    "stats": {
      "total": 319,
      "additions": 220,
      "deletions": 99
    },
    "files": [
      {
        "sha": "3aebe4f7be2f76cbb75aedd2cbb734c7256294d7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "patch": "@@ -335,7 +335,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitebind=<addr>\", _(\"Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\"));\n     strUsage += HelpMessageOpt(\"-whitelist=<netmask>\", _(\"Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.\") +\n         \" \" + _(\"Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway\"));\n-    strUsage += HelpMessageOpt(\"-whiteconnections=<n>\", strprintf(_(\"Reserve this many inbound connections for whitelisted peers (default: %d)\"), 0));\n \n #ifdef ENABLE_WALLET\n     strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n@@ -754,25 +753,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     int nBind = std::max((int)mapArgs.count(\"-bind\") + (int)mapArgs.count(\"-whitebind\"), 1);\n     int nUserMaxConnections = GetArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n-    int nUserWhiteConnections = GetArg(\"-whiteconnections\", 0);\n-    nWhiteConnections = std::max(nUserWhiteConnections, 0);\n-\n-    if ((mapArgs.count(\"-whitelist\")) || (mapArgs.count(\"-whitebind\"))) {\n-        if (!(mapArgs.count(\"-maxconnections\"))) {\n-            // User is using whitelist feature,\n-            // but did not specify -maxconnections parameter.\n-            // Silently increase the default to compensate,\n-            // so that the whitelist connection reservation feature\n-            // does not inadvertently reduce the default\n-            // inbound connection capacity of the network.\n-            nMaxConnections += nWhiteConnections;\n-        }\n-    } else {\n-        // User not using whitelist feature.\n-        // Silently disable connection reservation,\n-        // for the same reason as above.\n-        nWhiteConnections = 0;\n-    }\n \n     // Trim requested connection counts, to fit into system limitations\n     nMaxConnections = std::max(std::min(nMaxConnections, (int)(FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS)), 0);\n@@ -784,13 +764,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (nMaxConnections < nUserMaxConnections)\n         InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\"), nUserMaxConnections, nMaxConnections));\n \n-    // Connection capacity is prioritized in this order:\n-    // outbound connections (hardcoded to 8),\n-    // then whitelisted connections,\n-    // then non-whitelisted connections get whatever's left (if any).\n-    if ((nWhiteConnections > 0) && (nWhiteConnections >= (nMaxConnections - 8)))\n-        InitWarning(strprintf(_(\"All non-whitelisted incoming connections will be dropped, because -whiteconnections is %d and -maxconnections is only %d.\"), nWhiteConnections, nMaxConnections));\n-\n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n     fDebug = !mapMultiArgs[\"-debug\"].empty();\n@@ -968,8 +941,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     LogPrintf(\"Using data directory %s\\n\", strDataDir);\n     LogPrintf(\"Using config file %s\\n\", GetConfigFile().string());\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n-    if (nWhiteConnections > 0)\n-        LogPrintf(\"Reserving %i of these connections for whitelisted inbound peers\\n\", nWhiteConnections);\n     std::ostringstream strErrors;\n \n     LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);"
      },
      {
        "sha": "35fbec666594c6bf564442bd36d83d348395cbba",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "patch": "@@ -4522,6 +4522,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     if (pingUsecTime > 0) {\n                         // Successful ping time measurement, replace previous\n                         pfrom->nPingUsecTime = pingUsecTime;\n+                        pfrom->nMinPingUsecTime = std::min(pfrom->nMinPingUsecTime, pingUsecTime);\n                     } else {\n                         // This should never happen\n                         sProblem = \"Timing mishap\";"
      },
      {
        "sha": "4909d5fd408711b188ada68fd1ddfe0b3f2d0458",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 217,
        "deletions": 59,
        "changes": 276,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "patch": "@@ -81,7 +81,6 @@ uint64_t nLocalHostNonce = 0;\n static std::vector<ListenSocket> vhListenSocket;\n CAddrMan addrman;\n int nMaxConnections = DEFAULT_MAX_PEER_CONNECTIONS;\n-int nWhiteConnections = 0;\n bool fAddressesInitialized = false;\n std::string strSubVersion;\n \n@@ -776,6 +775,222 @@ void SocketSendData(CNode *pnode)\n \n static list<CNode*> vNodesDisconnected;\n \n+class CNodeRef {\n+public:\n+    CNodeRef(CNode *pnode) : _pnode(pnode) {\n+        LOCK(cs_vNodes);\n+        _pnode->AddRef();\n+    }\n+\n+    ~CNodeRef() {\n+        LOCK(cs_vNodes);\n+        _pnode->Release();\n+    }\n+\n+    CNode& operator *() const {return *_pnode;};\n+    CNode* operator ->() const {return _pnode;};\n+\n+    CNodeRef& operator =(const CNodeRef& other)\n+    {\n+        if (this != &other) {\n+            LOCK(cs_vNodes);\n+\n+            _pnode->Release();\n+            _pnode = other._pnode;\n+            _pnode->AddRef();\n+        }\n+        return *this;\n+    }\n+\n+    CNodeRef(const CNodeRef& other):\n+        _pnode(other._pnode)\n+    {\n+        LOCK(cs_vNodes);\n+        _pnode->AddRef();\n+    }\n+private:\n+    CNode *_pnode;\n+};\n+\n+static bool ReverseCompareNodeMinPingTime(const CNodeRef &a, const CNodeRef &b)\n+{\n+    return a->nMinPingUsecTime > b->nMinPingUsecTime;\n+}\n+\n+static bool ReverseCompareNodeTimeConnected(const CNodeRef &a, const CNodeRef &b)\n+{\n+    return a->nTimeConnected > b->nTimeConnected;\n+}\n+\n+class CompareNetGroupKeyed\n+{\n+    std::vector<unsigned char> vchSecretKey;\n+public:\n+    CompareNetGroupKeyed()\n+    {\n+        vchSecretKey.resize(32, 0);\n+        GetRandBytes(vchSecretKey.data(), vchSecretKey.size());\n+    }\n+\n+    bool operator()(const CNodeRef &a, const CNodeRef &b)\n+    {\n+        std::vector<unsigned char> vchGroupA, vchGroupB;\n+        CSHA256 hashA, hashB;\n+        std::vector<unsigned char> vchA(32), vchB(32);\n+\n+        vchGroupA = a->addr.GetGroup();\n+        vchGroupB = b->addr.GetGroup();\n+\n+        hashA.Write(begin_ptr(vchGroupA), vchGroupA.size());\n+        hashB.Write(begin_ptr(vchGroupB), vchGroupB.size());\n+\n+        hashA.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+        hashB.Write(begin_ptr(vchSecretKey), vchSecretKey.size());\n+\n+        hashA.Finalize(begin_ptr(vchA));\n+        hashB.Finalize(begin_ptr(vchB));\n+\n+        return vchA < vchB;\n+    }\n+};\n+\n+static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n+    std::vector<CNodeRef> vEvictionCandidates;\n+    {\n+        LOCK(cs_vNodes);\n+\n+        BOOST_FOREACH(CNode *node, vNodes) {\n+            if (node->fWhitelisted)\n+                continue;\n+            if (!node->fInbound)\n+                continue;\n+            if (node->fDisconnect)\n+                continue;\n+            if (node->addr.IsLocal())\n+                continue;\n+            vEvictionCandidates.push_back(CNodeRef(node));\n+        }\n+    }\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n+    // Protect connections with certain characteristics\n+\n+    // Deterministically select 4 peers to protect by netgroup.\n+    // An attacker cannot predict which netgroups will be protected.\n+    static CompareNetGroupKeyed comparerNetGroupKeyed;\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), comparerNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n+    // Protect the 8 nodes with the best ping times.\n+    // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n+    // Protect the half of the remaining nodes which have been connected the longest.\n+    // This replicates the existing implicit behavior.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - static_cast<int>(vEvictionCandidates.size() / 2), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n+    // Identify the network group with the most connections\n+    std::vector<unsigned char> naMostConnections;\n+    unsigned int nMostConnections = 0;\n+    std::map<std::vector<unsigned char>, std::vector<CNodeRef> > mapAddrCounts;\n+    BOOST_FOREACH(const CNodeRef &node, vEvictionCandidates) {\n+        mapAddrCounts[node->addr.GetGroup()].push_back(node);\n+\n+        if (mapAddrCounts[node->addr.GetGroup()].size() > nMostConnections) {\n+            nMostConnections = mapAddrCounts[node->addr.GetGroup()].size();\n+            naMostConnections = node->addr.GetGroup();\n+        }\n+    }\n+\n+    // Reduce to the network group with the most connections\n+    vEvictionCandidates = mapAddrCounts[naMostConnections];\n+\n+    // Do not disconnect peers if there is only 1 connection from their network group\n+    if (vEvictionCandidates.size() <= 1)\n+        // unless we prefer the new connection (for whitelisted peers)\n+        if (!fPreferNewConnection)\n+            return false;\n+\n+    // Disconnect the most recent connection from the network group with the most connections\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates[0]->fDisconnect = true;\n+\n+    return true;\n+}\n+\n+static void AcceptConnection(const ListenSocket& hListenSocket) {\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n+    CAddress addr;\n+    int nInbound = 0;\n+    int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n+\n+    if (hSocket != INVALID_SOCKET)\n+        if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+            LogPrintf(\"Warning: Unknown socket family\\n\");\n+\n+    bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);\n+    {\n+        LOCK(cs_vNodes);\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+            if (pnode->fInbound)\n+                nInbound++;\n+    }\n+\n+    if (hSocket == INVALID_SOCKET)\n+    {\n+        int nErr = WSAGetLastError();\n+        if (nErr != WSAEWOULDBLOCK)\n+            LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n+        return;\n+    }\n+\n+    if (!IsSelectableSocket(hSocket))\n+    {\n+        LogPrintf(\"connection from %s dropped: non-selectable socket\\n\", addr.ToString());\n+        CloseSocket(hSocket);\n+        return;\n+    }\n+\n+    if (CNode::IsBanned(addr) && !whitelisted)\n+    {\n+        LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+        CloseSocket(hSocket);\n+        return;\n+    }\n+\n+    if (nInbound >= nMaxInbound)\n+    {\n+        if (!AttemptToEvictConnection(whitelisted)) {\n+            // No connection to evict, disconnect the new connection\n+            LogPrint(\"net\", \"failed to find an eviction candidate - connection dropped (full)\\n\");\n+            CloseSocket(hSocket);\n+            return;\n+        }\n+    }\n+\n+    CNode* pnode = new CNode(hSocket, addr, \"\", true);\n+    pnode->AddRef();\n+    pnode->fWhitelisted = whitelisted;\n+\n+    LogPrint(\"net\", \"connection from %s accepted\\n\", addr.ToString());\n+\n+    {\n+        LOCK(cs_vNodes);\n+        vNodes.push_back(pnode);\n+    }\n+}\n+\n void ThreadSocketHandler()\n {\n     unsigned int nPrevNodeCount = 0;\n@@ -933,64 +1148,7 @@ void ThreadSocketHandler()\n         {\n             if (hListenSocket.socket != INVALID_SOCKET && FD_ISSET(hListenSocket.socket, &fdsetRecv))\n             {\n-                struct sockaddr_storage sockaddr;\n-                socklen_t len = sizeof(sockaddr);\n-                SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n-                CAddress addr;\n-                int nInbound = 0;\n-                int nMaxInbound = nMaxConnections - MAX_OUTBOUND_CONNECTIONS;\n-\n-                if (hSocket != INVALID_SOCKET)\n-                    if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n-                        LogPrintf(\"Warning: Unknown socket family\\n\");\n-\n-                bool whitelisted = hListenSocket.whitelisted || CNode::IsWhitelistedRange(addr);\n-                {\n-                    LOCK(cs_vNodes);\n-                    BOOST_FOREACH(CNode* pnode, vNodes)\n-                        if (pnode->fInbound)\n-                            nInbound++;\n-                }\n-\n-                if (hSocket == INVALID_SOCKET)\n-                {\n-                    int nErr = WSAGetLastError();\n-                    if (nErr != WSAEWOULDBLOCK)\n-                        LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n-                }\n-                else if (!IsSelectableSocket(hSocket))\n-                {\n-                    LogPrintf(\"connection from %s dropped: non-selectable socket\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n-                }\n-                else if (nInbound >= nMaxInbound)\n-                {\n-                    LogPrint(\"net\", \"connection from %s dropped (full)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n-                }\n-                else if (!whitelisted && (nInbound >= (nMaxInbound - nWhiteConnections)))\n-                {\n-                    LogPrint(\"net\", \"connection from %s dropped (non-whitelisted)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n-                }\n-                else if (CNode::IsBanned(addr) && !whitelisted)\n-                {\n-                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n-                    CloseSocket(hSocket);\n-                }\n-                else\n-                {\n-                    CNode* pnode = new CNode(hSocket, addr, \"\", true);\n-                    pnode->AddRef();\n-                    pnode->fWhitelisted = whitelisted;\n-\n-                    LogPrint(\"net\", \"connection from %s accepted\\n\", addr.ToString());\n-\n-                    {\n-                        LOCK(cs_vNodes);\n-                        vNodes.push_back(pnode);\n-                    }\n-                }\n+                AcceptConnection(hListenSocket);\n             }\n         }\n "
      },
      {
        "sha": "f370bf1ff4a00c0c7c074d0f9d034ca3b7f0f165",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 11,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69dc5b51a023a23ae66017f05fa43a0203f3c627/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "patch": "@@ -143,19 +143,8 @@ extern uint64_t nLocalServices;\n extern uint64_t nLocalHostNonce;\n extern CAddrMan addrman;\n \n-// The allocation of connections against the maximum allowed (nMaxConnections)\n-// is prioritized as follows:\n-// 1st: Outbound connections (MAX_OUTBOUND_CONNECTIONS)\n-// 2nd: Inbound connections from whitelisted peers (nWhiteConnections)\n-// 3rd: Inbound connections from non-whitelisted peers\n-// Thus, the number of connection slots for the general public to use is:\n-// nMaxConnections - (MAX_OUTBOUND_CONNECTIONS + nWhiteConnections)\n-// Any additional inbound connections beyond limits will be immediately closed\n-\n /** Maximum number of connections to simultaneously allow (aka connection slots) */\n extern int nMaxConnections;\n-/** Number of connection slots to reserve for inbound from whitelisted peers */\n-extern int nWhiteConnections;\n \n extern std::vector<CNode*> vNodes;\n extern CCriticalSection cs_vNodes;\n@@ -395,6 +384,8 @@ class CNode\n     int64_t nPingUsecStart;\n     // Last measured round-trip time.\n     int64_t nPingUsecTime;\n+    // Best measured round-trip time.\n+    int64_t nMinPingUsecTime;\n     // Whether a ping is requested.\n     bool fPingQueued;\n "
      }
    ]
  },
  {
    "sha": "9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTI0YzRkMzVjYjZlYzRiZDdiZWNmMWQ5MzhkMjFjNTM2NjY5ZDFm",
    "commit": {
      "author": {
        "name": "Tom Harding",
        "email": "tomh@thinlink.com",
        "date": "2015-08-24T21:02:24Z"
      },
      "committer": {
        "name": "Tom Harding",
        "email": "tomh@thinlink.com",
        "date": "2015-09-03T17:16:59Z"
      },
      "message": "In (strCommand == \"tx\"), return if AlreadyHave()\n\nThe main effect is to exit processing for recently-rejected hashes,\nin case they are pushed to us without prior advertisement.  This\nbehavior was seen in the wild.\n\nAn additional effect is to do early checks for mempool or mapOrphan\nexistence.  No logging or nDoS tracking is needed for failures of\nthese checks.",
      "tree": {
        "sha": "43a091af6800d6e88828f0abb04c35cb34046192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43a091af6800d6e88828f0abb04c35cb34046192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f/comments",
    "author": {
      "login": "dgenr8",
      "id": 4284124,
      "node_id": "MDQ6VXNlcjQyODQxMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgenr8",
      "html_url": "https://github.com/dgenr8",
      "followers_url": "https://api.github.com/users/dgenr8/followers",
      "following_url": "https://api.github.com/users/dgenr8/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgenr8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
      "organizations_url": "https://api.github.com/users/dgenr8/orgs",
      "repos_url": "https://api.github.com/users/dgenr8/repos",
      "events_url": "https://api.github.com/users/dgenr8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgenr8/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dgenr8",
      "id": 4284124,
      "node_id": "MDQ6VXNlcjQyODQxMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgenr8",
      "html_url": "https://github.com/dgenr8",
      "followers_url": "https://api.github.com/users/dgenr8/followers",
      "following_url": "https://api.github.com/users/dgenr8/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgenr8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
      "organizations_url": "https://api.github.com/users/dgenr8/orgs",
      "repos_url": "https://api.github.com/users/dgenr8/repos",
      "events_url": "https://api.github.com/users/dgenr8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgenr8/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da9beb288d2ee35b9c70513dd18f220b2dc32f16"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6d07f83ce5cd0a3cbdf659ddc356e8f99930ad43",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9524c4d35cb6ec4bd7becf1d938d21c536669d1f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9524c4d35cb6ec4bd7becf1d938d21c536669d1f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
        "patch": "@@ -4248,6 +4248,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         mapAlreadyAskedFor.erase(inv);\n \n+        // Check for recently rejected (and do other quick existence checks)\n+        if (AlreadyHave(inv))\n+            return true;\n+\n         if (AcceptToMemoryPool(mempool, state, tx, true, &fMissingInputs))\n         {\n             mempool.check(pcoinsTip);\n@@ -4323,13 +4327,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             if (nEvicted > 0)\n                 LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n         } else {\n-            // AcceptToMemoryPool() returned false, possibly because the tx is\n-            // already in the mempool; if the tx isn't in the mempool that\n-            // means it was rejected and we shouldn't ask for it again.\n-            if (!mempool.exists(tx.GetHash())) {\n-                assert(recentRejects);\n-                recentRejects->insert(tx.GetHash());\n-            }\n+            assert(recentRejects);\n+            recentRejects->insert(tx.GetHash());\n+\n             if (pfrom->fWhitelisted) {\n                 // Always relay transactions received from whitelisted peers, even\n                 // if they were rejected from the mempool, allowing the node to"
      }
    ]
  },
  {
    "sha": "e83df075f9dbae83a55cc01128a9c97c278426fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODNkZjA3NWY5ZGJhZTgzYTU1Y2MwMTEyOGE5Yzk3YzI3ODQyNmZk",
    "commit": {
      "author": {
        "name": "Ian T",
        "email": "hello@chainquery.com",
        "date": "2015-09-03T17:29:10Z"
      },
      "committer": {
        "name": "Ian T",
        "email": "hello@chainquery.com",
        "date": "2015-09-03T17:29:10Z"
      },
      "message": "Update RPC generate help for numblocks to include required\n\nThe `generate` RPC has no default `numblocks` and a numeric value is required.",
      "tree": {
        "sha": "bf6d33c4a7cb6864dd252043ca79feab395005ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf6d33c4a7cb6864dd252043ca79feab395005ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e83df075f9dbae83a55cc01128a9c97c278426fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83df075f9dbae83a55cc01128a9c97c278426fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e83df075f9dbae83a55cc01128a9c97c278426fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83df075f9dbae83a55cc01128a9c97c278426fd/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69dc5b51a023a23ae66017f05fa43a0203f3c627"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "91de37fdccffc908b01b70c7e469821653e3fd96",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e83df075f9dbae83a55cc01128a9c97c278426fd/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e83df075f9dbae83a55cc01128a9c97c278426fd/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=e83df075f9dbae83a55cc01128a9c97c278426fd",
        "patch": "@@ -119,7 +119,7 @@ UniValue generate(const UniValue& params, bool fHelp)\n             \"generate numblocks\\n\"\n             \"\\nMine blocks immediately (before the RPC call returns)\\n\"\n             \"\\nNote: this function can only be used on the regtest network\\n\"\n-            \"1. numblocks    (numeric) How many blocks are generated immediately.\\n\"\n+            \"1. numblocks    (numeric, required) How many blocks are generated immediately.\\n\"\n             \"\\nResult\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\"\n             \"\\nExamples:\\n\""
      }
    ]
  },
  {
    "sha": "86270c816411680c33a60adfa768c7a647fce08f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjI3MGM4MTY0MTE2ODBjMzNhNjBhZGZhNzY4YzdhNjQ3ZmNlMDhm",
    "commit": {
      "author": {
        "name": "Casey Rodarmor",
        "email": "casey@rodarmor.com",
        "date": "2015-09-03T16:53:00Z"
      },
      "committer": {
        "name": "Casey Rodarmor",
        "email": "casey@rodarmor.com",
        "date": "2015-09-03T19:13:40Z"
      },
      "message": "Replace boost::reverse_lock with our own.",
      "tree": {
        "sha": "8e8e3f427d23ec88dab51cb99ab5314590997f75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e8e3f427d23ec88dab51cb99ab5314590997f75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86270c816411680c33a60adfa768c7a647fce08f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86270c816411680c33a60adfa768c7a647fce08f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/86270c816411680c33a60adfa768c7a647fce08f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86270c816411680c33a60adfa768c7a647fce08f/comments",
    "author": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da9beb288d2ee35b9c70513dd18f220b2dc32f16"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 100,
      "deletions": 2
    },
    "files": [
      {
        "sha": "456dfc32ce1e8971b62a13233acc77a6f247d852",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86270c816411680c33a60adfa768c7a647fce08f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86270c816411680c33a60adfa768c7a647fce08f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=86270c816411680c33a60adfa768c7a647fce08f",
        "patch": "@@ -119,6 +119,7 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   pubkey.h \\\n   random.h \\\n+  reverselock.h \\\n   rpcclient.h \\\n   rpcprotocol.h \\\n   rpcserver.h \\"
      },
      {
        "sha": "cc60cd92bbc0a8466e6a9fbe637772938a01a5de",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86270c816411680c33a60adfa768c7a647fce08f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86270c816411680c33a60adfa768c7a647fce08f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=86270c816411680c33a60adfa768c7a647fce08f",
        "patch": "@@ -62,6 +62,7 @@ BITCOIN_TESTS =\\\n   test/pmt_tests.cpp \\\n   test/policyestimator_tests.cpp \\\n   test/pow_tests.cpp \\\n+  test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n   test/scheduler_tests.cpp \\"
      },
      {
        "sha": "567636e16afa78748be337c382ef2154f06f4607",
        "filename": "src/reverselock.h",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86270c816411680c33a60adfa768c7a647fce08f/src/reverselock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86270c816411680c33a60adfa768c7a647fce08f/src/reverselock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/reverselock.h?ref=86270c816411680c33a60adfa768c7a647fce08f",
        "patch": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_REVERSELOCK_H\n+#define BITCOIN_REVERSELOCK_H\n+\n+/**\n+ * An RAII-style reverse lock. Unlocks on construction and locks on destruction.\n+ */\n+template<typename Lock>\n+class reverse_lock\n+{\n+public:\n+\n+    explicit reverse_lock(Lock& lock) : lock(lock) {\n+        lock.unlock();\n+    }\n+\n+    ~reverse_lock() {\n+        lock.lock();\n+    }\n+\n+private:\n+    reverse_lock(reverse_lock const&);\n+    reverse_lock& operator=(reverse_lock const&);\n+\n+    Lock& lock;\n+};\n+\n+#endif // BITCOIN_REVERSELOCK_H"
      },
      {
        "sha": "184ddc28abbff5f704f8af812451080051543e8a",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86270c816411680c33a60adfa768c7a647fce08f/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86270c816411680c33a60adfa768c7a647fce08f/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=86270c816411680c33a60adfa768c7a647fce08f",
        "patch": "@@ -4,9 +4,10 @@\n \n #include \"scheduler.h\"\n \n+#include \"reverselock.h\"\n+\n #include <assert.h>\n #include <boost/bind.hpp>\n-#include <boost/thread/reverse_lock.hpp>\n #include <utility>\n \n CScheduler::CScheduler() : nThreadsServicingQueue(0), stopRequested(false), stopWhenEmpty(false)\n@@ -69,7 +70,7 @@ void CScheduler::serviceQueue()\n             {\n                 // Unlock before calling f, so it can reschedule itself or another task\n                 // without deadlocking:\n-                boost::reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+                reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n                 f();\n             }\n         } catch (...) {"
      },
      {
        "sha": "e7e627ae0f24eb072e1461891ef281006bf0146c",
        "filename": "src/test/reverselock_tests.cpp",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86270c816411680c33a60adfa768c7a647fce08f/src/test/reverselock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86270c816411680c33a60adfa768c7a647fce08f/src/test/reverselock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/reverselock_tests.cpp?ref=86270c816411680c33a60adfa768c7a647fce08f",
        "patch": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"reverselock.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(reverselock_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(reverselock_basics)\n+{\n+    boost::mutex mutex;\n+    boost::unique_lock<boost::mutex> lock(mutex);\n+\n+    BOOST_CHECK(lock.owns_lock());\n+    {\n+        reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+        BOOST_CHECK(!lock.owns_lock());\n+    }\n+    BOOST_CHECK(lock.owns_lock());\n+}\n+\n+BOOST_AUTO_TEST_CASE(reverselock_errors)\n+{\n+    boost::mutex mutex;\n+    boost::unique_lock<boost::mutex> lock(mutex);\n+\n+    // Make sure trying to reverse lock an unlocked lock fails\n+    lock.unlock();\n+\n+    BOOST_CHECK(!lock.owns_lock());\n+\n+    bool failed = false;\n+    try {\n+        reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+    } catch(...) {\n+        failed = true;\n+    }\n+\n+    BOOST_CHECK(failed);\n+    BOOST_CHECK(!lock.owns_lock());\n+\n+    // Make sure trying to lock a lock after it has been reverse locked fails\n+    failed = false;\n+    bool locked = false;\n+\n+    lock.lock();\n+    BOOST_CHECK(lock.owns_lock());\n+\n+    try {\n+        reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+        lock.lock();\n+        locked = true;\n+    } catch(...) {\n+        failed = true;\n+    }\n+\n+    BOOST_CHECK(locked && failed);\n+    BOOST_CHECK(lock.owns_lock());\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "195942d58e664684be0b7bd7687106e53d6be879",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTU5NDJkNThlNjY0Njg0YmUwYjdiZDc2ODcxMDZlNTNkNmJlODc5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T19:43:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-03T19:46:08Z"
      },
      "message": "Merge pull request #6630\n\n86270c8 Replace boost::reverse_lock with our own. (Casey Rodarmor)",
      "tree": {
        "sha": "4ca1ddb5cb93dbddd93e040d313a7e5e11fe5af8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ca1ddb5cb93dbddd93e040d313a7e5e11fe5af8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/195942d58e664684be0b7bd7687106e53d6be879",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6KOAAAoJEHSBCwEjRsmm4HAH/2TDJ1ozbgkSuolpn5/qgCTR\n+yjVerPfx9AkB5ZSlV3v3UYS66GH3gr37VQJ+lkdX5IQ2fTIIwo9SGMKHWIiY+hB\nRHIc/THiHQo01ht44i6pV3zeWJ/zT29bv08fB8l//3+D2VZjxfsbDEsteYUDK0ED\nU1uN/VL1QAma2IPQRov03aldklhTQFbKbHqVlrxM4F+SE7+K7CHaxyNCgVm0JW/5\nS+9L7T8pS/mc9jlWX453k65gjswAKGe3OZfgqyS5dhH7VWFoHDZ/wDLV7pfkKk2p\n0bXmbeH0iq1p77st9692Xaaxx6N2GsnrOPWGGNzzCSpJYP4iA88sjfaFZbuo0bI=\n=JgFN\n-----END PGP SIGNATURE-----",
        "payload": "tree 4ca1ddb5cb93dbddd93e040d313a7e5e11fe5af8\nparent 69dc5b51a023a23ae66017f05fa43a0203f3c627\nparent 86270c816411680c33a60adfa768c7a647fce08f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441309392 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441309568 +0200\n\nMerge pull request #6630\n\n86270c8 Replace boost::reverse_lock with our own. (Casey Rodarmor)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/195942d58e664684be0b7bd7687106e53d6be879",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/195942d58e664684be0b7bd7687106e53d6be879",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/195942d58e664684be0b7bd7687106e53d6be879/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69dc5b51a023a23ae66017f05fa43a0203f3c627"
      },
      {
        "sha": "86270c816411680c33a60adfa768c7a647fce08f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86270c816411680c33a60adfa768c7a647fce08f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86270c816411680c33a60adfa768c7a647fce08f"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 100,
      "deletions": 2
    },
    "files": [
      {
        "sha": "456dfc32ce1e8971b62a13233acc77a6f247d852",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195942d58e664684be0b7bd7687106e53d6be879/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195942d58e664684be0b7bd7687106e53d6be879/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=195942d58e664684be0b7bd7687106e53d6be879",
        "patch": "@@ -119,6 +119,7 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   pubkey.h \\\n   random.h \\\n+  reverselock.h \\\n   rpcclient.h \\\n   rpcprotocol.h \\\n   rpcserver.h \\"
      },
      {
        "sha": "cc60cd92bbc0a8466e6a9fbe637772938a01a5de",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195942d58e664684be0b7bd7687106e53d6be879/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195942d58e664684be0b7bd7687106e53d6be879/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=195942d58e664684be0b7bd7687106e53d6be879",
        "patch": "@@ -62,6 +62,7 @@ BITCOIN_TESTS =\\\n   test/pmt_tests.cpp \\\n   test/policyestimator_tests.cpp \\\n   test/pow_tests.cpp \\\n+  test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n   test/scheduler_tests.cpp \\"
      },
      {
        "sha": "567636e16afa78748be337c382ef2154f06f4607",
        "filename": "src/reverselock.h",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195942d58e664684be0b7bd7687106e53d6be879/src/reverselock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195942d58e664684be0b7bd7687106e53d6be879/src/reverselock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/reverselock.h?ref=195942d58e664684be0b7bd7687106e53d6be879",
        "patch": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_REVERSELOCK_H\n+#define BITCOIN_REVERSELOCK_H\n+\n+/**\n+ * An RAII-style reverse lock. Unlocks on construction and locks on destruction.\n+ */\n+template<typename Lock>\n+class reverse_lock\n+{\n+public:\n+\n+    explicit reverse_lock(Lock& lock) : lock(lock) {\n+        lock.unlock();\n+    }\n+\n+    ~reverse_lock() {\n+        lock.lock();\n+    }\n+\n+private:\n+    reverse_lock(reverse_lock const&);\n+    reverse_lock& operator=(reverse_lock const&);\n+\n+    Lock& lock;\n+};\n+\n+#endif // BITCOIN_REVERSELOCK_H"
      },
      {
        "sha": "184ddc28abbff5f704f8af812451080051543e8a",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195942d58e664684be0b7bd7687106e53d6be879/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195942d58e664684be0b7bd7687106e53d6be879/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=195942d58e664684be0b7bd7687106e53d6be879",
        "patch": "@@ -4,9 +4,10 @@\n \n #include \"scheduler.h\"\n \n+#include \"reverselock.h\"\n+\n #include <assert.h>\n #include <boost/bind.hpp>\n-#include <boost/thread/reverse_lock.hpp>\n #include <utility>\n \n CScheduler::CScheduler() : nThreadsServicingQueue(0), stopRequested(false), stopWhenEmpty(false)\n@@ -69,7 +70,7 @@ void CScheduler::serviceQueue()\n             {\n                 // Unlock before calling f, so it can reschedule itself or another task\n                 // without deadlocking:\n-                boost::reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+                reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n                 f();\n             }\n         } catch (...) {"
      },
      {
        "sha": "e7e627ae0f24eb072e1461891ef281006bf0146c",
        "filename": "src/test/reverselock_tests.cpp",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195942d58e664684be0b7bd7687106e53d6be879/src/test/reverselock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195942d58e664684be0b7bd7687106e53d6be879/src/test/reverselock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/reverselock_tests.cpp?ref=195942d58e664684be0b7bd7687106e53d6be879",
        "patch": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"reverselock.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(reverselock_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(reverselock_basics)\n+{\n+    boost::mutex mutex;\n+    boost::unique_lock<boost::mutex> lock(mutex);\n+\n+    BOOST_CHECK(lock.owns_lock());\n+    {\n+        reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+        BOOST_CHECK(!lock.owns_lock());\n+    }\n+    BOOST_CHECK(lock.owns_lock());\n+}\n+\n+BOOST_AUTO_TEST_CASE(reverselock_errors)\n+{\n+    boost::mutex mutex;\n+    boost::unique_lock<boost::mutex> lock(mutex);\n+\n+    // Make sure trying to reverse lock an unlocked lock fails\n+    lock.unlock();\n+\n+    BOOST_CHECK(!lock.owns_lock());\n+\n+    bool failed = false;\n+    try {\n+        reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+    } catch(...) {\n+        failed = true;\n+    }\n+\n+    BOOST_CHECK(failed);\n+    BOOST_CHECK(!lock.owns_lock());\n+\n+    // Make sure trying to lock a lock after it has been reverse locked fails\n+    failed = false;\n+    bool locked = false;\n+\n+    lock.lock();\n+    BOOST_CHECK(lock.owns_lock());\n+\n+    try {\n+        reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+        lock.lock();\n+        locked = true;\n+    } catch(...) {\n+        failed = true;\n+    }\n+\n+    BOOST_CHECK(locked && failed);\n+    BOOST_CHECK(lock.owns_lock());\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmViNGJhMzhiZGIyZjEyMDg5ZmFmNzQ2OWI1NGVhMmE1MTQ2NTE2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-03T20:06:13Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-03T20:06:13Z"
      },
      "message": "Report minimum ping time in getpeerinfo",
      "tree": {
        "sha": "15ad0c16027372569bb4640aa3c4ddf477ab6d59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15ad0c16027372569bb4640aa3c4ddf477ab6d59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69dc5b51a023a23ae66017f05fa43a0203f3c627",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69dc5b51a023a23ae66017f05fa43a0203f3c627"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "526e2049a8de3e3403a59e86dec832e81689b27b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
        "patch": "@@ -628,6 +628,7 @@ void CNode::copyStats(CNodeStats &stats)\n \n     // Raw ping time is in microseconds, but show it to user as whole seconds (Bitcoin users should be well used to small numbers with many decimal places by now :)\n     stats.dPingTime = (((double)nPingUsecTime) / 1e6);\n+    stats.dPingMin  = (((double)nMinPingUsecTime) / 1e6);\n     stats.dPingWait = (((double)nPingUsecWait) / 1e6);\n \n     // Leave string empty if addrLocal invalid (not filled in yet)"
      },
      {
        "sha": "6842ee5edc6e224b68e1634ed18c6370b29b5b96",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
        "patch": "@@ -189,6 +189,7 @@ class CNodeStats\n     bool fWhitelisted;\n     double dPingTime;\n     double dPingWait;\n+    double dPingMin;\n     std::string addrLocal;\n };\n "
      },
      {
        "sha": "30d0ed6270fdb8ae49c05440f09d466b61404efe",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6eb4ba38bdb2f12089faf7469b54ea2a5146516/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
        "patch": "@@ -96,6 +96,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n             \"    \\\"conntime\\\": ttt,           (numeric) The connection time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"    \\\"timeoffset\\\": ttt,         (numeric) The time offset in seconds\\n\"\n             \"    \\\"pingtime\\\": n,             (numeric) ping time\\n\"\n+            \"    \\\"minping\\\": n,              (numeric) minimum observed ping time\\n\"\n             \"    \\\"pingwait\\\": n,             (numeric) ping wait\\n\"\n             \"    \\\"version\\\": v,              (numeric) The peer version, such as 7001\\n\"\n             \"    \\\"subver\\\": \\\"/Satoshi:0.8.5/\\\",  (string) The string version\\n\"\n@@ -139,6 +140,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n         obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n         obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n         obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+        obj.push_back(Pair(\"minping\", stats.dPingMin));\n         if (stats.dPingWait > 0.0)\n             obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n         obj.push_back(Pair(\"version\", stats.nVersion));"
      }
    ]
  },
  {
    "sha": "4b437b227c596f23ab8983559552b8c4910d2b17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YjQzN2IyMjdjNTk2ZjIzYWI4OTgzNTU5NTUyYjhjNDkxMGQyYjE3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T08:45:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T08:45:27Z"
      },
      "message": "Merge pull request #6631\n\ne83df07 Update RPC generate help for numblocks to include required (Ian T)",
      "tree": {
        "sha": "f13c8245fcbdb38bc9883c5c41ff34eab286e529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f13c8245fcbdb38bc9883c5c41ff34eab286e529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b437b227c596f23ab8983559552b8c4910d2b17",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6VonAAoJEHSBCwEjRsmmaUEIAJIfX/t5Z09MmEUPNhXQbTix\nZ5dHpFWfbAxMsqVvEEN3wadc85QES4qR8Xvn70DDqRBbhJsLzU0Ss53GthqfOwSE\nNS7IVgpY7oR3hRbFCyCIu23EvMveTgp1LNPL5S/IUFBzl2ptqtIrFtMhyi0E0zMT\nul2W7yezZzq6u9aXUcDSj/5a11TVmpF8yhLVZEiHx9C+UOY2WR/A5nfkQfMwmzn4\nzFjB1FZOv3mXZGHBgO/0fKIO79Mo34RpqQQfi6jTxSW6GeJ4D+vFR8AXnnIJXfHI\nOOllVqkQAsGvwHXS8Ru6Isy9BlT8QJ6u67Fey0BeYxuxOgfZFdKuoOzALjn00Dc=\n=iKjS\n-----END PGP SIGNATURE-----",
        "payload": "tree f13c8245fcbdb38bc9883c5c41ff34eab286e529\nparent 195942d58e664684be0b7bd7687106e53d6be879\nparent e83df075f9dbae83a55cc01128a9c97c278426fd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441356309 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441356327 +0200\n\nMerge pull request #6631\n\ne83df07 Update RPC generate help for numblocks to include required (Ian T)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b437b227c596f23ab8983559552b8c4910d2b17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b437b227c596f23ab8983559552b8c4910d2b17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b437b227c596f23ab8983559552b8c4910d2b17/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "195942d58e664684be0b7bd7687106e53d6be879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/195942d58e664684be0b7bd7687106e53d6be879",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/195942d58e664684be0b7bd7687106e53d6be879"
      },
      {
        "sha": "e83df075f9dbae83a55cc01128a9c97c278426fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83df075f9dbae83a55cc01128a9c97c278426fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e83df075f9dbae83a55cc01128a9c97c278426fd"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "91de37fdccffc908b01b70c7e469821653e3fd96",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b437b227c596f23ab8983559552b8c4910d2b17/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b437b227c596f23ab8983559552b8c4910d2b17/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4b437b227c596f23ab8983559552b8c4910d2b17",
        "patch": "@@ -119,7 +119,7 @@ UniValue generate(const UniValue& params, bool fHelp)\n             \"generate numblocks\\n\"\n             \"\\nMine blocks immediately (before the RPC call returns)\\n\"\n             \"\\nNote: this function can only be used on the regtest network\\n\"\n-            \"1. numblocks    (numeric) How many blocks are generated immediately.\\n\"\n+            \"1. numblocks    (numeric, required) How many blocks are generated immediately.\\n\"\n             \"\\nResult\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\"\n             \"\\nExamples:\\n\""
      }
    ]
  },
  {
    "sha": "1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTcwMGM5YjYwMTU1MmVhODM1NjdkMzJjOWYxZDZjMDdjZDhiZmNj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T08:59:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T08:59:34Z"
      },
      "message": "doc: update deps in build-unix.md after libevent\n\nAdd libevent, change usage of libssl from \"secure communication\" to\n\"crypto\" that's more accurate after RPC SSL support removed.",
      "tree": {
        "sha": "bf65a2be1a90322c1bfeb470107bf080a347d542",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf65a2be1a90322c1bfeb470107bf080a347d542"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26c9b836778cbaf9b9ccb9b92e841d7bd6ea2fdc"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5f674c8f8818c78a78860ed5a9e633b695008311",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
        "patch": "@@ -31,8 +31,9 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n- libssl      | SSL Support      | Secure communications\n- libboost    | Boost            | C++ Library\n+ libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n+ libboost    | Utility          | Library for threading, data structures, etc\n+ libevent    | Networking       | OS independent asynchronous networking\n \n Optional dependencies:\n \n@@ -57,7 +58,7 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev\n+\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n \t\n For Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n "
      }
    ]
  },
  {
    "sha": "d52802551752140cf41f0d9a225a43e84404d3e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTI4MDI1NTE3NTIxNDBjZjQxZjBkOWEyMjVhNDNlODQ0MDRkM2U5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T09:01:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T09:01:44Z"
      },
      "message": "Revert \"rpc-tests: re-enable rpc-tests for Windows\"\n\nThis reverts commit bd30c3dced21fca869a14c75081f15195762afe1.\n\nDisable windows RPC tests for now. These should be re-enabled once a\nsuitable Wine version is used on Travis.",
      "tree": {
        "sha": "fdcc38f5814b018be3b7f6a64e92e92bb73a6c5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdcc38f5814b018be3b7f6a64e92e92bb73a6c5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d52802551752140cf41f0d9a225a43e84404d3e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d52802551752140cf41f0d9a225a43e84404d3e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d52802551752140cf41f0d9a225a43e84404d3e9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e700c9b601552ea83567d32c9f1d6c07cd8bfcc"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "514bdf5640b121de18ea33fcddd328170e22c944",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d52802551752140cf41f0d9a225a43e84404d3e9/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d52802551752140cf41f0d9a225a43e84404d3e9/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=d52802551752140cf41f0d9a225a43e84404d3e9",
        "patch": "@@ -8,6 +8,11 @@ CURDIR=$(cd $(dirname \"$0\"); pwd)\n export BITCOIND=${REAL_BITCOIND}\n export BITCOINCLI=${REAL_BITCOINCLI}\n \n+if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n+  echo \"Win tests currently disabled\"\n+  exit 0\n+fi\n+\n #Run the tests\n \n testScripts=("
      }
    ]
  },
  {
    "sha": "9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWE5MDk5NGVlODVlNTQ5ZGRiZTIzYTZmMDNlMzNkMGVkY2Q1N2Iy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T09:48:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T11:06:32Z"
      },
      "message": "Merge pull request #5677\n\nd528025 Revert \"rpc-tests: re-enable rpc-tests for Windows\" (Wladimir J. van der Laan)\n1e700c9 doc: update deps in build-unix.md after libevent (Wladimir J. van der Laan)\n26c9b83 Move windows socket init to utility function (Wladimir J. van der Laan)\n4be0b08 libevent: Windows reuseaddr workaround in depends (Cory Fields)\n3a174cd Fix race condition between starting HTTP server thread and setting EventBase() (Wladimir J. van der Laan)\n6d2bc22 Document options for new HTTP/RPC server in --help (Wladimir J. van der Laan)\nbe33f3f Implement RPCTimerHandler for Qt RPC console (Wladimir J. van der Laan)\n57d85d9 doc: mention SSL support dropped for RPC in release notes (Wladimir J. van der Laan)\n40b556d evhttpd implementation (Wladimir J. van der Laan)\nee2a42b tests: GET requests cannot have request body, use POST in rest.py (Wladimir J. van der Laan)\n6e996d3 tests: fix qt payment test (Cory Fields)\n3140ef9 build: build-system changes for libevent (Wladimir J. van der Laan)\na9af234 libevent: add depends (Cory Fields)\n6a21dd5 Remove rpc_boostasiotocnetaddr test (Wladimir J. van der Laan)\n8f9301c qa: Remove -rpckeepalive tests from httpbasics (Wladimir J. van der Laan)\n51fcfc0 doc: remove documentation for rpcssl (Wladimir J. van der Laan)",
      "tree": {
        "sha": "1f5eb525df417378a8677084a5a01731bca76960",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f5eb525df417378a8677084a5a01731bca76960"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6Xs4AAoJEHSBCwEjRsmmS4oIALL1U8vPjXRBgAESBMAUKyxR\nV40O/Er5xRBXxOmTX6cF0Lvu0ZpqK5Vn/+8PeWMKxjToaTuOfeHDAZb7i7wnnJy5\nezLuyrAsBHkSRhzacZVjTJqBRT15j6IURpu4ZYRKACe/Od0eCX2TcILfUgUmqNfY\n3yHnm/MQ7LuSh1IBcsIpvES0UcjHkGwNdjTe131zQD2Ur2tUNTf1Wt2swB2NoPd2\nwgCrVo1m6g1uHdiV9niOcboLXZbp+t0rAjZ9CxyEV0Kok4qVSnXp4W3vPHBTbQwZ\nmcDIt8hCaQdAePH8cR02um35O/7BXgyXlxeOBig+lQ3O4B3W3stWk3zYz2LhBNE=\n=Pdd5\n-----END PGP SIGNATURE-----",
        "payload": "tree 1f5eb525df417378a8677084a5a01731bca76960\nparent 4b437b227c596f23ab8983559552b8c4910d2b17\nparent d52802551752140cf41f0d9a225a43e84404d3e9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441360134 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441364792 +0200\n\nMerge pull request #5677\n\nd528025 Revert \"rpc-tests: re-enable rpc-tests for Windows\" (Wladimir J. van der Laan)\n1e700c9 doc: update deps in build-unix.md after libevent (Wladimir J. van der Laan)\n26c9b83 Move windows socket init to utility function (Wladimir J. van der Laan)\n4be0b08 libevent: Windows reuseaddr workaround in depends (Cory Fields)\n3a174cd Fix race condition between starting HTTP server thread and setting EventBase() (Wladimir J. van der Laan)\n6d2bc22 Document options for new HTTP/RPC server in --help (Wladimir J. van der Laan)\nbe33f3f Implement RPCTimerHandler for Qt RPC console (Wladimir J. van der Laan)\n57d85d9 doc: mention SSL support dropped for RPC in release notes (Wladimir J. van der Laan)\n40b556d evhttpd implementation (Wladimir J. van der Laan)\nee2a42b tests: GET requests cannot have request body, use POST in rest.py (Wladimir J. van der Laan)\n6e996d3 tests: fix qt payment test (Cory Fields)\n3140ef9 build: build-system changes for libevent (Wladimir J. van der Laan)\na9af234 libevent: add depends (Cory Fields)\n6a21dd5 Remove rpc_boostasiotocnetaddr test (Wladimir J. van der Laan)\n8f9301c qa: Remove -rpckeepalive tests from httpbasics (Wladimir J. van der Laan)\n51fcfc0 doc: remove documentation for rpcssl (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b437b227c596f23ab8983559552b8c4910d2b17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b437b227c596f23ab8983559552b8c4910d2b17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b437b227c596f23ab8983559552b8c4910d2b17"
      },
      {
        "sha": "d52802551752140cf41f0d9a225a43e84404d3e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d52802551752140cf41f0d9a225a43e84404d3e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9"
      }
    ],
    "stats": {
      "total": 2655,
      "additions": 1502,
      "deletions": 1153
    },
    "files": [
      {
        "sha": "07ee28f84e69ccd5cc41afc9aaeb7360dbb81bb8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -664,6 +664,12 @@ if test x$use_pkgconfig = xyes; then\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n+      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+        if test x$TARGET_OS != xwindows; then\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n+        fi\n+      fi\n     ]\n   )\n else\n@@ -673,6 +679,14 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n+  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n+    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n+    if test x$TARGET_OS != xwindows; then\n+      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n+    fi\n+  fi\n+\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])"
      },
      {
        "sha": "1338d2f2b5c3b5dc48a36f93c5afbac330b9a065",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -96,7 +96,7 @@ _bitcoind() {\n     esac\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-wallet=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n+        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0"
      },
      {
        "sha": "62ffd7123a666eaeb140a1ec2846a0e6a3a91ad8",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -95,15 +95,6 @@\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n-# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n-# with Bitcoin -server or bitcoind\n-#rpcssl=1\n-\n-# OpenSSL settings used when rpcssl=1\n-#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-#rpcsslcertificatechainfile=server.cert\n-#rpcsslprivatekeyfile=server.pem\n-\n # Transaction Fee Changes in 0.10.0\n \n # Send transactions as zero-fee transactions if possible (default: 0)"
      },
      {
        "sha": "154b45873940c9d23b8d1fe96d516ee7b5bdf7f0",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -36,9 +36,6 @@ Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332).\n .TP\n \\fB\\-rpcconnect=\\fR<ip>\n Send commands to node running on <ip> (default: 127.0.0.1).\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections (see the Bitcoin Wiki for SSL setup instructions).\n \n .SH \"SEE ALSO\"\n \\fBbitcoind\\fP, \\fBbitcoin.conf\\fP"
      },
      {
        "sha": "05eadc94cdd441d5c3c6e32137884d43e506b4fb",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -178,18 +178,6 @@ Set maximum block size in bytes (default: 250000)\n .HP\n \\fB\\-blockprioritysize=\\fR<n> Set maximum size of high\\-priority/low\\-fee transactions in bytes (default: 27000)\n .PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatechainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n .SS \"UI options:\"\n .TP"
      },
      {
        "sha": "0cf4d991e34c90bf2d38e3fcb982c89cfee6aed6",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -46,16 +46,6 @@ Listen for RPC connections on this TCP port.\n \\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n .TP\n-\\fBrpcssl=\\fR\\fI'1'\\fR\n-Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *bitcoin* '\\-server' or *bitcoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n-.TP\n-\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n-.TP\n-\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n-.TP\n .SH MISCELLANEOUS OPTIONS\n .TP\n \\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]"
      },
      {
        "sha": "5b0f2921aa415b04663e472162bf95458d308e75",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -62,20 +62,6 @@ Allow JSON\\-RPC connections from specified IP address\n .TP\n \\fB\\-rpcconnect=\\fR<ip>\n Send commands to node running on <ip>\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n .TP\n \\-?\n This help message"
      },
      {
        "sha": "2e9be1e98ccedda520459b8d4deed2f686473746",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -0,0 +1,31 @@\n+package=libevent\n+$(package)_version=2.0.22\n+$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n+$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n+$(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n+$(package)_patches=reuseaddr.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/reuseaddr.patch\n+endef\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts_release=--disable-debug-mode\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+endef"
      },
      {
        "sha": "a0d377bb43658efc700b9ea2ecd19aa48b74beed",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -1,4 +1,4 @@\n-packages:=boost openssl\n+packages:=boost openssl libevent\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -0,0 +1,21 @@\n+--- old/evutil.c   2015-08-28 19:26:23.488765923 -0400\n++++ new/evutil.c   2015-08-28 19:27:41.392767019 -0400\n+@@ -321,15 +321,16 @@\n+ int\n+ evutil_make_listen_socket_reuseable(evutil_socket_t sock)\n+ {\n+-#ifndef WIN32\n+ \tint one = 1;\n++#ifndef WIN32\n+ \t/* REUSEADDR on Unix means, \"don't hang on to this address after the\n+ \t * listener is closed.\"  On Windows, though, it means \"don't keep other\n+ \t * processes from binding to this address while we're using it. */\n+ \treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &one,\n+ \t    (ev_socklen_t)sizeof(one));\n+ #else\n+-\treturn 0;\n++\treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char*) &one,\n++\t\t(ev_socklen_t)sizeof(one));\n+ #endif\n+ }\n+ "
      },
      {
        "sha": "e02a5e42f75120b7b5fc06e424ca9a07143250fe",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -31,8 +31,9 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n- libssl      | SSL Support      | Secure communications\n- libboost    | Boost            | C++ Library\n+ libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n+ libboost    | Utility          | Library for threading, data structures, etc\n+ libevent    | Networking       | OS independent asynchronous networking\n \n Optional dependencies:\n \n@@ -57,7 +58,7 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev\n+\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n \t\n For Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n "
      },
      {
        "sha": "2fc601d4354259796a04650c75315aa5b41f8b15",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -4,6 +4,29 @@ release-notes at release time)\n Notable changes\n ===============\n \n+SSL support for RPC dropped\n+----------------------------\n+\n+SSL support for RPC, previously enabled by the option `rpcssl` has been dropped\n+from both the client and the server. This was done in preparation for removing\n+the dependency on OpenSSL for the daemon completely.\n+\n+Trying to use `rpcssl` will result in an error:\n+\n+    Error: SSL mode for RPC (-rpcssl) is no longer supported.\n+\n+If you are one of the few people that relies on this feature, a flexible\n+migration path is to use `stunnel`. This is an utility that can tunnel\n+arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:\n+\n+    sudo apt-get install stunnel4\n+\n+Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:\n+\n+    stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''\n+\n+It can also be set up system-wide in inetd style.\n+\n Random-cookie RPC authentication\n ---------------------------------\n "
      },
      {
        "sha": "514bdf5640b121de18ea33fcddd328170e22c944",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -8,6 +8,11 @@ CURDIR=$(cd $(dirname \"$0\"); pwd)\n export BITCOIND=${REAL_BITCOIND}\n export BITCOINCLI=${REAL_BITCOINCLI}\n \n+if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n+  echo \"Win tests currently disabled\"\n+  exit 0\n+fi\n+\n #Run the tests\n \n testScripts=("
      },
      {
        "sha": "b66533543d755b37c4cc10e5d580686c220fc918",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -22,7 +22,7 @@\n \n class HTTPBasicsTest (BitcoinTestFramework):\n     def setup_nodes(self):\n-        return start_nodes(4, self.options.tmpdir, extra_args=[['-rpckeepalive=1'], ['-rpckeepalive=0'], [], []])\n+        return start_nodes(4, self.options.tmpdir)\n \n     def run_test(self):\n \n@@ -84,9 +84,8 @@ def run_test(self):\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, False) #connection must be closed because keep-alive was set to false\n \n-        #node2 (third node) is running with standard keep-alive parameters which means keep-alive is off\n+        #node2 (third node) is running with standard keep-alive parameters which means keep-alive is on\n         urlNode2 = urlparse.urlparse(self.nodes[2].url)\n         authpair = urlNode2.username + ':' + urlNode2.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}"
      },
      {
        "sha": "e084ad55abb4b52b96893f6fe7eb942103d9dcb4",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 26,
        "deletions": 16,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -32,10 +32,20 @@ def deser_uint256(f):\n         r += t << (i * 32)\n     return r\n \n-#allows simple http get calls with a request body\n-def http_get_call(host, port, path, requestdata = '', response_object = 0):\n+#allows simple http get calls\n+def http_get_call(host, port, path, response_object = 0):\n     conn = httplib.HTTPConnection(host, port)\n-    conn.request('GET', path, requestdata)\n+    conn.request('GET', path)\n+\n+    if response_object:\n+        return conn.getresponse()\n+\n+    return conn.getresponse().read()\n+\n+#allows simple http post calls with a request body\n+def http_post_call(host, port, path, requestdata = '', response_object = 0):\n+    conn = httplib.HTTPConnection(host, port)\n+    conn.request('POST', path, requestdata)\n \n     if response_object:\n         return conn.getresponse()\n@@ -137,7 +147,7 @@ def run_test(self):\n         binaryRequest += binascii.unhexlify(vintx);\n         binaryRequest += pack(\"i\", 0);\n \n-        bin_response = http_get_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', binaryRequest)\n+        bin_response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', binaryRequest)\n         output = StringIO.StringIO()\n         output.write(bin_response)\n         output.seek(0)\n@@ -175,29 +185,29 @@ def run_test(self):\n \n         #do some invalid requests\n         json_request = '{\"checkmempool'\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'json', json_request, True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'json', json_request, True)\n         assert_equal(response.status, 500) #must be a 500 because we send a invalid json request\n \n         json_request = '{\"checkmempool'\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', json_request, True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', json_request, True)\n         assert_equal(response.status, 500) #must be a 500 because we send a invalid bin request\n \n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos/checkmempool'+self.FORMAT_SEPARATOR+'bin', '', True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos/checkmempool'+self.FORMAT_SEPARATOR+'bin', '', True)\n         assert_equal(response.status, 500) #must be a 500 because we send a invalid bin request\n \n         #test limits\n         json_request = '/checkmempool/'\n         for x in range(0, 20):\n             json_request += txid+'-'+str(n)+'/'\n         json_request = json_request.rstrip(\"/\")\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n         assert_equal(response.status, 500) #must be a 500 because we exceeding the limits\n \n         json_request = '/checkmempool/'\n         for x in range(0, 15):\n             json_request += txid+'-'+str(n)+'/'\n         json_request = json_request.rstrip(\"/\");\n-        response = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n+        response = http_post_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n         assert_equal(response.status, 200) #must be a 500 because we exceeding the limits\n \n         self.nodes[0].generate(1) #generate block to not affect upcoming tests\n@@ -208,27 +218,27 @@ def run_test(self):\n         ################\n \n         # check binary format\n-        response = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", \"\", True)\n+        response = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", True)\n         assert_equal(response.status, 200)\n         assert_greater_than(int(response.getheader('content-length')), 80)\n         response_str = response.read()\n \n         # compare with block header\n-        response_header = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", \"\", True)\n+        response_header = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"bin\", True)\n         assert_equal(response_header.status, 200)\n         assert_equal(int(response_header.getheader('content-length')), 80)\n         response_header_str = response_header.read()\n         assert_equal(response_str[0:80], response_header_str)\n \n         # check block hex format\n-        response_hex = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", \"\", True)\n+        response_hex = http_get_call(url.hostname, url.port, '/rest/block/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n         assert_equal(response_hex.status, 200)\n         assert_greater_than(int(response_hex.getheader('content-length')), 160)\n         response_hex_str = response_hex.read()\n         assert_equal(response_str.encode(\"hex\")[0:160], response_hex_str[0:160])\n \n         # compare with hex block header\n-        response_header_hex = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", \"\", True)\n+        response_header_hex = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n         assert_equal(response_header_hex.status, 200)\n         assert_greater_than(int(response_header_hex.getheader('content-length')), 160)\n         response_header_hex_str = response_header_hex.read()\n@@ -241,7 +251,7 @@ def run_test(self):\n         assert_equal(block_json_obj['hash'], bb_hash)\n \n         # compare with json block header\n-        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", \"\", True)\n+        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", True)\n         assert_equal(response_header_json.status, 200)\n         response_header_json_str = response_header_json.read()\n         json_obj = json.loads(response_header_json_str, parse_float=decimal.Decimal)\n@@ -265,7 +275,7 @@ def run_test(self):\n         #see if we can get 5 headers in one response\n         self.nodes[1].generate(5)\n         self.sync_all()\n-        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/5/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", \"\", True)\n+        response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/5/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", True)\n         assert_equal(response_header_json.status, 200)\n         response_header_json_str = response_header_json.read()\n         json_obj = json.loads(response_header_json_str)\n@@ -278,7 +288,7 @@ def run_test(self):\n         assert_equal(json_obj['txid'], tx_hash)\n \n         # check hex format response\n-        hex_string = http_get_call(url.hostname, url.port, '/rest/tx/'+tx_hash+self.FORMAT_SEPARATOR+\"hex\", \"\", True)\n+        hex_string = http_get_call(url.hostname, url.port, '/rest/tx/'+tx_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n         assert_equal(hex_string.status, 200)\n         assert_greater_than(int(response.getheader('content-length')), 10)\n "
      },
      {
        "sha": "390e9f1436959c6ad841611fe2f0d3c6d0da79ec",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -98,6 +98,8 @@ BITCOIN_CORE_H = \\\n   eccryptoverify.h \\\n   ecwrapper.h \\\n   hash.h \\\n+  httprpc.h \\\n+  httpserver.h \\\n   init.h \\\n   key.h \\\n   keystore.h \\\n@@ -164,13 +166,15 @@ obj/build.h: FORCE\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS)\n+libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n   bloom.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  httprpc.cpp \\\n+  httpserver.cpp \\\n   init.cpp \\\n   leveldbwrapper.cpp \\\n   main.cpp \\\n@@ -320,12 +324,12 @@ if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -338,7 +342,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBSECP256K1)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #"
      },
      {
        "sha": "8d60aca25c531b4068c258cf2574bb7c7d36d7f4",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -362,7 +362,8 @@ if ENABLE_WALLET\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n "
      },
      {
        "sha": "4250bb8f3b27b2a49452aa4ea93e3307a9062271",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -32,7 +32,8 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)\n+  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno"
      },
      {
        "sha": "866c6f2d4443cd2565a3ef86255833573d932de9",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 97,
        "deletions": 40,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -11,6 +11,12 @@\n #include \"utilstrencodings.h\"\n \n #include <boost/filesystem/operations.hpp>\n+#include <stdio.h>\n+\n+#include <event2/event.h>\n+#include <event2/http.h>\n+#include <event2/buffer.h>\n+#include <event2/keyvalq_struct.h>\n \n #include \"univalue/univalue.h\"\n \n@@ -32,9 +38,6 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n \n-    strUsage += HelpMessageGroup(_(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"));\n-    strUsage += HelpMessageOpt(\"-rpcssl\", _(\"Use OpenSSL (https) for JSON-RPC connections\"));\n-\n     return strUsage;\n }\n \n@@ -92,67 +95,117 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n         return false;\n     }\n+    if (GetBoolArg(\"-rpcssl\", false))\n+    {\n+        fprintf(stderr, \"Error: SSL mode for RPC (-rpcssl) is no longer supported.\\n\");\n+        return false;\n+    }\n     return true;\n }\n \n-UniValue CallRPC(const string& strMethod, const UniValue& params)\n+\n+/** Reply structure for request_done to fill in */\n+struct HTTPReply\n {\n-    // Connect to localhost\n-    bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n-    boost::asio::io_service io_service;\n-    boost::asio::ssl::context context(io_service, boost::asio::ssl::context::sslv23);\n-    context.set_options(boost::asio::ssl::context::no_sslv2 | boost::asio::ssl::context::no_sslv3);\n-    boost::asio::ssl::stream<boost::asio::ip::tcp::socket> sslStream(io_service, context);\n-    SSLIOStreamDevice<boost::asio::ip::tcp> d(sslStream, fUseSSL);\n-    boost::iostreams::stream< SSLIOStreamDevice<boost::asio::ip::tcp> > stream(d);\n-\n-    const bool fConnected = d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(BaseParams().RPCPort())));\n-    if (!fConnected)\n-        throw CConnectionFailed(\"couldn't connect to server\");\n+    int status;\n+    std::string body;\n+};\n+\n+static void http_request_done(struct evhttp_request *req, void *ctx)\n+{\n+    HTTPReply *reply = static_cast<HTTPReply*>(ctx);\n+\n+    if (req == NULL) {\n+        /* If req is NULL, it means an error occurred while connecting, but\n+         * I'm not sure how to find out which one. We also don't really care.\n+         */\n+        reply->status = 0;\n+        return;\n+    }\n \n-    // Find credentials to use\n+    reply->status = evhttp_request_get_response_code(req);\n+\n+    struct evbuffer *buf = evhttp_request_get_input_buffer(req);\n+    if (buf)\n+    {\n+        size_t size = evbuffer_get_length(buf);\n+        const char *data = (const char*)evbuffer_pullup(buf, size);\n+        if (data)\n+            reply->body = std::string(data, size);\n+        evbuffer_drain(buf, size);\n+    }\n+}\n+\n+UniValue CallRPC(const string& strMethod, const UniValue& params)\n+{\n+    std::string host = GetArg(\"-rpcconnect\", \"127.0.0.1\");\n+    int port = GetArg(\"-rpcport\", BaseParams().RPCPort());\n+\n+    // Create event base\n+    struct event_base *base = event_base_new(); // TODO RAII\n+    if (!base)\n+        throw runtime_error(\"cannot create event_base\");\n+\n+    // Synchronously look up hostname\n+    struct evhttp_connection *evcon = evhttp_connection_base_new(base, NULL, host.c_str(), port); // TODO RAII\n+    if (evcon == NULL)\n+        throw runtime_error(\"create connection failed\");\n+    evhttp_connection_set_timeout(evcon, GetArg(\"-rpctimeout\", 30));\n+\n+    HTTPReply response;\n+    struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII\n+    if (req == NULL)\n+        throw runtime_error(\"create http request failed\");\n+\n+    // Get credentials\n     std::string strRPCUserColonPass;\n     if (mapArgs[\"-rpcpassword\"] == \"\") {\n         // Try fall back to cookie-based authentication if no password is provided\n         if (!GetAuthCookie(&strRPCUserColonPass)) {\n             throw runtime_error(strprintf(\n-                _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n-                  \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n+                _(\"Could not locate RPC credentials. No authentication cookie could be found, and no rpcpassword is set in the configuration file (%s)\"),\n                     GetConfigFile().string().c_str()));\n \n         }\n     } else {\n         strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n     }\n \n-    // HTTP basic authentication\n-    map<string, string> mapRequestHeaders;\n-    mapRequestHeaders[\"Authorization\"] = string(\"Basic \") + EncodeBase64(strRPCUserColonPass);\n-\n-    // Send request\n-    string strRequest = JSONRPCRequest(strMethod, params, 1);\n-    string strPost = HTTPPost(strRequest, mapRequestHeaders);\n-    stream << strPost << std::flush;\n-\n-    // Receive HTTP reply status\n-    int nProto = 0;\n-    int nStatus = ReadHTTPStatus(stream, nProto);\n+    struct evkeyvalq *output_headers = evhttp_request_get_output_headers(req);\n+    assert(output_headers);\n+    evhttp_add_header(output_headers, \"Host\", host.c_str());\n+    evhttp_add_header(output_headers, \"Connection\", \"close\");\n+    evhttp_add_header(output_headers, \"Authorization\", (std::string(\"Basic \") + EncodeBase64(strRPCUserColonPass)).c_str());\n+\n+    // Attach request data\n+    std::string strRequest = JSONRPCRequest(strMethod, params, 1);\n+    struct evbuffer * output_buffer = evhttp_request_get_output_buffer(req);\n+    assert(output_buffer);\n+    evbuffer_add(output_buffer, strRequest.data(), strRequest.size());\n+\n+    int r = evhttp_make_request(evcon, req, EVHTTP_REQ_POST, \"/\");\n+    if (r != 0) {\n+        evhttp_connection_free(evcon);\n+        event_base_free(base);\n+        throw CConnectionFailed(\"send http request failed\");\n+    }\n \n-    // Receive HTTP reply message headers and body\n-    map<string, string> mapHeaders;\n-    string strReply;\n-    ReadHTTPMessage(stream, mapHeaders, strReply, nProto, std::numeric_limits<size_t>::max());\n+    event_base_dispatch(base);\n+    evhttp_connection_free(evcon);\n+    event_base_free(base);\n \n-    if (nStatus == HTTP_UNAUTHORIZED)\n+    if (response.status == 0)\n+        throw CConnectionFailed(\"couldn't connect to server\");\n+    else if (response.status == HTTP_UNAUTHORIZED)\n         throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n-    else if (nStatus >= 400 && nStatus != HTTP_BAD_REQUEST && nStatus != HTTP_NOT_FOUND && nStatus != HTTP_INTERNAL_SERVER_ERROR)\n-        throw runtime_error(strprintf(\"server returned HTTP error %d\", nStatus));\n-    else if (strReply.empty())\n+    else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n+        throw runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\n+    else if (response.body.empty())\n         throw runtime_error(\"no response from server\");\n \n     // Parse reply\n     UniValue valReply(UniValue::VSTR);\n-    if (!valReply.read(strReply))\n+    if (!valReply.read(response.body))\n         throw runtime_error(\"couldn't parse reply from server\");\n     const UniValue& reply = valReply.get_obj();\n     if (reply.empty())\n@@ -248,6 +301,10 @@ int CommandLineRPC(int argc, char *argv[])\n int main(int argc, char* argv[])\n {\n     SetupEnvironment();\n+    if (!SetupNetworking()) {\n+        fprintf(stderr, \"Error: Initializing networking failed\\n\");\n+        exit(1);\n+    }\n \n     try {\n         if(!AppInitRPC(argc, argv))"
      },
      {
        "sha": "b512f74c227003c3393aa099f4c4fe3cba55f818",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -10,11 +10,16 @@\n #include \"noui.h\"\n #include \"scheduler.h\"\n #include \"util.h\"\n+#include \"httpserver.h\"\n+#include \"httprpc.h\"\n+#include \"rpcserver.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n+#include <stdio.h>\n+\n /* Introduction text for doxygen: */\n \n /*! \\mainpage Developer documentation\n@@ -44,7 +49,7 @@ void WaitForShutdown(boost::thread_group* threadGroup)\n     }\n     if (threadGroup)\n     {\n-        threadGroup->interrupt_all();\n+        Interrupt(*threadGroup);\n         threadGroup->join_all();\n     }\n }\n@@ -154,7 +159,7 @@ bool AppInit(int argc, char* argv[])\n \n     if (!fRet)\n     {\n-        threadGroup.interrupt_all();\n+        Interrupt(threadGroup);\n         // threadGroup.join_all(); was left out intentionally here, because we didn't re-test all of\n         // the startup-failure cases to make sure they don't result in a hang due to some\n         // thread-blocking-waiting-for-another-thread-during-startup case"
      },
      {
        "sha": "98ac750bb1938f2bcd7a3125611ee383bcaaff16",
        "filename": "src/httprpc.cpp",
        "status": "added",
        "additions": 193,
        "deletions": 0,
        "changes": 193,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -0,0 +1,193 @@\n+#include \"httprpc.h\"\n+\n+#include \"base58.h\"\n+#include \"chainparams.h\"\n+#include \"httpserver.h\"\n+#include \"rpcprotocol.h\"\n+#include \"rpcserver.h\"\n+#include \"random.h\"\n+#include \"sync.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"ui_interface.h\"\n+\n+#include <boost/algorithm/string.hpp> // boost::trim\n+\n+/** Simple one-shot callback timer to be used by the RPC mechanism to e.g.\n+ * re-lock the wellet.\n+ */\n+class HTTPRPCTimer : public RPCTimerBase\n+{\n+public:\n+    HTTPRPCTimer(struct event_base* eventBase, boost::function<void(void)>& func, int64_t millis) :\n+        ev(eventBase, false, func)\n+    {\n+        struct timeval tv;\n+        tv.tv_sec = millis/1000;\n+        tv.tv_usec = (millis%1000)*1000;\n+        ev.trigger(&tv);\n+    }\n+private:\n+    HTTPEvent ev;\n+};\n+\n+class HTTPRPCTimerInterface : public RPCTimerInterface\n+{\n+public:\n+    HTTPRPCTimerInterface(struct event_base* base) : base(base)\n+    {\n+    }\n+    const char* Name()\n+    {\n+        return \"HTTP\";\n+    }\n+    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis)\n+    {\n+        return new HTTPRPCTimer(base, func, millis);\n+    }\n+private:\n+    struct event_base* base;\n+};\n+\n+\n+/* Pre-base64-encoded authentication token */\n+static std::string strRPCUserColonPass;\n+/* Stored RPC timer interface (for unregistration) */\n+static HTTPRPCTimerInterface* httpRPCTimerInterface = 0;\n+\n+static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\n+{\n+    // Send error reply from json-rpc error object\n+    int nStatus = HTTP_INTERNAL_SERVER_ERROR;\n+    int code = find_value(objError, \"code\").get_int();\n+\n+    if (code == RPC_INVALID_REQUEST)\n+        nStatus = HTTP_BAD_REQUEST;\n+    else if (code == RPC_METHOD_NOT_FOUND)\n+        nStatus = HTTP_NOT_FOUND;\n+\n+    std::string strReply = JSONRPCReply(NullUniValue, objError, id);\n+\n+    req->WriteHeader(\"Content-Type\", \"application/json\");\n+    req->WriteReply(nStatus, strReply);\n+}\n+\n+static bool RPCAuthorized(const std::string& strAuth)\n+{\n+    if (strRPCUserColonPass.empty()) // Belt-and-suspenders measure if InitRPCAuthentication was not called\n+        return false;\n+    if (strAuth.substr(0, 6) != \"Basic \")\n+        return false;\n+    std::string strUserPass64 = strAuth.substr(6);\n+    boost::trim(strUserPass64);\n+    std::string strUserPass = DecodeBase64(strUserPass64);\n+    return TimingResistantEqual(strUserPass, strRPCUserColonPass);\n+}\n+\n+static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n+{\n+    // JSONRPC handles only POST\n+    if (req->GetRequestMethod() != HTTPRequest::POST) {\n+        req->WriteReply(HTTP_BAD_METHOD, \"JSONRPC server handles only POST requests\");\n+        return false;\n+    }\n+    // Check authorization\n+    std::pair<bool, std::string> authHeader = req->GetHeader(\"authorization\");\n+    if (!authHeader.first) {\n+        req->WriteReply(HTTP_UNAUTHORIZED);\n+        return false;\n+    }\n+\n+    if (!RPCAuthorized(authHeader.second)) {\n+        LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", req->GetPeer().ToString());\n+\n+        /* Deter brute-forcing\n+           If this results in a DoS the user really\n+           shouldn't have their RPC port exposed. */\n+        MilliSleep(250);\n+\n+        req->WriteReply(HTTP_UNAUTHORIZED);\n+        return false;\n+    }\n+\n+    JSONRequest jreq;\n+    try {\n+        // Parse request\n+        UniValue valRequest;\n+        if (!valRequest.read(req->ReadBody()))\n+            throw JSONRPCError(RPC_PARSE_ERROR, \"Parse error\");\n+\n+        std::string strReply;\n+        // singleton request\n+        if (valRequest.isObject()) {\n+            jreq.parse(valRequest);\n+\n+            UniValue result = tableRPC.execute(jreq.strMethod, jreq.params);\n+\n+            // Send reply\n+            strReply = JSONRPCReply(result, NullUniValue, jreq.id);\n+\n+        // array of requests\n+        } else if (valRequest.isArray())\n+            strReply = JSONRPCExecBatch(valRequest.get_array());\n+        else\n+            throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\n+\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strReply);\n+    } catch (const UniValue& objError) {\n+        JSONErrorReply(req, objError, jreq.id);\n+        return false;\n+    } catch (const std::exception& e) {\n+        JSONErrorReply(req, JSONRPCError(RPC_PARSE_ERROR, e.what()), jreq.id);\n+        return false;\n+    }\n+    return true;\n+}\n+\n+static bool InitRPCAuthentication()\n+{\n+    if (mapArgs[\"-rpcpassword\"] == \"\")\n+    {\n+        LogPrintf(\"No rpcpassword set - using random cookie authentication\\n\");\n+        if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n+            uiInterface.ThreadSafeMessageBox(\n+                _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n+                \"\", CClientUIInterface::MSG_ERROR);\n+            return false;\n+        }\n+    } else {\n+        strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n+    }\n+    return true;\n+}\n+\n+bool StartHTTPRPC()\n+{\n+    LogPrint(\"rpc\", \"Starting HTTP RPC server\\n\");\n+    if (!InitRPCAuthentication())\n+        return false;\n+\n+    RegisterHTTPHandler(\"/\", true, HTTPReq_JSONRPC);\n+\n+    assert(EventBase());\n+    httpRPCTimerInterface = new HTTPRPCTimerInterface(EventBase());\n+    RPCRegisterTimerInterface(httpRPCTimerInterface);\n+    return true;\n+}\n+\n+void InterruptHTTPRPC()\n+{\n+    LogPrint(\"rpc\", \"Interrupting HTTP RPC server\\n\");\n+}\n+\n+void StopHTTPRPC()\n+{\n+    LogPrint(\"rpc\", \"Stopping HTTP RPC server\\n\");\n+    UnregisterHTTPHandler(\"/\", true);\n+    if (httpRPCTimerInterface) {\n+        RPCUnregisterTimerInterface(httpRPCTimerInterface);\n+        delete httpRPCTimerInterface;\n+        httpRPCTimerInterface = 0;\n+    }\n+}"
      },
      {
        "sha": "d35445718871ee6339ece7caf1c0c3cdc3872f4f",
        "filename": "src/httprpc.h",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httprpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httprpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_HTTPRPC_H\n+#define BITCOIN_HTTPRPC_H\n+\n+#include <string>\n+#include <map>\n+\n+class HTTPRequest;\n+\n+/** Start HTTP RPC subsystem.\n+ * Precondition; HTTP and RPC has been started.\n+ */\n+bool StartHTTPRPC();\n+/** Interrupt HTTP RPC subsystem.\n+ */\n+void InterruptHTTPRPC();\n+/** Stop HTTP RPC subsystem.\n+ * Precondition; HTTP and RPC has been stopped.\n+ */\n+void StopHTTPRPC();\n+\n+/** Start HTTP REST subsystem.\n+ * Precondition; HTTP and RPC has been started.\n+ */\n+bool StartREST();\n+/** Interrupt RPC REST subsystem.\n+ */\n+void InterruptREST();\n+/** Stop HTTP REST subsystem.\n+ * Precondition; HTTP and RPC has been stopped.\n+ */\n+void StopREST();\n+\n+#endif"
      },
      {
        "sha": "7e599b1d78d31a16151d455e000677de2543a408",
        "filename": "src/httpserver.cpp",
        "status": "added",
        "additions": 575,
        "deletions": 0,
        "changes": 575,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -0,0 +1,575 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"httpserver.h\"\n+\n+#include \"chainparamsbase.h\"\n+#include \"compat.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"rpcprotocol.h\" // For HTTP status codes\n+#include \"sync.h\"\n+#include \"ui_interface.h\"\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+#include <signal.h>\n+\n+#include <event2/event.h>\n+#include <event2/http.h>\n+#include <event2/thread.h>\n+#include <event2/buffer.h>\n+#include <event2/util.h>\n+#include <event2/keyvalq_struct.h>\n+\n+#ifdef EVENT__HAVE_NETINET_IN_H\n+#include <netinet/in.h>\n+#ifdef _XOPEN_SOURCE_EXTENDED\n+#include <arpa/inet.h>\n+#endif\n+#endif\n+\n+#include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n+#include <boost/foreach.hpp>\n+#include <boost/scoped_ptr.hpp>\n+\n+/** HTTP request work item */\n+class HTTPWorkItem : public HTTPClosure\n+{\n+public:\n+    HTTPWorkItem(HTTPRequest* req, const std::string &path, const HTTPRequestHandler& func):\n+        req(req), path(path), func(func)\n+    {\n+    }\n+    void operator()()\n+    {\n+        func(req.get(), path);\n+    }\n+\n+    boost::scoped_ptr<HTTPRequest> req;\n+\n+private:\n+    std::string path;\n+    HTTPRequestHandler func;\n+};\n+\n+/** Simple work queue for distributing work over multiple threads.\n+ * Work items are simply callable objects.\n+ */\n+template <typename WorkItem>\n+class WorkQueue\n+{\n+private:\n+    /** Mutex protects entire object */\n+    CWaitableCriticalSection cs;\n+    CConditionVariable cond;\n+    /* XXX in C++11 we can use std::unique_ptr here and avoid manual cleanup */\n+    std::deque<WorkItem*> queue;\n+    bool running;\n+    size_t maxDepth;\n+\n+public:\n+    WorkQueue(size_t maxDepth) : running(true),\n+                                 maxDepth(maxDepth)\n+    {\n+    }\n+    /* Precondition: worker threads have all stopped */\n+    ~WorkQueue()\n+    {\n+        while (!queue.empty()) {\n+            delete queue.front();\n+            queue.pop_front();\n+        }\n+    }\n+    /** Enqueue a work item */\n+    bool Enqueue(WorkItem* item)\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        if (queue.size() >= maxDepth) {\n+            return false;\n+        }\n+        queue.push_back(item);\n+        cond.notify_one();\n+        return true;\n+    }\n+    /** Thread function */\n+    void Run()\n+    {\n+        while (running) {\n+            WorkItem* i = 0;\n+            {\n+                boost::unique_lock<boost::mutex> lock(cs);\n+                while (running && queue.empty())\n+                    cond.wait(lock);\n+                if (!running)\n+                    break;\n+                i = queue.front();\n+                queue.pop_front();\n+            }\n+            (*i)();\n+            delete i;\n+        }\n+    }\n+    /** Interrupt and exit loops */\n+    void Interrupt()\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        running = false;\n+        cond.notify_all();\n+    }\n+\n+    /** Return current depth of queue */\n+    size_t Depth()\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        return queue.size();\n+    }\n+};\n+\n+struct HTTPPathHandler\n+{\n+    HTTPPathHandler() {}\n+    HTTPPathHandler(std::string prefix, bool exactMatch, HTTPRequestHandler handler):\n+        prefix(prefix), exactMatch(exactMatch), handler(handler)\n+    {\n+    }\n+    std::string prefix;\n+    bool exactMatch;\n+    HTTPRequestHandler handler;\n+};\n+\n+/** HTTP module state */\n+\n+//! libevent event loop\n+static struct event_base* eventBase = 0;\n+//! HTTP server\n+struct evhttp* eventHTTP = 0;\n+//! List of subnets to allow RPC connections from\n+static std::vector<CSubNet> rpc_allow_subnets;\n+//! Work queue for handling longer requests off the event loop thread\n+static WorkQueue<HTTPClosure>* workQueue = 0;\n+//! Handlers for (sub)paths\n+std::vector<HTTPPathHandler> pathHandlers;\n+\n+/** Check if a network address is allowed to access the HTTP server */\n+static bool ClientAllowed(const CNetAddr& netaddr)\n+{\n+    if (!netaddr.IsValid())\n+        return false;\n+    BOOST_FOREACH (const CSubNet& subnet, rpc_allow_subnets)\n+        if (subnet.Match(netaddr))\n+            return true;\n+    return false;\n+}\n+\n+/** Initialize ACL list for HTTP server */\n+static bool InitHTTPAllowList()\n+{\n+    rpc_allow_subnets.clear();\n+    rpc_allow_subnets.push_back(CSubNet(\"127.0.0.0/8\")); // always allow IPv4 local subnet\n+    rpc_allow_subnets.push_back(CSubNet(\"::1\"));         // always allow IPv6 localhost\n+    if (mapMultiArgs.count(\"-rpcallowip\")) {\n+        const std::vector<std::string>& vAllow = mapMultiArgs[\"-rpcallowip\"];\n+        BOOST_FOREACH (std::string strAllow, vAllow) {\n+            CSubNet subnet(strAllow);\n+            if (!subnet.IsValid()) {\n+                uiInterface.ThreadSafeMessageBox(\n+                    strprintf(\"Invalid -rpcallowip subnet specification: %s. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\", strAllow),\n+                    \"\", CClientUIInterface::MSG_ERROR);\n+                return false;\n+            }\n+            rpc_allow_subnets.push_back(subnet);\n+        }\n+    }\n+    std::string strAllowed;\n+    BOOST_FOREACH (const CSubNet& subnet, rpc_allow_subnets)\n+        strAllowed += subnet.ToString() + \" \";\n+    LogPrint(\"http\", \"Allowing HTTP connections from: %s\\n\", strAllowed);\n+    return true;\n+}\n+\n+/** HTTP request method as string - use for logging only */\n+static std::string RequestMethodString(HTTPRequest::RequestMethod m)\n+{\n+    switch (m) {\n+    case HTTPRequest::GET:\n+        return \"GET\";\n+        break;\n+    case HTTPRequest::POST:\n+        return \"POST\";\n+        break;\n+    case HTTPRequest::HEAD:\n+        return \"HEAD\";\n+        break;\n+    case HTTPRequest::PUT:\n+        return \"PUT\";\n+        break;\n+    default:\n+        return \"unknown\";\n+    }\n+}\n+\n+/** HTTP request callback */\n+static void http_request_cb(struct evhttp_request* req, void* arg)\n+{\n+    std::auto_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n+\n+    LogPrint(\"http\", \"Received a %s request for %s from %s\\n\",\n+             RequestMethodString(hreq->GetRequestMethod()), hreq->GetURI(), hreq->GetPeer().ToString());\n+\n+    // Early address-based allow check\n+    if (!ClientAllowed(hreq->GetPeer())) {\n+        hreq->WriteReply(HTTP_FORBIDDEN);\n+        return;\n+    }\n+\n+    // Early reject unknown HTTP methods\n+    if (hreq->GetRequestMethod() == HTTPRequest::UNKNOWN) {\n+        hreq->WriteReply(HTTP_BADMETHOD);\n+        return;\n+    }\n+\n+    // Find registered handler for prefix\n+    std::string strURI = hreq->GetURI();\n+    std::string path;\n+    std::vector<HTTPPathHandler>::const_iterator i = pathHandlers.begin();\n+    std::vector<HTTPPathHandler>::const_iterator iend = pathHandlers.end();\n+    for (; i != iend; ++i) {\n+        bool match = false;\n+        if (i->exactMatch)\n+            match = (strURI == i->prefix);\n+        else\n+            match = (strURI.substr(0, i->prefix.size()) == i->prefix);\n+        if (match) {\n+            path = strURI.substr(i->prefix.size());\n+            break;\n+        }\n+    }\n+\n+    // Dispatch to worker thread\n+    if (i != iend) {\n+        std::auto_ptr<HTTPWorkItem> item(new HTTPWorkItem(hreq.release(), path, i->handler));\n+        assert(workQueue);\n+        if (workQueue->Enqueue(item.get()))\n+            item.release(); /* if true, queue took ownership */\n+        else\n+            item->req->WriteReply(HTTP_INTERNAL, \"Work queue depth exceeded\");\n+    } else {\n+        hreq->WriteReply(HTTP_NOTFOUND);\n+    }\n+}\n+\n+/** Event dispatcher thread */\n+static void ThreadHTTP(struct event_base* base, struct evhttp* http)\n+{\n+    RenameThread(\"bitcoin-http\");\n+    LogPrint(\"http\", \"Entering http event loop\\n\");\n+    event_base_dispatch(base);\n+    // Event loop will be interrupted by InterruptHTTPServer()\n+    LogPrint(\"http\", \"Exited http event loop\\n\");\n+}\n+\n+/** Bind HTTP server to specified addresses */\n+static bool HTTPBindAddresses(struct evhttp* http)\n+{\n+    int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int nBound = 0;\n+    std::vector<std::pair<std::string, uint16_t> > endpoints;\n+\n+    // Determine what addresses to bind to\n+    if (!mapArgs.count(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n+        endpoints.push_back(std::make_pair(\"::1\", defaultPort));\n+        endpoints.push_back(std::make_pair(\"127.0.0.1\", defaultPort));\n+        if (mapArgs.count(\"-rpcbind\")) {\n+            LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n+        }\n+    } else if (mapArgs.count(\"-rpcbind\")) { // Specific bind address\n+        const std::vector<std::string>& vbind = mapMultiArgs[\"-rpcbind\"];\n+        for (std::vector<std::string>::const_iterator i = vbind.begin(); i != vbind.end(); ++i) {\n+            int port = defaultPort;\n+            std::string host;\n+            SplitHostPort(*i, port, host);\n+            endpoints.push_back(std::make_pair(host, port));\n+        }\n+    } else { // No specific bind address specified, bind to any\n+        endpoints.push_back(std::make_pair(\"::\", defaultPort));\n+        endpoints.push_back(std::make_pair(\"0.0.0.0\", defaultPort));\n+    }\n+\n+    // Bind addresses\n+    for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n+        LogPrint(\"http\", \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n+        if (evhttp_bind_socket(http, i->first.empty() ? NULL : i->first.c_str(), i->second) == 0) {\n+            nBound += 1;\n+        } else {\n+            LogPrintf(\"Binding RPC on address %s port %i failed.\\n\", i->first, i->second);\n+        }\n+    }\n+    return nBound > 0;\n+}\n+\n+/** Simple wrapper to set thread name and run work queue */\n+static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n+{\n+    RenameThread(\"bitcoin-httpworker\");\n+    queue->Run();\n+}\n+\n+bool InitHTTPServer()\n+{\n+    struct evhttp* http = 0;\n+    struct event_base* base = 0;\n+\n+    if (!InitHTTPAllowList())\n+        return false;\n+\n+    if (GetBoolArg(\"-rpcssl\", false)) {\n+        uiInterface.ThreadSafeMessageBox(\n+            \"SSL mode for RPC (-rpcssl) is no longer supported.\",\n+            \"\", CClientUIInterface::MSG_ERROR);\n+        return false;\n+    }\n+\n+#ifdef WIN32\n+    evthread_use_windows_threads();\n+#else\n+    evthread_use_pthreads();\n+#endif\n+\n+    base = event_base_new(); // XXX RAII\n+    if (!base) {\n+        LogPrintf(\"Couldn't create an event_base: exiting\\n\");\n+        return false;\n+    }\n+\n+    /* Create a new evhttp object to handle requests. */\n+    http = evhttp_new(base); // XXX RAII\n+    if (!http) {\n+        LogPrintf(\"couldn't create evhttp. Exiting.\\n\");\n+        event_base_free(base);\n+        return false;\n+    }\n+\n+    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", DEFAULT_HTTP_TIMEOUT));\n+    evhttp_set_max_body_size(http, MAX_SIZE);\n+    evhttp_set_gencb(http, http_request_cb, NULL);\n+\n+    if (!HTTPBindAddresses(http)) {\n+        LogPrintf(\"Unable to bind any endpoint for RPC server\\n\");\n+        evhttp_free(http);\n+        event_base_free(base);\n+        return false;\n+    }\n+\n+    LogPrint(\"http\", \"Initialized HTTP server\\n\");\n+    int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n+    LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n+\n+    workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n+    eventBase = base;\n+    eventHTTP = http;\n+    return true;\n+}\n+\n+bool StartHTTPServer(boost::thread_group& threadGroup)\n+{\n+    LogPrint(\"http\", \"Starting HTTP server\\n\");\n+    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n+    LogPrintf(\"HTTP: starting %d worker threads\\n\", rpcThreads);\n+    threadGroup.create_thread(boost::bind(&ThreadHTTP, eventBase, eventHTTP));\n+\n+    for (int i = 0; i < rpcThreads; i++)\n+        threadGroup.create_thread(boost::bind(&HTTPWorkQueueRun, workQueue));\n+    return true;\n+}\n+\n+void InterruptHTTPServer()\n+{\n+    LogPrint(\"http\", \"Interrupting HTTP server\\n\");\n+    if (eventBase)\n+        event_base_loopbreak(eventBase);\n+    if (workQueue)\n+        workQueue->Interrupt();\n+}\n+\n+void StopHTTPServer()\n+{\n+    LogPrint(\"http\", \"Stopping HTTP server\\n\");\n+    delete workQueue;\n+    if (eventHTTP) {\n+        evhttp_free(eventHTTP);\n+        eventHTTP = 0;\n+    }\n+    if (eventBase) {\n+        event_base_free(eventBase);\n+        eventBase = 0;\n+    }\n+}\n+\n+struct event_base* EventBase()\n+{\n+    return eventBase;\n+}\n+\n+static void httpevent_callback_fn(evutil_socket_t, short, void* data)\n+{\n+    // Static handler: simply call inner handler\n+    HTTPEvent *self = ((HTTPEvent*)data);\n+    self->handler();\n+    if (self->deleteWhenTriggered)\n+        delete self;\n+}\n+\n+HTTPEvent::HTTPEvent(struct event_base* base, bool deleteWhenTriggered, const boost::function<void(void)>& handler):\n+    deleteWhenTriggered(deleteWhenTriggered), handler(handler)\n+{\n+    ev = event_new(base, -1, 0, httpevent_callback_fn, this);\n+    assert(ev);\n+}\n+HTTPEvent::~HTTPEvent()\n+{\n+    event_free(ev);\n+}\n+void HTTPEvent::trigger(struct timeval* tv)\n+{\n+    if (tv == NULL)\n+        event_active(ev, 0, 0); // immediately trigger event in main thread\n+    else\n+        evtimer_add(ev, tv); // trigger after timeval passed\n+}\n+HTTPRequest::HTTPRequest(struct evhttp_request* req) : req(req),\n+                                                       replySent(false)\n+{\n+}\n+HTTPRequest::~HTTPRequest()\n+{\n+    if (!replySent) {\n+        // Keep track of whether reply was sent to avoid request leaks\n+        LogPrintf(\"%s: Unhandled request\\n\", __func__);\n+        WriteReply(HTTP_INTERNAL, \"Unhandled request\");\n+    }\n+    // evhttpd cleans up the request, as long as a reply was sent.\n+}\n+\n+std::pair<bool, std::string> HTTPRequest::GetHeader(const std::string& hdr)\n+{\n+    const struct evkeyvalq* headers = evhttp_request_get_input_headers(req);\n+    assert(headers);\n+    const char* val = evhttp_find_header(headers, hdr.c_str());\n+    if (val)\n+        return std::make_pair(true, val);\n+    else\n+        return std::make_pair(false, \"\");\n+}\n+\n+std::string HTTPRequest::ReadBody()\n+{\n+    struct evbuffer* buf = evhttp_request_get_input_buffer(req);\n+    if (!buf)\n+        return \"\";\n+    size_t size = evbuffer_get_length(buf);\n+    /** Trivial implementation: if this is ever a performance bottleneck,\n+     * internal copying can be avoided in multi-segment buffers by using\n+     * evbuffer_peek and an awkward loop. Though in that case, it'd be even\n+     * better to not copy into an intermediate string but use a stream\n+     * abstraction to consume the evbuffer on the fly in the parsing algorithm.\n+     */\n+    const char* data = (const char*)evbuffer_pullup(buf, size);\n+    if (!data) // returns NULL in case of empty buffer\n+        return \"\";\n+    std::string rv(data, size);\n+    evbuffer_drain(buf, size);\n+    return rv;\n+}\n+\n+void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\n+{\n+    struct evkeyvalq* headers = evhttp_request_get_output_headers(req);\n+    assert(headers);\n+    evhttp_add_header(headers, hdr.c_str(), value.c_str());\n+}\n+\n+/** Closure sent to main thread to request a reply to be sent to\n+ * a HTTP request.\n+ * Replies must be sent in the main loop in the main http thread,\n+ * this cannot be done from worker threads.\n+ */\n+void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n+{\n+    assert(!replySent && req);\n+    // Send event to main http thread to send reply message\n+    struct evbuffer* evb = evhttp_request_get_output_buffer(req);\n+    assert(evb);\n+    evbuffer_add(evb, strReply.data(), strReply.size());\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true,\n+        boost::bind(evhttp_send_reply, req, nStatus, (const char*)NULL, (struct evbuffer *)NULL));\n+    ev->trigger(0);\n+    replySent = true;\n+    req = 0; // transferred back to main thread\n+}\n+\n+CService HTTPRequest::GetPeer()\n+{\n+    evhttp_connection* con = evhttp_request_get_connection(req);\n+    CService peer;\n+    if (con) {\n+        // evhttp retains ownership over returned address string\n+        const char* address = \"\";\n+        uint16_t port = 0;\n+        evhttp_connection_get_peer(con, (char**)&address, &port);\n+        peer = CService(address, port);\n+    }\n+    return peer;\n+}\n+\n+std::string HTTPRequest::GetURI()\n+{\n+    return evhttp_request_get_uri(req);\n+}\n+\n+HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n+{\n+    switch (evhttp_request_get_command(req)) {\n+    case EVHTTP_REQ_GET:\n+        return GET;\n+        break;\n+    case EVHTTP_REQ_POST:\n+        return POST;\n+        break;\n+    case EVHTTP_REQ_HEAD:\n+        return HEAD;\n+        break;\n+    case EVHTTP_REQ_PUT:\n+        return PUT;\n+        break;\n+    default:\n+        return UNKNOWN;\n+        break;\n+    }\n+}\n+\n+void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler)\n+{\n+    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+    pathHandlers.push_back(HTTPPathHandler(prefix, exactMatch, handler));\n+}\n+\n+void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n+{\n+    std::vector<HTTPPathHandler>::iterator i = pathHandlers.begin();\n+    std::vector<HTTPPathHandler>::iterator iend = pathHandlers.end();\n+    for (; i != iend; ++i)\n+        if (i->prefix == prefix && i->exactMatch == exactMatch)\n+            break;\n+    if (i != iend)\n+    {\n+        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+        pathHandlers.erase(i);\n+    }\n+}\n+"
      },
      {
        "sha": "459c60c04724c0281ffcea3cccbbc3fb994fc29c",
        "filename": "src/httpserver.h",
        "status": "added",
        "additions": 149,
        "deletions": 0,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_HTTPSERVER_H\n+#define BITCOIN_HTTPSERVER_H\n+\n+#include <string>\n+#include <stdint.h>\n+#include <boost/thread.hpp>\n+#include <boost/scoped_ptr.hpp>\n+#include <boost/function.hpp>\n+\n+static const int DEFAULT_HTTP_THREADS=4;\n+static const int DEFAULT_HTTP_WORKQUEUE=16;\n+static const int DEFAULT_HTTP_TIMEOUT=30;\n+\n+struct evhttp_request;\n+struct event_base;\n+class CService;\n+class HTTPRequest;\n+\n+/** Initialize HTTP server.\n+ * Call this before RegisterHTTPHandler or EventBase().\n+ */\n+bool InitHTTPServer();\n+/** Start HTTP server.\n+ * This is separate from InitHTTPServer to give users race-condition-free time\n+ * to register their handlers between InitHTTPServer and StartHTTPServer.\n+ */\n+bool StartHTTPServer(boost::thread_group& threadGroup);\n+/** Interrupt HTTP server threads */\n+void InterruptHTTPServer();\n+/** Stop HTTP server */\n+void StopHTTPServer();\n+\n+/** Handler for requests to a certain HTTP path */\n+typedef boost::function<void(HTTPRequest* req, const std::string &)> HTTPRequestHandler;\n+/** Register handler for prefix.\n+ * If multiple handlers match a prefix, the first-registered one will\n+ * be invoked.\n+ */\n+void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler);\n+/** Unregister handler for prefix */\n+void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch);\n+\n+/** Return evhttp event base. This can be used by submodules to\n+ * queue timers or custom events.\n+ */\n+struct event_base* EventBase();\n+\n+/** In-flight HTTP request.\n+ * Thin C++ wrapper around evhttp_request.\n+ */\n+class HTTPRequest\n+{\n+private:\n+    struct evhttp_request* req;\n+    bool replySent;\n+\n+public:\n+    HTTPRequest(struct evhttp_request* req);\n+    ~HTTPRequest();\n+\n+    enum RequestMethod {\n+        UNKNOWN,\n+        GET,\n+        POST,\n+        HEAD,\n+        PUT\n+    };\n+\n+    /** Get requested URI.\n+     */\n+    std::string GetURI();\n+\n+    /** Get CService (address:ip) for the origin of the http request.\n+     */\n+    CService GetPeer();\n+\n+    /** Get request method.\n+     */\n+    RequestMethod GetRequestMethod();\n+\n+    /**\n+     * Get the request header specified by hdr, or an empty string.\n+     * Return an pair (isPresent,string).\n+     */\n+    std::pair<bool, std::string> GetHeader(const std::string& hdr);\n+\n+    /**\n+     * Read request body.\n+     *\n+     * @note As this consumes the underlying buffer, call this only once.\n+     * Repeated calls will return an empty string.\n+     */\n+    std::string ReadBody();\n+\n+    /**\n+     * Write output header.\n+     *\n+     * @note call this before calling WriteErrorReply or Reply.\n+     */\n+    void WriteHeader(const std::string& hdr, const std::string& value);\n+\n+    /**\n+     * Write HTTP reply.\n+     * nStatus is the HTTP status code to send.\n+     * strReply is the body of the reply. Keep it empty to send a standard message.\n+     *\n+     * @note Can be called only once. As this will give the request back to the\n+     * main thread, do not call any other HTTPRequest methods after calling this.\n+     */\n+    void WriteReply(int nStatus, const std::string& strReply = \"\");\n+};\n+\n+/** Event handler closure.\n+ */\n+class HTTPClosure\n+{\n+public:\n+    virtual void operator()() = 0;\n+    virtual ~HTTPClosure() {}\n+};\n+\n+/** Event class. This can be used either as an cross-thread trigger or as a timer.\n+ */\n+class HTTPEvent\n+{\n+public:\n+    /** Create a new event.\n+     * deleteWhenTriggered deletes this event object after the event is triggered (and the handler called)\n+     * handler is the handler to call when the event is triggered.\n+     */\n+    HTTPEvent(struct event_base* base, bool deleteWhenTriggered, const boost::function<void(void)>& handler);\n+    ~HTTPEvent();\n+\n+    /** Trigger the event. If tv is 0, trigger it immediately. Otherwise trigger it after\n+     * the given time has elapsed.\n+     */\n+    void trigger(struct timeval* tv);\n+\n+    bool deleteWhenTriggered;\n+    boost::function<void(void)> handler;\n+private:\n+    struct event* ev;\n+};\n+\n+#endif // BITCOIN_HTTPSERVER_H"
      },
      {
        "sha": "5759b4b4284c82f115e8afb4cd62e06cfc64861a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 22,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -16,6 +16,8 @@\n #include \"checkpoints.h\"\n #include \"compat/sanity.h\"\n #include \"consensus/validation.h\"\n+#include \"httpserver.h\"\n+#include \"httprpc.h\"\n #include \"key.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -144,6 +146,15 @@ class CCoinsViewErrorCatcher : public CCoinsViewBacked\n static CCoinsViewDB *pcoinsdbview = NULL;\n static CCoinsViewErrorCatcher *pcoinscatcher = NULL;\n \n+void Interrupt(boost::thread_group& threadGroup)\n+{\n+    InterruptHTTPServer();\n+    InterruptHTTPRPC();\n+    InterruptRPC();\n+    InterruptREST();\n+    threadGroup.interrupt_all();\n+}\n+\n void Shutdown()\n {\n     LogPrintf(\"%s: In progress...\\n\", __func__);\n@@ -158,7 +169,11 @@ void Shutdown()\n     /// module was initialized.\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n-    StopRPCThreads();\n+\n+    StopHTTPRPC();\n+    StopREST();\n+    StopRPC();\n+    StopHTTPServer();\n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n         pwalletMain->Flush(false);\n@@ -372,7 +387,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n@@ -422,14 +437,11 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n-    strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), 4));\n-    strUsage += HelpMessageOpt(\"-rpckeepalive\", strprintf(_(\"RPC support for HTTP persistent connections (default: %d)\"), 1));\n-\n-    strUsage += HelpMessageGroup(_(\"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"));\n-    strUsage += HelpMessageOpt(\"-rpcssl\", _(\"Use OpenSSL (https) for JSON-RPC connections\"));\n-    strUsage += HelpMessageOpt(\"-rpcsslcertificatechainfile=<file.cert>\", strprintf(_(\"Server certificate file (default: %s)\"), \"server.cert\"));\n-    strUsage += HelpMessageOpt(\"-rpcsslprivatekeyfile=<file.pem>\", strprintf(_(\"Server private key (default: %s)\"), \"server.pem\"));\n-    strUsage += HelpMessageOpt(\"-rpcsslciphers=<ciphers>\", strprintf(_(\"Acceptable ciphers (default: %s)\"), \"TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH\"));\n+    strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n+    if (showDebug) {\n+        strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n+        strUsage += HelpMessageOpt(\"-rpctimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_TIMEOUT));\n+    }\n \n     if (mode == HMM_BITCOIN_QT)\n     {\n@@ -601,6 +613,23 @@ bool InitSanityCheck(void)\n     return true;\n }\n \n+bool AppInitServers(boost::thread_group& threadGroup)\n+{\n+    RPCServer::OnStopped(&OnRPCStopped);\n+    RPCServer::OnPreCommand(&OnRPCPreCommand);\n+    if (!InitHTTPServer())\n+        return false;\n+    if (!StartRPC())\n+        return false;\n+    if (!StartHTTPRPC())\n+        return false;\n+    if (GetBoolArg(\"-rest\", false) && !StartREST())\n+        return false;\n+    if (!StartHTTPServer(threadGroup))\n+        return false;\n+    return true;\n+}\n+\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n@@ -628,17 +657,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     typedef BOOL (WINAPI *PSETPROCDEPPOL)(DWORD);\n     PSETPROCDEPPOL setProcDEPPol = (PSETPROCDEPPOL)GetProcAddress(GetModuleHandleA(\"Kernel32.dll\"), \"SetProcessDEPPolicy\");\n     if (setProcDEPPol != NULL) setProcDEPPol(PROCESS_DEP_ENABLE);\n-\n-    // Initialize Windows Sockets\n-    WSADATA wsadata;\n-    int ret = WSAStartup(MAKEWORD(2,2), &wsadata);\n-    if (ret != NO_ERROR || LOBYTE(wsadata.wVersion ) != 2 || HIBYTE(wsadata.wVersion) != 2)\n-    {\n-        return InitError(strprintf(\"Error: Winsock library failed to start (WSAStartup returned error %d)\", ret));\n-    }\n #endif\n-#ifndef WIN32\n \n+    if (!SetupNetworking())\n+        return InitError(\"Error: Initializing networking failed\");\n+\n+#ifndef WIN32\n     if (GetBoolArg(\"-sysperms\", false)) {\n #ifdef ENABLE_WALLET\n         if (!GetBoolArg(\"-disablewallet\", false))\n@@ -961,9 +985,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (fServer)\n     {\n         uiInterface.InitMessage.connect(SetRPCWarmupStatus);\n-        RPCServer::OnStopped(&OnRPCStopped);\n-        RPCServer::OnPreCommand(&OnRPCPreCommand);\n-        StartRPCThreads();\n+        if (!AppInitServers(threadGroup))\n+            return InitError(_(\"Unable to start HTTP server. See debug log for details.\"));\n     }\n \n     int64_t nStart;"
      },
      {
        "sha": "8cd51b0286f5dfe0d33b5b02c179568627a05737",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -20,6 +20,8 @@ extern CWallet* pwalletMain;\n \n void StartShutdown();\n bool ShutdownRequested();\n+/** Interrupt threads */\n+void Interrupt(boost::thread_group& threadGroup);\n void Shutdown();\n bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler);\n "
      },
      {
        "sha": "ea7f86d18e53f78a9a3b1e28f04fe645e75e430c",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -266,13 +266,6 @@ void BitcoinCore::initialize()\n     {\n         qDebug() << __func__ << \": Running AppInit2 in thread\";\n         int rv = AppInit2(threadGroup, scheduler);\n-        if(rv)\n-        {\n-            /* Start a dummy RPC thread if no RPC thread is active yet\n-             * to handle timeouts.\n-             */\n-            StartDummyRPCThread();\n-        }\n         Q_EMIT initializeResult(rv);\n     } catch (const std::exception& e) {\n         handleRunawayException(&e);\n@@ -286,7 +279,7 @@ void BitcoinCore::shutdown()\n     try\n     {\n         qDebug() << __func__ << \": Running Shutdown in thread\";\n-        threadGroup.interrupt_all();\n+        Interrupt(threadGroup);\n         threadGroup.join_all();\n         Shutdown();\n         qDebug() << __func__ << \": Shutdown finished\";"
      },
      {
        "sha": "b742a47c9ba323e359604bb300c68e3694ea9d05",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -28,6 +28,7 @@\n #include <QScrollBar>\n #include <QThread>\n #include <QTime>\n+#include <QTimer>\n \n #if QT_VERSION < 0x050000\n #include <QUrl>\n@@ -66,6 +67,40 @@ public Q_SLOTS:\n     void reply(int category, const QString &command);\n };\n \n+/** Class for handling RPC timers\n+ * (used for e.g. re-locking the wallet after a timeout)\n+ */\n+class QtRPCTimerBase: public QObject, public RPCTimerBase\n+{\n+    Q_OBJECT\n+public:\n+    QtRPCTimerBase(boost::function<void(void)>& func, int64_t millis):\n+        func(func)\n+    {\n+        timer.setSingleShot(true);\n+        connect(&timer, SIGNAL(timeout()), this, SLOT(timeout()));\n+        timer.start(millis);\n+    }\n+    ~QtRPCTimerBase() {}\n+private Q_SLOTS:\n+    void timeout() { func(); }\n+private:\n+    QTimer timer;\n+    boost::function<void(void)> func;\n+};\n+\n+class QtRPCTimerInterface: public RPCTimerInterface\n+{\n+public:\n+    ~QtRPCTimerInterface() {}\n+    const char *Name() { return \"Qt\"; }\n+    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis)\n+    {\n+        return new QtRPCTimerBase(func, millis);\n+    }\n+};\n+\n+\n #include \"rpcconsole.moc\"\n \n /**\n@@ -232,6 +267,9 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     ui->label_berkeleyDBVersion->hide();\n     ui->berkeleyDBVersion->hide();\n #endif\n+    // Register RPC timer interface\n+    rpcTimerInterface = new QtRPCTimerInterface();\n+    RPCRegisterTimerInterface(rpcTimerInterface);\n \n     startExecutor();\n     setTrafficGraphRange(INITIAL_TRAFFIC_GRAPH_MINS);\n@@ -246,6 +284,8 @@ RPCConsole::~RPCConsole()\n {\n     GUIUtil::saveWindowGeometry(\"nRPCConsoleWindow\", this);\n     Q_EMIT stopExecutor();\n+    RPCUnregisterTimerInterface(rpcTimerInterface);\n+    delete rpcTimerInterface;\n     delete ui;\n }\n "
      },
      {
        "sha": "1409fca525ad9f30e36fe3a608791becbc71b81f",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -14,6 +14,7 @@\n \n class ClientModel;\n class PlatformStyle;\n+class RPCTimerInterface;\n \n namespace Ui {\n     class RPCConsole;\n@@ -108,6 +109,7 @@ public Q_SLOTS:\n     NodeId cachedNodeid;\n     QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n+    RPCTimerInterface *rpcTimerInterface;\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      },
      {
        "sha": "f91de2008c6fc10714904952020569051788be09",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -17,6 +17,8 @@\n #include <QObject>\n #include <QTest>\n \n+#include <openssl/ssl.h>\n+\n #if defined(QT_STATICPLUGIN) && QT_VERSION < 0x050000\n #include <QtPlugin>\n Q_IMPORT_PLUGIN(qcncodecs)\n@@ -36,6 +38,8 @@ int main(int argc, char *argv[])\n     QCoreApplication app(argc, argv);\n     app.setApplicationName(\"Bitcoin-Qt-test\");\n \n+    SSL_library_init();\n+\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;"
      },
      {
        "sha": "940526706798faec6c4e935b0012cea1e9089aa2",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 111,
        "deletions": 132,
        "changes": 243,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -7,6 +7,7 @@\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"main.h\"\n+#include \"httpserver.h\"\n #include \"rpcserver.h\"\n #include \"streams.h\"\n #include \"sync.h\"\n@@ -56,29 +57,21 @@ struct CCoin {\n     }\n };\n \n-class RestErr\n-{\n-public:\n-    enum HTTPStatusCode status;\n-    string message;\n-};\n-\n extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n extern UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n extern UniValue mempoolInfoToJSON();\n extern UniValue mempoolToJSON(bool fVerbose = false);\n extern void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n extern UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n \n-static RestErr RESTERR(enum HTTPStatusCode status, string message)\n+static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, string message)\n {\n-    RestErr re;\n-    re.status = status;\n-    re.message = message;\n-    return re;\n+    req->WriteHeader(\"Content-Type\", \"text/plain\");\n+    req->WriteReply(status, message + \"\\r\\n\");\n+    return false;\n }\n \n-static enum RetFormat ParseDataFormat(vector<string>& params, const string strReq)\n+static enum RetFormat ParseDataFormat(vector<string>& params, const string& strReq)\n {\n     boost::split(params, strReq, boost::is_any_of(\".\"));\n     if (params.size() > 1) {\n@@ -115,28 +108,35 @@ static bool ParseHashStr(const string& strReq, uint256& v)\n     return true;\n }\n \n-static bool rest_headers(AcceptedConnection* conn,\n-                         const std::string& strURIPart,\n-                         const std::string& strRequest,\n-                         const std::map<std::string, std::string>& mapHeaders,\n-                         bool fRun)\n+static bool CheckWarmup(HTTPRequest* req)\n+{\n+    std::string statusmessage;\n+    if (RPCIsInWarmup(&statusmessage))\n+         return RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Service temporarily unavailable: \" + statusmessage);\n+    return true;\n+}\n+\n+static bool rest_headers(HTTPRequest* req,\n+                         const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n     vector<string> path;\n     boost::split(path, params[0], boost::is_any_of(\"/\"));\n \n     if (path.size() != 2)\n-        throw RESTERR(HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n \n     long count = strtol(path[0].c_str(), NULL, 10);\n     if (count < 1 || count > 2000)\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Header count out of range: \" + path[0]);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Header count out of range: \" + path[0]);\n \n     string hashStr = path[1];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n     std::vector<const CBlockIndex *> headers;\n     headers.reserve(count);\n@@ -160,63 +160,63 @@ static bool rest_headers(AcceptedConnection* conn,\n     switch (rf) {\n     case RF_BINARY: {\n         string binaryHeader = ssHeader.str();\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, binaryHeader.size(), \"application/octet-stream\") << binaryHeader << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryHeader);\n         return true;\n     }\n \n     case RF_HEX: {\n         string strHex = HexStr(ssHeader.begin(), ssHeader.end()) + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n-\n     case RF_JSON: {\n         UniValue jsonHeaders(UniValue::VARR);\n         BOOST_FOREACH(const CBlockIndex *pindex, headers) {\n             jsonHeaders.push_back(blockheaderToJSON(pindex));\n         }\n         string strJSON = jsonHeaders.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n-\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_block(AcceptedConnection* conn,\n+static bool rest_block(HTTPRequest* req,\n                        const std::string& strURIPart,\n-                       const std::string& strRequest,\n-                       const std::map<std::string, std::string>& mapHeaders,\n-                       bool fRun,\n                        bool showTxDetails)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n     string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n     CBlock block;\n     CBlockIndex* pblockindex = NULL;\n     {\n         LOCK(cs_main);\n         if (mapBlockIndex.count(hash) == 0)\n-            throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not found\");\n+            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n         pblockindex = mapBlockIndex[hash];\n         if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n-            throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\n+            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\n \n         if (!ReadBlockFromDisk(block, pblockindex))\n-            throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not found\");\n+            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n     CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n@@ -225,56 +225,49 @@ static bool rest_block(AcceptedConnection* conn,\n     switch (rf) {\n     case RF_BINARY: {\n         string binaryBlock = ssBlock.str();\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, binaryBlock.size(), \"application/octet-stream\") << binaryBlock << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryBlock);\n         return true;\n     }\n \n     case RF_HEX: {\n         string strHex = HexStr(ssBlock.begin(), ssBlock.end()) + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n \n     case RF_JSON: {\n         UniValue objBlock = blockToJSON(block, pblockindex, showTxDetails);\n         string strJSON = objBlock.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n \n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_block_extended(AcceptedConnection* conn,\n-                       const std::string& strURIPart,\n-                       const std::string& strRequest,\n-                       const std::map<std::string, std::string>& mapHeaders,\n-                       bool fRun)\n+static bool rest_block_extended(HTTPRequest* req, const std::string& strURIPart)\n {\n-    return rest_block(conn, strURIPart, strRequest, mapHeaders, fRun, true);\n+    return rest_block(req, strURIPart, true);\n }\n \n-static bool rest_block_notxdetails(AcceptedConnection* conn,\n-                       const std::string& strURIPart,\n-                       const std::string& strRequest,\n-                       const std::map<std::string, std::string>& mapHeaders,\n-                       bool fRun)\n+static bool rest_block_notxdetails(HTTPRequest* req, const std::string& strURIPart)\n {\n-    return rest_block(conn, strURIPart, strRequest, mapHeaders, fRun, false);\n+    return rest_block(req, strURIPart, false);\n }\n \n-static bool rest_chaininfo(AcceptedConnection* conn,\n-                           const std::string& strURIPart,\n-                           const std::string& strRequest,\n-                           const std::map<std::string, std::string>& mapHeaders,\n-                           bool fRun)\n+static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -283,24 +276,23 @@ static bool rest_chaininfo(AcceptedConnection* conn,\n         UniValue rpcParams(UniValue::VARR);\n         UniValue chainInfoObject = getblockchaininfo(rpcParams, false);\n         string strJSON = chainInfoObject.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_mempool_info(AcceptedConnection* conn,\n-                              const std::string& strURIPart,\n-                              const std::string& strRequest,\n-                              const std::map<std::string, std::string>& mapHeaders,\n-                              bool fRun)\n+static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -309,24 +301,23 @@ static bool rest_mempool_info(AcceptedConnection* conn,\n         UniValue mempoolInfoObject = mempoolInfoToJSON();\n \n         string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_mempool_contents(AcceptedConnection* conn,\n-                                  const std::string& strURIPart,\n-                                  const std::string& strRequest,\n-                                  const std::map<std::string, std::string>& mapHeaders,\n-                                  bool fRun)\n+static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -335,76 +326,76 @@ static bool rest_mempool_contents(AcceptedConnection* conn,\n         UniValue mempoolObject = mempoolToJSON(true);\n \n         string strJSON = mempoolObject.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_tx(AcceptedConnection* conn,\n-                    const std::string& strURIPart,\n-                    const std::string& strRequest,\n-                    const std::map<std::string, std::string>& mapHeaders,\n-                    bool fRun)\n+static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     const RetFormat rf = ParseDataFormat(params, strURIPart);\n \n     string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n-        throw RESTERR(HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n     CTransaction tx;\n     uint256 hashBlock = uint256();\n     if (!GetTransaction(hash, tx, hashBlock, true))\n-        throw RESTERR(HTTP_NOT_FOUND, hashStr + \" not found\");\n+        return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << tx;\n \n     switch (rf) {\n     case RF_BINARY: {\n         string binaryTx = ssTx.str();\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, binaryTx.size(), \"application/octet-stream\") << binaryTx << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, binaryTx);\n         return true;\n     }\n \n     case RF_HEX: {\n         string strHex = HexStr(ssTx.begin(), ssTx.end()) + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n \n     case RF_JSON: {\n         UniValue objTx(UniValue::VOBJ);\n         TxToJSON(tx, hashBlock, objTx);\n         string strJSON = objTx.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n \n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n     // not reached\n     return true; // continue to process further HTTP reqs on this cxn\n }\n \n-static bool rest_getutxos(AcceptedConnection* conn,\n-                          const std::string& strURIPart,\n-                          const std::string& strRequest,\n-                          const std::map<std::string, std::string>& mapHeaders,\n-                          bool fRun)\n+static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n {\n+    if (!CheckWarmup(req))\n+        return false;\n     vector<string> params;\n     enum RetFormat rf = ParseDataFormat(params, strURIPart);\n \n@@ -416,8 +407,9 @@ static bool rest_getutxos(AcceptedConnection* conn,\n     }\n \n     // throw exception in case of a empty request\n-    if (strRequest.length() == 0 && uriParts.size() == 0)\n-        throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n+    std::string strRequestMutable = req->ReadBody();\n+    if (strRequestMutable.length() == 0 && uriParts.size() == 0)\n+        return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n \n     bool fInputParsed = false;\n     bool fCheckMemPool = false;\n@@ -441,7 +433,7 @@ static bool rest_getutxos(AcceptedConnection* conn,\n             std::string strOutput = uriParts[i].substr(uriParts[i].find(\"-\")+1);\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n-                throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n+                return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n \n             txid.SetHex(strTxid);\n             vOutPoints.push_back(COutPoint(txid, (uint32_t)nOutput));\n@@ -450,15 +442,13 @@ static bool rest_getutxos(AcceptedConnection* conn,\n         if (vOutPoints.size() > 0)\n             fInputParsed = true;\n         else\n-            throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n+            return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n     }\n \n-    string strRequestMutable = strRequest; //convert const string to string for allowing hex to bin converting\n-\n     switch (rf) {\n     case RF_HEX: {\n         // convert hex to bin, continue then with bin part\n-        std::vector<unsigned char> strRequestV = ParseHex(strRequest);\n+        std::vector<unsigned char> strRequestV = ParseHex(strRequestMutable);\n         strRequestMutable.assign(strRequestV.begin(), strRequestV.end());\n     }\n \n@@ -468,7 +458,7 @@ static bool rest_getutxos(AcceptedConnection* conn,\n             if (strRequestMutable.size() > 0)\n             {\n                 if (fInputParsed) //don't allow sending input over URI and HTTP RAW DATA\n-                    throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Combination of URI scheme inputs and raw post data is not allowed\");\n+                    return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Combination of URI scheme inputs and raw post data is not allowed\");\n \n                 CDataStream oss(SER_NETWORK, PROTOCOL_VERSION);\n                 oss << strRequestMutable;\n@@ -477,24 +467,24 @@ static bool rest_getutxos(AcceptedConnection* conn,\n             }\n         } catch (const std::ios_base::failure& e) {\n             // abort in case of unreadable binary data\n-            throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n+            return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Parse error\");\n         }\n         break;\n     }\n \n     case RF_JSON: {\n         if (!fInputParsed)\n-            throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n+            return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, \"Error: empty request\");\n         break;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n     // limit max outpoints\n     if (vOutPoints.size() > MAX_GETUTXOS_OUTPOINTS)\n-        throw RESTERR(HTTP_INTERNAL_SERVER_ERROR, strprintf(\"Error: max outpoints exceeded (max: %d, tried: %d)\", MAX_GETUTXOS_OUTPOINTS, vOutPoints.size()));\n+        return RESTERR(req, HTTP_INTERNAL_SERVER_ERROR, strprintf(\"Error: max outpoints exceeded (max: %d, tried: %d)\", MAX_GETUTXOS_OUTPOINTS, vOutPoints.size()));\n \n     // check spentness and form a bitmap (as well as a JSON capable human-readble string representation)\n     vector<unsigned char> bitmap;\n@@ -544,7 +534,8 @@ static bool rest_getutxos(AcceptedConnection* conn,\n         ssGetUTXOResponse << chainActive.Height() << chainActive.Tip()->GetBlockHash() << bitmap << outs;\n         string ssGetUTXOResponseString = ssGetUTXOResponse.str();\n \n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, ssGetUTXOResponseString.size(), \"application/octet-stream\") << ssGetUTXOResponseString << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        req->WriteReply(HTTP_OK, ssGetUTXOResponseString);\n         return true;\n     }\n \n@@ -553,7 +544,8 @@ static bool rest_getutxos(AcceptedConnection* conn,\n         ssGetUTXOResponse << chainActive.Height() << chainActive.Tip()->GetBlockHash() << bitmap << outs;\n         string strHex = HexStr(ssGetUTXOResponse.begin(), ssGetUTXOResponse.end()) + \"\\n\";\n \n-        conn->stream() << HTTPReply(HTTP_OK, strHex, fRun, false, \"text/plain\") << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n         return true;\n     }\n \n@@ -583,11 +575,12 @@ static bool rest_getutxos(AcceptedConnection* conn,\n \n         // return json string\n         string strJSON = objGetUTXOResponse.write() + \"\\n\";\n-        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        req->WriteHeader(\"Content-Type\", \"application/json\");\n+        req->WriteReply(HTTP_OK, strJSON);\n         return true;\n     }\n     default: {\n-        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n+        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n \n@@ -597,11 +590,7 @@ static bool rest_getutxos(AcceptedConnection* conn,\n \n static const struct {\n     const char* prefix;\n-    bool (*handler)(AcceptedConnection* conn,\n-                    const std::string& strURIPart,\n-                    const std::string& strRequest,\n-                    const std::map<std::string, std::string>& mapHeaders,\n-                    bool fRun);\n+    bool (*handler)(HTTPRequest* req, const std::string& strReq);\n } uri_prefixes[] = {\n       {\"/rest/tx/\", rest_tx},\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n@@ -613,29 +602,19 @@ static const struct {\n       {\"/rest/getutxos\", rest_getutxos},\n };\n \n-bool HTTPReq_REST(AcceptedConnection* conn,\n-                  const std::string& strURI,\n-                  const string& strRequest,\n-                  const std::map<std::string, std::string>& mapHeaders,\n-                  bool fRun)\n+bool StartREST()\n {\n-    try {\n-        std::string statusmessage;\n-        if (RPCIsInWarmup(&statusmessage))\n-            throw RESTERR(HTTP_SERVICE_UNAVAILABLE, \"Service temporarily unavailable: \" + statusmessage);\n-\n-        for (unsigned int i = 0; i < ARRAYLEN(uri_prefixes); i++) {\n-            unsigned int plen = strlen(uri_prefixes[i].prefix);\n-            if (strURI.substr(0, plen) == uri_prefixes[i].prefix) {\n-                string strURIPart = strURI.substr(plen);\n-                return uri_prefixes[i].handler(conn, strURIPart, strRequest, mapHeaders, fRun);\n-            }\n-        }\n-    } catch (const RestErr& re) {\n-        conn->stream() << HTTPReply(re.status, re.message + \"\\r\\n\", false, false, \"text/plain\") << std::flush;\n-        return false;\n-    }\n+    for (unsigned int i = 0; i < ARRAYLEN(uri_prefixes); i++)\n+        RegisterHTTPHandler(uri_prefixes[i].prefix, false, uri_prefixes[i].handler);\n+    return true;\n+}\n \n-    conn->stream() << HTTPError(HTTP_NOT_FOUND, false) << std::flush;\n-    return false;\n+void InterruptREST()\n+{\n+}\n+\n+void StopREST()\n+{\n+    for (unsigned int i = 0; i < ARRAYLEN(uri_prefixes); i++)\n+        UnregisterHTTPHandler(uri_prefixes[i].prefix, false);\n }"
      },
      {
        "sha": "d83cd87f9400a23c9e23fc0c8da13a38aa0f49b2",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 229,
        "changes": 229,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -5,7 +5,6 @@\n \n #include \"rpcprotocol.h\"\n \n-#include \"clientversion.h\"\n #include \"random.h\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n@@ -16,236 +15,8 @@\n #include <stdint.h>\n #include <fstream>\n \n-#include <boost/algorithm/string.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n-#include <boost/bind.hpp>\n-#include <boost/filesystem.hpp>\n-#include <boost/foreach.hpp>\n-#include <boost/iostreams/concepts.hpp>\n-#include <boost/iostreams/stream.hpp>\n-#include <boost/shared_ptr.hpp>\n-\n-#include \"univalue/univalue.h\"\n-\n using namespace std;\n \n-//! Number of bytes to allocate and read at most at once in post data\n-const size_t POST_READ_SIZE = 256 * 1024;\n-\n-/**\n- * HTTP protocol\n- * \n- * This ain't Apache.  We're just using HTTP header for the length field\n- * and to be compatible with other JSON-RPC implementations.\n- */\n-\n-string HTTPPost(const string& strMsg, const map<string,string>& mapRequestHeaders)\n-{\n-    ostringstream s;\n-    s << \"POST / HTTP/1.1\\r\\n\"\n-      << \"User-Agent: bitcoin-json-rpc/\" << FormatFullVersion() << \"\\r\\n\"\n-      << \"Host: 127.0.0.1\\r\\n\"\n-      << \"Content-Type: application/json\\r\\n\"\n-      << \"Content-Length: \" << strMsg.size() << \"\\r\\n\"\n-      << \"Connection: close\\r\\n\"\n-      << \"Accept: application/json\\r\\n\";\n-    BOOST_FOREACH(const PAIRTYPE(string, string)& item, mapRequestHeaders)\n-        s << item.first << \": \" << item.second << \"\\r\\n\";\n-    s << \"\\r\\n\" << strMsg;\n-\n-    return s.str();\n-}\n-\n-static string rfc1123Time()\n-{\n-    return DateTimeStrFormat(\"%a, %d %b %Y %H:%M:%S +0000\", GetTime());\n-}\n-\n-static const char *httpStatusDescription(int nStatus)\n-{\n-    switch (nStatus) {\n-        case HTTP_OK: return \"OK\";\n-        case HTTP_BAD_REQUEST: return \"Bad Request\";\n-        case HTTP_FORBIDDEN: return \"Forbidden\";\n-        case HTTP_NOT_FOUND: return \"Not Found\";\n-        case HTTP_INTERNAL_SERVER_ERROR: return \"Internal Server Error\";\n-        default: return \"\";\n-    }\n-}\n-\n-string HTTPError(int nStatus, bool keepalive, bool headersOnly)\n-{\n-    if (nStatus == HTTP_UNAUTHORIZED)\n-        return strprintf(\"HTTP/1.0 401 Authorization Required\\r\\n\"\n-            \"Date: %s\\r\\n\"\n-            \"Server: bitcoin-json-rpc/%s\\r\\n\"\n-            \"WWW-Authenticate: Basic realm=\\\"jsonrpc\\\"\\r\\n\"\n-            \"Content-Type: text/html\\r\\n\"\n-            \"Content-Length: 296\\r\\n\"\n-            \"\\r\\n\"\n-            \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\"\\r\\n\"\n-            \"\\\"http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd\\\">\\r\\n\"\n-            \"<HTML>\\r\\n\"\n-            \"<HEAD>\\r\\n\"\n-            \"<TITLE>Error</TITLE>\\r\\n\"\n-            \"<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=ISO-8859-1'>\\r\\n\"\n-            \"</HEAD>\\r\\n\"\n-            \"<BODY><H1>401 Unauthorized.</H1></BODY>\\r\\n\"\n-            \"</HTML>\\r\\n\", rfc1123Time(), FormatFullVersion());\n-\n-    return HTTPReply(nStatus, httpStatusDescription(nStatus), keepalive,\n-                     headersOnly, \"text/plain\");\n-}\n-\n-string HTTPReplyHeader(int nStatus, bool keepalive, size_t contentLength, const char *contentType)\n-{\n-    return strprintf(\n-            \"HTTP/1.1 %d %s\\r\\n\"\n-            \"Date: %s\\r\\n\"\n-            \"Connection: %s\\r\\n\"\n-            \"Content-Length: %u\\r\\n\"\n-            \"Content-Type: %s\\r\\n\"\n-            \"Server: bitcoin-json-rpc/%s\\r\\n\"\n-            \"\\r\\n\",\n-        nStatus,\n-        httpStatusDescription(nStatus),\n-        rfc1123Time(),\n-        keepalive ? \"keep-alive\" : \"close\",\n-        contentLength,\n-        contentType,\n-        FormatFullVersion());\n-}\n-\n-string HTTPReply(int nStatus, const string& strMsg, bool keepalive,\n-                 bool headersOnly, const char *contentType)\n-{\n-    if (headersOnly)\n-    {\n-        return HTTPReplyHeader(nStatus, keepalive, 0, contentType);\n-    } else {\n-        return HTTPReplyHeader(nStatus, keepalive, strMsg.size(), contentType) + strMsg;\n-    }\n-}\n-\n-bool ReadHTTPRequestLine(std::basic_istream<char>& stream, int &proto,\n-                         string& http_method, string& http_uri)\n-{\n-    string str;\n-    getline(stream, str);\n-\n-    // HTTP request line is space-delimited\n-    vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n-    if (vWords.size() < 2)\n-        return false;\n-\n-    // HTTP methods permitted: GET, POST\n-    http_method = vWords[0];\n-    if (http_method != \"GET\" && http_method != \"POST\")\n-        return false;\n-\n-    // HTTP URI must be an absolute path, relative to current host\n-    http_uri = vWords[1];\n-    if (http_uri.size() == 0 || http_uri[0] != '/')\n-        return false;\n-\n-    // parse proto, if present\n-    string strProto = \"\";\n-    if (vWords.size() > 2)\n-        strProto = vWords[2];\n-\n-    proto = 0;\n-    const char *ver = strstr(strProto.c_str(), \"HTTP/1.\");\n-    if (ver != NULL)\n-        proto = atoi(ver+7);\n-\n-    return true;\n-}\n-\n-int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n-{\n-    string str;\n-    getline(stream, str);\n-    vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n-    if (vWords.size() < 2)\n-        return HTTP_INTERNAL_SERVER_ERROR;\n-    proto = 0;\n-    const char *ver = strstr(str.c_str(), \"HTTP/1.\");\n-    if (ver != NULL)\n-        proto = atoi(ver+7);\n-    return atoi(vWords[1].c_str());\n-}\n-\n-int ReadHTTPHeaders(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet)\n-{\n-    int nLen = 0;\n-    while (true)\n-    {\n-        string str;\n-        std::getline(stream, str);\n-        if (str.empty() || str == \"\\r\")\n-            break;\n-        string::size_type nColon = str.find(\":\");\n-        if (nColon != string::npos)\n-        {\n-            string strHeader = str.substr(0, nColon);\n-            boost::trim(strHeader);\n-            boost::to_lower(strHeader);\n-            string strValue = str.substr(nColon+1);\n-            boost::trim(strValue);\n-            mapHeadersRet[strHeader] = strValue;\n-            if (strHeader == \"content-length\")\n-                nLen = atoi(strValue.c_str());\n-        }\n-    }\n-    return nLen;\n-}\n-\n-\n-int ReadHTTPMessage(std::basic_istream<char>& stream, map<string,\n-                    string>& mapHeadersRet, string& strMessageRet,\n-                    int nProto, size_t max_size)\n-{\n-    mapHeadersRet.clear();\n-    strMessageRet = \"\";\n-\n-    // Read header\n-    int nLen = ReadHTTPHeaders(stream, mapHeadersRet);\n-    if (nLen < 0 || (size_t)nLen > max_size)\n-        return HTTP_INTERNAL_SERVER_ERROR;\n-\n-    // Read message\n-    if (nLen > 0)\n-    {\n-        vector<char> vch;\n-        size_t ptr = 0;\n-        while (ptr < (size_t)nLen)\n-        {\n-            size_t bytes_to_read = std::min((size_t)nLen - ptr, POST_READ_SIZE);\n-            vch.resize(ptr + bytes_to_read);\n-            stream.read(&vch[ptr], bytes_to_read);\n-            if (!stream) // Connection lost while reading\n-                return HTTP_INTERNAL_SERVER_ERROR;\n-            ptr += bytes_to_read;\n-        }\n-        strMessageRet = string(vch.begin(), vch.end());\n-    }\n-\n-    string sConHdr = mapHeadersRet[\"connection\"];\n-\n-    if ((sConHdr != \"close\") && (sConHdr != \"keep-alive\"))\n-    {\n-        if (nProto >= 1)\n-            mapHeadersRet[\"connection\"] = \"keep-alive\";\n-        else\n-            mapHeadersRet[\"connection\"] = \"close\";\n-    }\n-\n-    return HTTP_OK;\n-}\n-\n /**\n  * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n  * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were"
      },
      {
        "sha": "5381e4bcfd258e4e7e9d4803f8f19909ca2eef0e",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 86,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -10,10 +10,6 @@\n #include <map>\n #include <stdint.h>\n #include <string>\n-#include <boost/iostreams/concepts.hpp>\n-#include <boost/iostreams/stream.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n #include <boost/filesystem.hpp>\n \n #include \"univalue/univalue.h\"\n@@ -26,6 +22,7 @@ enum HTTPStatusCode\n     HTTP_UNAUTHORIZED          = 401,\n     HTTP_FORBIDDEN             = 403,\n     HTTP_NOT_FOUND             = 404,\n+    HTTP_BAD_METHOD            = 405,\n     HTTP_INTERNAL_SERVER_ERROR = 500,\n     HTTP_SERVICE_UNAVAILABLE   = 503,\n };\n@@ -79,88 +76,6 @@ enum RPCErrorCode\n     RPC_WALLET_ALREADY_UNLOCKED     = -17, //! Wallet is already unlocked\n };\n \n-/**\n- * IOStream device that speaks SSL but can also speak non-SSL\n- */\n-template <typename Protocol>\n-class SSLIOStreamDevice : public boost::iostreams::device<boost::iostreams::bidirectional> {\n-public:\n-    SSLIOStreamDevice(boost::asio::ssl::stream<typename Protocol::socket> &streamIn, bool fUseSSLIn) : stream(streamIn)\n-    {\n-        fUseSSL = fUseSSLIn;\n-        fNeedHandshake = fUseSSLIn;\n-    }\n-\n-    void handshake(boost::asio::ssl::stream_base::handshake_type role)\n-    {\n-        if (!fNeedHandshake) return;\n-        fNeedHandshake = false;\n-        stream.handshake(role);\n-    }\n-    std::streamsize read(char* s, std::streamsize n)\n-    {\n-        handshake(boost::asio::ssl::stream_base::server); // HTTPS servers read first\n-        if (fUseSSL) return stream.read_some(boost::asio::buffer(s, n));\n-        return stream.next_layer().read_some(boost::asio::buffer(s, n));\n-    }\n-    std::streamsize write(const char* s, std::streamsize n)\n-    {\n-        handshake(boost::asio::ssl::stream_base::client); // HTTPS clients write first\n-        if (fUseSSL) return boost::asio::write(stream, boost::asio::buffer(s, n));\n-        return boost::asio::write(stream.next_layer(), boost::asio::buffer(s, n));\n-    }\n-    bool connect(const std::string& server, const std::string& port)\n-    {\n-        using namespace boost::asio::ip;\n-        tcp::resolver resolver(stream.get_io_service());\n-        tcp::resolver::iterator endpoint_iterator;\n-#if BOOST_VERSION >= 104300\n-        try {\n-#endif\n-            // The default query (flags address_configured) tries IPv6 if\n-            // non-localhost IPv6 configured, and IPv4 if non-localhost IPv4\n-            // configured.\n-            tcp::resolver::query query(server.c_str(), port.c_str());\n-            endpoint_iterator = resolver.resolve(query);\n-#if BOOST_VERSION >= 104300\n-        } catch (const boost::system::system_error&) {\n-            // If we at first don't succeed, try blanket lookup (IPv4+IPv6 independent of configured interfaces)\n-            tcp::resolver::query query(server.c_str(), port.c_str(), resolver_query_base::flags());\n-            endpoint_iterator = resolver.resolve(query);\n-        }\n-#endif\n-        boost::system::error_code error = boost::asio::error::host_not_found;\n-        tcp::resolver::iterator end;\n-        while (error && endpoint_iterator != end)\n-        {\n-            stream.lowest_layer().close();\n-            stream.lowest_layer().connect(*endpoint_iterator++, error);\n-        }\n-        if (error)\n-            return false;\n-        return true;\n-    }\n-\n-private:\n-    bool fNeedHandshake;\n-    bool fUseSSL;\n-    boost::asio::ssl::stream<typename Protocol::socket>& stream;\n-};\n-\n-std::string HTTPPost(const std::string& strMsg, const std::map<std::string,std::string>& mapRequestHeaders);\n-std::string HTTPError(int nStatus, bool keepalive,\n-                      bool headerOnly = false);\n-std::string HTTPReplyHeader(int nStatus, bool keepalive, size_t contentLength,\n-                      const char *contentType = \"application/json\");\n-std::string HTTPReply(int nStatus, const std::string& strMsg, bool keepalive,\n-                      bool headerOnly = false,\n-                      const char *contentType = \"application/json\");\n-bool ReadHTTPRequestLine(std::basic_istream<char>& stream, int &proto,\n-                         std::string& http_method, std::string& http_uri);\n-int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto);\n-int ReadHTTPHeaders(std::basic_istream<char>& stream, std::map<std::string, std::string>& mapHeadersRet);\n-int ReadHTTPMessage(std::basic_istream<char>& stream, std::map<std::string, std::string>& mapHeadersRet,\n-                    std::string& strMessageRet, int nProto, size_t max_size);\n std::string JSONRPCRequest(const std::string& strMethod, const UniValue& params, const UniValue& id);\n UniValue JSONRPCReplyObj(const UniValue& result, const UniValue& error, const UniValue& id);\n std::string JSONRPCReply(const UniValue& result, const UniValue& error, const UniValue& id);"
      },
      {
        "sha": "b831d3d3b2bd6fbfc85827e2ca064495d04ae4a8",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 513,
        "changes": 554,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -12,13 +12,9 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n-#ifdef ENABLE_WALLET\n-#include \"wallet/wallet.h\"\n-#endif\n \n-#include <boost/algorithm/string.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n+#include \"univalue/univalue.h\"\n+\n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n@@ -27,28 +23,20 @@\n #include <boost/shared_ptr.hpp>\n #include <boost/signals2/signal.hpp>\n #include <boost/thread.hpp>\n+#include <boost/algorithm/string/case_conv.hpp> // for to_upper()\n \n-#include \"univalue/univalue.h\"\n-\n-using namespace boost::asio;\n using namespace RPCServer;\n using namespace std;\n \n-static std::string strRPCUserColonPass;\n-\n static bool fRPCRunning = false;\n static bool fRPCInWarmup = true;\n static std::string rpcWarmupStatus(\"RPC server started\");\n static CCriticalSection cs_rpcWarmup;\n-\n-//! These are created by StartRPCThreads, destroyed in StopRPCThreads\n-static boost::asio::io_service* rpc_io_service = NULL;\n-static map<string, boost::shared_ptr<deadline_timer> > deadlineTimers;\n-static ssl::context* rpc_ssl_context = NULL;\n-static boost::thread_group* rpc_worker_group = NULL;\n-static boost::asio::io_service::work *rpc_dummy_work = NULL;\n-static std::vector<CSubNet> rpc_allow_subnets; //!< List of subnets to allow RPC connections from\n-static std::vector< boost::shared_ptr<ip::tcp::acceptor> > rpc_acceptors;\n+/* Timer-creating functions */\n+static std::vector<RPCTimerInterface*> timerInterfaces;\n+/* Map of name to timer.\n+ * @note Can be changed to std::unique_ptr when C++11 */\n+static std::map<std::string, boost::shared_ptr<RPCTimerBase> > deadlineTimers;\n \n static struct CRPCSignals\n {\n@@ -169,7 +157,6 @@ vector<unsigned char> ParseHexO(const UniValue& o, string strKey)\n     return ParseHexV(find_value(o, strKey), strKey);\n }\n \n-\n /**\n  * Note: This interface may still be subject to change.\n  */\n@@ -261,8 +248,6 @@ UniValue stop(const UniValue& params, bool fHelp)\n     return \"Bitcoin server stopping\";\n }\n \n-\n-\n /**\n  * Call Table\n  */\n@@ -399,381 +384,34 @@ CRPCTable::CRPCTable()\n     }\n }\n \n-const CRPCCommand *CRPCTable::operator[](const std::string& name) const\n+const CRPCCommand *CRPCTable::operator[](const std::string &name) const\n {\n     map<string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n     if (it == mapCommands.end())\n         return NULL;\n     return (*it).second;\n }\n \n-\n-bool HTTPAuthorized(map<string, string>& mapHeaders)\n-{\n-    string strAuth = mapHeaders[\"authorization\"];\n-    if (strAuth.substr(0,6) != \"Basic \")\n-        return false;\n-    string strUserPass64 = strAuth.substr(6); boost::trim(strUserPass64);\n-    string strUserPass = DecodeBase64(strUserPass64);\n-    return TimingResistantEqual(strUserPass, strRPCUserColonPass);\n-}\n-\n-void ErrorReply(std::ostream& stream, const UniValue& objError, const UniValue& id)\n-{\n-    // Send error reply from json-rpc error object\n-    int nStatus = HTTP_INTERNAL_SERVER_ERROR;\n-    int code = find_value(objError, \"code\").get_int();\n-    if (code == RPC_INVALID_REQUEST) nStatus = HTTP_BAD_REQUEST;\n-    else if (code == RPC_METHOD_NOT_FOUND) nStatus = HTTP_NOT_FOUND;\n-    string strReply = JSONRPCReply(NullUniValue, objError, id);\n-    stream << HTTPReply(nStatus, strReply, false) << std::flush;\n-}\n-\n-CNetAddr BoostAsioToCNetAddr(boost::asio::ip::address address)\n-{\n-    CNetAddr netaddr;\n-    // Make sure that IPv4-compatible and IPv4-mapped IPv6 addresses are treated as IPv4 addresses\n-    if (address.is_v6()\n-     && (address.to_v6().is_v4_compatible()\n-      || address.to_v6().is_v4_mapped()))\n-        address = address.to_v6().to_v4();\n-\n-    if(address.is_v4())\n-    {\n-        boost::asio::ip::address_v4::bytes_type bytes = address.to_v4().to_bytes();\n-        netaddr.SetRaw(NET_IPV4, &bytes[0]);\n-    }\n-    else\n-    {\n-        boost::asio::ip::address_v6::bytes_type bytes = address.to_v6().to_bytes();\n-        netaddr.SetRaw(NET_IPV6, &bytes[0]);\n-    }\n-    return netaddr;\n-}\n-\n-bool ClientAllowed(const boost::asio::ip::address& address)\n-{\n-    CNetAddr netaddr = BoostAsioToCNetAddr(address);\n-    BOOST_FOREACH(const CSubNet &subnet, rpc_allow_subnets)\n-        if (subnet.Match(netaddr))\n-            return true;\n-    return false;\n-}\n-\n-template <typename Protocol>\n-class AcceptedConnectionImpl : public AcceptedConnection\n-{\n-public:\n-    AcceptedConnectionImpl(\n-            boost::asio::io_service& io_service,\n-            ssl::context &context,\n-            bool fUseSSL) :\n-        sslStream(io_service, context),\n-        _d(sslStream, fUseSSL),\n-        _stream(_d)\n-    {\n-    }\n-\n-    virtual std::iostream& stream()\n-    {\n-        return _stream;\n-    }\n-\n-    virtual std::string peer_address_to_string() const\n-    {\n-        return peer.address().to_string();\n-    }\n-\n-    virtual void close()\n-    {\n-        _stream.close();\n-    }\n-\n-    typename Protocol::endpoint peer;\n-    boost::asio::ssl::stream<typename Protocol::socket> sslStream;\n-\n-private:\n-    SSLIOStreamDevice<Protocol> _d;\n-    boost::iostreams::stream< SSLIOStreamDevice<Protocol> > _stream;\n-};\n-\n-void ServiceConnection(AcceptedConnection *conn);\n-\n-//! Forward declaration required for RPCListen\n-template <typename Protocol, typename SocketAcceptorService>\n-static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n-                             ssl::context& context,\n-                             bool fUseSSL,\n-                             boost::shared_ptr< AcceptedConnection > conn,\n-                             const boost::system::error_code& error);\n-\n-/**\n- * Sets up I/O resources to accept and handle a new connection.\n- */\n-template <typename Protocol, typename SocketAcceptorService>\n-static void RPCListen(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n-                   ssl::context& context,\n-                   const bool fUseSSL)\n-{\n-    // Accept connection\n-    boost::shared_ptr< AcceptedConnectionImpl<Protocol> > conn(new AcceptedConnectionImpl<Protocol>(acceptor->get_io_service(), context, fUseSSL));\n-\n-    acceptor->async_accept(\n-            conn->sslStream.lowest_layer(),\n-            conn->peer,\n-            boost::bind(&RPCAcceptHandler<Protocol, SocketAcceptorService>,\n-                acceptor,\n-                boost::ref(context),\n-                fUseSSL,\n-                conn,\n-                _1));\n-}\n-\n-\n-/**\n- * Accept and handle incoming connection.\n- */\n-template <typename Protocol, typename SocketAcceptorService>\n-static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n-                             ssl::context& context,\n-                             const bool fUseSSL,\n-                             boost::shared_ptr< AcceptedConnection > conn,\n-                             const boost::system::error_code& error)\n+bool StartRPC()\n {\n-    // Immediately start accepting new connections, except when we're cancelled or our socket is closed.\n-    if (error != boost::asio::error::operation_aborted && acceptor->is_open())\n-        RPCListen(acceptor, context, fUseSSL);\n-\n-    AcceptedConnectionImpl<ip::tcp>* tcp_conn = dynamic_cast< AcceptedConnectionImpl<ip::tcp>* >(conn.get());\n-\n-    if (error)\n-    {\n-        // TODO: Actually handle errors\n-        LogPrintf(\"%s: Error: %s\\n\", __func__, error.message());\n-    }\n-    // Restrict callers by IP.  It is important to\n-    // do this before starting client thread, to filter out\n-    // certain DoS and misbehaving clients.\n-    else if (tcp_conn && !ClientAllowed(tcp_conn->peer.address()))\n-    {\n-        // Only send a 403 if we're not using SSL to prevent a DoS during the SSL handshake.\n-        if (!fUseSSL)\n-            conn->stream() << HTTPError(HTTP_FORBIDDEN, false) << std::flush;\n-        conn->close();\n-    }\n-    else {\n-        ServiceConnection(conn.get());\n-        conn->close();\n-    }\n-}\n-\n-static ip::tcp::endpoint ParseEndpoint(const std::string &strEndpoint, int defaultPort)\n-{\n-    std::string addr;\n-    int port = defaultPort;\n-    SplitHostPort(strEndpoint, port, addr);\n-    return ip::tcp::endpoint(boost::asio::ip::address::from_string(addr), port);\n-}\n-\n-void StartRPCThreads()\n-{\n-    rpc_allow_subnets.clear();\n-    rpc_allow_subnets.push_back(CSubNet(\"127.0.0.0/8\")); // always allow IPv4 local subnet\n-    rpc_allow_subnets.push_back(CSubNet(\"::1\")); // always allow IPv6 localhost\n-    if (mapMultiArgs.count(\"-rpcallowip\"))\n-    {\n-        const vector<string>& vAllow = mapMultiArgs[\"-rpcallowip\"];\n-        BOOST_FOREACH(string strAllow, vAllow)\n-        {\n-            CSubNet subnet(strAllow);\n-            if(!subnet.IsValid())\n-            {\n-                uiInterface.ThreadSafeMessageBox(\n-                    strprintf(\"Invalid -rpcallowip subnet specification: %s. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\", strAllow),\n-                    \"\", CClientUIInterface::MSG_ERROR);\n-                StartShutdown();\n-                return;\n-            }\n-            rpc_allow_subnets.push_back(subnet);\n-        }\n-    }\n-    std::string strAllowed;\n-    BOOST_FOREACH(const CSubNet &subnet, rpc_allow_subnets)\n-        strAllowed += subnet.ToString() + \" \";\n-    LogPrint(\"rpc\", \"Allowing RPC connections from: %s\\n\", strAllowed);\n-\n-    if (mapArgs[\"-rpcpassword\"] == \"\")\n-    {\n-        LogPrintf(\"No rpcpassword set - using random cookie authentication\\n\");\n-        if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n-            uiInterface.ThreadSafeMessageBox(\n-                _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n-                \"\", CClientUIInterface::MSG_ERROR);\n-            StartShutdown();\n-            return;\n-        }\n-    } else {\n-        strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    }\n-\n-    assert(rpc_io_service == NULL);\n-    rpc_io_service = new boost::asio::io_service();\n-    rpc_ssl_context = new ssl::context(*rpc_io_service, ssl::context::sslv23);\n-\n-    const bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n-\n-    if (fUseSSL)\n-    {\n-        rpc_ssl_context->set_options(ssl::context::no_sslv2 | ssl::context::no_sslv3);\n-\n-        boost::filesystem::path pathCertFile(GetArg(\"-rpcsslcertificatechainfile\", \"server.cert\"));\n-        if (!pathCertFile.is_complete()) pathCertFile = boost::filesystem::path(GetDataDir()) / pathCertFile;\n-        if (boost::filesystem::exists(pathCertFile)) rpc_ssl_context->use_certificate_chain_file(pathCertFile.string());\n-        else LogPrintf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string());\n-\n-        boost::filesystem::path pathPKFile(GetArg(\"-rpcsslprivatekeyfile\", \"server.pem\"));\n-        if (!pathPKFile.is_complete()) pathPKFile = boost::filesystem::path(GetDataDir()) / pathPKFile;\n-        if (boost::filesystem::exists(pathPKFile)) rpc_ssl_context->use_private_key_file(pathPKFile.string(), ssl::context::pem);\n-        else LogPrintf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string());\n-\n-        string strCiphers = GetArg(\"-rpcsslciphers\", \"TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH\");\n-        SSL_CTX_set_cipher_list(rpc_ssl_context->impl(), strCiphers.c_str());\n-    }\n-\n-    std::vector<ip::tcp::endpoint> vEndpoints;\n-    bool bBindAny = false;\n-    int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n-    if (!mapArgs.count(\"-rpcallowip\")) // Default to loopback if not allowing external IPs\n-    {\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v6::loopback(), defaultPort));\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v4::loopback(), defaultPort));\n-        if (mapArgs.count(\"-rpcbind\"))\n-        {\n-            LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n-        }\n-    } else if (mapArgs.count(\"-rpcbind\")) // Specific bind address\n-    {\n-        BOOST_FOREACH(const std::string &addr, mapMultiArgs[\"-rpcbind\"])\n-        {\n-            try {\n-                vEndpoints.push_back(ParseEndpoint(addr, defaultPort));\n-            }\n-            catch (const boost::system::system_error&)\n-            {\n-                uiInterface.ThreadSafeMessageBox(\n-                    strprintf(_(\"Could not parse -rpcbind value %s as network address\"), addr),\n-                    \"\", CClientUIInterface::MSG_ERROR);\n-                StartShutdown();\n-                return;\n-            }\n-        }\n-    } else { // No specific bind address specified, bind to any\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v6::any(), defaultPort));\n-        vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v4::any(), defaultPort));\n-        // Prefer making the socket dual IPv6/IPv4 instead of binding\n-        // to both addresses separately.\n-        bBindAny = true;\n-    }\n-\n-    bool fListening = false;\n-    std::string strerr;\n-    std::string straddress;\n-    BOOST_FOREACH(const ip::tcp::endpoint &endpoint, vEndpoints)\n-    {\n-        try {\n-            boost::asio::ip::address bindAddress = endpoint.address();\n-            straddress = bindAddress.to_string();\n-            LogPrintf(\"Binding RPC on address %s port %i (IPv4+IPv6 bind any: %i)\\n\", straddress, endpoint.port(), bBindAny);\n-            boost::system::error_code v6_only_error;\n-            boost::shared_ptr<ip::tcp::acceptor> acceptor(new ip::tcp::acceptor(*rpc_io_service));\n-\n-            acceptor->open(endpoint.protocol());\n-            acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n-\n-            // Try making the socket dual IPv6/IPv4 when listening on the IPv6 \"any\" address\n-            acceptor->set_option(boost::asio::ip::v6_only(\n-                !bBindAny || bindAddress != boost::asio::ip::address_v6::any()), v6_only_error);\n-\n-            acceptor->bind(endpoint);\n-            acceptor->listen(socket_base::max_connections);\n-\n-            RPCListen(acceptor, *rpc_ssl_context, fUseSSL);\n-\n-            fListening = true;\n-            rpc_acceptors.push_back(acceptor);\n-            // If dual IPv6/IPv4 bind successful, skip binding to IPv4 separately\n-            if(bBindAny && bindAddress == boost::asio::ip::address_v6::any() && !v6_only_error)\n-                break;\n-        }\n-        catch (const boost::system::system_error& e)\n-        {\n-            LogPrintf(\"ERROR: Binding RPC on address %s port %i failed: %s\\n\", straddress, endpoint.port(), e.what());\n-            strerr = strprintf(_(\"An error occurred while setting up the RPC address %s port %u for listening: %s\"), straddress, endpoint.port(), e.what());\n-        }\n-    }\n-\n-    if (!fListening) {\n-        uiInterface.ThreadSafeMessageBox(strerr, \"\", CClientUIInterface::MSG_ERROR);\n-        StartShutdown();\n-        return;\n-    }\n-\n-    rpc_worker_group = new boost::thread_group();\n-    for (int i = 0; i < GetArg(\"-rpcthreads\", 4); i++)\n-        rpc_worker_group->create_thread(boost::bind(&boost::asio::io_service::run, rpc_io_service));\n+    LogPrint(\"rpc\", \"Starting RPC\\n\");\n     fRPCRunning = true;\n     g_rpcSignals.Started();\n+    return true;\n }\n \n-void StartDummyRPCThread()\n+void InterruptRPC()\n {\n-    if(rpc_io_service == NULL)\n-    {\n-        rpc_io_service = new boost::asio::io_service();\n-        /* Create dummy \"work\" to keep the thread from exiting when no timeouts active,\n-         * see http://www.boost.org/doc/libs/1_51_0/doc/html/boost_asio/reference/io_service.html#boost_asio.reference.io_service.stopping_the_io_service_from_running_out_of_work */\n-        rpc_dummy_work = new boost::asio::io_service::work(*rpc_io_service);\n-        rpc_worker_group = new boost::thread_group();\n-        rpc_worker_group->create_thread(boost::bind(&boost::asio::io_service::run, rpc_io_service));\n-        fRPCRunning = true;\n-    }\n+    LogPrint(\"rpc\", \"Interrupting RPC\\n\");\n+    // Interrupt e.g. running longpolls\n+    fRPCRunning = false;\n }\n \n-void StopRPCThreads()\n+void StopRPC()\n {\n-    if (rpc_io_service == NULL) return;\n-    // Set this to false first, so that longpolling loops will exit when woken up\n-    fRPCRunning = false;\n-\n-    // First, cancel all timers and acceptors\n-    // This is not done automatically by ->stop(), and in some cases the destructor of\n-    // boost::asio::io_service can hang if this is skipped.\n-    boost::system::error_code ec;\n-    BOOST_FOREACH(const boost::shared_ptr<ip::tcp::acceptor> &acceptor, rpc_acceptors)\n-    {\n-        acceptor->cancel(ec);\n-        if (ec)\n-            LogPrintf(\"%s: Warning: %s when cancelling acceptor\\n\", __func__, ec.message());\n-    }\n-    rpc_acceptors.clear();\n-    BOOST_FOREACH(const PAIRTYPE(std::string, boost::shared_ptr<deadline_timer>) &timer, deadlineTimers)\n-    {\n-        timer.second->cancel(ec);\n-        if (ec)\n-            LogPrintf(\"%s: Warning: %s when cancelling timer\\n\", __func__, ec.message());\n-    }\n+    LogPrint(\"rpc\", \"Stopping RPC\\n\");\n     deadlineTimers.clear();\n-\n-    DeleteAuthCookie();\n-\n-    rpc_io_service->stop();\n     g_rpcSignals.Stopped();\n-    if (rpc_worker_group != NULL)\n-        rpc_worker_group->join_all();\n-    delete rpc_dummy_work; rpc_dummy_work = NULL;\n-    delete rpc_worker_group; rpc_worker_group = NULL;\n-    delete rpc_ssl_context; rpc_ssl_context = NULL;\n-    delete rpc_io_service; rpc_io_service = NULL;\n }\n \n bool IsRPCRunning()\n@@ -802,36 +440,6 @@ bool RPCIsInWarmup(std::string *outStatus)\n     return fRPCInWarmup;\n }\n \n-void RPCRunHandler(const boost::system::error_code& err, boost::function<void(void)> func)\n-{\n-    if (!err)\n-        func();\n-}\n-\n-void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds)\n-{\n-    assert(rpc_io_service != NULL);\n-\n-    if (deadlineTimers.count(name) == 0)\n-    {\n-        deadlineTimers.insert(make_pair(name,\n-                                        boost::shared_ptr<deadline_timer>(new deadline_timer(*rpc_io_service))));\n-    }\n-    deadlineTimers[name]->expires_from_now(boost::posix_time::seconds(nSeconds));\n-    deadlineTimers[name]->async_wait(boost::bind(RPCRunHandler, _1, func));\n-}\n-\n-class JSONRequest\n-{\n-public:\n-    UniValue id;\n-    string strMethod;\n-    UniValue params;\n-\n-    JSONRequest() { id = NullUniValue; }\n-    void parse(const UniValue& valRequest);\n-};\n-\n void JSONRequest::parse(const UniValue& valRequest)\n {\n     // Parse request\n@@ -862,7 +470,6 @@ void JSONRequest::parse(const UniValue& valRequest)\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array\");\n }\n \n-\n static UniValue JSONRPCExecOne(const UniValue& req)\n {\n     UniValue rpc_result(UniValue::VOBJ);\n@@ -887,7 +494,7 @@ static UniValue JSONRPCExecOne(const UniValue& req)\n     return rpc_result;\n }\n \n-static string JSONRPCExecBatch(const UniValue& vReq)\n+std::string JSONRPCExecBatch(const UniValue& vReq)\n {\n     UniValue ret(UniValue::VARR);\n     for (unsigned int reqIdx = 0; reqIdx < vReq.size(); reqIdx++)\n@@ -896,107 +503,6 @@ static string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n-static bool HTTPReq_JSONRPC(AcceptedConnection *conn,\n-                            string& strRequest,\n-                            map<string, string>& mapHeaders,\n-                            bool fRun)\n-{\n-    // Check authorization\n-    if (mapHeaders.count(\"authorization\") == 0)\n-    {\n-        conn->stream() << HTTPError(HTTP_UNAUTHORIZED, false) << std::flush;\n-        return false;\n-    }\n-\n-    if (!HTTPAuthorized(mapHeaders))\n-    {\n-        LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string());\n-        /* Deter brute-forcing\n-           We don't support exposing the RPC port, so this shouldn't result\n-           in a DoS. */\n-        MilliSleep(250);\n-\n-        conn->stream() << HTTPError(HTTP_UNAUTHORIZED, false) << std::flush;\n-        return false;\n-    }\n-\n-    JSONRequest jreq;\n-    try\n-    {\n-        // Parse request\n-        UniValue valRequest;\n-        if (!valRequest.read(strRequest))\n-            throw JSONRPCError(RPC_PARSE_ERROR, \"Parse error\");\n-\n-        string strReply;\n-\n-        // singleton request\n-        if (valRequest.isObject()) {\n-            jreq.parse(valRequest);\n-\n-            UniValue result = tableRPC.execute(jreq.strMethod, jreq.params);\n-\n-            // Send reply\n-            strReply = JSONRPCReply(result, NullUniValue, jreq.id);\n-\n-        // array of requests\n-        } else if (valRequest.isArray())\n-            strReply = JSONRPCExecBatch(valRequest.get_array());\n-        else\n-            throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\n-\n-        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, strReply.size()) << strReply << std::flush;\n-    }\n-    catch (const UniValue& objError)\n-    {\n-        ErrorReply(conn->stream(), objError, jreq.id);\n-        return false;\n-    }\n-    catch (const std::exception& e)\n-    {\n-        ErrorReply(conn->stream(), JSONRPCError(RPC_PARSE_ERROR, e.what()), jreq.id);\n-        return false;\n-    }\n-    return true;\n-}\n-\n-void ServiceConnection(AcceptedConnection *conn)\n-{\n-    bool fRun = true;\n-    while (fRun && !ShutdownRequested())\n-    {\n-        int nProto = 0;\n-        map<string, string> mapHeaders;\n-        string strRequest, strMethod, strURI;\n-\n-        // Read HTTP request line\n-        if (!ReadHTTPRequestLine(conn->stream(), nProto, strMethod, strURI))\n-            break;\n-\n-        // Read HTTP message headers and body\n-        ReadHTTPMessage(conn->stream(), mapHeaders, strRequest, nProto, MAX_SIZE);\n-\n-        // HTTP Keep-Alive is false; close connection immediately\n-        if ((mapHeaders[\"connection\"] == \"close\") || (!GetBoolArg(\"-rpckeepalive\", true)))\n-            fRun = false;\n-\n-        // Process via JSON-RPC API\n-        if (strURI == \"/\") {\n-            if (!HTTPReq_JSONRPC(conn, strRequest, mapHeaders, fRun))\n-                break;\n-\n-        // Process via HTTP REST API\n-        } else if (strURI.substr(0, 6) == \"/rest/\" && GetBoolArg(\"-rest\", false)) {\n-            if (!HTTPReq_REST(conn, strURI, strRequest, mapHeaders, fRun))\n-                break;\n-\n-        } else {\n-            conn->stream() << HTTPError(HTTP_NOT_FOUND, false) << std::flush;\n-            break;\n-        }\n-    }\n-}\n-\n UniValue CRPCTable::execute(const std::string &strMethod, const UniValue &params) const\n {\n     // Return immediately if in warmup\n@@ -1037,4 +543,26 @@ std::string HelpExampleRpc(const std::string& methodname, const std::string& arg\n         \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n }\n \n+void RPCRegisterTimerInterface(RPCTimerInterface *iface)\n+{\n+    timerInterfaces.push_back(iface);\n+}\n+\n+void RPCUnregisterTimerInterface(RPCTimerInterface *iface)\n+{\n+    std::vector<RPCTimerInterface*>::iterator i = std::find(timerInterfaces.begin(), timerInterfaces.end(), iface);\n+    assert(i != timerInterfaces.end());\n+    timerInterfaces.erase(i);\n+}\n+\n+void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds)\n+{\n+    if (timerInterfaces.empty())\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");\n+    deadlineTimers.erase(name);\n+    RPCTimerInterface* timerInterface = timerInterfaces[0];\n+    LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n+    deadlineTimers.insert(std::make_pair(name, timerInterface->NewTimer(func, nSeconds*1000)));\n+}\n+\n const CRPCTable tableRPC;"
      },
      {
        "sha": "83cc37918ba5785d8f8d29e0bd663e39857e41d9",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 44,
        "deletions": 28,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -32,26 +32,17 @@ namespace RPCServer\n class CBlockIndex;\n class CNetAddr;\n \n-class AcceptedConnection\n+class JSONRequest\n {\n public:\n-    virtual ~AcceptedConnection() {}\n+    UniValue id;\n+    std::string strMethod;\n+    UniValue params;\n \n-    virtual std::iostream& stream() = 0;\n-    virtual std::string peer_address_to_string() const = 0;\n-    virtual void close() = 0;\n+    JSONRequest() { id = NullUniValue; }\n+    void parse(const UniValue& valRequest);\n };\n \n-/** Start RPC threads */\n-void StartRPCThreads();\n-/**\n- * Alternative to StartRPCThreads for the GUI, when no server is\n- * used. The RPC thread in this case is only used to handle timeouts.\n- * If real RPC threads have already been started this is a no-op.\n- */\n-void StartDummyRPCThread();\n-/** Stop RPC threads */\n-void StopRPCThreads();\n /** Query whether RPC is running */\n bool IsRPCRunning();\n \n@@ -81,15 +72,45 @@ void RPCTypeCheck(const UniValue& params,\n void RPCTypeCheckObj(const UniValue& o,\n                   const std::map<std::string, UniValue::VType>& typesExpected, bool fAllowNull=false);\n \n+/** Opaque base class for timers returned by NewTimerFunc.\n+ * This provides no methods at the moment, but makes sure that delete\n+ * cleans up the whole state.\n+ */\n+class RPCTimerBase\n+{\n+public:\n+    virtual ~RPCTimerBase() {}\n+};\n+\n /**\n- * Run func nSeconds from now. Uses boost deadline timers.\n+ * RPC timer \"driver\".\n+ */\n+class RPCTimerInterface\n+{\n+public:\n+    virtual ~RPCTimerInterface() {}\n+    /** Implementation name */\n+    virtual const char *Name() = 0;\n+    /** Factory function for timers.\n+     * RPC will call the function to create a timer that will call func in *millis* milliseconds.\n+     * @note As the RPC mechanism is backend-neutral, it can use different implementations of timers.\n+     * This is needed to cope with the case in which there is no HTTP server, but\n+     * only GUI RPC console, and to break the dependency of pcserver on httprpc.\n+     */\n+    virtual RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis) = 0;\n+};\n+\n+/** Register factory function for timers */\n+void RPCRegisterTimerInterface(RPCTimerInterface *iface);\n+/** Unregister factory function for timers */\n+void RPCUnregisterTimerInterface(RPCTimerInterface *iface);\n+\n+/**\n+ * Run func nSeconds from now.\n  * Overrides previous timer <name> (if any).\n  */\n void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds);\n \n-//! Convert boost::asio address to CNetAddr\n-extern CNetAddr BoostAsioToCNetAddr(boost::asio::ip::address address);\n-\n typedef UniValue(*rpcfn_type)(const UniValue& params, bool fHelp);\n \n class CRPCCommand\n@@ -134,9 +155,6 @@ extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n-extern void InitRPCMining();\n-extern void ShutdownRPCMining();\n-\n extern int64_t nWalletUnlockTime;\n extern CAmount AmountFromValue(const UniValue& value);\n extern UniValue ValueFromAmount(const CAmount& amount);\n@@ -244,11 +262,9 @@ extern UniValue getchaintips(const UniValue& params, bool fHelp);\n extern UniValue invalidateblock(const UniValue& params, bool fHelp);\n extern UniValue reconsiderblock(const UniValue& params, bool fHelp);\n \n-// in rest.cpp\n-extern bool HTTPReq_REST(AcceptedConnection *conn,\n-                  const std::string& strURI,\n-                  const std::string& strRequest,\n-                  const std::map<std::string, std::string>& mapHeaders,\n-                  bool fRun);\n+bool StartRPC();\n+void InterruptRPC();\n+void StopRPC();\n+std::string JSONRPCExecBatch(const UniValue& vReq);\n \n #endif // BITCOIN_RPCSERVER_H"
      },
      {
        "sha": "c0476db99b25983bfc02bd64e6ac7966e5944e90",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -224,21 +224,6 @@ BOOST_AUTO_TEST_CASE(json_parse_errors)\n     BOOST_CHECK_THROW(ParseNonRFCJSONValue(\"3J98t1WpEZ73CNmQviecrnyiWrnqRhWNL\"), std::runtime_error);\n }\n \n-BOOST_AUTO_TEST_CASE(rpc_boostasiotocnetaddr)\n-{\n-    // Check IPv4 addresses\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"1.2.3.4\")).ToString(), \"1.2.3.4\");\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"127.0.0.1\")).ToString(), \"127.0.0.1\");\n-    // Check IPv6 addresses\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::1\")).ToString(), \"::1\");\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"123:4567:89ab:cdef:123:4567:89ab:cdef\")).ToString(),\n-                                         \"123:4567:89ab:cdef:123:4567:89ab:cdef\");\n-    // v4 compatible must be interpreted as IPv4\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::0:127.0.0.1\")).ToString(), \"127.0.0.1\");\n-    // v4 mapped must be interpreted as IPv4\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::ffff:127.0.0.1\")).ToString(), \"127.0.0.1\");\n-}\n-\n BOOST_AUTO_TEST_CASE(rpc_ban)\n {\n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));"
      },
      {
        "sha": "f50d25e17a14e55063daa790b009bf751db7b181",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -794,6 +794,18 @@ void SetupEnvironment()\n     boost::filesystem::path::imbue(loc);\n }\n \n+bool SetupNetworking()\n+{\n+#ifdef WIN32\n+    // Initialize Windows Sockets\n+    WSADATA wsadata;\n+    int ret = WSAStartup(MAKEWORD(2,2), &wsadata);\n+    if (ret != NO_ERROR || LOBYTE(wsadata.wVersion ) != 2 || HIBYTE(wsadata.wVersion) != 2)\n+        return false;\n+#endif\n+    return true;\n+}\n+\n void SetThreadPriority(int nPriority)\n {\n #ifdef WIN32"
      },
      {
        "sha": "0b2dc01ac65f397c86e69eeb3fe821f70c69b110",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "patch": "@@ -59,6 +59,7 @@ inline std::string _(const char* psz)\n }\n \n void SetupEnvironment();\n+bool SetupNetworking();\n \n /** Return true if log accepts specified category */\n bool LogAcceptCategory(const char* category);"
      }
    ]
  },
  {
    "sha": "bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmMyYjM5ODYwZjY2YjRjN2IxOTFmOWYwNjllYjZmZDNhNTZmNzNi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T13:31:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T13:32:03Z"
      },
      "message": "Merge pull request #6633\n\na6eb4ba Report minimum ping time in getpeerinfo (Matt Corallo)",
      "tree": {
        "sha": "3e17bd1aadc7812c1e83db1883a66954bc716c57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e17bd1aadc7812c1e83db1883a66954bc716c57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6Z1TAAoJEHSBCwEjRsmm5E4H/AyDAUM/dejqAhivmsYonBl+\ncdUromA6aentjziOUwwwBbsfTiD9m64XQytotBmqnaCG+9JGhxK9/dukOSVi/pxv\nYap00+F2upmA6U9GenXzE8+Py1djcRi/jHj68Vv+KOTldKy8hsYKetPY5HzB63Nc\nImKGycfxfSRjb4mYrXirV+e4eIOO94rquUaWkEbKifT0KkQ/OJ6Uk8y0Z9HdsFNT\nXVJOERV+84g/Byn+tFIWnxsgDU8apfG2XNZSMXotVpU+InxrRvRAtKWFn/9mbt/h\n4SdXhKDjDXP34uBabMYLZtz62jYUwvnzVpkZLnVEvd2xTAOKbCkaZDVdki9tUQM=\n=vG3F\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e17bd1aadc7812c1e83db1883a66954bc716c57\nparent 9aa90994ee85e549ddbe23a6f03e33d0edcd57b2\nparent a6eb4ba38bdb2f12089faf7469b54ea2a5146516\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441373516 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441373523 +0200\n\nMerge pull request #6633\n\na6eb4ba Report minimum ping time in getpeerinfo (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2"
      },
      {
        "sha": "a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6eb4ba38bdb2f12089faf7469b54ea2a5146516",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6eb4ba38bdb2f12089faf7469b54ea2a5146516"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "526e2049a8de3e3403a59e86dec832e81689b27b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "patch": "@@ -628,6 +628,7 @@ void CNode::copyStats(CNodeStats &stats)\n \n     // Raw ping time is in microseconds, but show it to user as whole seconds (Bitcoin users should be well used to small numbers with many decimal places by now :)\n     stats.dPingTime = (((double)nPingUsecTime) / 1e6);\n+    stats.dPingMin  = (((double)nMinPingUsecTime) / 1e6);\n     stats.dPingWait = (((double)nPingUsecWait) / 1e6);\n \n     // Leave string empty if addrLocal invalid (not filled in yet)"
      },
      {
        "sha": "6842ee5edc6e224b68e1634ed18c6370b29b5b96",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "patch": "@@ -189,6 +189,7 @@ class CNodeStats\n     bool fWhitelisted;\n     double dPingTime;\n     double dPingWait;\n+    double dPingMin;\n     std::string addrLocal;\n };\n "
      },
      {
        "sha": "30d0ed6270fdb8ae49c05440f09d466b61404efe",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "patch": "@@ -96,6 +96,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n             \"    \\\"conntime\\\": ttt,           (numeric) The connection time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"    \\\"timeoffset\\\": ttt,         (numeric) The time offset in seconds\\n\"\n             \"    \\\"pingtime\\\": n,             (numeric) ping time\\n\"\n+            \"    \\\"minping\\\": n,              (numeric) minimum observed ping time\\n\"\n             \"    \\\"pingwait\\\": n,             (numeric) ping wait\\n\"\n             \"    \\\"version\\\": v,              (numeric) The peer version, such as 7001\\n\"\n             \"    \\\"subver\\\": \\\"/Satoshi:0.8.5/\\\",  (string) The string version\\n\"\n@@ -139,6 +140,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n         obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n         obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n         obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+        obj.push_back(Pair(\"minping\", stats.dPingMin));\n         if (stats.dPingWait > 0.0)\n             obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n         obj.push_back(Pair(\"version\", stats.nVersion));"
      }
    ]
  },
  {
    "sha": "d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmE5MmRkMGVhNDJlYzY0ZjE1YjgxODQzYjRkYjYyYzdiMTg2YmRi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-04T12:38:38Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-04T13:39:49Z"
      },
      "message": "[release notes] mention apache reverse proxy to re-enable SSL",
      "tree": {
        "sha": "7c2aff7c11584019538d15a6b028105ecc242ac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c2aff7c11584019538d15a6b028105ecc242ac2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9aa90994ee85e549ddbe23a6f03e33d0edcd57b2"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "293fc87979b0a5515fca4601ab51cd701d2b2fc9",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
        "patch": "@@ -27,6 +27,36 @@ Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on\n \n It can also be set up system-wide in inetd style.\n \n+Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n+would allow the use of different authentication, loadbalancing, on-thy-fly compressing and\n+caching. A sample config for apache2 could look like:\n+\n+    Listen 443\n+\n+    NameVirtualHost *:443\n+    <VirtualHost *:443>\n+\n+    SSLEngine On\n+    SSLCertificateFile /etc/apache2/ssl/server.crt\n+    SSLCertificateKeyFile /etc/apache2/ssl/server.key\n+\n+    <Location /bitcoinrpc>\n+        ProxyPass http://127.0.0.1:8332/\n+        ProxyPassReverse http://127.0.0.1:8332/\n+        # optional enable digest auth\n+        # AuthType Digest\n+        # ...\n+        \n+        # optional bypass bitcoind rpc basic auth\n+        # RequestHeader set Authorization \"Basic <hash>\"\n+        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n+    </Location>\n+\n+    # Or, balance the load:\n+    # ProxyPass / balancer://balancer_cluster_name\n+\n+    </VirtualHost>\n+\n Random-cookie RPC authentication\n ---------------------------------\n "
      }
    ]
  },
  {
    "sha": "93ff1b9041a8282cd0785d22edbc1fd67b29533b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2ZmMWI5MDQxYTgyODJjZDA3ODVkMjJlZGJjMWZkNjdiMjk1MzNi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T13:43:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T14:27:38Z"
      },
      "message": "net: correctly initialize nMinPingUsecTime\n\n`nMinPingUsecTime` was left uninitialized in CNode.\nThe correct initialization for a minimum-until-now is int64_t's max value, so initialize it to that.\nThanks @MarcoFalke for noticing.",
      "tree": {
        "sha": "afdfec94cfa3c22dfdd4875d0f2bd3a0c9d4868b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afdfec94cfa3c22dfdd4875d0f2bd3a0c9d4868b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93ff1b9041a8282cd0785d22edbc1fd67b29533b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93ff1b9041a8282cd0785d22edbc1fd67b29533b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93ff1b9041a8282cd0785d22edbc1fd67b29533b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93ff1b9041a8282cd0785d22edbc1fd67b29533b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "87c4f0af0aea7f4cce9dbe34b3b0d667fbf4b438",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ff1b9041a8282cd0785d22edbc1fd67b29533b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ff1b9041a8282cd0785d22edbc1fd67b29533b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=93ff1b9041a8282cd0785d22edbc1fd67b29533b",
        "patch": "@@ -2261,6 +2261,7 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n     nPingUsecStart = 0;\n     nPingUsecTime = 0;\n     fPingQueued = false;\n+    nMinPingUsecTime = std::numeric_limits<int64_t>::max();\n \n     {\n         LOCK(cs_nLastNodeId);"
      }
    ]
  },
  {
    "sha": "2aee4d268dfe14566d95ea3907d6239fb2835b1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYWVlNGQyNjhkZmUxNDU2NmQ5NWVhMzkwN2Q2MjM5ZmIyODM1YjFk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T14:31:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T14:31:58Z"
      },
      "message": "Merge pull request #6626\n\nf4b9132 Update gitian build guide for Debian 8.1 (fanquake)",
      "tree": {
        "sha": "f520d704bd97ca4ddf2bda9db9d45a010203120f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f520d704bd97ca4ddf2bda9db9d45a010203120f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2aee4d268dfe14566d95ea3907d6239fb2835b1d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6ateAAoJEHSBCwEjRsmmYWMH/1tCuAVeQ64cOtZ36Se3dAOT\n9Nu6bmuRz6/BqD+4Yq8IEuBJYn0fCm5+9aRAe+jSN/NcJ+YSO45/rEPGrgqVkcGh\naXpPg+Y5IqmsR2FjhMikyIQPQMVGqqUKJ8jPLQ5dVDflOuLK1pX57gas7gFWRWP1\nPLBTFs6IZFGsrEKptUy7kqinV9MGWGjk6e8MxxrY8kFFrw9N48rgnuJuniwphier\n38uNd1g6AhXq4Ln27o3lhyomK0QuYzeJPL1nY2GxrNGaReNaTHPV3sDk3tnrGKF+\nikfonulqbj8ZvLXSScxEOA7x05JBsViR3slVJR9OzfKkNDZedJ/Q4sE3zz0hvO0=\n=zZG1\n-----END PGP SIGNATURE-----",
        "payload": "tree f520d704bd97ca4ddf2bda9db9d45a010203120f\nparent bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b\nparent f4b9132d0c7f6395c3a90953ff78e8b78fcccdef\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441377110 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441377118 +0200\n\nMerge pull request #6626\n\nf4b9132 Update gitian build guide for Debian 8.1 (fanquake)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aee4d268dfe14566d95ea3907d6239fb2835b1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2aee4d268dfe14566d95ea3907d6239fb2835b1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aee4d268dfe14566d95ea3907d6239fb2835b1d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4b9132d0c7f6395c3a90953ff78e8b78fcccdef"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 81,
      "deletions": 58
    },
    "files": [
      {
        "sha": "169727adc0fb885bb008b77ecdbd49a52f00561d",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 81,
        "deletions": 58,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d",
        "patch": "@@ -5,16 +5,16 @@ Gitian building\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n Core executables. It provides a way to be reasonably sure that the\n-executables are really built from source on GitHub. It also makes sure that\n+executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n to bitcoin.org.\n \n-More independent gitian builders are needed, which is why I wrote this\n-guide. It is preferred to follow these steps yourself instead of using someone else's\n+More independent gitian builders are needed, which is why this guide exists. \n+It is preferred you follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n Table of Contents\n@@ -39,46 +39,46 @@ This guide explains how to set up the environment, and how to start the builds.\n \n Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n Any kind of virtualization can be used, for example:\n-- [VirtualBox](https://www.virtualbox.org/), covered by this guide\n+- [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n - [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n-You can also install on actual hardware instead of using virtualization.\n+You can also install gitian on actual hardware instead of using virtualization.\n \n Create a new VirtualBox VM\n ---------------------------\n In the VirtualBox GUI click \"Create\" and choose the following parameters in the wizard:\n \n-![](gitian-building/create_vm_page1.png)\n+![](gitian-building/create_new_vm.png)\n \n-- Type: Linux, Debian (64 bit)\n+- Type: Linux, Debian (64-bit)\n \n ![](gitian-building/create_vm_memsize.png)\n \n-- Memory Size: at least 1024MB, anything lower will really slow the build down\n+- Memory Size: at least 1024MB, anything less will really slow down the build.\n \n-![](gitian-building/create_vm_hard_drive.png)\n+![](gitian-building/create_vm_hard_disk.png)\n \n-- Hard Drive: Create a virtual hard drive now\n+- Hard Disk: Create a virtual hard disk now\n     \n-![](gitian-building/create_vm_hard_drive_file_type.png)\n+![](gitian-building/create_vm_hard_disk_file_type.png)\n \n-- Hard Drive file type: Use the default, VDI (VirtualBox Disk Image) \n+- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image) \n \n-![](gitian-building/create_vm_storage_physical_hard_drive.png)\n+![](gitian-building/create_vm_storage_physical_hard_disk.png)\n     \n-- Storage on Physical hard drive: Dynamically Allocated \n+- Storage on physical hard disk: Dynamically Allocated \n     \n ![](gitian-building/create_vm_file_location_size.png)\n \n-- Disk size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n-- Push the `Create` button\n+- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n+- Click `Create`\n \n-Get the [Debian 7.8 net installer](http://cdimage.debian.org/cdimage/archive/7.8.0/amd64/iso-cd/debian-7.8.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+Get the [Debian 8.1 net installer](http://cdimage.debian.org/debian-cd/8.1.0/amd64/iso-cd/debian-8.1.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"e39c36d6adc0fd86c6edb0e03e22919086c883b37ca194d063b8e3e8f6ff6a3a  debian-7.8.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"5d0a1f804d73aee73eee7efbb38456390558094fd19894a573f1514ca44347e0  debian-8.1.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it. \n@@ -115,8 +115,9 @@ This section will explain how to install Debian on the newly created VM.\n \n ![](gitian-building/debian_install_1_boot_menu.png)\n \n-**Note**: Navigation in the Debian installer: To keep a setting at the default\n-and proceed, just press `Enter`. To select a different button, press `Tab`.\n+**Note**: Navigating in the Debian installer: \n+To keep a setting at the default and proceed, just press `Enter`. \n+To select a different button, press `Tab`.\n \n - Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n \n@@ -126,7 +127,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n \n - The VM will detect network settings using DHCP, this should all proceed automatically\n - Configure the network: \n-  - System name `debian`.\n+  - Hostname `debian`.\n   - Leave domain name empty.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n@@ -136,6 +137,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n - Name the new user `debian` (the full name doesn't matter, you can leave it empty) \n+- Set the account username as `debian`\n \n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n@@ -158,65 +160,89 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n \n ![](gitian-building/debian_install_12_choose_disk.png)\n \n-  - Partitioning scheme: All files in one partition \n-  \n-![](gitian-building/debian_install_13_partition_scheme.png)\n-\n   - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n \n-![](gitian-building/debian_install_14_finish.png) \n+![](gitian-building/debian_install_14_finish.png)\n ![](gitian-building/debian_install_15_write_changes.png)\n \n - The base system will be installed, this will take a minute or so\n - Choose a mirror (any will do) \n \n ![](gitian-building/debian_install_16_choose_a_mirror.png)\n \n-- Enter proxy information (unless you are on an intranet, you can leave this empty)\n+- Enter proxy information (unless you are on an intranet, leave this empty)\n \n ![](gitian-building/debian_install_18_proxy_settings.png)\n \n - Wait a bit while 'Select and install software' runs\n - Participate in popularity contest -> *No*\n-- Choose software to install. We need just the base system. \n+- Choose software to install. We need just the base system.\n+- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n+- Uncheck 'Debian Desktop Environment' and 'Print Server'\n \n ![](gitian-building/debian_install_19_software_selection.png)\n \n-- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n-- Uncheck 'Debian Desktop Environment' and 'Print Server'\n+- Install the GRUB boot loader to the master boot record? -> Yes\n \n ![](gitian-building/debian_install_20_install_grub.png)\n \n-- Install the GRUB boot loader to the master boot record? -> Yes \n+- Device for boot loader installation -> ata-VBOX_HARDDISK\n \n-![](gitian-building/debian_install_21_finish_installation.png)\n+![](gitian-building/debian_install_21_install_grub_bootloader.png)\n \n - Installation Complete -> *Continue*\n - After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n \n+![](gitian-building/debian_install_22_finish_installation.png)\n+\n+\n+After Installation\n+-------------------\n+The next step in the guide involves logging in as root via SSH.\n+SSH login for root users is disabled by default, so we'll enable that now.\n+\n+Login to the VM using username `root` and the root password you choose earlier.\n+You'll be presented with a screen similar to this.\n+\n+![](gitian-building/debian_root_login.png)\n+\n+Type:\n+\n+```\n+sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n+```\n+and press enter. Then,\n+```\n+/etc/init.d/ssh restart\n+```\n+and enter to restart SSH. Logout by typing 'logout' and pressing 'enter'.\n+\n Connecting to the VM\n ----------------------\n \n After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n-On Windows you can use putty[1] and WinSCP[2].\n+On Windows you can use [putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and [WinSCP](http://winscp.net/eng/index.php).\n \n-For example to connect as `root` from a Linux command prompt use\n+For example, to connect as `root` from a Linux command prompt use\n \n     $ ssh root@localhost -p 22222\n     The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n-    ECDSA key fingerprint is 8e:71:f9:5b:62:46:de:44:01:da:fb:5f:34:b5:f2:18.\n+    RSA key fingerprint is ae:f5:c8:9f:17:c6:c7:1b:c2:1b:12:31:1d:bb:d0:c7.\n     Are you sure you want to continue connecting (yes/no)? yes\n-    Warning: Permanently added '[localhost]:22222' (ECDSA) to the list of known hosts.\n+    Warning: Permanently added '[localhost]:22222' (RSA) to the list of known hosts.\n     root@localhost's password: (enter root password configured during install)\n-    Linux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64\n+\n+    The programs included with the Debian GNU/Linux system are free software;\n+    the exact distribution terms for each program are described in the\n+    individual files in /usr/share/doc/*/copyright.\n+\n+    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n+    permitted by applicable law.\n     root@debian:~#\n \n Replace `root` with `debian` to log in as user.\n \n-[1] http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n-[2] http://winscp.net/eng/index.php\n-\n Setting up Debian for gitian building\n --------------------------------------\n \n@@ -226,13 +252,10 @@ First we need to log in as `root` to set up dependencies and make sure that our\n user can use the sudo command. Type/paste the following in the terminal:\n \n ```bash\n-apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils\n+apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring\n adduser debian sudo\n ```\n \n-When you get a colorful screen with a question about the 'LXC directory', just\n-go with the default (`/var/lib/lxc`).\n-\n Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n \n ```bash\n@@ -255,7 +278,7 @@ reboot\n ```\n \n At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n-section need only to be performed once.\n+section only need to be performed once.\n \n Installing gitian\n ------------------\n@@ -300,26 +323,26 @@ cd gitian-builder\n bin/make-base-vm --lxc --arch amd64 --suite precise\n ```\n \n-There will be a lot of warnings printed during build of the image. These can be ignored.\n+There will be a lot of warnings printed during the build of the image. These can be ignored.\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n Getting and building the inputs\n --------------------------------\n \n-Follow the instructions in [doc/release-process.md](release-process.md) in the bitcoin repository\n-under 'Fetch and build inputs' to install sources which require manual intervention. Also follow\n-the next step: 'Seed the Gitian sources cache', which will fetch all necessary source files allowing\n-for gitian to work offline.\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change) \n+in the bitcoin repository to install sources which require manual intervention. Also follow\n+the next step: 'Seed the Gitian sources cache', which will fetch all the necessary source \n+files to allow gitian to work offline.\n \n Building Bitcoin\n ----------------\n \n To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n-gitian builds' in [doc/release-process.md](release-process.md) in the bitcoin repository.\n+gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n \n-This may take a long time as it also builds the dependencies needed for each descriptor.\n-These dependencies will be cached after a successful build to avoid rebuilding them where possible.\n+This may take some time as it will build all the dependencies needed for each descriptor.\n+These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n \n At any time you can check the package installation and build progress with\n \n@@ -331,13 +354,13 @@ tail -f var/build.log\n Output from `gbuild` will look something like\n \n     Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n-    remote: Reusing existing pack: 35606, done.\n-    remote: Total 35606 (delta 0), reused 0 (delta 0)\n-    Receiving objects: 100% (35606/35606), 26.52 MiB | 4.28 MiB/s, done.\n-    Resolving deltas: 100% (25724/25724), done.\n+    remote: Counting objects: 57959, done.\n+    remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n+    Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n+    Resolving deltas: 100% (41590/41590), done.\n     From https://github.com/bitcoin/bitcoin\n     ... (new tags, new branch etc)\n-    --- Building for precise x86_64 ---\n+    --- Building for precise amd64 ---\n     Stopping target if it is up\n     Making a new image copy\n     stdin: is not a tty"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "a1706e14fda1488dbc180a4f619e5c3de98fae2b",
        "filename": "doc/gitian-building/create_vm_hard_drive.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive.png?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "251b8ee3e2757a090a8fd045cd3ba76354459915",
        "filename": "doc/gitian-building/create_vm_hard_drive_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive_file_type.png?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "5abfee5337058f9bd638a79416040bd6c6496194",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "edaebc6223708e1473d893dd480a5ef439a39473",
        "filename": "doc/gitian-building/create_vm_page1.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_page1.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_page1.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_page1.png?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "987efaa40c2e3c57ef7fb6c64fee8efa0e63241e",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_drive.png?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "2f80f19b631c0cbf7ebeddc71c309aca8cf86eed",
        "filename": "doc/gitian-building/debian_install_13_partition_scheme.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/debian_install_13_partition_scheme.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/debian_install_13_partition_scheme.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_13_partition_scheme.png?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "cef2db07815451cf16099e063f94bb40202ee822",
        "filename": "doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_17_choose_a_mirror2.png?ref=bbc2b39860f66b4c7b191f9f069eb6fd3a56f73b"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d",
        "previous_filename": "doc/gitian-building/debian_install_21_finish_installation.png"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "5acdc3fe10eebce2422cdb6d6ae799a7630f0b8d",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aee4d268dfe14566d95ea3907d6239fb2835b1d/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      }
    ]
  },
  {
    "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzYyMDdmMzE2N2RhYWQxZmEzZDYwYTFkZTdkOWNiNTVkYjI4YWM5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T15:03:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-04T15:06:48Z"
      },
      "message": "Merge pull request #6636\n\n93ff1b9 net: correctly initialize nMinPingUsecTime (Wladimir J. van der Laan)",
      "tree": {
        "sha": "ef79bbdf5fefb68bf44a12b748d9226505a20039",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef79bbdf5fefb68bf44a12b748d9226505a20039"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV6bOIAAoJEHSBCwEjRsmmtSAH/1n4lrVFI6AqfoIh2YgKPcGH\nwzZxFaKPznIjZKOOaw7AjPEtrxVSnq0L5fPK7NofhAQdpTsqx/3hrMBY+FDj56y8\nTzPIMFD6iAGd1V5Js1TE1uX/TU4zRx/loIn6kYMy9gfVqnR2FKcdNq3FXtmCnv5B\nTu7cj9f7PiO2+gMRkEipJ0zROwTe97LUfnC1kIUfjkCjc5PPDVVSJ9+5H1o54QQy\n0I+ID1e3hlMRkEn4FBiTG+u/MC7QL3V1yWcjU0FeHnSRztCe4O3tlItTdOfpdc0N\nlPzs9ZCXnMqbQygPxyPqehoG75yWJB9tr6vdLPmaOQVc47nbDIx50iGvLYojFI0=\n=Eyxu\n-----END PGP SIGNATURE-----",
        "payload": "tree ef79bbdf5fefb68bf44a12b748d9226505a20039\nparent 2aee4d268dfe14566d95ea3907d6239fb2835b1d\nparent 93ff1b9041a8282cd0785d22edbc1fd67b29533b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441379004 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441379208 +0200\n\nMerge pull request #6636\n\n93ff1b9 net: correctly initialize nMinPingUsecTime (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2aee4d268dfe14566d95ea3907d6239fb2835b1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aee4d268dfe14566d95ea3907d6239fb2835b1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2aee4d268dfe14566d95ea3907d6239fb2835b1d"
      },
      {
        "sha": "93ff1b9041a8282cd0785d22edbc1fd67b29533b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93ff1b9041a8282cd0785d22edbc1fd67b29533b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93ff1b9041a8282cd0785d22edbc1fd67b29533b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "87c4f0af0aea7f4cce9dbe34b3b0d667fbf4b438",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/536207f3167daad1fa3d60a1de7d9cb55db28ac9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/536207f3167daad1fa3d60a1de7d9cb55db28ac9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "patch": "@@ -2261,6 +2261,7 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n     nPingUsecStart = 0;\n     nPingUsecTime = 0;\n     fPingQueued = false;\n+    nMinPingUsecTime = std::numeric_limits<int64_t>::max();\n \n     {\n         LOCK(cs_nLastNodeId);"
      }
    ]
  },
  {
    "sha": "eb3002bb7138db3aa4490b00be88779818b6da0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjMwMDJiYjcxMzhkYjNhYTQ0OTBiMDBiZTg4Nzc5ODE4YjZkYTBk",
    "commit": {
      "author": {
        "name": "paveljanik",
        "email": "Pavel@Janik.cz",
        "date": "2015-09-04T17:22:48Z"
      },
      "committer": {
        "name": "paveljanik",
        "email": "Pavel@Janik.cz",
        "date": "2015-09-04T17:22:48Z"
      },
      "message": "[TRIVIAL] Fix typo: exactmath -> exactmatch\n\n... but not yet in trivial tree",
      "tree": {
        "sha": "c3af65535f3ae769c3b20b30bed1ca11b65c459b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3af65535f3ae769c3b20b30bed1ca11b65c459b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb3002bb7138db3aa4490b00be88779818b6da0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb3002bb7138db3aa4490b00be88779818b6da0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb3002bb7138db3aa4490b00be88779818b6da0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb3002bb7138db3aa4490b00be88779818b6da0d/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "baca00757114bf25d44042671a736e466ef7b7f3",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb3002bb7138db3aa4490b00be88779818b6da0d/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb3002bb7138db3aa4490b00be88779818b6da0d/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=eb3002bb7138db3aa4490b00be88779818b6da0d",
        "patch": "@@ -555,7 +555,7 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n \n void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler)\n {\n-    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n     pathHandlers.push_back(HTTPPathHandler(prefix, exactMatch, handler));\n }\n \n@@ -568,7 +568,7 @@ void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n             break;\n     if (i != iend)\n     {\n-        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n         pathHandlers.erase(i);\n     }\n }"
      }
    ]
  },
  {
    "sha": "5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmZhYWJhM2ExNTMzY2MzY2FiZTUwOWJkMDljMTM3YWEyNTRlMzBm",
    "commit": {
      "author": {
        "name": "Casey Rodarmor",
        "email": "casey@rodarmor.com",
        "date": "2015-08-27T19:53:16Z"
      },
      "committer": {
        "name": "Casey Rodarmor",
        "email": "casey@rodarmor.com",
        "date": "2015-09-04T19:25:42Z"
      },
      "message": "Disallow duplicate windows.",
      "tree": {
        "sha": "9cb0d57d46f089903b5cc401f2c715e17dec56b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cb0d57d46f089903b5cc401f2c715e17dec56b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/comments",
    "author": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 21,
      "deletions": 11
    },
    "files": [
      {
        "sha": "db9e5587644738605c7e902d6f4d9d6c7d6bc616",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
        "patch": "@@ -97,6 +97,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n     trayIconMenu(0),\n     notificator(0),\n     rpcConsole(0),\n+    helpMessageDialog(0),\n     prevBlocks(0),\n     spinnerFrame(0),\n     platformStyle(platformStyle)\n@@ -132,6 +133,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n #endif\n \n     rpcConsole = new RPCConsole(platformStyle, 0);\n+    helpMessageDialog = new HelpMessageDialog(this, false);\n #ifdef ENABLE_WALLET\n     if(enableWallet)\n     {\n@@ -590,9 +592,7 @@ void BitcoinGUI::aboutClicked()\n \n void BitcoinGUI::showHelpMessageClicked()\n {\n-    HelpMessageDialog *help = new HelpMessageDialog(this, false);\n-    help->setAttribute(Qt::WA_DeleteOnClose);\n-    help->show();\n+    helpMessageDialog->show();\n }\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "f1b7a502ba3c15d10c9ff4d9a6cc57952285a4fb",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
        "patch": "@@ -28,6 +28,7 @@ class SendCoinsRecipient;\n class UnitDisplayStatusBarControl;\n class WalletFrame;\n class WalletModel;\n+class HelpMessageDialog;\n \n class CWallet;\n \n@@ -113,6 +114,7 @@ class BitcoinGUI : public QMainWindow\n     QMenu *trayIconMenu;\n     Notificator *notificator;\n     RPCConsole *rpcConsole;\n+    HelpMessageDialog *helpMessageDialog;\n \n     /** Keep track of previous number of blocks, to detect progress */\n     int prevBlocks;"
      },
      {
        "sha": "77efdb5cdd1083bcf936dcc5762a5a901c530573",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
        "patch": "@@ -56,6 +56,9 @@ WalletView::WalletView(const PlatformStyle *platformStyle, QWidget *parent):\n     receiveCoinsPage = new ReceiveCoinsDialog(platformStyle);\n     sendCoinsPage = new SendCoinsDialog(platformStyle);\n \n+    usedSendingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n+    usedReceivingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n+\n     addWidget(overviewPage);\n     addWidget(transactionsPage);\n     addWidget(receiveCoinsPage);\n@@ -115,6 +118,8 @@ void WalletView::setWalletModel(WalletModel *walletModel)\n     overviewPage->setWalletModel(walletModel);\n     receiveCoinsPage->setModel(walletModel);\n     sendCoinsPage->setModel(walletModel);\n+    usedReceivingAddressesPage->setModel(walletModel->getAddressTableModel());\n+    usedSendingAddressesPage->setModel(walletModel->getAddressTableModel());\n \n     if (walletModel)\n     {\n@@ -273,20 +278,20 @@ void WalletView::usedSendingAddresses()\n {\n     if(!walletModel)\n         return;\n-    AddressBookPage *dlg = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n-    dlg->setAttribute(Qt::WA_DeleteOnClose);\n-    dlg->setModel(walletModel->getAddressTableModel());\n-    dlg->show();\n+\n+    usedSendingAddressesPage->show();\n+    usedSendingAddressesPage->raise();\n+    usedSendingAddressesPage->activateWindow();\n }\n \n void WalletView::usedReceivingAddresses()\n {\n     if(!walletModel)\n         return;\n-    AddressBookPage *dlg = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n-    dlg->setAttribute(Qt::WA_DeleteOnClose);\n-    dlg->setModel(walletModel->getAddressTableModel());\n-    dlg->show();\n+\n+    usedReceivingAddressesPage->show();\n+    usedReceivingAddressesPage->raise();\n+    usedReceivingAddressesPage->activateWindow();\n }\n \n void WalletView::showProgress(const QString &title, int nProgress)"
      },
      {
        "sha": "2a6a6a2df2b93fb24dfa36869e727fd98fb8302f",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ffaaba3a1533cc3cabe509bd09c137aa254e30f/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
        "patch": "@@ -18,6 +18,7 @@ class SendCoinsDialog;\n class SendCoinsRecipient;\n class TransactionView;\n class WalletModel;\n+class AddressBookPage;\n \n QT_BEGIN_NAMESPACE\n class QModelIndex;\n@@ -61,6 +62,8 @@ class WalletView : public QStackedWidget\n     QWidget *transactionsPage;\n     ReceiveCoinsDialog *receiveCoinsPage;\n     SendCoinsDialog *sendCoinsPage;\n+    AddressBookPage *usedSendingAddressesPage;\n+    AddressBookPage *usedReceivingAddressesPage;\n \n     TransactionView *transactionView;\n "
      }
    ]
  },
  {
    "sha": "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmIwY2NhZjljOWU0ZThmYWM3ZGIzNTY0YzRlMTljOTIxOGM2YjAz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-08-21T04:15:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-06T06:29:13Z"
      },
      "message": "Add NODE_BLOOM service bit and bump protocol version\n\nLets nodes advertise that they offer bloom filter support explicitly.\nThe protocol version bump allows SPV nodes to assume that NODE_BLOOM is\nset if NODE_NETWORK is set for pre-70011 nodes.\n\nAlso adds an option to turn bloom filter support off for nodes which\nadvertise a version number >= 70011. Nodes attempting to use bloom\nfilters on such protocol versions are banned, and a later upgade\nshould drop nodes of an older version which attempt to use bloom\nfilters.\n\nMuch code stolen from Peter Todd.\n\nImplements BIP 111",
      "tree": {
        "sha": "14e3b07e6ed8886d97624d73767445b69f6dcb4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14e3b07e6ed8886d97624d73767445b69f6dcb4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 26,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0f409098a7bbab055b1f11c58fded04dc8009125",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -918,6 +918,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Option to startup with mocktime set (used for regression testing):\n     SetMockTime(GetArg(\"-mocktime\", 0)); // SetMockTime(0) is a no-op\n \n+    if (GetBoolArg(\"-peerbloomfilters\", true))\n+        nLocalServices |= NODE_BLOOM;\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Initialize elliptic curve code"
      },
      {
        "sha": "a880533e65010b05c1ac46d0a7d9bfa3bcbd2a98",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -4591,6 +4591,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\") &&\n+              //TODO: Remove this line after reasonable network upgrade\n+              pfrom->nVersion >= NO_BLOOM_VERSION)\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;\n+    }\n+\n+\n     else if (strCommand == \"filterload\")\n     {\n         CBloomFilter filter;"
      },
      {
        "sha": "50aeaf44bab191b93d8a3eecdb00506ea8b0d7e7",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -75,6 +75,10 @@ enum {\n     // Bitcoin Core does not support this but a patch set called Bitcoin XT does.\n     // See BIP 64 for details on how this is implemented.\n     NODE_GETUTXO = (1 << 1),\n+    // NODE_BLOOM means the node is capable and willing to handle bloom-filtered connections.\n+    // Bitcoin Core nodes used to support this by default, without advertising this bit,\n+    // but no longer do as of protocol version 70011 (= NO_BLOOM_VERSION)\n+    NODE_BLOOM = (1 << 2),\n \n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\n     // isn't getting used, or one not being used much, and notify the"
      },
      {
        "sha": "6cdddf92554d62e7085bf0169c69fccc8cfe4461",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70002;\n+static const int PROTOCOL_VERSION = 70011;\n \n //! initial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;\n@@ -34,4 +34,7 @@ static const int BIP0031_VERSION = 60000;\n //! \"mempool\" command, enhanced \"getdata\" behavior starts with this version\n static const int MEMPOOL_GD_VERSION = 60002;\n \n+//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version\n+static const int NO_BLOOM_VERSION = 70011;\n+\n #endif // BITCOIN_VERSION_H"
      }
    ]
  },
  {
    "sha": "238851bf645709c8a333f48517ffcdb29a9c1434",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzg4NTFiZjY0NTcwOWM4YTMzM2Y0ODUxN2ZmY2RiMjlhOWMxNDM0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-06T15:54:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-06T16:17:35Z"
      },
      "message": "[doc] [tor] Clarify when to use bind\n\nc.f. #6585",
      "tree": {
        "sha": "23faaaf3583a7e7db64e584638372c99a300d941",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23faaaf3583a7e7db64e584638372c99a300d941"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/238851bf645709c8a333f48517ffcdb29a9c1434",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/238851bf645709c8a333f48517ffcdb29a9c1434",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/238851bf645709c8a333f48517ffcdb29a9c1434",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/238851bf645709c8a333f48517ffcdb29a9c1434/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f8b94d19d174c702d6cdf16e35547a758e26e53d",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/238851bf645709c8a333f48517ffcdb29a9c1434/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/238851bf645709c8a333f48517ffcdb29a9c1434/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=238851bf645709c8a333f48517ffcdb29a9c1434",
        "patch": "@@ -70,9 +70,14 @@ In a typical situation, where you're only reachable via Tor, this should suffice\n \n \t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n-(obviously, replace the Onion address with your own). If you don't care too much\n-about hiding your node, and want to be reachable on IPv4 as well, additionally\n-specify:\n+(obviously, replace the Onion address with your own). It should be noted that you still\n+listen on all devices and another node could establish a clearnet connection, when knowing\n+your address. To mitigate this, additionally bind the address of your Tor proxy:\n+\n+\t./bitcoind ... -bind=127.0.0.1\n+\n+If you don't care too much about hiding your node, and want to be reachable on IPv4\n+as well, use `discover` instead:\n \n \t./bitcoind ... -discover\n "
      }
    ]
  },
  {
    "sha": "77c60724733a98af5248fb95625046a5a3f82dc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2M2MDcyNDczM2E5OGFmNTI0OGZiOTU2MjUwNDZhNWEzZjgyZGMz",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T01:28:32Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T01:28:32Z"
      },
      "message": "Enable wallet key imports without rescan in pruned mode.\n\nComplete rescan is incompatible with pruning, but rescan is optional on\n our wallet key import RPCs.  Import on use is very useful in some common\n situations in conjunction with pruning, e.g. merchant payment tracking.\n\nThis reenables importprivkey/importaddress/importpubkey when rescan\n is not used.\n\nIn the future we should consider changing the rescan argument to allow depth\n or date to allow limited rescanning when compatible with the retained\n block depth.",
      "tree": {
        "sha": "23f819c8ac6eab24266e72edc4767c2af836630f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23f819c8ac6eab24266e72edc4767c2af836630f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77c60724733a98af5248fb95625046a5a3f82dc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c60724733a98af5248fb95625046a5a3f82dc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77c60724733a98af5248fb95625046a5a3f82dc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c60724733a98af5248fb95625046a5a3f82dc3/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "7e22faac37df10724b32c5849fd058a94c3e6b19",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77c60724733a98af5248fb95625046a5a3f82dc3/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77c60724733a98af5248fb95625046a5a3f82dc3/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=77c60724733a98af5248fb95625046a5a3f82dc3",
        "patch": "@@ -97,8 +97,6 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing keys is disabled in pruned mode\");\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n@@ -114,6 +112,9 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     CBitcoinSecret vchSecret;\n     bool fGood = vchSecret.SetString(strSecret);\n \n@@ -201,8 +202,6 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importaddress\", \"\\\"myscript\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing addresses is disabled in pruned mode\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -213,6 +212,9 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     // Whether to import a p2sh version, too\n     bool fP2SH = false;\n     if (params.size() > 3)\n@@ -264,8 +266,6 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importpubkey\", \"\\\"mypubkey\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing public keys is disabled in pruned mode\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -276,6 +276,9 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     if (!IsHex(params[0].get_str()))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey must be a hex string\");\n     std::vector<unsigned char> data(ParseHex(params[0].get_str()));"
      }
    ]
  },
  {
    "sha": "a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWRmMWU4NzBiNzkyMDBjNzBjZjZhNWUzMjAxZGFiMWU5ODFhMmEy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-04T13:25:01Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-07T11:31:16Z"
      },
      "message": "[docs] add libevent dependency to build-osx.md",
      "tree": {
        "sha": "20b7da3eab4f87f21d3ae83bfb8178cba0939d4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20b7da3eab4f87f21d3ae83bfb8178cba0939d4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1df1e870b79200c70cf6a5e3201dab1e981a2a2/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6a92dd0ea42ec64f15b81843b4db62c7b186bdb"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8fad8b5b00467fc788e5794c29a74ea89335df40",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1df1e870b79200c70cf6a5e3201dab1e981a2a2/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1df1e870b79200c70cf6a5e3201dab1e981a2a2/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
        "patch": "@@ -32,7 +32,7 @@ Instructions: Homebrew\n \n #### Install dependencies using Homebrew\n \n-        brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5\n+        brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n "
      },
      {
        "sha": "e61933ddb2763c9d9fae5c082b836ac1680ecfd4",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1df1e870b79200c70cf6a5e3201dab1e981a2a2/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1df1e870b79200c70cf6a5e3201dab1e981a2a2/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
        "patch": "@@ -28,7 +28,7 @@ Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on\n It can also be set up system-wide in inetd style.\n \n Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n-would allow the use of different authentication, loadbalancing, on-thy-fly compressing and\n+would allow the use of different authentication, loadbalancing, on-the-fly compression and\n caching. A sample config for apache2 could look like:\n \n     Listen 443"
      }
    ]
  },
  {
    "sha": "9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2RjMzM1M2M1Y2IzMGI2YWVkZjA0ZWE4YmRmZjkxMzU3NTFkNzJk",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-09-07T18:38:03Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-09-07T18:38:03Z"
      },
      "message": "Simplify logic of REST request suffix parsing.\n\nThis patch changes the way the suffix (giving the requested data format) is\nparsed for REST requests.  Before, the string was split at '.'\ncharacters and it was assumed that the second part was the suffix.\n\nNow, we look for the last dot and use that to determine the suffix.\nThis allows for strings that contain dots (not used now, though), and\nseems, in general, to be clearer and more intuitive.",
      "tree": {
        "sha": "b6d272cdf9638a9c61241f1902cdfc25bc6a966f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6d272cdf9638a9c61241f1902cdfc25bc6a966f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 32,
      "deletions": 25
    },
    "files": [
      {
        "sha": "226e237fc649d75bfa4811fc902791768f6c45d9",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 25,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
        "patch": "@@ -71,15 +71,24 @@ static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, string message\n     return false;\n }\n \n-static enum RetFormat ParseDataFormat(vector<string>& params, const string& strReq)\n+static enum RetFormat ParseDataFormat(std::string& param, const std::string& strReq)\n {\n-    boost::split(params, strReq, boost::is_any_of(\".\"));\n-    if (params.size() > 1) {\n-        for (unsigned int i = 0; i < ARRAYLEN(rf_names); i++)\n-            if (params[1] == rf_names[i].name)\n-                return rf_names[i].rf;\n+    const std::string::size_type pos = strReq.rfind('.');\n+    if (pos == std::string::npos)\n+    {\n+        param = strReq;\n+        return rf_names[0].rf;\n     }\n \n+    param = strReq.substr(0, pos);\n+    const std::string suff(strReq, pos + 1);\n+\n+    for (unsigned int i = 0; i < ARRAYLEN(rf_names); i++)\n+        if (suff == rf_names[i].name)\n+            return rf_names[i].rf;\n+\n+    /* If no suffix is found, return original string.  */\n+    param = strReq;\n     return rf_names[0].rf;\n }\n \n@@ -121,10 +130,10 @@ static bool rest_headers(HTTPRequest* req,\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n     vector<string> path;\n-    boost::split(path, params[0], boost::is_any_of(\"/\"));\n+    boost::split(path, param, boost::is_any_of(\"/\"));\n \n     if (path.size() != 2)\n         return RESTERR(req, HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n@@ -196,10 +205,9 @@ static bool rest_block(HTTPRequest* req,\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string hashStr;\n+    const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n-    string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n@@ -268,8 +276,8 @@ static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RF_JSON: {\n@@ -293,8 +301,8 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RF_JSON: {\n@@ -318,8 +326,8 @@ static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPar\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RF_JSON: {\n@@ -343,10 +351,9 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string hashStr;\n+    const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n-    string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n@@ -396,13 +403,13 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    enum RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     vector<string> uriParts;\n-    if (params.size() > 0 && params[0].length() > 1)\n+    if (param.length() > 1)\n     {\n-        std::string strUriParams = params[0].substr(1);\n+        std::string strUriParams = param.substr(1);\n         boost::split(uriParts, strUriParams, boost::is_any_of(\"/\"));\n     }\n "
      }
    ]
  },
  {
    "sha": "7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTdlNjhkMWUyYjNkN2NhNTg5OWRhMjkyMWE1YWZlNTA3M2EyNmYw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T01:13:17Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T18:49:12Z"
      },
      "message": "Prune the -prune help to reflect that the wallet is no longer disabled.\n\nThe wallet hasn't been disabled since 3201035f22fe451c808b0bb157d33a58f0d99c07.",
      "tree": {
        "sha": "bf67b425ae2e955eea5ae25114c0589354db115b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf67b425ae2e955eea5ae25114c0589354db115b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "58a6d540a8254d07d092d84e05c974beef2e0199",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
        "patch": "@@ -308,7 +308,7 @@ std::string HelpMessage(HelpMessageMode mode)\n #ifndef WIN32\n     strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file (default: %s)\"), \"bitcoind.pid\"));\n #endif\n-    strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. \"\n+    strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. \"\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for block files)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n     strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild block chain index from current blk000??.dat files on startup\"));"
      }
    ]
  },
  {
    "sha": "cd381d771953805a0784e17e9fa7e9c0d2524f55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDM4MWQ3NzE5NTM4MDVhMDc4NGUxN2U5ZmE3ZTljMGQyNTI0ZjU1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T12:42:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T12:51:22Z"
      },
      "message": "Merge pull request #6648\n\n9cdc335 Simplify logic of REST request suffix parsing. (Daniel Kraft)",
      "tree": {
        "sha": "b6d272cdf9638a9c61241f1902cdfc25bc6a966f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6d272cdf9638a9c61241f1902cdfc25bc6a966f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd381d771953805a0784e17e9fa7e9c0d2524f55",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7tnKAAoJEHSBCwEjRsmmKKcIAJ8q3lFHmFiqyBi+N3jOjT1B\n+tyqagHiyDEJykwSHXhZQ+LyszY5gm9VVD8d6afQSbXgk3+pO3ZLueMK+3tBjEGJ\nVDq3jngB9IgH2GjAbV8EELkYzA2pDe4c91lWqqaq3y0L7b7nAE5CoVBdPhMiQXHf\ne/eLt++Vc+bR16N8F6PzkdYiP1cE0FwyyZEuF+0nyvsmpnw+/eGmH4mMzTER1f0Z\nGy8LQA671l6t/meegG1w90MAnWBZi0UioDYpybrM8wMzRYd0kNI4GmAvdaxQyo5S\nM0i6wEHieYqrieP7+4RynfL1gmF/ykMYxH5I5XSi8YuV1AABCcrMC9o4B/d93TM=\n=0Jyi\n-----END PGP SIGNATURE-----",
        "payload": "tree b6d272cdf9638a9c61241f1902cdfc25bc6a966f\nparent 536207f3167daad1fa3d60a1de7d9cb55db28ac9\nparent 9cdc3353c5cb30b6aedf04ea8bdff9135751d72d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441716173 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441716682 +0200\n\nMerge pull request #6648\n\n9cdc335 Simplify logic of REST request suffix parsing. (Daniel Kraft)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd381d771953805a0784e17e9fa7e9c0d2524f55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd381d771953805a0784e17e9fa7e9c0d2524f55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd381d771953805a0784e17e9fa7e9c0d2524f55/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      },
      {
        "sha": "9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cdc3353c5cb30b6aedf04ea8bdff9135751d72d"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 32,
      "deletions": 25
    },
    "files": [
      {
        "sha": "226e237fc649d75bfa4811fc902791768f6c45d9",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 25,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd381d771953805a0784e17e9fa7e9c0d2524f55/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd381d771953805a0784e17e9fa7e9c0d2524f55/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=cd381d771953805a0784e17e9fa7e9c0d2524f55",
        "patch": "@@ -71,15 +71,24 @@ static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, string message\n     return false;\n }\n \n-static enum RetFormat ParseDataFormat(vector<string>& params, const string& strReq)\n+static enum RetFormat ParseDataFormat(std::string& param, const std::string& strReq)\n {\n-    boost::split(params, strReq, boost::is_any_of(\".\"));\n-    if (params.size() > 1) {\n-        for (unsigned int i = 0; i < ARRAYLEN(rf_names); i++)\n-            if (params[1] == rf_names[i].name)\n-                return rf_names[i].rf;\n+    const std::string::size_type pos = strReq.rfind('.');\n+    if (pos == std::string::npos)\n+    {\n+        param = strReq;\n+        return rf_names[0].rf;\n     }\n \n+    param = strReq.substr(0, pos);\n+    const std::string suff(strReq, pos + 1);\n+\n+    for (unsigned int i = 0; i < ARRAYLEN(rf_names); i++)\n+        if (suff == rf_names[i].name)\n+            return rf_names[i].rf;\n+\n+    /* If no suffix is found, return original string.  */\n+    param = strReq;\n     return rf_names[0].rf;\n }\n \n@@ -121,10 +130,10 @@ static bool rest_headers(HTTPRequest* req,\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n     vector<string> path;\n-    boost::split(path, params[0], boost::is_any_of(\"/\"));\n+    boost::split(path, param, boost::is_any_of(\"/\"));\n \n     if (path.size() != 2)\n         return RESTERR(req, HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n@@ -196,10 +205,9 @@ static bool rest_block(HTTPRequest* req,\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string hashStr;\n+    const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n-    string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n@@ -268,8 +276,8 @@ static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RF_JSON: {\n@@ -293,8 +301,8 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RF_JSON: {\n@@ -318,8 +326,8 @@ static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPar\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RF_JSON: {\n@@ -343,10 +351,9 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    const RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string hashStr;\n+    const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n-    string hashStr = params[0];\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n@@ -396,13 +403,13 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    vector<string> params;\n-    enum RetFormat rf = ParseDataFormat(params, strURIPart);\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n \n     vector<string> uriParts;\n-    if (params.size() > 0 && params[0].length() > 1)\n+    if (param.length() > 1)\n     {\n-        std::string strUriParams = params[0].substr(1);\n+        std::string strUriParams = param.substr(1);\n         boost::split(uriParts, strUriParams, boost::is_any_of(\"/\"));\n     }\n "
      }
    ]
  },
  {
    "sha": "e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGJiOGFkODVhYmUzZDAwYjlkY2M5ZjhjZGJiMDUxMmI0YWU0NmJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T13:46:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T13:50:02Z"
      },
      "message": "Merge pull request #6643\n\n238851b [doc] [tor] Clarify when to use bind (MarcoFalke)",
      "tree": {
        "sha": "5e1f04f1e8bf4202e5818678686236ff7177eab9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e1f04f1e8bf4202e5818678686236ff7177eab9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7ueKAAoJEHSBCwEjRsmm+JUIALNH4M2qfO+7TJHP6VLwMu77\nJLi/+aqfY0zM2OoX52frO7KBUQf6WzyZWXIZ2OeHOI7+svTg5Kw8KMmPzLh1GtSZ\nQPQGVoL91h6tt/UTCg9CiJcAWPd12O8MlLbgAT6mJ8Djro6pvvpDz+r2tD3CGOSw\nJMTvuEfnLSZCZjBfJ5mO/SzlnC6FmGXhmnluEqOs6X9g4yMYgJYkaEIK85ypnYnC\nwvJInS/ZG9O/zvh7fXIllpWttmebNOV6U2lODMOQ/oFlLtB5TGeJWlbWDHsp5+Bl\n0n0GkmteDIqzVtouDfCW9W2w0gNbb3L9Nw/ECyreQtyUtoHGc63bcl0PG1GudnA=\n=y6Ap\n-----END PGP SIGNATURE-----",
        "payload": "tree 5e1f04f1e8bf4202e5818678686236ff7177eab9\nparent cd381d771953805a0784e17e9fa7e9c0d2524f55\nparent 238851bf645709c8a333f48517ffcdb29a9c1434\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441719969 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441720202 +0200\n\nMerge pull request #6643\n\n238851b [doc] [tor] Clarify when to use bind (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd381d771953805a0784e17e9fa7e9c0d2524f55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd381d771953805a0784e17e9fa7e9c0d2524f55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd381d771953805a0784e17e9fa7e9c0d2524f55"
      },
      {
        "sha": "238851bf645709c8a333f48517ffcdb29a9c1434",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/238851bf645709c8a333f48517ffcdb29a9c1434",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/238851bf645709c8a333f48517ffcdb29a9c1434"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f8b94d19d174c702d6cdf16e35547a758e26e53d",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
        "patch": "@@ -70,9 +70,14 @@ In a typical situation, where you're only reachable via Tor, this should suffice\n \n \t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n-(obviously, replace the Onion address with your own). If you don't care too much\n-about hiding your node, and want to be reachable on IPv4 as well, additionally\n-specify:\n+(obviously, replace the Onion address with your own). It should be noted that you still\n+listen on all devices and another node could establish a clearnet connection, when knowing\n+your address. To mitigate this, additionally bind the address of your Tor proxy:\n+\n+\t./bitcoind ... -bind=127.0.0.1\n+\n+If you don't care too much about hiding your node, and want to be reachable on IPv4\n+as well, use `discover` instead:\n \n \t./bitcoind ... -discover\n "
      }
    ]
  },
  {
    "sha": "6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjZmYjE4OGI1MGE3MGVkYmNlODFhNGMwYjg4OGVlNzUxNWY2N2I1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T14:23:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T14:24:08Z"
      },
      "message": "Merge pull request #6644\n\n7a7e68d Prune the -prune help to reflect that the wallet is no longer disabled. (Gregory Maxwell)",
      "tree": {
        "sha": "256d96bacab820d51388b1cb0d7a31efdfc023c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/256d96bacab820d51388b1cb0d7a31efdfc023c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7u+IAAoJEHSBCwEjRsmm8awIAMotidYCIkIQGjIrUPfLKgcQ\nNv1B526Mdmblze9vIASvjIA7jLDLZAHGnTdORyna+iBkg8/pl/IDjAxH6uYxVetq\nAVf87AfaM47MynCqYLWCIBgyf2/EeZTwhDKlmxL1Qn3HPOZ4E51h0XEdLxu09q2N\nspot0MgiK8PXpLsbfJ+xn1bnEA54fz1dIiqE4WJSqnpCP6TC8PPnG+wgoUDXdOiK\n76Y/4x9tZhW8/EdMhs/TMDxbNLZrrFN0n1XK5gPvVoY/FkvhQmnNFGckB3Y2udHH\n1E7fIty4Y/J2BiKUnWRPugLZxIlqCews7Y1/+5RJHr9+OmAi/N6cGto6mb6qMeI=\n=NKFT\n-----END PGP SIGNATURE-----",
        "payload": "tree 256d96bacab820d51388b1cb0d7a31efdfc023c0\nparent e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb\nparent 7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441722220 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441722248 +0200\n\nMerge pull request #6644\n\n7a7e68d Prune the -prune help to reflect that the wallet is no longer disabled. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6fb188b50a70edbce81a4c0b888ee7515f67b5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8bb8ad85abe3d00b9dcc9f8cdbb0512b4ae46bb"
      },
      {
        "sha": "7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a7e68d1e2b3d7ca5899da2921a5afe5073a26f0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "58a6d540a8254d07d092d84e05c974beef2e0199",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6fb188b50a70edbce81a4c0b888ee7515f67b5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6fb188b50a70edbce81a4c0b888ee7515f67b5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
        "patch": "@@ -308,7 +308,7 @@ std::string HelpMessage(HelpMessageMode mode)\n #ifndef WIN32\n     strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file (default: %s)\"), \"bitcoind.pid\"));\n #endif\n-    strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. \"\n+    strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. \"\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for block files)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n     strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild block chain index from current blk000??.dat files on startup\"));"
      }
    ]
  },
  {
    "sha": "1d133d95739c8c578dca69d3f2fd875c981aa00d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDEzM2Q5NTczOWM4YzU3OGRjYTY5ZDNmMmZkODc1Yzk4MWFhMDBk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T14:40:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T14:43:26Z"
      },
      "message": "Merge pull request #6640\n\neb3002b [TRIVIAL] Fix typo: exactmath -> exactmatch (paveljanik)",
      "tree": {
        "sha": "1c689440ebd16775699af6780681b28948d349d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c689440ebd16775699af6780681b28948d349d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d133d95739c8c578dca69d3f2fd875c981aa00d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7vQOAAoJEHSBCwEjRsmmmD4IAKgggNqa9N06IxI3HhHOeE+t\n+vQmJQp5GpCaLUNrH3WBc9KnbLcOOje5JxTJX0lIcLJxdajXy+Ji789wE30RoPQE\nZsmSy5ofneuFvTnaXbi7HnNEscfQE1v/pnEaMW6VgBqyhvuNQI0xHM6T4Ji75aCu\nGKtijE+63HwL2kxtJQJFj0uQrjR5QQ8SezFFyzVP7GHUwO/NLjUsSauP0bztOJjr\nCIYAvLfrXqhZFqy/6i8gXhwHfJhNZIUJJJlgBhy0M84J+S7iAJXzAlhJYJWcD+vF\ncbIbvt5OdBAaFkuEaorjSUtADayNNYmc6hA6A4M4mXpIk6g/e0qpgAbnI9/X7NQ=\n=QDw8\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c689440ebd16775699af6780681b28948d349d8\nparent 6f6fb188b50a70edbce81a4c0b888ee7515f67b5\nparent eb3002bb7138db3aa4490b00be88779818b6da0d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441723256 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441723406 +0200\n\nMerge pull request #6640\n\neb3002b [TRIVIAL] Fix typo: exactmath -> exactmatch (paveljanik)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d133d95739c8c578dca69d3f2fd875c981aa00d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d133d95739c8c578dca69d3f2fd875c981aa00d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d133d95739c8c578dca69d3f2fd875c981aa00d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6fb188b50a70edbce81a4c0b888ee7515f67b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f6fb188b50a70edbce81a4c0b888ee7515f67b5"
      },
      {
        "sha": "eb3002bb7138db3aa4490b00be88779818b6da0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb3002bb7138db3aa4490b00be88779818b6da0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb3002bb7138db3aa4490b00be88779818b6da0d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "baca00757114bf25d44042671a736e466ef7b7f3",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d133d95739c8c578dca69d3f2fd875c981aa00d/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d133d95739c8c578dca69d3f2fd875c981aa00d/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=1d133d95739c8c578dca69d3f2fd875c981aa00d",
        "patch": "@@ -555,7 +555,7 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n \n void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler)\n {\n-    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n     pathHandlers.push_back(HTTPPathHandler(prefix, exactMatch, handler));\n }\n \n@@ -568,7 +568,7 @@ void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n             break;\n     if (i != iend)\n     {\n-        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmath %d)\\n\", prefix, exactMatch);\n+        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n         pathHandlers.erase(i);\n     }\n }"
      }
    ]
  },
  {
    "sha": "878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzhlYTY5NDkxOTNhOWI0ZjlkYzk1NmIzZmRmNzVmNTVlOGQyYzE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:01:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:02:00Z"
      },
      "message": "Merge pull request #6594\n\n5ffaaba Disallow duplicate windows. (Casey Rodarmor)",
      "tree": {
        "sha": "d8373fbe0ec9d1ad2cb0124a3249cd413f112393",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8373fbe0ec9d1ad2cb0124a3249cd413f112393"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7vhoAAoJEHSBCwEjRsmmv2sH/RaRaVTk/y+CL8feiYhNksWo\ne4GjL3tNBX8ewSIASSwMK0CKKK4LTswara9NzN7gKXnVGGoBj+qLfWfrY8pDtcDL\ntSeEfBJeDTICIBdYLI6FsL27PmbhgUGRAQSThczuWLC06eWqYeb9az2xDgfQ3zGV\nbjdoh03EaDBdKRbkOFAVN1roquiQ+H7bWXGFDIX7rkanejR8rz80M2kyvYiW1FaK\ndC6XIgmrPEACVyVpLFXxNfGTLJZFU2NRUTLYskZJwTSfhBXACs11ZCefFDcbl3R9\nh0imw9KcYqftzJat3tfWuX/wOvGV6ZijiIF9Y58gmwSkW/kzfsmXxCz9Q+DefEc=\n=0CBi\n-----END PGP SIGNATURE-----",
        "payload": "tree d8373fbe0ec9d1ad2cb0124a3249cd413f112393\nparent 1d133d95739c8c578dca69d3f2fd875c981aa00d\nparent 5ffaaba3a1533cc3cabe509bd09c137aa254e30f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441724506 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441724520 +0200\n\nMerge pull request #6594\n\n5ffaaba Disallow duplicate windows. (Casey Rodarmor)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d133d95739c8c578dca69d3f2fd875c981aa00d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d133d95739c8c578dca69d3f2fd875c981aa00d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d133d95739c8c578dca69d3f2fd875c981aa00d"
      },
      {
        "sha": "5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ffaaba3a1533cc3cabe509bd09c137aa254e30f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ffaaba3a1533cc3cabe509bd09c137aa254e30f"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 21,
      "deletions": 11
    },
    "files": [
      {
        "sha": "db9e5587644738605c7e902d6f4d9d6c7d6bc616",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
        "patch": "@@ -97,6 +97,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n     trayIconMenu(0),\n     notificator(0),\n     rpcConsole(0),\n+    helpMessageDialog(0),\n     prevBlocks(0),\n     spinnerFrame(0),\n     platformStyle(platformStyle)\n@@ -132,6 +133,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n #endif\n \n     rpcConsole = new RPCConsole(platformStyle, 0);\n+    helpMessageDialog = new HelpMessageDialog(this, false);\n #ifdef ENABLE_WALLET\n     if(enableWallet)\n     {\n@@ -590,9 +592,7 @@ void BitcoinGUI::aboutClicked()\n \n void BitcoinGUI::showHelpMessageClicked()\n {\n-    HelpMessageDialog *help = new HelpMessageDialog(this, false);\n-    help->setAttribute(Qt::WA_DeleteOnClose);\n-    help->show();\n+    helpMessageDialog->show();\n }\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "f1b7a502ba3c15d10c9ff4d9a6cc57952285a4fb",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
        "patch": "@@ -28,6 +28,7 @@ class SendCoinsRecipient;\n class UnitDisplayStatusBarControl;\n class WalletFrame;\n class WalletModel;\n+class HelpMessageDialog;\n \n class CWallet;\n \n@@ -113,6 +114,7 @@ class BitcoinGUI : public QMainWindow\n     QMenu *trayIconMenu;\n     Notificator *notificator;\n     RPCConsole *rpcConsole;\n+    HelpMessageDialog *helpMessageDialog;\n \n     /** Keep track of previous number of blocks, to detect progress */\n     int prevBlocks;"
      },
      {
        "sha": "77efdb5cdd1083bcf936dcc5762a5a901c530573",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
        "patch": "@@ -56,6 +56,9 @@ WalletView::WalletView(const PlatformStyle *platformStyle, QWidget *parent):\n     receiveCoinsPage = new ReceiveCoinsDialog(platformStyle);\n     sendCoinsPage = new SendCoinsDialog(platformStyle);\n \n+    usedSendingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n+    usedReceivingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n+\n     addWidget(overviewPage);\n     addWidget(transactionsPage);\n     addWidget(receiveCoinsPage);\n@@ -115,6 +118,8 @@ void WalletView::setWalletModel(WalletModel *walletModel)\n     overviewPage->setWalletModel(walletModel);\n     receiveCoinsPage->setModel(walletModel);\n     sendCoinsPage->setModel(walletModel);\n+    usedReceivingAddressesPage->setModel(walletModel->getAddressTableModel());\n+    usedSendingAddressesPage->setModel(walletModel->getAddressTableModel());\n \n     if (walletModel)\n     {\n@@ -273,20 +278,20 @@ void WalletView::usedSendingAddresses()\n {\n     if(!walletModel)\n         return;\n-    AddressBookPage *dlg = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n-    dlg->setAttribute(Qt::WA_DeleteOnClose);\n-    dlg->setModel(walletModel->getAddressTableModel());\n-    dlg->show();\n+\n+    usedSendingAddressesPage->show();\n+    usedSendingAddressesPage->raise();\n+    usedSendingAddressesPage->activateWindow();\n }\n \n void WalletView::usedReceivingAddresses()\n {\n     if(!walletModel)\n         return;\n-    AddressBookPage *dlg = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n-    dlg->setAttribute(Qt::WA_DeleteOnClose);\n-    dlg->setModel(walletModel->getAddressTableModel());\n-    dlg->show();\n+\n+    usedReceivingAddressesPage->show();\n+    usedReceivingAddressesPage->raise();\n+    usedReceivingAddressesPage->activateWindow();\n }\n \n void WalletView::showProgress(const QString &title, int nProgress)"
      },
      {
        "sha": "2a6a6a2df2b93fb24dfa36869e727fd98fb8302f",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
        "patch": "@@ -18,6 +18,7 @@ class SendCoinsDialog;\n class SendCoinsRecipient;\n class TransactionView;\n class WalletModel;\n+class AddressBookPage;\n \n QT_BEGIN_NAMESPACE\n class QModelIndex;\n@@ -61,6 +62,8 @@ class WalletView : public QStackedWidget\n     QWidget *transactionsPage;\n     ReceiveCoinsDialog *receiveCoinsPage;\n     SendCoinsDialog *sendCoinsPage;\n+    AddressBookPage *usedSendingAddressesPage;\n+    AddressBookPage *usedReceivingAddressesPage;\n \n     TransactionView *transactionView;\n "
      }
    ]
  },
  {
    "sha": "0c2779514041b174c13d7cd3a66f1fd28e9026fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzI3Nzk1MTQwNDFiMTc0YzEzZDdjZDNhNjZmMWZkMjhlOTAyNmZh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:03:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:10:36Z"
      },
      "message": "Merge pull request #6579\n\nafb0cca Add NODE_BLOOM service bit and bump protocol version (Matt Corallo)",
      "tree": {
        "sha": "d22549d3a50e3002c8f1c94910f45325cf9ea617",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d22549d3a50e3002c8f1c94910f45325cf9ea617"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c2779514041b174c13d7cd3a66f1fd28e9026fa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7vpsAAoJEHSBCwEjRsmmR9cH/iaHdN+Mj5XOefZ1YNOzt9/F\nURsvaNgkEdIFyPSrNWyrz0sOXCT4jSw1Cwp8YEt2xl+I4N5xyvanKhKgumN9lMX7\nOdwGUHPsP0OIKTXtCEuH17/27vho3lqZuRIZAAjQTSESPWgGW5G8dvTPg5uNbLBi\npLe9ZgN+ZKYcEgKxh6DFtEkH7Ov6/8qhNURS5wX4tqPt98m9zUwabo7dHimlaNKy\nonyeU7hMUwPHxsTmSx1DTSBtbaQmkQyuo45cX2cfIMn8LjHjQhdD9pvmkb5mznGd\nRGNVhiV67lx9g0Hwo+MdViOdBv51zi4nJtfNqS+RIhkRXzVLf/JBzCsF4A0YK8A=\n=/Gim\n-----END PGP SIGNATURE-----",
        "payload": "tree d22549d3a50e3002c8f1c94910f45325cf9ea617\nparent 878ea6949193a9b4f9dc956b3fdf75f55e8d2c19\nparent afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441724603 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441725036 +0200\n\nMerge pull request #6579\n\nafb0cca Add NODE_BLOOM service bit and bump protocol version (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c2779514041b174c13d7cd3a66f1fd28e9026fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c2779514041b174c13d7cd3a66f1fd28e9026fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c2779514041b174c13d7cd3a66f1fd28e9026fa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/878ea6949193a9b4f9dc956b3fdf75f55e8d2c19"
      },
      {
        "sha": "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 26,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a12e38ff5348bc70c1f972aa8e6900da03082543",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "patch": "@@ -918,6 +918,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Option to startup with mocktime set (used for regression testing):\n     SetMockTime(GetArg(\"-mocktime\", 0)); // SetMockTime(0) is a no-op\n \n+    if (GetBoolArg(\"-peerbloomfilters\", true))\n+        nLocalServices |= NODE_BLOOM;\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Initialize elliptic curve code"
      },
      {
        "sha": "a880533e65010b05c1ac46d0a7d9bfa3bcbd2a98",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "patch": "@@ -4591,6 +4591,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\") &&\n+              //TODO: Remove this line after reasonable network upgrade\n+              pfrom->nVersion >= NO_BLOOM_VERSION)\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;\n+    }\n+\n+\n     else if (strCommand == \"filterload\")\n     {\n         CBloomFilter filter;"
      },
      {
        "sha": "50aeaf44bab191b93d8a3eecdb00506ea8b0d7e7",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "patch": "@@ -75,6 +75,10 @@ enum {\n     // Bitcoin Core does not support this but a patch set called Bitcoin XT does.\n     // See BIP 64 for details on how this is implemented.\n     NODE_GETUTXO = (1 << 1),\n+    // NODE_BLOOM means the node is capable and willing to handle bloom-filtered connections.\n+    // Bitcoin Core nodes used to support this by default, without advertising this bit,\n+    // but no longer do as of protocol version 70011 (= NO_BLOOM_VERSION)\n+    NODE_BLOOM = (1 << 2),\n \n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\n     // isn't getting used, or one not being used much, and notify the"
      },
      {
        "sha": "6cdddf92554d62e7085bf0169c69fccc8cfe4461",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c2779514041b174c13d7cd3a66f1fd28e9026fa/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "patch": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70002;\n+static const int PROTOCOL_VERSION = 70011;\n \n //! initial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;\n@@ -34,4 +34,7 @@ static const int BIP0031_VERSION = 60000;\n //! \"mempool\" command, enhanced \"getdata\" behavior starts with this version\n static const int MEMPOOL_GD_VERSION = 60002;\n \n+//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version\n+static const int NO_BLOOM_VERSION = 70011;\n+\n #endif // BITCOIN_VERSION_H"
      }
    ]
  },
  {
    "sha": "0574ede5952a13cec9fa54766923c54d8a69edaf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTc0ZWRlNTk1MmExM2NlYzlmYTU0NzY2OTIzYzU0ZDhhNjllZGFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:16:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:19:08Z"
      },
      "message": "doc: update release-notes and bips.md for BIP111",
      "tree": {
        "sha": "b5c7d501e0625a3a6629ca1f47cc9a66826b169d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5c7d501e0625a3a6629ca1f47cc9a66826b169d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0574ede5952a13cec9fa54766923c54d8a69edaf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0574ede5952a13cec9fa54766923c54d8a69edaf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0574ede5952a13cec9fa54766923c54d8a69edaf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0574ede5952a13cec9fa54766923c54d8a69edaf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c2779514041b174c13d7cd3a66f1fd28e9026fa"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "44b501c68872a76ef148e2ccc335a5e01c5e5883",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0574ede5952a13cec9fa54766923c54d8a69edaf/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0574ede5952a13cec9fa54766923c54d8a69edaf/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=0574ede5952a13cec9fa54766923c54d8a69edaf",
        "patch": "@@ -1,4 +1,4 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.10.0**):\n+BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n \n * [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n * [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n@@ -16,3 +16,4 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.10.0**):\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n+* [`BIP 111'](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0**"
      },
      {
        "sha": "e0c6ef586f9ce7ff3e87e5d189b9cde417bcb048",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0574ede5952a13cec9fa54766923c54d8a69edaf/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0574ede5952a13cec9fa54766923c54d8a69edaf/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=0574ede5952a13cec9fa54766923c54d8a69edaf",
        "patch": "@@ -58,6 +58,23 @@ specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n other software, the last specified value for an option will hold.\n \n+`NODE_BLOOM` node service bit\n+------------------------------\n+\n+Support for the `NODE_BLOOM` service bit, as described in [`BIP\n+111'](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n+added to the P2P protocol code.\n+\n+BIP 111 defines a service bit to allow peers to advertise that they support\n+bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n+version to allow peers to identify old nodes which allow bloom filtering of the\n+connection despite lacking the new service bit.\n+\n+In this version, it only enforced for peer peers that send protocol versions\n+`>=70011`. For the next major version it is planned that this restriction will be\n+removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n+service bit for nodes that report versions newer than 70011.\n+\n 0.12.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjI0OTM2YmVkZDhmZTc3N2IyM2Q0M2MyNTNhYmQyYzBjZDk1ZDIy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:38:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:38:25Z"
      },
      "message": "Merge pull request #6635\n\na1df1e8 [docs] add libevent dependency to build-osx.md (Jonas Schnelli)\nd6a92dd [release notes] mention apache reverse proxy to re-enable SSL (Jonas Schnelli)",
      "tree": {
        "sha": "17f947b8ef78edc72d571ac039ede0baa4d0d500",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17f947b8ef78edc72d571ac039ede0baa4d0d500"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV7wDxAAoJEHSBCwEjRsmmPt4H/R4tiO126RSAvxnfo9g6dr5M\nYoiBpvxTJ29VIfVhFJ+rruQTQ1oiNl+gzNLN8OvNrOfjg1lCPnVFL402Hh6syovg\nO847YvuSGDiycvxEFAldf6mW42v6OubGBYh5HmXfVomV2M2Ee8nGnA4n9tRCjhTt\nky87uLwy0H1psUCsvJmQpTqst1u99yr++a8GRLcWEtThQzzD5tmHUkxAzsRUpGkk\nS/DswmV7SlOW3lUTq+J14CsieYRLaMRAS+/yy+Ytou5SQcfM0wtqUP0NDiT7CnmC\n1Oiv8PkYR/HnT4UNCuJ4GYxuzUV+i3slkole/z+QNpIvI54hpn25RkrPUai9MVE=\n=CWSH\n-----END PGP SIGNATURE-----",
        "payload": "tree 17f947b8ef78edc72d571ac039ede0baa4d0d500\nparent 0c2779514041b174c13d7cd3a66f1fd28e9026fa\nparent a1df1e870b79200c70cf6a5e3201dab1e981a2a2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1441726683 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1441726705 +0200\n\nMerge pull request #6635\n\na1df1e8 [docs] add libevent dependency to build-osx.md (Jonas Schnelli)\nd6a92dd [release notes] mention apache reverse proxy to re-enable SSL (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c2779514041b174c13d7cd3a66f1fd28e9026fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c2779514041b174c13d7cd3a66f1fd28e9026fa"
      },
      {
        "sha": "a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1df1e870b79200c70cf6a5e3201dab1e981a2a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1df1e870b79200c70cf6a5e3201dab1e981a2a2"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 31,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8fad8b5b00467fc788e5794c29a74ea89335df40",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3224936bedd8fe777b23d43c253abd2c0cd95d22/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3224936bedd8fe777b23d43c253abd2c0cd95d22/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "patch": "@@ -32,7 +32,7 @@ Instructions: Homebrew\n \n #### Install dependencies using Homebrew\n \n-        brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5\n+        brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n "
      },
      {
        "sha": "e61933ddb2763c9d9fae5c082b836ac1680ecfd4",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3224936bedd8fe777b23d43c253abd2c0cd95d22/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3224936bedd8fe777b23d43c253abd2c0cd95d22/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "patch": "@@ -27,6 +27,36 @@ Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on\n \n It can also be set up system-wide in inetd style.\n \n+Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n+would allow the use of different authentication, loadbalancing, on-the-fly compression and\n+caching. A sample config for apache2 could look like:\n+\n+    Listen 443\n+\n+    NameVirtualHost *:443\n+    <VirtualHost *:443>\n+\n+    SSLEngine On\n+    SSLCertificateFile /etc/apache2/ssl/server.crt\n+    SSLCertificateKeyFile /etc/apache2/ssl/server.key\n+\n+    <Location /bitcoinrpc>\n+        ProxyPass http://127.0.0.1:8332/\n+        ProxyPassReverse http://127.0.0.1:8332/\n+        # optional enable digest auth\n+        # AuthType Digest\n+        # ...\n+        \n+        # optional bypass bitcoind rpc basic auth\n+        # RequestHeader set Authorization \"Basic <hash>\"\n+        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n+    </Location>\n+\n+    # Or, balance the load:\n+    # ProxyPass / balancer://balancer_cluster_name\n+\n+    </VirtualHost>\n+\n Random-cookie RPC authentication\n ---------------------------------\n "
      }
    ]
  },
  {
    "sha": "6ecaec395cf747349d59396d71a83288cd55c218",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWNhZWMzOTVjZjc0NzM0OWQ1OTM5NmQ3MWE4MzI4OGNkNTVjMjE4",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T08:19:57Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-08T23:11:10Z"
      },
      "message": "[Trivial] [logging] Rm extraneous cleansubver in serveral debug messages.\n\nWe log the cleanSubVer as part of connect.  It is not uniquely more informative\n than any of the other data we have about a peer, often less.  It's also often\n long now as well.  There is no need to output it as part of mempoolrej,\n AcceptToMemoryPool, or pong entries.  Leaving it out makes our log entries\n more uniform and consistent.",
      "tree": {
        "sha": "80dd6758b20315c3efe7d72446b24060af133f4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80dd6758b20315c3efe7d72446b24060af133f4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ecaec395cf747349d59396d71a83288cd55c218",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ecaec395cf747349d59396d71a83288cd55c218",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ecaec395cf747349d59396d71a83288cd55c218",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ecaec395cf747349d59396d71a83288cd55c218/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "16522656a927b1e9577d2a2b157a45328fe08d86",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ecaec395cf747349d59396d71a83288cd55c218/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ecaec395cf747349d59396d71a83288cd55c218/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=6ecaec395cf747349d59396d71a83288cd55c218",
        "patch": "@@ -4254,8 +4254,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             RelayTransaction(tx);\n             vWorkQueue.push_back(inv.hash);\n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d %s: accepted %s (poolsz %u)\\n\",\n-                pfrom->id, pfrom->cleanSubVer,\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u)\\n\",\n+                pfrom->id,\n                 tx.GetHash().ToString(),\n                 mempool.mapTx.size());\n \n@@ -4344,8 +4344,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n-            LogPrint(\"mempoolrej\", \"%s from peer=%d %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n-                pfrom->id, pfrom->cleanSubVer,\n+            LogPrint(\"mempoolrej\", \"%s from peer=%d was not accepted: %s\\n\", tx.GetHash().ToString(),\n+                pfrom->id,\n                 FormatStateMessage(state));\n             if (state.GetRejectCode() < REJECT_INTERNAL) // Never send AcceptToMemoryPool's internal codes over P2P\n                 pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n@@ -4546,9 +4546,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong peer=%d %s: %s, %x expected, %x received, %u bytes\\n\",\n+            LogPrint(\"net\", \"pong peer=%d: %s, %x expected, %x received, %u bytes\\n\",\n                 pfrom->id,\n-                pfrom->cleanSubVer,\n                 sProblem,\n                 pfrom->nPingNonceSent,\n                 nonce,"
      }
    ]
  },
  {
    "sha": "5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDdhMTZkMDczYmZjMzdmNDI5YjcxYzQxMWY1YmRjY2U4YmZlNzli",
    "commit": {
      "author": {
        "name": "Irving Ruan",
        "email": "irvingruan@gmail.com",
        "date": "2015-09-12T07:35:36Z"
      },
      "committer": {
        "name": "Irving Ruan",
        "email": "irvingruan@gmail.com",
        "date": "2015-09-12T07:35:36Z"
      },
      "message": "Fixes typo in build-osx.md.",
      "tree": {
        "sha": "a728ae3c6ed35b25a312af5e63875e98269c923d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a728ae3c6ed35b25a312af5e63875e98269c923d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b/comments",
    "author": {
      "login": "irvingruan",
      "id": 335173,
      "node_id": "MDQ6VXNlcjMzNTE3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/irvingruan",
      "html_url": "https://github.com/irvingruan",
      "followers_url": "https://api.github.com/users/irvingruan/followers",
      "following_url": "https://api.github.com/users/irvingruan/following{/other_user}",
      "gists_url": "https://api.github.com/users/irvingruan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/irvingruan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/irvingruan/subscriptions",
      "organizations_url": "https://api.github.com/users/irvingruan/orgs",
      "repos_url": "https://api.github.com/users/irvingruan/repos",
      "events_url": "https://api.github.com/users/irvingruan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/irvingruan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "irvingruan",
      "id": 335173,
      "node_id": "MDQ6VXNlcjMzNTE3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/irvingruan",
      "html_url": "https://github.com/irvingruan",
      "followers_url": "https://api.github.com/users/irvingruan/followers",
      "following_url": "https://api.github.com/users/irvingruan/following{/other_user}",
      "gists_url": "https://api.github.com/users/irvingruan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/irvingruan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/irvingruan/subscriptions",
      "organizations_url": "https://api.github.com/users/irvingruan/orgs",
      "repos_url": "https://api.github.com/users/irvingruan/repos",
      "events_url": "https://api.github.com/users/irvingruan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/irvingruan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "201fe9522b9effa11ed34ced0220dfda3eccd140",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
        "patch": "@@ -70,7 +70,7 @@ Download Qt Creator from http://www.qt.io/download/. Download the \"community edi\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n 8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n-9. Select LLDB as debugger (you might need to set the path to your installtion)\n+9. Select LLDB as debugger (you might need to set the path to your installation)\n 10. Start debugging with Qt Creator\n \n Creating a release build"
      }
    ]
  },
  {
    "sha": "4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzNjYWIxNGI3MWRkMTNiZTA2NmY1YmU3YzI0ZGRhYTdhMmY4NzI0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-11T21:31:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-12T11:28:00Z"
      },
      "message": "[trivial] init cleanup",
      "tree": {
        "sha": "6f1b82d8d5a8404cd108edcfa4854a70929ba7ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f1b82d8d5a8404cd108edcfa4854a70929ba7ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1a6d1421db84ed121825e95f43c27c3688b02922",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
        "patch": "@@ -295,7 +295,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     if (mode == HMM_BITCOIND)\n     {\n-#if !defined(WIN32)\n+#ifndef WIN32\n         strUsage += HelpMessageOpt(\"-daemon\", _(\"Run in the background as a daemon and accept commands\"));\n #endif\n     }\n@@ -312,7 +312,7 @@ std::string HelpMessage(HelpMessageMode mode)\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for block files)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n     strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild block chain index from current blk000??.dat files on startup\"));\n-#if !defined(WIN32)\n+#ifndef WIN32\n     strUsage += HelpMessageOpt(\"-sysperms\", _(\"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\"));\n #endif\n     strUsage += HelpMessageOpt(\"-txindex\", strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), 0));\n@@ -825,15 +825,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     fServer = GetBoolArg(\"-server\", false);\n \n-    // block pruning; get the amount of disk space (in MB) to allot for block & undo files\n+    // block pruning; get the amount of disk space (in MiB) to allot for block & undo files\n     int64_t nSignedPruneTarget = GetArg(\"-prune\", 0) * 1024 * 1024;\n     if (nSignedPruneTarget < 0) {\n         return InitError(_(\"Prune cannot be configured with a negative value.\"));\n     }\n     nPruneTarget = (uint64_t) nSignedPruneTarget;\n     if (nPruneTarget) {\n         if (nPruneTarget < MIN_DISK_SPACE_FOR_BLOCK_FILES) {\n-            return InitError(strprintf(_(\"Prune configured below the minimum of %d MB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n+            return InitError(strprintf(_(\"Prune configured below the minimum of %d MiB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n         }\n         LogPrintf(\"Prune configured to target %uMiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n         fPruneMode = true;\n@@ -1009,7 +1009,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!warningString.empty())\n             InitWarning(warningString);\n         if (!errorString.empty())\n-            return InitError(warningString);\n+            return InitError(errorString);\n \n     } // (!fDisableWallet)\n #endif // ENABLE_WALLET\n@@ -1517,7 +1517,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Generate coins in the background\n     GenerateBitcoins(GetBoolArg(\"-gen\", false), GetArg(\"-genproclimit\", 1), Params());\n \n-    // ********************************************************* Step 11: finished\n+    // ********************************************************* Step 12: finished\n \n     SetRPCWarmupFinished();\n     uiInterface.InitMessage(_(\"Done loading\"));"
      }
    ]
  },
  {
    "sha": "51ff77735745797b492590440425bca76b8411ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWZmNzc3MzU3NDU3OTdiNDkyNTkwNDQwNDI1YmNhNzZiODQxMWVh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-04T09:05:17Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-12T16:19:53Z"
      },
      "message": "[trivial] Fix rpc message \"help generate\"",
      "tree": {
        "sha": "704fb6baacebe9825c8c2d3e9dd6b49be91472e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/704fb6baacebe9825c8c2d3e9dd6b49be91472e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51ff77735745797b492590440425bca76b8411ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51ff77735745797b492590440425bca76b8411ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51ff77735745797b492590440425bca76b8411ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51ff77735745797b492590440425bca76b8411ea/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c3cab14b71dd13be066f5be7c24ddaa7a2f8724"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8dd0ff2f7e526b605328e4eafc1998ae834b0cd7",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51ff77735745797b492590440425bca76b8411ea/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51ff77735745797b492590440425bca76b8411ea/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=51ff77735745797b492590440425bca76b8411ea",
        "patch": "@@ -119,6 +119,7 @@ UniValue generate(const UniValue& params, bool fHelp)\n             \"generate numblocks\\n\"\n             \"\\nMine blocks immediately (before the RPC call returns)\\n\"\n             \"\\nNote: this function can only be used on the regtest network\\n\"\n+            \"\\nArguments:\\n\"\n             \"1. numblocks    (numeric, required) How many blocks are generated immediately.\\n\"\n             \"\\nResult\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\""
      }
    ]
  },
  {
    "sha": "d1acf938e69397347490defaf4b675524dbffcd9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWFjZjkzOGU2OTM5NzM0NzQ5MGRlZmFmNGI2NzU1MjRkYmZmY2Q5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-12T10:09:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-13T15:57:12Z"
      },
      "message": "[qt] [trivial] share/qt/make_spinner.py => src/qt/res/movies/makespinner.sh\n\n* Merge make_spinner.py into makespinner.sh\n* Also delete now unused imgs\n* Actually use all 36 frames for the spinner animation",
      "tree": {
        "sha": "1820d61d496a299f7ea8a1ddb7df8d515eaca321",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1820d61d496a299f7ea8a1ddb7df8d515eaca321"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1acf938e69397347490defaf4b675524dbffcd9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1acf938e69397347490defaf4b675524dbffcd9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1acf938e69397347490defaf4b675524dbffcd9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1acf938e69397347490defaf4b675524dbffcd9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 5,
      "deletions": 42
    },
    "files": [
      {
        "sha": "9068db9a6334e80234194fa23ba9912338d93841",
        "filename": "share/qt/img/reload.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3224936bedd8fe777b23d43c253abd2c0cd95d22/share/qt/img/reload.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3224936bedd8fe777b23d43c253abd2c0cd95d22/share/qt/img/reload.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/img/reload.png?ref=3224936bedd8fe777b23d43c253abd2c0cd95d22"
      },
      {
        "sha": "dc8be62831673c2e99f05f5e5b42581e6e4e1db1",
        "filename": "share/qt/img/reload.xcf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3224936bedd8fe777b23d43c253abd2c0cd95d22/share/qt/img/reload.xcf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3224936bedd8fe777b23d43c253abd2c0cd95d22/share/qt/img/reload.xcf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/img/reload.xcf?ref=3224936bedd8fe777b23d43c253abd2c0cd95d22"
      },
      {
        "sha": "bb19e9150815f20b731e516211a8d7845ee57533",
        "filename": "share/qt/make_spinner.py",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3224936bedd8fe777b23d43c253abd2c0cd95d22/share/qt/make_spinner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3224936bedd8fe777b23d43c253abd2c0cd95d22/share/qt/make_spinner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_spinner.py?ref=3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "patch": "@@ -1,38 +0,0 @@\n-#!/usr/bin/env python\n-# W.J. van der Laan, 2011\n-# Make spinning animation from a .png\n-# Requires imagemagick 6.7+\n-from __future__ import division\n-from os import path\n-from PIL import Image\n-from subprocess import Popen\n-\n-SRC='img/reload.png'\n-TMPDIR='../../src/qt/res/movies/'\n-TMPNAME='spinner-%03i.png'\n-NUMFRAMES=35\n-FRAMERATE=10.0\n-CONVERT='convert'\n-CLOCKWISE=True\n-DSIZE=(16,16)\n-\n-im_src = Image.open(SRC)\n-\n-if CLOCKWISE:\n-    im_src = im_src.transpose(Image.FLIP_LEFT_RIGHT)\n-\n-def frame_to_filename(frame):\n-    return path.join(TMPDIR, TMPNAME % frame)\n-\n-frame_files = []\n-for frame in xrange(NUMFRAMES):\n-    rotation = (frame + 0.5) / NUMFRAMES * 360.0\n-    if CLOCKWISE:\n-        rotation = -rotation\n-    im_new = im_src.rotate(rotation, Image.BICUBIC)\n-    im_new.thumbnail(DSIZE, Image.ANTIALIAS)\n-    outfile = frame_to_filename(frame)\n-    im_new.save(outfile, 'png')\n-    frame_files.append(outfile)\n-\n-"
      },
      {
        "sha": "7d3e48ff32eff1da7f8f306ae4d12b0e5e86890b",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=d1acf938e69397347490defaf4b675524dbffcd9",
        "patch": "@@ -42,7 +42,7 @@ static const int MAX_URI_LENGTH = 255;\n #define EXPORT_IMAGE_SIZE 256\n \n /* Number of frames in spinner animation */\n-#define SPINNER_FRAMES 35\n+#define SPINNER_FRAMES 36\n \n #define QAPP_ORG_NAME \"Bitcoin\"\n #define QAPP_ORG_DOMAIN \"bitcoin.org\""
      },
      {
        "sha": "a4c2fddbbfe5320d43c86ceba990c2da2e866cb4",
        "filename": "src/qt/res/movies/makespinner.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/res/movies/makespinner.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/res/movies/makespinner.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/makespinner.sh?ref=d1acf938e69397347490defaf4b675524dbffcd9",
        "patch": "@@ -1,6 +1,7 @@\n-for i in {1..35}\n+FRAMEDIR=$(dirname $0)\n+for i in {0..35}\n do\n-    value=$(printf \"%03d\" $i)\n+    frame=$(printf \"%03d\" $i)\n     angle=$(($i * 10))\n-    convert spinner-000.png -background \"rgba(0,0,0,0.0)\" -distort SRT $angle spinner-$value.png\n+    convert $FRAMEDIR/../src/spinner.png -background \"rgba(0,0,0,0.0)\" -distort SRT $angle $FRAMEDIR/spinner-$frame.png\n done"
      },
      {
        "sha": "0dc48d0d8c564f5daf51db3f8f8d4c2b60df1ad7",
        "filename": "src/qt/res/movies/spinner-000.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/res/movies/spinner-000.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/res/movies/spinner-000.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-000.png?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "b296a584817bf764bdd86f0acb6b5c7974b912b4",
        "filename": "src/qt/res/src/spinner.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/res/src/spinner.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/src/qt/res/src/spinner.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/src/spinner.png?ref=d1acf938e69397347490defaf4b675524dbffcd9",
        "previous_filename": "src/qt/res/spinner.png"
      }
    ]
  },
  {
    "sha": "9b1cdd7eeb7346704259c3416a59c0a12057fe56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjFjZGQ3ZWViNzM0NjcwNDI1OWMzNDE2YTU5YzBhMTIwNTdmZTU2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-12T10:20:11Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-13T15:57:25Z"
      },
      "message": "[trivial] Remove obsolete pixmaps",
      "tree": {
        "sha": "4b4bfebcf11e8c64c6744dc4361a8da20efee410",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b4bfebcf11e8c64c6744dc4361a8da20efee410"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b1cdd7eeb7346704259c3416a59c0a12057fe56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b1cdd7eeb7346704259c3416a59c0a12057fe56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b1cdd7eeb7346704259c3416a59c0a12057fe56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b1cdd7eeb7346704259c3416a59c0a12057fe56/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1acf938e69397347490defaf4b675524dbffcd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1acf938e69397347490defaf4b675524dbffcd9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1acf938e69397347490defaf4b675524dbffcd9"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 0,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c5576910b1b6b95c23ed7c53adec399a944e610a",
        "filename": "share/pixmaps/addressbook16.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook16.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook16.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook16.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "d3a478d1ad1d4800008fda5be5d583f3d0423480",
        "filename": "share/pixmaps/addressbook16mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook16mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook16mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook16mask.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "2b33b228aaec9ef51fb3dd46b3eab98f3d61d7df",
        "filename": "share/pixmaps/addressbook20.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook20.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook20.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook20.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "56ce6125dbb83abfac437bbbcdb611f45ee57cff",
        "filename": "share/pixmaps/addressbook20mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook20mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/addressbook20mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook20mask.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "88cc240e2d4f77fa66730593a890a17aab86cbdc",
        "filename": "share/pixmaps/bitcoin-bc.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/bitcoin-bc.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/bitcoin-bc.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin-bc.ico?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "0c4e6e81473d47761346fd71e171a807bda5ec58",
        "filename": "share/pixmaps/check.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/check.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/check.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/check.ico?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "754eebc48814ff7191543d92207ae881227ef33e",
        "filename": "share/pixmaps/favicon.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/favicon.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/favicon.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/favicon.ico?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "676b5c4b490e0859578ae599af54aa3de26d5d3b",
        "filename": "share/pixmaps/send16.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send16.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send16.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send16.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "06c747f9349abb52995c0e7ff02f126b21469c0e",
        "filename": "share/pixmaps/send16mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send16mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send16mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send16mask.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "faf24e0d8aa81faf80072c7807e52d749cad63c0",
        "filename": "share/pixmaps/send16masknoshadow.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send16masknoshadow.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send16masknoshadow.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send16masknoshadow.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "2b90422b38467ae30a2b6a866adbf0ad3c3f97f3",
        "filename": "share/pixmaps/send20.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send20.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send20.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send20.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "f124d0da084e68cac62312e9fa8a0fbf9c7c5075",
        "filename": "share/pixmaps/send20mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send20mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/pixmaps/send20mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send20mask.bmp?ref=d1acf938e69397347490defaf4b675524dbffcd9"
      },
      {
        "sha": "063641cba293fadf380fb37bdec3218dfd52babc",
        "filename": "share/ui.rc",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1acf938e69397347490defaf4b675524dbffcd9/share/ui.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1acf938e69397347490defaf4b675524dbffcd9/share/ui.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/ui.rc?ref=d1acf938e69397347490defaf4b675524dbffcd9",
        "patch": "@@ -1,15 +0,0 @@\n-bitcoin               ICON    \"pixmaps/bitcoin.ico\"\r\n-\r\n-#include \"wx/msw/wx.rc\"\r\n-\r\n-check                 ICON    \"pixmaps/check.ico\"\r\n-send16                BITMAP  \"pixmaps/send16.bmp\"\r\n-send16mask            BITMAP  \"pixmaps/send16mask.bmp\"\r\n-send16masknoshadow    BITMAP  \"pixmaps/send16masknoshadow.bmp\"\r\n-send20                BITMAP  \"pixmaps/send20.bmp\"\r\n-send20mask            BITMAP  \"pixmaps/send20mask.bmp\"\r\n-addressbook16         BITMAP  \"pixmaps/addressbook16.bmp\"\r\n-addressbook16mask     BITMAP  \"pixmaps/addressbook16mask.bmp\"\r\n-addressbook20         BITMAP  \"pixmaps/addressbook20.bmp\"\r\n-addressbook20mask     BITMAP  \"pixmaps/addressbook20mask.bmp\"\r\n-favicon               ICON    \"pixmaps/favicon.ico\"\r"
      }
    ]
  },
  {
    "sha": "0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTg2MjI4ZDYxMDZmOGY3YjRmMzJiYjhiZDIzNGJmYjRkZTNlNGZh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-14T16:54:25Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-14T16:54:25Z"
      },
      "message": "Update trusted-git-root to the most recent unsigned commit",
      "tree": {
        "sha": "6550b31eebbbc0d92f5a3d48b833e66047b0bf57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6550b31eebbbc0d92f5a3d48b833e66047b0bf57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "838b8d1ea84bd02a1bc790d3587ed2b37a171f67",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
        "patch": "@@ -1 +1 @@\n-053038e5ba116cb319fb85f3cb3e062cf1b3df15\n+165e323d851cc87213c7673c6f278e87a6f2e752"
      }
    ]
  },
  {
    "sha": "9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmUwOGI3ZmUyYjZmYzgxYWZkMGZmNGE4MmQ5Zjk2MzdjOTJkZjlk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-12T17:01:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-15T14:38:08Z"
      },
      "message": "Update contrib/debian/copyright",
      "tree": {
        "sha": "680de81ed984059409142465d87dad218a5cc16e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/680de81ed984059409142465d87dad218a5cc16e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 137,
      "additions": 52,
      "deletions": 85
    },
    "files": [
      {
        "sha": "314d2e2ff332b255365afa868775084447a9fd50",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
        "patch": "@@ -1,3 +1,5 @@\n+The MIT License (MIT)\n+\n Copyright (c) 2009-2015 The Bitcoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy"
      },
      {
        "sha": "7bb6fadae9aa1cb3038fb996adf731ac64a0c0a8",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 50,
        "deletions": 85,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
        "patch": "@@ -5,15 +5,11 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Core Developers\n-License: Expat\n+Copyright: 2009-2015, Bitcoin Core Developers\n+License: MIT/Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n-Files: src/json/*\n-Copyright: 2007-2009, John W. Wilkinson\n-License: Expat\n-\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n@@ -23,62 +19,62 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-       src/qt/res/src/*.svg\n-Copyright: Wladimir van der Laan\n-License: Expat\n-\n-Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Copyright: David Vignoni (david@icon-king.com)\n-           ICON KING - www.icon-king.com\n-License: LGPL\n-Comment: NUVOLA ICON THEME for KDE 3.x\n-         Original icons: kaddressbook, klipper_dock, view-list-text,\n-                         key-password, encrypted/decrypted, go-home, go-down,\n-                         go-next, dialog-ok\n-         Site: http://www.icon-king.com/projects/nuvola/\n+Files: src/qt/res/icons/add.png,\n+       src/qt/res/icons/address-book.png,\n+       src/qt/res/icons/configure.png,\n+       src/qt/res/icons/debugwindow.png,\n+       src/qt/res/icons/edit.png,\n+       src/qt/res/icons/editcopy.png,\n+       src/qt/res/icons/editpaste.png,\n+       src/qt/res/icons/export.png,\n+       src/qt/res/icons/eye.png,\n+       src/qt/res/icons/filesave.png,\n+       src/qt/res/icons/history.png,\n+       src/qt/res/icons/info.png,\n+       src/qt/res/icons/key.png,\n+       src/qt/res/icons/lock_*.png,\n+       src/qt/res/icons/open.png,\n+       src/qt/res/icons/overview.png,\n+       src/qt/res/icons/quit.png,\n+       src/qt/res/icons/receive.png,\n+       src/qt/res/icons/remove.png,\n+       src/qt/res/icons/send.png,\n+       src/qt/res/icons/synced.png,\n+       src/qt/res/icons/transaction*.png,\n+       src/qt/res/icons/tx_output.png,\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n+License: MIT/Expat\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n-Copyright: schollidesign\n-License: GPL-3+\n-Comment: Icon Pack: Human-O2\n-         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Files: src/qt/res/icons/transaction*.png\n-Copyright: md2k7\n-License: Expat\n-Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n+Copyright: Marco Falke\n+License: MIT/Expat\n+Comment: Inspired by Stephan Hutchings Typicons\n \n-Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png\n-Copyright: http://www.everaldo.com\n-License: LGPL\n-Comment: Icon Pack: Crystal SVG\n+Files: src/qt/res/icons/tx_mined.png\n+Copyright: Jonas Schnelli\n+License: MIT/Expat\n+Comment:\n \n-Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n-Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/verify.png\n+       src/qt/res/icons/tx_in*.png\n+Copyright: Stephan Hutching, Jonas Schnelli\n+License: MIT/Expat\n+Comment: Modifications of Stephan Hutchings Typicons\n+\n+Files: src/qt/res/icons/bitcoin.*\n+       src/qt/res/icons/about.png\n+       share/pixmaps/bitcoin*\n+Copyright: Bitboy, Jonas Schnelli\n License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/*.png\n-Copyright: Everaldo (Everaldo Coelho)\n-License: GPL-3+\n-Comment: Icon Pack: Kids\n-         Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Files: src/qt/res/images/splash2.jpg\n-License: PUB-DOM\n-Copyright: Crobbo (forum)\n-Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n \n-\n-License: Expat\n+License: MIT/Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n@@ -98,20 +94,6 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: ISC\n- Permission to use, copy, modify, and distribute this software for any\n- purpose with or without fee is hereby granted, provided that the above\n- copyright notice and this permission notice appear in all copies.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n- WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n- WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n- BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n- OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n- WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n- ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n- SOFTWARE.\n-\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the\n@@ -140,22 +122,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: LGPL\n- This program is free software: you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation, either version 3 of the License, or\n- (at your option) any later version.\n- .\n- This program is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-Comment:\n- On Debian systems the GNU Lesser General Public License (LGPL) is\n- located in '/usr/share/common-licenses/LGPL'.\n- .\n- You should have received a copy of the GNU General Public License\n- along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n License: PUB-DOM\n  This work is in the public domain."
      }
    ]
  },
  {
    "sha": "6f55cddf6be111d860f23f91e2bda7d88734a7c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjU1Y2RkZjZiZTExMWQ4NjBmMjNmOTFlMmJkYTdkODg3MzRhN2M1",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-15T16:30:32Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-15T16:30:32Z"
      },
      "message": "Merge pull request #5665",
      "tree": {
        "sha": "a2f20bee75806edd21ff112eb95be7f3cc8adfe9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2f20bee75806edd21ff112eb95be7f3cc8adfe9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f55cddf6be111d860f23f91e2bda7d88734a7c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVfhHtiWzCDIBeCsvAQLXmg//XoKpKYw5uAEAHUC8fULxVR2eL4lAoihK\n8WkRCsem6YzDJq72EzUekh8rb16XY/TFLyslwvA1W85Qron1IU/ITI/OAkqRs3HH\nbEl6tO2nVEbV3gtFCEwUEVz92cJ27S0hdTO0aE5oS2wbK6NvqvYilcxadK9qrQNA\n8OmyBG6IpQqENHn1+/JFRkBGiylyhCVV825CG8Lokm17I8potFO84mKgyYyPMTvw\ntOKxBB4ONbx2BAb3N98xueY5zp4zUXMZeFzDxLPAU5PB50fgF4h3prp8CQuHY4YG\nDsScN1AZrKGwv85rCDnNbpXIWzzjoLvAH+Bx4wYX9esuBcMZRrmQny6XTLBw5kNn\nsEsFTJ7Q0TbdV/P0DHeRrAzFYobOQyFjEIxSNQ5cU+Km6embhr4M2UOXJaM5j4ah\nqvd0CY1ExP4DKS3oEbbaT39SViK++QnqRVPIrIw6DyzBzefi16Qn1ybNZhpyPm3L\nNh3qab5Pmeqxo3smleD96/XhnX/x4uf+beMzLN9pyR/+XeuTbFFFSbl+45iTAvdS\nmWV9x9GfEOO4LH3IjdP7hHlXb980q6/u828ARB5zoYz+62RI8oWNwOiOJEnRPZKF\nmUGTaPlE8FxqmgDjm2jwKzB41fmxNzxQDhkl8hOFPD4Z3dWE+lv6UP/0vRRgjs4z\nwDLlvRDU5Fw=\n=S8c3\n-----END PGP SIGNATURE-----",
        "payload": "tree a2f20bee75806edd21ff112eb95be7f3cc8adfe9\nparent 3224936bedd8fe777b23d43c253abd2c0cd95d22\nparent be942def4baac40b1031ba26491a24a55e1a6a6c\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442334632 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442334632 -0400\n\nMerge pull request #5665\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f55cddf6be111d860f23f91e2bda7d88734a7c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f55cddf6be111d860f23f91e2bda7d88734a7c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f55cddf6be111d860f23f91e2bda7d88734a7c5/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      },
      {
        "sha": "be942def4baac40b1031ba26491a24a55e1a6a6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be942def4baac40b1031ba26491a24a55e1a6a6c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be942def4baac40b1031ba26491a24a55e1a6a6c"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 25,
      "deletions": 18
    },
    "files": [
      {
        "sha": "31a6d65a8dc498e3030c22b792bda2c798cf0cbe",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 14,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f55cddf6be111d860f23f91e2bda7d88734a7c5/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f55cddf6be111d860f23f91e2bda7d88734a7c5/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=6f55cddf6be111d860f23f91e2bda7d88734a7c5",
        "patch": "@@ -509,12 +509,7 @@ bool PaymentServer::readPaymentRequestFromFile(const QString& filename, PaymentR\n     }\n \n     // BIP70 DoS protection\n-    if (f.size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n-        qWarning() << QString(\"PaymentServer::%1: Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n-            .arg(__func__)\n-            .arg(filename)\n-            .arg(f.size())\n-            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+    if (!verifySize(f.size())) {\n         return false;\n     }\n \n@@ -685,14 +680,13 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n     reply->deleteLater();\n \n     // BIP70 DoS protection\n-    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n-        QString msg = tr(\"Payment request %1 is too large (%2 bytes, allowed %3 bytes).\")\n-            .arg(reply->request().url().toString())\n-            .arg(reply->size())\n-            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n-\n-        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;\n-        Q_EMIT message(tr(\"Payment request DoS protection\"), msg, CClientUIInterface::MSG_ERROR);\n+    if (!verifySize(reply->size())) {\n+        Q_EMIT message(tr(\"Payment request rejected\"),\n+            tr(\"Payment request %1 is too large (%2 bytes, allowed %3 bytes).\")\n+                .arg(reply->request().url().toString())\n+                .arg(reply->size())\n+                .arg(BIP70_MAX_PAYMENTREQUEST_SIZE),\n+            CClientUIInterface::MSG_ERROR);\n         return;\n     }\n \n@@ -790,6 +784,18 @@ bool PaymentServer::verifyExpired(const payments::PaymentDetails& requestDetails\n     return fVerified;\n }\n \n+bool PaymentServer::verifySize(qint64 requestSize)\n+{\n+    bool fVerified = (requestSize <= BIP70_MAX_PAYMENTREQUEST_SIZE);\n+    if (!fVerified) {\n+        qWarning() << QString(\"PaymentServer::%1: Payment request too large (%2 bytes, allowed %3 bytes).\")\n+            .arg(__func__)\n+            .arg(requestSize)\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+    }\n+    return fVerified;\n+}\n+\n bool PaymentServer::verifyAmount(const CAmount& requestAmount)\n {\n     bool fVerified = MoneyRange(requestAmount);"
      },
      {
        "sha": "fa120a435c15ddefa079349af2c8c5b0f94f3137",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f55cddf6be111d860f23f91e2bda7d88734a7c5/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f55cddf6be111d860f23f91e2bda7d88734a7c5/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=6f55cddf6be111d860f23f91e2bda7d88734a7c5",
        "patch": "@@ -88,13 +88,12 @@ class PaymentServer : public QObject\n     // OptionsModel is used for getting proxy settings and display unit\n     void setOptionsModel(OptionsModel *optionsModel);\n \n-    // This is now public, because we use it in paymentservertests.cpp\n-    static bool readPaymentRequestFromFile(const QString& filename, PaymentRequestPlus& request);\n-\n     // Verify that the payment request network matches the client network\n     static bool verifyNetwork(const payments::PaymentDetails& requestDetails);\n     // Verify if the payment request is expired\n     static bool verifyExpired(const payments::PaymentDetails& requestDetails);\n+    // Verify the payment request size is valid as per BIP70\n+    static bool verifySize(qint64 requestSize);\n     // Verify the payment request amount is valid\n     static bool verifyAmount(const CAmount& requestAmount);\n \n@@ -131,6 +130,7 @@ private Q_SLOTS:\n     bool eventFilter(QObject *object, QEvent *event);\n \n private:\n+    static bool readPaymentRequestFromFile(const QString& filename, PaymentRequestPlus& request);\n     bool processPaymentRequest(const PaymentRequestPlus& request, SendCoinsRecipient& recipient);\n     void fetchRequest(const QUrl& url);\n "
      },
      {
        "sha": "fa5696325d7a2fe92a30c38618ef46ab84176700",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f55cddf6be111d860f23f91e2bda7d88734a7c5/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f55cddf6be111d860f23f91e2bda7d88734a7c5/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=6f55cddf6be111d860f23f91e2bda7d88734a7c5",
        "patch": "@@ -185,7 +185,8 @@ void PaymentServerTests::paymentServerTests()\n     tempFile.open();\n     tempFile.write((const char*)randData, sizeof(randData));\n     tempFile.close();\n-    QCOMPARE(PaymentServer::readPaymentRequestFromFile(tempFile.fileName(), r.paymentRequest), false);\n+    // compares 50001 <= BIP70_MAX_PAYMENTREQUEST_SIZE == false\n+    QCOMPARE(PaymentServer::verifySize(tempFile.size()), false);\n \n     // Payment request with amount overflow (amount is set to 21000001 BTC):\n     data = DecodeBase64(paymentrequest5_cert2_BASE64);"
      }
    ]
  },
  {
    "sha": "9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzMzYmM5OWEwYjk2NzUyMmZmNDdlMDBmNGQ4ZTQwOGU2ZWU1YzRm",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-15T23:29:14Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-15T23:29:14Z"
      },
      "message": "Merge pull request #6663",
      "tree": {
        "sha": "3959e3069c158aeabfa31105eec888889a7d59b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3959e3069c158aeabfa31105eec888889a7d59b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVfip1SWzCDIBeCsvAQJwtRAAlFa4FDFEh8u0qApnzcQrEUZrCgVAMpWM\nXebDrjc17sO6CgKbVmtCfJuqfAHbjXwRvGmHIzKJuvtjJqc9sD7YkJoFkt09YXIm\nBBHm9RZutWj4/5ixDsJZFg8OEaR6R3pOtXonlayhPLvkvHJmCNKNrS/KmssqmBMA\nkGvzdLhlsW5iIRe2QKrwI91DPxClzWGPMXHhDmoTlV87Lo3LU4lMahrpZWxNem4Q\nfqE2Q9l+83jM5IosROKrDHX9LJBq8RZmR6doKNbO/71cvYCRyZSvXeSEQHNkTDq1\niWSzWVylJXUYgnMc+WFt99nfSXN+/Jmcy7d+mdx06ReXqbDr/7f9meZ3Zj9sMWaU\nK7iAtPhw/nsIS0nkTwS0X0lAana9NtQ1OCaLV4aoRGJ5r9gBVEwdqHUquHB9R+fC\nnqdGCq9Z6AdLhMzxRgnvruN4pZqUG6JGPg51UCxgCsJ4LUoLFBDgjZgFkXqDKmff\nh9okb4vjEqqnjxEcYMFR+LxSoMXIrSocOyTrKxX/JmrVCuNODWnljLaKz+ytdBvR\nZosAIaj/8y1QHbGu0wZfaztrC/PVmOFD50DrIwCngeySxwY2ZoS2afKMlLgjrLSL\ncL0VjTb7qCUPpAx71BHKk6fp3I8oRSG1qrjeqCaT0HaYDkE/60MJ8L3mZQiYemwN\ncoOLToo+Cgc=\n=YiSg\n-----END PGP SIGNATURE-----",
        "payload": "tree 3959e3069c158aeabfa31105eec888889a7d59b5\nparent 6f55cddf6be111d860f23f91e2bda7d88734a7c5\nparent 5d7a16d073bfc37f429b71c411f5bdcce8bfe79b\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442359754 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442359754 -0400\n\nMerge pull request #6663\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6f55cddf6be111d860f23f91e2bda7d88734a7c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f55cddf6be111d860f23f91e2bda7d88734a7c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f55cddf6be111d860f23f91e2bda7d88734a7c5"
      },
      {
        "sha": "5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d7a16d073bfc37f429b71c411f5bdcce8bfe79b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "201fe9522b9effa11ed34ced0220dfda3eccd140",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
        "patch": "@@ -70,7 +70,7 @@ Download Qt Creator from http://www.qt.io/download/. Download the \"community edi\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n 8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n-9. Select LLDB as debugger (you might need to set the path to your installtion)\n+9. Select LLDB as debugger (you might need to set the path to your installation)\n 10. Start debugging with Qt Creator\n \n Creating a release build"
      }
    ]
  },
  {
    "sha": "5624e055b310284e8dfd68833eea7f7246316354",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjI0ZTA1NWIzMTAyODRlOGRmZDY4ODMzZWVhN2Y3MjQ2MzE2MzU0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-05-07T14:49:00Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-09-16T09:59:32Z"
      },
      "message": "Add UpdatedBlockTip signal to CMainSignals and CValidationInterface",
      "tree": {
        "sha": "9cae42ce1aaac7a71583db94134db33f80906d66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cae42ce1aaac7a71583db94134db33f80906d66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5624e055b310284e8dfd68833eea7f7246316354",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5624e055b310284e8dfd68833eea7f7246316354",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5624e055b310284e8dfd68833eea7f7246316354",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5624e055b310284e8dfd68833eea7f7246316354/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "27278b977aa529b602d91e579f3a7a10d352e474",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5624e055b310284e8dfd68833eea7f7246316354/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5624e055b310284e8dfd68833eea7f7246316354/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5624e055b310284e8dfd68833eea7f7246316354",
        "patch": "@@ -2303,6 +2303,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n                         pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n             }\n             // Notify external listeners about the new tip.\n+            GetMainSignals().UpdatedBlockTip(hashNewTip);\n             uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());"
      },
      {
        "sha": "bdb7069071aec150e9eeb4e824bead4a5894b280",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5624e055b310284e8dfd68833eea7f7246316354/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5624e055b310284e8dfd68833eea7f7246316354/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=5624e055b310284e8dfd68833eea7f7246316354",
        "patch": "@@ -13,6 +13,7 @@ CMainSignals& GetMainSignals()\n }\n \n void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.UpdatedBlockTip.connect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, _1));\n     g_signals.SyncTransaction.connect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n     g_signals.UpdatedTransaction.connect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n@@ -32,6 +33,7 @@ void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.UpdatedTransaction.disconnect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SyncTransaction.disconnect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n+    g_signals.UpdatedBlockTip.disconnect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, _1));\n }\n \n void UnregisterAllValidationInterfaces() {\n@@ -43,6 +45,8 @@ void UnregisterAllValidationInterfaces() {\n     g_signals.SetBestChain.disconnect_all_slots();\n     g_signals.UpdatedTransaction.disconnect_all_slots();\n     g_signals.SyncTransaction.disconnect_all_slots();\n+    g_signals.UpdatedTransaction.disconnect_all_slots();\n+    g_signals.UpdatedBlockTip.disconnect_all_slots();\n }\n \n void SyncWithWallets(const CTransaction &tx, const CBlock *pblock) {"
      },
      {
        "sha": "6f95ad74eb30800541acaba5aae6db891e7d7c81",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5624e055b310284e8dfd68833eea7f7246316354/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5624e055b310284e8dfd68833eea7f7246316354/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=5624e055b310284e8dfd68833eea7f7246316354",
        "patch": "@@ -30,6 +30,7 @@ void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n \n class CValidationInterface {\n protected:\n+    virtual void UpdatedBlockTip(const uint256 &newHashTip) {}\n     virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void UpdatedTransaction(const uint256 &hash) {}\n@@ -44,6 +45,8 @@ class CValidationInterface {\n };\n \n struct CMainSignals {\n+    /** Notifies listeners of updated block chain tip */\n+    boost::signals2::signal<void (const uint256 &)> UpdatedBlockTip;\n     /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n     boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n     /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */"
      }
    ]
  },
  {
    "sha": "1136879df8af2358efb706c5af886778fbd94989",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTM2ODc5ZGY4YWYyMzU4ZWZiNzA2YzVhZjg4Njc3OGZiZDk0OTg5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-05-06T00:30:20Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-09-16T09:59:32Z"
      },
      "message": "Depends: Add ZeroMQ package",
      "tree": {
        "sha": "a4082a5dbd33bc7373055989902ada818172a038",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4082a5dbd33bc7373055989902ada818172a038"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1136879df8af2358efb706c5af886778fbd94989",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1136879df8af2358efb706c5af886778fbd94989",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1136879df8af2358efb706c5af886778fbd94989",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1136879df8af2358efb706c5af886778fbd94989/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5624e055b310284e8dfd68833eea7f7246316354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5624e055b310284e8dfd68833eea7f7246316354",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5624e055b310284e8dfd68833eea7f7246316354"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fc1e5f0b684a988a76562fa8beece8e2ccdcf8ff",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1136879df8af2358efb706c5af886778fbd94989/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1136879df8af2358efb706c5af886778fbd94989/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=1136879df8af2358efb706c5af886778fbd94989",
        "patch": "@@ -1,4 +1,6 @@\n packages:=boost openssl libevent\n+packages_darwin:=zeromq\n+packages_linux:=zeromq\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf"
      },
      {
        "sha": "24e8e5f1c910aa33271436a20e2f00bb8097dad7",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1136879df8af2358efb706c5af886778fbd94989/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1136879df8af2358efb706c5af886778fbd94989/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=1136879df8af2358efb706c5af886778fbd94989",
        "patch": "@@ -0,0 +1,26 @@\n+package=zeromq\n+$(package)_version=4.0.4\n+$(package)_download_path=http://download.zeromq.org\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=1ef71d46e94f33e27dd5a1661ed626cd39be4d2d6967792a275040e34457d399\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-documentation --disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf bin share\n+endef"
      },
      {
        "sha": "c6181c48ca836d3c93d696bb4a89d9610983ef65",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1136879df8af2358efb706c5af886778fbd94989/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1136879df8af2358efb706c5af886778fbd94989/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=1136879df8af2358efb706c5af886778fbd94989",
        "patch": "@@ -59,6 +59,10 @@ testScriptsExt=(\n     'p2p-acceptblock.py'\n );\n \n+if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n+  testScripts=( ${testScripts[@]} 'zmq_test.py' )\n+fi\n+\n extArg=\"-extended\"\n passOn=${@#$extArg}\n "
      },
      {
        "sha": "e881a95110487649cdac258ea7e6fe6fdce457d8",
        "filename": "qa/pull-tester/tests-config.sh.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1136879df8af2358efb706c5af886778fbd94989/qa/pull-tester/tests-config.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1136879df8af2358efb706c5af886778fbd94989/qa/pull-tester/tests-config.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests-config.sh.in?ref=1136879df8af2358efb706c5af886778fbd94989",
        "patch": "@@ -10,6 +10,7 @@ EXEEXT=\"@EXEEXT@\"\n @ENABLE_WALLET_TRUE@ENABLE_WALLET=1\n @BUILD_BITCOIN_UTILS_TRUE@ENABLE_UTILS=1\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n+@ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1\n \n REAL_BITCOIND=\"$BUILDDIR/src/bitcoind${EXEEXT}\"\n REAL_BITCOINCLI=\"$BUILDDIR/src/bitcoin-cli${EXEEXT}\""
      }
    ]
  },
  {
    "sha": "e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmExNGI2NGQ2NjVlYjFmYWZkMDNhNmJiYzhkMTQ1OTdjZTFjODNj",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-11-18T17:06:32Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-09-16T10:01:35Z"
      },
      "message": "Add ZeroMQ support. Notify blocks and transactions via ZeroMQ\n\nContinues Johnathan Corgan's work.\nPublishing multipart messages\n\nBugfix: Add missing zmq header includes\n\nBugfix: Adjust build system to link ZeroMQ code for Qt binaries",
      "tree": {
        "sha": "bfefc581188fb56413c6d29cde625b0395faebc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfefc581188fb56413c6d29cde625b0395faebc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/comments",
    "author": null,
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1136879df8af2358efb706c5af886778fbd94989",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1136879df8af2358efb706c5af886778fbd94989",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1136879df8af2358efb706c5af886778fbd94989"
      }
    ],
    "stats": {
      "total": 721,
      "additions": 717,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9955ab9bf786c69befce67a5243374888ebe9d8b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -137,6 +137,12 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([zmq],\n+  [AC_HELP_STRING([--disable-zmq],\n+  [Disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n # Enable debug \n@@ -833,6 +839,22 @@ if test x$bitcoin_enable_qt != xno; then\n   fi\n fi\n \n+# conditional search for and use libzmq\n+AC_MSG_CHECKING([whether to build ZMQ support])\n+if test \"x$use_zmq\" = \"xyes\"; then\n+  AC_MSG_RESULT([yes])\n+  PKG_CHECK_MODULES([ZMQ],[libzmq],\n+    [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+    [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+     AC_MSG_WARN([libzmq not found, disabling])\n+     use_zmq=no])\n+else\n+  AC_MSG_RESULT([no, --disable-zmq used])\n+  AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+fi\n+\n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n AC_MSG_CHECKING([whether to build test_bitcoin])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])"
      },
      {
        "sha": "decf29d42a4c11b8c6f60a32829e9e040d4b6aa0",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,37 @@\n+#!/usr/bin/env python2\n+\n+import array\n+import binascii\n+import zmq\n+\n+port = 28332\n+\n+zmqContext = zmq.Context()\n+zmqSubSocket = zmqContext.socket(zmq.SUB)\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n+zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+try:\n+    while True:\n+        msg = zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+\n+        if topic == \"hashblock\":\n+            print \"- HASH BLOCK -\"\n+            print binascii.hexlify(body)\n+        elif topic == \"hashtx\":\n+            print '- HASH TX -'\n+            print binascii.hexlify(body)\n+        elif topic == \"rawblock\":\n+            print \"- RAW BLOCK HEADER -\"\n+            print binascii.hexlify(body[:80])\n+        elif topic == \"rawtx\":\n+            print '- RAW TX -'\n+            print binascii.hexlify(body)\n+\n+except KeyboardInterrupt:\n+    zmqContext.destroy()"
      },
      {
        "sha": "fd04f6d9f0c95f0f7d58953f7d016039188de790",
        "filename": "doc/zmq.md",
        "status": "added",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,98 @@\n+# Block and Transaction Broadcasting With ZeroMQ\n+\n+[ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n+connections, inter-process communications, and shared-memory,\n+providing various message-oriented semantics such as publish/subcribe,\n+request/reply, and push/pull.\n+\n+The Bitcoin Core daemon can be configured to act as a trusted \"border\n+router\", implementing the bitcoin wire protocol and relay, making\n+consensus decisions, maintaining the local blockchain database,\n+broadcasting locally generated transactions into the network, and\n+providing a queryable RPC interface to interact on a polled basis for\n+requesting blockchain related data. However, there exists only a\n+limited service to notify external software of events like the arrival\n+of new blocks or transactions.\n+\n+The ZeroMQ facility implements a notification interface through a\n+set of specific notifiers. Currently there are notifiers that publish\n+blocks and transactions. This read-only facility requires only the\n+connection of a corresponding ZeroMQ subscriber port in receiving \n+software; it is not authenticated nor is there any two-way protocol\n+involvement. Therefore, subscribers should validate the received data\n+since it may be out of date, incomplete or even invalid.\n+\n+ZeroMQ sockets are self-connecting and self-healing; that is, connects\n+made between two endpoints will be automatically restored after an\n+outage, and either end may be freely started or stopped in any order.\n+\n+Because ZeroMQ is message oriented, subscribers receive transactions\n+and blocks all-at-once and do not need to implement any sort of\n+buffering or reassembly.\n+\n+## Prerequisites\n+\n+The ZeroMQ feature in Bitcoin Core uses only a very small part of the\n+ZeroMQ C API, and is thus compatible with any version of ZeroMQ\n+from 2.1 onward, including all versions in the 3.x and 4.x release\n+series. Typically, it is packaged by distributions as something like\n+*libzmq-dev*.\n+\n+The C++ wrapper for ZeroMQ is *not* needed.\n+\n+## Enabling\n+\n+By default, the ZeroMQ port functionality is enabled. Two steps are\n+required to enable--compiling in the ZeroMQ code, and configuring\n+runtime operation on the command-line or configuration file.\n+\n+    $ ./configure --enable-zmq (other options)\n+\n+This will produce a binary that is capable of providing the ZeroMQ\n+facility, but will not do so until also configured properly.\n+\n+## Usage\n+\n+Currently, the following notifications are supported:\n+\n+    -zmqpubhashtx=address\n+    -zmqpubhashblock=address\n+    -zmqpubrawblock=address\n+    -zmqpubrawtx=address\n+\n+The socket type is PUB and the address must be a valid ZeroMQ\n+socket address. The same address can be used in more than one notification.\n+\n+For instance:\n+\n+    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+\n+Each PUB notification has a topic and body, where the header\n+corresponds to the notification type. For instance, for the notification\n+`-zmqpubhashtx` the topic is `hashtx` (no null terminator) and the body is the\n+hexadecimal transaction hash (32 bytes).\n+\n+These options can also be provided in bitcoin.conf.\n+\n+ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n+[ZeroMQ API](http://api.zeromq.org).\n+\n+Client side, then, the ZeroMQ subscriber socket must have the\n+ZMQ_SUBSCRIBE option set to one or either of these prefixes (for instance, just `hash`); without\n+doing so will result in no messages arriving. Please see `contrib/zmq/zmq_sub.py`\n+for a working example.\n+\n+## Remarks\n+\n+From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+sockets don't even have a read function. Thus, there is no state\n+introduced into bitcoind directly. Furthermore, no information is\n+broadcast that wasn't already received from the public P2P network.\n+\n+No authentication or authorization is done on connecting clients; it\n+is assumed that the ZeroMQ port is exposed only to trusted entities,\n+using other means such as firewalling.\n+\n+Note that when the block chain tip changes, a reorganisation may occur and just\n+the tip will be notified. It is up to the subscriber to retrieve the chain\n+from the last known block to the new tip."
      },
      {
        "sha": "67e848be39d4bb1bd4400fd61ddcfdf4aa39a61d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -48,6 +48,9 @@ if ENABLE_WALLET\n BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n EXTRA_LIBRARIES += libbitcoin_wallet.a\n endif\n+if ENABLE_ZMQ\n+EXTRA_LIBRARIES += libbitcoin_zmq.a\n+endif\n \n if BUILD_BITCOIN_LIBS\n lib_LTLIBRARIES = libbitcoinconsensus.la\n@@ -157,7 +160,12 @@ BITCOIN_CORE_H = \\\n   wallet/db.h \\\n   wallet/wallet.h \\\n   wallet/wallet_ismine.h \\\n-  wallet/walletdb.h\n+  wallet/walletdb.h \\\n+  zmq/zmqabstractnotifier.h \\\n+  zmq/zmqconfig.h\\\n+  zmq/zmqnotificationinterface.h \\\n+  zmq/zmqpublishnotifier.h\n+\n \n obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n@@ -199,6 +207,17 @@ libbitcoin_server_a_SOURCES = \\\n   validationinterface.cpp \\\n   $(BITCOIN_CORE_H)\n \n+if ENABLE_ZMQ\n+LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n+\n+libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_zmq_a_SOURCES = \\\n+  zmq/zmqabstractnotifier.cpp \\\n+  zmq/zmqnotificationinterface.cpp \\\n+  zmq/zmqpublishnotifier.cpp\n+endif\n+\n+\n # wallet: shared between bitcoind and bitcoin-qt, but only linked\n # when wallet enabled\n libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n@@ -320,12 +339,15 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n+if ENABLE_ZMQ\n+bitcoind_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n+\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n \n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-#\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp"
      },
      {
        "sha": "3e8eda17824c73bc9534377087f5a4c10e18844a",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -361,6 +361,9 @@ qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n+if ENABLE_ZMQ\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)"
      },
      {
        "sha": "6554580beab44a07ac719c21a8bee63e88fc43f4",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -30,6 +30,9 @@ qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n+if ENABLE_ZMQ\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\"
      },
      {
        "sha": "cee35926a5d752c8217eaf6156b74390f656a6e7",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -100,6 +100,10 @@ endif\n test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n+if ENABLE_ZMQ\n+test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+endif\n+\n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n \n $(BITCOIN_TESTS): $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "f03388120cdc6bc3f74bfdeb34e0f5d2c9f1082a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -38,7 +38,6 @@\n #include \"wallet/wallet.h\"\n #include \"wallet/walletdb.h\"\n #endif\n-\n #include <stdint.h>\n #include <stdio.h>\n \n@@ -55,13 +54,21 @@\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n \n+#if ENABLE_ZMQ\n+#include \"zmq/zmqnotificationinterface.h\"\n+#endif\n+\n using namespace std;\n \n #ifdef ENABLE_WALLET\n CWallet* pwalletMain = NULL;\n #endif\n bool fFeeEstimatesInitialized = false;\n \n+#if ENABLE_ZMQ\n+static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n+#endif\n+\n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n // accessing block files don't count towards the fd_set size limit\n@@ -211,6 +218,16 @@ void Shutdown()\n     if (pwalletMain)\n         pwalletMain->Flush(true);\n #endif\n+\n+#if ENABLE_ZMQ\n+    if (pzmqNotificationInterface) {\n+        UnregisterValidationInterface(pzmqNotificationInterface);\n+        pzmqNotificationInterface->Shutdown();\n+        delete pzmqNotificationInterface;\n+        pzmqNotificationInterface = NULL;\n+    }\n+#endif\n+\n #ifndef WIN32\n     try {\n         boost::filesystem::remove(GetPidFile());\n@@ -375,6 +392,14 @@ std::string HelpMessage(HelpMessageMode mode)\n         \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n #endif\n \n+#if ENABLE_ZMQ\n+    strUsage += HelpMessageGroup(_(\"ZeroMQ notification options:\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubhashblock=<address>\", _(\"Enable publish hash block in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubhashtransaction=<address>\", _(\"Enable publish hash transaction in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubrawblock=<address>\", _(\"Enable publish raw block in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubrawtransaction=<address>\", _(\"Enable publish raw transaction in <address>\"));\n+#endif\n+\n     strUsage += HelpMessageGroup(_(\"Debugging/Testing options:\"));\n     if (showDebug)\n     {\n@@ -1125,6 +1150,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     BOOST_FOREACH(const std::string& strDest, mapMultiArgs[\"-seednode\"])\n         AddOneShot(strDest);\n \n+#if ENABLE_ZMQ\n+    pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs);\n+\n+    if (pzmqNotificationInterface) {\n+        pzmqNotificationInterface->Initialize();\n+        RegisterValidationInterface(pzmqNotificationInterface);\n+    }\n+#endif\n+\n     // ********************************************************* Step 7: load block chain\n \n     fReindex = GetBoolArg(\"-reindex\", false);"
      },
      {
        "sha": "81f3b775f48a541fa5eda7963ba3272f34043e93",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -45,7 +45,6 @@ void UnregisterAllValidationInterfaces() {\n     g_signals.SetBestChain.disconnect_all_slots();\n     g_signals.UpdatedTransaction.disconnect_all_slots();\n     g_signals.SyncTransaction.disconnect_all_slots();\n-    g_signals.UpdatedTransaction.disconnect_all_slots();\n     g_signals.UpdatedBlockTip.disconnect_all_slots();\n }\n "
      },
      {
        "sha": "744ec59234d56cbe0ce2bc836135baa0edc9dfa5",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqabstractnotifier.h\"\n+#include \"util.h\"\n+\n+\n+CZMQAbstractNotifier::~CZMQAbstractNotifier()\n+{\n+    assert(!psocket);\n+}\n+\n+bool CZMQAbstractNotifier::NotifyBlock(const uint256 &/*hash*/)\n+{\n+    return true;\n+}\n+\n+bool CZMQAbstractNotifier::NotifyTransaction(const CTransaction &/*transaction*/)\n+{\n+    return true;\n+}"
      },
      {
        "sha": "626d1ddf926c17d6f1c595353115a0366c377e95",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H\n+#define BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H\n+\n+#include \"zmqconfig.h\"\n+\n+class CZMQAbstractNotifier;\n+typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n+\n+class CZMQAbstractNotifier\n+{\n+public:\n+    CZMQAbstractNotifier() : psocket(0) { }\n+    virtual ~CZMQAbstractNotifier();\n+\n+    template <typename T>\n+    static CZMQAbstractNotifier* Create()\n+    {\n+        return new T();\n+    }\n+\n+    std::string GetType() const { return type; }\n+    void SetType(const std::string &t) { type = t; }\n+    std::string GetAddress() const { return address; }\n+    void SetAddress(const std::string &a) { address = a; }\n+\n+    virtual bool Initialize(void *pcontext) = 0;\n+    virtual void Shutdown() = 0;\n+\n+    virtual bool NotifyBlock(const uint256 &hash);\n+    virtual bool NotifyTransaction(const CTransaction &transaction);\n+\n+protected:\n+    void *psocket;\n+    std::string type;\n+    std::string address;\n+};\n+\n+#endif // BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H"
      },
      {
        "sha": "6057f5d1a0e928e7a24c15917513cfb5bcb7c178",
        "filename": "src/zmq/zmqconfig.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqconfig.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqconfig.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqconfig.h?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQCONFIG_H\n+#define BITCOIN_ZMQ_ZMQCONFIG_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include <stdarg.h>\n+#include <string>\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+\n+void zmqError(const char *str);\n+\n+#endif // BITCOIN_ZMQ_ZMQCONFIG_H"
      },
      {
        "sha": "71ccb59a4a729aa9655e3d6caec810d3e2d8badc",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqnotificationinterface.h\"\n+#include \"zmqpublishnotifier.h\"\n+\n+#include \"version.h\"\n+#include \"main.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+\n+void zmqError(const char *str)\n+{\n+    LogPrint(\"zmq\", \"Error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+CZMQNotificationInterface::CZMQNotificationInterface() : pcontext(NULL)\n+{\n+}\n+\n+CZMQNotificationInterface::~CZMQNotificationInterface()\n+{\n+    // ensure Shutdown if Initialize is called\n+    assert(!pcontext);\n+\n+    for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n+    {\n+        delete *i;\n+    }\n+}\n+\n+CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const std::map<std::string, std::string> &args)\n+{\n+    CZMQNotificationInterface* notificationInterface = NULL;\n+    std::map<std::string, CZMQNotifierFactory> factories;\n+    std::list<CZMQAbstractNotifier*> notifiers;\n+\n+    factories[\"pubhashblock\"] = CZMQAbstractNotifier::Create<CZMQPublishHashBlockNotifier>;\n+    factories[\"pubhashtx\"] = CZMQAbstractNotifier::Create<CZMQPublishHashTransactionNotifier>;\n+    factories[\"pubrawblock\"] = CZMQAbstractNotifier::Create<CZMQPublishRawBlockNotifier>;\n+    factories[\"pubrawtx\"] = CZMQAbstractNotifier::Create<CZMQPublishRawTransactionNotifier>;\n+\n+    for (std::map<std::string, CZMQNotifierFactory>::const_iterator i=factories.begin(); i!=factories.end(); ++i)\n+    {\n+        std::map<std::string, std::string>::const_iterator j = args.find(\"-zmq\" + i->first);\n+        if (j!=args.end())\n+        {\n+            CZMQNotifierFactory factory = i->second;\n+            std::string address = j->second;\n+            CZMQAbstractNotifier *notifier = factory();\n+            notifier->SetType(i->first);\n+            notifier->SetAddress(address);\n+            notifiers.push_back(notifier);\n+        }\n+    }\n+\n+    if (!notifiers.empty())\n+    {\n+        notificationInterface = new CZMQNotificationInterface();\n+        notificationInterface->notifiers = notifiers;\n+    }\n+\n+    return notificationInterface;\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+bool CZMQNotificationInterface::Initialize()\n+{\n+    LogPrint(\"zmq\", \"Initialize notification interface\\n\");\n+    assert(!pcontext);\n+\n+    pcontext = zmq_init(1);\n+\n+    if (!pcontext)\n+    {\n+        zmqError(\"Unable to initialize context\");\n+        return false;\n+    }\n+\n+    std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin();\n+    for (; i!=notifiers.end(); ++i)\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->Initialize(pcontext))\n+        {\n+            LogPrint(\"zmq\", \"  Notifier %s ready (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n+        }\n+        else\n+        {\n+            LogPrint(\"zmq\", \"  Notifier %s failed (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n+            break;\n+        }\n+    }\n+\n+    if (i!=notifiers.end())\n+    {\n+        Shutdown();\n+        return false;\n+    }\n+\n+    return false;\n+}\n+\n+// Called during shutdown sequence\n+void CZMQNotificationInterface::Shutdown()\n+{\n+    LogPrint(\"zmq\", \"Shutdown notification interface\\n\");\n+    if (pcontext)\n+    {\n+        for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n+        {\n+            CZMQAbstractNotifier *notifier = *i;\n+            LogPrint(\"zmq\", \"   Shutdown notifier %s at %s\\n\", notifier->GetType(), notifier->GetAddress());\n+            notifier->Shutdown();\n+        }\n+        zmq_ctx_destroy(pcontext);\n+\n+        pcontext = 0;\n+    }\n+}\n+\n+void CZMQNotificationInterface::UpdatedBlockTip(const uint256 &hash)\n+{\n+    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->NotifyBlock(hash))\n+        {\n+            i++;\n+        }\n+        else\n+        {\n+            notifier->Shutdown();\n+            i = notifiers.erase(i);\n+        }\n+    }\n+}\n+\n+void CZMQNotificationInterface::SyncTransaction(const CTransaction &tx, const CBlock *pblock)\n+{\n+    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->NotifyTransaction(tx))\n+        {\n+            i++;\n+        }\n+        else\n+        {\n+            notifier->Shutdown();\n+            i = notifiers.erase(i);\n+        }\n+    }\n+}"
      },
      {
        "sha": "afc0b8d24e51466174e14a91eeca853f961108c4",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H\n+#define BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H\n+\n+#include \"validationinterface.h\"\n+#include <string>\n+#include <map>\n+\n+class CZMQAbstractNotifier;\n+\n+class CZMQNotificationInterface : public CValidationInterface\n+{\n+public:\n+    virtual ~CZMQNotificationInterface();\n+\n+    static CZMQNotificationInterface* CreateWithArguments(const std::map<std::string, std::string> &args);\n+\n+    bool Initialize();\n+    void Shutdown();\n+\n+protected: // CValidationInterface\n+    void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n+    void UpdatedBlockTip(const uint256 &newHashTip);\n+\n+private:\n+    CZMQNotificationInterface();\n+\n+    void *pcontext;\n+    std::list<CZMQAbstractNotifier*> notifiers;\n+};\n+\n+#endif // BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H"
      },
      {
        "sha": "0a6d7d0dbc57d94d73888abeea332b10ac94aca0",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,172 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqpublishnotifier.h\"\n+#include \"main.h\"\n+#include \"util.h\"\n+\n+static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;\n+\n+// Internal function to send multipart message\n+static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n+{\n+    va_list args;\n+    va_start(args, size);\n+\n+    while (1)\n+    {\n+        zmq_msg_t msg;\n+\n+        int rc = zmq_msg_init_size(&msg, size);\n+        if (rc != 0)\n+        {\n+            zmqError(\"Unable to initialize ZMQ msg\");\n+            return -1;\n+        }\n+\n+        void *buf = zmq_msg_data(&msg);\n+        memcpy(buf, data, size);\n+\n+        data = va_arg(args, const void*);\n+\n+        rc = zmq_msg_send(&msg, sock, data ? ZMQ_SNDMORE : 0);\n+        if (rc == -1)\n+        {\n+            zmqError(\"Unable to send ZMQ msg\");\n+            zmq_msg_close(&msg);\n+            return -1;\n+        }\n+\n+        zmq_msg_close(&msg);\n+\n+        if (!data)\n+            break;\n+\n+        size = va_arg(args, size_t);\n+    }\n+    return 0;\n+}\n+\n+bool CZMQAbstractPublishNotifier::Initialize(void *pcontext)\n+{\n+    assert(!psocket);\n+\n+    // check if address is being used by other publish notifier\n+    std::multimap<std::string, CZMQAbstractPublishNotifier*>::iterator i = mapPublishNotifiers.find(address);\n+\n+    if (i==mapPublishNotifiers.end())\n+    {\n+        psocket = zmq_socket(pcontext, ZMQ_PUB);\n+        if (!psocket)\n+        {\n+            zmqError(\"Failed to create socket\");\n+            return false;\n+        }\n+\n+        int rc = zmq_bind(psocket, address.c_str());\n+        if (rc!=0)\n+        {\n+            zmqError(\"Failed to bind address\");\n+            return false;\n+        }\n+\n+        // register this notifier for the address, so it can be reused for other publish notifier\n+        mapPublishNotifiers.insert(std::make_pair(address, this));\n+        return true;\n+    }\n+    else\n+    {\n+        LogPrint(\"zmq\", \"  Reuse socket for address %s\\n\", address);\n+\n+        psocket = i->second->psocket;\n+        mapPublishNotifiers.insert(std::make_pair(address, this));\n+\n+        return true;\n+    }\n+}\n+\n+void CZMQAbstractPublishNotifier::Shutdown()\n+{\n+    assert(psocket);\n+\n+    int count = mapPublishNotifiers.count(address);\n+\n+    // remove this notifier from the list of publishers using this address\n+    typedef std::multimap<std::string, CZMQAbstractPublishNotifier*>::iterator iterator;\n+    std::pair<iterator, iterator> iterpair = mapPublishNotifiers.equal_range(address);\n+\n+    for (iterator it = iterpair.first; it != iterpair.second; ++it)\n+    {\n+        if (it->second==this)\n+        {\n+            mapPublishNotifiers.erase(it);\n+            break;\n+        }\n+    }\n+\n+    if (count == 1)\n+    {\n+        LogPrint(\"zmq\", \"Close socket at address %s\\n\", address);\n+        int linger = 0;\n+        zmq_setsockopt(psocket, ZMQ_LINGER, &linger, sizeof(linger));\n+        zmq_close(psocket);\n+    }\n+\n+    psocket = 0;\n+}\n+\n+bool CZMQPublishHashBlockNotifier::NotifyBlock(const uint256 &hash)\n+{\n+    LogPrint(\"zmq\", \"Publish hash block %s\\n\", hash.GetHex());\n+    char data[32];\n+    for (unsigned int i = 0; i < 32; i++)\n+        data[31 - i] = hash.begin()[i];\n+    int rc = zmq_send_multipart(psocket, \"hashblock\", 9, data, 32, 0);\n+    return rc == 0;\n+}\n+\n+bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+{\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(\"zmq\", \"Publish hash transaction %s\\n\", hash.GetHex());\n+    char data[32];\n+    for (unsigned int i = 0; i < 32; i++)\n+        data[31 - i] = hash.begin()[i];\n+    int rc = zmq_send_multipart(psocket, \"hashtx\", 6, data, 32, 0);\n+    return rc == 0;\n+}\n+\n+bool CZMQPublishRawBlockNotifier::NotifyBlock(const uint256 &hash)\n+{\n+    LogPrint(\"zmq\", \"Publish raw block %s\\n\", hash.GetHex());\n+\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    {\n+        LOCK(cs_main);\n+\n+        CBlock block;\n+        CBlockIndex* pblockindex = mapBlockIndex[hash];\n+\n+        if(!ReadBlockFromDisk(block, pblockindex))\n+        {\n+            zmqError(\"Can't read block from disk\");\n+            return false;\n+        }\n+\n+        ss << block;\n+    }\n+\n+    int rc = zmq_send_multipart(psocket, \"rawblock\", 8, &(*ss.begin()), ss.size(), 0);\n+    return rc == 0;\n+}\n+\n+bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+{\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(\"zmq\", \"Publish raw transaction %s\\n\", hash.GetHex());\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << transaction;\n+    int rc = zmq_send_multipart(psocket, \"rawtx\", 5, &(*ss.begin()), ss.size(), 0);\n+    return rc == 0;\n+}"
      },
      {
        "sha": "a0eb26f5e268ad4bbd007e665a48d76e94d419b5",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "patch": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H\n+#define BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H\n+\n+#include \"zmqabstractnotifier.h\"\n+\n+class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n+{\n+public:\n+    bool Initialize(void *pcontext);\n+    void Shutdown();\n+};\n+\n+class CZMQPublishHashBlockNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyBlock(const uint256 &hash);\n+};\n+\n+class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyTransaction(const CTransaction &transaction);\n+};\n+\n+class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyBlock(const uint256 &hash);\n+};\n+\n+class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyTransaction(const CTransaction &transaction);\n+};\n+\n+#endif // BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H"
      }
    ]
  },
  {
    "sha": "029e278286cb861901c9cb8e1b84855ec1640aac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjllMjc4Mjg2Y2I4NjE5MDFjOWNiOGUxYjg0ODU1ZWMxNjQwYWFj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-05-05T11:19:19Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-09-16T10:01:35Z"
      },
      "message": "QA: Add ZeroMQ RPC test",
      "tree": {
        "sha": "1c39d082db96075c308b470852e761086ff8fc65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c39d082db96075c308b470852e761086ff8fc65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/029e278286cb861901c9cb8e1b84855ec1640aac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/029e278286cb861901c9cb8e1b84855ec1640aac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/029e278286cb861901c9cb8e1b84855ec1640aac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/029e278286cb861901c9cb8e1b84855ec1640aac/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6a14b64d665eb1fafd03a6bbc8d14597ce1c83c"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 93,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fffaf677d68ad6a00e78651c3c5a65112e8bb59d",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/029e278286cb861901c9cb8e1b84855ec1640aac/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/029e278286cb861901c9cb8e1b84855ec1640aac/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=029e278286cb861901c9cb8e1b84855ec1640aac",
        "patch": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test ZMQ interface\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import zmq\n+import binascii\n+from test_framework.mininode import hash256\n+\n+try:\n+    import http.client as httplib\n+except ImportError:\n+    import httplib\n+try:\n+    import urllib.parse as urlparse\n+except ImportError:\n+    import urlparse\n+\n+class ZMQTest (BitcoinTestFramework):\n+\n+    port = 28332\n+\n+    def setup_nodes(self):\n+        self.zmqContext = zmq.Context()\n+        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n+        self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n+        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % self.port)\n+        # Note: proxies are not used to connect to local nodes\n+        # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n+        return start_nodes(4, self.options.tmpdir, extra_args=[\n+            ['-zmqpubhashtx=tcp://127.0.0.1:'+str(self.port), '-zmqpubhashblock=tcp://127.0.0.1:'+str(self.port)],\n+            [],\n+            [],\n+            []\n+            ])\n+\n+    def run_test(self):\n+        self.sync_all()\n+\n+        genhashes = self.nodes[0].generate(1);\n+        self.sync_all()\n+\n+        print \"listen...\"\n+        msg = self.zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+\n+        msg = self.zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+        blkhash = binascii.hexlify(body)\n+\n+        assert_equal(genhashes[0], blkhash) #blockhash from generate must be equal to the hash received over zmq\n+\n+        n = 10\n+        genhashes = self.nodes[1].generate(n);\n+        self.sync_all()\n+\n+        zmqHashes = []\n+        for x in range(0,n*2):\n+            msg = self.zmqSubSocket.recv_multipart()\n+            topic = str(msg[0])\n+            body = msg[1]\n+            if topic == \"hashblock\":\n+                zmqHashes.append(binascii.hexlify(body))\n+\n+        for x in range(0,n):\n+            assert_equal(genhashes[x], zmqHashes[x]) #blockhash from generate must be equal to the hash received over zmq\n+\n+        #test tx from a second node\n+        hashRPC = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+        self.sync_all()\n+\n+        #now we should receive a zmq msg because the tx was broadcastet\n+        msg = self.zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+        hashZMQ = \"\"\n+        if topic == \"hashtx\":\n+            hashZMQ = binascii.hexlify(body)\n+\n+        assert_equal(hashRPC, hashZMQ) #blockhash from generate must be equal to the hash received over zmq\n+\n+\n+if __name__ == '__main__':\n+    ZMQTest ().main ()"
      }
    ]
  },
  {
    "sha": "13b828270a6f912aeb24dee87108c6bda83d1b96",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2I4MjgyNzBhNmY5MTJhZWIyNGRlZTg3MTA4YzZiZGE4M2QxYjk2",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-16T13:12:07Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-16T13:12:07Z"
      },
      "message": "Merge pull request #6103",
      "tree": {
        "sha": "1c39d082db96075c308b470852e761086ff8fc65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c39d082db96075c308b470852e761086ff8fc65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13b828270a6f912aeb24dee87108c6bda83d1b96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVflqsiWzCDIBeCsvAQLDZhAA06qnvk6p+ZAW0M/YtfknE761KrYu4IsE\nMjlfPTa61wDjLWQPuAdHFuXWuMQqwugTQRZzqm467F0R/XiZ2IPf8tWTxU9ZZNdj\n91HIe1qbNz3BII5BL9aFb/lADlkNukQ5Sa74JQtat1GvVlwQa1Eu1NfHiNixOZKY\nyRI/19EGM2j+OQjLSWPs4Jw+KtgapO8WktkJGiVfmjAU1Pk1TdOKrL4x+o/QS6oJ\nq79eDxaZY4E2o+jV8vQiMMGQq/Oi5iwLYfhpK1aSMzfykiNMZHJMSsSYCUEhL/As\n6N2AaPajMITuLo1vSIYo8Z5uu9/KMMyblLuXjJRgUyPyfW3XUu0rnaq1/OgkG1Rz\nLxSlTNRRVYjlUjQt0GUky8jawKBqgFjER5yMmlf0av2CgEe0Rqoh5+/jnJqtR/bj\nI1at3KIl248D+kzsZKziLz7TvZHhA0h85zdnAd7YSxzkrSy7e4P+2EMyEKHBYSWH\nEHPOlDb590YVQI2bQP00UUCVaOMBPjab3FBYXhiVsCxKEonRVEChQAQYtn3Fs7Tm\nJN/uI8bx1rvVW1w3NIRPX0J9TtVPZC7LbHzdq1ZnWcxoVZ8a/Vfe3fA1mJIJnS12\n5xlsqWVFVmlotAc6sl/ejZbcW1UmjnSV0N/PQk5Bo7azvLw2Ege3ZEvDrbxavrjd\nWxAwixXTASA=\n=/bkM\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c39d082db96075c308b470852e761086ff8fc65\nparent 9733bc99a0b967522ff47e00f4d8e408e6ee5c4f\nparent 029e278286cb861901c9cb8e1b84855ec1640aac\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442409127 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442409127 -0400\n\nMerge pull request #6103\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13b828270a6f912aeb24dee87108c6bda83d1b96",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13b828270a6f912aeb24dee87108c6bda83d1b96",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13b828270a6f912aeb24dee87108c6bda83d1b96/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9733bc99a0b967522ff47e00f4d8e408e6ee5c4f"
      },
      {
        "sha": "029e278286cb861901c9cb8e1b84855ec1640aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/029e278286cb861901c9cb8e1b84855ec1640aac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/029e278286cb861901c9cb8e1b84855ec1640aac"
      }
    ],
    "stats": {
      "total": 853,
      "additions": 850,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9955ab9bf786c69befce67a5243374888ebe9d8b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -137,6 +137,12 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([zmq],\n+  [AC_HELP_STRING([--disable-zmq],\n+  [Disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n # Enable debug \n@@ -833,6 +839,22 @@ if test x$bitcoin_enable_qt != xno; then\n   fi\n fi\n \n+# conditional search for and use libzmq\n+AC_MSG_CHECKING([whether to build ZMQ support])\n+if test \"x$use_zmq\" = \"xyes\"; then\n+  AC_MSG_RESULT([yes])\n+  PKG_CHECK_MODULES([ZMQ],[libzmq],\n+    [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+    [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+     AC_MSG_WARN([libzmq not found, disabling])\n+     use_zmq=no])\n+else\n+  AC_MSG_RESULT([no, --disable-zmq used])\n+  AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+fi\n+\n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n AC_MSG_CHECKING([whether to build test_bitcoin])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])"
      },
      {
        "sha": "decf29d42a4c11b8c6f60a32829e9e040d4b6aa0",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,37 @@\n+#!/usr/bin/env python2\n+\n+import array\n+import binascii\n+import zmq\n+\n+port = 28332\n+\n+zmqContext = zmq.Context()\n+zmqSubSocket = zmqContext.socket(zmq.SUB)\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n+zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+try:\n+    while True:\n+        msg = zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+\n+        if topic == \"hashblock\":\n+            print \"- HASH BLOCK -\"\n+            print binascii.hexlify(body)\n+        elif topic == \"hashtx\":\n+            print '- HASH TX -'\n+            print binascii.hexlify(body)\n+        elif topic == \"rawblock\":\n+            print \"- RAW BLOCK HEADER -\"\n+            print binascii.hexlify(body[:80])\n+        elif topic == \"rawtx\":\n+            print '- RAW TX -'\n+            print binascii.hexlify(body)\n+\n+except KeyboardInterrupt:\n+    zmqContext.destroy()"
      },
      {
        "sha": "fc1e5f0b684a988a76562fa8beece8e2ccdcf8ff",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -1,4 +1,6 @@\n packages:=boost openssl libevent\n+packages_darwin:=zeromq\n+packages_linux:=zeromq\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf"
      },
      {
        "sha": "24e8e5f1c910aa33271436a20e2f00bb8097dad7",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,26 @@\n+package=zeromq\n+$(package)_version=4.0.4\n+$(package)_download_path=http://download.zeromq.org\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=1ef71d46e94f33e27dd5a1661ed626cd39be4d2d6967792a275040e34457d399\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-documentation --disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf bin share\n+endef"
      },
      {
        "sha": "fd04f6d9f0c95f0f7d58953f7d016039188de790",
        "filename": "doc/zmq.md",
        "status": "added",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,98 @@\n+# Block and Transaction Broadcasting With ZeroMQ\n+\n+[ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n+connections, inter-process communications, and shared-memory,\n+providing various message-oriented semantics such as publish/subcribe,\n+request/reply, and push/pull.\n+\n+The Bitcoin Core daemon can be configured to act as a trusted \"border\n+router\", implementing the bitcoin wire protocol and relay, making\n+consensus decisions, maintaining the local blockchain database,\n+broadcasting locally generated transactions into the network, and\n+providing a queryable RPC interface to interact on a polled basis for\n+requesting blockchain related data. However, there exists only a\n+limited service to notify external software of events like the arrival\n+of new blocks or transactions.\n+\n+The ZeroMQ facility implements a notification interface through a\n+set of specific notifiers. Currently there are notifiers that publish\n+blocks and transactions. This read-only facility requires only the\n+connection of a corresponding ZeroMQ subscriber port in receiving \n+software; it is not authenticated nor is there any two-way protocol\n+involvement. Therefore, subscribers should validate the received data\n+since it may be out of date, incomplete or even invalid.\n+\n+ZeroMQ sockets are self-connecting and self-healing; that is, connects\n+made between two endpoints will be automatically restored after an\n+outage, and either end may be freely started or stopped in any order.\n+\n+Because ZeroMQ is message oriented, subscribers receive transactions\n+and blocks all-at-once and do not need to implement any sort of\n+buffering or reassembly.\n+\n+## Prerequisites\n+\n+The ZeroMQ feature in Bitcoin Core uses only a very small part of the\n+ZeroMQ C API, and is thus compatible with any version of ZeroMQ\n+from 2.1 onward, including all versions in the 3.x and 4.x release\n+series. Typically, it is packaged by distributions as something like\n+*libzmq-dev*.\n+\n+The C++ wrapper for ZeroMQ is *not* needed.\n+\n+## Enabling\n+\n+By default, the ZeroMQ port functionality is enabled. Two steps are\n+required to enable--compiling in the ZeroMQ code, and configuring\n+runtime operation on the command-line or configuration file.\n+\n+    $ ./configure --enable-zmq (other options)\n+\n+This will produce a binary that is capable of providing the ZeroMQ\n+facility, but will not do so until also configured properly.\n+\n+## Usage\n+\n+Currently, the following notifications are supported:\n+\n+    -zmqpubhashtx=address\n+    -zmqpubhashblock=address\n+    -zmqpubrawblock=address\n+    -zmqpubrawtx=address\n+\n+The socket type is PUB and the address must be a valid ZeroMQ\n+socket address. The same address can be used in more than one notification.\n+\n+For instance:\n+\n+    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+\n+Each PUB notification has a topic and body, where the header\n+corresponds to the notification type. For instance, for the notification\n+`-zmqpubhashtx` the topic is `hashtx` (no null terminator) and the body is the\n+hexadecimal transaction hash (32 bytes).\n+\n+These options can also be provided in bitcoin.conf.\n+\n+ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n+[ZeroMQ API](http://api.zeromq.org).\n+\n+Client side, then, the ZeroMQ subscriber socket must have the\n+ZMQ_SUBSCRIBE option set to one or either of these prefixes (for instance, just `hash`); without\n+doing so will result in no messages arriving. Please see `contrib/zmq/zmq_sub.py`\n+for a working example.\n+\n+## Remarks\n+\n+From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+sockets don't even have a read function. Thus, there is no state\n+introduced into bitcoind directly. Furthermore, no information is\n+broadcast that wasn't already received from the public P2P network.\n+\n+No authentication or authorization is done on connecting clients; it\n+is assumed that the ZeroMQ port is exposed only to trusted entities,\n+using other means such as firewalling.\n+\n+Note that when the block chain tip changes, a reorganisation may occur and just\n+the tip will be notified. It is up to the subscriber to retrieve the chain\n+from the last known block to the new tip."
      },
      {
        "sha": "c6181c48ca836d3c93d696bb4a89d9610983ef65",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -59,6 +59,10 @@ testScriptsExt=(\n     'p2p-acceptblock.py'\n );\n \n+if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n+  testScripts=( ${testScripts[@]} 'zmq_test.py' )\n+fi\n+\n extArg=\"-extended\"\n passOn=${@#$extArg}\n "
      },
      {
        "sha": "e881a95110487649cdac258ea7e6fe6fdce457d8",
        "filename": "qa/pull-tester/tests-config.sh.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/qa/pull-tester/tests-config.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/qa/pull-tester/tests-config.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests-config.sh.in?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -10,6 +10,7 @@ EXEEXT=\"@EXEEXT@\"\n @ENABLE_WALLET_TRUE@ENABLE_WALLET=1\n @BUILD_BITCOIN_UTILS_TRUE@ENABLE_UTILS=1\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n+@ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1\n \n REAL_BITCOIND=\"$BUILDDIR/src/bitcoind${EXEEXT}\"\n REAL_BITCOINCLI=\"$BUILDDIR/src/bitcoin-cli${EXEEXT}\""
      },
      {
        "sha": "fffaf677d68ad6a00e78651c3c5a65112e8bb59d",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test ZMQ interface\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import zmq\n+import binascii\n+from test_framework.mininode import hash256\n+\n+try:\n+    import http.client as httplib\n+except ImportError:\n+    import httplib\n+try:\n+    import urllib.parse as urlparse\n+except ImportError:\n+    import urlparse\n+\n+class ZMQTest (BitcoinTestFramework):\n+\n+    port = 28332\n+\n+    def setup_nodes(self):\n+        self.zmqContext = zmq.Context()\n+        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n+        self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n+        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % self.port)\n+        # Note: proxies are not used to connect to local nodes\n+        # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n+        return start_nodes(4, self.options.tmpdir, extra_args=[\n+            ['-zmqpubhashtx=tcp://127.0.0.1:'+str(self.port), '-zmqpubhashblock=tcp://127.0.0.1:'+str(self.port)],\n+            [],\n+            [],\n+            []\n+            ])\n+\n+    def run_test(self):\n+        self.sync_all()\n+\n+        genhashes = self.nodes[0].generate(1);\n+        self.sync_all()\n+\n+        print \"listen...\"\n+        msg = self.zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+\n+        msg = self.zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+        blkhash = binascii.hexlify(body)\n+\n+        assert_equal(genhashes[0], blkhash) #blockhash from generate must be equal to the hash received over zmq\n+\n+        n = 10\n+        genhashes = self.nodes[1].generate(n);\n+        self.sync_all()\n+\n+        zmqHashes = []\n+        for x in range(0,n*2):\n+            msg = self.zmqSubSocket.recv_multipart()\n+            topic = str(msg[0])\n+            body = msg[1]\n+            if topic == \"hashblock\":\n+                zmqHashes.append(binascii.hexlify(body))\n+\n+        for x in range(0,n):\n+            assert_equal(genhashes[x], zmqHashes[x]) #blockhash from generate must be equal to the hash received over zmq\n+\n+        #test tx from a second node\n+        hashRPC = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+        self.sync_all()\n+\n+        #now we should receive a zmq msg because the tx was broadcastet\n+        msg = self.zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+        hashZMQ = \"\"\n+        if topic == \"hashtx\":\n+            hashZMQ = binascii.hexlify(body)\n+\n+        assert_equal(hashRPC, hashZMQ) #blockhash from generate must be equal to the hash received over zmq\n+\n+\n+if __name__ == '__main__':\n+    ZMQTest ().main ()"
      },
      {
        "sha": "67e848be39d4bb1bd4400fd61ddcfdf4aa39a61d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -48,6 +48,9 @@ if ENABLE_WALLET\n BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n EXTRA_LIBRARIES += libbitcoin_wallet.a\n endif\n+if ENABLE_ZMQ\n+EXTRA_LIBRARIES += libbitcoin_zmq.a\n+endif\n \n if BUILD_BITCOIN_LIBS\n lib_LTLIBRARIES = libbitcoinconsensus.la\n@@ -157,7 +160,12 @@ BITCOIN_CORE_H = \\\n   wallet/db.h \\\n   wallet/wallet.h \\\n   wallet/wallet_ismine.h \\\n-  wallet/walletdb.h\n+  wallet/walletdb.h \\\n+  zmq/zmqabstractnotifier.h \\\n+  zmq/zmqconfig.h\\\n+  zmq/zmqnotificationinterface.h \\\n+  zmq/zmqpublishnotifier.h\n+\n \n obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n@@ -199,6 +207,17 @@ libbitcoin_server_a_SOURCES = \\\n   validationinterface.cpp \\\n   $(BITCOIN_CORE_H)\n \n+if ENABLE_ZMQ\n+LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n+\n+libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_zmq_a_SOURCES = \\\n+  zmq/zmqabstractnotifier.cpp \\\n+  zmq/zmqnotificationinterface.cpp \\\n+  zmq/zmqpublishnotifier.cpp\n+endif\n+\n+\n # wallet: shared between bitcoind and bitcoin-qt, but only linked\n # when wallet enabled\n libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n@@ -320,12 +339,15 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n+if ENABLE_ZMQ\n+bitcoind_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n+\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n \n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-#\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp"
      },
      {
        "sha": "3e8eda17824c73bc9534377087f5a4c10e18844a",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -361,6 +361,9 @@ qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n+if ENABLE_ZMQ\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)"
      },
      {
        "sha": "6554580beab44a07ac719c21a8bee63e88fc43f4",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -30,6 +30,9 @@ qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n+if ENABLE_ZMQ\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\"
      },
      {
        "sha": "cee35926a5d752c8217eaf6156b74390f656a6e7",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -100,6 +100,10 @@ endif\n test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n+if ENABLE_ZMQ\n+test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+endif\n+\n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n \n $(BITCOIN_TESTS): $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "f03388120cdc6bc3f74bfdeb34e0f5d2c9f1082a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -38,7 +38,6 @@\n #include \"wallet/wallet.h\"\n #include \"wallet/walletdb.h\"\n #endif\n-\n #include <stdint.h>\n #include <stdio.h>\n \n@@ -55,13 +54,21 @@\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n \n+#if ENABLE_ZMQ\n+#include \"zmq/zmqnotificationinterface.h\"\n+#endif\n+\n using namespace std;\n \n #ifdef ENABLE_WALLET\n CWallet* pwalletMain = NULL;\n #endif\n bool fFeeEstimatesInitialized = false;\n \n+#if ENABLE_ZMQ\n+static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n+#endif\n+\n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n // accessing block files don't count towards the fd_set size limit\n@@ -211,6 +218,16 @@ void Shutdown()\n     if (pwalletMain)\n         pwalletMain->Flush(true);\n #endif\n+\n+#if ENABLE_ZMQ\n+    if (pzmqNotificationInterface) {\n+        UnregisterValidationInterface(pzmqNotificationInterface);\n+        pzmqNotificationInterface->Shutdown();\n+        delete pzmqNotificationInterface;\n+        pzmqNotificationInterface = NULL;\n+    }\n+#endif\n+\n #ifndef WIN32\n     try {\n         boost::filesystem::remove(GetPidFile());\n@@ -375,6 +392,14 @@ std::string HelpMessage(HelpMessageMode mode)\n         \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n #endif\n \n+#if ENABLE_ZMQ\n+    strUsage += HelpMessageGroup(_(\"ZeroMQ notification options:\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubhashblock=<address>\", _(\"Enable publish hash block in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubhashtransaction=<address>\", _(\"Enable publish hash transaction in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubrawblock=<address>\", _(\"Enable publish raw block in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubrawtransaction=<address>\", _(\"Enable publish raw transaction in <address>\"));\n+#endif\n+\n     strUsage += HelpMessageGroup(_(\"Debugging/Testing options:\"));\n     if (showDebug)\n     {\n@@ -1125,6 +1150,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     BOOST_FOREACH(const std::string& strDest, mapMultiArgs[\"-seednode\"])\n         AddOneShot(strDest);\n \n+#if ENABLE_ZMQ\n+    pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs);\n+\n+    if (pzmqNotificationInterface) {\n+        pzmqNotificationInterface->Initialize();\n+        RegisterValidationInterface(pzmqNotificationInterface);\n+    }\n+#endif\n+\n     // ********************************************************* Step 7: load block chain\n \n     fReindex = GetBoolArg(\"-reindex\", false);"
      },
      {
        "sha": "27278b977aa529b602d91e579f3a7a10d352e474",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -2303,6 +2303,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n                         pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n             }\n             // Notify external listeners about the new tip.\n+            GetMainSignals().UpdatedBlockTip(hashNewTip);\n             uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());"
      },
      {
        "sha": "81f3b775f48a541fa5eda7963ba3272f34043e93",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -13,6 +13,7 @@ CMainSignals& GetMainSignals()\n }\n \n void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.UpdatedBlockTip.connect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, _1));\n     g_signals.SyncTransaction.connect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n     g_signals.UpdatedTransaction.connect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n@@ -32,6 +33,7 @@ void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.UpdatedTransaction.disconnect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SyncTransaction.disconnect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n+    g_signals.UpdatedBlockTip.disconnect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, _1));\n }\n \n void UnregisterAllValidationInterfaces() {\n@@ -43,6 +45,7 @@ void UnregisterAllValidationInterfaces() {\n     g_signals.SetBestChain.disconnect_all_slots();\n     g_signals.UpdatedTransaction.disconnect_all_slots();\n     g_signals.SyncTransaction.disconnect_all_slots();\n+    g_signals.UpdatedBlockTip.disconnect_all_slots();\n }\n \n void SyncWithWallets(const CTransaction &tx, const CBlock *pblock) {"
      },
      {
        "sha": "6f95ad74eb30800541acaba5aae6db891e7d7c81",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -30,6 +30,7 @@ void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n \n class CValidationInterface {\n protected:\n+    virtual void UpdatedBlockTip(const uint256 &newHashTip) {}\n     virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void UpdatedTransaction(const uint256 &hash) {}\n@@ -44,6 +45,8 @@ class CValidationInterface {\n };\n \n struct CMainSignals {\n+    /** Notifies listeners of updated block chain tip */\n+    boost::signals2::signal<void (const uint256 &)> UpdatedBlockTip;\n     /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n     boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n     /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */"
      },
      {
        "sha": "744ec59234d56cbe0ce2bc836135baa0edc9dfa5",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqabstractnotifier.h\"\n+#include \"util.h\"\n+\n+\n+CZMQAbstractNotifier::~CZMQAbstractNotifier()\n+{\n+    assert(!psocket);\n+}\n+\n+bool CZMQAbstractNotifier::NotifyBlock(const uint256 &/*hash*/)\n+{\n+    return true;\n+}\n+\n+bool CZMQAbstractNotifier::NotifyTransaction(const CTransaction &/*transaction*/)\n+{\n+    return true;\n+}"
      },
      {
        "sha": "626d1ddf926c17d6f1c595353115a0366c377e95",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H\n+#define BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H\n+\n+#include \"zmqconfig.h\"\n+\n+class CZMQAbstractNotifier;\n+typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n+\n+class CZMQAbstractNotifier\n+{\n+public:\n+    CZMQAbstractNotifier() : psocket(0) { }\n+    virtual ~CZMQAbstractNotifier();\n+\n+    template <typename T>\n+    static CZMQAbstractNotifier* Create()\n+    {\n+        return new T();\n+    }\n+\n+    std::string GetType() const { return type; }\n+    void SetType(const std::string &t) { type = t; }\n+    std::string GetAddress() const { return address; }\n+    void SetAddress(const std::string &a) { address = a; }\n+\n+    virtual bool Initialize(void *pcontext) = 0;\n+    virtual void Shutdown() = 0;\n+\n+    virtual bool NotifyBlock(const uint256 &hash);\n+    virtual bool NotifyTransaction(const CTransaction &transaction);\n+\n+protected:\n+    void *psocket;\n+    std::string type;\n+    std::string address;\n+};\n+\n+#endif // BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H"
      },
      {
        "sha": "6057f5d1a0e928e7a24c15917513cfb5bcb7c178",
        "filename": "src/zmq/zmqconfig.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqconfig.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqconfig.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqconfig.h?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQCONFIG_H\n+#define BITCOIN_ZMQ_ZMQCONFIG_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include <stdarg.h>\n+#include <string>\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+\n+void zmqError(const char *str);\n+\n+#endif // BITCOIN_ZMQ_ZMQCONFIG_H"
      },
      {
        "sha": "71ccb59a4a729aa9655e3d6caec810d3e2d8badc",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqnotificationinterface.h\"\n+#include \"zmqpublishnotifier.h\"\n+\n+#include \"version.h\"\n+#include \"main.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+\n+void zmqError(const char *str)\n+{\n+    LogPrint(\"zmq\", \"Error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+CZMQNotificationInterface::CZMQNotificationInterface() : pcontext(NULL)\n+{\n+}\n+\n+CZMQNotificationInterface::~CZMQNotificationInterface()\n+{\n+    // ensure Shutdown if Initialize is called\n+    assert(!pcontext);\n+\n+    for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n+    {\n+        delete *i;\n+    }\n+}\n+\n+CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const std::map<std::string, std::string> &args)\n+{\n+    CZMQNotificationInterface* notificationInterface = NULL;\n+    std::map<std::string, CZMQNotifierFactory> factories;\n+    std::list<CZMQAbstractNotifier*> notifiers;\n+\n+    factories[\"pubhashblock\"] = CZMQAbstractNotifier::Create<CZMQPublishHashBlockNotifier>;\n+    factories[\"pubhashtx\"] = CZMQAbstractNotifier::Create<CZMQPublishHashTransactionNotifier>;\n+    factories[\"pubrawblock\"] = CZMQAbstractNotifier::Create<CZMQPublishRawBlockNotifier>;\n+    factories[\"pubrawtx\"] = CZMQAbstractNotifier::Create<CZMQPublishRawTransactionNotifier>;\n+\n+    for (std::map<std::string, CZMQNotifierFactory>::const_iterator i=factories.begin(); i!=factories.end(); ++i)\n+    {\n+        std::map<std::string, std::string>::const_iterator j = args.find(\"-zmq\" + i->first);\n+        if (j!=args.end())\n+        {\n+            CZMQNotifierFactory factory = i->second;\n+            std::string address = j->second;\n+            CZMQAbstractNotifier *notifier = factory();\n+            notifier->SetType(i->first);\n+            notifier->SetAddress(address);\n+            notifiers.push_back(notifier);\n+        }\n+    }\n+\n+    if (!notifiers.empty())\n+    {\n+        notificationInterface = new CZMQNotificationInterface();\n+        notificationInterface->notifiers = notifiers;\n+    }\n+\n+    return notificationInterface;\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+bool CZMQNotificationInterface::Initialize()\n+{\n+    LogPrint(\"zmq\", \"Initialize notification interface\\n\");\n+    assert(!pcontext);\n+\n+    pcontext = zmq_init(1);\n+\n+    if (!pcontext)\n+    {\n+        zmqError(\"Unable to initialize context\");\n+        return false;\n+    }\n+\n+    std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin();\n+    for (; i!=notifiers.end(); ++i)\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->Initialize(pcontext))\n+        {\n+            LogPrint(\"zmq\", \"  Notifier %s ready (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n+        }\n+        else\n+        {\n+            LogPrint(\"zmq\", \"  Notifier %s failed (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n+            break;\n+        }\n+    }\n+\n+    if (i!=notifiers.end())\n+    {\n+        Shutdown();\n+        return false;\n+    }\n+\n+    return false;\n+}\n+\n+// Called during shutdown sequence\n+void CZMQNotificationInterface::Shutdown()\n+{\n+    LogPrint(\"zmq\", \"Shutdown notification interface\\n\");\n+    if (pcontext)\n+    {\n+        for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n+        {\n+            CZMQAbstractNotifier *notifier = *i;\n+            LogPrint(\"zmq\", \"   Shutdown notifier %s at %s\\n\", notifier->GetType(), notifier->GetAddress());\n+            notifier->Shutdown();\n+        }\n+        zmq_ctx_destroy(pcontext);\n+\n+        pcontext = 0;\n+    }\n+}\n+\n+void CZMQNotificationInterface::UpdatedBlockTip(const uint256 &hash)\n+{\n+    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->NotifyBlock(hash))\n+        {\n+            i++;\n+        }\n+        else\n+        {\n+            notifier->Shutdown();\n+            i = notifiers.erase(i);\n+        }\n+    }\n+}\n+\n+void CZMQNotificationInterface::SyncTransaction(const CTransaction &tx, const CBlock *pblock)\n+{\n+    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->NotifyTransaction(tx))\n+        {\n+            i++;\n+        }\n+        else\n+        {\n+            notifier->Shutdown();\n+            i = notifiers.erase(i);\n+        }\n+    }\n+}"
      },
      {
        "sha": "afc0b8d24e51466174e14a91eeca853f961108c4",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H\n+#define BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H\n+\n+#include \"validationinterface.h\"\n+#include <string>\n+#include <map>\n+\n+class CZMQAbstractNotifier;\n+\n+class CZMQNotificationInterface : public CValidationInterface\n+{\n+public:\n+    virtual ~CZMQNotificationInterface();\n+\n+    static CZMQNotificationInterface* CreateWithArguments(const std::map<std::string, std::string> &args);\n+\n+    bool Initialize();\n+    void Shutdown();\n+\n+protected: // CValidationInterface\n+    void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n+    void UpdatedBlockTip(const uint256 &newHashTip);\n+\n+private:\n+    CZMQNotificationInterface();\n+\n+    void *pcontext;\n+    std::list<CZMQAbstractNotifier*> notifiers;\n+};\n+\n+#endif // BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H"
      },
      {
        "sha": "0a6d7d0dbc57d94d73888abeea332b10ac94aca0",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,172 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqpublishnotifier.h\"\n+#include \"main.h\"\n+#include \"util.h\"\n+\n+static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;\n+\n+// Internal function to send multipart message\n+static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n+{\n+    va_list args;\n+    va_start(args, size);\n+\n+    while (1)\n+    {\n+        zmq_msg_t msg;\n+\n+        int rc = zmq_msg_init_size(&msg, size);\n+        if (rc != 0)\n+        {\n+            zmqError(\"Unable to initialize ZMQ msg\");\n+            return -1;\n+        }\n+\n+        void *buf = zmq_msg_data(&msg);\n+        memcpy(buf, data, size);\n+\n+        data = va_arg(args, const void*);\n+\n+        rc = zmq_msg_send(&msg, sock, data ? ZMQ_SNDMORE : 0);\n+        if (rc == -1)\n+        {\n+            zmqError(\"Unable to send ZMQ msg\");\n+            zmq_msg_close(&msg);\n+            return -1;\n+        }\n+\n+        zmq_msg_close(&msg);\n+\n+        if (!data)\n+            break;\n+\n+        size = va_arg(args, size_t);\n+    }\n+    return 0;\n+}\n+\n+bool CZMQAbstractPublishNotifier::Initialize(void *pcontext)\n+{\n+    assert(!psocket);\n+\n+    // check if address is being used by other publish notifier\n+    std::multimap<std::string, CZMQAbstractPublishNotifier*>::iterator i = mapPublishNotifiers.find(address);\n+\n+    if (i==mapPublishNotifiers.end())\n+    {\n+        psocket = zmq_socket(pcontext, ZMQ_PUB);\n+        if (!psocket)\n+        {\n+            zmqError(\"Failed to create socket\");\n+            return false;\n+        }\n+\n+        int rc = zmq_bind(psocket, address.c_str());\n+        if (rc!=0)\n+        {\n+            zmqError(\"Failed to bind address\");\n+            return false;\n+        }\n+\n+        // register this notifier for the address, so it can be reused for other publish notifier\n+        mapPublishNotifiers.insert(std::make_pair(address, this));\n+        return true;\n+    }\n+    else\n+    {\n+        LogPrint(\"zmq\", \"  Reuse socket for address %s\\n\", address);\n+\n+        psocket = i->second->psocket;\n+        mapPublishNotifiers.insert(std::make_pair(address, this));\n+\n+        return true;\n+    }\n+}\n+\n+void CZMQAbstractPublishNotifier::Shutdown()\n+{\n+    assert(psocket);\n+\n+    int count = mapPublishNotifiers.count(address);\n+\n+    // remove this notifier from the list of publishers using this address\n+    typedef std::multimap<std::string, CZMQAbstractPublishNotifier*>::iterator iterator;\n+    std::pair<iterator, iterator> iterpair = mapPublishNotifiers.equal_range(address);\n+\n+    for (iterator it = iterpair.first; it != iterpair.second; ++it)\n+    {\n+        if (it->second==this)\n+        {\n+            mapPublishNotifiers.erase(it);\n+            break;\n+        }\n+    }\n+\n+    if (count == 1)\n+    {\n+        LogPrint(\"zmq\", \"Close socket at address %s\\n\", address);\n+        int linger = 0;\n+        zmq_setsockopt(psocket, ZMQ_LINGER, &linger, sizeof(linger));\n+        zmq_close(psocket);\n+    }\n+\n+    psocket = 0;\n+}\n+\n+bool CZMQPublishHashBlockNotifier::NotifyBlock(const uint256 &hash)\n+{\n+    LogPrint(\"zmq\", \"Publish hash block %s\\n\", hash.GetHex());\n+    char data[32];\n+    for (unsigned int i = 0; i < 32; i++)\n+        data[31 - i] = hash.begin()[i];\n+    int rc = zmq_send_multipart(psocket, \"hashblock\", 9, data, 32, 0);\n+    return rc == 0;\n+}\n+\n+bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+{\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(\"zmq\", \"Publish hash transaction %s\\n\", hash.GetHex());\n+    char data[32];\n+    for (unsigned int i = 0; i < 32; i++)\n+        data[31 - i] = hash.begin()[i];\n+    int rc = zmq_send_multipart(psocket, \"hashtx\", 6, data, 32, 0);\n+    return rc == 0;\n+}\n+\n+bool CZMQPublishRawBlockNotifier::NotifyBlock(const uint256 &hash)\n+{\n+    LogPrint(\"zmq\", \"Publish raw block %s\\n\", hash.GetHex());\n+\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    {\n+        LOCK(cs_main);\n+\n+        CBlock block;\n+        CBlockIndex* pblockindex = mapBlockIndex[hash];\n+\n+        if(!ReadBlockFromDisk(block, pblockindex))\n+        {\n+            zmqError(\"Can't read block from disk\");\n+            return false;\n+        }\n+\n+        ss << block;\n+    }\n+\n+    int rc = zmq_send_multipart(psocket, \"rawblock\", 8, &(*ss.begin()), ss.size(), 0);\n+    return rc == 0;\n+}\n+\n+bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+{\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(\"zmq\", \"Publish raw transaction %s\\n\", hash.GetHex());\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << transaction;\n+    int rc = zmq_send_multipart(psocket, \"rawtx\", 5, &(*ss.begin()), ss.size(), 0);\n+    return rc == 0;\n+}"
      },
      {
        "sha": "a0eb26f5e268ad4bbd007e665a48d76e94d419b5",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13b828270a6f912aeb24dee87108c6bda83d1b96/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=13b828270a6f912aeb24dee87108c6bda83d1b96",
        "patch": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H\n+#define BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H\n+\n+#include \"zmqabstractnotifier.h\"\n+\n+class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n+{\n+public:\n+    bool Initialize(void *pcontext);\n+    void Shutdown();\n+};\n+\n+class CZMQPublishHashBlockNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyBlock(const uint256 &hash);\n+};\n+\n+class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyTransaction(const CTransaction &transaction);\n+};\n+\n+class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyBlock(const uint256 &hash);\n+};\n+\n+class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyTransaction(const CTransaction &transaction);\n+};\n+\n+#endif // BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H"
      }
    ]
  },
  {
    "sha": "1c1b1b315f2f89584abe9a7558945dea2fbee708",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzFiMWIzMTVmMmY4OTU4NGFiZTlhNzU1ODk0NWRlYTJmYmVlNzA4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-09T12:24:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-16T13:23:29Z"
      },
      "message": "[uacomment] Sanitize per BIP-0014\n\n* SanitizeString() can be requested to be more strict\n* Throw error when SanitizeString() changes uacomments\n* Fix tests",
      "tree": {
        "sha": "80c5e16ed073213d4645f88eb42c398ed194c27f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80c5e16ed073213d4645f88eb42c398ed194c27f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c1b1b315f2f89584abe9a7558945dea2fbee708",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c1b1b315f2f89584abe9a7558945dea2fbee708",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c1b1b315f2f89584abe9a7558945dea2fbee708",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c1b1b315f2f89584abe9a7558945dea2fbee708/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 36,
      "deletions": 12
    },
    "files": [
      {
        "sha": "2239cc0724c5ac05012169b965956371bce4d8bf",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1c1b1b315f2f89584abe9a7558945dea2fbee708",
        "patch": "@@ -1014,8 +1014,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     RegisterNodeSignals(GetNodeSignals());\n \n-    // format user agent, check total size\n-    strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>());\n+    // sanitize comments per BIP-0014, format user agent and check total size\n+    std::vector<string> uacomments;\n+    BOOST_FOREACH(string cmt, mapMultiArgs[\"-uacomment\"])\n+    {\n+        if (cmt != SanitizeString(cmt, SAFE_CHARS_UA_COMMENT))\n+            return InitError(strprintf(\"User Agent comment (%s) contains unsafe characters.\", cmt));\n+        uacomments.push_back(SanitizeString(cmt, SAFE_CHARS_UA_COMMENT));\n+    }\n+    strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, uacomments);\n     if (strSubVersion.size() > MAX_SUBVERSION_LENGTH) {\n         return InitError(strprintf(\"Total length of network version string %i exceeds maximum of %i characters. Reduce the number and/or size of uacomments.\",\n             strSubVersion.size(), MAX_SUBVERSION_LENGTH));"
      },
      {
        "sha": "bde16a517fdcc5cefe5ab78c2aac6f5b6aec620a",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=1c1b1b315f2f89584abe9a7558945dea2fbee708",
        "patch": "@@ -413,10 +413,10 @@ BOOST_AUTO_TEST_CASE(test_FormatSubVersion)\n     comments.push_back(std::string(\"comment1\"));\n     std::vector<std::string> comments2;\n     comments2.push_back(std::string(\"comment1\"));\n-    comments2.push_back(std::string(\"comment2\"));\n+    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@; !\\\"#$%&'()*+-/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, std::vector<std::string>()),std::string(\"/Test:0.9.99/\"));\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments),std::string(\"/Test:0.9.99(comment1)/\"));\n-    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; comment2)/\"));\n+    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; Comment2; .,_?@; )/\"));\n }\n \n BOOST_AUTO_TEST_CASE(test_ParseFixedPoint)"
      },
      {
        "sha": "76c22f73538a0aa27d44f09776f6494eef4e447f",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=1c1b1b315f2f89584abe9a7558945dea2fbee708",
        "patch": "@@ -14,17 +14,20 @@\n \n using namespace std;\n \n-string SanitizeString(const string& str)\n+static const string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n+\n+static const string SAFE_CHARS[] =\n+{\n+    CHARS_ALPHA_NUM + \" .,;_/:?@()\", // SAFE_CHARS_DEFAULT\n+    CHARS_ALPHA_NUM + \" .,;_?@\" // SAFE_CHARS_UA_COMMENT\n+};\n+\n+string SanitizeString(const string& str, int rule)\n {\n-    /**\n-     * safeChars chosen to allow simple messages/URLs/email addresses, but avoid anything\n-     * even possibly remotely dangerous like & or >\n-     */\n-    static string safeChars(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890 .,;_/:?@()\");\n     string strResult;\n     for (std::string::size_type i = 0; i < str.size(); i++)\n     {\n-        if (safeChars.find(str[i]) != std::string::npos)\n+        if (SAFE_CHARS[rule].find(str[i]) != std::string::npos)\n             strResult.push_back(str[i]);\n     }\n     return strResult;"
      },
      {
        "sha": "ce93e8349779ad2ae27b7963abac1942749d8e6f",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c1b1b315f2f89584abe9a7558945dea2fbee708/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=1c1b1b315f2f89584abe9a7558945dea2fbee708",
        "patch": "@@ -22,7 +22,21 @@\n /** This is needed because the foreach macro can't get over the comma in pair<t1, t2> */\n #define PAIRTYPE(t1, t2)    std::pair<t1, t2>\n \n-std::string SanitizeString(const std::string& str);\n+/** Used by SanitizeString() */\n+enum SafeChars\n+{\n+    SAFE_CHARS_DEFAULT, //!< The full set of allowed chars\n+    SAFE_CHARS_UA_COMMENT //!< BIP-0014 subset\n+};\n+\n+/**\n+* Remove unsafe chars. Safe chars chosen to allow simple messages/URLs/email\n+* addresses, but avoid anything even possibly remotely dangerous like & or >\n+* @param[in] str    The string to sanitize\n+* @param[in] rule   The set of safe chars to choose (default: least restrictive)\n+* @return           A new string without unsafe chars\n+*/\n+std::string SanitizeString(const std::string& str, int rule = SAFE_CHARS_DEFAULT);\n std::vector<unsigned char> ParseHex(const char* psz);\n std::vector<unsigned char> ParseHex(const std::string& str);\n signed char HexDigit(char c);"
      }
    ]
  },
  {
    "sha": "ca5e2a18648cdc0f2a756e7d549f509adce25b00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTVlMmExODY0OGNkYzBmMmE3NTZlN2Q1NDlmNTA5YWRjZTI1YjAw",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-16T13:40:53Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-16T13:40:53Z"
      },
      "message": "Merge pull request #6317",
      "tree": {
        "sha": "49e0d4619a32250a5cd97ab401e26f91a91021b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49e0d4619a32250a5cd97ab401e26f91a91021b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca5e2a18648cdc0f2a756e7d549f509adce25b00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVflxbyWzCDIBeCsvAQLodw/+JuD3Rsn4UpgSOb/Y4Sve+y8i0te+bwDk\njsfIf1mx5Mp2JR6L3Dy2ReFtnD41oVv+9EzX9ZvidW8Kn+kfpjqiFn0pGEjefF0j\n5ZEa9DqS4nPtBawpJKcOwHi8LFzVHx9eTbhMDRGM91BPzFj/0Eo/LAXlp/PfB4Ow\nEWY7QLMf93h31pYUyI9J96490lsxzbS4TMiIdBEPI8zolD0dMSZOgB4EsioImUwH\ntXbdPrESOK/Qw7yfJn9MWCw/hNHFfFhMreOLqEahBB1AvfibFRU2Qbgo2EtnidsI\nej+ouYomNTa5KulvpExybZlrk6NhPz5LvlRUPcL0WvhOzOkYhWRSENFPxsl3uWTR\nAX+uwdZGB9qoWm18Jt7LtAui9wlJhUKbHmQlPJXPxMsKprBt0B/HQPisXRoLxhwf\nNFHaHzHLTlyB+jjhQyp888/JYnMeAU1zePPvAhsbsR5u8mljCEi8lKQP4J2ZqIJR\n5yqX4y1VM7TLewtUdNDN7PuZY/6eWZ4eN9rY80hv73dcecN2/TujPMCA4tQehpFI\naxi6XWsz90/8nRCheER4Q2oly4f2+qxk5RrHP/xPX6/LH7jpJ/B/cEr5l4fuktC7\nNn0MNLQ8gO7i9ol6LTPcQ3P193uX85+lwKfH/JUtd0WAVRqq4wArdBp0/UwM9kyL\nlyGrtky1s9M=\n=uOGu\n-----END PGP SIGNATURE-----",
        "payload": "tree 49e0d4619a32250a5cd97ab401e26f91a91021b1\nparent 13b828270a6f912aeb24dee87108c6bda83d1b96\nparent 92684bb8728613c828b36711aa2be5f97cf8a0ad\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442410853 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442410853 -0400\n\nMerge pull request #6317\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca5e2a18648cdc0f2a756e7d549f509adce25b00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca5e2a18648cdc0f2a756e7d549f509adce25b00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca5e2a18648cdc0f2a756e7d549f509adce25b00/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "13b828270a6f912aeb24dee87108c6bda83d1b96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13b828270a6f912aeb24dee87108c6bda83d1b96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13b828270a6f912aeb24dee87108c6bda83d1b96"
      },
      {
        "sha": "92684bb8728613c828b36711aa2be5f97cf8a0ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92684bb8728613c828b36711aa2be5f97cf8a0ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92684bb8728613c828b36711aa2be5f97cf8a0ad"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 8,
      "deletions": 17
    },
    "files": [
      {
        "sha": "4bd28c85dbf752d58989921f6fd25c1eff2f59d2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca5e2a18648cdc0f2a756e7d549f509adce25b00/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca5e2a18648cdc0f2a756e7d549f509adce25b00/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ca5e2a18648cdc0f2a756e7d549f509adce25b00",
        "patch": "@@ -1,5 +1,5 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.60])\n+AC_PREREQ([2.69])\n define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 11)\n define(_CLIENT_VERSION_REVISION, 99)\n@@ -138,8 +138,7 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=no])\n \n AC_ARG_ENABLE([zmq],\n-  [AC_HELP_STRING([--disable-zmq],\n-  [Disable ZMQ notifications])],\n+  [AS_HELP_STRING([--disable-zmq],[Disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n "
      },
      {
        "sha": "770a8605449776b7a7dd0bcfb09d50e2ed88653c",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 13,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca5e2a18648cdc0f2a756e7d549f509adce25b00/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca5e2a18648cdc0f2a756e7d549f509adce25b00/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=ca5e2a18648cdc0f2a756e7d549f509adce25b00",
        "patch": "@@ -8,7 +8,6 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n \n-#include \"net.h\"\n #include \"sync.h\"\n \n #include <QDebug>\n@@ -96,18 +95,17 @@ class PeerTablePriv\n             mapNodeRows.insert(std::pair<NodeId, int>(stats.nodeStats.nodeid, row++));\n     }\n \n-    int size()\n+    int size() const\n     {\n         return cachedNodeStats.size();\n     }\n \n     CNodeCombinedStats *index(int idx)\n     {\n-        if(idx >= 0 && idx < cachedNodeStats.size()) {\n+        if (idx >= 0 && idx < cachedNodeStats.size())\n             return &cachedNodeStats[idx];\n-        } else {\n-            return 0;\n-        }\n+\n+        return 0;\n     }\n };\n \n@@ -171,7 +169,7 @@ QVariant PeerTableModel::data(const QModelIndex &index, int role) const\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Ping)\n-            return (int)(Qt::AlignRight | Qt::AlignVCenter);\n+            return (QVariant)(Qt::AlignRight | Qt::AlignVCenter);\n     }\n \n     return QVariant();\n@@ -204,13 +202,8 @@ QModelIndex PeerTableModel::index(int row, int column, const QModelIndex &parent\n     CNodeCombinedStats *data = priv->index(row);\n \n     if (data)\n-    {\n         return createIndex(row, column, data);\n-    }\n-    else\n-    {\n-        return QModelIndex();\n-    }\n+    return QModelIndex();\n }\n \n const CNodeCombinedStats *PeerTableModel::getNodeStats(int idx)"
      },
      {
        "sha": "ec18ea8f71f42303a8f2ffffbe3c25d751270d70",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca5e2a18648cdc0f2a756e7d549f509adce25b00/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca5e2a18648cdc0f2a756e7d549f509adce25b00/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ca5e2a18648cdc0f2a756e7d549f509adce25b00",
        "patch": "@@ -7,7 +7,6 @@\n \n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n-#include \"peertablemodel.h\"\n #include \"platformstyle.h\"\n \n #include \"chainparams.h\""
      }
    ]
  },
  {
    "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTQzYTFmMjI4YzM0NDdhZTJlMDI1YzY5N2IwYWQ1M2EwZDhkMzA2",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-16T14:25:51Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-16T14:25:51Z"
      },
      "message": "configure.ac: Revert autotools-auto-updated 2.69 autoconf requirement\n\nAlso, autotools reformatted the AC_ARG_ENABLE erroneously as well.",
      "tree": {
        "sha": "39231df0e44d4c2cf7d88f3eab64e31a8358cb3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39231df0e44d4c2cf7d88f3eab64e31a8358cb3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVfl8ISWzCDIBeCsvAQK3NA/7BEDCXCO1X6z7IXkbCw3G+kp0A6MYZOUF\nILJJAlQ/r24i2MkpC25dWTgay8iWaqsBstjpLb9PWYaXLIyz/BMhH7yCFeMq0mpD\nNcb1wBWRG/P8tbFci3st9vNWYpoBzygc2dqaMO9dEM5LYmcX5gIesqvCfxNr/EbB\nJsv0gzDzwe4tZk6s15JLKtRpVqo/ugRel8f/RFBZ12ufR0VKvAif2QWssArdCYtp\nFQk/oWwIp2vdb7ndZGYJWWJEV1e1hI4qC+0GC2v0ZplG3zEKdmqn139sbW3u0UDp\nJ8PnxAowaSWKMMs0xHAWQdwT22S7bAgr/ryP9KFLoqE6jQl8YAQiAiOPRHs1TylR\nXUfZ9yfYdg6D9+Wb/CcckgNi158G93ntk7TyJoeTDLknuzpHbqv9OAsZ28/CbfQI\nbRWlfF3g8OFSIggsWaA2BO+3yfecF/eU1YReCbPYIc5OY3tYlTqwBsaBg5W7/sfg\nTcfuYtnK5Wknkyc7tYHUehPleItNc0/jJCpjZ9FGQ/LY5n9QIGnrM+PCfuPzlpET\niShdCw0/uur61D347do6To8mBsuoco/vColWxkBlEzs5cmi9i1FIZ0FsG6R3vFUw\n/MM6O6eb7Gcx+H3vI9SD/7830jgBIcwqeGnPOIWeGTYW22GL56C9qr/Ojb3Ru3hk\nitD8D3k3NCk=\n=4OiA\n-----END PGP SIGNATURE-----",
        "payload": "tree 39231df0e44d4c2cf7d88f3eab64e31a8358cb3b\nparent ca5e2a18648cdc0f2a756e7d549f509adce25b00\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442413551 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442413551 -0400\n\nconfigure.ac: Revert autotools-auto-updated 2.69 autoconf requirement\n\nAlso, autotools reformatted the AC_ARG_ENABLE erroneously as well.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ca5e2a18648cdc0f2a756e7d549f509adce25b00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca5e2a18648cdc0f2a756e7d549f509adce25b00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca5e2a18648cdc0f2a756e7d549f509adce25b00"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f0e0a74fe6db9df6e6e2d266344d7990e9a7e009",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0143a1f228c3447ae2e025c697b0ad53a0d8d306/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0143a1f228c3447ae2e025c697b0ad53a0d8d306/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "patch": "@@ -1,5 +1,5 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.69])\n+AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 11)\n define(_CLIENT_VERSION_REVISION, 99)\n@@ -138,7 +138,8 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=no])\n \n AC_ARG_ENABLE([zmq],\n-  [AS_HELP_STRING([--disable-zmq],[Disable ZMQ notifications])],\n+  [AS_HELP_STRING([--disable-zmq],\n+  [Disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n "
      }
    ]
  },
  {
    "sha": "50f090884ccd29e439720aeb83fcd293fae34921",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGYwOTA4ODRjY2QyOWU0Mzk3MjBhZWI4M2ZjZDI5M2ZhZTM0OTIx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-19T11:24:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add ban functions to peers window\n\nadd ban option for peer context menu (1h, 24h, 7d, 1y).",
      "tree": {
        "sha": "578f740e33d6c6b4dfdcb761661f167dd08583e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/578f740e33d6c6b4dfdcb761661f167dd08583e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50f090884ccd29e439720aeb83fcd293fae34921",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f090884ccd29e439720aeb83fcd293fae34921",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50f090884ccd29e439720aeb83fcd293fae34921",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f090884ccd29e439720aeb83fcd293fae34921/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 41,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2a94312be0bb1f6ba3d912ce7d502ee5ba5fd8a2",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 1,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=50f090884ccd29e439720aeb83fcd293fae34921",
        "patch": "@@ -352,16 +352,37 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n \n         // create context menu actions\n-        QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n+        QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n+        QAction* banAction1h        = new QAction(tr(\"&Ban Node for 1 hour\"), this);\n+        QAction* banAction24h       = new QAction(tr(\"&Ban Node for 24 hours\"), this);\n+        QAction* banAction7d        = new QAction(tr(\"&Ban Node for 7 days\"), this);\n+        QAction* banAction365d      = new QAction(tr(\"&Ban Node for 1 year\"), this);\n \n         // create context menu\n         contextMenu = new QMenu();\n         contextMenu->addAction(disconnectAction);\n+        contextMenu->addAction(banAction1h);\n+        contextMenu->addAction(banAction24h);\n+        contextMenu->addAction(banAction7d);\n+        contextMenu->addAction(banAction365d);\n \n         // context menu signals\n         connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n+        //add a signal mapping, use int instead of int64_t for bantime because signalmapper only supports int or objects\n+        //int is sufficient for our case\n+        QSignalMapper* signalMapper = new QSignalMapper(this);\n+        signalMapper->setMapping(banAction1h, 60*60);\n+        signalMapper->setMapping(banAction24h, 60*60*24);\n+        signalMapper->setMapping(banAction7d, 60*60*24*7);\n+        signalMapper->setMapping(banAction365d, 60*60*24*365);\n+        connect(banAction1h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction24h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction7d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int))) ;\n+\n         // connect the peerWidget selection model to our peerSelected() handler\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n              this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n@@ -731,6 +752,23 @@ void RPCConsole::disconnectSelectedNode()\n     }\n }\n \n+void RPCConsole::banSelectedNode(int bantime)\n+{\n+    // Get currently selected peer address\n+    QString strNode = GUIUtil::getEntryData(ui->peerWidget, 0, PeerTableModel::Address);\n+    // Find possible nodes, ban it and clear the selected node\n+    if (CNode *bannedNode = FindNode(strNode.toStdString())) {\n+        std::string nStr = strNode.toStdString();\n+        std::string addr;\n+        int port = 0;\n+        SplitHostPort(nStr, port, addr);\n+\n+        CNode::Ban(CNetAddr(addr), bantime);\n+        bannedNode->CloseSocketDisconnect();\n+        clearSelectedNode();\n+    }\n+}\n+\n void RPCConsole::clearSelectedNode()\n {\n     ui->peerWidget->selectionModel()->clearSelection();"
      },
      {
        "sha": "3218a635d7aef15b98efcddc41dda078ce4258d5",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=50f090884ccd29e439720aeb83fcd293fae34921",
        "patch": "@@ -80,6 +80,8 @@ public Q_SLOTS:\n     void peerLayoutChanged();\n     /** Disconnect a selected node on the Peers tab */\n     void disconnectSelectedNode();\n+    /** Ban a selected node on the Peers tab */\n+    void banSelectedNode(int bantime);\n \n Q_SIGNALS:\n     // For RPC command executor"
      }
    ]
  },
  {
    "sha": "ad204df1a9077327ab1142fbc9bf41369c1a73d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDIwNGRmMWE5MDc3MzI3YWIxMTQyZmJjOWJmNDEzNjljMWE3M2Qx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T18:27:03Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add banlist table below peers table",
      "tree": {
        "sha": "40bf9432ae40956dcb6990814832e6b8ceca0158",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40bf9432ae40956dcb6990814832e6b8ceca0158"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50f090884ccd29e439720aeb83fcd293fae34921",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f090884ccd29e439720aeb83fcd293fae34921",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50f090884ccd29e439720aeb83fcd293fae34921"
      }
    ],
    "stats": {
      "total": 385,
      "additions": 375,
      "deletions": 10
    },
    "files": [
      {
        "sha": "480bd9dc8a6229f18d6f5c376061bf16cd673f9d",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -97,6 +97,7 @@ QT_MOC_CPP = \\\n   qt/moc_addressbookpage.cpp \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n   qt/moc_bitcoingui.cpp \\\n@@ -162,6 +163,7 @@ BITCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n   qt/askpassphrasedialog.h \\\n+  qt/bantablemodel.h \\\n   qt/bitcoinaddressvalidator.h \\\n   qt/bitcoinamountfield.h \\\n   qt/bitcoingui.h \\\n@@ -260,6 +262,7 @@ RES_ICONS = \\\n   qt/res/icons/verify.png\n \n BITCOIN_QT_CPP = \\\n+  qt/bantablemodel.cpp \\\n   qt/bitcoinaddressvalidator.cpp \\\n   qt/bitcoinamountfield.cpp \\\n   qt/bitcoingui.cpp \\"
      },
      {
        "sha": "3b71769ef302950a8e3b24d0176a5bdf1e9d6b06",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "added",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -0,0 +1,192 @@\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bantablemodel.h\"\n+\n+#include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+\n+#include \"net.h\"\n+#include \"sync.h\"\n+#include \"utiltime.h\"\n+\n+#include <QDebug>\n+#include <QList>\n+#include <QTimer>\n+\n+#include <boost/date_time/posix_time/posix_time.hpp>\n+#include <boost/date_time/c_local_time_adjustor.hpp>\n+\n+// private implementation\n+class BanTablePriv\n+{\n+public:\n+    /** Local cache of peer information */\n+    QList<CCombinedBan> cachedBanlist;\n+    /** Column to sort nodes by */\n+    int sortColumn;\n+    /** Order (ascending or descending) to sort nodes by */\n+    Qt::SortOrder sortOrder;\n+\n+    /** Pull a full list of banned nodes from CNode into our cache */\n+    void refreshBanlist()\n+    {\n+        std::map<CSubNet, int64_t> banMap;\n+        CNode::GetBanned(banMap);\n+\n+        cachedBanlist.clear();\n+#if QT_VERSION >= 0x040700\n+        cachedBanlist.reserve(banMap.size());\n+#endif\n+        std::map<CSubNet, int64_t>::iterator iter;\n+        for (iter = banMap.begin(); iter != banMap.end(); ++iter) {\n+            CCombinedBan banEntry;\n+            banEntry.subnet = iter->first;\n+            banEntry.bantil = iter->second;\n+            cachedBanlist.append(banEntry);\n+        }\n+    }\n+\n+    int size()\n+    {\n+        return cachedBanlist.size();\n+    }\n+\n+    CCombinedBan *index(int idx)\n+    {\n+        if(idx >= 0 && idx < cachedBanlist.size()) {\n+            return &cachedBanlist[idx];\n+        } else {\n+            return 0;\n+        }\n+    }\n+};\n+\n+BanTableModel::BanTableModel(ClientModel *parent) :\n+    QAbstractTableModel(parent),\n+    clientModel(parent),\n+    timer(0)\n+{\n+    columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n+    priv = new BanTablePriv();\n+    // default to unsorted\n+    priv->sortColumn = -1;\n+\n+    // set up timer for auto refresh\n+    timer = new QTimer();\n+    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n+    timer->setInterval(MODEL_UPDATE_DELAY);\n+\n+    // load initial data\n+    refresh();\n+}\n+\n+void BanTableModel::startAutoRefresh()\n+{\n+    timer->start();\n+}\n+\n+void BanTableModel::stopAutoRefresh()\n+{\n+    timer->stop();\n+}\n+\n+int BanTableModel::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return priv->size();\n+}\n+\n+int BanTableModel::columnCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return columns.length();;\n+}\n+\n+QVariant BanTableModel::data(const QModelIndex &index, int role) const\n+{\n+    if(!index.isValid())\n+        return QVariant();\n+\n+    CCombinedBan *rec = static_cast<CCombinedBan*>(index.internalPointer());\n+\n+    if (role == Qt::DisplayRole) {\n+        switch(index.column())\n+        {\n+        case Address:\n+            return QString::fromStdString(rec->subnet.ToString());\n+        case Bantime:\n+            //show time in users local timezone, not 64bit compatible!\n+            //TODO find a way to support 64bit timestamps\n+            boost::posix_time::ptime pt1 = boost::posix_time::from_time_t(rec->bantil);\n+            boost::posix_time::ptime pt2 = boost::date_time::c_local_adjustor<boost::posix_time::ptime>::utc_to_local(pt1);\n+            std::stringstream ss;\n+            ss << pt2;\n+            return QString::fromStdString(ss.str());\n+        }\n+    } else if (role == Qt::TextAlignmentRole) {\n+        if (index.column() == Bantime)\n+            return (int)(Qt::AlignRight | Qt::AlignVCenter);\n+    }\n+\n+    return QVariant();\n+}\n+\n+QVariant BanTableModel::headerData(int section, Qt::Orientation orientation, int role) const\n+{\n+    if(orientation == Qt::Horizontal)\n+    {\n+        if(role == Qt::DisplayRole && section < columns.size())\n+        {\n+            return columns[section];\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+Qt::ItemFlags BanTableModel::flags(const QModelIndex &index) const\n+{\n+    if(!index.isValid())\n+        return 0;\n+\n+    Qt::ItemFlags retval = Qt::ItemIsSelectable | Qt::ItemIsEnabled;\n+    return retval;\n+}\n+\n+QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    CCombinedBan *data = priv->index(row);\n+\n+    if (data)\n+    {\n+        return createIndex(row, column, data);\n+    }\n+    else\n+    {\n+        return QModelIndex();\n+    }\n+}\n+\n+void BanTableModel::refresh()\n+{\n+    emit layoutAboutToBeChanged();\n+    priv->refreshBanlist();\n+    emit layoutChanged();\n+}\n+\n+void BanTableModel::sort(int column, Qt::SortOrder order)\n+{\n+    priv->sortColumn = column;\n+    priv->sortOrder = order;\n+    refresh();\n+}\n+\n+bool BanTableModel::shouldShow()\n+{\n+    if (priv->size() > 0)\n+        return true;\n+    return false;\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "ef7a26e3c6dec685d506054f7be2bc54502ec704",
        "filename": "src/qt/bantablemodel.h",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_BANTABLEMODEL_H\n+#define BITCOIN_QT_BANTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class ClientModel;\n+class BanTablePriv;\n+\n+QT_BEGIN_NAMESPACE\n+class QTimer;\n+QT_END_NAMESPACE\n+\n+struct CCombinedBan {\n+    CSubNet subnet;\n+    int64_t bantil;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class BanTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit BanTableModel(ClientModel *parent = 0);\n+    void startAutoRefresh();\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Bantime = 1,\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    bool shouldShow();\n+    /*@}*/\n+\n+public slots:\n+    void refresh();\n+\n+private:\n+    ClientModel *clientModel;\n+    QStringList columns;\n+    BanTablePriv *priv;\n+    QTimer *timer;\n+};\n+\n+#endif // BITCOIN_QT_BANTABLEMODEL_H"
      },
      {
        "sha": "62c35130f888f217af97ae67b25dd952f83c6fd1",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"bantablemodel.h\"\n #include \"guiconstants.h\"\n #include \"peertablemodel.h\"\n \n@@ -26,13 +27,15 @@ ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent),\n     optionsModel(optionsModel),\n     peerTableModel(0),\n+    banTableModel(0),\n     cachedNumBlocks(0),\n     cachedBlockDate(QDateTime()),\n     cachedReindexing(0),\n     cachedImporting(0),\n     pollTimer(0)\n {\n     peerTableModel = new PeerTableModel(this);\n+    banTableModel = new BanTableModel(this);\n     pollTimer = new QTimer(this);\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n     pollTimer->start(MODEL_UPDATE_DELAY);\n@@ -176,6 +179,11 @@ PeerTableModel *ClientModel::getPeerTableModel()\n     return peerTableModel;\n }\n \n+BanTableModel *ClientModel::getBanTableModel()\n+{\n+    return banTableModel;\n+}\n+\n QString ClientModel::formatFullVersion() const\n {\n     return QString::fromStdString(FormatFullVersion());\n@@ -206,6 +214,11 @@ QString ClientModel::formatClientStartupTime() const\n     return QDateTime::fromTime_t(nClientStartupTime).toString();\n }\n \n+void ClientModel::updateBanlist()\n+{\n+    banTableModel->refresh();\n+}\n+\n // Handlers for core signals\n static void ShowProgress(ClientModel *clientmodel, const std::string &title, int nProgress)\n {"
      },
      {
        "sha": "627bdf862de6351d2a5abe08cfbea92661f7d9f5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -9,6 +9,7 @@\n #include <QDateTime>\n \n class AddressTableModel;\n+class BanTableModel;\n class OptionsModel;\n class PeerTableModel;\n class TransactionTableModel;\n@@ -44,6 +45,7 @@ class ClientModel : public QObject\n \n     OptionsModel *getOptionsModel();\n     PeerTableModel *getPeerTableModel();\n+    BanTableModel *getBanTableModel();\n \n     //! Return number of connections, default is in- and outbound (total)\n     int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n@@ -72,6 +74,7 @@ class ClientModel : public QObject\n private:\n     OptionsModel *optionsModel;\n     PeerTableModel *peerTableModel;\n+    BanTableModel *banTableModel;\n \n     int cachedNumBlocks;\n     QDateTime cachedBlockDate;\n@@ -99,6 +102,7 @@ public Q_SLOTS:\n     void updateTimer();\n     void updateNumConnections(int numConnections);\n     void updateAlert(const QString &hash, int status);\n+    void updateBanlist();\n };\n \n #endif // BITCOIN_QT_CLIENTMODEL_H"
      },
      {
        "sha": "39230aee6f0db9d27d9d257e1186e9090c55da5c",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 84,
        "deletions": 10,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -713,17 +713,91 @@\n       </attribute>\n       <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n        <item row=\"0\" column=\"0\" rowspan=\"2\">\n-        <widget class=\"QTableView\" name=\"peerWidget\">\n-         <property name=\"horizontalScrollBarPolicy\">\n-          <enum>Qt::ScrollBarAsNeeded</enum>\n-         </property>\n-         <property name=\"sortingEnabled\">\n-          <bool>true</bool>\n+        <layout class=\"QVBoxLayout\" name=\"verticalLayout_101\">\n+         <property name=\"spacing\">\n+          <number>0</number>\n          </property>\n-         <attribute name=\"horizontalHeaderHighlightSections\">\n-          <bool>false</bool>\n-         </attribute>\n-        </widget>\n+         <item>\n+          <widget class=\"QTableView\" name=\"peerWidget\">\n+           <property name=\"horizontalScrollBarPolicy\">\n+            <enum>Qt::ScrollBarAsNeeded</enum>\n+           </property>\n+           <property name=\"sortingEnabled\">\n+            <bool>true</bool>\n+           </property>\n+           <attribute name=\"horizontalHeaderHighlightSections\">\n+            <bool>false</bool>\n+           </attribute>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"banHeading\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Minimum\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>300</width>\n+             <height>32</height>\n+            </size>\n+           </property>\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>16777215</width>\n+             <height>32</height>\n+            </size>\n+           </property>\n+           <property name=\"font\">\n+            <font>\n+             <pointsize>14</pointsize>\n+            </font>\n+           </property>\n+           <property name=\"cursor\">\n+            <cursorShape>IBeamCursor</cursorShape>\n+           </property>\n+           <property name=\"text\">\n+            <string>Banned peers</string>\n+           </property>\n+           <property name=\"alignment\">\n+            <set>Qt::AlignBottom|Qt::AlignLeading|Qt::AlignLeft</set>\n+           </property>\n+           <property name=\"wordWrap\">\n+            <bool>true</bool>\n+           </property>\n+           <property name=\"textInteractionFlags\">\n+            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QTableView\" name=\"banlistWidget\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>16777215</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"horizontalScrollBarPolicy\">\n+            <enum>Qt::ScrollBarAsNeeded</enum>\n+           </property>\n+           <property name=\"sortingEnabled\">\n+            <bool>true</bool>\n+           </property>\n+           <attribute name=\"horizontalHeaderHighlightSections\">\n+            <bool>false</bool>\n+           </attribute>\n+          </widget>\n+         </item>\n+        </layout>\n        </item>\n        <item row=\"0\" column=\"1\">\n         <widget class=\"QLabel\" name=\"peerHeading\">"
      },
      {
        "sha": "c6e70697fb2109f56d35ce3ba2aef4a9cfe4fa93",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -8,6 +8,7 @@\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n #include \"platformstyle.h\"\n+#include \"bantablemodel.h\"\n \n #include \"chainparams.h\"\n #include \"rpcserver.h\"\n@@ -351,6 +352,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n \n+        // set up ban table\n+        ui->banlistWidget->setModel(model->getBanTableModel());\n+\n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n         QAction* banAction1h        = new QAction(tr(\"&Ban Node for 1 hour\"), this);\n@@ -395,6 +399,12 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n+\n+        if (!clientModel->getBanTableModel()->shouldShow())\n+        {\n+            ui->banlistWidget->hide();\n+            ui->banHeading->hide();\n+        }\n     }\n }\n \n@@ -766,6 +776,9 @@ void RPCConsole::banSelectedNode(int bantime)\n         CNode::Ban(CNetAddr(addr), bantime);\n         bannedNode->CloseSocketDisconnect();\n         clearSelectedNode();\n+        ui->banlistWidget->setVisible(true);\n+        ui->banHeading->setVisible(true);\n+        clientModel->updateBanlist();\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "5f421329508d6e86c410282c7de39d7e80b0b289",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjQyMTMyOTUwOGQ2ZTg2YzQxMDI4MmM3ZGUzOWQ3ZTgwYjBiMjg5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T18:27:28Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add ui signal for banlist changes",
      "tree": {
        "sha": "2e54998588ade08a3325a5eba91dd1c28d53735c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e54998588ade08a3325a5eba91dd1c28d53735c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f421329508d6e86c410282c7de39d7e80b0b289",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f421329508d6e86c410282c7de39d7e80b0b289",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f421329508d6e86c410282c7de39d7e80b0b289",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f421329508d6e86c410282c7de39d7e80b0b289/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad204df1a9077327ab1142fbc9bf41369c1a73d1"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7f5dea0ef9e874b419d202513f3d48c46a06a13d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f421329508d6e86c410282c7de39d7e80b0b289/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f421329508d6e86c410282c7de39d7e80b0b289/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=5f421329508d6e86c410282c7de39d7e80b0b289",
        "patch": "@@ -243,12 +243,19 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n                               Q_ARG(int, status));\n }\n \n+static void BannedListChanged(ClientModel *clientmodel)\n+{\n+    qDebug() << \"BannedListChanged\";\n+    QMetaObject::invokeMethod(clientmodel, \"updateBanlist\", Qt::QueuedConnection);\n+}\n+\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n+    uiInterface.BannedListChanged.connect(boost::bind(BannedListChanged, this));\n }\n \n void ClientModel::unsubscribeFromCoreSignals()\n@@ -257,4 +264,5 @@ void ClientModel::unsubscribeFromCoreSignals()\n     uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n+    uiInterface.BannedListChanged.disconnect(boost::bind(BannedListChanged, this));\n }"
      },
      {
        "sha": "482e2ac47b6dfba2b764e5fe24706cc8c7399880",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f421329508d6e86c410282c7de39d7e80b0b289/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f421329508d6e86c410282c7de39d7e80b0b289/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=5f421329508d6e86c410282c7de39d7e80b0b289",
        "patch": "@@ -12,6 +12,7 @@\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"timedata.h\"\n+#include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\"\n@@ -531,6 +532,8 @@ UniValue setban(const UniValue& params, bool fHelp)\n     }\n \n     DumpBanlist(); //store banlist to disk\n+    uiInterface.BannedListChanged();\n+\n     return NullUniValue;\n }\n \n@@ -577,6 +580,8 @@ UniValue clearbanned(const UniValue& params, bool fHelp)\n \n     CNode::ClearBanned();\n     DumpBanlist(); //store banlist to disk\n+    \n+    uiInterface.BannedListChanged();\n \n     return NullUniValue;\n }"
      },
      {
        "sha": "e402479933887e285dd38e43c864ba2909628a1a",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f421329508d6e86c410282c7de39d7e80b0b289/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f421329508d6e86c410282c7de39d7e80b0b289/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=5f421329508d6e86c410282c7de39d7e80b0b289",
        "patch": "@@ -95,6 +95,9 @@ class CClientUIInterface\n \n     /** New block has been accepted */\n     boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n+\n+    /** Banlist did change. */\n+    boost::signals2::signal<void (void)> BannedListChanged;\n };\n \n extern CClientUIInterface uiInterface;"
      }
    ]
  },
  {
    "sha": "770ca79aa02964f56610ffaf15b16297634fa065",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzBjYTc5YWEwMjk2NGY1NjYxMGZmYWYxNWIxNjI5NzYzNGZhMDY1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T18:55:21Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add context menu with unban option to ban table",
      "tree": {
        "sha": "27b549b178f6499bf2e0e45b6fa8e7111f039b86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27b549b178f6499bf2e0e45b6fa8e7111f039b86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/770ca79aa02964f56610ffaf15b16297634fa065",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/770ca79aa02964f56610ffaf15b16297634fa065",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/770ca79aa02964f56610ffaf15b16297634fa065",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/770ca79aa02964f56610ffaf15b16297634fa065/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f421329508d6e86c410282c7de39d7e80b0b289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f421329508d6e86c410282c7de39d7e80b0b289",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f421329508d6e86c410282c7de39d7e80b0b289"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 59,
      "deletions": 15
    },
    "files": [
      {
        "sha": "5658cf875266ebfbefeb9e1b1755b017b7e32731",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 13,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=770ca79aa02964f56610ffaf15b16297634fa065",
        "patch": "@@ -241,8 +241,9 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    contextMenu(0),\n     platformStyle(platformStyle)\n+    peersTableContextMenu(0),\n+    banTableContextMenu(0)\n {\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n@@ -351,9 +352,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n-\n-        // set up ban table\n-        ui->banlistWidget->setModel(model->getBanTableModel());\n+        ui->peerWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n \n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n@@ -363,15 +362,15 @@ void RPCConsole::setClientModel(ClientModel *model)\n         QAction* banAction365d      = new QAction(tr(\"&Ban Node for 1 year\"), this);\n \n         // create context menu\n-        contextMenu = new QMenu();\n-        contextMenu->addAction(disconnectAction);\n-        contextMenu->addAction(banAction1h);\n-        contextMenu->addAction(banAction24h);\n-        contextMenu->addAction(banAction7d);\n-        contextMenu->addAction(banAction365d);\n+        peersTableContextMenu = new QMenu();\n+        peersTableContextMenu->addAction(disconnectAction);\n+        peersTableContextMenu->addAction(banAction1h);\n+        peersTableContextMenu->addAction(banAction24h);\n+        peersTableContextMenu->addAction(banAction7d);\n+        peersTableContextMenu->addAction(banAction365d);\n \n         // context menu signals\n-        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showMenu(const QPoint&)));\n+        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n         //add a signal mapping, use int instead of int64_t for bantime because signalmapper only supports int or objects\n@@ -392,6 +391,26 @@ void RPCConsole::setClientModel(ClientModel *model)\n              this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n \n+        // set up ban table\n+        ui->banlistWidget->setModel(model->getBanTableModel());\n+        ui->banlistWidget->verticalHeader()->hide();\n+        ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, ADDRESS_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, PING_COLUMN_WIDTH);\n+        ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n+        ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n+        ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n+        ui->banlistWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n+\n+        // create context menu actions\n+        QAction* unbanAction   = new QAction(tr(\"&Unban Node\"), this);\n+        banTableContextMenu = new QMenu();\n+        banTableContextMenu->addAction(unbanAction);\n+\n+        // context menu signals\n+        connect(ui->banlistWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showBanTableContextMenu(const QPoint&)));\n+        connect(unbanAction, SIGNAL(triggered()), this, SLOT(unbanSelectedNode()));\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientUserAgent->setText(model->formatSubVersion());\n@@ -744,11 +763,18 @@ void RPCConsole::hideEvent(QHideEvent *event)\n     clientModel->getPeerTableModel()->stopAutoRefresh();\n }\n \n-void RPCConsole::showMenu(const QPoint& point)\n+void RPCConsole::showPeersTableContextMenu(const QPoint& point)\n {\n     QModelIndex index = ui->peerWidget->indexAt(point);\n     if (index.isValid())\n-        contextMenu->exec(QCursor::pos());\n+        peersTableContextMenu->exec(QCursor::pos());\n+}\n+\n+void RPCConsole::showBanTableContextMenu(const QPoint& point)\n+{\n+    QModelIndex index = ui->banlistWidget->indexAt(point);\n+    if (index.isValid())\n+        banTableContextMenu->exec(QCursor::pos());\n }\n \n void RPCConsole::disconnectSelectedNode()\n@@ -782,6 +808,19 @@ void RPCConsole::banSelectedNode(int bantime)\n     }\n }\n \n+void RPCConsole::unbanSelectedNode()\n+{\n+    // Get currently selected peer address\n+    QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n+    CSubNet possibleSubnet(strNode.toStdString());\n+\n+    if (possibleSubnet.IsValid())\n+    {\n+        CNode::Unban(possibleSubnet);\n+        clientModel->updateBanlist();\n+    }\n+}\n+\n void RPCConsole::clearSelectedNode()\n {\n     ui->peerWidget->selectionModel()->clearSelection();"
      },
      {
        "sha": "db1f3d433dd80b1fdcf8388ec1a65dbe36ae5f2c",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=770ca79aa02964f56610ffaf15b16297634fa065",
        "patch": "@@ -61,7 +61,9 @@ private Q_SLOTS:\n     void showEvent(QShowEvent *event);\n     void hideEvent(QHideEvent *event);\n     /** Show custom context menu on Peers tab */\n-    void showMenu(const QPoint& point);\n+    void showPeersTableContextMenu(const QPoint& point);\n+    /** Show custom context menu on Bans tab */\n+    void showBanTableContextMenu(const QPoint& point);\n \n public Q_SLOTS:\n     void clear();\n@@ -82,6 +84,8 @@ public Q_SLOTS:\n     void disconnectSelectedNode();\n     /** Ban a selected node on the Peers tab */\n     void banSelectedNode(int bantime);\n+    /** Unban a selected node on the Bans tab */\n+    void unbanSelectedNode();\n \n Q_SIGNALS:\n     // For RPC command executor\n@@ -109,9 +113,10 @@ public Q_SLOTS:\n     QStringList history;\n     int historyPtr;\n     NodeId cachedNodeid;\n-    QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n     RPCTimerInterface *rpcTimerInterface;\n+    QMenu *peersTableContextMenu;\n+    QMenu *banTableContextMenu;\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      }
    ]
  },
  {
    "sha": "6135309816208740888b25bc27ea123c1c825a04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTM1MzA5ODE2MjA4NzQwODg4YjI1YmMyN2VhMTIzYzFjODI1YTA0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T19:48:10Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] banlist, UI optimizing and better signal handling",
      "tree": {
        "sha": "7b11a1e8f698f3b264e3273e77174b9b25e80864",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b11a1e8f698f3b264e3273e77174b9b25e80864"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6135309816208740888b25bc27ea123c1c825a04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6135309816208740888b25bc27ea123c1c825a04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6135309816208740888b25bc27ea123c1c825a04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6135309816208740888b25bc27ea123c1c825a04/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "770ca79aa02964f56610ffaf15b16297634fa065",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/770ca79aa02964f56610ffaf15b16297634fa065",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/770ca79aa02964f56610ffaf15b16297634fa065"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 28,
      "deletions": 22
    },
    "files": [
      {
        "sha": "2af8226c1246deb3f8dcb6b46f59c0452cf7c002",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -217,6 +217,7 @@ QString ClientModel::formatClientStartupTime() const\n void ClientModel::updateBanlist()\n {\n     banTableModel->refresh();\n+    emit banListChanged();\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "6f7b2de3a3fe4cc62d98aeb3de7a0eef64bf812f",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -91,6 +91,7 @@ class ClientModel : public QObject\n     void numBlocksChanged(int count, const QDateTime& blockDate);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n+    void banListChanged();\n \n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);"
      },
      {
        "sha": "c920e6130f3ea4fa4553d4343c0f80c8caa9d7ba",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -752,7 +752,7 @@\n            </property>\n            <property name=\"font\">\n             <font>\n-             <pointsize>14</pointsize>\n+             <pointsize>12</pointsize>\n             </font>\n            </property>\n            <property name=\"cursor\">\n@@ -780,12 +780,6 @@\n              <verstretch>0</verstretch>\n             </sizepolicy>\n            </property>\n-           <property name=\"maximumSize\">\n-            <size>\n-             <width>16777215</width>\n-             <height>16777215</height>\n-            </size>\n-           </property>\n            <property name=\"horizontalScrollBarPolicy\">\n             <enum>Qt::ScrollBarAsNeeded</enum>\n            </property>"
      },
      {
        "sha": "3f20f67f24f4a985d185d670c4c1efe2bd123ab7",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 13,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -352,7 +352,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n-        ui->peerWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n+        ui->peerWidget->horizontalHeader()->setStretchLastSection(true);\n \n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n@@ -373,8 +373,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n-        //add a signal mapping, use int instead of int64_t for bantime because signalmapper only supports int or objects\n-        //int is sufficient for our case\n+        //add a signal mapping to allow a dynamic argument\n+        //we need to use int (instead of int64_t) because signal mapper only supports int or objects\n+        //this is okay because max bantime (1 Year) is smaler then int_max\n         QSignalMapper* signalMapper = new QSignalMapper(this);\n         signalMapper->setMapping(banAction1h, 60*60);\n         signalMapper->setMapping(banAction24h, 60*60*24);\n@@ -395,14 +396,14 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->banlistWidget->setModel(model->getBanTableModel());\n         ui->banlistWidget->verticalHeader()->hide();\n         ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Address, ADDRESS_COLUMN_WIDTH);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, PING_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n         ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n         ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n-        ui->banlistWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n+        ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // create context menu actions\n+        // create banlist context menu actions\n         QAction* unbanAction   = new QAction(tr(\"&Unban Node\"), this);\n         banTableContextMenu = new QMenu();\n         banTableContextMenu->addAction(unbanAction);\n@@ -419,11 +420,8 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n \n-        if (!clientModel->getBanTableModel()->shouldShow())\n-        {\n-            ui->banlistWidget->hide();\n-            ui->banHeading->hide();\n-        }\n+        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n     }\n }\n \n@@ -810,14 +808,15 @@ void RPCConsole::banSelectedNode(int bantime)\n \n void RPCConsole::unbanSelectedNode()\n {\n-    // Get currently selected peer address\n+    // Get currently selected ban address\n     QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n     CSubNet possibleSubnet(strNode.toStdString());\n \n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n         clientModel->updateBanlist();\n+        showOrHideBanTableIfRequired();\n     }\n }\n \n@@ -828,3 +827,10 @@ void RPCConsole::clearSelectedNode()\n     ui->detailWidget->hide();\n     ui->peerHeading->setText(tr(\"Select a peer to view detailed information.\"));\n }\n+\n+void RPCConsole::showOrHideBanTableIfRequired()\n+{\n+    bool visible = clientModel->getBanTableModel()->shouldShow();\n+    ui->banlistWidget->setVisible(visible);\n+    ui->banHeading->setVisible(visible);\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "9674cc5275b8fa06aaa7d82743fd222dd139925d",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -64,6 +64,8 @@ private Q_SLOTS:\n     void showPeersTableContextMenu(const QPoint& point);\n     /** Show custom context menu on Bans tab */\n     void showBanTableContextMenu(const QPoint& point);\n+    /** Hides ban table if no bans are present */\n+    void showOrHideBanTableIfRequired();\n \n public Q_SLOTS:\n     void clear();\n@@ -105,7 +107,10 @@ public Q_SLOTS:\n     {\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n-        PING_COLUMN_WIDTH = 80\n+        PING_COLUMN_WIDTH = 80,\n+        BANSUBNET_COLUMN_WIDTH = 300,\n+        BANTIME_COLUMN_WIDTH = 150\n+\n     };\n \n     Ui::RPCConsole *ui;"
      },
      {
        "sha": "5d490c70caef5e6fd52ea422b5d891018c164261",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -580,7 +580,6 @@ UniValue clearbanned(const UniValue& params, bool fHelp)\n \n     CNode::ClearBanned();\n     DumpBanlist(); //store banlist to disk\n-    \n     uiInterface.BannedListChanged();\n \n     return NullUniValue;"
      }
    ]
  },
  {
    "sha": "f0bcbc4c8a9918e5d240ba2736286cede76155f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGJjYmM0YzhhOTkxOGU1ZDI0MGJhMjczNjI4NmNlZGU3NjE1NWY1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-21T08:25:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] bantable fix timestamp 64bit issue",
      "tree": {
        "sha": "0db327d1b79c4f8264989f6e856e4af04eefa6a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0db327d1b79c4f8264989f6e856e4af04eefa6a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6135309816208740888b25bc27ea123c1c825a04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6135309816208740888b25bc27ea123c1c825a04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6135309816208740888b25bc27ea123c1c825a04"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "615574cca71c59e7f4b03b1ad6d202a002a2b7d1",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0bcbc4c8a9918e5d240ba2736286cede76155f5/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0bcbc4c8a9918e5d240ba2736286cede76155f5/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=f0bcbc4c8a9918e5d240ba2736286cede76155f5",
        "patch": "@@ -118,13 +118,9 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n         case Address:\n             return QString::fromStdString(rec->subnet.ToString());\n         case Bantime:\n-            //show time in users local timezone, not 64bit compatible!\n-            //TODO find a way to support 64bit timestamps\n-            boost::posix_time::ptime pt1 = boost::posix_time::from_time_t(rec->bantil);\n-            boost::posix_time::ptime pt2 = boost::date_time::c_local_adjustor<boost::posix_time::ptime>::utc_to_local(pt1);\n-            std::stringstream ss;\n-            ss << pt2;\n-            return QString::fromStdString(ss.str());\n+            QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n+            date = date.addSecs(rec->bantil);\n+            return date.toString(Qt::SystemLocaleShortDate);\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Bantime)"
      }
    ]
  },
  {
    "sha": "53caec66cc43e1f16ba26e16147b77f5cfba22bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2NhZWM2NmNjNDNlMWYxNmJhMjZlMTYxNDdiNzdmNWNmYmEyMmJi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-21T08:44:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] bantable overhaul\n\n- some code cleanups\n- fix date formatting\n- reduce header includes",
      "tree": {
        "sha": "13ec0315c209b5aa494c535e868ff76d2a729214",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13ec0315c209b5aa494c535e868ff76d2a729214"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0bcbc4c8a9918e5d240ba2736286cede76155f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0bcbc4c8a9918e5d240ba2736286cede76155f5"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 17,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b4b100bf5cccda5042d1978389ece510584f88e0",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -8,7 +8,6 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n \n-#include \"net.h\"\n #include \"sync.h\"\n #include \"utiltime.h\"\n \n@@ -41,15 +40,16 @@ class BanTablePriv\n         cachedBanlist.reserve(banMap.size());\n #endif\n         std::map<CSubNet, int64_t>::iterator iter;\n-        for (iter = banMap.begin(); iter != banMap.end(); ++iter) {\n+        foreach (const PAIRTYPE(CSubNet, int64_t)& banentry, banMap)\n+        {\n             CCombinedBan banEntry;\n-            banEntry.subnet = iter->first;\n-            banEntry.bantil = iter->second;\n+            banEntry.subnet = banentry.first;\n+            banEntry.bantil = banentry.second;\n             cachedBanlist.append(banEntry);\n         }\n     }\n \n-    int size()\n+    int size() const\n     {\n         return cachedBanlist.size();\n     }\n@@ -120,7 +120,7 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n         case Bantime:\n             QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n             date = date.addSecs(rec->bantil);\n-            return date.toString(Qt::SystemLocaleShortDate);\n+            return date.toString(Qt::SystemLocaleLongDate);\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Bantime)"
      },
      {
        "sha": "8d3da4c737473c8282f47c290fcafb63b76ab584",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -5,7 +5,6 @@\n #ifndef BITCOIN_QT_BANTABLEMODEL_H\n #define BITCOIN_QT_BANTABLEMODEL_H\n \n-#include \"main.h\"\n #include \"net.h\"\n \n #include <QAbstractTableModel>"
      },
      {
        "sha": "9271df953588a2c36a397e9874ea31833cc9097f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -356,10 +356,10 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h        = new QAction(tr(\"&Ban Node for 1 hour\"), this);\n-        QAction* banAction24h       = new QAction(tr(\"&Ban Node for 24 hours\"), this);\n-        QAction* banAction7d        = new QAction(tr(\"&Ban Node for 7 days\"), this);\n-        QAction* banAction365d      = new QAction(tr(\"&Ban Node for 1 year\"), this);\n+        QAction* banAction1h        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n+        QAction* banAction24h       = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n+        QAction* banAction7d        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n+        QAction* banAction365d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n \n         // create context menu\n         peersTableContextMenu = new QMenu();\n@@ -798,7 +798,8 @@ void RPCConsole::banSelectedNode(int bantime)\n         SplitHostPort(nStr, port, addr);\n \n         CNode::Ban(CNetAddr(addr), bantime);\n-        bannedNode->CloseSocketDisconnect();\n+        bannedNode->fDisconnect = true;\n+\n         clearSelectedNode();\n         ui->banlistWidget->setVisible(true);\n         ui->banHeading->setVisible(true);\n@@ -830,6 +831,9 @@ void RPCConsole::clearSelectedNode()\n \n void RPCConsole::showOrHideBanTableIfRequired()\n {\n+    if (!clientModel)\n+        return;\n+    \n     bool visible = clientModel->getBanTableModel()->shouldShow();\n     ui->banlistWidget->setVisible(visible);\n     ui->banHeading->setVisible(visible);"
      },
      {
        "sha": "3f4d1834f6e8dbf1f1623ce9bfc6ab0236dd9d1b",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -108,8 +108,8 @@ public Q_SLOTS:\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n         PING_COLUMN_WIDTH = 80,\n-        BANSUBNET_COLUMN_WIDTH = 300,\n-        BANTIME_COLUMN_WIDTH = 150\n+        BANSUBNET_COLUMN_WIDTH = 250,\n+        BANTIME_COLUMN_WIDTH = 200\n \n     };\n "
      }
    ]
  },
  {
    "sha": "607809f037950f114f64f1ee09c1486a3c66638b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDc4MDlmMDM3OTUwZjExNGY2NGYxZWUwOWMxNDg2YTNjNjY2Mzhi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-23T15:20:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "net: use CIDR notation in CSubNet::ToString()",
      "tree": {
        "sha": "23975e3b7a45b0dbe10d68626d96a845175ebab7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23975e3b7a45b0dbe10d68626d96a845175ebab7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/607809f037950f114f64f1ee09c1486a3c66638b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/607809f037950f114f64f1ee09c1486a3c66638b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/607809f037950f114f64f1ee09c1486a3c66638b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/607809f037950f114f64f1ee09c1486a3c66638b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53caec66cc43e1f16ba26e16147b77f5cfba22bb"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 92,
      "deletions": 16
    },
    "files": [
      {
        "sha": "4163b1808601b38a4356aebb7a4df0645d1a340a",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/607809f037950f114f64f1ee09c1486a3c66638b/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/607809f037950f114f64f1ee09c1486a3c66638b/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=607809f037950f114f64f1ee09c1486a3c66638b",
        "patch": "@@ -1314,15 +1314,17 @@ bool CSubNet::Match(const CNetAddr &addr) const\n std::string CSubNet::ToString() const\n {\n     std::string strNetmask;\n-    if (network.IsIPv4())\n-        strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-    else\n-        strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                         netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                         netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                         netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                         netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n-    return network.ToString() + \"/\" + strNetmask;\n+    int cidr = 0;\n+    for (int n = network.IsIPv4() ? 12 : 0 ; n < 16; ++n)\n+    {\n+        uint8_t netmaskpart = netmask[n];\n+        while (netmaskpart)\n+        {\n+            cidr += ( netmaskpart & 0x01 );\n+            netmaskpart >>= 1;\n+        }\n+    }\n+    return network.ToString() + strprintf(\"/%u\", cidr);\n }\n \n bool CSubNet::IsValid() const"
      },
      {
        "sha": "f0333d86874c66eeead8d2127f9be67ee439a9c7",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/607809f037950f114f64f1ee09c1486a3c66638b/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/607809f037950f114f64f1ee09c1486a3c66638b/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=607809f037950f114f64f1ee09c1486a3c66638b",
        "patch": "@@ -155,6 +155,80 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:8\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:9\")));\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+\n+    CSubNet subnet = CSubNet(\"1.2.3.4/255.255.255.255\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/32\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.254\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/31\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.252\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/30\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.248\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/29\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.240\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/28\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.224\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/27\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.192\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/26\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.128\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/25\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/24\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.254.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.2.0/23\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.252.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/22\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.248.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/21\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.240.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/20\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.224.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/19\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.192.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/18\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.128.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/17\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/16\");\n+    subnet = CSubNet(\"1.2.3.4/255.254.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/15\");\n+    subnet = CSubNet(\"1.2.3.4/255.252.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/14\");\n+    subnet = CSubNet(\"1.2.3.4/255.248.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/13\");\n+    subnet = CSubNet(\"1.2.3.4/255.240.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/12\");\n+    subnet = CSubNet(\"1.2.3.4/255.224.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/11\");\n+    subnet = CSubNet(\"1.2.3.4/255.192.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/10\");\n+    subnet = CSubNet(\"1.2.3.4/255.128.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/9\");\n+    subnet = CSubNet(\"1.2.3.4/255.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/8\");\n+    subnet = CSubNet(\"1.2.3.4/254.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/7\");\n+    subnet = CSubNet(\"1.2.3.4/252.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/6\");\n+    subnet = CSubNet(\"1.2.3.4/248.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/5\");\n+    subnet = CSubNet(\"1.2.3.4/240.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/4\");\n+    subnet = CSubNet(\"1.2.3.4/224.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/3\");\n+    subnet = CSubNet(\"1.2.3.4/192.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/2\");\n+    subnet = CSubNet(\"1.2.3.4/128.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/1\");\n+    subnet = CSubNet(\"1.2.3.4/0.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/0\");\n+\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/128\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:0000:0000:0000:0000:0000:0000:0000\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      },
      {
        "sha": "1bd59497ff3460bc02d189c27a421a4fb4cb1823",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/607809f037950f114f64f1ee09c1486a3c66638b/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/607809f037950f114f64f1ee09c1486a3c66638b/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=607809f037950f114f64f1ee09c1486a3c66638b",
        "patch": "@@ -235,7 +235,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     UniValue ar = r.get_array();\n     UniValue o1 = ar[0].get_obj();\n     UniValue adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.255\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/32\");\n     BOOST_CHECK_NO_THROW(CallRPC(string(\"setban 127.0.0.0 remove\")));;\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n@@ -247,7 +247,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     UniValue banned_until = find_value(o1, \"banned_until\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n     BOOST_CHECK_EQUAL(banned_until.get_int64(), 1607731200); // absolute time check\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n@@ -258,7 +258,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     banned_until = find_value(o1, \"banned_until\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n     int64_t now = GetTime();    \n     BOOST_CHECK(banned_until.get_int64() > now);\n     BOOST_CHECK(banned_until.get_int64()-now <= 200);\n@@ -288,23 +288,23 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"fe80::202:b3ff:fe1e:8329/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"fe80::202:b3ff:fe1e:8329/128\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n-    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:db8::/30 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:db8::/ffff:fffc:0:0:0:0:0:0 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:db8::/ffff:fffc:0:0:0:0:0:0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:db8::/30\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "9e521c173586257f57764b479beb5923c33ed0eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTUyMWMxNzM1ODYyNTdmNTc3NjRiNDc5YmViNTkyM2MzM2VkMGVi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-23T19:10:42Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] polish ban table",
      "tree": {
        "sha": "8a83ab4b363cfadfa8738b99ead769e3e0797945",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a83ab4b363cfadfa8738b99ead769e3e0797945"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e521c173586257f57764b479beb5923c33ed0eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e521c173586257f57764b479beb5923c33ed0eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e521c173586257f57764b479beb5923c33ed0eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e521c173586257f57764b479beb5923c33ed0eb/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "607809f037950f114f64f1ee09c1486a3c66638b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/607809f037950f114f64f1ee09c1486a3c66638b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/607809f037950f114f64f1ee09c1486a3c66638b"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 17,
      "deletions": 21
    },
    "files": [
      {
        "sha": "1ef120ccf03b478a3f5bb7679beb8a672042abdd",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=9e521c173586257f57764b479beb5923c33ed0eb",
        "patch": "@@ -56,11 +56,10 @@ class BanTablePriv\n \n     CCombinedBan *index(int idx)\n     {\n-        if(idx >= 0 && idx < cachedBanlist.size()) {\n+        if (idx >= 0 && idx < cachedBanlist.size())\n             return &cachedBanlist[idx];\n-        } else {\n-            return 0;\n-        }\n+\n+        return 0;\n     }\n };\n \n@@ -124,7 +123,7 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Bantime)\n-            return (int)(Qt::AlignRight | Qt::AlignVCenter);\n+            return (QVariant)(Qt::AlignRight | Qt::AlignVCenter);\n     }\n \n     return QVariant();\n@@ -157,13 +156,8 @@ QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent)\n     CCombinedBan *data = priv->index(row);\n \n     if (data)\n-    {\n         return createIndex(row, column, data);\n-    }\n-    else\n-    {\n-        return QModelIndex();\n-    }\n+    return QModelIndex();\n }\n \n void BanTableModel::refresh()"
      },
      {
        "sha": "851e9f1867f9532038008bf5e7ed9aab53a0bbf8",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=9e521c173586257f57764b479beb5923c33ed0eb",
        "patch": "@@ -246,7 +246,7 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n \n static void BannedListChanged(ClientModel *clientmodel)\n {\n-    qDebug() << \"BannedListChanged\";\n+    qDebug() << QString(\"%1: Requesting update for peer banlist\").arg(__func__);\n     QMetaObject::invokeMethod(clientmodel, \"updateBanlist\", Qt::QueuedConnection);\n }\n "
      },
      {
        "sha": "380586f6106097ac222b26ce34afec87a4913c5e",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=9e521c173586257f57764b479beb5923c33ed0eb",
        "patch": "@@ -5,6 +5,7 @@\n #include \"rpcconsole.h\"\n #include \"ui_rpcconsole.h\"\n \n+#include \"bantablemodel.h\"\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n #include \"platformstyle.h\"\n@@ -373,9 +374,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n-        //add a signal mapping to allow a dynamic argument\n-        //we need to use int (instead of int64_t) because signal mapper only supports int or objects\n-        //this is okay because max bantime (1 Year) is smaler then int_max\n+        // Add a signal mapping to allow dynamic context menu arguments.\n+        // We need to use int (instead of int64_t), because signal mapper only supports\n+        // int or objects, which is okay because max bantime (1 year) is < int_max.\n         QSignalMapper* signalMapper = new QSignalMapper(this);\n         signalMapper->setMapping(banAction1h, 60*60);\n         signalMapper->setMapping(banAction24h, 60*60*24);\n@@ -385,7 +386,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(banAction24h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n         connect(banAction7d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n         connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n-        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int))) ;\n+        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int)));\n \n         // connect the peerWidget selection model to our peerSelected() handler\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n@@ -403,8 +404,12 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n         ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n+        // ensure ban table is shown or hidden (if empty)\n+        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n+\n         // create banlist context menu actions\n-        QAction* unbanAction   = new QAction(tr(\"&Unban Node\"), this);\n+        QAction* unbanAction = new QAction(tr(\"&Unban Node\"), this);\n         banTableContextMenu = new QMenu();\n         banTableContextMenu->addAction(unbanAction);\n \n@@ -419,9 +424,6 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n-\n-        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n-        showOrHideBanTableIfRequired();\n     }\n }\n \n@@ -833,7 +835,7 @@ void RPCConsole::showOrHideBanTableIfRequired()\n {\n     if (!clientModel)\n         return;\n-    \n+\n     bool visible = clientModel->getBanTableModel()->shouldShow();\n     ui->banlistWidget->setVisible(visible);\n     ui->banHeading->setVisible(visible);"
      }
    ]
  },
  {
    "sha": "e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMmI4MDI4ZTRjNjA3MDhhOGQ0OWIxN2Q5ZDQ5ZGRhMTBhYWVjYzUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-25T08:47:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "net: Fix CIDR notation in ToString()\n\nOnly use CIDR notation if the netmask can be represented as such.",
      "tree": {
        "sha": "2b8bcb0c6f61d3fef5f957306be35672dfbb3946",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b8bcb0c6f61d3fef5f957306be35672dfbb3946"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e521c173586257f57764b479beb5923c33ed0eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e521c173586257f57764b479beb5923c33ed0eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e521c173586257f57764b479beb5923c33ed0eb"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 54,
      "deletions": 10
    },
    "files": [
      {
        "sha": "c3d56d9184497249a1aef191979aa63262c6e113",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 10,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "patch": "@@ -1311,20 +1311,58 @@ bool CSubNet::Match(const CNetAddr &addr) const\n     return true;\n }\n \n+static inline int NetmaskBits(uint8_t x)\n+{\n+    switch(x) {\n+    case 0x00: return 0; break;\n+    case 0x80: return 1; break;\n+    case 0xc0: return 2; break;\n+    case 0xe0: return 3; break;\n+    case 0xf0: return 4; break;\n+    case 0xf8: return 5; break;\n+    case 0xfc: return 6; break;\n+    case 0xfe: return 7; break;\n+    case 0xff: return 8; break;\n+    default: return -1; break;\n+    }\n+}\n+\n std::string CSubNet::ToString() const\n {\n-    std::string strNetmask;\n+    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n     int cidr = 0;\n-    for (int n = network.IsIPv4() ? 12 : 0 ; n < 16; ++n)\n-    {\n-        uint8_t netmaskpart = netmask[n];\n-        while (netmaskpart)\n-        {\n-            cidr += ( netmaskpart & 0x01 );\n-            netmaskpart >>= 1;\n-        }\n+    bool valid_cidr = true;\n+    int n = network.IsIPv4() ? 12 : 0;\n+    for (; n < 16 && netmask[n] == 0xff; ++n)\n+        cidr += 8;\n+    if (n < 16) {\n+        int bits = NetmaskBits(netmask[n]);\n+        if (bits < 0)\n+            valid_cidr = false;\n+        else\n+            cidr += bits;\n+        ++n;\n     }\n-    return network.ToString() + strprintf(\"/%u\", cidr);\n+    for (; n < 16 && valid_cidr; ++n)\n+        if (netmask[n] != 0x00)\n+            valid_cidr = false;\n+\n+    /* Format output */\n+    std::string strNetmask;\n+    if (valid_cidr) {\n+        strNetmask = strprintf(\"%u\", cidr);\n+    } else {\n+        if (network.IsIPv4())\n+            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n+        else\n+            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n+                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n+                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n+                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    }\n+\n+    return network.ToString() + \"/\" + strNetmask;\n }\n \n bool CSubNet::IsValid() const"
      },
      {
        "sha": "8e853cc288941357334fb873c96a33be9e407199",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "patch": "@@ -229,6 +229,12 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\n     subnet = CSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.232.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:0/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      }
    ]
  },
  {
    "sha": "43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2MxZjViOGQ3YWNjYzE1OGRmZDZiMjcwY2I5YmZkMGNkOTAwYTNl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-26T08:21:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] remove unused timer-code from banlistmodel.cpp",
      "tree": {
        "sha": "a601bd237b28b22c52a964fc4ce2cf9153585ab0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a601bd237b28b22c52a964fc4ce2cf9153585ab0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b8028e4c60708a8d49b17d9d49dda10aaecc51"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 1,
      "deletions": 23
    },
    "files": [
      {
        "sha": "ee40cdbf57dfecfaeb97ae8bf0dd625babb749dc",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "patch": "@@ -13,7 +13,6 @@\n \n #include <QDebug>\n #include <QList>\n-#include <QTimer>\n \n #include <boost/date_time/posix_time/posix_time.hpp>\n #include <boost/date_time/c_local_time_adjustor.hpp>\n@@ -65,33 +64,17 @@ class BanTablePriv\n \n BanTableModel::BanTableModel(ClientModel *parent) :\n     QAbstractTableModel(parent),\n-    clientModel(parent),\n-    timer(0)\n+    clientModel(parent)\n {\n     columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n     priv = new BanTablePriv();\n     // default to unsorted\n     priv->sortColumn = -1;\n \n-    // set up timer for auto refresh\n-    timer = new QTimer();\n-    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n-    timer->setInterval(MODEL_UPDATE_DELAY);\n-\n     // load initial data\n     refresh();\n }\n \n-void BanTableModel::startAutoRefresh()\n-{\n-    timer->start();\n-}\n-\n-void BanTableModel::stopAutoRefresh()\n-{\n-    timer->stop();\n-}\n-\n int BanTableModel::rowCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);"
      },
      {
        "sha": "c0f0813f286a9466554ee25bf8f0dba06a57dfe5",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "patch": "@@ -13,10 +13,6 @@\n class ClientModel;\n class BanTablePriv;\n \n-QT_BEGIN_NAMESPACE\n-class QTimer;\n-QT_END_NAMESPACE\n-\n struct CCombinedBan {\n     CSubNet subnet;\n     int64_t bantil;\n@@ -59,7 +55,6 @@ public slots:\n     ClientModel *clientModel;\n     QStringList columns;\n     BanTablePriv *priv;\n-    QTimer *timer;\n };\n \n #endif // BITCOIN_QT_BANTABLEMODEL_H"
      }
    ]
  },
  {
    "sha": "cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGQ3MmNkNWZiYzJiMjg3NTU5ZjcyMzBkMTYxNjMzOWU5ZmYyZDZk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-26T08:23:51Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] simplify ban list signal handling\n\n- remove banListChanged signal from client model\n- directly call clientModel->getBanTableModel()->refresh() without the way\n  over clientModel->updateBanlist()\n\n- also fix clearing peer detail window, when selecting (clicking)\n  peers in the ban list",
      "tree": {
        "sha": "fec12703dc0654e2d1b43768cdde14ac112c689a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fec12703dc0654e2d1b43768cdde14ac112c689a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 21,
      "deletions": 17
    },
    "files": [
      {
        "sha": "0900a35cc4f38476baf46d522ada11f6edbbf4dc",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -217,7 +217,6 @@ QString ClientModel::formatClientStartupTime() const\n void ClientModel::updateBanlist()\n {\n     banTableModel->refresh();\n-    emit banListChanged();\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "627bdf862de6351d2a5abe08cfbea92661f7d9f5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -91,7 +91,6 @@ class ClientModel : public QObject\n     void numBlocksChanged(int count, const QDateTime& blockDate);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n-    void banListChanged();\n \n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);"
      },
      {
        "sha": "1b82aada41ac648689172cc20889fb70ae616820",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 13,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -331,8 +331,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n {\n     clientModel = model;\n     ui->trafficGraph->setClientModel(model);\n-    if(model)\n-    {\n+    if (model && clientModel->getPeerTableModel() && clientModel->getBanTableModel()) {\n         // Keep up to date with client\n         setNumConnections(model->getNumConnections());\n         connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n@@ -404,19 +403,23 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n         ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // ensure ban table is shown or hidden (if empty)\n-        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n-        showOrHideBanTableIfRequired();\n-\n-        // create banlist context menu actions\n+        // create ban table context menu action\n         QAction* unbanAction = new QAction(tr(\"&Unban Node\"), this);\n+\n+        // create ban table context menu\n         banTableContextMenu = new QMenu();\n         banTableContextMenu->addAction(unbanAction);\n \n-        // context menu signals\n+        // ban table context menu signals\n         connect(ui->banlistWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showBanTableContextMenu(const QPoint&)));\n         connect(unbanAction, SIGNAL(triggered()), this, SLOT(unbanSelectedNode()));\n \n+        // ban table signal handling - clear peer details when clicking a peer in the ban table\n+        connect(ui->banlistWidget, SIGNAL(clicked(const QModelIndex&)), this, SLOT(clearSelectedNode()));\n+        // ban table signal handling - ensure ban table is shown or hidden (if empty)\n+        connect(model->getBanTableModel(), SIGNAL(layoutChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientUserAgent->setText(model->formatSubVersion());\n@@ -790,6 +793,9 @@ void RPCConsole::disconnectSelectedNode()\n \n void RPCConsole::banSelectedNode(int bantime)\n {\n+    if (!clientModel)\n+        return;\n+\n     // Get currently selected peer address\n     QString strNode = GUIUtil::getEntryData(ui->peerWidget, 0, PeerTableModel::Address);\n     // Find possible nodes, ban it and clear the selected node\n@@ -803,23 +809,23 @@ void RPCConsole::banSelectedNode(int bantime)\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();\n-        ui->banlistWidget->setVisible(true);\n-        ui->banHeading->setVisible(true);\n-        clientModel->updateBanlist();\n+        clientModel->getBanTableModel()->refresh();\n     }\n }\n \n void RPCConsole::unbanSelectedNode()\n {\n+    if (!clientModel)\n+        return;\n+\n     // Get currently selected ban address\n     QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n     CSubNet possibleSubnet(strNode.toStdString());\n \n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n-        clientModel->updateBanlist();\n-        showOrHideBanTableIfRequired();\n+        clientModel->getBanTableModel()->refresh();\n     }\n }\n "
      },
      {
        "sha": "d5a769ae72929fb4573d6f44789b964cbfd80ec9",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -66,6 +66,8 @@ private Q_SLOTS:\n     void showBanTableContextMenu(const QPoint& point);\n     /** Hides ban table if no bans are present */\n     void showOrHideBanTableIfRequired();\n+    /** clear the selected node */\n+    void clearSelectedNode();\n \n public Q_SLOTS:\n     void clear();\n@@ -100,8 +102,6 @@ public Q_SLOTS:\n     void setTrafficGraphRange(int mins);\n     /** show detailed information on ui about selected node */\n     void updateNodeDetail(const CNodeCombinedStats *stats);\n-    /** clear the selected node */\n-    void clearSelectedNode();\n \n     enum ColumnWidths\n     {"
      }
    ]
  },
  {
    "sha": "51654deff2661732c5e2a2aa8ac1f632f5880f45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTY1NGRlZmYyNjYxNzMyYzVlMmEyYWE4YWMxZjYzMmY1ODgwZjQ1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-26T12:55:52Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] bantable polish\n\n- add missing NULL pointer checks\n- add better comments and reorder some code in rpcconsole.cpp\n- remove unneeded leftovers in bantable.cpp\n- update bantable column sizes to prevent cutting of banned until",
      "tree": {
        "sha": "d0cf07ef08416030d1ae12c88f48c49565a06a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0cf07ef08416030d1ae12c88f48c49565a06a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51654deff2661732c5e2a2aa8ac1f632f5880f45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 23,
      "deletions": 28
    },
    "files": [
      {
        "sha": "6074cd2f07c8b0a7c6c96859e2e2db87f8416d4f",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "patch": "@@ -14,8 +14,6 @@\n #include <QDebug>\n #include <QList>\n \n-#include <boost/date_time/posix_time/posix_time.hpp>\n-#include <boost/date_time/c_local_time_adjustor.hpp>\n \n // private implementation\n class BanTablePriv\n@@ -38,7 +36,6 @@ class BanTablePriv\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        std::map<CSubNet, int64_t>::iterator iter;\n         foreach (const PAIRTYPE(CSubNet, int64_t)& banentry, banMap)\n         {\n             CCombinedBan banEntry;\n@@ -104,9 +101,6 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n             date = date.addSecs(rec->bantil);\n             return date.toString(Qt::SystemLocaleLongDate);\n         }\n-    } else if (role == Qt::TextAlignmentRole) {\n-        if (index.column() == Bantime)\n-            return (QVariant)(Qt::AlignRight | Qt::AlignVCenter);\n     }\n \n     return QVariant();"
      },
      {
        "sha": "c417ec3f3223466399a7d048352c90b4be59b289",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 20,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "patch": "@@ -354,25 +354,21 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n         ui->peerWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // create context menu actions\n-        QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n-        QAction* banAction24h       = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n-        QAction* banAction7d        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n-        QAction* banAction365d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n-\n-        // create context menu\n+        // create peer table context menu actions\n+        QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n+        QAction* banAction1h      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n+\n+        // create peer table context menu\n         peersTableContextMenu = new QMenu();\n         peersTableContextMenu->addAction(disconnectAction);\n         peersTableContextMenu->addAction(banAction1h);\n         peersTableContextMenu->addAction(banAction24h);\n         peersTableContextMenu->addAction(banAction7d);\n         peersTableContextMenu->addAction(banAction365d);\n \n-        // context menu signals\n-        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n-        connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n-\n         // Add a signal mapping to allow dynamic context menu arguments.\n         // We need to use int (instead of int64_t), because signal mapper only supports\n         // int or objects, which is okay because max bantime (1 year) is < int_max.\n@@ -387,20 +383,25 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n         connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int)));\n \n-        // connect the peerWidget selection model to our peerSelected() handler\n+        // peer table context menu signals\n+        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n+        connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n+\n+        // peer table signal handling - update peer details when selecting new node\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n-             this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+            this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+        // peer table signal handling - update peer details when new nodes are added to the model\n         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n \n         // set up ban table\n         ui->banlistWidget->setModel(model->getBanTableModel());\n         ui->banlistWidget->verticalHeader()->hide();\n         ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n         ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n         ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n         ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n         // create ban table context menu action\n@@ -629,7 +630,7 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n {\n     Q_UNUSED(deselected);\n \n-    if (!clientModel || selected.indexes().isEmpty())\n+    if (!clientModel || !clientModel->getPeerTableModel() || selected.indexes().isEmpty())\n         return;\n \n     const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n@@ -639,7 +640,7 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n \n void RPCConsole::peerLayoutChanged()\n {\n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     const CNodeCombinedStats *stats = NULL;\n@@ -748,7 +749,7 @@ void RPCConsole::showEvent(QShowEvent *event)\n {\n     QWidget::showEvent(event);\n \n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     // start PeerTableModel auto refresh\n@@ -759,7 +760,7 @@ void RPCConsole::hideEvent(QHideEvent *event)\n {\n     QWidget::hideEvent(event);\n \n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     // stop PeerTableModel auto refresh"
      },
      {
        "sha": "b86f7767869f3c74c44b52223716bd90464fca48",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "patch": "@@ -108,8 +108,8 @@ public Q_SLOTS:\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n         PING_COLUMN_WIDTH = 80,\n-        BANSUBNET_COLUMN_WIDTH = 250,\n-        BANTIME_COLUMN_WIDTH = 200\n+        BANSUBNET_COLUMN_WIDTH = 200,\n+        BANTIME_COLUMN_WIDTH = 250\n \n     };\n "
      }
    ]
  },
  {
    "sha": "65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWFiZTkxY2U0YzNjOWIyNmFmYTVkMWFmMzhiZDFiZmU4MTU0NmM0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-26T12:58:15Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add sorting for bantable",
      "tree": {
        "sha": "24de51e29dabd14f819f6476d4b29655b62d3397",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24de51e29dabd14f819f6476d4b29655b62d3397"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51654deff2661732c5e2a2aa8ac1f632f5880f45"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 35,
      "deletions": 1
    },
    "files": [
      {
        "sha": "04840b052662e8f60cfaee80a941e03cffcf5a34",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "patch": "@@ -14,6 +14,24 @@\n #include <QDebug>\n #include <QList>\n \n+bool BannedNodeLessThan::operator()(const CCombinedBan& left, const CCombinedBan& right) const\n+{\n+    const CCombinedBan* pLeft = &left;\n+    const CCombinedBan* pRight = &right;\n+\n+    if (order == Qt::DescendingOrder)\n+        std::swap(pLeft, pRight);\n+\n+    switch(column)\n+    {\n+    case BanTableModel::Address:\n+        return pLeft->subnet.ToString().compare(pRight->subnet.ToString()) < 0;\n+    case BanTableModel::Bantime:\n+        return pLeft->bantil < pRight->bantil;\n+    }\n+\n+    return false;\n+}\n \n // private implementation\n class BanTablePriv\n@@ -43,6 +61,10 @@ class BanTablePriv\n             banEntry.bantil = banentry.second;\n             cachedBanlist.append(banEntry);\n         }\n+\n+        if (sortColumn >= 0)\n+            // sort cachedBanlist (use stable sort to prevent rows jumping around unneceesarily)\n+            qStableSort(cachedBanlist.begin(), cachedBanlist.end(), BannedNodeLessThan(sortColumn, sortOrder));\n     }\n \n     int size() const"
      },
      {
        "sha": "ec93ed1014dd4dee57eee389d741f3b82a73d058",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "patch": "@@ -18,6 +18,18 @@ struct CCombinedBan {\n     int64_t bantil;\n };\n \n+class BannedNodeLessThan\n+{\n+public:\n+    BannedNodeLessThan(int nColumn, Qt::SortOrder fOrder) :\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CCombinedBan& left, const CCombinedBan& right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n /**\n    Qt model providing information about connected peers, similar to the\n    \"getpeerinfo\" RPC call. Used by the rpc console UI.\n@@ -33,7 +45,7 @@ class BanTableModel : public QAbstractTableModel\n \n     enum ColumnIndex {\n         Address = 0,\n-        Bantime = 1,\n+        Bantime = 1\n     };\n \n     /** @name Methods overridden from QAbstractTableModel"
      }
    ]
  },
  {
    "sha": "b1189cfa105da414d8645f7284c16a443a710cfe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTE4OWNmYTEwNWRhNDE0ZDg2NDVmNzI4NGMxNmE0NDNhNzEwY2Zl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-03T06:35:14Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[Qt] adapt QT ban option to banlist.dat changes",
      "tree": {
        "sha": "622ece0d7c4eadc9e4feba954b5d6259c648fc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/622ece0d7c4eadc9e4feba954b5d6259c648fc3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1189cfa105da414d8645f7284c16a443a710cfe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1189cfa105da414d8645f7284c16a443a710cfe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1189cfa105da414d8645f7284c16a443a710cfe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1189cfa105da414d8645f7284c16a443a710cfe/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "42542371ecf55f79f266b9c8e7639c8013f4f3b5",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -27,7 +27,7 @@ bool BannedNodeLessThan::operator()(const CCombinedBan& left, const CCombinedBan\n     case BanTableModel::Address:\n         return pLeft->subnet.ToString().compare(pRight->subnet.ToString()) < 0;\n     case BanTableModel::Bantime:\n-        return pLeft->bantil < pRight->bantil;\n+        return pLeft->banEntry.nBanUntil < pRight->banEntry.nBanUntil;\n     }\n \n     return false;\n@@ -47,18 +47,18 @@ class BanTablePriv\n     /** Pull a full list of banned nodes from CNode into our cache */\n     void refreshBanlist()\n     {\n-        std::map<CSubNet, int64_t> banMap;\n+        banmap_t banMap;\n         CNode::GetBanned(banMap);\n \n         cachedBanlist.clear();\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        foreach (const PAIRTYPE(CSubNet, int64_t)& banentry, banMap)\n+        foreach (const PAIRTYPE(CSubNet, CBanEntry)& banentry, banMap)\n         {\n             CCombinedBan banEntry;\n             banEntry.subnet = banentry.first;\n-            banEntry.bantil = banentry.second;\n+            banEntry.banEntry = banentry.second;\n             cachedBanlist.append(banEntry);\n         }\n \n@@ -120,7 +120,7 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n             return QString::fromStdString(rec->subnet.ToString());\n         case Bantime:\n             QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n-            date = date.addSecs(rec->bantil);\n+            date = date.addSecs(rec->banEntry.nBanUntil);\n             return date.toString(Qt::SystemLocaleLongDate);\n         }\n     }"
      },
      {
        "sha": "09eb468fb9eac5e29baaee940979018c97a1836b",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -15,7 +15,7 @@ class BanTablePriv;\n \n struct CCombinedBan {\n     CSubNet subnet;\n-    int64_t bantil;\n+    CBanEntry banEntry;\n };\n \n class BannedNodeLessThan"
      },
      {
        "sha": "4117da57f523d0812f1f04d61a133f739c0e0c15",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -768,7 +768,7 @@\n             <bool>true</bool>\n            </property>\n            <property name=\"textInteractionFlags\">\n-            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            <set>Qt::NoTextInteraction</set>\n            </property>\n           </widget>\n          </item>"
      },
      {
        "sha": "b224d891834b0e6af5bda277dd56e34dc91ed610",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -356,10 +356,10 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         // create peer table context menu actions\n         QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n-        QAction* banAction24h     = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n-        QAction* banAction7d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n-        QAction* banAction365d    = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n+        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"24 hours\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"7 days\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 year\"), this);\n \n         // create peer table context menu\n         peersTableContextMenu = new QMenu();\n@@ -806,7 +806,7 @@ void RPCConsole::banSelectedNode(int bantime)\n         int port = 0;\n         SplitHostPort(nStr, port, addr);\n \n-        CNode::Ban(CNetAddr(addr), bantime);\n+        CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();"
      }
    ]
  },
  {
    "sha": "be8929265f0aa10c071e3efbfd20bfb4754ca543",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTg5MjkyNjVmMGFhMTBjMDcxZTNlZmJmZDIwYmZiNDc1NGNhNTQz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-03T06:55:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[Qt] reenabling hotkeys for ban context menu, use different words\n\n- 1 (h)our\n- 1 (d)ay\n- 1 (w)eek\n- 1 (y)ear",
      "tree": {
        "sha": "f112b2b28fb5e8792519cd77ca85f77c953b46c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f112b2b28fb5e8792519cd77ca85f77c953b46c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be8929265f0aa10c071e3efbfd20bfb4754ca543",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1189cfa105da414d8645f7284c16a443a710cfe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1189cfa105da414d8645f7284c16a443a710cfe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1189cfa105da414d8645f7284c16a443a710cfe"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ae89ccf1214c565a74842d4b865e3b979cc8f523",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be8929265f0aa10c071e3efbfd20bfb4754ca543/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be8929265f0aa10c071e3efbfd20bfb4754ca543/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=be8929265f0aa10c071e3efbfd20bfb4754ca543",
        "patch": "@@ -356,10 +356,10 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         // create peer table context menu actions\n         QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 hour\"), this);\n-        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"24 hours\"), this);\n-        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"7 days\"), this);\n-        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 year\"), this);\n+        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &day\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &week\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &year\"), this);\n \n         // create peer table context menu\n         peersTableContextMenu = new QMenu();"
      }
    ]
  },
  {
    "sha": "4ed05101f32c629008f7f962eb988e8078863fed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWQwNTEwMWYzMmM2MjkwMDhmN2Y5NjJlYjk4OGU4MDc4ODYzZmVk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-03T07:00:47Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[Qt] call DumpBanlist() when baning unbaning nodes\n\n- this matches RPC call behaviour",
      "tree": {
        "sha": "ed85a1275e82408bdb3bf15835906e9ea971e6fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed85a1275e82408bdb3bf15835906e9ea971e6fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ed05101f32c629008f7f962eb988e8078863fed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed05101f32c629008f7f962eb988e8078863fed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed05101f32c629008f7f962eb988e8078863fed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed05101f32c629008f7f962eb988e8078863fed/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be8929265f0aa10c071e3efbfd20bfb4754ca543",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be8929265f0aa10c071e3efbfd20bfb4754ca543"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4dc976028ff7c621f0218ef1f3ecc90f0c7f7cb0",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ed05101f32c629008f7f962eb988e8078863fed/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ed05101f32c629008f7f962eb988e8078863fed/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=4ed05101f32c629008f7f962eb988e8078863fed",
        "patch": "@@ -807,6 +807,7 @@ void RPCConsole::banSelectedNode(int bantime)\n         SplitHostPort(nStr, port, addr);\n \n         CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n+        DumpBanlist(); // store banlist to disk\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();\n@@ -826,6 +827,7 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n+        DumpBanlist(); // store banlist to disk\n         clientModel->getBanTableModel()->refresh();\n     }\n }"
      }
    ]
  },
  {
    "sha": "07f70b2dde26ef2b8857642043b149ff23f59a5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowN2Y3MGIyZGRlMjZlZjJiODg1NzY0MjA0M2IxNDlmZjIzZjU5YTVj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-05T13:44:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[QA] fix netbase tests because of new CSubNet::ToString() output",
      "tree": {
        "sha": "27a0f287f36236867779a839bd36559be01f2b26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27a0f287f36236867779a839bd36559be01f2b26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07f70b2dde26ef2b8857642043b149ff23f59a5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ed05101f32c629008f7f962eb988e8078863fed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed05101f32c629008f7f962eb988e8078863fed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed05101f32c629008f7f962eb988e8078863fed"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e383a3a12c375b2e22b5670ec6cafa53efaebb57",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07f70b2dde26ef2b8857642043b149ff23f59a5c/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07f70b2dde26ef2b8857642043b149ff23f59a5c/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "patch": "@@ -55,17 +55,17 @@ def run_test(self):\n         self.nodes[2].setban(\"192.168.0.1\", \"add\", 1) #ban for 1 seconds\n         self.nodes[2].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/19\", \"add\", 1000) #ban for 1000 seconds\n         listBeforeShutdown = self.nodes[2].listbanned();\n-        assert_equal(\"192.168.0.1/255.255.255.255\", listBeforeShutdown[2]['address']) #must be here\n+        assert_equal(\"192.168.0.1/32\", listBeforeShutdown[2]['address']) #must be here\n         time.sleep(2) #make 100% sure we expired 192.168.0.1 node time\n \n         #stop node\n         stop_node(self.nodes[2], 2)\n \n         self.nodes[2] = start_node(2, self.options.tmpdir)\n         listAfterShutdown = self.nodes[2].listbanned();\n-        assert_equal(\"127.0.0.0/255.255.255.0\", listAfterShutdown[0]['address'])\n-        assert_equal(\"127.0.0.0/255.255.255.255\", listAfterShutdown[1]['address'])\n-        assert_equal(\"2001:4000::/ffff:e000:0:0:0:0:0:0\", listAfterShutdown[2]['address'])\n+        assert_equal(\"127.0.0.0/24\", listAfterShutdown[0]['address'])\n+        assert_equal(\"127.0.0.0/32\", listAfterShutdown[1]['address'])\n+        assert_equal(\"/19\" in listAfterShutdown[2]['address'], True)\n \n         ###########################\n         # RPC disconnectnode test #"
      },
      {
        "sha": "b1ef0ed24a72e498979897523e1834da98e96137",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07f70b2dde26ef2b8857642043b149ff23f59a5c/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07f70b2dde26ef2b8857642043b149ff23f59a5c/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "patch": "@@ -149,12 +149,12 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).IsValid());\n     BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).Match(CNetAddr(\"127.0.0.1\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"127.0.0.1\")).Match(CNetAddr(\"127.0.0.2\")));\n-    BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).ToString() == \"127.0.0.1/255.255.255.255\");\n+    BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).ToString() == \"127.0.0.1/32\");\n \n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).IsValid());\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:8\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:9\")));\n-    BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/128\");\n \n     CSubNet subnet = CSubNet(\"1.2.3.4/255.255.255.255\");\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/32\");\n@@ -233,8 +233,6 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\n     subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n-    subnet = CSubNet(\"1:2:3:4:5:6:7:8/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n-    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:0/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      }
    ]
  },
  {
    "sha": "7f90ea78cb68c60408df85d5c653257dbc9160fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjkwZWE3OGNiNjhjNjA0MDhkZjg1ZDVjNjUzMjU3ZGJjOTE2MGZl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-29T12:34:14Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[QA] adabt QT_NO_KEYWORDS for QT ban implementation",
      "tree": {
        "sha": "98afbb661db8de879314d7c46faeea57cb559942",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98afbb661db8de879314d7c46faeea57cb559942"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f90ea78cb68c60408df85d5c653257dbc9160fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07f70b2dde26ef2b8857642043b149ff23f59a5c"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 8,
      "deletions": 9
    },
    "files": [
      {
        "sha": "33792af5baef8a10736379ff7fcf76d4d6f3d5d2",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "patch": "@@ -54,11 +54,11 @@ class BanTablePriv\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        foreach (const PAIRTYPE(CSubNet, CBanEntry)& banentry, banMap)\n+        for (banmap_t::iterator it = banMap.begin(); it != banMap.end(); it++)\n         {\n             CCombinedBan banEntry;\n-            banEntry.subnet = banentry.first;\n-            banEntry.banEntry = banentry.second;\n+            banEntry.subnet = (*it).first;\n+            banEntry.banEntry = (*it).second;\n             cachedBanlist.append(banEntry);\n         }\n \n@@ -161,9 +161,9 @@ QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent)\n \n void BanTableModel::refresh()\n {\n-    emit layoutAboutToBeChanged();\n+    Q_EMIT layoutAboutToBeChanged();\n     priv->refreshBanlist();\n-    emit layoutChanged();\n+    Q_EMIT layoutChanged();\n }\n \n void BanTableModel::sort(int column, Qt::SortOrder order)"
      },
      {
        "sha": "c21dd04e311cb6dbce9cbf87292698ad2c6395f6",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "patch": "@@ -60,7 +60,7 @@ class BanTableModel : public QAbstractTableModel\n     bool shouldShow();\n     /*@}*/\n \n-public slots:\n+public Q_SLOTS:\n     void refresh();\n \n private:"
      },
      {
        "sha": "b3c28eab825715d8501c16bde8c9685441a4489c",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "patch": "@@ -27,6 +27,7 @@\n #include <QKeyEvent>\n #include <QMenu>\n #include <QScrollBar>\n+#include <QSignalMapper>\n #include <QThread>\n #include <QTime>\n #include <QTimer>\n@@ -242,7 +243,7 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    platformStyle(platformStyle)\n+    platformStyle(platformStyle),\n     peersTableContextMenu(0),\n     banTableContextMenu(0)\n {\n@@ -807,7 +808,6 @@ void RPCConsole::banSelectedNode(int bantime)\n         SplitHostPort(nStr, port, addr);\n \n         CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n-        DumpBanlist(); // store banlist to disk\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();\n@@ -827,7 +827,6 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n-        DumpBanlist(); // store banlist to disk\n         clientModel->getBanTableModel()->refresh();\n     }\n }"
      }
    ]
  },
  {
    "sha": "d76a8acb9b7bcabf43e3e05168a36911f187818d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzZhOGFjYjliN2JjYWJmNDNlM2UwNTE2OGEzNjkxMWYxODc4MThk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:42:23Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:51:21Z"
      },
      "message": "use CBlockIndex* insted of uint256 for UpdatedBlockTip signal\n\n- removes mapBlockIndex find operation\n- theoretically allows removing the cs_main lock during zqm notification while introducing a new file position lock",
      "tree": {
        "sha": "2322acc9cd1448c524e7507a517deca6da7cf43c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2322acc9cd1448c524e7507a517deca6da7cf43c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d76a8acb9b7bcabf43e3e05168a36911f187818d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d76a8acb9b7bcabf43e3e05168a36911f187818d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d76a8acb9b7bcabf43e3e05168a36911f187818d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d76a8acb9b7bcabf43e3e05168a36911f187818d/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 21,
      "deletions": 17
    },
    "files": [
      {
        "sha": "d0d2476462a98f3057bcf403a645d1cb143079af",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -2303,7 +2303,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n                         pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n             }\n             // Notify external listeners about the new tip.\n-            GetMainSignals().UpdatedBlockTip(hashNewTip);\n+            GetMainSignals().UpdatedBlockTip(pindexNewTip);\n             uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());"
      },
      {
        "sha": "ffb56d266b95846db70ce5a162f2802b263e935d",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -11,6 +11,7 @@\n \n class CBlock;\n struct CBlockLocator;\n+class CBlockIndex;\n class CReserveScript;\n class CTransaction;\n class CValidationInterface;\n@@ -30,7 +31,7 @@ void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n \n class CValidationInterface {\n protected:\n-    virtual void UpdatedBlockTip(const uint256 &newHashTip) {}\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindex) {}\n     virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void UpdatedTransaction(const uint256 &hash) {}\n@@ -46,7 +47,7 @@ class CValidationInterface {\n \n struct CMainSignals {\n     /** Notifies listeners of updated block chain tip */\n-    boost::signals2::signal<void (const uint256 &)> UpdatedBlockTip;\n+    boost::signals2::signal<void (const CBlockIndex *)> UpdatedBlockTip;\n     /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n     boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n     /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */"
      },
      {
        "sha": "9f5cb3ba677ce5ca8b851c3c1719cb70cbf70275",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -11,7 +11,7 @@ CZMQAbstractNotifier::~CZMQAbstractNotifier()\n     assert(!psocket);\n }\n \n-bool CZMQAbstractNotifier::NotifyBlock(const uint256 &/*hash*/)\n+bool CZMQAbstractNotifier::NotifyBlock(const CBlockIndex * /*CBlockIndex*/)\n {\n     return true;\n }"
      },
      {
        "sha": "77cf5141e27b7568dbd8a3e9499b64f06477f095",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -7,7 +7,9 @@\n \n #include \"zmqconfig.h\"\n \n+class CBlockIndex;\n class CZMQAbstractNotifier;\n+\n typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n \n class CZMQAbstractNotifier\n@@ -30,7 +32,7 @@ class CZMQAbstractNotifier\n     virtual bool Initialize(void *pcontext) = 0;\n     virtual void Shutdown() = 0;\n \n-    virtual bool NotifyBlock(const uint256 &hash);\n+    virtual bool NotifyBlock(const CBlockIndex *pindex);\n     virtual bool NotifyTransaction(const CTransaction &transaction);\n \n protected:"
      },
      {
        "sha": "388b86707b346b19e9f452de50486af47e5613ea",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -120,12 +120,12 @@ void CZMQNotificationInterface::Shutdown()\n     }\n }\n \n-void CZMQNotificationInterface::UpdatedBlockTip(const uint256 &hash)\n+void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindex)\n {\n     for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n     {\n         CZMQAbstractNotifier *notifier = *i;\n-        if (notifier->NotifyBlock(hash))\n+        if (notifier->NotifyBlock(pindex))\n         {\n             i++;\n         }"
      },
      {
        "sha": "8eea15c0689ccdcadb61ff358e8834e13c514673",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -9,6 +9,7 @@\n #include <string>\n #include <map>\n \n+class CBlockIndex;\n class CZMQAbstractNotifier;\n \n class CZMQNotificationInterface : public CValidationInterface\n@@ -23,7 +24,7 @@ class CZMQNotificationInterface : public CValidationInterface\n \n protected: // CValidationInterface\n     void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n-    void UpdatedBlockTip(const uint256 &newHashTip);\n+    void UpdatedBlockTip(const CBlockIndex *pindex);\n \n private:\n     CZMQNotificationInterface();"
      },
      {
        "sha": "4c3eb8f2d9666debb02c692e4f413266d4583c23",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -116,8 +116,9 @@ void CZMQAbstractPublishNotifier::Shutdown()\n     psocket = 0;\n }\n \n-bool CZMQPublishHashBlockNotifier::NotifyBlock(const uint256 &hash)\n+bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n+    uint256 hash = pindex->GetBlockHash();\n     LogPrint(\"zmq\", \"Publish hash block %s\\n\", hash.GetHex());\n     char data[32];\n     for (unsigned int i = 0; i < 32; i++)\n@@ -137,18 +138,15 @@ bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &t\n     return rc == 0;\n }\n \n-bool CZMQPublishRawBlockNotifier::NotifyBlock(const uint256 &hash)\n+bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n-    LogPrint(\"zmq\", \"Publish raw block %s\\n\", hash.GetHex());\n+    LogPrint(\"zmq\", \"Publish raw block %s\\n\", pindex->GetBlockHash().GetHex());\n \n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     {\n         LOCK(cs_main);\n-\n         CBlock block;\n-        CBlockIndex* pblockindex = mapBlockIndex[hash];\n-\n-        if(!ReadBlockFromDisk(block, pblockindex))\n+        if(!ReadBlockFromDisk(block, pindex))\n         {\n             zmqError(\"Can't read block from disk\");\n             return false;"
      },
      {
        "sha": "44d5cbea67d2031446ac47df030c90165772af5e",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d76a8acb9b7bcabf43e3e05168a36911f187818d/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "patch": "@@ -7,6 +7,8 @@\n \n #include \"zmqabstractnotifier.h\"\n \n+class CBlockIndex;\n+\n class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n {\n public:\n@@ -17,7 +19,7 @@ class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n class CZMQPublishHashBlockNotifier : public CZMQAbstractPublishNotifier\n {\n public:\n-    bool NotifyBlock(const uint256 &hash);\n+    bool NotifyBlock(const CBlockIndex *pindex);\n };\n \n class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n@@ -29,7 +31,7 @@ class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n {\n public:\n-    bool NotifyBlock(const uint256 &hash);\n+    bool NotifyBlock(const CBlockIndex *pindex);\n };\n \n class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier"
      }
    ]
  },
  {
    "sha": "5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTVlMDBiZjRjNmJjNjUwMWU5ZDQyNjU3ZThjY2ViZWNjNTU0M2Qz",
    "commit": {
      "author": {
        "name": "Zak Wilcox",
        "email": "iwilcox@iwilcox.me.uk",
        "date": "2015-09-17T06:23:04Z"
      },
      "committer": {
        "name": "Zak Wilcox",
        "email": "iwilcox@iwilcox.me.uk",
        "date": "2015-09-17T06:23:04Z"
      },
      "message": "Split bitcoin-tx into its own package\n\nReverts the change putting it in the bitcoind deb.",
      "tree": {
        "sha": "fa4c546c09b09f76fe90979381f3e2bedcc557e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa4c546c09b09f76fe90979381f3e2bedcc557e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/comments",
    "author": {
      "login": "zw",
      "id": 263299,
      "node_id": "MDQ6VXNlcjI2MzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zw",
      "html_url": "https://github.com/zw",
      "followers_url": "https://api.github.com/users/zw/followers",
      "following_url": "https://api.github.com/users/zw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zw/subscriptions",
      "organizations_url": "https://api.github.com/users/zw/orgs",
      "repos_url": "https://api.github.com/users/zw/repos",
      "events_url": "https://api.github.com/users/zw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zw/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "zw",
      "id": 263299,
      "node_id": "MDQ6VXNlcjI2MzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zw",
      "html_url": "https://github.com/zw",
      "followers_url": "https://api.github.com/users/zw/followers",
      "following_url": "https://api.github.com/users/zw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zw/subscriptions",
      "organizations_url": "https://api.github.com/users/zw/orgs",
      "repos_url": "https://api.github.com/users/zw/repos",
      "events_url": "https://api.github.com/users/zw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zw/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05179f7e9d4b4d9d562bd03a554a2d69b2767f38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05179f7e9d4b4d9d562bd03a554a2d69b2767f38"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
        "patch": "@@ -1,3 +1,2 @@\n usr/local/bin/bitcoind usr/bin\n usr/local/bin/bitcoin-cli usr/bin\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "2b30d46b7d1c520094db1472dab0f85fd5ddad1d",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
        "patch": "@@ -56,3 +56,18 @@ Description: peer-to-peer network based digital currency - Qt GUI\n  requires 20+ GB of space, slowly growing.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+\n+Package: bitcoin-tx\n+Architecture: any\n+Depends: ${shlibs:Depends}, ${misc:Depends}\n+Description: peer-to-peer digital currency - standalone transaction tool\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n+ .\n+ This package provides bitcoin-tx, a command-line transaction creation\n+ tool with minimal dependencies which can be used without a bitcoin\n+ daemon.  Some means of exchanging minimal transaction data with peers\n+ is still required."
      }
    ]
  },
  {
    "sha": "b0beae8b8215ca696fb9e0eeb6022d13a215a283",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGJlYWU4YjgyMTVjYTY5NmZiOWUwZWViNjAyMmQxM2EyMTVhMjgz",
    "commit": {
      "author": {
        "name": "Zak Wilcox",
        "email": "iwilcox@iwilcox.me.uk",
        "date": "2015-09-17T09:17:24Z"
      },
      "committer": {
        "name": "Zak Wilcox",
        "email": "iwilcox@iwilcox.me.uk",
        "date": "2015-09-17T09:17:24Z"
      },
      "message": "Drop \"with minimal dependencies\" from description\n\nFive boost libs plus libcrypto are needed; I don't think that quite passes for minimal.",
      "tree": {
        "sha": "b552aea67e69226e5fb70a548be676ff3af7ea2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b552aea67e69226e5fb70a548be676ff3af7ea2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0beae8b8215ca696fb9e0eeb6022d13a215a283",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0beae8b8215ca696fb9e0eeb6022d13a215a283",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0beae8b8215ca696fb9e0eeb6022d13a215a283",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0beae8b8215ca696fb9e0eeb6022d13a215a283/comments",
    "author": {
      "login": "zw",
      "id": 263299,
      "node_id": "MDQ6VXNlcjI2MzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zw",
      "html_url": "https://github.com/zw",
      "followers_url": "https://api.github.com/users/zw/followers",
      "following_url": "https://api.github.com/users/zw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zw/subscriptions",
      "organizations_url": "https://api.github.com/users/zw/orgs",
      "repos_url": "https://api.github.com/users/zw/repos",
      "events_url": "https://api.github.com/users/zw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zw/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "zw",
      "id": 263299,
      "node_id": "MDQ6VXNlcjI2MzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zw",
      "html_url": "https://github.com/zw",
      "followers_url": "https://api.github.com/users/zw/followers",
      "following_url": "https://api.github.com/users/zw/following{/other_user}",
      "gists_url": "https://api.github.com/users/zw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zw/subscriptions",
      "organizations_url": "https://api.github.com/users/zw/orgs",
      "repos_url": "https://api.github.com/users/zw/repos",
      "events_url": "https://api.github.com/users/zw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zw/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e5e00bf4c6bc6501e9d42657e8ccebecc5543d3"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "01625b843899774f7d54c5daea27d3159ef37f29",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0beae8b8215ca696fb9e0eeb6022d13a215a283/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0beae8b8215ca696fb9e0eeb6022d13a215a283/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=b0beae8b8215ca696fb9e0eeb6022d13a215a283",
        "patch": "@@ -68,6 +68,5 @@ Description: peer-to-peer digital currency - standalone transaction tool\n  check for double-spending.\n  .\n  This package provides bitcoin-tx, a command-line transaction creation\n- tool with minimal dependencies which can be used without a bitcoin\n- daemon.  Some means of exchanging minimal transaction data with peers\n- is still required.\n+ tool which can be used without a bitcoin daemon.  Some means of\n+ exchanging minimal transaction data with peers is still required."
      }
    ]
  },
  {
    "sha": "93254172ce44cb450d03ccfc48c35c1ced6d13cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzI1NDE3MmNlNDRjYjQ1MGQwM2NjZmM0OGMzNWMxY2VkNmQxM2Nj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T12:30:46Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T12:30:46Z"
      },
      "message": "depends: fix platform specific packages variable\n\nprefix instead of postfix",
      "tree": {
        "sha": "69ca2a131e306cb207fd75684b901c3af6014804",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69ca2a131e306cb207fd75684b901c3af6014804"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93254172ce44cb450d03ccfc48c35c1ced6d13cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93254172ce44cb450d03ccfc48c35c1ced6d13cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93254172ce44cb450d03ccfc48c35c1ced6d13cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93254172ce44cb450d03ccfc48c35c1ced6d13cc/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "02cc1884203aeebdf1b431efd4f194ac7addbf30",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93254172ce44cb450d03ccfc48c35c1ced6d13cc/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93254172ce44cb450d03ccfc48c35c1ced6d13cc/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=93254172ce44cb450d03ccfc48c35c1ced6d13cc",
        "patch": "@@ -1,6 +1,6 @@\n packages:=boost openssl libevent\n-packages_darwin:=zeromq\n-packages_linux:=zeromq\n+darwin_packages:=zeromq\n+linux_packages:=zeromq\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf"
      }
    ]
  },
  {
    "sha": "cb71316a1b995823ce7a5f588230596f7b3da28e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjcxMzE2YTFiOTk1ODIzY2U3YTVmNTg4MjMwNTk2ZjdiM2RhMjhl",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-17T13:45:02Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-17T13:45:02Z"
      },
      "message": "Merge pull request #6684\nFixes #6682",
      "tree": {
        "sha": "69ca2a131e306cb207fd75684b901c3af6014804",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69ca2a131e306cb207fd75684b901c3af6014804"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb71316a1b995823ce7a5f588230596f7b3da28e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVfrD8iWzCDIBeCsvAQKEpg/7BsxG7fXJ9SgnSStC+v1A8dgv6OSir97d\nG2e8OEtQsj1lKPsmRR4Qbksu/j9lhH5Q/anZKid1/e6/1C2mjtoOS6v4vF//SfMv\nm0Bwfh8+W8KA1YhjxWgcGYa88Fen4Kz/Rz7tewTDxvy4KDJ7HunCqcxP2uEFOJGu\nORn6WqyT3QywoSvfFyxKnbxi5HtsAlbrGlkqbrPd5CzaE7skKBI6Gzrl2UfEb1UU\nh0dWV/ZsA6OS9Lj9tNlJGYy53rls5esBojhclNP6jpYiz5DixNdIBOA4Q+p0MlmM\nmq5co/+zPcWaPLDA4Am2usQyeF2cxUcm96yjzNOC1Xl1kekdBNQgJe4QRgIvS/0g\nsndGCqeaYeCSct+AyrwhERiesnRwy0/LQUoQ04RrWkU8BeWAkTTrO8d2fQXRl+qt\nf/ovEdyg1RyP1KlGvrxf0/T6ELRbd5CUwSDG1Spgjsg9A8fFfm7Y+nuaST1YdflJ\nHH0DqlxTBpjs7dsk2rpHASUDFLe8cPjMSX9NnWsimUZ4dLk6Bsc2y8QF4YjeIJoo\nxWE+vRMdByicH6JK6x911rvL814YYrIDQJFPzUz2ecr0+kuXRVHyh8qPcQ/sKU9i\n9QcbMl5PWPM2KySo9rhlGE9Hv8Ia109zyQTJ/nOi5kp9CWiw5uSDRlri7bozGxMp\nccj2s81+FRQ=\n=42To\n-----END PGP SIGNATURE-----",
        "payload": "tree 69ca2a131e306cb207fd75684b901c3af6014804\nparent 0143a1f228c3447ae2e025c697b0ad53a0d8d306\nparent 93254172ce44cb450d03ccfc48c35c1ced6d13cc\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442497502 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442497502 -0400\n\nMerge pull request #6684\nFixes #6682\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb71316a1b995823ce7a5f588230596f7b3da28e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb71316a1b995823ce7a5f588230596f7b3da28e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb71316a1b995823ce7a5f588230596f7b3da28e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      },
      {
        "sha": "93254172ce44cb450d03ccfc48c35c1ced6d13cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93254172ce44cb450d03ccfc48c35c1ced6d13cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93254172ce44cb450d03ccfc48c35c1ced6d13cc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "02cc1884203aeebdf1b431efd4f194ac7addbf30",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb71316a1b995823ce7a5f588230596f7b3da28e/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb71316a1b995823ce7a5f588230596f7b3da28e/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=cb71316a1b995823ce7a5f588230596f7b3da28e",
        "patch": "@@ -1,6 +1,6 @@\n packages:=boost openssl libevent\n-packages_darwin:=zeromq\n-packages_linux:=zeromq\n+darwin_packages:=zeromq\n+linux_packages:=zeromq\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf"
      }
    ]
  },
  {
    "sha": "312cfe63a347b40f913018c852b1182a8e576428",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTJjZmU2M2EzNDdiNDBmOTEzMDE4Yzg1MmIxMTgyYThlNTc2NDI4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T13:45:14Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T13:45:14Z"
      },
      "message": "fix rpc-tests.sh\n\n`${testScripts[@]}` now does split up `testscript --agument` in two elements pushed to the array (`testscript` and `--agument`).",
      "tree": {
        "sha": "a25b773831c78bd24d78193c6216e670b979f60c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a25b773831c78bd24d78193c6216e670b979f60c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/312cfe63a347b40f913018c852b1182a8e576428",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/312cfe63a347b40f913018c852b1182a8e576428",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/312cfe63a347b40f913018c852b1182a8e576428",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/312cfe63a347b40f913018c852b1182a8e576428/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2f2b9d86db6cc33d6370cd74c0b0b2705b13a1e4",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/312cfe63a347b40f913018c852b1182a8e576428/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/312cfe63a347b40f913018c852b1182a8e576428/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=312cfe63a347b40f913018c852b1182a8e576428",
        "patch": "@@ -60,7 +60,7 @@ testScriptsExt=(\n );\n \n if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-  testScripts=( ${testScripts[@]} 'zmq_test.py' )\n+  testScripts+=('zmq_test.py')\n fi\n \n extArg=\"-extended\""
      }
    ]
  },
  {
    "sha": "9da3de80aea23a1c3623f737404dcdabf5f78c0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGEzZGU4MGFlYTIzYTFjMzYyM2Y3Mzc0MDRkY2RhYmY1Zjc4YzBj",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-17T13:52:51Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-17T13:52:51Z"
      },
      "message": "Merge pull request #6685",
      "tree": {
        "sha": "654c633d208a6da98d9d4da8d40d09d431bcf22c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/654c633d208a6da98d9d4da8d40d09d431bcf22c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9da3de80aea23a1c3623f737404dcdabf5f78c0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVfrFvSWzCDIBeCsvAQIFUQ//T06nek+SjU67CWTEEMQXGd1tvWVjT9J0\n/ydDVRqMKeJGYp4cifUqy2YsE7VGB/bU0lMVN/dWFBiGGwN8ttlzJ3+wk29OgHMs\nyAaEiz6X0J3luEGNyqq0pjW7c0Fl50n+YQBVPeZIXr0ime1Ihc82/cmgbJHpat4/\nimrbaEuLHdAIzLCYmpRDW2aE9yVMsWYJEnBAUly5hdF5RknMGYoRfiQ0Y5CAvciB\nfAGXzF7KDH8sQlxF8Yt9RwF7QWgJ3yOf116nP5YvqRkxFib8Uhin8RN9VmL+Japc\nPa4wPF0zN0BgAcrQkiciXAbDTH/jjY6zCYbpcY17swwQP+NvhStGVVtzaLFdQG7d\n6O0347aYhPkdVrPCa+3ELvhErU4wT/v3rrkq2XQh4pqQd646yY1m+ZFHkTToMyEq\nyvRM0Un9Es7gnhtj0SYS1v6Z/gIqpCQ0Q2EvfJ17wMBQdcSlUvVDp4+Lem+L2pB6\nKJR0HfqYSaHPBtEQ1CQCYhIJNfb4J6u7i6EVMTfaK1i14PGskms2Nz1RfuaVPYwk\nXCcpbFLqskEmTGeVy3AK2nVQfScLkJ9V+FNKnZhpkMvjqXlijfjazYy9ePohgI2i\nKKB4pe6TeKCiIJbPwSJZVLi5BY6v0iXvQyBoPbLWyw7B4u2XkoHmKCy+sXLBp1w0\np7scVgIXe6M=\n=lutw\n-----END PGP SIGNATURE-----",
        "payload": "tree 654c633d208a6da98d9d4da8d40d09d431bcf22c\nparent cb71316a1b995823ce7a5f588230596f7b3da28e\nparent 312cfe63a347b40f913018c852b1182a8e576428\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442497971 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442497971 -0400\n\nMerge pull request #6685\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da3de80aea23a1c3623f737404dcdabf5f78c0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9da3de80aea23a1c3623f737404dcdabf5f78c0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da3de80aea23a1c3623f737404dcdabf5f78c0c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "cb71316a1b995823ce7a5f588230596f7b3da28e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb71316a1b995823ce7a5f588230596f7b3da28e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb71316a1b995823ce7a5f588230596f7b3da28e"
      },
      {
        "sha": "312cfe63a347b40f913018c852b1182a8e576428",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/312cfe63a347b40f913018c852b1182a8e576428",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/312cfe63a347b40f913018c852b1182a8e576428"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2f2b9d86db6cc33d6370cd74c0b0b2705b13a1e4",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9da3de80aea23a1c3623f737404dcdabf5f78c0c/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9da3de80aea23a1c3623f737404dcdabf5f78c0c/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=9da3de80aea23a1c3623f737404dcdabf5f78c0c",
        "patch": "@@ -60,7 +60,7 @@ testScriptsExt=(\n );\n \n if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-  testScripts=( ${testScripts[@]} 'zmq_test.py' )\n+  testScripts+=('zmq_test.py')\n fi\n \n extArg=\"-extended\""
      }
    ]
  },
  {
    "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4M2YwZTIyNDk3NjU1MjBiOWY5NzRjNDU4MTFiNTNjOTBiMGQwZWRl",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-17T15:44:55Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2015-09-17T15:44:55Z"
      },
      "message": "Temporarily disable ZMQ tests in bitcoin test suite",
      "tree": {
        "sha": "90ac4684d9d4e5a1269fe96494294dfd3dfd7e8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90ac4684d9d4e5a1269fe96494294dfd3dfd7e8e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVfrgDyWzCDIBeCsvAQISMhAAuJiF/54I5LYVKHB4+Qj+0CZYlnXVc5vA\n4pGLuEdFNWvhL0VxN8LBkXUocvpNDZQJg8dUkQuxo/vbUhWszZmVtHAYWSJ3IuKE\nCW1cG9mrsJVVrcWBaQjH8yZtRBHchoXBiI+ygDiBRT9t40i6xBUcewFBP8ySZCIK\nBo8zphC7wGJkPtWqztlTkTYh4Jhub/KwgYSTOJX1RSGQXJOQm1ULyfUe1XLBxF4V\nUW1qwn2OpPWOfBkSEjpNRceRih7XmNSbqa3kc/7BXfrb0S7MjtxWOE5PctBfoDzR\njDp9/lrm07cQQufs4+Sdn5t/d7cM7H82NVc94YNjHiHQ8E71MOx9yz7FQ4wjx7wO\n3diT4WlInTpt1jDLrc3aJm4rPdyvPgYdcpMrpG5n+JDNhsSn4VWz+Ek7S4aEefXP\n+OParDIhXWxmXcI8yuhIl9P8vm0yN98XCa5+4CAhRD6NcVjmwrS5u1lApQcicV6F\nw1uQgsagTKafYHKUYUHj2qP7/rVJWPQk5VDcroMNdERmJArF6cRloWsGKcbrybrc\nzaNjjemZ1PdBh75V0afWpRnH2fx5/h/vSOHXX4QMtRcV2nmOlL6i7KStQmhfr6z/\nF1Q3TQqNuVXFLQhJpQh/5JmSK60OEnPEnjs0G49TjLyEbLLiBwNUk+7P4zDYfuse\nGmk0EP4tvhQ=\n=bh13\n-----END PGP SIGNATURE-----",
        "payload": "tree 90ac4684d9d4e5a1269fe96494294dfd3dfd7e8e\nparent 9da3de80aea23a1c3623f737404dcdabf5f78c0c\nauthor Jeff Garzik <jgarzik@bitpay.com> 1442504695 -0400\ncommitter Jeff Garzik <jgarzik@bitpay.com> 1442504695 -0400\n\nTemporarily disable ZMQ tests in bitcoin test suite\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9da3de80aea23a1c3623f737404dcdabf5f78c0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da3de80aea23a1c3623f737404dcdabf5f78c0c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9da3de80aea23a1c3623f737404dcdabf5f78c0c"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b97d97b55314f61240467297a7f338a3a735bc64",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83f0e2249765520b9f974c45811b53c90b0d0ede/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83f0e2249765520b9f974c45811b53c90b0d0ede/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=83f0e2249765520b9f974c45811b53c90b0d0ede",
        "patch": "@@ -59,9 +59,9 @@ testScriptsExt=(\n     'p2p-acceptblock.py'\n );\n \n-if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-  testScripts+=('zmq_test.py')\n-fi\n+#if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n+#  testScripts+=('zmq_test.py')\n+#fi\n \n extArg=\"-extended\"\n passOn=${@#$extArg}"
      }
    ]
  },
  {
    "sha": "110a1fd7271eb90448498302e2d95dab770513d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTBhMWZkNzI3MWViOTA0NDg0OTgzMDJlMmQ5NWRhYjc3MDUxM2Q2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T18:04:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T18:04:34Z"
      },
      "message": "enable zmq-test in rpc-tests.sh",
      "tree": {
        "sha": "654c633d208a6da98d9d4da8d40d09d431bcf22c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/654c633d208a6da98d9d4da8d40d09d431bcf22c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/110a1fd7271eb90448498302e2d95dab770513d6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/110a1fd7271eb90448498302e2d95dab770513d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/110a1fd7271eb90448498302e2d95dab770513d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/110a1fd7271eb90448498302e2d95dab770513d6/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2f2b9d86db6cc33d6370cd74c0b0b2705b13a1e4",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/110a1fd7271eb90448498302e2d95dab770513d6/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/110a1fd7271eb90448498302e2d95dab770513d6/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=110a1fd7271eb90448498302e2d95dab770513d6",
        "patch": "@@ -59,9 +59,9 @@ testScriptsExt=(\n     'p2p-acceptblock.py'\n );\n \n-#if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-#  testScripts+=('zmq_test.py')\n-#fi\n+if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n+  testScripts+=('zmq_test.py')\n+fi\n \n extArg=\"-extended\"\n passOn=${@#$extArg}"
      }
    ]
  },
  {
    "sha": "c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzNhOGVhMjcxOGI1OTdkZmJiODk0OGRlYjhkMTRhMGQ3NGM0ZDhm",
    "commit": {
      "author": {
        "name": "Midnight Magic",
        "email": "midnightmagic@users.noreply.github.com",
        "date": "2015-09-17T21:17:26Z"
      },
      "committer": {
        "name": "Midnight Magic",
        "email": "midnightmagic@users.noreply.github.com",
        "date": "2015-09-17T21:25:41Z"
      },
      "message": "Clarifying offline build process using gbuild --url and noting it is not\ndone automatically.\n\nAt some point along the line, fully offline builds were no longer happening\nwhen strictly following the release-process.md instructions.\n\nWe should ensure that users who might want to torify or build offline need\nto take extra steps to remain offline.\n\nAlso, corrections to build process: including gverify examples for new builders.",
      "tree": {
        "sha": "24fbdaef3201722e3854c621a3ac0a0361267324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24fbdaef3201722e3854c621a3ac0a0361267324"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQQcBAABAgAGBQJV+y/WAAoJECjfJyTyQdju2ysgAIkYYb0NKGeuebxWsGxTGPDj\nLxw45dXcDZ7TUTiBv1OxyTGbl6HJQhjLyg+ESUBTF4j9tTlh5CykfvzyrW6f0Edn\nnryqk6Vd6TSFCw/P6m1ll4KNii0JeXTcNczSXzP2KNBEaPOizjqGSDWCpb7Goe7/\nkwBkXpdBm4onu4fino1L4yCj79TcOglrNW/zBwmnPQwNEBNQmABsDUMbqqn+0vLp\njbSYdqbrmhnSRUFcSIqVxU5GvHUQz9Gj340TTOFjeMySJrTV+ueXf+IABgiNNzXz\nLxPeN3Dg0rIqlOB5FCqUr0TtqhLqdvwWBHzTPmibeopeQuE7aHZG0va3XE5N58sG\n8stuDE0+V39Hptj6ObGfYNrjopiiue/VkTXeRLkyJelBQGgWPwyuebx+BR3n143R\nTBBsonjUm939DcY3avixn/zcv0TvJACLh//w0aHrNfpk1cgxO4jz/0EAF/yGF/9T\nb1O7oMs4Seg5KN6zfV3aydYZz53XxDeUUSORG7Q/En0wKh9v2YdjTHJedmzudwX5\nWFr15YQgR9P1/uI6TmgXci7dbj/VbqbrXlyycoGFzAOv9vbpVIgj1d1sNPF5wCQR\nVXdao3g2StwMjeqteCTFD0WkRQX//GKnwf42apCFJ/8G7I9vRFmBtnrXrjVgLkyL\nXNVJYxQujLjX1gryaMWlew2bWLJYVqAyiaF5/+A9i4oQXLlS2e5cC53OaaevwmOz\nylbRf5TAEijyzInAc/a4VQ/1pp3QF67whL7+nJJBD1nowTn8Rma0RhSlM0P0Eax2\nj2PD4mZJpAZPk2kbgiO/km9sw/b4+xPtimIluchlnNWpWbXOh4/+rGPVGPAiNCMM\nvaprbBiAbwri3yqP22LGhEDKXQLwShYwjRFj6ciaYKnQ3IuGJhP2HX98TTvQ/NP1\nxdAlIhZDAVhHSEv6l3SEwvc1wx7lJlXq1/iAN64oIVBMxSFocM4En2TUMPcCzcso\n4pEAPdm29hHn+nVf91hJBMsXXcrlv6uvy22ofLxYUjZHWq0LWDxCX78pjN+yxCDR\nH+o5nmHjc7ZXrMndvbxBhxH5sJlLkwo4VsSVD59AElhJx/2osVSuDqXTjVz1WaMR\n5K5N12+/bjH8u7wxrXwS9Se4HrOS7vdLKQE9Ty1t8abbQJLs0LHG1s770FbNxbWq\nvW7D2GHHORfeAnvi/ShUewDUswCRxoWYEAmuyRvraecEnkejeiSzO6LwhdH8B93I\nwU0wIefn/CQRcSZwglx2L8nLorba1z8zqIzzwuXi8040HDzrjf7yhNBmQssd3TTH\n6W9B3oXQd2LFhc+KUHh3yO/pZezF9Snd1aXQKwq/O4Vl8EVJPuhUrsGPJMJHVDU=\n=6SZm\n-----END PGP SIGNATURE-----",
        "payload": "tree 24fbdaef3201722e3854c621a3ac0a0361267324\nparent 83f0e2249765520b9f974c45811b53c90b0d0ede\nauthor Midnight Magic <midnightmagic@users.noreply.github.com> 1442524646 -0700\ncommitter Midnight Magic <midnightmagic@users.noreply.github.com> 1442525141 -0700\n\nClarifying offline build process using gbuild --url and noting it is not\ndone automatically.\n\nAt some point along the line, fully offline builds were no longer happening\nwhen strictly following the release-process.md instructions.\n\nWe should ensure that users who might want to torify or build offline need\nto take extra steps to remain offline.\n\nAlso, corrections to build process: including gverify examples for new builders.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/comments",
    "author": {
      "login": "midnightmagic",
      "id": 607777,
      "node_id": "MDQ6VXNlcjYwNzc3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/607777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/midnightmagic",
      "html_url": "https://github.com/midnightmagic",
      "followers_url": "https://api.github.com/users/midnightmagic/followers",
      "following_url": "https://api.github.com/users/midnightmagic/following{/other_user}",
      "gists_url": "https://api.github.com/users/midnightmagic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/midnightmagic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/midnightmagic/subscriptions",
      "organizations_url": "https://api.github.com/users/midnightmagic/orgs",
      "repos_url": "https://api.github.com/users/midnightmagic/repos",
      "events_url": "https://api.github.com/users/midnightmagic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/midnightmagic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "midnightmagic",
      "id": 607777,
      "node_id": "MDQ6VXNlcjYwNzc3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/607777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/midnightmagic",
      "html_url": "https://github.com/midnightmagic",
      "followers_url": "https://api.github.com/users/midnightmagic/followers",
      "following_url": "https://api.github.com/users/midnightmagic/following{/other_user}",
      "gists_url": "https://api.github.com/users/midnightmagic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/midnightmagic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/midnightmagic/subscriptions",
      "organizations_url": "https://api.github.com/users/midnightmagic/orgs",
      "repos_url": "https://api.github.com/users/midnightmagic/repos",
      "events_url": "https://api.github.com/users/midnightmagic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/midnightmagic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede"
      }
    ],
    "stats": {
      "total": 127,
      "additions": 106,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b434ae8a5b2e2d2eefde84629573433e286d1511",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 56,
        "deletions": 4,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
        "patch": "@@ -330,10 +330,11 @@ There will be a lot of warnings printed during the build of the image. These can\n Getting and building the inputs\n --------------------------------\n \n-Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change) \n-in the bitcoin repository to install sources which require manual intervention. Also follow\n-the next step: 'Seed the Gitian sources cache', which will fetch all the necessary source \n-files to allow gitian to work offline.\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n+in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n+manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n+and offline git repositories' which will fetch the remaining files required for building \n+offline.\n \n Building Bitcoin\n ----------------\n@@ -391,6 +392,57 @@ COMMIT=2014_03_windows_unicode_path\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n+Building fully offline\n+-----------------------\n+\n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository \n+and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or \n+manually disabling gitian-builder's use of apt-get to update the VM build environment.\n+\n+To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n+files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n+plain archive.ubuntu.com: us.archive.ubuntu.com works.\n+\n+So, if you use LXC:\n+\n+```bash\n+export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n+export USE_LXC=1\n+cd /path/to/gitian-builder\n+./libexec/make-clean-vm --suite precise --arch amd64\n+\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get update\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \\\n+  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \n+```\n+\n+And then set offline mode for apt-cacher-ng:\n+\n+```\n+/etc/apt-cacher-ng/acng.conf\n+[...]\n+Offlinemode: 1\n+[...]\n+\n+service apt-cacher-ng restart\n+```\n+\n+Then when building, override the remote URLs that gbuild would otherwise pull from the gitian descriptors::\n+```bash\n+\n+cd /some/root/path/\n+git clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\n+BTCPATH=/some/root/path/bitcoin.git\n+SIGPATH=/some/root/path/bitcoin-detached-sigs.git\n+\n+./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+```\n+\n Signing externally\n -------------------\n "
      },
      {
        "sha": "1bfdb8fabded31e8fe19d9a56e3f3f9f1e9a1814",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 50,
        "deletions": 17,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
        "patch": "@@ -6,39 +6,54 @@ Release Process\n \n * * *\n \n-###update (commit) version in sources\n+###first time only or for new builders, check out the source in the following directory hierarchy\n \n+\tcd /path/to/your/toplevel/build\n+\tgit clone https://github.com/bitcoin/gitian.sigs.git\n+\tgit clone https://github.com/devrandom/gitian-builder.git\n+\tgit clone https://github.com/bitcoin/bitcoin.git\n+\n+###for bitcoin maintainers/release engineers, update (commit) version in sources\n+\n+\tpushd ./bitcoin\n \tcontrib/verifysfbinaries/verify.sh\n \tdoc/README*\n \tshare/setup.nsi\n \tsrc/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n \n-###tag version in git\n+###for bitcoin maintainers/release engineers, tag version in git\n \n \tgit tag -s v(new version, e.g. 0.8.0)\n \n-###write release notes. git shortlog helps a lot, for example:\n+###for bitcoin maintainers/release engineers, write release notes. git shortlog helps a lot, for example:\n \n \tgit shortlog --no-merges v(current version, e.g. 0.7.2)..v(new version, e.g. 0.8.0)\n+\tpopd\n \n * * *\n \n-###update gitian\n-\n- In order to take advantage of the new caching features in gitian, be sure to update to a recent version (`e9741525c` or later is recommended)\n+###update gitian, gitian.sigs, checkout bitcoin version, and perform gitian builds\n \n-###perform gitian builds\n-\n- From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n+ To ensure your gitian descriptors are accurate for direct reference for gbuild, below, run the following from a directory containing the bitcoin source:\n   \n+\tpushd ./bitcoin\n \texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n-\tpushd ./bitcoin\n \tgit checkout v${VERSION}\n \tpopd\n+\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures:\n+\n+\tpushd ./gitian.sigs\n+\tgit pull\n+\tpopd\n+\n+  Ensure your gitian-builder sources are up-to-date to take advantage of the new caching features of gitian (`e9741525c` or later is recommended)\n+\n \tpushd ./gitian-builder\n+\tgit pull\n \n-###fetch and build inputs: (first time, or when dependency versions change)\n+###fetch and create inputs: (first time, or when dependency versions change)\n  \n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n@@ -52,28 +67,44 @@ Release Process\n  \n \ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n-###Optional: Seed the Gitian sources cache\n+###Optional: Seed the Gitian sources cache and offline git repositories\n \n-  By default, gitian will fetch source files as needed. For offline builds, they can be fetched ahead of time:\n+By default, gitian will fetch source files as needed. To cache them ahead of time:\n \n \tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n-  Only missing files will be fetched, so this is safe to re-run for each build.\n+Only missing files will be fetched, so this is safe to re-run for each build.\n+\n+Clone the detached-sigs repository:\n+\n+\tpopd\n+\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\tpushd ./bitcoin-builder\n+\n+NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs.\n+For example: ./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+The following gbuild invocations DO NOT DO THIS by default.\n \n-###Build Bitcoin Core for Linux, Windows, and OS X:\n+###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n   \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \tmv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \tmv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n \tmv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \tmv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n \tmv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n \tpopd\n+\n   Build output expected:\n \n   1. source tarball (bitcoin-${VERSION}.tar.gz)\n@@ -98,19 +129,21 @@ Commit your signature to gitian.sigs:\n \tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n \tDetached signatures will then be committed to the bitcoin-detached-sigs repository, which can be combined with the unsigned apps to create signed binaries.\n \n-  Create the signed OSX binary:\n+  Create (and optionally verify) the signed OSX binary:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n \tmv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n \tpopd\n \n-  Create the signed Windows binaries:\n+  Create (and optionally verify) the signed Windows binaries:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n \tmv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n \tmv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n \tpopd"
      }
    ]
  },
  {
    "sha": "131c23d02733c547975844226c1fe0dd4c87211c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzFjMjNkMDI3MzNjNTQ3OTc1ODQ0MjI2YzFmZTBkZDRjODcyMTFj",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-09-17T21:43:34Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-09-18T00:26:28Z"
      },
      "message": "Fix locking in GetTransaction.\n\nGetTransaction needs to lock cs_main until ReadBlockFromDisk completes, the data inside CBlockIndex's can change since pruning.  This lock was held by all calls to GetTransaction except rest_tx.",
      "tree": {
        "sha": "d1673e355f6c0eb43ff25e279066b24af3f001cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1673e355f6c0eb43ff25e279066b24af3f001cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/131c23d02733c547975844226c1fe0dd4c87211c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c23d02733c547975844226c1fe0dd4c87211c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/131c23d02733c547975844226c1fe0dd4c87211c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c23d02733c547975844226c1fe0dd4c87211c/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 33,
      "deletions": 35
    },
    "files": [
      {
        "sha": "0b5b52b4999b58b1a1f862b9596f6e5db8b24223",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 35,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131c23d02733c547975844226c1fe0dd4c87211c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131c23d02733c547975844226c1fe0dd4c87211c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=131c23d02733c547975844226c1fe0dd4c87211c",
        "patch": "@@ -954,47 +954,45 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow)\n {\n     CBlockIndex *pindexSlow = NULL;\n+\n+    LOCK(cs_main);\n+\n+    if (mempool.lookup(hash, txOut))\n     {\n-        LOCK(cs_main);\n-        {\n-            if (mempool.lookup(hash, txOut))\n-            {\n-                return true;\n-            }\n-        }\n+        return true;\n+    }\n \n-        if (fTxIndex) {\n-            CDiskTxPos postx;\n-            if (pblocktree->ReadTxIndex(hash, postx)) {\n-                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-                if (file.IsNull())\n-                    return error(\"%s: OpenBlockFile failed\", __func__);\n-                CBlockHeader header;\n-                try {\n-                    file >> header;\n-                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                    file >> txOut;\n-                } catch (const std::exception& e) {\n-                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n-                }\n-                hashBlock = header.GetHash();\n-                if (txOut.GetHash() != hash)\n-                    return error(\"%s: txid mismatch\", __func__);\n-                return true;\n+    if (fTxIndex) {\n+        CDiskTxPos postx;\n+        if (pblocktree->ReadTxIndex(hash, postx)) {\n+            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+            if (file.IsNull())\n+                return error(\"%s: OpenBlockFile failed\", __func__);\n+            CBlockHeader header;\n+            try {\n+                file >> header;\n+                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                file >> txOut;\n+            } catch (const std::exception& e) {\n+                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n             }\n+            hashBlock = header.GetHash();\n+            if (txOut.GetHash() != hash)\n+                return error(\"%s: txid mismatch\", __func__);\n+            return true;\n         }\n+    }\n \n-        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-            int nHeight = -1;\n-            {\n-                CCoinsViewCache &view = *pcoinsTip;\n-                const CCoins* coins = view.AccessCoins(hash);\n-                if (coins)\n-                    nHeight = coins->nHeight;\n-            }\n-            if (nHeight > 0)\n-                pindexSlow = chainActive[nHeight];\n+    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n+        int nHeight = -1;\n+        {\n+            CCoinsViewCache &view = *pcoinsTip;\n+            const CCoins* coins = view.AccessCoins(hash);\n+            if (coins)\n+                nHeight = coins->nHeight;\n         }\n+        if (nHeight > 0)\n+            pindexSlow = chainActive[nHeight];\n     }\n \n     if (pindexSlow) {"
      }
    ]
  },
  {
    "sha": "8bc1b3a1f37b86014bca583f8e33a5dd75772019",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YmMxYjNhMWYzN2I4NjAxNGJjYTU4M2Y4ZTMzYTVkZDc1NzcyMDE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T03:43:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T03:46:40Z"
      },
      "message": "Merge pull request #6422\n\nc73a8ea Clarifying offline build process using gbuild --url and noting it is not done automatically. (Midnight Magic)",
      "tree": {
        "sha": "24fbdaef3201722e3854c621a3ac0a0361267324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24fbdaef3201722e3854c621a3ac0a0361267324"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV+4khAAoJEHSBCwEjRsmmPCcH/3Y7PVK0WpOzser7TSCb9ybn\nCjsl7GRpQvoyoyuHfXPeEjQe2pnoaNFH3nYA1ocpWJKlv2v7AeWtt/CbKOjhWlGE\nVurMlb2BOxa+FnNw5xUB7nu9zIdmgC8ts1zwiuRlxy7zOi6Z0wNyJPhT2qzz5IGJ\nKgewBSelxzJTWmqgP697dldpdL7jeOrfSBps0cTXwsFUZZSvCRUQbsSEx8cJ4ey8\nS9znc1Mj0tIbWEkmHkD+RESAdK4DnICxssCOQANTJTopfC+o/dXOk1hADqI+K/5h\ncCQ3KcG6GHKRVy4IoEZyikxPGlD28JcJkxRTJYil49dB36kkbAuyQkibR4DoZuQ=\n=79Jc\n-----END PGP SIGNATURE-----",
        "payload": "tree 24fbdaef3201722e3854c621a3ac0a0361267324\nparent 83f0e2249765520b9f974c45811b53c90b0d0ede\nparent c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442547800 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442548000 +0200\n\nMerge pull request #6422\n\nc73a8ea Clarifying offline build process using gbuild --url and noting it is not done automatically. (Midnight Magic)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede"
      },
      {
        "sha": "c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f"
      }
    ],
    "stats": {
      "total": 127,
      "additions": 106,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b434ae8a5b2e2d2eefde84629573433e286d1511",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 56,
        "deletions": 4,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bc1b3a1f37b86014bca583f8e33a5dd75772019/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bc1b3a1f37b86014bca583f8e33a5dd75772019/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "patch": "@@ -330,10 +330,11 @@ There will be a lot of warnings printed during the build of the image. These can\n Getting and building the inputs\n --------------------------------\n \n-Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change) \n-in the bitcoin repository to install sources which require manual intervention. Also follow\n-the next step: 'Seed the Gitian sources cache', which will fetch all the necessary source \n-files to allow gitian to work offline.\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n+in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n+manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n+and offline git repositories' which will fetch the remaining files required for building \n+offline.\n \n Building Bitcoin\n ----------------\n@@ -391,6 +392,57 @@ COMMIT=2014_03_windows_unicode_path\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n+Building fully offline\n+-----------------------\n+\n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository \n+and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or \n+manually disabling gitian-builder's use of apt-get to update the VM build environment.\n+\n+To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n+files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n+plain archive.ubuntu.com: us.archive.ubuntu.com works.\n+\n+So, if you use LXC:\n+\n+```bash\n+export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n+export USE_LXC=1\n+cd /path/to/gitian-builder\n+./libexec/make-clean-vm --suite precise --arch amd64\n+\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get update\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \\\n+  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \n+```\n+\n+And then set offline mode for apt-cacher-ng:\n+\n+```\n+/etc/apt-cacher-ng/acng.conf\n+[...]\n+Offlinemode: 1\n+[...]\n+\n+service apt-cacher-ng restart\n+```\n+\n+Then when building, override the remote URLs that gbuild would otherwise pull from the gitian descriptors::\n+```bash\n+\n+cd /some/root/path/\n+git clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\n+BTCPATH=/some/root/path/bitcoin.git\n+SIGPATH=/some/root/path/bitcoin-detached-sigs.git\n+\n+./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+```\n+\n Signing externally\n -------------------\n "
      },
      {
        "sha": "1bfdb8fabded31e8fe19d9a56e3f3f9f1e9a1814",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 50,
        "deletions": 17,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bc1b3a1f37b86014bca583f8e33a5dd75772019/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bc1b3a1f37b86014bca583f8e33a5dd75772019/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "patch": "@@ -6,39 +6,54 @@ Release Process\n \n * * *\n \n-###update (commit) version in sources\n+###first time only or for new builders, check out the source in the following directory hierarchy\n \n+\tcd /path/to/your/toplevel/build\n+\tgit clone https://github.com/bitcoin/gitian.sigs.git\n+\tgit clone https://github.com/devrandom/gitian-builder.git\n+\tgit clone https://github.com/bitcoin/bitcoin.git\n+\n+###for bitcoin maintainers/release engineers, update (commit) version in sources\n+\n+\tpushd ./bitcoin\n \tcontrib/verifysfbinaries/verify.sh\n \tdoc/README*\n \tshare/setup.nsi\n \tsrc/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n \n-###tag version in git\n+###for bitcoin maintainers/release engineers, tag version in git\n \n \tgit tag -s v(new version, e.g. 0.8.0)\n \n-###write release notes. git shortlog helps a lot, for example:\n+###for bitcoin maintainers/release engineers, write release notes. git shortlog helps a lot, for example:\n \n \tgit shortlog --no-merges v(current version, e.g. 0.7.2)..v(new version, e.g. 0.8.0)\n+\tpopd\n \n * * *\n \n-###update gitian\n-\n- In order to take advantage of the new caching features in gitian, be sure to update to a recent version (`e9741525c` or later is recommended)\n+###update gitian, gitian.sigs, checkout bitcoin version, and perform gitian builds\n \n-###perform gitian builds\n-\n- From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n+ To ensure your gitian descriptors are accurate for direct reference for gbuild, below, run the following from a directory containing the bitcoin source:\n   \n+\tpushd ./bitcoin\n \texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n-\tpushd ./bitcoin\n \tgit checkout v${VERSION}\n \tpopd\n+\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures:\n+\n+\tpushd ./gitian.sigs\n+\tgit pull\n+\tpopd\n+\n+  Ensure your gitian-builder sources are up-to-date to take advantage of the new caching features of gitian (`e9741525c` or later is recommended)\n+\n \tpushd ./gitian-builder\n+\tgit pull\n \n-###fetch and build inputs: (first time, or when dependency versions change)\n+###fetch and create inputs: (first time, or when dependency versions change)\n  \n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n@@ -52,28 +67,44 @@ Release Process\n  \n \ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n-###Optional: Seed the Gitian sources cache\n+###Optional: Seed the Gitian sources cache and offline git repositories\n \n-  By default, gitian will fetch source files as needed. For offline builds, they can be fetched ahead of time:\n+By default, gitian will fetch source files as needed. To cache them ahead of time:\n \n \tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n-  Only missing files will be fetched, so this is safe to re-run for each build.\n+Only missing files will be fetched, so this is safe to re-run for each build.\n+\n+Clone the detached-sigs repository:\n+\n+\tpopd\n+\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\tpushd ./bitcoin-builder\n+\n+NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs.\n+For example: ./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+The following gbuild invocations DO NOT DO THIS by default.\n \n-###Build Bitcoin Core for Linux, Windows, and OS X:\n+###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n   \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \tmv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \tmv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n \tmv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \tmv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n \tmv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n \tpopd\n+\n   Build output expected:\n \n   1. source tarball (bitcoin-${VERSION}.tar.gz)\n@@ -98,19 +129,21 @@ Commit your signature to gitian.sigs:\n \tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n \tDetached signatures will then be committed to the bitcoin-detached-sigs repository, which can be combined with the unsigned apps to create signed binaries.\n \n-  Create the signed OSX binary:\n+  Create (and optionally verify) the signed OSX binary:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n \tmv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n \tpopd\n \n-  Create the signed Windows binaries:\n+  Create (and optionally verify) the signed Windows binaries:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n \tmv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n \tmv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n \tpopd"
      }
    ]
  },
  {
    "sha": "3802ae72670faf46c96d0f5f262e42cae92c5a42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODAyYWU3MjY3MGZhZjQ2Yzk2ZDBmNWYyNjJlNDJjYWU5MmM1YTQy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T04:03:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T04:03:17Z"
      },
      "message": "devtools: don't push if signing fails in github-merge\n\nIf a problem happens with gpg, exit prematurely so that it doesn't push\nthe branch upstream.",
      "tree": {
        "sha": "397ba6a3beaba5e1059ef37e386f33a6c4e830eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/397ba6a3beaba5e1059ef37e386f33a6c4e830eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3802ae72670faf46c96d0f5f262e42cae92c5a42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3802ae72670faf46c96d0f5f262e42cae92c5a42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3802ae72670faf46c96d0f5f262e42cae92c5a42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3802ae72670faf46c96d0f5f262e42cae92c5a42/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc1b3a1f37b86014bca583f8e33a5dd75772019"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "afb53f0390f0680a87cabd8c40d0034e1ba57405",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3802ae72670faf46c96d0f5f262e42cae92c5a42/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3802ae72670faf46c96d0f5f262e42cae92c5a42/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=3802ae72670faf46c96d0f5f262e42cae92c5a42",
        "patch": "@@ -161,7 +161,11 @@ if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n     cleanup\n     exit 1\n   else\n-    git commit -q --gpg-sign --amend --no-edit\n+    if ! git commit -q --gpg-sign --amend --no-edit; then\n+        echo \"Error signing, exiting.\"\n+        cleanup\n+        exit 1\n+    fi\n   fi\n else\n   echo \"Not signing off on merge, exiting.\""
      }
    ]
  },
  {
    "sha": "24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGNiN2M3YmJiYTIyNGRjYjczZmNmNjkyOTZmNWVmNDczNGY3NDVm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-18T11:51:28Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-18T11:52:36Z"
      },
      "message": "[QT] fix thin space word wrap line brake issue\n\nThe thin space QT html hack results in cut-off chars/nums after a line break.\n\nAvoid word wrap line breaks by using a smaller font and a line break before each alternative value)",
      "tree": {
        "sha": "f4913d3646b8408fc5527c7cfcaada411a836a2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4913d3646b8408fc5527c7cfcaada411a836a2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24cb7c7bbba224dcb73fcf69296f5ef4734f745f/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc1b3a1f37b86014bca583f8e33a5dd75772019"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a083a6f80edec30f0de5c60204085fced24f2805",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24cb7c7bbba224dcb73fcf69296f5ef4734f745f/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24cb7c7bbba224dcb73fcf69296f5ef4734f745f/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
        "patch": "@@ -312,9 +312,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n         if(u != model->getOptionsModel()->getDisplayUnit())\n             alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n     }\n-    questionString.append(tr(\"Total Amount %1 (= %2)\")\n+    questionString.append(tr(\"Total Amount %1<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n         .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n-        .arg(alternativeUnits.join(\" \" + tr(\"or\") + \" \")));\n+        .arg(alternativeUnits.join(\" \" + tr(\"or\") + \"<br />\")));\n \n     QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm send coins\"),\n         questionString.arg(formatted.join(\"<br />\")),"
      }
    ]
  },
  {
    "sha": "5ce43da03dff3ee655949cd53d952dace555e268",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2U0M2RhMDNkZmYzZWU2NTU5NDljZDUzZDk1MmRhY2U1NTVlMjY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-14T23:39:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T13:38:52Z"
      },
      "message": "init: Ignore SIGPIPE\n\nIgnore SIGPIPE on all non-win32 OSes, otherwise an unexpectedly disconnecting\nRPC client will terminate the application. This problem was introduced\nwith the libhttp-based RPC server.\n\nFixes #6660.",
      "tree": {
        "sha": "422f7bda106f05ed6234c11c0d42391a6ac00acf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/422f7bda106f05ed6234c11c0d42391a6ac00acf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ce43da03dff3ee655949cd53d952dace555e268",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ce43da03dff3ee655949cd53d952dace555e268",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ce43da03dff3ee655949cd53d952dace555e268",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ce43da03dff3ee655949cd53d952dace555e268/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "276effe5823a04f56158a4fb1ce3c46e15f8f7cb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ce43da03dff3ee655949cd53d952dace555e268/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ce43da03dff3ee655949cd53d952dace555e268/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5ce43da03dff3ee655949cd53d952dace555e268",
        "patch": "@@ -687,10 +687,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     sa_hup.sa_flags = 0;\n     sigaction(SIGHUP, &sa_hup, NULL);\n \n-#if defined (__SVR4) && defined (__sun)\n-    // ignore SIGPIPE on Solaris\n+    // Ignore SIGPIPE, otherwise it will bring the daemon down if the client closes unexpectedly\n     signal(SIGPIPE, SIG_IGN);\n-#endif\n #endif\n \n     // ********************************************************* Step 2: parameter interactions"
      }
    ]
  },
  {
    "sha": "d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWQxZDJlNjVhMWMzYjkxNDUyZDI0Mjg0MTBmNzAxYmNhMWU1M2Nj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T14:01:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T14:02:01Z"
      },
      "message": "Merge pull request #6692\n\n3802ae7 devtools: don't push if signing fails in github-merge (Wladimir J. van der Laan)",
      "tree": {
        "sha": "397ba6a3beaba5e1059ef37e386f33a6c4e830eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/397ba6a3beaba5e1059ef37e386f33a6c4e830eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV/BlZAAoJEHSBCwEjRsmmG60H/0DDqr8j1+3a1I6lHCxMDwkd\nXwAyCbDLS9ZRcSbIvlQu8O6fp2j+72OQZemgOorvWY70ipvraXrYW/Y4AXTWK8Qn\nbhXpBeUs/tgG9hPNGppTUMp6njpjkHydlo0d4YHQ5IMMz7UkwHDIBVeckr2sD/o+\nnxkMSlqQpAneFGF6fvsQakMIFAuNzfcSXyZaX+RAxIAyJC+MRv8Vdg4nkFvaj0Oc\nKHMaC/Rk9vxUMeXbNxk+CbDrZf4WITKZvuJWYW7MwN1qAzzOb+VdOS8ytb4wLvZ5\nXDZv5KVf0/5EbPW2x9XlAbEqbHnt7yaKjRLhZ8TSxHBSzZJoLuZOld1AorizCSg=\n=i+6z\n-----END PGP SIGNATURE-----",
        "payload": "tree 397ba6a3beaba5e1059ef37e386f33a6c4e830eb\nparent 8bc1b3a1f37b86014bca583f8e33a5dd75772019\nparent 3802ae72670faf46c96d0f5f262e42cae92c5a42\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442584905 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442584921 +0200\n\nMerge pull request #6692\n\n3802ae7 devtools: don't push if signing fails in github-merge (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1d2e65a1c3b91452d2428410f701bca1e53cc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc1b3a1f37b86014bca583f8e33a5dd75772019"
      },
      {
        "sha": "3802ae72670faf46c96d0f5f262e42cae92c5a42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3802ae72670faf46c96d0f5f262e42cae92c5a42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3802ae72670faf46c96d0f5f262e42cae92c5a42"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "afb53f0390f0680a87cabd8c40d0034e1ba57405",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5d1d2e65a1c3b91452d2428410f701bca1e53cc/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5d1d2e65a1c3b91452d2428410f701bca1e53cc/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
        "patch": "@@ -161,7 +161,11 @@ if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n     cleanup\n     exit 1\n   else\n-    git commit -q --gpg-sign --amend --no-edit\n+    if ! git commit -q --gpg-sign --amend --no-edit; then\n+        echo \"Error signing, exiting.\"\n+        cleanup\n+        exit 1\n+    fi\n   fi\n else\n   echo \"Not signing off on merge, exiting.\""
      }
    ]
  },
  {
    "sha": "2eb3183ca495c08212ff425b264b261428f278f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWIzMTgzY2E0OTVjMDgyMTJmZjQyNWIyNjRiMjYxNDI4ZjI3OGYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-18T15:52:18Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-18T16:14:42Z"
      },
      "message": "[doc] Merge doc/assets-attribution.md into contrib/debian/copyright\n\nEven though the SVG source files are never used in the QT client,\ntheir authors are mentioned in contrib/debian/copyright due to\nsimplicity.",
      "tree": {
        "sha": "aefb8f125e6fb8e114df64aa0be2ceb7d1432719",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aefb8f125e6fb8e114df64aa0be2ceb7d1432719"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2eb3183ca495c08212ff425b264b261428f278f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2eb3183ca495c08212ff425b264b261428f278f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2eb3183ca495c08212ff425b264b261428f278f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2eb3183ca495c08212ff425b264b261428f278f0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9be08b7fe2b6fc81afd0ff4a82d9f9637c92df9d"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 9,
      "deletions": 72
    },
    "files": [
      {
        "sha": "d119bbd1d0d7fdc4300c09b1a7ce392c46a55460",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2eb3183ca495c08212ff425b264b261428f278f0/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2eb3183ca495c08212ff425b264b261428f278f0/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=2eb3183ca495c08212ff425b264b261428f278f0",
        "patch": "@@ -49,11 +49,13 @@ License: MIT/Expat\n Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n+       src/qt/res/src/connect-*.svg\n Copyright: Marco Falke\n License: MIT/Expat\n Comment: Inspired by Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n Copyright: Jonas Schnelli\n License: MIT/Expat\n Comment:\n@@ -62,13 +64,17 @@ Files: src/qt/res/icons/clock*.png\n        src/qt/res/icons/eye_*.png\n        src/qt/res/icons/verify.png\n        src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+       src/qt/res/src/verify.svg\n Copyright: Stephan Hutching, Jonas Schnelli\n License: MIT/Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n-Files: src/qt/res/icons/bitcoin.*\n-       src/qt/res/icons/about.png\n+Files: src/qt/res/icons/about.png\n+       src/qt/res/icons/bitcoin.*\n        share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n Copyright: Bitboy, Jonas Schnelli\n License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 70,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2eb3183ca495c08212ff425b264b261428f278f0/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2eb3183ca495c08212ff425b264b261428f278f0/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=2eb3183ca495c08212ff425b264b261428f278f0",
        "patch": "@@ -1,70 +1 @@\n-The following is a list of assets used in the bitcoin source and their proper attribution.\n-\n-[Typicons/Stephen Hutchings](http://typicons.com)\n------------------------\n-\n-### Info\n-* Icon Pack: Typicons (http://typicons.com)\n-* Designer: Stephen Hutchings (and more)\n-* License: MIT\n-* Site: [https://github.com/stephenhutchings/typicons.font](https://github.com/stephenhutchings/typicons.font)\n-\n-### Assets Used\n-    src/qt/res/icons/add.png\n-    src/qt/res/icons/address-book.png\n-    src/qt/res/icons/configure.png\n-    src/qt/res/icons/debugwindow.png\n-    src/qt/res/icons/edit.png\n-    src/qt/res/icons/editcopy.png\n-    src/qt/res/icons/editpaste.png\n-    src/qt/res/icons/export.png\n-    src/qt/res/icons/eye.png\n-    src/qt/res/icons/filesave.png\n-    src/qt/res/icons/history.png\n-    src/qt/res/icons/info.png\n-    src/qt/res/icons/key.png\n-    src/qt/res/icons/lock_*.png\n-    src/qt/res/icons/open.png\n-    src/qt/res/icons/overview.png\n-    src/qt/res/icons/quit.png\n-    src/qt/res/icons/receive.png\n-    src/qt/res/icons/remove.png\n-    src/qt/res/icons/send.png\n-    src/qt/res/icons/synced.png\n-    src/qt/res/icons/transaction*.png\n-    src/qt/res/icons/tx_output.png\n-    src/qt/res/icons/warning.png\n-\n-Other\n------------------------\n-\n-### Info\n-* Designer: Jonas Schnelli, Bitboy, Stephen Hutchings, Marco Falke\n-* Bitcoin icon: Based on the original bitcoin logo from Bitboy\n-* Network connection icons: Marco Falke, inspired by flow-merge.svg from Stephen Hutchings\n-* Transaction-mined icon: Jonas Schnelli\n-* Other icons are based on Stephan Hutchings Typicons\n-* License: MIT\n-\n-### Assets Used\n-    src/qt/res/icons/about.png\n-    src/qt/res/icons/about_qt.png\n-    src/qt/res/icons/bitcoin.icns\n-    src/qt/res/icons/bitcoin.ico\n-    src/qt/res/icons/bitcoin.png\n-    src/qt/res/icons/clock*.png\n-    src/qt/res/icons/connect*.png\n-    src/qt/res/icons/eye_minus.png\n-    src/qt/res/icons/eye_plus.png\n-    src/qt/res/icons/verify.png\n-    src/qt/res/icons/tx_inout.png\n-    src/qt/res/icons/tx_input.png\n-    src/qt/res/icons/tx_mined.png\n-    src/qt/res/src/bitcoin.svg\n-    src/qt/res/src/clock_*.svg\n-    src/qt/res/src/connect-*.svg\n-    src/qt/res/src/mine.svg\n-    src/qt/res/src/qt.svg\n-    src/qt/res/src/tx_*.svg\n-    src/qt/res/src/transaction0.svg\n-    src/qt/res/src/verify.svg\n+The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      }
    ]
  },
  {
    "sha": "34628a18070064e75b35f28fd6a43d5c23832eb8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDYyOGExODA3MDA2NGU3NWIzNWYyOGZkNmE0M2Q1YzIzODMyZWI4",
    "commit": {
      "author": {
        "name": "Ashley Holman",
        "email": "dscvlt@gmail.com",
        "date": "2015-06-24T08:32:20Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-09-19T17:22:40Z"
      },
      "message": "TxMemPool: Change mapTx to a boost::multi_index_container\n\nIndexes on:\n- Tx Hash\n- Fee Rate (fee-per-kb)",
      "tree": {
        "sha": "e73c13d25d04212b5bbbb5b0c3829421f7616d6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e73c13d25d04212b5bbbb5b0c3829421f7616d6b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34628a18070064e75b35f28fd6a43d5c23832eb8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34628a18070064e75b35f28fd6a43d5c23832eb8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34628a18070064e75b35f28fd6a43d5c23832eb8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34628a18070064e75b35f28fd6a43d5c23832eb8/comments",
    "author": {
      "login": "ashleyholman",
      "id": 549484,
      "node_id": "MDQ6VXNlcjU0OTQ4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashleyholman",
      "html_url": "https://github.com/ashleyholman",
      "followers_url": "https://api.github.com/users/ashleyholman/followers",
      "following_url": "https://api.github.com/users/ashleyholman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashleyholman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
      "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
      "repos_url": "https://api.github.com/users/ashleyholman/repos",
      "events_url": "https://api.github.com/users/ashleyholman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5d1d2e65a1c3b91452d2428410f701bca1e53cc"
      }
    ],
    "stats": {
      "total": 159,
      "additions": 127,
      "deletions": 32
    },
    "files": [
      {
        "sha": "b2a356e52d4d29a6badec3bfb373fc7c75da2754",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34628a18070064e75b35f28fd6a43d5c23832eb8/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34628a18070064e75b35f28fd6a43d5c23832eb8/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=34628a18070064e75b35f28fd6a43d5c23832eb8",
        "patch": "@@ -158,10 +158,10 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         // This vector will be sorted into a priority queue:\n         vector<TxPriority> vecPriority;\n         vecPriority.reserve(mempool.mapTx.size());\n-        for (map<uint256, CTxMemPoolEntry>::iterator mi = mempool.mapTx.begin();\n+        for (CTxMemPool::indexed_transaction_set::iterator mi = mempool.mapTx.begin();\n              mi != mempool.mapTx.end(); ++mi)\n         {\n-            const CTransaction& tx = mi->second.GetTx();\n+            const CTransaction& tx = mi->GetTx();\n             if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n                 continue;\n \n@@ -196,7 +196,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                     }\n                     mapDependers[txin.prevout.hash].push_back(porphan);\n                     porphan->setDependsOn.insert(txin.prevout.hash);\n-                    nTotalIn += mempool.mapTx[txin.prevout.hash].GetTx().vout[txin.prevout.n].nValue;\n+                    nTotalIn += mempool.mapTx.find(txin.prevout.hash)->GetTx().vout[txin.prevout.n].nValue;\n                     continue;\n                 }\n                 const CCoins* coins = view.AccessCoins(txin.prevout.hash);\n@@ -226,7 +226,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                 porphan->feeRate = feeRate;\n             }\n             else\n-                vecPriority.push_back(TxPriority(dPriority, feeRate, &mi->second.GetTx()));\n+                vecPriority.push_back(TxPriority(dPriority, feeRate, &(mi->GetTx())));\n         }\n \n         // Collect transactions into block"
      },
      {
        "sha": "a1da31b616698150c7d8d517aa5d59ce6307ebd9",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34628a18070064e75b35f28fd6a43d5c23832eb8/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34628a18070064e75b35f28fd6a43d5c23832eb8/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=34628a18070064e75b35f28fd6a43d5c23832eb8",
        "patch": "@@ -181,10 +181,9 @@ UniValue mempoolToJSON(bool fVerbose = false)\n     {\n         LOCK(mempool.cs);\n         UniValue o(UniValue::VOBJ);\n-        BOOST_FOREACH(const PAIRTYPE(uint256, CTxMemPoolEntry)& entry, mempool.mapTx)\n+        BOOST_FOREACH(const CTxMemPoolEntry& e, mempool.mapTx)\n         {\n-            const uint256& hash = entry.first;\n-            const CTxMemPoolEntry& e = entry.second;\n+            const uint256& hash = e.GetTx().GetHash();\n             UniValue info(UniValue::VOBJ);\n             info.push_back(Pair(\"size\", (int)e.GetTxSize()));\n             info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));"
      },
      {
        "sha": "7f82a61bf30cf91bc78db3c26e4598996991a65e",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34628a18070064e75b35f28fd6a43d5c23832eb8/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34628a18070064e75b35f28fd6a43d5c23832eb8/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=34628a18070064e75b35f28fd6a43d5c23832eb8",
        "patch": "@@ -100,4 +100,56 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n+{\n+    CTxMemPool pool(CFeeRate(0));\n+\n+    /* 3rd highest fee */\n+    CMutableTransaction tx1 = CMutableTransaction();\n+    tx1.vout.resize(1);\n+    tx1.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx1.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx1.GetHash(), CTxMemPoolEntry(tx1, 10000LL, 0, 10.0, 1, true));\n+\n+    /* highest fee */\n+    CMutableTransaction tx2 = CMutableTransaction();\n+    tx2.vout.resize(1);\n+    tx2.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx2.vout[0].nValue = 2 * COIN;\n+    pool.addUnchecked(tx2.GetHash(), CTxMemPoolEntry(tx2, 20000LL, 0, 9.0, 1, true));\n+\n+    /* lowest fee */\n+    CMutableTransaction tx3 = CMutableTransaction();\n+    tx3.vout.resize(1);\n+    tx3.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx3.vout[0].nValue = 5 * COIN;\n+    pool.addUnchecked(tx3.GetHash(), CTxMemPoolEntry(tx3, 0LL, 0, 100.0, 1, true));\n+\n+    /* 2nd highest fee */\n+    CMutableTransaction tx4 = CMutableTransaction();\n+    tx4.vout.resize(1);\n+    tx4.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx4.vout[0].nValue = 6 * COIN;\n+    pool.addUnchecked(tx4.GetHash(), CTxMemPoolEntry(tx4, 15000LL, 0, 1.0, 1, true));\n+\n+    /* equal fee rate to tx1, but newer */\n+    CMutableTransaction tx5 = CMutableTransaction();\n+    tx5.vout.resize(1);\n+    tx5.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx5.vout[0].nValue = 11 * COIN;\n+    pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 10000LL, 1, 10.0, 1, true));\n+\n+    // there should be 4 transactions in the mempool\n+    BOOST_CHECK_EQUAL(pool.size(), 5);\n+\n+    // Check the fee-rate index is in order, should be tx2, tx4, tx1, tx5, tx3\n+    CTxMemPool::indexed_transaction_set::nth_index<1>::type::iterator it = pool.mapTx.get<1>().begin();\n+    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx2.GetHash().ToString());\n+    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx4.GetHash().ToString());\n+    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx1.GetHash().ToString());\n+    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx5.GetHash().ToString());\n+    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx3.GetHash().ToString());\n+    BOOST_CHECK(it == pool.mapTx.get<1>().end());\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "c410cd08323b2b28b7cc7b4c159af37896eebc19",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 24,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34628a18070064e75b35f28fd6a43d5c23832eb8/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34628a18070064e75b35f28fd6a43d5c23832eb8/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=34628a18070064e75b35f28fd6a43d5c23832eb8",
        "patch": "@@ -32,6 +32,7 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n     nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n     nModSize = tx.CalculateModifiedSize(nTxSize);\n     nUsageSize = RecursiveDynamicUsage(tx);\n+    feeRate = CFeeRate(nFee, nTxSize);\n }\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n@@ -96,8 +97,8 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry,\n     // Used by main.cpp AcceptToMemoryPool(), which DOES do\n     // all the appropriate checks.\n     LOCK(cs);\n-    mapTx[hash] = entry;\n-    const CTransaction& tx = mapTx[hash].GetTx();\n+    mapTx.insert(entry);\n+    const CTransaction& tx = mapTx.find(hash)->GetTx();\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n         mapNextTx[tx.vin[i].prevout] = CInPoint(&tx, i);\n     nTransactionsUpdated++;\n@@ -134,7 +135,7 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n             txToRemove.pop_front();\n             if (!mapTx.count(hash))\n                 continue;\n-            const CTransaction& tx = mapTx[hash].GetTx();\n+            const CTransaction& tx = mapTx.find(hash)->GetTx();\n             if (fRecursive) {\n                 for (unsigned int i = 0; i < tx.vout.size(); i++) {\n                     std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(hash, i));\n@@ -147,8 +148,8 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n                 mapNextTx.erase(txin.prevout);\n \n             removed.push_back(tx);\n-            totalTxSize -= mapTx[hash].GetTxSize();\n-            cachedInnerUsage -= mapTx[hash].DynamicMemoryUsage();\n+            totalTxSize -= mapTx.find(hash)->GetTxSize();\n+            cachedInnerUsage -= mapTx.find(hash)->DynamicMemoryUsage();\n             mapTx.erase(hash);\n             nTransactionsUpdated++;\n             minerPolicyEstimator->removeTx(hash);\n@@ -161,10 +162,10 @@ void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned in\n     // Remove transactions spending a coinbase which are now immature\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n-    for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n-        const CTransaction& tx = it->second.GetTx();\n+    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+        const CTransaction& tx = it->GetTx();\n         BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+            indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n             if (it2 != mapTx.end())\n                 continue;\n             const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n@@ -209,8 +210,10 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n     BOOST_FOREACH(const CTransaction& tx, vtx)\n     {\n         uint256 hash = tx.GetHash();\n-        if (mapTx.count(hash))\n-            entries.push_back(mapTx[hash]);\n+\n+        indexed_transaction_set::iterator i = mapTx.find(hash);\n+        if (i != mapTx.end())\n+            entries.push_back(*i);\n     }\n     BOOST_FOREACH(const CTransaction& tx, vtx)\n     {\n@@ -247,17 +250,17 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n \n     LOCK(cs);\n     list<const CTxMemPoolEntry*> waitingOnDependants;\n-    for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         unsigned int i = 0;\n-        checkTotal += it->second.GetTxSize();\n-        innerUsage += it->second.DynamicMemoryUsage();\n-        const CTransaction& tx = it->second.GetTx();\n+        checkTotal += it->GetTxSize();\n+        innerUsage += it->DynamicMemoryUsage();\n+        const CTransaction& tx = it->GetTx();\n         bool fDependsWait = false;\n         BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             // Check that every mempool transaction's inputs refer to available coins, or other mempool tx's.\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+            indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n             if (it2 != mapTx.end()) {\n-                const CTransaction& tx2 = it2->second.GetTx();\n+                const CTransaction& tx2 = it2->GetTx();\n                 assert(tx2.vout.size() > txin.prevout.n && !tx2.vout[txin.prevout.n].IsNull());\n                 fDependsWait = true;\n             } else {\n@@ -272,7 +275,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n             i++;\n         }\n         if (fDependsWait)\n-            waitingOnDependants.push_back(&it->second);\n+            waitingOnDependants.push_back(&(*it));\n         else {\n             CValidationState state;\n             assert(CheckInputs(tx, state, mempoolDuplicate, false, 0, false, NULL));\n@@ -296,8 +299,8 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     }\n     for (std::map<COutPoint, CInPoint>::const_iterator it = mapNextTx.begin(); it != mapNextTx.end(); it++) {\n         uint256 hash = it->second.ptx->GetHash();\n-        map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(hash);\n-        const CTransaction& tx = it2->second.GetTx();\n+        indexed_transaction_set::const_iterator it2 = mapTx.find(hash);\n+        const CTransaction& tx = it2->GetTx();\n         assert(it2 != mapTx.end());\n         assert(&tx == it->second.ptx);\n         assert(tx.vin.size() > it->second.n);\n@@ -314,16 +317,16 @@ void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (map<uint256, CTxMemPoolEntry>::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back((*mi).first);\n+    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n+        vtxid.push_back(mi->GetTx().GetHash());\n }\n \n bool CTxMemPool::lookup(uint256 hash, CTransaction& result) const\n {\n     LOCK(cs);\n-    map<uint256, CTxMemPoolEntry>::const_iterator i = mapTx.find(hash);\n+    indexed_transaction_set::const_iterator i = mapTx.find(hash);\n     if (i == mapTx.end()) return false;\n-    result = i->second.GetTx();\n+    result = i->GetTx();\n     return true;\n }\n \n@@ -429,5 +432,6 @@ bool CCoinsViewMemPool::HaveCoins(const uint256 &txid) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    return memusage::DynamicUsage(mapTx) + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + cachedInnerUsage;\n+    // Estimate the overhead of mapTx to be 6 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n+    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 6 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + cachedInnerUsage;\n }"
      },
      {
        "sha": "6b6b05454a4eee3fd1dda5bc13993c5f3a2578bc",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 41,
        "deletions": 1,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34628a18070064e75b35f28fd6a43d5c23832eb8/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34628a18070064e75b35f28fd6a43d5c23832eb8/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=34628a18070064e75b35f28fd6a43d5c23832eb8",
        "patch": "@@ -13,6 +13,10 @@\n #include \"primitives/transaction.h\"\n #include \"sync.h\"\n \n+#undef foreach\n+#include \"boost/multi_index_container.hpp\"\n+#include \"boost/multi_index/ordered_index.hpp\"\n+\n class CAutoFile;\n \n inline double AllowFreeThreshold()\n@@ -41,6 +45,7 @@ class CTxMemPoolEntry\n     size_t nTxSize; //! ... and avoid recomputing tx size\n     size_t nModSize; //! ... and modified size for priority\n     size_t nUsageSize; //! ... and total memory usage\n+    CFeeRate feeRate; //! ... and fee per kB\n     int64_t nTime; //! Local time when entering the mempool\n     double dPriority; //! Priority when entering the mempool\n     unsigned int nHeight; //! Chain height when entering the mempool\n@@ -55,13 +60,35 @@ class CTxMemPoolEntry\n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n     size_t DynamicMemoryUsage() const { return nUsageSize; }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetTime() < b.GetTime();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n class CBlockPolicyEstimator;\n \n /** An inpoint - a combination of a transaction and an index n into its vin */\n@@ -99,8 +126,21 @@ class CTxMemPool\n     uint64_t cachedInnerUsage; //! sum of dynamic memory usage of all the map elements (NOT the maps themselves)\n \n public:\n+    typedef boost::multi_index_container<\n+        CTxMemPoolEntry,\n+        boost::multi_index::indexed_by<\n+            // sorted by txid\n+            boost::multi_index::ordered_unique<mempoolentry_txid>,\n+            // sorted by fee rate\n+            boost::multi_index::ordered_non_unique<\n+                boost::multi_index::identity<CTxMemPoolEntry>,\n+                CompareTxMemPoolEntryByFee\n+            >\n+        >\n+    > indexed_transaction_set;\n+\n     mutable CCriticalSection cs;\n-    std::map<uint256, CTxMemPoolEntry> mapTx;\n+    indexed_transaction_set mapTx;\n     std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n "
      }
    ]
  },
  {
    "sha": "5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWRkN2E3NGE2NzJjYjEyYjBhMmE2MzBkMzE4ZDliYzY0ZGQwZjc3",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-07-15T18:47:45Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-09-19T17:25:48Z"
      },
      "message": "Track transaction packages in CTxMemPoolEntry\n\nAssociate with each CTxMemPoolEntry all the size/fees of descendant\nmempool transactions.  Sort mempool by max(feerate of entry, feerate\nof descendants).  Update statistics on-the-fly as transactions enter\nor leave the mempool.\n\nAlso add ancestor and descendant limiting, so that transactions can\nbe rejected if the number or size of unconfirmed ancestors exceeds\na target, or if adding a transaction would cause some other mempool\nentry to have too many (or too large) a set of unconfirmed in-\nmempool descendants.",
      "tree": {
        "sha": "e8b86acba14f47100af0bbadeb748f6f6a002d58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8b86acba14f47100af0bbadeb748f6f6a002d58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34628a18070064e75b35f28fd6a43d5c23832eb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34628a18070064e75b35f28fd6a43d5c23832eb8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34628a18070064e75b35f28fd6a43d5c23832eb8"
      }
    ],
    "stats": {
      "total": 1058,
      "additions": 993,
      "deletions": 65
    },
    "files": [
      {
        "sha": "2e8a7c69ce127ef9b4e52d182d2b8df3cd7b382e",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -57,6 +57,7 @@ testScriptsExt=(\n     'invalidblockrequest.py'\n #    'forknotify.py'\n     'p2p-acceptblock.py'\n+    'mempool_packages.py'\n );\n \n #if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then"
      },
      {
        "sha": "6041f3a3dd9842ee2dc285eac1ed211dbdb72df4",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Test descendant package tracking code\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+def satoshi_round(amount):\n+    return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n+\n+class MempoolPackagesTest(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\"]))\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    # Build a transaction that spends parent_txid:vout\n+    # Return amount sent\n+    def chain_transaction(self, parent_txid, vout, value, fee, num_outputs):\n+        send_value = satoshi_round((value - fee)/num_outputs)\n+        inputs = [ {'txid' : parent_txid, 'vout' : vout} ]\n+        outputs = {}\n+        for i in xrange(num_outputs):\n+            outputs[self.nodes[0].getnewaddress()] = send_value\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signedtx = self.nodes[0].signrawtransaction(rawtx)\n+        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n+        fulltx = self.nodes[0].getrawtransaction(txid, 1)\n+        assert(len(fulltx['vout']) == num_outputs) # make sure we didn't generate a change output\n+        return (txid, send_value)\n+\n+    def run_test(self):\n+        ''' Mine some blocks and have them mature. '''\n+        self.nodes[0].generate(101)\n+        utxo = self.nodes[0].listunspent(10)\n+        txid = utxo[0]['txid']\n+        vout = utxo[0]['vout']\n+        value = utxo[0]['amount']\n+\n+        fee = Decimal(\"0.0001\")\n+        # 100 transactions off a confirmed tx should be fine\n+        chain = []\n+        for i in xrange(100):\n+            (txid, sent_value) = self.chain_transaction(txid, 0, value, fee, 1)\n+            value = sent_value\n+            chain.append(txid)\n+\n+        # Check mempool has 100 transactions in it, and descendant\n+        # count and fees should look correct\n+        mempool = self.nodes[0].getrawmempool(True)\n+        assert_equal(len(mempool), 100)\n+        descendant_count = 1\n+        descendant_fees = 0\n+        descendant_size = 0\n+        SATOSHIS = 100000000\n+\n+        for x in reversed(chain):\n+            assert_equal(mempool[x]['descendantcount'], descendant_count)\n+            descendant_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees)\n+            descendant_size += mempool[x]['size']\n+            assert_equal(mempool[x]['descendantsize'], descendant_size)\n+            descendant_count += 1\n+\n+        # Adding one more transaction on to the chain should fail.\n+        try:\n+            self.chain_transaction(txid, vout, value, fee, 1)\n+        except JSONRPCException as e:\n+            print \"too-long-ancestor-chain successfully rejected\"\n+\n+        # TODO: test ancestor size limits\n+\n+        # Now test descendant chain limits\n+        txid = utxo[1]['txid']\n+        value = utxo[1]['amount']\n+        vout = utxo[1]['vout']\n+\n+        transaction_package = []\n+        # First create one parent tx with 10 children\n+        (txid, sent_value) = self.chain_transaction(txid, vout, value, fee, 10)\n+        parent_transaction = txid\n+        for i in xrange(10):\n+            transaction_package.append({'txid': txid, 'vout': i, 'amount': sent_value})\n+\n+        for i in xrange(1000):\n+            utxo = transaction_package.pop(0)\n+            try:\n+                (txid, sent_value) = self.chain_transaction(utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n+                for j in xrange(10):\n+                    transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n+                if i == 998:\n+                    mempool = self.nodes[0].getrawmempool(True)\n+                    assert_equal(mempool[parent_transaction]['descendantcount'], 1000)\n+            except JSONRPCException as e:\n+                print e.error['message']\n+                assert_equal(i, 999)\n+                print \"tx that would create too large descendant package successfully rejected\"\n+\n+        # TODO: test descendant size limits\n+\n+if __name__ == '__main__':\n+    MempoolPackagesTest().main()"
      },
      {
        "sha": "9f1c1f6864e08152cdb7fc1cded75f8e8c9bb99e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -411,6 +411,10 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n+        strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n+        strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n+        strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n     }\n     string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)"
      },
      {
        "sha": "2a24d38e52760e2a5286a482832552e9d7986154",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -921,6 +921,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 REJECT_HIGHFEE, \"absurdly-high-fee\",\n                 strprintf(\"%d > %d\", nFees, ::minRelayTxFee.GetFee(nSize) * 10000));\n \n+        // Calculate in-mempool ancestors, up to a limit.\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT)*1000;\n+        size_t nLimitDescendants = GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT)*1000;\n+        std::string errString;\n+        if (!pool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize, nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n+        }\n+\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))\n@@ -942,7 +953,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         }\n \n         // Store transaction in memory\n-        pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+        pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n     }\n \n     SyncWithWallets(tx, NULL);\n@@ -2033,13 +2044,23 @@ bool static DisconnectTip(CValidationState &state) {\n     if (!FlushStateToDisk(state, FLUSH_STATE_IF_NEEDED))\n         return false;\n     // Resurrect mempool transactions from the disconnected block.\n+    std::vector<uint256> vHashUpdate;\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n         CValidationState stateDummy;\n-        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL))\n+        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL)) {\n             mempool.remove(tx, removed, true);\n+        } else if (mempool.exists(tx.GetHash())) {\n+            vHashUpdate.push_back(tx.GetHash());\n+        }\n     }\n+    // AcceptToMemoryPool/addUnchecked all assume that new mempool entries have\n+    // no in-mempool children, which is generally not true when adding\n+    // previously-confirmed transactions back to the mempool.\n+    // UpdateTransactionsFromBlock finds descendants of any transactions in this\n+    // block that were added back and cleans up the mempool state.\n+    mempool.UpdateTransactionsFromBlock(vHashUpdate);\n     mempool.removeCoinbaseSpends(pcoinsTip, pindexDelete->nHeight);\n     mempool.check(pcoinsTip);\n     // Update chainActive and related variables.\n@@ -4258,7 +4279,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d %s: accepted %s (poolsz %u)\\n\",\n                 pfrom->id, pfrom->cleanSubVer,\n                 tx.GetHash().ToString(),\n-                mempool.mapTx.size());\n+                mempool.size());\n \n             // Recursively process any orphan transactions that depended on this one\n             set<NodeId> setMisbehaving;"
      },
      {
        "sha": "a6001eed8f1c6823f80cd7ba127c5c781848ee5d",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -43,6 +43,14 @@ struct CNodeStateStats;\n static const bool DEFAULT_ALERTS = true;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n+/** Default for -limitancestorcount, max number of in-mempool ancestors */\n+static const unsigned int DEFAULT_ANCESTOR_LIMIT = 100;\n+/** Default for -limitancestorsize, maximum kilobytes of tx + all in-mempool ancestors */\n+static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n+/** Default for -limitdescendantcount, max number of in-mempool descendants */\n+static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n+/** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n+static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */"
      },
      {
        "sha": "b475c3313b20004b4403604b58d77caec3e1c1fb",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -74,18 +74,30 @@ static inline size_t DynamicUsage(const std::vector<X>& v)\n     return MallocUsage(v.capacity() * sizeof(X));\n }\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::set<X>& s)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::set<X, Y>& s)\n {\n     return MallocUsage(sizeof(stl_tree_node<X>)) * s.size();\n }\n \n template<typename X, typename Y>\n-static inline size_t DynamicUsage(const std::map<X, Y>& m)\n+static inline size_t IncrementalDynamicUsage(const std::set<X, Y>& s)\n+{\n+    return MallocUsage(sizeof(stl_tree_node<X>));\n+}\n+\n+template<typename X, typename Y, typename Z>\n+static inline size_t DynamicUsage(const std::map<X, Y, Z>& m)\n {\n     return MallocUsage(sizeof(stl_tree_node<std::pair<const X, Y> >)) * m.size();\n }\n \n+template<typename X, typename Y, typename Z>\n+static inline size_t IncrementalDynamicUsage(const std::map<X, Y, Z>& m)\n+{\n+    return MallocUsage(sizeof(stl_tree_node<std::pair<const X, Y> >));\n+}\n+\n // Boost data structures\n \n template<typename X>"
      },
      {
        "sha": "1c201ef99d16efd9666282eb790bc4b23c925592",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -191,6 +191,9 @@ UniValue mempoolToJSON(bool fVerbose = false)\n             info.push_back(Pair(\"height\", (int)e.GetHeight()));\n             info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n             info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n+            info.push_back(Pair(\"descendantcount\", e.GetCountWithDescendants()));\n+            info.push_back(Pair(\"descendantsize\", e.GetSizeWithDescendants()));\n+            info.push_back(Pair(\"descendantfees\", e.GetFeesWithDescendants()));\n             const CTransaction& tx = e.GetTx();\n             set<string> setDepends;\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n@@ -245,6 +248,9 @@ UniValue getrawmempool(const UniValue& params, bool fHelp)\n             \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n             \"    \\\"startingpriority\\\" : n, (numeric) priority when transaction entered pool\\n\"\n             \"    \\\"currentpriority\\\" : n,  (numeric) transaction priority now\\n\"\n+            \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n+            \"    \\\"descendantsize\\\" : n,   (numeric) size of in-mempool descendants (including this one)\\n\"\n+            \"    \\\"descendantfees\\\" : n,   (numeric) fees of in-mempool descendants (including this one)\\n\"\n             \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n             \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n             \"       ... ]\\n\""
      },
      {
        "sha": "5bf1e98e8f5156ed9638efe3865ee235e3aeb75d",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 139,
        "deletions": 10,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -9,6 +9,7 @@\n \n #include <boost/test/unit_test.hpp>\n #include <list>\n+#include <vector>\n \n BOOST_FIXTURE_TEST_SUITE(mempool_tests, TestingSetup)\n \n@@ -100,6 +101,16 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+void CheckSort(CTxMemPool &pool, std::vector<std::string> &sortedOrder)\n+{\n+    BOOST_CHECK_EQUAL(pool.size(), sortedOrder.size());\n+    CTxMemPool::indexed_transaction_set::nth_index<1>::type::iterator it = pool.mapTx.get<1>().begin();\n+    int count=0;\n+    for (; it != pool.mapTx.get<1>().end(); ++it, ++count) {\n+        BOOST_CHECK_EQUAL(it->GetTx().GetHash().ToString(), sortedOrder[count]);\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n {\n     CTxMemPool pool(CFeeRate(0));\n@@ -138,18 +149,136 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     tx5.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx5.vout[0].nValue = 11 * COIN;\n     pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 10000LL, 1, 10.0, 1, true));\n-\n-    // there should be 4 transactions in the mempool\n     BOOST_CHECK_EQUAL(pool.size(), 5);\n \n-    // Check the fee-rate index is in order, should be tx2, tx4, tx1, tx5, tx3\n-    CTxMemPool::indexed_transaction_set::nth_index<1>::type::iterator it = pool.mapTx.get<1>().begin();\n-    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx2.GetHash().ToString());\n-    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx4.GetHash().ToString());\n-    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx1.GetHash().ToString());\n-    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx5.GetHash().ToString());\n-    BOOST_CHECK_EQUAL(it++->GetTx().GetHash().ToString(), tx3.GetHash().ToString());\n-    BOOST_CHECK(it == pool.mapTx.get<1>().end());\n+    std::vector<std::string> sortedOrder;\n+    sortedOrder.resize(5);\n+    sortedOrder[0] = tx2.GetHash().ToString(); // 20000\n+    sortedOrder[1] = tx4.GetHash().ToString(); // 15000\n+    sortedOrder[2] = tx1.GetHash().ToString(); // 10000\n+    sortedOrder[3] = tx5.GetHash().ToString(); // 10000\n+    sortedOrder[4] = tx3.GetHash().ToString(); // 0\n+    CheckSort(pool, sortedOrder);\n+\n+    /* low fee but with high fee child */\n+    /* tx6 -> tx7 -> tx8, tx9 -> tx10 */\n+    CMutableTransaction tx6 = CMutableTransaction();\n+    tx6.vout.resize(1);\n+    tx6.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx6.vout[0].nValue = 20 * COIN;\n+    pool.addUnchecked(tx6.GetHash(), CTxMemPoolEntry(tx6, 0LL, 1, 10.0, 1, true));\n+    BOOST_CHECK_EQUAL(pool.size(), 6);\n+    // Check that at this point, tx6 is sorted low\n+    sortedOrder.push_back(tx6.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    CTxMemPool::setEntries setAncestors;\n+    setAncestors.insert(pool.mapTx.find(tx6.GetHash()));\n+    CMutableTransaction tx7 = CMutableTransaction();\n+    tx7.vin.resize(1);\n+    tx7.vin[0].prevout = COutPoint(tx6.GetHash(), 0);\n+    tx7.vin[0].scriptSig = CScript() << OP_11;\n+    tx7.vout.resize(2);\n+    tx7.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx7.vout[0].nValue = 10 * COIN;\n+    tx7.vout[1].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx7.vout[1].nValue = 1 * COIN;\n+\n+    CTxMemPool::setEntries setAncestorsCalculated;\n+    std::string dummy;\n+    CTxMemPoolEntry entry7(tx7, 2000000LL, 1, 10.0, 1, true);\n+    BOOST_CHECK_EQUAL(pool.CalculateMemPoolAncestors(entry7, setAncestorsCalculated, 100, 1000000, 1000, 1000000, dummy), true);\n+    BOOST_CHECK(setAncestorsCalculated == setAncestors);\n+\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 2000000LL, 1, 10.0, 1, true), setAncestors);\n+    BOOST_CHECK_EQUAL(pool.size(), 7);\n+\n+    // Now tx6 should be sorted higher (high fee child): tx7, tx6, tx2, ...\n+    sortedOrder.erase(sortedOrder.end()-1);\n+    sortedOrder.insert(sortedOrder.begin(), tx6.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx7.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    /* low fee child of tx7 */\n+    CMutableTransaction tx8 = CMutableTransaction();\n+    tx8.vin.resize(1);\n+    tx8.vin[0].prevout = COutPoint(tx7.GetHash(), 0);\n+    tx8.vin[0].scriptSig = CScript() << OP_11;\n+    tx8.vout.resize(1);\n+    tx8.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx8.vout[0].nValue = 10 * COIN;\n+    setAncestors.insert(pool.mapTx.find(tx7.GetHash()));\n+    pool.addUnchecked(tx8.GetHash(), CTxMemPoolEntry(tx8, 0LL, 2, 10.0, 1, true), setAncestors);\n+\n+    // Now tx8 should be sorted low, but tx6/tx both high\n+    sortedOrder.push_back(tx8.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    /* low fee child of tx7 */\n+    CMutableTransaction tx9 = CMutableTransaction();\n+    tx9.vin.resize(1);\n+    tx9.vin[0].prevout = COutPoint(tx7.GetHash(), 1);\n+    tx9.vin[0].scriptSig = CScript() << OP_11;\n+    tx9.vout.resize(1);\n+    tx9.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx9.vout[0].nValue = 1 * COIN;\n+    pool.addUnchecked(tx9.GetHash(), CTxMemPoolEntry(tx9, 0LL, 3, 10.0, 1, true), setAncestors);\n+\n+    // tx9 should be sorted low\n+    BOOST_CHECK_EQUAL(pool.size(), 9);\n+    sortedOrder.push_back(tx9.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    std::vector<std::string> snapshotOrder = sortedOrder;\n+\n+    setAncestors.insert(pool.mapTx.find(tx8.GetHash()));\n+    setAncestors.insert(pool.mapTx.find(tx9.GetHash()));\n+    /* tx10 depends on tx8 and tx9 and has a high fee*/\n+    CMutableTransaction tx10 = CMutableTransaction();\n+    tx10.vin.resize(2);\n+    tx10.vin[0].prevout = COutPoint(tx8.GetHash(), 0);\n+    tx10.vin[0].scriptSig = CScript() << OP_11;\n+    tx10.vin[1].prevout = COutPoint(tx9.GetHash(), 0);\n+    tx10.vin[1].scriptSig = CScript() << OP_11;\n+    tx10.vout.resize(1);\n+    tx10.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx10.vout[0].nValue = 10 * COIN;\n+\n+    setAncestorsCalculated.clear();\n+    CTxMemPoolEntry entry10(tx10, 200000LL, 4, 10.0, 1, true);\n+    BOOST_CHECK_EQUAL(pool.CalculateMemPoolAncestors(entry10, setAncestorsCalculated, 100, 1000000, 1000, 1000000, dummy), true);\n+    BOOST_CHECK(setAncestorsCalculated == setAncestors);\n+\n+    pool.addUnchecked(tx10.GetHash(), CTxMemPoolEntry(tx10, 200000LL, 4, 10.0, 1, true), setAncestors);\n+\n+    /**\n+     *  tx8 and tx9 should both now be sorted higher\n+     *  Final order after tx10 is added:\n+     *\n+     *  tx7 = 2.2M (4 txs)\n+     *  tx6 = 2.2M (5 txs)\n+     *  tx10 = 200k (1 tx)\n+     *  tx8 = 200k (2 txs)\n+     *  tx9 = 200k (2 txs)\n+     *  tx2 = 20000 (1)\n+     *  tx4 = 15000 (1)\n+     *  tx1 = 10000 (1)\n+     *  tx5 = 10000 (1)\n+     *  tx3 = 0 (1)\n+     */\n+    sortedOrder.erase(sortedOrder.end()-2, sortedOrder.end()); // take out tx8, tx9 from the end\n+    sortedOrder.insert(sortedOrder.begin()+2, tx10.GetHash().ToString()); // tx10 is after tx6\n+    sortedOrder.insert(sortedOrder.begin()+3, tx9.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin()+3, tx8.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    // there should be 10 transactions in the mempool\n+    BOOST_CHECK_EQUAL(pool.size(), 10);\n+\n+    // Now try removing tx10 and verify the sort order returns to normal\n+    std::list<CTransaction> removed;\n+    pool.remove(pool.mapTx.find(tx10.GetHash())->GetTx(), removed, true);\n+    CheckSort(pool, snapshotOrder);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "2f603e3c9fbd459ab2b25ad0a54a6cd9019a1bea",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 423,
        "deletions": 42,
        "changes": 465,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -17,12 +17,6 @@\n \n using namespace std;\n \n-CTxMemPoolEntry::CTxMemPoolEntry():\n-    nFee(0), nTxSize(0), nModSize(0), nUsageSize(0), nTime(0), dPriority(0.0), hadNoDependencies(false)\n-{\n-    nHeight = MEMPOOL_HEIGHT;\n-}\n-\n CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n                                  int64_t _nTime, double _dPriority,\n                                  unsigned int _nHeight, bool poolHasNoInputsOf):\n@@ -32,7 +26,10 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n     nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n     nModSize = tx.CalculateModifiedSize(nTxSize);\n     nUsageSize = RecursiveDynamicUsage(tx);\n-    feeRate = CFeeRate(nFee, nTxSize);\n+\n+    nCountWithDescendants = 1;\n+    nSizeWithDescendants = nTxSize;\n+    nFeesWithDescendants = nFee;\n }\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n@@ -49,6 +46,244 @@ CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n     return dResult;\n }\n \n+// Update the given tx for any in-mempool descendants.\n+// Assumes that setMemPoolChildren is correct for the given tx and all\n+// descendants.\n+bool CTxMemPool::UpdateForDescendants(txiter updateIt, int maxDescendantsToVisit, cacheMap &cachedDescendants, const std::set<uint256> &setExclude)\n+{\n+    // Track the number of entries (outside setExclude) that we'd need to visit\n+    // (will bail out if it exceeds maxDescendantsToVisit)\n+    int nChildrenToVisit = 0;\n+\n+    setEntries stageEntries, setAllDescendants;\n+    stageEntries = GetMemPoolChildren(updateIt);\n+\n+    while (!stageEntries.empty()) {\n+        const txiter cit = *stageEntries.begin();\n+        if (cit->IsDirty()) {\n+            // Don't consider any more children if any descendant is dirty\n+            return false;\n+        }\n+        setAllDescendants.insert(cit);\n+        stageEntries.erase(cit);\n+        const setEntries &setChildren = GetMemPoolChildren(cit);\n+        BOOST_FOREACH(const txiter childEntry, setChildren) {\n+            cacheMap::iterator cacheIt = cachedDescendants.find(childEntry);\n+            if (cacheIt != cachedDescendants.end()) {\n+                // We've already calculated this one, just add the entries for this set\n+                // but don't traverse again.\n+                BOOST_FOREACH(const txiter cacheEntry, cacheIt->second) {\n+                    // update visit count only for new child transactions\n+                    // (outside of setExclude and stageEntries)\n+                    if (setAllDescendants.insert(cacheEntry).second &&\n+                            !setExclude.count(cacheEntry->GetTx().GetHash()) &&\n+                            !stageEntries.count(cacheEntry)) {\n+                        nChildrenToVisit++;\n+                    }\n+                }\n+            } else if (!setAllDescendants.count(childEntry)) {\n+                // Schedule for later processing and update our visit count\n+                if (stageEntries.insert(childEntry).second && !setExclude.count(childEntry->GetTx().GetHash())) {\n+                        nChildrenToVisit++;\n+                }\n+            }\n+            if (nChildrenToVisit > maxDescendantsToVisit) {\n+                return false;\n+            }\n+        }\n+    }\n+    // setAllDescendants now contains all in-mempool descendants of updateIt.\n+    // Update and add to cached descendant map\n+    int64_t modifySize = 0;\n+    CAmount modifyFee = 0;\n+    int64_t modifyCount = 0;\n+    BOOST_FOREACH(txiter cit, setAllDescendants) {\n+        if (!setExclude.count(cit->GetTx().GetHash())) {\n+            modifySize += cit->GetTxSize();\n+            modifyFee += cit->GetFee();\n+            modifyCount++;\n+            cachedDescendants[updateIt].insert(cit);\n+        }\n+    }\n+    mapTx.modify(updateIt, update_descendant_state(modifySize, modifyFee, modifyCount));\n+    return true;\n+}\n+\n+// vHashesToUpdate is the set of transaction hashes from a disconnected block\n+// which has been re-added to the mempool.\n+// for each entry, look for descendants that are outside hashesToUpdate, and\n+// add fee/size information for such descendants to the parent.\n+void CTxMemPool::UpdateTransactionsFromBlock(const std::vector<uint256> &vHashesToUpdate)\n+{\n+    LOCK(cs);\n+    // For each entry in vHashesToUpdate, store the set of in-mempool, but not\n+    // in-vHashesToUpdate transactions, so that we don't have to recalculate\n+    // descendants when we come across a previously seen entry.\n+    cacheMap mapMemPoolDescendantsToUpdate;\n+\n+    // Use a set for lookups into vHashesToUpdate (these entries are already\n+    // accounted for in the state of their ancestors)\n+    std::set<uint256> setAlreadyIncluded(vHashesToUpdate.begin(), vHashesToUpdate.end());\n+\n+    // Iterate in reverse, so that whenever we are looking at at a transaction\n+    // we are sure that all in-mempool descendants have already been processed.\n+    // This maximizes the benefit of the descendant cache and guarantees that\n+    // setMemPoolChildren will be updated, an assumption made in\n+    // UpdateForDescendants.\n+    BOOST_REVERSE_FOREACH(const uint256 &hash, vHashesToUpdate) {\n+        // we cache the in-mempool children to avoid duplicate updates\n+        setEntries setChildren;\n+        // calculate children from mapNextTx\n+        txiter it = mapTx.find(hash);\n+        if (it == mapTx.end()) {\n+            continue;\n+        }\n+        std::map<COutPoint, CInPoint>::iterator iter = mapNextTx.lower_bound(COutPoint(hash, 0));\n+        // First calculate the children, and update setMemPoolChildren to\n+        // include them, and update their setMemPoolParents to include this tx.\n+        for (; iter != mapNextTx.end() && iter->first.hash == hash; ++iter) {\n+            const uint256 &childHash = iter->second.ptx->GetHash();\n+            txiter childIter = mapTx.find(childHash);\n+            assert(childIter != mapTx.end());\n+            // We can skip updating entries we've encountered before or that\n+            // are in the block (which are already accounted for).\n+            if (setChildren.insert(childIter).second && !setAlreadyIncluded.count(childHash)) {\n+                UpdateChild(it, childIter, true);\n+                UpdateParent(childIter, it, true);\n+            }\n+        }\n+        if (!UpdateForDescendants(it, 100, mapMemPoolDescendantsToUpdate, setAlreadyIncluded)) {\n+            // Mark as dirty if we can't do the calculation.\n+            mapTx.modify(it, set_dirty());\n+        }\n+    }\n+}\n+\n+bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString)\n+{\n+    setEntries parentHashes;\n+    const CTransaction &tx = entry.GetTx();\n+\n+    // Get parents of this transaction that are in the mempool\n+    // Entry may or may not already be in the mempool, and GetMemPoolParents()\n+    // is only valid for entries in the mempool, so we iterate mapTx to find\n+    // parents.\n+    // TODO: optimize this so that we only check limits and walk\n+    // tx.vin when called on entries not already in the mempool.\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        txiter piter = mapTx.find(tx.vin[i].prevout.hash);\n+        if (piter != mapTx.end()) {\n+            parentHashes.insert(piter);\n+            if (parentHashes.size() + 1 > limitAncestorCount) {\n+                errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n+                return false;\n+            }\n+        }\n+    }\n+\n+    size_t totalSizeWithAncestors = entry.GetTxSize();\n+\n+    while (!parentHashes.empty()) {\n+        txiter stageit = *parentHashes.begin();\n+\n+        setAncestors.insert(stageit);\n+        parentHashes.erase(stageit);\n+        totalSizeWithAncestors += stageit->GetTxSize();\n+\n+        if (stageit->GetSizeWithDescendants() + entry.GetTxSize() > limitDescendantSize) {\n+            errString = strprintf(\"exceeds descendant size limit for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantSize);\n+            return false;\n+        } else if (stageit->GetCountWithDescendants() + 1 > limitDescendantCount) {\n+            errString = strprintf(\"too many descendants for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantCount);\n+            return false;\n+        } else if (totalSizeWithAncestors > limitAncestorSize) {\n+            errString = strprintf(\"exceeds ancestor size limit [limit: %u]\", limitAncestorSize);\n+            return false;\n+        }\n+\n+        const setEntries & setMemPoolParents = GetMemPoolParents(stageit);\n+        BOOST_FOREACH(const txiter &phash, setMemPoolParents) {\n+            // If this is a new ancestor, add it.\n+            if (setAncestors.count(phash) == 0) {\n+                parentHashes.insert(phash);\n+            }\n+            if (parentHashes.size() + setAncestors.size() + 1 > limitAncestorCount) {\n+                errString = strprintf(\"too many unconfirmed ancestors [limit: %u]\", limitAncestorCount);\n+                return false;\n+            }\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+void CTxMemPool::UpdateAncestorsOf(bool add, txiter it, setEntries &setAncestors)\n+{\n+    setEntries parentIters = GetMemPoolParents(it);\n+    // add or remove this tx as a child of each parent\n+    BOOST_FOREACH(txiter piter, parentIters) {\n+        UpdateChild(piter, it, add);\n+    }\n+    const int64_t updateCount = (add ? 1 : -1);\n+    const int64_t updateSize = updateCount * it->GetTxSize();\n+    const CAmount updateFee = updateCount * it->GetFee();\n+    BOOST_FOREACH(txiter ancestorIt, setAncestors) {\n+        mapTx.modify(ancestorIt, update_descendant_state(updateSize, updateFee, updateCount));\n+    }\n+}\n+\n+void CTxMemPool::UpdateChildrenForRemoval(txiter it)\n+{\n+    const setEntries &setMemPoolChildren = GetMemPoolChildren(it);\n+    BOOST_FOREACH(txiter updateIt, setMemPoolChildren) {\n+        UpdateParent(updateIt, it, false);\n+    }\n+}\n+\n+void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove)\n+{\n+    // For each entry, walk back all ancestors and decrement size associated with this\n+    // transaction\n+    const uint64_t nNoLimit = std::numeric_limits<uint64_t>::max();\n+    BOOST_FOREACH(txiter removeIt, entriesToRemove) {\n+        setEntries setAncestors;\n+        const CTxMemPoolEntry &entry = *removeIt;\n+        std::string dummy;\n+        CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+        // Note that UpdateAncestorsOf severs the child links that point to\n+        // removeIt in the entries for the parents of removeIt.  This is\n+        // fine since we don't need to use the mempool children of any entries\n+        // to walk back over our ancestors (but we do need the mempool\n+        // parents!)\n+        UpdateAncestorsOf(false, removeIt, setAncestors);\n+    }\n+    // After updating all the ancestor sizes, we can now sever the link between each\n+    // transaction being removed and any mempool children (ie, update setMemPoolParents\n+    // for each direct child of a transaction being removed).\n+    BOOST_FOREACH(txiter removeIt, entriesToRemove) {\n+        UpdateChildrenForRemoval(removeIt);\n+    }\n+}\n+\n+void CTxMemPoolEntry::SetDirty()\n+{\n+    nCountWithDescendants = 0;\n+    nSizeWithDescendants = nTxSize;\n+    nFeesWithDescendants = nFee;\n+}\n+\n+void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount)\n+{\n+    if (!IsDirty()) {\n+        nSizeWithDescendants += modifySize;\n+        assert(int64_t(nSizeWithDescendants) > 0);\n+        nFeesWithDescendants += modifyFee;\n+        assert(nFeesWithDescendants >= 0);\n+        nCountWithDescendants += modifyCount;\n+        assert(int64_t(nCountWithDescendants) > 0);\n+    }\n+}\n+\n CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n     nTransactionsUpdated(0)\n {\n@@ -90,34 +325,103 @@ void CTxMemPool::AddTransactionsUpdated(unsigned int n)\n     nTransactionsUpdated += n;\n }\n \n-\n-bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n+bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate)\n {\n     // Add to memory pool without checking anything.\n     // Used by main.cpp AcceptToMemoryPool(), which DOES do\n     // all the appropriate checks.\n     LOCK(cs);\n-    mapTx.insert(entry);\n-    const CTransaction& tx = mapTx.find(hash)->GetTx();\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    indexed_transaction_set::iterator newit = mapTx.insert(entry).first;\n+    mapLinks.insert(make_pair(newit, TxLinks()));\n+\n+    // Update cachedInnerUsage to include contained transaction's usage.\n+    // (When we update the entry for in-mempool parents, memory usage will be\n+    // further updated.)\n+    cachedInnerUsage += entry.DynamicMemoryUsage();\n+\n+    const CTransaction& tx = newit->GetTx();\n+    std::set<uint256> setParentTransactions;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n         mapNextTx[tx.vin[i].prevout] = CInPoint(&tx, i);\n+        setParentTransactions.insert(tx.vin[i].prevout.hash);\n+    }\n+    // Don't bother worrying about child transactions of this one.\n+    // Normal case of a new transaction arriving is that there can't be any\n+    // children, because such children would be orphans.\n+    // An exception to that is if a transaction enters that used to be in a block.\n+    // In that case, our disconnect block logic will call UpdateTransactionsFromBlock\n+    // to clean up the mess we're leaving here.\n+\n+    // Update ancestors with information about this tx\n+    BOOST_FOREACH (const uint256 &phash, setParentTransactions) {\n+        txiter pit = mapTx.find(phash);\n+        if (pit != mapTx.end()) {\n+            UpdateParent(newit, pit, true);\n+        }\n+    }\n+    UpdateAncestorsOf(true, newit, setAncestors);\n+\n     nTransactionsUpdated++;\n     totalTxSize += entry.GetTxSize();\n-    cachedInnerUsage += entry.DynamicMemoryUsage();\n     minerPolicyEstimator->processTransaction(entry, fCurrentEstimate);\n \n     return true;\n }\n \n+void CTxMemPool::removeUnchecked(txiter it)\n+{\n+    const uint256 hash = it->GetTx().GetHash();\n+    BOOST_FOREACH(const CTxIn& txin, it->GetTx().vin)\n+        mapNextTx.erase(txin.prevout);\n+\n+    totalTxSize -= it->GetTxSize();\n+    cachedInnerUsage -= it->DynamicMemoryUsage();\n+    cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n+    mapLinks.erase(it);\n+    mapTx.erase(it);\n+    nTransactionsUpdated++;\n+    minerPolicyEstimator->removeTx(hash);\n+}\n+\n+// Calculates descendants of entry that are not already in setDescendants, and adds to\n+// setDescendants. Assumes entryit is already a tx in the mempool and setMemPoolChildren\n+// is correct for tx and all descendants.\n+// Also assumes that if an entry is in setDescendants already, then all\n+// in-mempool descendants of it are already in setDescendants as well, so that we\n+// can save time by not iterating over those entries.\n+void CTxMemPool::CalculateDescendants(txiter entryit, setEntries &setDescendants)\n+{\n+    setEntries stage;\n+    if (setDescendants.count(entryit) == 0) {\n+        stage.insert(entryit);\n+    }\n+    // Traverse down the children of entry, only adding children that are not\n+    // accounted for in setDescendants already (because those children have either\n+    // already been walked, or will be walked in this iteration).\n+    while (!stage.empty()) {\n+        txiter it = *stage.begin();\n+        setDescendants.insert(it);\n+        stage.erase(it);\n+\n+        const setEntries &setChildren = GetMemPoolChildren(it);\n+        BOOST_FOREACH(const txiter &childiter, setChildren) {\n+            if (!setDescendants.count(childiter)) {\n+                stage.insert(childiter);\n+            }\n+        }\n+    }\n+}\n \n void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& removed, bool fRecursive)\n {\n     // Remove transaction from memory pool\n     {\n         LOCK(cs);\n-        std::deque<uint256> txToRemove;\n-        txToRemove.push_back(origTx.GetHash());\n-        if (fRecursive && !mapTx.count(origTx.GetHash())) {\n+        setEntries txToRemove;\n+        txiter origit = mapTx.find(origTx.GetHash());\n+        if (origit != mapTx.end()) {\n+            txToRemove.insert(origit);\n+        } else if (fRecursive) {\n             // If recursively removing but origTx isn't in the mempool\n             // be sure to remove any children that are in the pool. This can\n             // happen during chain re-orgs if origTx isn't re-accepted into\n@@ -126,34 +430,23 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n                 std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(origTx.GetHash(), i));\n                 if (it == mapNextTx.end())\n                     continue;\n-                txToRemove.push_back(it->second.ptx->GetHash());\n+                txiter nextit = mapTx.find(it->second.ptx->GetHash());\n+                assert(nextit != mapTx.end());\n+                txToRemove.insert(nextit);\n             }\n         }\n-        while (!txToRemove.empty())\n-        {\n-            uint256 hash = txToRemove.front();\n-            txToRemove.pop_front();\n-            if (!mapTx.count(hash))\n-                continue;\n-            const CTransaction& tx = mapTx.find(hash)->GetTx();\n-            if (fRecursive) {\n-                for (unsigned int i = 0; i < tx.vout.size(); i++) {\n-                    std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(hash, i));\n-                    if (it == mapNextTx.end())\n-                        continue;\n-                    txToRemove.push_back(it->second.ptx->GetHash());\n-                }\n+        setEntries setAllRemoves;\n+        if (fRecursive) {\n+            BOOST_FOREACH(txiter it, txToRemove) {\n+                CalculateDescendants(it, setAllRemoves);\n             }\n-            BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-                mapNextTx.erase(txin.prevout);\n-\n-            removed.push_back(tx);\n-            totalTxSize -= mapTx.find(hash)->GetTxSize();\n-            cachedInnerUsage -= mapTx.find(hash)->DynamicMemoryUsage();\n-            mapTx.erase(hash);\n-            nTransactionsUpdated++;\n-            minerPolicyEstimator->removeTx(hash);\n+        } else {\n+            setAllRemoves.swap(txToRemove);\n+        }\n+        BOOST_FOREACH(txiter it, setAllRemoves) {\n+            removed.push_back(it->GetTx());\n         }\n+        RemoveStaged(setAllRemoves);\n     }\n }\n \n@@ -229,6 +522,7 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n void CTxMemPool::clear()\n {\n     LOCK(cs);\n+    mapLinks.clear();\n     mapTx.clear();\n     mapNextTx.clear();\n     totalTxSize = 0;\n@@ -255,14 +549,20 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n         checkTotal += it->GetTxSize();\n         innerUsage += it->DynamicMemoryUsage();\n         const CTransaction& tx = it->GetTx();\n+        txlinksMap::const_iterator linksiter = mapLinks.find(it);\n+        assert(linksiter != mapLinks.end());\n+        const TxLinks &links = linksiter->second;\n+        innerUsage += memusage::DynamicUsage(links.parents) + memusage::DynamicUsage(links.children);\n         bool fDependsWait = false;\n+        setEntries setParentCheck;\n         BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             // Check that every mempool transaction's inputs refer to available coins, or other mempool tx's.\n             indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n             if (it2 != mapTx.end()) {\n                 const CTransaction& tx2 = it2->GetTx();\n                 assert(tx2.vout.size() > txin.prevout.n && !tx2.vout[txin.prevout.n].IsNull());\n                 fDependsWait = true;\n+                setParentCheck.insert(it2);\n             } else {\n                 const CCoins* coins = pcoins->AccessCoins(txin.prevout.hash);\n                 assert(coins && coins->IsAvailable(txin.prevout.n));\n@@ -274,6 +574,33 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n             assert(it3->second.n == i);\n             i++;\n         }\n+        assert(setParentCheck == GetMemPoolParents(it));\n+        // Check children against mapNextTx\n+        CTxMemPool::setEntries setChildrenCheck;\n+        std::map<COutPoint, CInPoint>::const_iterator iter = mapNextTx.lower_bound(COutPoint(it->GetTx().GetHash(), 0));\n+        int64_t childSizes = 0;\n+        CAmount childFees = 0;\n+        for (; iter != mapNextTx.end() && iter->first.hash == it->GetTx().GetHash(); ++iter) {\n+            txiter childit = mapTx.find(iter->second.ptx->GetHash());\n+            assert(childit != mapTx.end()); // mapNextTx points to in-mempool transactions\n+            if (setChildrenCheck.insert(childit).second) {\n+                childSizes += childit->GetTxSize();\n+                childFees += childit->GetFee();\n+            }\n+        }\n+        assert(setChildrenCheck == GetMemPoolChildren(it));\n+        // Also check to make sure size/fees is greater than sum with immediate children.\n+        // just a sanity check, not definitive that this calc is correct...\n+        // also check that the size is less than the size of the entire mempool.\n+        if (!it->IsDirty()) {\n+            assert(it->GetSizeWithDescendants() >= childSizes + it->GetTxSize());\n+            assert(it->GetFeesWithDescendants() >= childFees + it->GetFee());\n+        } else {\n+            assert(it->GetSizeWithDescendants() == it->GetTxSize());\n+            assert(it->GetFeesWithDescendants() == it->GetFee());\n+        }\n+        assert(it->GetFeesWithDescendants() >= 0);\n+\n         if (fDependsWait)\n             waitingOnDependants.push_back(&(*it));\n         else {\n@@ -432,6 +759,60 @@ bool CCoinsViewMemPool::HaveCoins(const uint256 &txid) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    // Estimate the overhead of mapTx to be 6 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n-    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 6 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + cachedInnerUsage;\n+    // Estimate the overhead of mapTx to be 9 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n+    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 9 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + cachedInnerUsage;\n+}\n+\n+void CTxMemPool::RemoveStaged(setEntries &stage) {\n+    AssertLockHeld(cs);\n+    UpdateForRemoveFromMempool(stage);\n+    BOOST_FOREACH(const txiter& it, stage) {\n+        removeUnchecked(it);\n+    }\n+}\n+\n+bool CTxMemPool::addUnchecked(const uint256&hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n+{\n+    LOCK(cs);\n+    setEntries setAncestors;\n+    uint64_t nNoLimit = std::numeric_limits<uint64_t>::max();\n+    std::string dummy;\n+    CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+    return addUnchecked(hash, entry, setAncestors, fCurrentEstimate);\n+}\n+\n+void CTxMemPool::UpdateChild(txiter entry, txiter child, bool add)\n+{\n+    setEntries s;\n+    if (add && mapLinks[entry].children.insert(child).second) {\n+        cachedInnerUsage += memusage::IncrementalDynamicUsage(s);\n+    } else if (!add && mapLinks[entry].children.erase(child)) {\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(s);\n+    }\n+}\n+\n+void CTxMemPool::UpdateParent(txiter entry, txiter parent, bool add)\n+{\n+    setEntries s;\n+    if (add && mapLinks[entry].parents.insert(parent).second) {\n+        cachedInnerUsage += memusage::IncrementalDynamicUsage(s);\n+    } else if (!add && mapLinks[entry].parents.erase(parent)) {\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(s);\n+    }\n+}\n+\n+const CTxMemPool::setEntries & CTxMemPool::GetMemPoolParents(txiter entry) const\n+{\n+    assert (entry != mapTx.end());\n+    txlinksMap::const_iterator it = mapLinks.find(entry);\n+    assert(it != mapLinks.end());\n+    return it->second.parents;\n+}\n+\n+const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) const\n+{\n+    assert (entry != mapTx.end());\n+    txlinksMap::const_iterator it = mapLinks.find(entry);\n+    assert(it != mapLinks.end());\n+    return it->second.children;\n }"
      },
      {
        "sha": "f0c3f7e0f1fe31647574f801a7ea8753115df22b",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 266,
        "deletions": 7,
        "changes": 273,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5add7a74a672cb12b0a2a630d318d9bc64dd0f77/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_TXMEMPOOL_H\n \n #include <list>\n+#include <set>\n \n #include \"amount.h\"\n #include \"coins.h\"\n@@ -34,9 +35,25 @@ inline bool AllowFree(double dPriority)\n /** Fake height value used in CCoins to signify they are only in the memory pool (since 0.8) */\n static const unsigned int MEMPOOL_HEIGHT = 0x7FFFFFFF;\n \n-/**\n- * CTxMemPool stores these:\n+class CTxMemPool;\n+\n+/** \\class CTxMemPoolEntry\n+ *\n+ * CTxMemPoolEntry stores data about the correponding transaction, as well\n+ * as data about all in-mempool transactions that depend on the transaction\n+ * (\"descendant\" transactions).\n+ *\n+ * When a new entry is added to the mempool, we update the descendant state\n+ * (nCountWithDescendants, nSizeWithDescendants, and nFeesWithDescendants) for\n+ * all ancestors of the newly added transaction.\n+ *\n+ * If updating the descendant state is skipped, we can mark the entry as\n+ * \"dirty\", and set nSizeWithDescendants/nFeesWithDescendants to equal nTxSize/\n+ * nTxFee. (This can potentially happen during a reorg, where we limit the\n+ * amount of work we're willing to do to avoid consuming too much CPU.)\n+ *\n  */\n+\n class CTxMemPoolEntry\n {\n private:\n@@ -45,27 +62,69 @@ class CTxMemPoolEntry\n     size_t nTxSize; //! ... and avoid recomputing tx size\n     size_t nModSize; //! ... and modified size for priority\n     size_t nUsageSize; //! ... and total memory usage\n-    CFeeRate feeRate; //! ... and fee per kB\n     int64_t nTime; //! Local time when entering the mempool\n     double dPriority; //! Priority when entering the mempool\n     unsigned int nHeight; //! Chain height when entering the mempool\n     bool hadNoDependencies; //! Not dependent on any other txs when it entered the mempool\n \n+    // Information about descendants of this transaction that are in the\n+    // mempool; if we remove this transaction we must remove all of these\n+    // descendants as well.  if nCountWithDescendants is 0, treat this entry as\n+    // dirty, and nSizeWithDescendants and nFeesWithDescendants will not be\n+    // correct.\n+    uint64_t nCountWithDescendants; //! number of descendant transactions\n+    uint64_t nSizeWithDescendants;  //! ... and size\n+    CAmount nFeesWithDescendants;  //! ... and total fees (all including us)\n+\n public:\n     CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n                     int64_t _nTime, double _dPriority, unsigned int _nHeight, bool poolHasNoInputsOf = false);\n-    CTxMemPoolEntry();\n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n     CAmount GetFee() const { return nFee; }\n-    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n     size_t DynamicMemoryUsage() const { return nUsageSize; }\n+\n+    // Adjusts the descendant state, if this entry is not dirty.\n+    void UpdateState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount);\n+\n+    /** We can set the entry to be dirty if doing the full calculation of in-\n+     *  mempool descendants will be too expensive, which can potentially happen\n+     *  when re-adding transactions from a block back to the mempool.\n+     */\n+    void SetDirty();\n+    bool IsDirty() const { return nCountWithDescendants == 0; }\n+\n+    uint64_t GetCountWithDescendants() const { return nCountWithDescendants; }\n+    uint64_t GetSizeWithDescendants() const { return nSizeWithDescendants; }\n+    CAmount GetFeesWithDescendants() const { return nFeesWithDescendants; }\n+};\n+\n+// Helpers for modifying CTxMemPool::mapTx, which is a boost multi_index.\n+struct update_descendant_state\n+{\n+    update_descendant_state(int64_t _modifySize, CAmount _modifyFee, int64_t _modifyCount) :\n+        modifySize(_modifySize), modifyFee(_modifyFee), modifyCount(_modifyCount)\n+    {}\n+\n+    void operator() (CTxMemPoolEntry &e)\n+        { e.UpdateState(modifySize, modifyFee, modifyCount); }\n+\n+    private:\n+        int64_t modifySize;\n+        CAmount modifyFee;\n+        int64_t modifyCount;\n+};\n+\n+struct set_dirty\n+{\n+    void operator() (CTxMemPoolEntry &e)\n+        { e.SetDirty(); }\n };\n \n // extracts a TxMemPoolEntry's transaction hash\n@@ -78,14 +137,49 @@ struct mempoolentry_txid\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByFee\n+ *\n+ *  Sort an entry by max(feerate of entry's tx, feerate with all descendants).\n+ */\n class CompareTxMemPoolEntryByFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n     {\n-        if (a.GetFeeRate() == b.GetFeeRate())\n+        bool fUseADescendants = UseDescendantFeeRate(a);\n+        bool fUseBDescendants = UseDescendantFeeRate(b);\n+\n+        double aFees = fUseADescendants ? a.GetFeesWithDescendants() : a.GetFee();\n+        double aSize = fUseADescendants ? a.GetSizeWithDescendants() : a.GetTxSize();\n+\n+        double bFees = fUseBDescendants ? b.GetFeesWithDescendants() : b.GetFee();\n+        double bSize = fUseBDescendants ? b.GetSizeWithDescendants() : b.GetTxSize();\n+\n+        // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n+        double f1 = aFees * bSize;\n+        double f2 = aSize * bFees;\n+\n+        if (f1 == f2) {\n             return a.GetTime() < b.GetTime();\n-        return a.GetFeeRate() > b.GetFeeRate();\n+        }\n+        return f1 > f2;\n+    }\n+\n+    // Calculate which feerate to use for an entry (avoiding division).\n+    bool UseDescendantFeeRate(const CTxMemPoolEntry &a)\n+    {\n+        double f1 = (double)a.GetFee() * a.GetSizeWithDescendants();\n+        double f2 = (double)a.GetFeesWithDescendants() * a.GetTxSize();\n+        return f2 > f1;\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByEntryTime\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        return a.GetTime() < b.GetTime();\n     }\n };\n \n@@ -114,6 +208,71 @@ class CInPoint\n  * are added to the pool: if a new transaction double-spends\n  * an input of a transaction in the pool, it is dropped,\n  * as are non-standard transactions.\n+ *\n+ * CTxMemPool::mapTx, and CTxMemPoolEntry bookkeeping:\n+ *\n+ * mapTx is a boost::multi_index that sorts the mempool on 2 criteria:\n+ * - transaction hash\n+ * - feerate [we use max(feerate of tx, feerate of tx with all descendants)]\n+ *\n+ * Note: the term \"descendant\" refers to in-mempool transactions that depend on\n+ * this one, while \"ancestor\" refers to in-mempool transactions that a given\n+ * transaction depends on.\n+ *\n+ * In order for the feerate sort to remain correct, we must update transactions\n+ * in the mempool when new descendants arrive.  To facilitate this, we track\n+ * the set of in-mempool direct parents and direct children in mapLinks.  Within\n+ * each CTxMemPoolEntry, we track the size and fees of all descendants.\n+ *\n+ * Usually when a new transaction is added to the mempool, it has no in-mempool\n+ * children (because any such children would be an orphan).  So in\n+ * addUnchecked(), we:\n+ * - update a new entry's setMemPoolParents to include all in-mempool parents\n+ * - update the new entry's direct parents to include the new tx as a child\n+ * - update all ancestors of the transaction to include the new tx's size/fee\n+ *\n+ * When a transaction is removed from the mempool, we must:\n+ * - update all in-mempool parents to not track the tx in setMemPoolChildren\n+ * - update all ancestors to not include the tx's size/fees in descendant state\n+ * - update all in-mempool children to not include it as a parent\n+ *\n+ * These happen in UpdateForRemoveFromMempool().  (Note that when removing a\n+ * transaction along with its descendants, we must calculate that set of\n+ * transactions to be removed before doing the removal, or else the mempool can\n+ * be in an inconsistent state where it's impossible to walk the ancestors of\n+ * a transaction.)\n+ *\n+ * In the event of a reorg, the assumption that a newly added tx has no\n+ * in-mempool children is false.  In particular, the mempool is in an\n+ * inconsistent state while new transactions are being added, because there may\n+ * be descendant transactions of a tx coming from a disconnected block that are\n+ * unreachable from just looking at transactions in the mempool (the linking\n+ * transactions may also be in the disconnected block, waiting to be added).\n+ * Because of this, there's not much benefit in trying to search for in-mempool\n+ * children in addUnchecked().  Instead, in the special case of transactions\n+ * being added from a disconnected block, we require the caller to clean up the\n+ * state, to account for in-mempool, out-of-block descendants for all the\n+ * in-block transactions by calling UpdateTransactionsFromBlock().  Note that\n+ * until this is called, the mempool state is not consistent, and in particular\n+ * mapLinks may not be correct (and therefore functions like\n+ * CalculateMemPoolAncestors() and CalculateDescendants() that rely\n+ * on them to walk the mempool are not generally safe to use).\n+ *\n+ * Computational limits:\n+ *\n+ * Updating all in-mempool ancestors of a newly added transaction can be slow,\n+ * if no bound exists on how many in-mempool ancestors there may be.\n+ * CalculateMemPoolAncestors() takes configurable limits that are designed to\n+ * prevent these calculations from being too CPU intensive.\n+ *\n+ * Adding transactions from a disconnected block can be very time consuming,\n+ * because we don't have a way to limit the number of in-mempool descendants.\n+ * To bound CPU processing, we limit the amount of work we're willing to do\n+ * to properly update the descendant information for a tx being added from\n+ * a disconnected block.  If we would exceed the limit, then we instead mark\n+ * the entry as \"dirty\", and set the feerate for sorting purposes to be equal\n+ * the feerate of the transaction without any descendants.\n+ *\n  */\n class CTxMemPool\n {\n@@ -141,6 +300,31 @@ class CTxMemPool\n \n     mutable CCriticalSection cs;\n     indexed_transaction_set mapTx;\n+    typedef indexed_transaction_set::nth_index<0>::type::iterator txiter;\n+    struct CompareIteratorByHash {\n+        bool operator()(const txiter &a, const txiter &b) const {\n+            return a->GetTx().GetHash() < b->GetTx().GetHash();\n+        }\n+    };\n+    typedef std::set<txiter, CompareIteratorByHash> setEntries;\n+\n+private:\n+    typedef std::map<txiter, setEntries, CompareIteratorByHash> cacheMap;\n+\n+    struct TxLinks {\n+        setEntries parents;\n+        setEntries children;\n+    };\n+\n+    typedef std::map<txiter, TxLinks, CompareIteratorByHash> txlinksMap;\n+    txlinksMap mapLinks;\n+\n+    const setEntries & GetMemPoolParents(txiter entry) const;\n+    const setEntries & GetMemPoolChildren(txiter entry) const;\n+    void UpdateParent(txiter entry, txiter parent, bool add);\n+    void UpdateChild(txiter entry, txiter child, bool add);\n+\n+public:\n     std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n \n@@ -156,7 +340,13 @@ class CTxMemPool\n     void check(const CCoinsViewCache *pcoins) const;\n     void setSanityCheck(bool _fSanityCheck) { fSanityCheck = _fSanityCheck; }\n \n+    // addUnchecked must updated state for all ancestors of a given transaction,\n+    // to track size/count of descendant transactions.  First version of\n+    // addUnchecked can be used to have it call CalculateMemPoolAncestors(), and\n+    // then invoke the second version.\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate = true);\n+    bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate = true);\n+\n     void remove(const CTransaction &tx, std::list<CTransaction>& removed, bool fRecursive = false);\n     void removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight);\n     void removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed);\n@@ -178,6 +368,33 @@ class CTxMemPool\n     void ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta);\n     void ClearPrioritisation(const uint256 hash);\n \n+public:\n+    /** Remove a set of transactions from the mempool.\n+     *  If a transaction is in this set, then all in-mempool descendants must\n+     *  also be in the set.*/\n+    void RemoveStaged(setEntries &stage);\n+\n+    /** When adding transactions from a disconnected block back to the mempool,\n+     *  new mempool entries may have children in the mempool (which is generally\n+     *  not the case when otherwise adding transactions).\n+     *  UpdateTransactionsFromBlock() will find child transactions and update the\n+     *  descendant state for each transaction in hashesToUpdate (excluding any\n+     *  child transactions present in hashesToUpdate, which are already accounted\n+     *  for).  Note: hashesToUpdate should be the set of transactions from the\n+     *  disconnected block that have been accepted back into the mempool.\n+     */\n+    void UpdateTransactionsFromBlock(const std::vector<uint256> &hashesToUpdate);\n+\n+    /** Try to calculate all in-mempool ancestors of entry.\n+     *  (these are all calculated including the tx itself)\n+     *  limitAncestorCount = max number of ancestors\n+     *  limitAncestorSize = max size of ancestors\n+     *  limitDescendantCount = max number of descendants any ancestor can have\n+     *  limitDescendantSize = max size of descendants any ancestor can have\n+     *  errString = populated with error reason if any limits are hit\n+     */\n+    bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString);\n+\n     unsigned long size()\n     {\n         LOCK(cs);\n@@ -209,6 +426,48 @@ class CTxMemPool\n     bool ReadFeeEstimates(CAutoFile& filein);\n \n     size_t DynamicMemoryUsage() const;\n+\n+private:\n+    /** UpdateForDescendants is used by UpdateTransactionsFromBlock to update\n+     *  the descendants for a single transaction that has been added to the\n+     *  mempool but may have child transactions in the mempool, eg during a\n+     *  chain reorg.  setExclude is the set of descendant transactions in the\n+     *  mempool that must not be accounted for (because any descendants in\n+     *  setExclude were added to the mempool after the transaction being\n+     *  updated and hence their state is already reflected in the parent\n+     *  state).\n+     *\n+     *  If updating an entry requires looking at more than maxDescendantsToVisit\n+     *  transactions, outside of the ones in setExclude, then give up.\n+     *\n+     *  cachedDescendants will be updated with the descendants of the transaction\n+     *  being updated, so that future invocations don't need to walk the\n+     *  same transaction again, if encountered in another transaction chain.\n+     */\n+    bool UpdateForDescendants(txiter updateIt,\n+            int maxDescendantsToVisit,\n+            cacheMap &cachedDescendants,\n+            const std::set<uint256> &setExclude);\n+    /** Update ancestors of hash to add/remove it as a descendant transaction. */\n+    void UpdateAncestorsOf(bool add, txiter hash, setEntries &setAncestors);\n+    /** For each transaction being removed, update ancestors and any direct children. */\n+    void UpdateForRemoveFromMempool(const setEntries &entriesToRemove);\n+    /** Sever link between specified transaction and direct children. */\n+    void UpdateChildrenForRemoval(txiter entry);\n+    /** Populate setDescendants with all in-mempool descendants of hash.\n+     *  Assumes that setDescendants includes all in-mempool descendants of anything\n+     *  already in it.  */\n+    void CalculateDescendants(txiter it, setEntries &setDescendants);\n+\n+    /** Before calling removeUnchecked for a given transaction,\n+     *  UpdateForRemoveFromMempool must be called on the entire (dependent) set\n+     *  of transactions being removed at the same time.  We use each\n+     *  CTxMemPoolEntry's setMemPoolParents in order to walk ancestors of a\n+     *  given transaction that is removed, so we can't remove intermediate\n+     *  transactions in a chain before we've updated all the state for the\n+     *  removal.\n+     */\n+    void removeUnchecked(txiter entry);\n };\n \n /** "
      }
    ]
  },
  {
    "sha": "7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YWFjNmRiNmViNmI1NGRhNjJkNWVhYWZlN2YxNDU4NWVhMWVhMzRk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-20T08:42:35Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-20T08:42:35Z"
      },
      "message": "[QT] dump banlist to disk in case of ban/unban over QT",
      "tree": {
        "sha": "04331cd336586435c7bc0c58369b9be7e7b856d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04331cd336586435c7bc0c58369b9be7e7b856d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f90ea78cb68c60408df85d5c653257dbc9160fe"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9603a26c6e1ceb12724a2d1e7b3a18a38be3f722",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
        "patch": "@@ -809,6 +809,7 @@ void RPCConsole::banSelectedNode(int bantime)\n \n         CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n         bannedNode->fDisconnect = true;\n+        DumpBanlist();\n \n         clearSelectedNode();\n         clientModel->getBanTableModel()->refresh();\n@@ -827,6 +828,7 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n+        DumpBanlist();\n         clientModel->getBanTableModel()->refresh();\n     }\n }"
      }
    ]
  },
  {
    "sha": "8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjJkNmVkYWE5ZmJmYjYzNDRjYTUxZWRkMGIzNjU1YjQ1MWNiY2Fj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T12:58:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T11:24:34Z"
      },
      "message": "http: Disable libevent debug logging, if not explicitly enabled\n\nAdd a option \"-debug=libevent\" to enable libevent debugging for troubleshooting.\nLibevent logging is redirected to our own log.",
      "tree": {
        "sha": "b7effed5b45d351dbaad7206a7145bfe092bb775",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7effed5b45d351dbaad7206a7145bfe092bb775"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ce43da03dff3ee655949cd53d952dace555e268",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ce43da03dff3ee655949cd53d952dace555e268",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ce43da03dff3ee655949cd53d952dace555e268"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 20,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3fc880214310de26d9de68586a9260d89e3538cc",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "patch": "@@ -320,6 +320,15 @@ static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n     queue->Run();\n }\n \n+/** libevent event log callback */\n+static void libevent_log_cb(int severity, const char *msg)\n+{\n+    if (severity >= EVENT_LOG_WARN) // Log warn messages and higher without debug category\n+        LogPrintf(\"libevent: %s\\n\", msg);\n+    else\n+        LogPrint(\"libevent\", \"libevent: %s\\n\", msg);\n+}\n+\n bool InitHTTPServer()\n {\n     struct evhttp* http = 0;\n@@ -335,6 +344,16 @@ bool InitHTTPServer()\n         return false;\n     }\n \n+    // Redirect libevent's logging to our own log\n+    event_set_log_callback(&libevent_log_cb);\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    // If -debug=libevent, set full libevent debugging.\n+    // Otherwise, disable all libevent debugging.\n+    if (LogAcceptCategory(\"libevent\"))\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    else\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+#endif\n #ifdef WIN32\n     evthread_use_windows_threads();\n #else"
      },
      {
        "sha": "c259e3fa2d85eb1589cd875176cb243b565da492",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "patch": "@@ -387,7 +387,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http, libevent\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +"
      }
    ]
  },
  {
    "sha": "b0ce4508b04639189a6d0567782e27eeee5f73d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGNlNDUwOGIwNDYzOTE4OWE2ZDA1Njc3ODJlMjdlZWVlNWY3M2Q2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T12:34:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T12:34:47Z"
      },
      "message": "Merge pull request #6654\n\n5add7a7 Track transaction packages in CTxMemPoolEntry (Suhas Daftuar)\n34628a1 TxMemPool: Change mapTx to a boost::multi_index_container (Ashley Holman)",
      "tree": {
        "sha": "e8b86acba14f47100af0bbadeb748f6f6a002d58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8b86acba14f47100af0bbadeb748f6f6a002d58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0ce4508b04639189a6d0567782e27eeee5f73d6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJV//lnAAoJEHSBCwEjRsmmjXEH+wVG0NFLtPNkBgT7KZpPbtnd\natGsHH+EYIpduhIfMVN14udJVegMpJm2Kbfm63zR3hHxTn0Fhv/qXvVrSzE3m0Ol\nf48pj0l4C8OW8PvFxpggRpcP9jIkerVmkyWq8BhFzUXJc25nRK6pZqfw1hlU+hg3\nBSeT3+HC60QsdkQ+5kWM40kSczId6c12z0L8I8GTd7mJtWqU/PqXeifjNthuaFgj\nFRqzaCsBaY6rQTNIWyReim+W/IloZJYXQ9LY8qBQYaOCbx3ri/XcLFGBdiFDCwQ1\n8ARwDBiTUB2lOTlUhB4kandpiCTVPG5lAZPNb1c9WvsEZ+jaT0e2PkYj4wRq3pc=\n=B7GU\n-----END PGP SIGNATURE-----",
        "payload": "tree e8b86acba14f47100af0bbadeb748f6f6a002d58\nparent d5d1d2e65a1c3b91452d2428410f701bca1e53cc\nparent 5add7a74a672cb12b0a2a630d318d9bc64dd0f77\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442838884 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442838887 +0200\n\nMerge pull request #6654\n\n5add7a7 Track transaction packages in CTxMemPoolEntry (Suhas Daftuar)\n34628a1 TxMemPool: Change mapTx to a boost::multi_index_container (Ashley Holman)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0ce4508b04639189a6d0567782e27eeee5f73d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0ce4508b04639189a6d0567782e27eeee5f73d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0ce4508b04639189a6d0567782e27eeee5f73d6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1d2e65a1c3b91452d2428410f701bca1e53cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5d1d2e65a1c3b91452d2428410f701bca1e53cc"
      },
      {
        "sha": "5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5add7a74a672cb12b0a2a630d318d9bc64dd0f77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5add7a74a672cb12b0a2a630d318d9bc64dd0f77"
      }
    ],
    "stats": {
      "total": 1173,
      "additions": 1098,
      "deletions": 75
    },
    "files": [
      {
        "sha": "2e8a7c69ce127ef9b4e52d182d2b8df3cd7b382e",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -57,6 +57,7 @@ testScriptsExt=(\n     'invalidblockrequest.py'\n #    'forknotify.py'\n     'p2p-acceptblock.py'\n+    'mempool_packages.py'\n );\n \n #if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then"
      },
      {
        "sha": "6041f3a3dd9842ee2dc285eac1ed211dbdb72df4",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Test descendant package tracking code\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+def satoshi_round(amount):\n+    return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n+\n+class MempoolPackagesTest(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\"]))\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    # Build a transaction that spends parent_txid:vout\n+    # Return amount sent\n+    def chain_transaction(self, parent_txid, vout, value, fee, num_outputs):\n+        send_value = satoshi_round((value - fee)/num_outputs)\n+        inputs = [ {'txid' : parent_txid, 'vout' : vout} ]\n+        outputs = {}\n+        for i in xrange(num_outputs):\n+            outputs[self.nodes[0].getnewaddress()] = send_value\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signedtx = self.nodes[0].signrawtransaction(rawtx)\n+        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n+        fulltx = self.nodes[0].getrawtransaction(txid, 1)\n+        assert(len(fulltx['vout']) == num_outputs) # make sure we didn't generate a change output\n+        return (txid, send_value)\n+\n+    def run_test(self):\n+        ''' Mine some blocks and have them mature. '''\n+        self.nodes[0].generate(101)\n+        utxo = self.nodes[0].listunspent(10)\n+        txid = utxo[0]['txid']\n+        vout = utxo[0]['vout']\n+        value = utxo[0]['amount']\n+\n+        fee = Decimal(\"0.0001\")\n+        # 100 transactions off a confirmed tx should be fine\n+        chain = []\n+        for i in xrange(100):\n+            (txid, sent_value) = self.chain_transaction(txid, 0, value, fee, 1)\n+            value = sent_value\n+            chain.append(txid)\n+\n+        # Check mempool has 100 transactions in it, and descendant\n+        # count and fees should look correct\n+        mempool = self.nodes[0].getrawmempool(True)\n+        assert_equal(len(mempool), 100)\n+        descendant_count = 1\n+        descendant_fees = 0\n+        descendant_size = 0\n+        SATOSHIS = 100000000\n+\n+        for x in reversed(chain):\n+            assert_equal(mempool[x]['descendantcount'], descendant_count)\n+            descendant_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees)\n+            descendant_size += mempool[x]['size']\n+            assert_equal(mempool[x]['descendantsize'], descendant_size)\n+            descendant_count += 1\n+\n+        # Adding one more transaction on to the chain should fail.\n+        try:\n+            self.chain_transaction(txid, vout, value, fee, 1)\n+        except JSONRPCException as e:\n+            print \"too-long-ancestor-chain successfully rejected\"\n+\n+        # TODO: test ancestor size limits\n+\n+        # Now test descendant chain limits\n+        txid = utxo[1]['txid']\n+        value = utxo[1]['amount']\n+        vout = utxo[1]['vout']\n+\n+        transaction_package = []\n+        # First create one parent tx with 10 children\n+        (txid, sent_value) = self.chain_transaction(txid, vout, value, fee, 10)\n+        parent_transaction = txid\n+        for i in xrange(10):\n+            transaction_package.append({'txid': txid, 'vout': i, 'amount': sent_value})\n+\n+        for i in xrange(1000):\n+            utxo = transaction_package.pop(0)\n+            try:\n+                (txid, sent_value) = self.chain_transaction(utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n+                for j in xrange(10):\n+                    transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n+                if i == 998:\n+                    mempool = self.nodes[0].getrawmempool(True)\n+                    assert_equal(mempool[parent_transaction]['descendantcount'], 1000)\n+            except JSONRPCException as e:\n+                print e.error['message']\n+                assert_equal(i, 999)\n+                print \"tx that would create too large descendant package successfully rejected\"\n+\n+        # TODO: test descendant size limits\n+\n+if __name__ == '__main__':\n+    MempoolPackagesTest().main()"
      },
      {
        "sha": "9f1c1f6864e08152cdb7fc1cded75f8e8c9bb99e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -411,6 +411,10 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n+        strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n+        strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n+        strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n     }\n     string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)"
      },
      {
        "sha": "2a24d38e52760e2a5286a482832552e9d7986154",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -921,6 +921,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 REJECT_HIGHFEE, \"absurdly-high-fee\",\n                 strprintf(\"%d > %d\", nFees, ::minRelayTxFee.GetFee(nSize) * 10000));\n \n+        // Calculate in-mempool ancestors, up to a limit.\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT)*1000;\n+        size_t nLimitDescendants = GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT)*1000;\n+        std::string errString;\n+        if (!pool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize, nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return state.DoS(0, false, REJECT_NONSTANDARD, \"too-long-mempool-chain\", false, errString);\n+        }\n+\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))\n@@ -942,7 +953,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         }\n \n         // Store transaction in memory\n-        pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+        pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n     }\n \n     SyncWithWallets(tx, NULL);\n@@ -2033,13 +2044,23 @@ bool static DisconnectTip(CValidationState &state) {\n     if (!FlushStateToDisk(state, FLUSH_STATE_IF_NEEDED))\n         return false;\n     // Resurrect mempool transactions from the disconnected block.\n+    std::vector<uint256> vHashUpdate;\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n         CValidationState stateDummy;\n-        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL))\n+        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL)) {\n             mempool.remove(tx, removed, true);\n+        } else if (mempool.exists(tx.GetHash())) {\n+            vHashUpdate.push_back(tx.GetHash());\n+        }\n     }\n+    // AcceptToMemoryPool/addUnchecked all assume that new mempool entries have\n+    // no in-mempool children, which is generally not true when adding\n+    // previously-confirmed transactions back to the mempool.\n+    // UpdateTransactionsFromBlock finds descendants of any transactions in this\n+    // block that were added back and cleans up the mempool state.\n+    mempool.UpdateTransactionsFromBlock(vHashUpdate);\n     mempool.removeCoinbaseSpends(pcoinsTip, pindexDelete->nHeight);\n     mempool.check(pcoinsTip);\n     // Update chainActive and related variables.\n@@ -4258,7 +4279,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d %s: accepted %s (poolsz %u)\\n\",\n                 pfrom->id, pfrom->cleanSubVer,\n                 tx.GetHash().ToString(),\n-                mempool.mapTx.size());\n+                mempool.size());\n \n             // Recursively process any orphan transactions that depended on this one\n             set<NodeId> setMisbehaving;"
      },
      {
        "sha": "a6001eed8f1c6823f80cd7ba127c5c781848ee5d",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -43,6 +43,14 @@ struct CNodeStateStats;\n static const bool DEFAULT_ALERTS = true;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n+/** Default for -limitancestorcount, max number of in-mempool ancestors */\n+static const unsigned int DEFAULT_ANCESTOR_LIMIT = 100;\n+/** Default for -limitancestorsize, maximum kilobytes of tx + all in-mempool ancestors */\n+static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n+/** Default for -limitdescendantcount, max number of in-mempool descendants */\n+static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n+/** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n+static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */"
      },
      {
        "sha": "b475c3313b20004b4403604b58d77caec3e1c1fb",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -74,18 +74,30 @@ static inline size_t DynamicUsage(const std::vector<X>& v)\n     return MallocUsage(v.capacity() * sizeof(X));\n }\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::set<X>& s)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::set<X, Y>& s)\n {\n     return MallocUsage(sizeof(stl_tree_node<X>)) * s.size();\n }\n \n template<typename X, typename Y>\n-static inline size_t DynamicUsage(const std::map<X, Y>& m)\n+static inline size_t IncrementalDynamicUsage(const std::set<X, Y>& s)\n+{\n+    return MallocUsage(sizeof(stl_tree_node<X>));\n+}\n+\n+template<typename X, typename Y, typename Z>\n+static inline size_t DynamicUsage(const std::map<X, Y, Z>& m)\n {\n     return MallocUsage(sizeof(stl_tree_node<std::pair<const X, Y> >)) * m.size();\n }\n \n+template<typename X, typename Y, typename Z>\n+static inline size_t IncrementalDynamicUsage(const std::map<X, Y, Z>& m)\n+{\n+    return MallocUsage(sizeof(stl_tree_node<std::pair<const X, Y> >));\n+}\n+\n // Boost data structures\n \n template<typename X>"
      },
      {
        "sha": "b2a356e52d4d29a6badec3bfb373fc7c75da2754",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -158,10 +158,10 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         // This vector will be sorted into a priority queue:\n         vector<TxPriority> vecPriority;\n         vecPriority.reserve(mempool.mapTx.size());\n-        for (map<uint256, CTxMemPoolEntry>::iterator mi = mempool.mapTx.begin();\n+        for (CTxMemPool::indexed_transaction_set::iterator mi = mempool.mapTx.begin();\n              mi != mempool.mapTx.end(); ++mi)\n         {\n-            const CTransaction& tx = mi->second.GetTx();\n+            const CTransaction& tx = mi->GetTx();\n             if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n                 continue;\n \n@@ -196,7 +196,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                     }\n                     mapDependers[txin.prevout.hash].push_back(porphan);\n                     porphan->setDependsOn.insert(txin.prevout.hash);\n-                    nTotalIn += mempool.mapTx[txin.prevout.hash].GetTx().vout[txin.prevout.n].nValue;\n+                    nTotalIn += mempool.mapTx.find(txin.prevout.hash)->GetTx().vout[txin.prevout.n].nValue;\n                     continue;\n                 }\n                 const CCoins* coins = view.AccessCoins(txin.prevout.hash);\n@@ -226,7 +226,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                 porphan->feeRate = feeRate;\n             }\n             else\n-                vecPriority.push_back(TxPriority(dPriority, feeRate, &mi->second.GetTx()));\n+                vecPriority.push_back(TxPriority(dPriority, feeRate, &(mi->GetTx())));\n         }\n \n         // Collect transactions into block"
      },
      {
        "sha": "1c201ef99d16efd9666282eb790bc4b23c925592",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -181,17 +181,19 @@ UniValue mempoolToJSON(bool fVerbose = false)\n     {\n         LOCK(mempool.cs);\n         UniValue o(UniValue::VOBJ);\n-        BOOST_FOREACH(const PAIRTYPE(uint256, CTxMemPoolEntry)& entry, mempool.mapTx)\n+        BOOST_FOREACH(const CTxMemPoolEntry& e, mempool.mapTx)\n         {\n-            const uint256& hash = entry.first;\n-            const CTxMemPoolEntry& e = entry.second;\n+            const uint256& hash = e.GetTx().GetHash();\n             UniValue info(UniValue::VOBJ);\n             info.push_back(Pair(\"size\", (int)e.GetTxSize()));\n             info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));\n             info.push_back(Pair(\"time\", e.GetTime()));\n             info.push_back(Pair(\"height\", (int)e.GetHeight()));\n             info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n             info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n+            info.push_back(Pair(\"descendantcount\", e.GetCountWithDescendants()));\n+            info.push_back(Pair(\"descendantsize\", e.GetSizeWithDescendants()));\n+            info.push_back(Pair(\"descendantfees\", e.GetFeesWithDescendants()));\n             const CTransaction& tx = e.GetTx();\n             set<string> setDepends;\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n@@ -246,6 +248,9 @@ UniValue getrawmempool(const UniValue& params, bool fHelp)\n             \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n             \"    \\\"startingpriority\\\" : n, (numeric) priority when transaction entered pool\\n\"\n             \"    \\\"currentpriority\\\" : n,  (numeric) transaction priority now\\n\"\n+            \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n+            \"    \\\"descendantsize\\\" : n,   (numeric) size of in-mempool descendants (including this one)\\n\"\n+            \"    \\\"descendantfees\\\" : n,   (numeric) fees of in-mempool descendants (including this one)\\n\"\n             \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n             \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n             \"       ... ]\\n\""
      },
      {
        "sha": "5bf1e98e8f5156ed9638efe3865ee235e3aeb75d",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -9,6 +9,7 @@\n \n #include <boost/test/unit_test.hpp>\n #include <list>\n+#include <vector>\n \n BOOST_FIXTURE_TEST_SUITE(mempool_tests, TestingSetup)\n \n@@ -100,4 +101,184 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+void CheckSort(CTxMemPool &pool, std::vector<std::string> &sortedOrder)\n+{\n+    BOOST_CHECK_EQUAL(pool.size(), sortedOrder.size());\n+    CTxMemPool::indexed_transaction_set::nth_index<1>::type::iterator it = pool.mapTx.get<1>().begin();\n+    int count=0;\n+    for (; it != pool.mapTx.get<1>().end(); ++it, ++count) {\n+        BOOST_CHECK_EQUAL(it->GetTx().GetHash().ToString(), sortedOrder[count]);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n+{\n+    CTxMemPool pool(CFeeRate(0));\n+\n+    /* 3rd highest fee */\n+    CMutableTransaction tx1 = CMutableTransaction();\n+    tx1.vout.resize(1);\n+    tx1.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx1.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx1.GetHash(), CTxMemPoolEntry(tx1, 10000LL, 0, 10.0, 1, true));\n+\n+    /* highest fee */\n+    CMutableTransaction tx2 = CMutableTransaction();\n+    tx2.vout.resize(1);\n+    tx2.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx2.vout[0].nValue = 2 * COIN;\n+    pool.addUnchecked(tx2.GetHash(), CTxMemPoolEntry(tx2, 20000LL, 0, 9.0, 1, true));\n+\n+    /* lowest fee */\n+    CMutableTransaction tx3 = CMutableTransaction();\n+    tx3.vout.resize(1);\n+    tx3.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx3.vout[0].nValue = 5 * COIN;\n+    pool.addUnchecked(tx3.GetHash(), CTxMemPoolEntry(tx3, 0LL, 0, 100.0, 1, true));\n+\n+    /* 2nd highest fee */\n+    CMutableTransaction tx4 = CMutableTransaction();\n+    tx4.vout.resize(1);\n+    tx4.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx4.vout[0].nValue = 6 * COIN;\n+    pool.addUnchecked(tx4.GetHash(), CTxMemPoolEntry(tx4, 15000LL, 0, 1.0, 1, true));\n+\n+    /* equal fee rate to tx1, but newer */\n+    CMutableTransaction tx5 = CMutableTransaction();\n+    tx5.vout.resize(1);\n+    tx5.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx5.vout[0].nValue = 11 * COIN;\n+    pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 10000LL, 1, 10.0, 1, true));\n+    BOOST_CHECK_EQUAL(pool.size(), 5);\n+\n+    std::vector<std::string> sortedOrder;\n+    sortedOrder.resize(5);\n+    sortedOrder[0] = tx2.GetHash().ToString(); // 20000\n+    sortedOrder[1] = tx4.GetHash().ToString(); // 15000\n+    sortedOrder[2] = tx1.GetHash().ToString(); // 10000\n+    sortedOrder[3] = tx5.GetHash().ToString(); // 10000\n+    sortedOrder[4] = tx3.GetHash().ToString(); // 0\n+    CheckSort(pool, sortedOrder);\n+\n+    /* low fee but with high fee child */\n+    /* tx6 -> tx7 -> tx8, tx9 -> tx10 */\n+    CMutableTransaction tx6 = CMutableTransaction();\n+    tx6.vout.resize(1);\n+    tx6.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx6.vout[0].nValue = 20 * COIN;\n+    pool.addUnchecked(tx6.GetHash(), CTxMemPoolEntry(tx6, 0LL, 1, 10.0, 1, true));\n+    BOOST_CHECK_EQUAL(pool.size(), 6);\n+    // Check that at this point, tx6 is sorted low\n+    sortedOrder.push_back(tx6.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    CTxMemPool::setEntries setAncestors;\n+    setAncestors.insert(pool.mapTx.find(tx6.GetHash()));\n+    CMutableTransaction tx7 = CMutableTransaction();\n+    tx7.vin.resize(1);\n+    tx7.vin[0].prevout = COutPoint(tx6.GetHash(), 0);\n+    tx7.vin[0].scriptSig = CScript() << OP_11;\n+    tx7.vout.resize(2);\n+    tx7.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx7.vout[0].nValue = 10 * COIN;\n+    tx7.vout[1].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx7.vout[1].nValue = 1 * COIN;\n+\n+    CTxMemPool::setEntries setAncestorsCalculated;\n+    std::string dummy;\n+    CTxMemPoolEntry entry7(tx7, 2000000LL, 1, 10.0, 1, true);\n+    BOOST_CHECK_EQUAL(pool.CalculateMemPoolAncestors(entry7, setAncestorsCalculated, 100, 1000000, 1000, 1000000, dummy), true);\n+    BOOST_CHECK(setAncestorsCalculated == setAncestors);\n+\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 2000000LL, 1, 10.0, 1, true), setAncestors);\n+    BOOST_CHECK_EQUAL(pool.size(), 7);\n+\n+    // Now tx6 should be sorted higher (high fee child): tx7, tx6, tx2, ...\n+    sortedOrder.erase(sortedOrder.end()-1);\n+    sortedOrder.insert(sortedOrder.begin(), tx6.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx7.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    /* low fee child of tx7 */\n+    CMutableTransaction tx8 = CMutableTransaction();\n+    tx8.vin.resize(1);\n+    tx8.vin[0].prevout = COutPoint(tx7.GetHash(), 0);\n+    tx8.vin[0].scriptSig = CScript() << OP_11;\n+    tx8.vout.resize(1);\n+    tx8.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx8.vout[0].nValue = 10 * COIN;\n+    setAncestors.insert(pool.mapTx.find(tx7.GetHash()));\n+    pool.addUnchecked(tx8.GetHash(), CTxMemPoolEntry(tx8, 0LL, 2, 10.0, 1, true), setAncestors);\n+\n+    // Now tx8 should be sorted low, but tx6/tx both high\n+    sortedOrder.push_back(tx8.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    /* low fee child of tx7 */\n+    CMutableTransaction tx9 = CMutableTransaction();\n+    tx9.vin.resize(1);\n+    tx9.vin[0].prevout = COutPoint(tx7.GetHash(), 1);\n+    tx9.vin[0].scriptSig = CScript() << OP_11;\n+    tx9.vout.resize(1);\n+    tx9.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx9.vout[0].nValue = 1 * COIN;\n+    pool.addUnchecked(tx9.GetHash(), CTxMemPoolEntry(tx9, 0LL, 3, 10.0, 1, true), setAncestors);\n+\n+    // tx9 should be sorted low\n+    BOOST_CHECK_EQUAL(pool.size(), 9);\n+    sortedOrder.push_back(tx9.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    std::vector<std::string> snapshotOrder = sortedOrder;\n+\n+    setAncestors.insert(pool.mapTx.find(tx8.GetHash()));\n+    setAncestors.insert(pool.mapTx.find(tx9.GetHash()));\n+    /* tx10 depends on tx8 and tx9 and has a high fee*/\n+    CMutableTransaction tx10 = CMutableTransaction();\n+    tx10.vin.resize(2);\n+    tx10.vin[0].prevout = COutPoint(tx8.GetHash(), 0);\n+    tx10.vin[0].scriptSig = CScript() << OP_11;\n+    tx10.vin[1].prevout = COutPoint(tx9.GetHash(), 0);\n+    tx10.vin[1].scriptSig = CScript() << OP_11;\n+    tx10.vout.resize(1);\n+    tx10.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+    tx10.vout[0].nValue = 10 * COIN;\n+\n+    setAncestorsCalculated.clear();\n+    CTxMemPoolEntry entry10(tx10, 200000LL, 4, 10.0, 1, true);\n+    BOOST_CHECK_EQUAL(pool.CalculateMemPoolAncestors(entry10, setAncestorsCalculated, 100, 1000000, 1000, 1000000, dummy), true);\n+    BOOST_CHECK(setAncestorsCalculated == setAncestors);\n+\n+    pool.addUnchecked(tx10.GetHash(), CTxMemPoolEntry(tx10, 200000LL, 4, 10.0, 1, true), setAncestors);\n+\n+    /**\n+     *  tx8 and tx9 should both now be sorted higher\n+     *  Final order after tx10 is added:\n+     *\n+     *  tx7 = 2.2M (4 txs)\n+     *  tx6 = 2.2M (5 txs)\n+     *  tx10 = 200k (1 tx)\n+     *  tx8 = 200k (2 txs)\n+     *  tx9 = 200k (2 txs)\n+     *  tx2 = 20000 (1)\n+     *  tx4 = 15000 (1)\n+     *  tx1 = 10000 (1)\n+     *  tx5 = 10000 (1)\n+     *  tx3 = 0 (1)\n+     */\n+    sortedOrder.erase(sortedOrder.end()-2, sortedOrder.end()); // take out tx8, tx9 from the end\n+    sortedOrder.insert(sortedOrder.begin()+2, tx10.GetHash().ToString()); // tx10 is after tx6\n+    sortedOrder.insert(sortedOrder.begin()+3, tx9.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin()+3, tx8.GetHash().ToString());\n+    CheckSort(pool, sortedOrder);\n+\n+    // there should be 10 transactions in the mempool\n+    BOOST_CHECK_EQUAL(pool.size(), 10);\n+\n+    // Now try removing tx10 and verify the sort order returns to normal\n+    std::list<CTransaction> removed;\n+    pool.remove(pool.mapTx.find(tx10.GetHash())->GetTx(), removed, true);\n+    CheckSort(pool, snapshotOrder);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "2f603e3c9fbd459ab2b25ad0a54a6cd9019a1bea",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 443,
        "deletions": 58,
        "changes": 501,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -17,12 +17,6 @@\n \n using namespace std;\n \n-CTxMemPoolEntry::CTxMemPoolEntry():\n-    nFee(0), nTxSize(0), nModSize(0), nUsageSize(0), nTime(0), dPriority(0.0), hadNoDependencies(false)\n-{\n-    nHeight = MEMPOOL_HEIGHT;\n-}\n-\n CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n                                  int64_t _nTime, double _dPriority,\n                                  unsigned int _nHeight, bool poolHasNoInputsOf):\n@@ -32,6 +26,10 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n     nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n     nModSize = tx.CalculateModifiedSize(nTxSize);\n     nUsageSize = RecursiveDynamicUsage(tx);\n+\n+    nCountWithDescendants = 1;\n+    nSizeWithDescendants = nTxSize;\n+    nFeesWithDescendants = nFee;\n }\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n@@ -48,6 +46,244 @@ CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n     return dResult;\n }\n \n+// Update the given tx for any in-mempool descendants.\n+// Assumes that setMemPoolChildren is correct for the given tx and all\n+// descendants.\n+bool CTxMemPool::UpdateForDescendants(txiter updateIt, int maxDescendantsToVisit, cacheMap &cachedDescendants, const std::set<uint256> &setExclude)\n+{\n+    // Track the number of entries (outside setExclude) that we'd need to visit\n+    // (will bail out if it exceeds maxDescendantsToVisit)\n+    int nChildrenToVisit = 0;\n+\n+    setEntries stageEntries, setAllDescendants;\n+    stageEntries = GetMemPoolChildren(updateIt);\n+\n+    while (!stageEntries.empty()) {\n+        const txiter cit = *stageEntries.begin();\n+        if (cit->IsDirty()) {\n+            // Don't consider any more children if any descendant is dirty\n+            return false;\n+        }\n+        setAllDescendants.insert(cit);\n+        stageEntries.erase(cit);\n+        const setEntries &setChildren = GetMemPoolChildren(cit);\n+        BOOST_FOREACH(const txiter childEntry, setChildren) {\n+            cacheMap::iterator cacheIt = cachedDescendants.find(childEntry);\n+            if (cacheIt != cachedDescendants.end()) {\n+                // We've already calculated this one, just add the entries for this set\n+                // but don't traverse again.\n+                BOOST_FOREACH(const txiter cacheEntry, cacheIt->second) {\n+                    // update visit count only for new child transactions\n+                    // (outside of setExclude and stageEntries)\n+                    if (setAllDescendants.insert(cacheEntry).second &&\n+                            !setExclude.count(cacheEntry->GetTx().GetHash()) &&\n+                            !stageEntries.count(cacheEntry)) {\n+                        nChildrenToVisit++;\n+                    }\n+                }\n+            } else if (!setAllDescendants.count(childEntry)) {\n+                // Schedule for later processing and update our visit count\n+                if (stageEntries.insert(childEntry).second && !setExclude.count(childEntry->GetTx().GetHash())) {\n+                        nChildrenToVisit++;\n+                }\n+            }\n+            if (nChildrenToVisit > maxDescendantsToVisit) {\n+                return false;\n+            }\n+        }\n+    }\n+    // setAllDescendants now contains all in-mempool descendants of updateIt.\n+    // Update and add to cached descendant map\n+    int64_t modifySize = 0;\n+    CAmount modifyFee = 0;\n+    int64_t modifyCount = 0;\n+    BOOST_FOREACH(txiter cit, setAllDescendants) {\n+        if (!setExclude.count(cit->GetTx().GetHash())) {\n+            modifySize += cit->GetTxSize();\n+            modifyFee += cit->GetFee();\n+            modifyCount++;\n+            cachedDescendants[updateIt].insert(cit);\n+        }\n+    }\n+    mapTx.modify(updateIt, update_descendant_state(modifySize, modifyFee, modifyCount));\n+    return true;\n+}\n+\n+// vHashesToUpdate is the set of transaction hashes from a disconnected block\n+// which has been re-added to the mempool.\n+// for each entry, look for descendants that are outside hashesToUpdate, and\n+// add fee/size information for such descendants to the parent.\n+void CTxMemPool::UpdateTransactionsFromBlock(const std::vector<uint256> &vHashesToUpdate)\n+{\n+    LOCK(cs);\n+    // For each entry in vHashesToUpdate, store the set of in-mempool, but not\n+    // in-vHashesToUpdate transactions, so that we don't have to recalculate\n+    // descendants when we come across a previously seen entry.\n+    cacheMap mapMemPoolDescendantsToUpdate;\n+\n+    // Use a set for lookups into vHashesToUpdate (these entries are already\n+    // accounted for in the state of their ancestors)\n+    std::set<uint256> setAlreadyIncluded(vHashesToUpdate.begin(), vHashesToUpdate.end());\n+\n+    // Iterate in reverse, so that whenever we are looking at at a transaction\n+    // we are sure that all in-mempool descendants have already been processed.\n+    // This maximizes the benefit of the descendant cache and guarantees that\n+    // setMemPoolChildren will be updated, an assumption made in\n+    // UpdateForDescendants.\n+    BOOST_REVERSE_FOREACH(const uint256 &hash, vHashesToUpdate) {\n+        // we cache the in-mempool children to avoid duplicate updates\n+        setEntries setChildren;\n+        // calculate children from mapNextTx\n+        txiter it = mapTx.find(hash);\n+        if (it == mapTx.end()) {\n+            continue;\n+        }\n+        std::map<COutPoint, CInPoint>::iterator iter = mapNextTx.lower_bound(COutPoint(hash, 0));\n+        // First calculate the children, and update setMemPoolChildren to\n+        // include them, and update their setMemPoolParents to include this tx.\n+        for (; iter != mapNextTx.end() && iter->first.hash == hash; ++iter) {\n+            const uint256 &childHash = iter->second.ptx->GetHash();\n+            txiter childIter = mapTx.find(childHash);\n+            assert(childIter != mapTx.end());\n+            // We can skip updating entries we've encountered before or that\n+            // are in the block (which are already accounted for).\n+            if (setChildren.insert(childIter).second && !setAlreadyIncluded.count(childHash)) {\n+                UpdateChild(it, childIter, true);\n+                UpdateParent(childIter, it, true);\n+            }\n+        }\n+        if (!UpdateForDescendants(it, 100, mapMemPoolDescendantsToUpdate, setAlreadyIncluded)) {\n+            // Mark as dirty if we can't do the calculation.\n+            mapTx.modify(it, set_dirty());\n+        }\n+    }\n+}\n+\n+bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString)\n+{\n+    setEntries parentHashes;\n+    const CTransaction &tx = entry.GetTx();\n+\n+    // Get parents of this transaction that are in the mempool\n+    // Entry may or may not already be in the mempool, and GetMemPoolParents()\n+    // is only valid for entries in the mempool, so we iterate mapTx to find\n+    // parents.\n+    // TODO: optimize this so that we only check limits and walk\n+    // tx.vin when called on entries not already in the mempool.\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        txiter piter = mapTx.find(tx.vin[i].prevout.hash);\n+        if (piter != mapTx.end()) {\n+            parentHashes.insert(piter);\n+            if (parentHashes.size() + 1 > limitAncestorCount) {\n+                errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n+                return false;\n+            }\n+        }\n+    }\n+\n+    size_t totalSizeWithAncestors = entry.GetTxSize();\n+\n+    while (!parentHashes.empty()) {\n+        txiter stageit = *parentHashes.begin();\n+\n+        setAncestors.insert(stageit);\n+        parentHashes.erase(stageit);\n+        totalSizeWithAncestors += stageit->GetTxSize();\n+\n+        if (stageit->GetSizeWithDescendants() + entry.GetTxSize() > limitDescendantSize) {\n+            errString = strprintf(\"exceeds descendant size limit for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantSize);\n+            return false;\n+        } else if (stageit->GetCountWithDescendants() + 1 > limitDescendantCount) {\n+            errString = strprintf(\"too many descendants for tx %s [limit: %u]\", stageit->GetTx().GetHash().ToString(), limitDescendantCount);\n+            return false;\n+        } else if (totalSizeWithAncestors > limitAncestorSize) {\n+            errString = strprintf(\"exceeds ancestor size limit [limit: %u]\", limitAncestorSize);\n+            return false;\n+        }\n+\n+        const setEntries & setMemPoolParents = GetMemPoolParents(stageit);\n+        BOOST_FOREACH(const txiter &phash, setMemPoolParents) {\n+            // If this is a new ancestor, add it.\n+            if (setAncestors.count(phash) == 0) {\n+                parentHashes.insert(phash);\n+            }\n+            if (parentHashes.size() + setAncestors.size() + 1 > limitAncestorCount) {\n+                errString = strprintf(\"too many unconfirmed ancestors [limit: %u]\", limitAncestorCount);\n+                return false;\n+            }\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+void CTxMemPool::UpdateAncestorsOf(bool add, txiter it, setEntries &setAncestors)\n+{\n+    setEntries parentIters = GetMemPoolParents(it);\n+    // add or remove this tx as a child of each parent\n+    BOOST_FOREACH(txiter piter, parentIters) {\n+        UpdateChild(piter, it, add);\n+    }\n+    const int64_t updateCount = (add ? 1 : -1);\n+    const int64_t updateSize = updateCount * it->GetTxSize();\n+    const CAmount updateFee = updateCount * it->GetFee();\n+    BOOST_FOREACH(txiter ancestorIt, setAncestors) {\n+        mapTx.modify(ancestorIt, update_descendant_state(updateSize, updateFee, updateCount));\n+    }\n+}\n+\n+void CTxMemPool::UpdateChildrenForRemoval(txiter it)\n+{\n+    const setEntries &setMemPoolChildren = GetMemPoolChildren(it);\n+    BOOST_FOREACH(txiter updateIt, setMemPoolChildren) {\n+        UpdateParent(updateIt, it, false);\n+    }\n+}\n+\n+void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove)\n+{\n+    // For each entry, walk back all ancestors and decrement size associated with this\n+    // transaction\n+    const uint64_t nNoLimit = std::numeric_limits<uint64_t>::max();\n+    BOOST_FOREACH(txiter removeIt, entriesToRemove) {\n+        setEntries setAncestors;\n+        const CTxMemPoolEntry &entry = *removeIt;\n+        std::string dummy;\n+        CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+        // Note that UpdateAncestorsOf severs the child links that point to\n+        // removeIt in the entries for the parents of removeIt.  This is\n+        // fine since we don't need to use the mempool children of any entries\n+        // to walk back over our ancestors (but we do need the mempool\n+        // parents!)\n+        UpdateAncestorsOf(false, removeIt, setAncestors);\n+    }\n+    // After updating all the ancestor sizes, we can now sever the link between each\n+    // transaction being removed and any mempool children (ie, update setMemPoolParents\n+    // for each direct child of a transaction being removed).\n+    BOOST_FOREACH(txiter removeIt, entriesToRemove) {\n+        UpdateChildrenForRemoval(removeIt);\n+    }\n+}\n+\n+void CTxMemPoolEntry::SetDirty()\n+{\n+    nCountWithDescendants = 0;\n+    nSizeWithDescendants = nTxSize;\n+    nFeesWithDescendants = nFee;\n+}\n+\n+void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount)\n+{\n+    if (!IsDirty()) {\n+        nSizeWithDescendants += modifySize;\n+        assert(int64_t(nSizeWithDescendants) > 0);\n+        nFeesWithDescendants += modifyFee;\n+        assert(nFeesWithDescendants >= 0);\n+        nCountWithDescendants += modifyCount;\n+        assert(int64_t(nCountWithDescendants) > 0);\n+    }\n+}\n+\n CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n     nTransactionsUpdated(0)\n {\n@@ -89,34 +325,103 @@ void CTxMemPool::AddTransactionsUpdated(unsigned int n)\n     nTransactionsUpdated += n;\n }\n \n-\n-bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n+bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate)\n {\n     // Add to memory pool without checking anything.\n     // Used by main.cpp AcceptToMemoryPool(), which DOES do\n     // all the appropriate checks.\n     LOCK(cs);\n-    mapTx[hash] = entry;\n-    const CTransaction& tx = mapTx[hash].GetTx();\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    indexed_transaction_set::iterator newit = mapTx.insert(entry).first;\n+    mapLinks.insert(make_pair(newit, TxLinks()));\n+\n+    // Update cachedInnerUsage to include contained transaction's usage.\n+    // (When we update the entry for in-mempool parents, memory usage will be\n+    // further updated.)\n+    cachedInnerUsage += entry.DynamicMemoryUsage();\n+\n+    const CTransaction& tx = newit->GetTx();\n+    std::set<uint256> setParentTransactions;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n         mapNextTx[tx.vin[i].prevout] = CInPoint(&tx, i);\n+        setParentTransactions.insert(tx.vin[i].prevout.hash);\n+    }\n+    // Don't bother worrying about child transactions of this one.\n+    // Normal case of a new transaction arriving is that there can't be any\n+    // children, because such children would be orphans.\n+    // An exception to that is if a transaction enters that used to be in a block.\n+    // In that case, our disconnect block logic will call UpdateTransactionsFromBlock\n+    // to clean up the mess we're leaving here.\n+\n+    // Update ancestors with information about this tx\n+    BOOST_FOREACH (const uint256 &phash, setParentTransactions) {\n+        txiter pit = mapTx.find(phash);\n+        if (pit != mapTx.end()) {\n+            UpdateParent(newit, pit, true);\n+        }\n+    }\n+    UpdateAncestorsOf(true, newit, setAncestors);\n+\n     nTransactionsUpdated++;\n     totalTxSize += entry.GetTxSize();\n-    cachedInnerUsage += entry.DynamicMemoryUsage();\n     minerPolicyEstimator->processTransaction(entry, fCurrentEstimate);\n \n     return true;\n }\n \n+void CTxMemPool::removeUnchecked(txiter it)\n+{\n+    const uint256 hash = it->GetTx().GetHash();\n+    BOOST_FOREACH(const CTxIn& txin, it->GetTx().vin)\n+        mapNextTx.erase(txin.prevout);\n+\n+    totalTxSize -= it->GetTxSize();\n+    cachedInnerUsage -= it->DynamicMemoryUsage();\n+    cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n+    mapLinks.erase(it);\n+    mapTx.erase(it);\n+    nTransactionsUpdated++;\n+    minerPolicyEstimator->removeTx(hash);\n+}\n+\n+// Calculates descendants of entry that are not already in setDescendants, and adds to\n+// setDescendants. Assumes entryit is already a tx in the mempool and setMemPoolChildren\n+// is correct for tx and all descendants.\n+// Also assumes that if an entry is in setDescendants already, then all\n+// in-mempool descendants of it are already in setDescendants as well, so that we\n+// can save time by not iterating over those entries.\n+void CTxMemPool::CalculateDescendants(txiter entryit, setEntries &setDescendants)\n+{\n+    setEntries stage;\n+    if (setDescendants.count(entryit) == 0) {\n+        stage.insert(entryit);\n+    }\n+    // Traverse down the children of entry, only adding children that are not\n+    // accounted for in setDescendants already (because those children have either\n+    // already been walked, or will be walked in this iteration).\n+    while (!stage.empty()) {\n+        txiter it = *stage.begin();\n+        setDescendants.insert(it);\n+        stage.erase(it);\n+\n+        const setEntries &setChildren = GetMemPoolChildren(it);\n+        BOOST_FOREACH(const txiter &childiter, setChildren) {\n+            if (!setDescendants.count(childiter)) {\n+                stage.insert(childiter);\n+            }\n+        }\n+    }\n+}\n \n void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& removed, bool fRecursive)\n {\n     // Remove transaction from memory pool\n     {\n         LOCK(cs);\n-        std::deque<uint256> txToRemove;\n-        txToRemove.push_back(origTx.GetHash());\n-        if (fRecursive && !mapTx.count(origTx.GetHash())) {\n+        setEntries txToRemove;\n+        txiter origit = mapTx.find(origTx.GetHash());\n+        if (origit != mapTx.end()) {\n+            txToRemove.insert(origit);\n+        } else if (fRecursive) {\n             // If recursively removing but origTx isn't in the mempool\n             // be sure to remove any children that are in the pool. This can\n             // happen during chain re-orgs if origTx isn't re-accepted into\n@@ -125,34 +430,23 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n                 std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(origTx.GetHash(), i));\n                 if (it == mapNextTx.end())\n                     continue;\n-                txToRemove.push_back(it->second.ptx->GetHash());\n+                txiter nextit = mapTx.find(it->second.ptx->GetHash());\n+                assert(nextit != mapTx.end());\n+                txToRemove.insert(nextit);\n             }\n         }\n-        while (!txToRemove.empty())\n-        {\n-            uint256 hash = txToRemove.front();\n-            txToRemove.pop_front();\n-            if (!mapTx.count(hash))\n-                continue;\n-            const CTransaction& tx = mapTx[hash].GetTx();\n-            if (fRecursive) {\n-                for (unsigned int i = 0; i < tx.vout.size(); i++) {\n-                    std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(hash, i));\n-                    if (it == mapNextTx.end())\n-                        continue;\n-                    txToRemove.push_back(it->second.ptx->GetHash());\n-                }\n+        setEntries setAllRemoves;\n+        if (fRecursive) {\n+            BOOST_FOREACH(txiter it, txToRemove) {\n+                CalculateDescendants(it, setAllRemoves);\n             }\n-            BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-                mapNextTx.erase(txin.prevout);\n-\n-            removed.push_back(tx);\n-            totalTxSize -= mapTx[hash].GetTxSize();\n-            cachedInnerUsage -= mapTx[hash].DynamicMemoryUsage();\n-            mapTx.erase(hash);\n-            nTransactionsUpdated++;\n-            minerPolicyEstimator->removeTx(hash);\n+        } else {\n+            setAllRemoves.swap(txToRemove);\n         }\n+        BOOST_FOREACH(txiter it, setAllRemoves) {\n+            removed.push_back(it->GetTx());\n+        }\n+        RemoveStaged(setAllRemoves);\n     }\n }\n \n@@ -161,10 +455,10 @@ void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned in\n     // Remove transactions spending a coinbase which are now immature\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n-    for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n-        const CTransaction& tx = it->second.GetTx();\n+    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+        const CTransaction& tx = it->GetTx();\n         BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+            indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n             if (it2 != mapTx.end())\n                 continue;\n             const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n@@ -209,8 +503,10 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n     BOOST_FOREACH(const CTransaction& tx, vtx)\n     {\n         uint256 hash = tx.GetHash();\n-        if (mapTx.count(hash))\n-            entries.push_back(mapTx[hash]);\n+\n+        indexed_transaction_set::iterator i = mapTx.find(hash);\n+        if (i != mapTx.end())\n+            entries.push_back(*i);\n     }\n     BOOST_FOREACH(const CTransaction& tx, vtx)\n     {\n@@ -226,6 +522,7 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n void CTxMemPool::clear()\n {\n     LOCK(cs);\n+    mapLinks.clear();\n     mapTx.clear();\n     mapNextTx.clear();\n     totalTxSize = 0;\n@@ -247,19 +544,25 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n \n     LOCK(cs);\n     list<const CTxMemPoolEntry*> waitingOnDependants;\n-    for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         unsigned int i = 0;\n-        checkTotal += it->second.GetTxSize();\n-        innerUsage += it->second.DynamicMemoryUsage();\n-        const CTransaction& tx = it->second.GetTx();\n+        checkTotal += it->GetTxSize();\n+        innerUsage += it->DynamicMemoryUsage();\n+        const CTransaction& tx = it->GetTx();\n+        txlinksMap::const_iterator linksiter = mapLinks.find(it);\n+        assert(linksiter != mapLinks.end());\n+        const TxLinks &links = linksiter->second;\n+        innerUsage += memusage::DynamicUsage(links.parents) + memusage::DynamicUsage(links.children);\n         bool fDependsWait = false;\n+        setEntries setParentCheck;\n         BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             // Check that every mempool transaction's inputs refer to available coins, or other mempool tx's.\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+            indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n             if (it2 != mapTx.end()) {\n-                const CTransaction& tx2 = it2->second.GetTx();\n+                const CTransaction& tx2 = it2->GetTx();\n                 assert(tx2.vout.size() > txin.prevout.n && !tx2.vout[txin.prevout.n].IsNull());\n                 fDependsWait = true;\n+                setParentCheck.insert(it2);\n             } else {\n                 const CCoins* coins = pcoins->AccessCoins(txin.prevout.hash);\n                 assert(coins && coins->IsAvailable(txin.prevout.n));\n@@ -271,8 +574,35 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n             assert(it3->second.n == i);\n             i++;\n         }\n+        assert(setParentCheck == GetMemPoolParents(it));\n+        // Check children against mapNextTx\n+        CTxMemPool::setEntries setChildrenCheck;\n+        std::map<COutPoint, CInPoint>::const_iterator iter = mapNextTx.lower_bound(COutPoint(it->GetTx().GetHash(), 0));\n+        int64_t childSizes = 0;\n+        CAmount childFees = 0;\n+        for (; iter != mapNextTx.end() && iter->first.hash == it->GetTx().GetHash(); ++iter) {\n+            txiter childit = mapTx.find(iter->second.ptx->GetHash());\n+            assert(childit != mapTx.end()); // mapNextTx points to in-mempool transactions\n+            if (setChildrenCheck.insert(childit).second) {\n+                childSizes += childit->GetTxSize();\n+                childFees += childit->GetFee();\n+            }\n+        }\n+        assert(setChildrenCheck == GetMemPoolChildren(it));\n+        // Also check to make sure size/fees is greater than sum with immediate children.\n+        // just a sanity check, not definitive that this calc is correct...\n+        // also check that the size is less than the size of the entire mempool.\n+        if (!it->IsDirty()) {\n+            assert(it->GetSizeWithDescendants() >= childSizes + it->GetTxSize());\n+            assert(it->GetFeesWithDescendants() >= childFees + it->GetFee());\n+        } else {\n+            assert(it->GetSizeWithDescendants() == it->GetTxSize());\n+            assert(it->GetFeesWithDescendants() == it->GetFee());\n+        }\n+        assert(it->GetFeesWithDescendants() >= 0);\n+\n         if (fDependsWait)\n-            waitingOnDependants.push_back(&it->second);\n+            waitingOnDependants.push_back(&(*it));\n         else {\n             CValidationState state;\n             assert(CheckInputs(tx, state, mempoolDuplicate, false, 0, false, NULL));\n@@ -296,8 +626,8 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     }\n     for (std::map<COutPoint, CInPoint>::const_iterator it = mapNextTx.begin(); it != mapNextTx.end(); it++) {\n         uint256 hash = it->second.ptx->GetHash();\n-        map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(hash);\n-        const CTransaction& tx = it2->second.GetTx();\n+        indexed_transaction_set::const_iterator it2 = mapTx.find(hash);\n+        const CTransaction& tx = it2->GetTx();\n         assert(it2 != mapTx.end());\n         assert(&tx == it->second.ptx);\n         assert(tx.vin.size() > it->second.n);\n@@ -314,16 +644,16 @@ void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (map<uint256, CTxMemPoolEntry>::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back((*mi).first);\n+    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n+        vtxid.push_back(mi->GetTx().GetHash());\n }\n \n bool CTxMemPool::lookup(uint256 hash, CTransaction& result) const\n {\n     LOCK(cs);\n-    map<uint256, CTxMemPoolEntry>::const_iterator i = mapTx.find(hash);\n+    indexed_transaction_set::const_iterator i = mapTx.find(hash);\n     if (i == mapTx.end()) return false;\n-    result = i->second.GetTx();\n+    result = i->GetTx();\n     return true;\n }\n \n@@ -429,5 +759,60 @@ bool CCoinsViewMemPool::HaveCoins(const uint256 &txid) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    return memusage::DynamicUsage(mapTx) + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + cachedInnerUsage;\n+    // Estimate the overhead of mapTx to be 9 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n+    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 9 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + cachedInnerUsage;\n+}\n+\n+void CTxMemPool::RemoveStaged(setEntries &stage) {\n+    AssertLockHeld(cs);\n+    UpdateForRemoveFromMempool(stage);\n+    BOOST_FOREACH(const txiter& it, stage) {\n+        removeUnchecked(it);\n+    }\n+}\n+\n+bool CTxMemPool::addUnchecked(const uint256&hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n+{\n+    LOCK(cs);\n+    setEntries setAncestors;\n+    uint64_t nNoLimit = std::numeric_limits<uint64_t>::max();\n+    std::string dummy;\n+    CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+    return addUnchecked(hash, entry, setAncestors, fCurrentEstimate);\n+}\n+\n+void CTxMemPool::UpdateChild(txiter entry, txiter child, bool add)\n+{\n+    setEntries s;\n+    if (add && mapLinks[entry].children.insert(child).second) {\n+        cachedInnerUsage += memusage::IncrementalDynamicUsage(s);\n+    } else if (!add && mapLinks[entry].children.erase(child)) {\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(s);\n+    }\n+}\n+\n+void CTxMemPool::UpdateParent(txiter entry, txiter parent, bool add)\n+{\n+    setEntries s;\n+    if (add && mapLinks[entry].parents.insert(parent).second) {\n+        cachedInnerUsage += memusage::IncrementalDynamicUsage(s);\n+    } else if (!add && mapLinks[entry].parents.erase(parent)) {\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(s);\n+    }\n+}\n+\n+const CTxMemPool::setEntries & CTxMemPool::GetMemPoolParents(txiter entry) const\n+{\n+    assert (entry != mapTx.end());\n+    txlinksMap::const_iterator it = mapLinks.find(entry);\n+    assert(it != mapLinks.end());\n+    return it->second.parents;\n+}\n+\n+const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) const\n+{\n+    assert (entry != mapTx.end());\n+    txlinksMap::const_iterator it = mapLinks.find(entry);\n+    assert(it != mapLinks.end());\n+    return it->second.children;\n }"
      },
      {
        "sha": "f0c3f7e0f1fe31647574f801a7ea8753115df22b",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 303,
        "deletions": 4,
        "changes": 307,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0ce4508b04639189a6d0567782e27eeee5f73d6/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "patch": "@@ -7,12 +7,17 @@\n #define BITCOIN_TXMEMPOOL_H\n \n #include <list>\n+#include <set>\n \n #include \"amount.h\"\n #include \"coins.h\"\n #include \"primitives/transaction.h\"\n #include \"sync.h\"\n \n+#undef foreach\n+#include \"boost/multi_index_container.hpp\"\n+#include \"boost/multi_index/ordered_index.hpp\"\n+\n class CAutoFile;\n \n inline double AllowFreeThreshold()\n@@ -30,9 +35,25 @@ inline bool AllowFree(double dPriority)\n /** Fake height value used in CCoins to signify they are only in the memory pool (since 0.8) */\n static const unsigned int MEMPOOL_HEIGHT = 0x7FFFFFFF;\n \n-/**\n- * CTxMemPool stores these:\n+class CTxMemPool;\n+\n+/** \\class CTxMemPoolEntry\n+ *\n+ * CTxMemPoolEntry stores data about the correponding transaction, as well\n+ * as data about all in-mempool transactions that depend on the transaction\n+ * (\"descendant\" transactions).\n+ *\n+ * When a new entry is added to the mempool, we update the descendant state\n+ * (nCountWithDescendants, nSizeWithDescendants, and nFeesWithDescendants) for\n+ * all ancestors of the newly added transaction.\n+ *\n+ * If updating the descendant state is skipped, we can mark the entry as\n+ * \"dirty\", and set nSizeWithDescendants/nFeesWithDescendants to equal nTxSize/\n+ * nTxFee. (This can potentially happen during a reorg, where we limit the\n+ * amount of work we're willing to do to avoid consuming too much CPU.)\n+ *\n  */\n+\n class CTxMemPoolEntry\n {\n private:\n@@ -46,10 +67,18 @@ class CTxMemPoolEntry\n     unsigned int nHeight; //! Chain height when entering the mempool\n     bool hadNoDependencies; //! Not dependent on any other txs when it entered the mempool\n \n+    // Information about descendants of this transaction that are in the\n+    // mempool; if we remove this transaction we must remove all of these\n+    // descendants as well.  if nCountWithDescendants is 0, treat this entry as\n+    // dirty, and nSizeWithDescendants and nFeesWithDescendants will not be\n+    // correct.\n+    uint64_t nCountWithDescendants; //! number of descendant transactions\n+    uint64_t nSizeWithDescendants;  //! ... and size\n+    CAmount nFeesWithDescendants;  //! ... and total fees (all including us)\n+\n public:\n     CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n                     int64_t _nTime, double _dPriority, unsigned int _nHeight, bool poolHasNoInputsOf = false);\n-    CTxMemPoolEntry();\n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n \n     const CTransaction& GetTx() const { return this->tx; }\n@@ -60,6 +89,98 @@ class CTxMemPoolEntry\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n     size_t DynamicMemoryUsage() const { return nUsageSize; }\n+\n+    // Adjusts the descendant state, if this entry is not dirty.\n+    void UpdateState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount);\n+\n+    /** We can set the entry to be dirty if doing the full calculation of in-\n+     *  mempool descendants will be too expensive, which can potentially happen\n+     *  when re-adding transactions from a block back to the mempool.\n+     */\n+    void SetDirty();\n+    bool IsDirty() const { return nCountWithDescendants == 0; }\n+\n+    uint64_t GetCountWithDescendants() const { return nCountWithDescendants; }\n+    uint64_t GetSizeWithDescendants() const { return nSizeWithDescendants; }\n+    CAmount GetFeesWithDescendants() const { return nFeesWithDescendants; }\n+};\n+\n+// Helpers for modifying CTxMemPool::mapTx, which is a boost multi_index.\n+struct update_descendant_state\n+{\n+    update_descendant_state(int64_t _modifySize, CAmount _modifyFee, int64_t _modifyCount) :\n+        modifySize(_modifySize), modifyFee(_modifyFee), modifyCount(_modifyCount)\n+    {}\n+\n+    void operator() (CTxMemPoolEntry &e)\n+        { e.UpdateState(modifySize, modifyFee, modifyCount); }\n+\n+    private:\n+        int64_t modifySize;\n+        CAmount modifyFee;\n+        int64_t modifyCount;\n+};\n+\n+struct set_dirty\n+{\n+    void operator() (CTxMemPoolEntry &e)\n+        { e.SetDirty(); }\n+};\n+\n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+/** \\class CompareTxMemPoolEntryByFee\n+ *\n+ *  Sort an entry by max(feerate of entry's tx, feerate with all descendants).\n+ */\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        bool fUseADescendants = UseDescendantFeeRate(a);\n+        bool fUseBDescendants = UseDescendantFeeRate(b);\n+\n+        double aFees = fUseADescendants ? a.GetFeesWithDescendants() : a.GetFee();\n+        double aSize = fUseADescendants ? a.GetSizeWithDescendants() : a.GetTxSize();\n+\n+        double bFees = fUseBDescendants ? b.GetFeesWithDescendants() : b.GetFee();\n+        double bSize = fUseBDescendants ? b.GetSizeWithDescendants() : b.GetTxSize();\n+\n+        // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n+        double f1 = aFees * bSize;\n+        double f2 = aSize * bFees;\n+\n+        if (f1 == f2) {\n+            return a.GetTime() < b.GetTime();\n+        }\n+        return f1 > f2;\n+    }\n+\n+    // Calculate which feerate to use for an entry (avoiding division).\n+    bool UseDescendantFeeRate(const CTxMemPoolEntry &a)\n+    {\n+        double f1 = (double)a.GetFee() * a.GetSizeWithDescendants();\n+        double f2 = (double)a.GetFeesWithDescendants() * a.GetTxSize();\n+        return f2 > f1;\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByEntryTime\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        return a.GetTime() < b.GetTime();\n+    }\n };\n \n class CBlockPolicyEstimator;\n@@ -87,6 +208,71 @@ class CInPoint\n  * are added to the pool: if a new transaction double-spends\n  * an input of a transaction in the pool, it is dropped,\n  * as are non-standard transactions.\n+ *\n+ * CTxMemPool::mapTx, and CTxMemPoolEntry bookkeeping:\n+ *\n+ * mapTx is a boost::multi_index that sorts the mempool on 2 criteria:\n+ * - transaction hash\n+ * - feerate [we use max(feerate of tx, feerate of tx with all descendants)]\n+ *\n+ * Note: the term \"descendant\" refers to in-mempool transactions that depend on\n+ * this one, while \"ancestor\" refers to in-mempool transactions that a given\n+ * transaction depends on.\n+ *\n+ * In order for the feerate sort to remain correct, we must update transactions\n+ * in the mempool when new descendants arrive.  To facilitate this, we track\n+ * the set of in-mempool direct parents and direct children in mapLinks.  Within\n+ * each CTxMemPoolEntry, we track the size and fees of all descendants.\n+ *\n+ * Usually when a new transaction is added to the mempool, it has no in-mempool\n+ * children (because any such children would be an orphan).  So in\n+ * addUnchecked(), we:\n+ * - update a new entry's setMemPoolParents to include all in-mempool parents\n+ * - update the new entry's direct parents to include the new tx as a child\n+ * - update all ancestors of the transaction to include the new tx's size/fee\n+ *\n+ * When a transaction is removed from the mempool, we must:\n+ * - update all in-mempool parents to not track the tx in setMemPoolChildren\n+ * - update all ancestors to not include the tx's size/fees in descendant state\n+ * - update all in-mempool children to not include it as a parent\n+ *\n+ * These happen in UpdateForRemoveFromMempool().  (Note that when removing a\n+ * transaction along with its descendants, we must calculate that set of\n+ * transactions to be removed before doing the removal, or else the mempool can\n+ * be in an inconsistent state where it's impossible to walk the ancestors of\n+ * a transaction.)\n+ *\n+ * In the event of a reorg, the assumption that a newly added tx has no\n+ * in-mempool children is false.  In particular, the mempool is in an\n+ * inconsistent state while new transactions are being added, because there may\n+ * be descendant transactions of a tx coming from a disconnected block that are\n+ * unreachable from just looking at transactions in the mempool (the linking\n+ * transactions may also be in the disconnected block, waiting to be added).\n+ * Because of this, there's not much benefit in trying to search for in-mempool\n+ * children in addUnchecked().  Instead, in the special case of transactions\n+ * being added from a disconnected block, we require the caller to clean up the\n+ * state, to account for in-mempool, out-of-block descendants for all the\n+ * in-block transactions by calling UpdateTransactionsFromBlock().  Note that\n+ * until this is called, the mempool state is not consistent, and in particular\n+ * mapLinks may not be correct (and therefore functions like\n+ * CalculateMemPoolAncestors() and CalculateDescendants() that rely\n+ * on them to walk the mempool are not generally safe to use).\n+ *\n+ * Computational limits:\n+ *\n+ * Updating all in-mempool ancestors of a newly added transaction can be slow,\n+ * if no bound exists on how many in-mempool ancestors there may be.\n+ * CalculateMemPoolAncestors() takes configurable limits that are designed to\n+ * prevent these calculations from being too CPU intensive.\n+ *\n+ * Adding transactions from a disconnected block can be very time consuming,\n+ * because we don't have a way to limit the number of in-mempool descendants.\n+ * To bound CPU processing, we limit the amount of work we're willing to do\n+ * to properly update the descendant information for a tx being added from\n+ * a disconnected block.  If we would exceed the limit, then we instead mark\n+ * the entry as \"dirty\", and set the feerate for sorting purposes to be equal\n+ * the feerate of the transaction without any descendants.\n+ *\n  */\n class CTxMemPool\n {\n@@ -99,8 +285,46 @@ class CTxMemPool\n     uint64_t cachedInnerUsage; //! sum of dynamic memory usage of all the map elements (NOT the maps themselves)\n \n public:\n+    typedef boost::multi_index_container<\n+        CTxMemPoolEntry,\n+        boost::multi_index::indexed_by<\n+            // sorted by txid\n+            boost::multi_index::ordered_unique<mempoolentry_txid>,\n+            // sorted by fee rate\n+            boost::multi_index::ordered_non_unique<\n+                boost::multi_index::identity<CTxMemPoolEntry>,\n+                CompareTxMemPoolEntryByFee\n+            >\n+        >\n+    > indexed_transaction_set;\n+\n     mutable CCriticalSection cs;\n-    std::map<uint256, CTxMemPoolEntry> mapTx;\n+    indexed_transaction_set mapTx;\n+    typedef indexed_transaction_set::nth_index<0>::type::iterator txiter;\n+    struct CompareIteratorByHash {\n+        bool operator()(const txiter &a, const txiter &b) const {\n+            return a->GetTx().GetHash() < b->GetTx().GetHash();\n+        }\n+    };\n+    typedef std::set<txiter, CompareIteratorByHash> setEntries;\n+\n+private:\n+    typedef std::map<txiter, setEntries, CompareIteratorByHash> cacheMap;\n+\n+    struct TxLinks {\n+        setEntries parents;\n+        setEntries children;\n+    };\n+\n+    typedef std::map<txiter, TxLinks, CompareIteratorByHash> txlinksMap;\n+    txlinksMap mapLinks;\n+\n+    const setEntries & GetMemPoolParents(txiter entry) const;\n+    const setEntries & GetMemPoolChildren(txiter entry) const;\n+    void UpdateParent(txiter entry, txiter parent, bool add);\n+    void UpdateChild(txiter entry, txiter child, bool add);\n+\n+public:\n     std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n \n@@ -116,7 +340,13 @@ class CTxMemPool\n     void check(const CCoinsViewCache *pcoins) const;\n     void setSanityCheck(bool _fSanityCheck) { fSanityCheck = _fSanityCheck; }\n \n+    // addUnchecked must updated state for all ancestors of a given transaction,\n+    // to track size/count of descendant transactions.  First version of\n+    // addUnchecked can be used to have it call CalculateMemPoolAncestors(), and\n+    // then invoke the second version.\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate = true);\n+    bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate = true);\n+\n     void remove(const CTransaction &tx, std::list<CTransaction>& removed, bool fRecursive = false);\n     void removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight);\n     void removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed);\n@@ -138,6 +368,33 @@ class CTxMemPool\n     void ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta);\n     void ClearPrioritisation(const uint256 hash);\n \n+public:\n+    /** Remove a set of transactions from the mempool.\n+     *  If a transaction is in this set, then all in-mempool descendants must\n+     *  also be in the set.*/\n+    void RemoveStaged(setEntries &stage);\n+\n+    /** When adding transactions from a disconnected block back to the mempool,\n+     *  new mempool entries may have children in the mempool (which is generally\n+     *  not the case when otherwise adding transactions).\n+     *  UpdateTransactionsFromBlock() will find child transactions and update the\n+     *  descendant state for each transaction in hashesToUpdate (excluding any\n+     *  child transactions present in hashesToUpdate, which are already accounted\n+     *  for).  Note: hashesToUpdate should be the set of transactions from the\n+     *  disconnected block that have been accepted back into the mempool.\n+     */\n+    void UpdateTransactionsFromBlock(const std::vector<uint256> &hashesToUpdate);\n+\n+    /** Try to calculate all in-mempool ancestors of entry.\n+     *  (these are all calculated including the tx itself)\n+     *  limitAncestorCount = max number of ancestors\n+     *  limitAncestorSize = max size of ancestors\n+     *  limitDescendantCount = max number of descendants any ancestor can have\n+     *  limitDescendantSize = max size of descendants any ancestor can have\n+     *  errString = populated with error reason if any limits are hit\n+     */\n+    bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString);\n+\n     unsigned long size()\n     {\n         LOCK(cs);\n@@ -169,6 +426,48 @@ class CTxMemPool\n     bool ReadFeeEstimates(CAutoFile& filein);\n \n     size_t DynamicMemoryUsage() const;\n+\n+private:\n+    /** UpdateForDescendants is used by UpdateTransactionsFromBlock to update\n+     *  the descendants for a single transaction that has been added to the\n+     *  mempool but may have child transactions in the mempool, eg during a\n+     *  chain reorg.  setExclude is the set of descendant transactions in the\n+     *  mempool that must not be accounted for (because any descendants in\n+     *  setExclude were added to the mempool after the transaction being\n+     *  updated and hence their state is already reflected in the parent\n+     *  state).\n+     *\n+     *  If updating an entry requires looking at more than maxDescendantsToVisit\n+     *  transactions, outside of the ones in setExclude, then give up.\n+     *\n+     *  cachedDescendants will be updated with the descendants of the transaction\n+     *  being updated, so that future invocations don't need to walk the\n+     *  same transaction again, if encountered in another transaction chain.\n+     */\n+    bool UpdateForDescendants(txiter updateIt,\n+            int maxDescendantsToVisit,\n+            cacheMap &cachedDescendants,\n+            const std::set<uint256> &setExclude);\n+    /** Update ancestors of hash to add/remove it as a descendant transaction. */\n+    void UpdateAncestorsOf(bool add, txiter hash, setEntries &setAncestors);\n+    /** For each transaction being removed, update ancestors and any direct children. */\n+    void UpdateForRemoveFromMempool(const setEntries &entriesToRemove);\n+    /** Sever link between specified transaction and direct children. */\n+    void UpdateChildrenForRemoval(txiter entry);\n+    /** Populate setDescendants with all in-mempool descendants of hash.\n+     *  Assumes that setDescendants includes all in-mempool descendants of anything\n+     *  already in it.  */\n+    void CalculateDescendants(txiter it, setEntries &setDescendants);\n+\n+    /** Before calling removeUnchecked for a given transaction,\n+     *  UpdateForRemoveFromMempool must be called on the entire (dependent) set\n+     *  of transactions being removed at the same time.  We use each\n+     *  CTxMemPoolEntry's setMemPoolParents in order to walk ancestors of a\n+     *  given transaction that is removed, so we can't remove intermediate\n+     *  transactions in a chain before we've updated all the state for the\n+     *  removal.\n+     */\n+    void removeUnchecked(txiter entry);\n };\n \n /** "
      }
    ]
  },
  {
    "sha": "2190ea6c4e7f56f29fc18539284801a5f504ee48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTkwZWE2YzRlN2Y1NmYyOWZjMTg1MzkyODQ4MDFhNWY1MDRlZTQ4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T13:45:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:15:36Z"
      },
      "message": "rpc: Split option -rpctimeout into -rpcservertimeout and -rpcclienttimeout\n\nThe two timeouts for the server and client, are essentially different:\n\n- In the case of the server it should be a lower value to avoid clients\nclogging up connection slots\n\n- In the case of the client it should be a high value to accomedate slow\n  responses from the server, for example for slow queries or when the\n  lock is contended\n\nSplit the options into `-rpcservertimeout` and `-rpcclienttimeout` with\nrespective defaults of 30 and 900.",
      "tree": {
        "sha": "8d4aa8f26c2912f6c53cca7bc34137d254dd9d67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d4aa8f26c2912f6c53cca7bc34137d254dd9d67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2190ea6c4e7f56f29fc18539284801a5f504ee48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6aae4ad4d2fc5c99bc744ab91cae7c9196bed63a",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -73,7 +73,7 @@\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n-#rpctimeout=30\n+#rpcclienttimeout=30\n \n # By default, only RPC connections from localhost are allowed.\n # Specify as many rpcallowip= settings as you like to allow connections from other hosts,"
      },
      {
        "sha": "7839b3b6b4e9f8d2c2b94502739578724d5fe793",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -22,6 +22,8 @@\n \n using namespace std;\n \n+static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n+\n std::string HelpMessageCli()\n {\n     string strUsage;\n@@ -37,6 +39,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n+    strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout during HTTP requests (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     return strUsage;\n }\n@@ -150,7 +153,7 @@ UniValue CallRPC(const string& strMethod, const UniValue& params)\n     struct evhttp_connection *evcon = evhttp_connection_base_new(base, NULL, host.c_str(), port); // TODO RAII\n     if (evcon == NULL)\n         throw runtime_error(\"create connection failed\");\n-    evhttp_connection_set_timeout(evcon, GetArg(\"-rpctimeout\", 30));\n+    evhttp_connection_set_timeout(evcon, GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     HTTPReply response;\n     struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII"
      },
      {
        "sha": "600e57b7cc82506e84c5f9e9575744e23dfdc4f0",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -374,7 +374,7 @@ bool InitHTTPServer()\n         return false;\n     }\n \n-    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", DEFAULT_HTTP_TIMEOUT));\n+    evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n "
      },
      {
        "sha": "b377dc19fc944886df30bfe631df1fb5dcda0f2f",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -13,7 +13,7 @@\n \n static const int DEFAULT_HTTP_THREADS=4;\n static const int DEFAULT_HTTP_WORKQUEUE=16;\n-static const int DEFAULT_HTTP_TIMEOUT=30;\n+static const int DEFAULT_HTTP_SERVER_TIMEOUT=30;\n \n struct evhttp_request;\n struct event_base;"
      },
      {
        "sha": "3b35fb380e89b14b152d998d88fc6d33f3dec180",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -440,7 +440,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n-        strUsage += HelpMessageOpt(\"-rpctimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_TIMEOUT));\n+        strUsage += HelpMessageOpt(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     }\n \n     if (mode == HMM_BITCOIN_QT)"
      }
    ]
  },
  {
    "sha": "ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGY5OGQxZDg0MzQzZjJkYjA1MDJhODU2MjhlZjgwZjJlYzU3ZGJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-19T12:12:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:15:37Z"
      },
      "message": "Make RPC tests cope with server-side timeout between requests\n\nPython's httplib does not graciously handle disconnections from the http server, resulting in BadStatusLine errors.\nSee https://bugs.python.org/issue3566 \"httplib persistent connections violate MUST in RFC2616 sec 8.1.4.\"\n\nThis was fixed in Python 3.5.\n\nWork around it for now.",
      "tree": {
        "sha": "9fc421212938c17f0335f9e634e1cd70a1c2c073",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc421212938c17f0335f9e634e1cd70a1c2c073"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2190ea6c4e7f56f29fc18539284801a5f504ee48"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 22,
      "deletions": 14
    },
    "files": [
      {
        "sha": "33014dc1393a66328b06b7ee9c069ae811b23865",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 22,
        "deletions": 14,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddf98d1d84343f2db0502a85628ef80f2ec57dbd/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddf98d1d84343f2db0502a85628ef80f2ec57dbd/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
        "patch": "@@ -106,6 +106,26 @@ def __getattr__(self, name):\n             name = \"%s.%s\" % (self.__service_name, name)\n         return AuthServiceProxy(self.__service_url, name, connection=self.__conn)\n \n+    def _request(self, method, path, postdata):\n+        '''\n+        Do a HTTP request, with retry if we get disconnected (e.g. due to a timeout).\n+        This is a workaround for https://bugs.python.org/issue3566 which is fixed in Python 3.5.\n+        '''\n+        headers = {'Host': self.__url.hostname,\n+                   'User-Agent': USER_AGENT,\n+                   'Authorization': self.__auth_header,\n+                   'Content-type': 'application/json'}\n+        try:\n+            self.__conn.request(method, path, postdata, headers)\n+            return self._get_response()\n+        except httplib.BadStatusLine as e:\n+            if e.line == \"''\": # if connection was closed, try again\n+                self.__conn.close()\n+                self.__conn.request(method, path, postdata, headers)\n+                return self._get_response()\n+            else:\n+                raise\n+\n     def __call__(self, *args):\n         AuthServiceProxy.__id_count += 1\n \n@@ -115,13 +135,7 @@ def __call__(self, *args):\n                                'method': self.__service_name,\n                                'params': args,\n                                'id': AuthServiceProxy.__id_count}, default=EncodeDecimal)\n-        self.__conn.request('POST', self.__url.path, postdata,\n-                            {'Host': self.__url.hostname,\n-                             'User-Agent': USER_AGENT,\n-                             'Authorization': self.__auth_header,\n-                             'Content-type': 'application/json'})\n-\n-        response = self._get_response()\n+        response = self._request('POST', self.__url.path, postdata)\n         if response['error'] is not None:\n             raise JSONRPCException(response['error'])\n         elif 'result' not in response:\n@@ -133,13 +147,7 @@ def __call__(self, *args):\n     def _batch(self, rpc_call_list):\n         postdata = json.dumps(list(rpc_call_list), default=EncodeDecimal)\n         log.debug(\"--> \"+postdata)\n-        self.__conn.request('POST', self.__url.path, postdata,\n-                            {'Host': self.__url.hostname,\n-                             'User-Agent': USER_AGENT,\n-                             'Authorization': self.__auth_header,\n-                             'Content-type': 'application/json'})\n-\n-        return self._get_response()\n+        return self._request('POST', self.__url.path, postdata)\n \n     def _get_response(self):\n         http_response = self.__conn.getresponse()"
      }
    ]
  },
  {
    "sha": "5e21388c4812e73a15f0e50a9186d154bece27a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTIxMzg4YzQ4MTJlNzNhMTVmMGU1MGE5MTg2ZDE1NGJlY2UyN2E4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:16:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:16:40Z"
      },
      "message": "Merge pull request #6695\n\nddf98d1 Make RPC tests cope with server-side timeout between requests (Wladimir J. van der Laan)\n2190ea6 rpc: Split option -rpctimeout into -rpcservertimeout and -rpcclienttimeout (Wladimir J. van der Laan)\n8b2d6ed http: Disable libevent debug logging, if not explicitly enabled (Wladimir J. van der Laan)\n5ce43da init: Ignore SIGPIPE (Wladimir J. van der Laan)",
      "tree": {
        "sha": "46da064f42fe524c21533984e0827a60550765e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46da064f42fe524c21533984e0827a60550765e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e21388c4812e73a15f0e50a9186d154bece27a8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAB9YAAoJEHSBCwEjRsmmKt4H/A0x6bu3wSPUGdU7XebXE5K7\nt7fDV/ABTjjubVl5oS4vYipWQmZ4UNtDbtX9i+Rptw/Hcd6tg/mLQePoTd61+U00\nZVEQgW3fEUg6fIz7MEPcjd86Dj6SLOBkwFX7FMqRmnvrRoGeHhqs0W6M3YPmUMhr\nonnSvB9SPPa/6TYZtxRzAmfK1Yno9NZM3oquY0r/KXOmSPhskf3G7pnvFugIRn7Y\nCsY6gHxwNi7jqT1vQtjAkbadr7WlIMJu9cN//sAr6ohoWmKmAZTEFwRSgf4MqFuY\n+06M4zZtZvLzzBMXWBCz/3S67rIudvP/WG1oPVfSbrjY7FtVdS6TbR10l1ncctA=\n=gZAf\n-----END PGP SIGNATURE-----",
        "payload": "tree 46da064f42fe524c21533984e0827a60550765e0\nparent b0ce4508b04639189a6d0567782e27eeee5f73d6\nparent ddf98d1d84343f2db0502a85628ef80f2ec57dbd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442848560 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442848600 +0200\n\nMerge pull request #6695\n\nddf98d1 Make RPC tests cope with server-side timeout between requests (Wladimir J. van der Laan)\n2190ea6 rpc: Split option -rpctimeout into -rpcservertimeout and -rpcclienttimeout (Wladimir J. van der Laan)\n8b2d6ed http: Disable libevent debug logging, if not explicitly enabled (Wladimir J. van der Laan)\n5ce43da init: Ignore SIGPIPE (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e21388c4812e73a15f0e50a9186d154bece27a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e21388c4812e73a15f0e50a9186d154bece27a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e21388c4812e73a15f0e50a9186d154bece27a8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0ce4508b04639189a6d0567782e27eeee5f73d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0ce4508b04639189a6d0567782e27eeee5f73d6"
      },
      {
        "sha": "ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddf98d1d84343f2db0502a85628ef80f2ec57dbd"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 51,
      "deletions": 23
    },
    "files": [
      {
        "sha": "6aae4ad4d2fc5c99bc744ab91cae7c9196bed63a",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e21388c4812e73a15f0e50a9186d154bece27a8/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e21388c4812e73a15f0e50a9186d154bece27a8/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=5e21388c4812e73a15f0e50a9186d154bece27a8",
        "patch": "@@ -73,7 +73,7 @@\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n-#rpctimeout=30\n+#rpcclienttimeout=30\n \n # By default, only RPC connections from localhost are allowed.\n # Specify as many rpcallowip= settings as you like to allow connections from other hosts,"
      },
      {
        "sha": "33014dc1393a66328b06b7ee9c069ae811b23865",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 22,
        "deletions": 14,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e21388c4812e73a15f0e50a9186d154bece27a8/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e21388c4812e73a15f0e50a9186d154bece27a8/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=5e21388c4812e73a15f0e50a9186d154bece27a8",
        "patch": "@@ -106,6 +106,26 @@ def __getattr__(self, name):\n             name = \"%s.%s\" % (self.__service_name, name)\n         return AuthServiceProxy(self.__service_url, name, connection=self.__conn)\n \n+    def _request(self, method, path, postdata):\n+        '''\n+        Do a HTTP request, with retry if we get disconnected (e.g. due to a timeout).\n+        This is a workaround for https://bugs.python.org/issue3566 which is fixed in Python 3.5.\n+        '''\n+        headers = {'Host': self.__url.hostname,\n+                   'User-Agent': USER_AGENT,\n+                   'Authorization': self.__auth_header,\n+                   'Content-type': 'application/json'}\n+        try:\n+            self.__conn.request(method, path, postdata, headers)\n+            return self._get_response()\n+        except httplib.BadStatusLine as e:\n+            if e.line == \"''\": # if connection was closed, try again\n+                self.__conn.close()\n+                self.__conn.request(method, path, postdata, headers)\n+                return self._get_response()\n+            else:\n+                raise\n+\n     def __call__(self, *args):\n         AuthServiceProxy.__id_count += 1\n \n@@ -115,13 +135,7 @@ def __call__(self, *args):\n                                'method': self.__service_name,\n                                'params': args,\n                                'id': AuthServiceProxy.__id_count}, default=EncodeDecimal)\n-        self.__conn.request('POST', self.__url.path, postdata,\n-                            {'Host': self.__url.hostname,\n-                             'User-Agent': USER_AGENT,\n-                             'Authorization': self.__auth_header,\n-                             'Content-type': 'application/json'})\n-\n-        response = self._get_response()\n+        response = self._request('POST', self.__url.path, postdata)\n         if response['error'] is not None:\n             raise JSONRPCException(response['error'])\n         elif 'result' not in response:\n@@ -133,13 +147,7 @@ def __call__(self, *args):\n     def _batch(self, rpc_call_list):\n         postdata = json.dumps(list(rpc_call_list), default=EncodeDecimal)\n         log.debug(\"--> \"+postdata)\n-        self.__conn.request('POST', self.__url.path, postdata,\n-                            {'Host': self.__url.hostname,\n-                             'User-Agent': USER_AGENT,\n-                             'Authorization': self.__auth_header,\n-                             'Content-type': 'application/json'})\n-\n-        return self._get_response()\n+        return self._request('POST', self.__url.path, postdata)\n \n     def _get_response(self):\n         http_response = self.__conn.getresponse()"
      },
      {
        "sha": "7839b3b6b4e9f8d2c2b94502739578724d5fe793",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e21388c4812e73a15f0e50a9186d154bece27a8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e21388c4812e73a15f0e50a9186d154bece27a8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=5e21388c4812e73a15f0e50a9186d154bece27a8",
        "patch": "@@ -22,6 +22,8 @@\n \n using namespace std;\n \n+static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n+\n std::string HelpMessageCli()\n {\n     string strUsage;\n@@ -37,6 +39,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n+    strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout during HTTP requests (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     return strUsage;\n }\n@@ -150,7 +153,7 @@ UniValue CallRPC(const string& strMethod, const UniValue& params)\n     struct evhttp_connection *evcon = evhttp_connection_base_new(base, NULL, host.c_str(), port); // TODO RAII\n     if (evcon == NULL)\n         throw runtime_error(\"create connection failed\");\n-    evhttp_connection_set_timeout(evcon, GetArg(\"-rpctimeout\", 30));\n+    evhttp_connection_set_timeout(evcon, GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     HTTPReply response;\n     struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII"
      },
      {
        "sha": "600e57b7cc82506e84c5f9e9575744e23dfdc4f0",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e21388c4812e73a15f0e50a9186d154bece27a8/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e21388c4812e73a15f0e50a9186d154bece27a8/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=5e21388c4812e73a15f0e50a9186d154bece27a8",
        "patch": "@@ -320,6 +320,15 @@ static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n     queue->Run();\n }\n \n+/** libevent event log callback */\n+static void libevent_log_cb(int severity, const char *msg)\n+{\n+    if (severity >= EVENT_LOG_WARN) // Log warn messages and higher without debug category\n+        LogPrintf(\"libevent: %s\\n\", msg);\n+    else\n+        LogPrint(\"libevent\", \"libevent: %s\\n\", msg);\n+}\n+\n bool InitHTTPServer()\n {\n     struct evhttp* http = 0;\n@@ -335,6 +344,16 @@ bool InitHTTPServer()\n         return false;\n     }\n \n+    // Redirect libevent's logging to our own log\n+    event_set_log_callback(&libevent_log_cb);\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    // If -debug=libevent, set full libevent debugging.\n+    // Otherwise, disable all libevent debugging.\n+    if (LogAcceptCategory(\"libevent\"))\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    else\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+#endif\n #ifdef WIN32\n     evthread_use_windows_threads();\n #else\n@@ -355,7 +374,7 @@ bool InitHTTPServer()\n         return false;\n     }\n \n-    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", DEFAULT_HTTP_TIMEOUT));\n+    evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n "
      },
      {
        "sha": "b377dc19fc944886df30bfe631df1fb5dcda0f2f",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e21388c4812e73a15f0e50a9186d154bece27a8/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e21388c4812e73a15f0e50a9186d154bece27a8/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=5e21388c4812e73a15f0e50a9186d154bece27a8",
        "patch": "@@ -13,7 +13,7 @@\n \n static const int DEFAULT_HTTP_THREADS=4;\n static const int DEFAULT_HTTP_WORKQUEUE=16;\n-static const int DEFAULT_HTTP_TIMEOUT=30;\n+static const int DEFAULT_HTTP_SERVER_TIMEOUT=30;\n \n struct evhttp_request;\n struct event_base;"
      },
      {
        "sha": "98834ef010f2c3e9198a411ceb04fd3137452758",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e21388c4812e73a15f0e50a9186d154bece27a8/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e21388c4812e73a15f0e50a9186d154bece27a8/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5e21388c4812e73a15f0e50a9186d154bece27a8",
        "patch": "@@ -416,7 +416,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http, libevent\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n@@ -469,7 +469,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n-        strUsage += HelpMessageOpt(\"-rpctimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_TIMEOUT));\n+        strUsage += HelpMessageOpt(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     }\n \n     if (mode == HMM_BITCOIN_QT)\n@@ -716,10 +716,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     sa_hup.sa_flags = 0;\n     sigaction(SIGHUP, &sa_hup, NULL);\n \n-#if defined (__SVR4) && defined (__sun)\n-    // ignore SIGPIPE on Solaris\n+    // Ignore SIGPIPE, otherwise it will bring the daemon down if the client closes unexpectedly\n     signal(SIGPIPE, SIG_IGN);\n-#endif\n #endif\n \n     // ********************************************************* Step 2: parameter interactions"
      }
    ]
  },
  {
    "sha": "ed55a1f5f916d09fdadf4f883e904da950bc126b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDU1YTFmNWY5MTZkMDlmZGFkZjRmODgzZTkwNGRhOTUwYmMxMjZi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:21:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:21:18Z"
      },
      "message": "Merge pull request #6671\n\n0186228 Update trusted-git-root to the most recent unsigned commit (Matt Corallo)",
      "tree": {
        "sha": "14a97bbae0a8d86acfb19c60f26584f03a4ecaf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14a97bbae0a8d86acfb19c60f26584f03a4ecaf6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed55a1f5f916d09fdadf4f883e904da950bc126b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWACBuAAoJEHSBCwEjRsmm+DoH/RuUd0/woYW9atwfrNQHv1JE\nN7MIt+kQZFxNWfK3kVTtADGMbf5Ny/x/d9rWBETwxr2AQe8CVOOM9wWtIGsJYGYU\nWoLbYvcVG/CZivAyd55AZxhZcB7EyZdQ5EVHDqbmycTzGPZTGqCQP6KjtGSxXEjd\n85bQ2AUbx8DeflEV6FCSVbcn+9mmL6+yBxRXWBHX3Fv3HzE/4LZpZmvkr4KUIzj2\nla1/XxS77nuVCEAw3LWGSbFbaBsfEj9mE1/wOJQzcjXLoPUOkteAYN1HCBC/2b/8\ni7ABTamPfqlezNPRpOcB+fFpeO7qV8jZGPkgqoZ36uwG5Qdo0ZiwkbWJPFAhwgQ=\n=+6Zt\n-----END PGP SIGNATURE-----",
        "payload": "tree 14a97bbae0a8d86acfb19c60f26584f03a4ecaf6\nparent 5e21388c4812e73a15f0e50a9186d154bece27a8\nparent 0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442848872 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442848878 +0200\n\nMerge pull request #6671\n\n0186228 Update trusted-git-root to the most recent unsigned commit (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed55a1f5f916d09fdadf4f883e904da950bc126b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed55a1f5f916d09fdadf4f883e904da950bc126b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed55a1f5f916d09fdadf4f883e904da950bc126b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e21388c4812e73a15f0e50a9186d154bece27a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e21388c4812e73a15f0e50a9186d154bece27a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e21388c4812e73a15f0e50a9186d154bece27a8"
      },
      {
        "sha": "0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0186228d6106f8f7b4f32bb8bd234bfb4de3e4fa"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "838b8d1ea84bd02a1bc790d3587ed2b37a171f67",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b",
        "patch": "@@ -1 +1 @@\n-053038e5ba116cb319fb85f3cb3e062cf1b3df15\n+165e323d851cc87213c7673c6f278e87a6f2e752"
      }
    ]
  },
  {
    "sha": "10fc4fb36894c2afecf030ba40056186538dcf0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGZjNGZiMzY4OTRjMmFmZWNmMDMwYmE0MDA1NjE4NjUzOGRjZjBm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T16:05:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T16:05:54Z"
      },
      "message": "Merge pull request #6668\n\n9b1cdd7 [trivial] Remove obsolete pixmaps (MarcoFalke)\nd1acf93 [qt] [trivial] share/qt/make_spinner.py => src/qt/res/movies/makespinner.sh (MarcoFalke)",
      "tree": {
        "sha": "dcf9ed5a75277fea1ff331237a595b20631d3f69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcf9ed5a75277fea1ff331237a595b20631d3f69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10fc4fb36894c2afecf030ba40056186538dcf0f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWACriAAoJEHSBCwEjRsmm3PsIALZHotXazrdqFiouIiI0+LAi\nSK32EfseDBXEo5C0CNdoJV15WY6kBoLe+Cx4wvuufUeZHfIuUrTmbxv36WX08Gk5\nW2qj2F5YAVeMLfAtJ5h2TPeSfJsQ29Psr4VTaRmhxuZdA1o0LDUcopZUgXKhST06\nnfU/6bZmstgnY1s/JHVJ2qqMqXDzZ2UcLZgQ7SyZhrWl7apOpPHtvnYA/ke6IbPb\n1u5WrMZ0JkeX60eXfxgParu9Amn4G4Hdfwh0eDfxa8y1U3a4yoRDxw4rpYoPgGK0\nHAQym15yQsmkuE4+JGgvICjrnDR7BQJpvzqBrTDgcr9WAgyTcNGOQzIFDEW7A84=\n=Ff0s\n-----END PGP SIGNATURE-----",
        "payload": "tree dcf9ed5a75277fea1ff331237a595b20631d3f69\nparent ed55a1f5f916d09fdadf4f883e904da950bc126b\nparent 9b1cdd7eeb7346704259c3416a59c0a12057fe56\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442851548 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442851554 +0200\n\nMerge pull request #6668\n\n9b1cdd7 [trivial] Remove obsolete pixmaps (MarcoFalke)\nd1acf93 [qt] [trivial] share/qt/make_spinner.py => src/qt/res/movies/makespinner.sh (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10fc4fb36894c2afecf030ba40056186538dcf0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10fc4fb36894c2afecf030ba40056186538dcf0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10fc4fb36894c2afecf030ba40056186538dcf0f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed55a1f5f916d09fdadf4f883e904da950bc126b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed55a1f5f916d09fdadf4f883e904da950bc126b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "9b1cdd7eeb7346704259c3416a59c0a12057fe56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b1cdd7eeb7346704259c3416a59c0a12057fe56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b1cdd7eeb7346704259c3416a59c0a12057fe56"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 5,
      "deletions": 57
    },
    "files": [
      {
        "sha": "c5576910b1b6b95c23ed7c53adec399a944e610a",
        "filename": "share/pixmaps/addressbook16.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook16.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook16.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook16.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "d3a478d1ad1d4800008fda5be5d583f3d0423480",
        "filename": "share/pixmaps/addressbook16mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook16mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook16mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook16mask.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "2b33b228aaec9ef51fb3dd46b3eab98f3d61d7df",
        "filename": "share/pixmaps/addressbook20.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook20.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook20.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook20.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "56ce6125dbb83abfac437bbbcdb611f45ee57cff",
        "filename": "share/pixmaps/addressbook20mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook20mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/addressbook20mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/addressbook20mask.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "88cc240e2d4f77fa66730593a890a17aab86cbdc",
        "filename": "share/pixmaps/bitcoin-bc.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/bitcoin-bc.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/bitcoin-bc.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin-bc.ico?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "0c4e6e81473d47761346fd71e171a807bda5ec58",
        "filename": "share/pixmaps/check.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/check.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/check.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/check.ico?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "754eebc48814ff7191543d92207ae881227ef33e",
        "filename": "share/pixmaps/favicon.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/favicon.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/favicon.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/favicon.ico?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "676b5c4b490e0859578ae599af54aa3de26d5d3b",
        "filename": "share/pixmaps/send16.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send16.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send16.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send16.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "06c747f9349abb52995c0e7ff02f126b21469c0e",
        "filename": "share/pixmaps/send16mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send16mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send16mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send16mask.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "faf24e0d8aa81faf80072c7807e52d749cad63c0",
        "filename": "share/pixmaps/send16masknoshadow.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send16masknoshadow.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send16masknoshadow.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send16masknoshadow.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "2b90422b38467ae30a2b6a866adbf0ad3c3f97f3",
        "filename": "share/pixmaps/send20.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send20.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send20.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send20.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "f124d0da084e68cac62312e9fa8a0fbf9c7c5075",
        "filename": "share/pixmaps/send20mask.bmp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send20mask.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/pixmaps/send20mask.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/send20mask.bmp?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "9068db9a6334e80234194fa23ba9912338d93841",
        "filename": "share/qt/img/reload.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/qt/img/reload.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/qt/img/reload.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/img/reload.png?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "dc8be62831673c2e99f05f5e5b42581e6e4e1db1",
        "filename": "share/qt/img/reload.xcf",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/qt/img/reload.xcf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/qt/img/reload.xcf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/img/reload.xcf?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b"
      },
      {
        "sha": "bb19e9150815f20b731e516211a8d7845ee57533",
        "filename": "share/qt/make_spinner.py",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/qt/make_spinner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/qt/make_spinner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_spinner.py?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b",
        "patch": "@@ -1,38 +0,0 @@\n-#!/usr/bin/env python\n-# W.J. van der Laan, 2011\n-# Make spinning animation from a .png\n-# Requires imagemagick 6.7+\n-from __future__ import division\n-from os import path\n-from PIL import Image\n-from subprocess import Popen\n-\n-SRC='img/reload.png'\n-TMPDIR='../../src/qt/res/movies/'\n-TMPNAME='spinner-%03i.png'\n-NUMFRAMES=35\n-FRAMERATE=10.0\n-CONVERT='convert'\n-CLOCKWISE=True\n-DSIZE=(16,16)\n-\n-im_src = Image.open(SRC)\n-\n-if CLOCKWISE:\n-    im_src = im_src.transpose(Image.FLIP_LEFT_RIGHT)\n-\n-def frame_to_filename(frame):\n-    return path.join(TMPDIR, TMPNAME % frame)\n-\n-frame_files = []\n-for frame in xrange(NUMFRAMES):\n-    rotation = (frame + 0.5) / NUMFRAMES * 360.0\n-    if CLOCKWISE:\n-        rotation = -rotation\n-    im_new = im_src.rotate(rotation, Image.BICUBIC)\n-    im_new.thumbnail(DSIZE, Image.ANTIALIAS)\n-    outfile = frame_to_filename(frame)\n-    im_new.save(outfile, 'png')\n-    frame_files.append(outfile)\n-\n-"
      },
      {
        "sha": "063641cba293fadf380fb37bdec3218dfd52babc",
        "filename": "share/ui.rc",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/ui.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed55a1f5f916d09fdadf4f883e904da950bc126b/share/ui.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/ui.rc?ref=ed55a1f5f916d09fdadf4f883e904da950bc126b",
        "patch": "@@ -1,15 +0,0 @@\n-bitcoin               ICON    \"pixmaps/bitcoin.ico\"\r\n-\r\n-#include \"wx/msw/wx.rc\"\r\n-\r\n-check                 ICON    \"pixmaps/check.ico\"\r\n-send16                BITMAP  \"pixmaps/send16.bmp\"\r\n-send16mask            BITMAP  \"pixmaps/send16mask.bmp\"\r\n-send16masknoshadow    BITMAP  \"pixmaps/send16masknoshadow.bmp\"\r\n-send20                BITMAP  \"pixmaps/send20.bmp\"\r\n-send20mask            BITMAP  \"pixmaps/send20mask.bmp\"\r\n-addressbook16         BITMAP  \"pixmaps/addressbook16.bmp\"\r\n-addressbook16mask     BITMAP  \"pixmaps/addressbook16mask.bmp\"\r\n-addressbook20         BITMAP  \"pixmaps/addressbook20.bmp\"\r\n-addressbook20mask     BITMAP  \"pixmaps/addressbook20mask.bmp\"\r\n-favicon               ICON    \"pixmaps/favicon.ico\"\r"
      },
      {
        "sha": "7d3e48ff32eff1da7f8f306ae4d12b0e5e86890b",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=10fc4fb36894c2afecf030ba40056186538dcf0f",
        "patch": "@@ -42,7 +42,7 @@ static const int MAX_URI_LENGTH = 255;\n #define EXPORT_IMAGE_SIZE 256\n \n /* Number of frames in spinner animation */\n-#define SPINNER_FRAMES 35\n+#define SPINNER_FRAMES 36\n \n #define QAPP_ORG_NAME \"Bitcoin\"\n #define QAPP_ORG_DOMAIN \"bitcoin.org\""
      },
      {
        "sha": "a4c2fddbbfe5320d43c86ceba990c2da2e866cb4",
        "filename": "src/qt/res/movies/makespinner.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/res/movies/makespinner.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/res/movies/makespinner.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/makespinner.sh?ref=10fc4fb36894c2afecf030ba40056186538dcf0f",
        "patch": "@@ -1,6 +1,7 @@\n-for i in {1..35}\n+FRAMEDIR=$(dirname $0)\n+for i in {0..35}\n do\n-    value=$(printf \"%03d\" $i)\n+    frame=$(printf \"%03d\" $i)\n     angle=$(($i * 10))\n-    convert spinner-000.png -background \"rgba(0,0,0,0.0)\" -distort SRT $angle spinner-$value.png\n+    convert $FRAMEDIR/../src/spinner.png -background \"rgba(0,0,0,0.0)\" -distort SRT $angle $FRAMEDIR/spinner-$frame.png\n done"
      },
      {
        "sha": "0dc48d0d8c564f5daf51db3f8f8d4c2b60df1ad7",
        "filename": "src/qt/res/movies/spinner-000.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/res/movies/spinner-000.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/res/movies/spinner-000.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-000.png?ref=10fc4fb36894c2afecf030ba40056186538dcf0f"
      },
      {
        "sha": "b296a584817bf764bdd86f0acb6b5c7974b912b4",
        "filename": "src/qt/res/src/spinner.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/res/src/spinner.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fc4fb36894c2afecf030ba40056186538dcf0f/src/qt/res/src/spinner.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/src/spinner.png?ref=10fc4fb36894c2afecf030ba40056186538dcf0f",
        "previous_filename": "src/qt/res/spinner.png"
      }
    ]
  },
  {
    "sha": "229fb974ab0d1707546cd566a2f8001555c3eeab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjlmYjk3NGFiMGQxNzA3NTQ2Y2Q1NjZhMmY4MDAxNTU1YzNlZWFi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T16:17:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T16:17:48Z"
      },
      "message": "Merge pull request #6667\n\n2eb3183 [doc] Merge doc/assets-attribution.md into contrib/debian/copyright (MarcoFalke)\n9be08b7 Update contrib/debian/copyright (MarcoFalke)",
      "tree": {
        "sha": "2699a51cf3e0e52c1689e4688bbc2fecab95f30b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2699a51cf3e0e52c1689e4688bbc2fecab95f30b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/229fb974ab0d1707546cd566a2f8001555c3eeab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAC2tAAoJEHSBCwEjRsmmwvMH/1l0LVOMj49pMavW3Wbvv0z4\nFKgepdxaXXPYAihpidahz++kVbGRqhwq7SCT4EOfagSyRuKGcFlVqfhrweSObTJ7\n4UJYAZhJ8NK+RvWJ7psT2dvd8qog2kU2PQ3JPqYCio0GJBZY14NcYbciK1/QwWxV\nTD0UfNgPmo3SEXPPC27OiYsRVk9bQEVk5bu/LAKqPDRsimSvY39mo/m0BQMTYYTH\nlLk5Sm7Z/K0ok2g6b0wn7sAwVRt5mhM/vb1fqNJWNztTMOK7kvwLir7bw7WW1D9O\n+MwiVClfmteB74m6tYPNqaxmwFwDRcuCcJX99e2kVW/pbxmuhXM43/cxNx3XbME=\n=FX6L\n-----END PGP SIGNATURE-----",
        "payload": "tree 2699a51cf3e0e52c1689e4688bbc2fecab95f30b\nparent 10fc4fb36894c2afecf030ba40056186538dcf0f\nparent 2eb3183ca495c08212ff425b264b261428f278f0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442852259 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442852268 +0200\n\nMerge pull request #6667\n\n2eb3183 [doc] Merge doc/assets-attribution.md into contrib/debian/copyright (MarcoFalke)\n9be08b7 Update contrib/debian/copyright (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/229fb974ab0d1707546cd566a2f8001555c3eeab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/229fb974ab0d1707546cd566a2f8001555c3eeab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/229fb974ab0d1707546cd566a2f8001555c3eeab/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10fc4fb36894c2afecf030ba40056186538dcf0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10fc4fb36894c2afecf030ba40056186538dcf0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10fc4fb36894c2afecf030ba40056186538dcf0f"
      },
      {
        "sha": "2eb3183ca495c08212ff425b264b261428f278f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2eb3183ca495c08212ff425b264b261428f278f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2eb3183ca495c08212ff425b264b261428f278f0"
      }
    ],
    "stats": {
      "total": 216,
      "additions": 60,
      "deletions": 156
    },
    "files": [
      {
        "sha": "314d2e2ff332b255365afa868775084447a9fd50",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/229fb974ab0d1707546cd566a2f8001555c3eeab/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/229fb974ab0d1707546cd566a2f8001555c3eeab/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=229fb974ab0d1707546cd566a2f8001555c3eeab",
        "patch": "@@ -1,3 +1,5 @@\n+The MIT License (MIT)\n+\n Copyright (c) 2009-2015 The Bitcoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy"
      },
      {
        "sha": "d119bbd1d0d7fdc4300c09b1a7ce392c46a55460",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 57,
        "deletions": 86,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/229fb974ab0d1707546cd566a2f8001555c3eeab/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/229fb974ab0d1707546cd566a2f8001555c3eeab/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=229fb974ab0d1707546cd566a2f8001555c3eeab",
        "patch": "@@ -5,15 +5,11 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Core Developers\n-License: Expat\n+Copyright: 2009-2015, Bitcoin Core Developers\n+License: MIT/Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n-Files: src/json/*\n-Copyright: 2007-2009, John W. Wilkinson\n-License: Expat\n-\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n@@ -23,62 +19,68 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-       src/qt/res/src/*.svg\n-Copyright: Wladimir van der Laan\n-License: Expat\n-\n-Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Copyright: David Vignoni (david@icon-king.com)\n-           ICON KING - www.icon-king.com\n-License: LGPL\n-Comment: NUVOLA ICON THEME for KDE 3.x\n-         Original icons: kaddressbook, klipper_dock, view-list-text,\n-                         key-password, encrypted/decrypted, go-home, go-down,\n-                         go-next, dialog-ok\n-         Site: http://www.icon-king.com/projects/nuvola/\n+Files: src/qt/res/icons/add.png,\n+       src/qt/res/icons/address-book.png,\n+       src/qt/res/icons/configure.png,\n+       src/qt/res/icons/debugwindow.png,\n+       src/qt/res/icons/edit.png,\n+       src/qt/res/icons/editcopy.png,\n+       src/qt/res/icons/editpaste.png,\n+       src/qt/res/icons/export.png,\n+       src/qt/res/icons/eye.png,\n+       src/qt/res/icons/filesave.png,\n+       src/qt/res/icons/history.png,\n+       src/qt/res/icons/info.png,\n+       src/qt/res/icons/key.png,\n+       src/qt/res/icons/lock_*.png,\n+       src/qt/res/icons/open.png,\n+       src/qt/res/icons/overview.png,\n+       src/qt/res/icons/quit.png,\n+       src/qt/res/icons/receive.png,\n+       src/qt/res/icons/remove.png,\n+       src/qt/res/icons/send.png,\n+       src/qt/res/icons/synced.png,\n+       src/qt/res/icons/transaction*.png,\n+       src/qt/res/icons/tx_output.png,\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n+License: MIT/Expat\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n-Copyright: schollidesign\n-License: GPL-3+\n-Comment: Icon Pack: Human-O2\n-         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Files: src/qt/res/icons/transaction*.png\n-Copyright: md2k7\n-License: Expat\n-Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n-\n-Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png\n-Copyright: http://www.everaldo.com\n-License: LGPL\n-Comment: Icon Pack: Crystal SVG\n+       src/qt/res/src/connect-*.svg\n+Copyright: Marco Falke\n+License: MIT/Expat\n+Comment: Inspired by Stephan Hutchings Typicons\n+\n+Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n+Copyright: Jonas Schnelli\n+License: MIT/Expat\n+Comment:\n \n-Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n-Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/verify.png\n+       src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+       src/qt/res/src/verify.svg\n+Copyright: Stephan Hutching, Jonas Schnelli\n+License: MIT/Expat\n+Comment: Modifications of Stephan Hutchings Typicons\n+\n+Files: src/qt/res/icons/about.png\n+       src/qt/res/icons/bitcoin.*\n+       share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n+Copyright: Bitboy, Jonas Schnelli\n License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/*.png\n-Copyright: Everaldo (Everaldo Coelho)\n-License: GPL-3+\n-Comment: Icon Pack: Kids\n-         Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Files: src/qt/res/images/splash2.jpg\n-License: PUB-DOM\n-Copyright: Crobbo (forum)\n-Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n-\n \n-License: Expat\n+License: MIT/Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n@@ -98,20 +100,6 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: ISC\n- Permission to use, copy, modify, and distribute this software for any\n- purpose with or without fee is hereby granted, provided that the above\n- copyright notice and this permission notice appear in all copies.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n- WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n- WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n- BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n- OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n- WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n- ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n- SOFTWARE.\n-\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the\n@@ -140,22 +128,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: LGPL\n- This program is free software: you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation, either version 3 of the License, or\n- (at your option) any later version.\n- .\n- This program is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-Comment:\n- On Debian systems the GNU Lesser General Public License (LGPL) is\n- located in '/usr/share/common-licenses/LGPL'.\n- .\n- You should have received a copy of the GNU General Public License\n- along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n License: PUB-DOM\n  This work is in the public domain."
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 70,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/229fb974ab0d1707546cd566a2f8001555c3eeab/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/229fb974ab0d1707546cd566a2f8001555c3eeab/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=229fb974ab0d1707546cd566a2f8001555c3eeab",
        "patch": "@@ -1,70 +1 @@\n-The following is a list of assets used in the bitcoin source and their proper attribution.\n-\n-[Typicons/Stephen Hutchings](http://typicons.com)\n------------------------\n-\n-### Info\n-* Icon Pack: Typicons (http://typicons.com)\n-* Designer: Stephen Hutchings (and more)\n-* License: MIT\n-* Site: [https://github.com/stephenhutchings/typicons.font](https://github.com/stephenhutchings/typicons.font)\n-\n-### Assets Used\n-    src/qt/res/icons/add.png\n-    src/qt/res/icons/address-book.png\n-    src/qt/res/icons/configure.png\n-    src/qt/res/icons/debugwindow.png\n-    src/qt/res/icons/edit.png\n-    src/qt/res/icons/editcopy.png\n-    src/qt/res/icons/editpaste.png\n-    src/qt/res/icons/export.png\n-    src/qt/res/icons/eye.png\n-    src/qt/res/icons/filesave.png\n-    src/qt/res/icons/history.png\n-    src/qt/res/icons/info.png\n-    src/qt/res/icons/key.png\n-    src/qt/res/icons/lock_*.png\n-    src/qt/res/icons/open.png\n-    src/qt/res/icons/overview.png\n-    src/qt/res/icons/quit.png\n-    src/qt/res/icons/receive.png\n-    src/qt/res/icons/remove.png\n-    src/qt/res/icons/send.png\n-    src/qt/res/icons/synced.png\n-    src/qt/res/icons/transaction*.png\n-    src/qt/res/icons/tx_output.png\n-    src/qt/res/icons/warning.png\n-\n-Other\n------------------------\n-\n-### Info\n-* Designer: Jonas Schnelli, Bitboy, Stephen Hutchings, Marco Falke\n-* Bitcoin icon: Based on the original bitcoin logo from Bitboy\n-* Network connection icons: Marco Falke, inspired by flow-merge.svg from Stephen Hutchings\n-* Transaction-mined icon: Jonas Schnelli\n-* Other icons are based on Stephan Hutchings Typicons\n-* License: MIT\n-\n-### Assets Used\n-    src/qt/res/icons/about.png\n-    src/qt/res/icons/about_qt.png\n-    src/qt/res/icons/bitcoin.icns\n-    src/qt/res/icons/bitcoin.ico\n-    src/qt/res/icons/bitcoin.png\n-    src/qt/res/icons/clock*.png\n-    src/qt/res/icons/connect*.png\n-    src/qt/res/icons/eye_minus.png\n-    src/qt/res/icons/eye_plus.png\n-    src/qt/res/icons/verify.png\n-    src/qt/res/icons/tx_inout.png\n-    src/qt/res/icons/tx_input.png\n-    src/qt/res/icons/tx_mined.png\n-    src/qt/res/src/bitcoin.svg\n-    src/qt/res/src/clock_*.svg\n-    src/qt/res/src/connect-*.svg\n-    src/qt/res/src/mine.svg\n-    src/qt/res/src/qt.svg\n-    src/qt/res/src/tx_*.svg\n-    src/qt/res/src/transaction0.svg\n-    src/qt/res/src/verify.svg\n+The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      }
    ]
  },
  {
    "sha": "99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWVlNGE2NTZiMWNhNGJmZWVhOGUwMTg1YzIzNDQ4NTBjYzg0YmZj",
    "commit": {
      "author": {
        "name": "Diego Viola",
        "email": "diego.viola@gmail.com",
        "date": "2015-09-22T07:25:26Z"
      },
      "committer": {
        "name": "Diego Viola",
        "email": "diego.viola@gmail.com",
        "date": "2015-09-22T08:00:10Z"
      },
      "message": "Fix spelling of Qt",
      "tree": {
        "sha": "f23d193885a35c53847972ebe0e7c8f6546df44a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f23d193885a35c53847972ebe0e7c8f6546df44a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/comments",
    "author": {
      "login": "diegoviola",
      "id": 4371,
      "node_id": "MDQ6VXNlcjQzNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/diegoviola",
      "html_url": "https://github.com/diegoviola",
      "followers_url": "https://api.github.com/users/diegoviola/followers",
      "following_url": "https://api.github.com/users/diegoviola/following{/other_user}",
      "gists_url": "https://api.github.com/users/diegoviola/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/diegoviola/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/diegoviola/subscriptions",
      "organizations_url": "https://api.github.com/users/diegoviola/orgs",
      "repos_url": "https://api.github.com/users/diegoviola/repos",
      "events_url": "https://api.github.com/users/diegoviola/events{/privacy}",
      "received_events_url": "https://api.github.com/users/diegoviola/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "diegoviola",
      "id": 4371,
      "node_id": "MDQ6VXNlcjQzNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/diegoviola",
      "html_url": "https://github.com/diegoviola",
      "followers_url": "https://api.github.com/users/diegoviola/followers",
      "following_url": "https://api.github.com/users/diegoviola/following{/other_user}",
      "gists_url": "https://api.github.com/users/diegoviola/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/diegoviola/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/diegoviola/subscriptions",
      "organizations_url": "https://api.github.com/users/diegoviola/orgs",
      "repos_url": "https://api.github.com/users/diegoviola/repos",
      "events_url": "https://api.github.com/users/diegoviola/events{/privacy}",
      "received_events_url": "https://api.github.com/users/diegoviola/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "229fb974ab0d1707546cd566a2f8001555c3eeab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/229fb974ab0d1707546cd566a2f8001555c3eeab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/229fb974ab0d1707546cd566a2f8001555c3eeab"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2831c072924362be0afc4dd8f953a824923d7704",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
        "patch": "@@ -60,7 +60,7 @@\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n #\n \n-# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands\n+# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n #server=0\n \n # Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n@@ -82,7 +82,7 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-QT to accept JSON-RPC commands.\n+# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n # it is also read by bitcoind to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
        "patch": "@@ -101,7 +101,7 @@ Tests:\n Miscellaneous:\n - `c9e022b` Initialization: set Boost path locale in main thread\n - `23126a0` Sanitize command strings before logging them.\n-- `323de27` Initialization: setup environment before starting QT tests\n+- `323de27` Initialization: setup environment before starting Qt tests\n - `7494e09` Initialization: setup environment before starting tests\n - `df45564` Initialization: set fallback locale as environment variable\n "
      },
      {
        "sha": "8917f77f22f5c5d1956afbe539811b2d865f5fbb",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
        "patch": "@@ -404,7 +404,7 @@ void SubstituteFonts(const QString& language)\n {\n #if defined(Q_OS_MAC)\n // Background:\n-// OSX's default font changed in 10.9 and QT is unable to find it with its\n+// OSX's default font changed in 10.9 and Qt is unable to find it with its\n // usual fallback methods when building against the 10.7 sdk or lower.\n // The 10.8 SDK added a function to let it find the correct fallback font.\n // If this fallback is not properly loaded, some characters may fail to"
      }
    ]
  },
  {
    "sha": "34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGJhYzRhZWRjYzgxNDA4ODY3NzdjNmE4M2M2ZGZjNmI3ZDNkODJh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T08:32:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T08:32:44Z"
      },
      "message": "Merge pull request #6709\n\n99ee4a6 Fix spelling of Qt (Diego Viola)",
      "tree": {
        "sha": "f23d193885a35c53847972ebe0e7c8f6546df44a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f23d193885a35c53847972ebe0e7c8f6546df44a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWARIsAAoJEHSBCwEjRsmmvasH/0Wi8tMCdGZkKr/227EJx0O/\n3VgghaBjzd2x+rZjT+ol8EZ9BA23/xQsUhHq3DywkyophZN8diUCc6AvI9FpTkDa\nwdmtEOgryRQjlfbWwfFtEUAFXk20RYXRKvRlayHynani0DXTrMMim53VI/tUczce\novIazHKXu3aC0M4UCW662RvgJ83nYKwSe6Mb24p3vc+fIjmZuq9k335wtzz4Iupi\n6qy4dqBpudsIlaRm9LBwbYVcXe0G9ofm2s09xFwxdKhkeWzpj7he/8Gjg4W/fBOC\niqwmZX9118qWvwWnOjuztrMdgF96jtDOExr3GtV277N+yoIeFGZ3o70abs9Q5ss=\n=HrRz\n-----END PGP SIGNATURE-----",
        "payload": "tree f23d193885a35c53847972ebe0e7c8f6546df44a\nparent 229fb974ab0d1707546cd566a2f8001555c3eeab\nparent 99ee4a656b1ca4bfeea8e0185c2344850cc84bfc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442910754 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442910764 +0200\n\nMerge pull request #6709\n\n99ee4a6 Fix spelling of Qt (Diego Viola)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "229fb974ab0d1707546cd566a2f8001555c3eeab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/229fb974ab0d1707546cd566a2f8001555c3eeab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/229fb974ab0d1707546cd566a2f8001555c3eeab"
      },
      {
        "sha": "99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99ee4a656b1ca4bfeea8e0185c2344850cc84bfc"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2831c072924362be0afc4dd8f953a824923d7704",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
        "patch": "@@ -60,7 +60,7 @@\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n #\n \n-# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands\n+# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n #server=0\n \n # Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n@@ -82,7 +82,7 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-QT to accept JSON-RPC commands.\n+# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n # it is also read by bitcoind to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
        "patch": "@@ -101,7 +101,7 @@ Tests:\n Miscellaneous:\n - `c9e022b` Initialization: set Boost path locale in main thread\n - `23126a0` Sanitize command strings before logging them.\n-- `323de27` Initialization: setup environment before starting QT tests\n+- `323de27` Initialization: setup environment before starting Qt tests\n - `7494e09` Initialization: setup environment before starting tests\n - `df45564` Initialization: set fallback locale as environment variable\n "
      },
      {
        "sha": "8917f77f22f5c5d1956afbe539811b2d865f5fbb",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
        "patch": "@@ -404,7 +404,7 @@ void SubstituteFonts(const QString& language)\n {\n #if defined(Q_OS_MAC)\n // Background:\n-// OSX's default font changed in 10.9 and QT is unable to find it with its\n+// OSX's default font changed in 10.9 and Qt is unable to find it with its\n // usual fallback methods when building against the 10.7 sdk or lower.\n // The 10.8 SDK added a function to let it find the correct fallback font.\n // If this fallback is not properly loaded, some characters may fail to"
      }
    ]
  },
  {
    "sha": "d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2IwZDhjMGU2YjUxMGIyYzExM2FiYzcwYzU0ZWRmZGUxNmViN2Y1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T08:47:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T08:48:06Z"
      },
      "message": "Merge pull request #6694\n\n24cb7c7 [QT] fix thin space word wrap line brake issue (Jonas Schnelli)",
      "tree": {
        "sha": "fb8b3c024d931a234d5ce46eba2218dc8ed4ec97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb8b3c024d931a234d5ce46eba2218dc8ed4ec97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWARXGAAoJEHSBCwEjRsmmkYoH/0pP1PjfSsFv9Hvwi4oIQO8N\n0LxiR3H2HHp6KEYW6bWjuVGERAgXibXjTFYAQtA9fLTt054aHe3v8Jeuoda8txJL\n5zOu+UZjuYYNxIm9V3/3L/PC97HHuiGEvp23VYwLKOVJHk47zAJWaleHjAJunXcT\ngIUyYZBKWoU61JwHee2wfPGWt+bsiDHT7m8agtmDpWaIudXYcFe9whF+8nFclAQW\nie85z2mL+GN60+yYguw0iXer4iw/aykJzv/CPOCwXv5tG/x0ehoEO5cF8YMaqhEl\nb+ftB0iyHaAob+HkKCHFLIGO3ZN9zb+amgsDoJDFkIQBQL6NW3+WCXi0OFmpw+Q=\n=wg/Q\n-----END PGP SIGNATURE-----",
        "payload": "tree fb8b3c024d931a234d5ce46eba2218dc8ed4ec97\nparent 34bac4aedcc8140886777c6a83c6dfc6b7d3d82a\nparent 24cb7c7bbba224dcb73fcf69296f5ef4734f745f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442911675 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442911686 +0200\n\nMerge pull request #6694\n\n24cb7c7 [QT] fix thin space word wrap line brake issue (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34bac4aedcc8140886777c6a83c6dfc6b7d3d82a"
      },
      {
        "sha": "24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24cb7c7bbba224dcb73fcf69296f5ef4734f745f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24cb7c7bbba224dcb73fcf69296f5ef4734f745f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a083a6f80edec30f0de5c60204085fced24f2805",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
        "patch": "@@ -312,9 +312,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n         if(u != model->getOptionsModel()->getDisplayUnit())\n             alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n     }\n-    questionString.append(tr(\"Total Amount %1 (= %2)\")\n+    questionString.append(tr(\"Total Amount %1<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n         .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n-        .arg(alternativeUnits.join(\" \" + tr(\"or\") + \" \")));\n+        .arg(alternativeUnits.join(\" \" + tr(\"or\") + \"<br />\")));\n \n     QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm send coins\"),\n         questionString.arg(formatted.join(\"<br />\")),"
      }
    ]
  },
  {
    "sha": "a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2JhYmM4MjZkZmYwYzRiYzAyN2Q3ZDYyZTc5NTAwZmI5YTVhNjlj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T09:13:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T09:36:50Z"
      },
      "message": "Merge pull request #6647\n\n1c1b1b3 [uacomment] Sanitize per BIP-0014 (MarcoFalke)",
      "tree": {
        "sha": "ca3a10fdc08830cb3ee974222279201b065860f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca3a10fdc08830cb3ee974222279201b065860f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWASEyAAoJEHSBCwEjRsmmYRsH/jQ4hiMeJvmurgwv9H9MFuh6\nw1vzQ/MWuHbmbtkGiqNiGWg3jOreaW1FXtuIHjk+uXGMwtnbNFwX/oGn3Nt3ZHGl\nqLlwwqBD2n+fxP2YrwcGqByEQPgy4Tv+0vRdtvBOLcSx3C+BTxI7HBP1OnxfW9Q9\ng6S2qY2ZojU/2C5hqyBmbl+dFWAolWdMIZUPFFmuXyKK+gQc0+ZIOapHVxy8Z4gb\nzzRwm1qU0PMgkMB3/wcjgvt6NXIZ9D5+WFg6Q3JHgrm6lLxeX0PQxJ9T0AEQohID\nCZCoVXp1KDmktGelPwMGHc17yy+DxziPLCHfuBhmFZ1TJ4syyFbzMFpCjEKbibk=\n=QQbT\n-----END PGP SIGNATURE-----",
        "payload": "tree ca3a10fdc08830cb3ee974222279201b065860f8\nparent d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5\nparent 1c1b1b315f2f89584abe9a7558945dea2fbee708\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442913219 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442914610 +0200\n\nMerge pull request #6647\n\n1c1b1b3 [uacomment] Sanitize per BIP-0014 (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3b0d8c0e6b510b2c113abc70c54edfde16eb7f5"
      },
      {
        "sha": "1c1b1b315f2f89584abe9a7558945dea2fbee708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c1b1b315f2f89584abe9a7558945dea2fbee708",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c1b1b315f2f89584abe9a7558945dea2fbee708"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 36,
      "deletions": 12
    },
    "files": [
      {
        "sha": "7c3c18acd29e4397f622324e87c41d65235f74b5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
        "patch": "@@ -1044,8 +1044,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     RegisterNodeSignals(GetNodeSignals());\n \n-    // format user agent, check total size\n-    strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>());\n+    // sanitize comments per BIP-0014, format user agent and check total size\n+    std::vector<string> uacomments;\n+    BOOST_FOREACH(string cmt, mapMultiArgs[\"-uacomment\"])\n+    {\n+        if (cmt != SanitizeString(cmt, SAFE_CHARS_UA_COMMENT))\n+            return InitError(strprintf(\"User Agent comment (%s) contains unsafe characters.\", cmt));\n+        uacomments.push_back(SanitizeString(cmt, SAFE_CHARS_UA_COMMENT));\n+    }\n+    strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, uacomments);\n     if (strSubVersion.size() > MAX_SUBVERSION_LENGTH) {\n         return InitError(strprintf(\"Total length of network version string %i exceeds maximum of %i characters. Reduce the number and/or size of uacomments.\",\n             strSubVersion.size(), MAX_SUBVERSION_LENGTH));"
      },
      {
        "sha": "bde16a517fdcc5cefe5ab78c2aac6f5b6aec620a",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
        "patch": "@@ -413,10 +413,10 @@ BOOST_AUTO_TEST_CASE(test_FormatSubVersion)\n     comments.push_back(std::string(\"comment1\"));\n     std::vector<std::string> comments2;\n     comments2.push_back(std::string(\"comment1\"));\n-    comments2.push_back(std::string(\"comment2\"));\n+    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@; !\\\"#$%&'()*+-/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, std::vector<std::string>()),std::string(\"/Test:0.9.99/\"));\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments),std::string(\"/Test:0.9.99(comment1)/\"));\n-    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; comment2)/\"));\n+    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; Comment2; .,_?@; )/\"));\n }\n \n BOOST_AUTO_TEST_CASE(test_ParseFixedPoint)"
      },
      {
        "sha": "76c22f73538a0aa27d44f09776f6494eef4e447f",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
        "patch": "@@ -14,17 +14,20 @@\n \n using namespace std;\n \n-string SanitizeString(const string& str)\n+static const string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n+\n+static const string SAFE_CHARS[] =\n+{\n+    CHARS_ALPHA_NUM + \" .,;_/:?@()\", // SAFE_CHARS_DEFAULT\n+    CHARS_ALPHA_NUM + \" .,;_?@\" // SAFE_CHARS_UA_COMMENT\n+};\n+\n+string SanitizeString(const string& str, int rule)\n {\n-    /**\n-     * safeChars chosen to allow simple messages/URLs/email addresses, but avoid anything\n-     * even possibly remotely dangerous like & or >\n-     */\n-    static string safeChars(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890 .,;_/:?@()\");\n     string strResult;\n     for (std::string::size_type i = 0; i < str.size(); i++)\n     {\n-        if (safeChars.find(str[i]) != std::string::npos)\n+        if (SAFE_CHARS[rule].find(str[i]) != std::string::npos)\n             strResult.push_back(str[i]);\n     }\n     return strResult;"
      },
      {
        "sha": "ce93e8349779ad2ae27b7963abac1942749d8e6f",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3babc826dff0c4bc027d7d62e79500fb9a5a69c/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
        "patch": "@@ -22,7 +22,21 @@\n /** This is needed because the foreach macro can't get over the comma in pair<t1, t2> */\n #define PAIRTYPE(t1, t2)    std::pair<t1, t2>\n \n-std::string SanitizeString(const std::string& str);\n+/** Used by SanitizeString() */\n+enum SafeChars\n+{\n+    SAFE_CHARS_DEFAULT, //!< The full set of allowed chars\n+    SAFE_CHARS_UA_COMMENT //!< BIP-0014 subset\n+};\n+\n+/**\n+* Remove unsafe chars. Safe chars chosen to allow simple messages/URLs/email\n+* addresses, but avoid anything even possibly remotely dangerous like & or >\n+* @param[in] str    The string to sanitize\n+* @param[in] rule   The set of safe chars to choose (default: least restrictive)\n+* @return           A new string without unsafe chars\n+*/\n+std::string SanitizeString(const std::string& str, int rule = SAFE_CHARS_DEFAULT);\n std::vector<unsigned char> ParseHex(const char* psz);\n std::vector<unsigned char> ParseHex(const std::string& str);\n signed char HexDigit(char c);"
      }
    ]
  },
  {
    "sha": "a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDlkYjdjMTlhZDc5Y2ZkYjJiMGVmYTNhODk1ZmZkOTExNDg3OWVk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-20T11:50:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T09:52:13Z"
      },
      "message": "[trivial] Minor format fixes",
      "tree": {
        "sha": "d35667012c7387daa8263495817d2ebb0c2ea6be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d35667012c7387daa8263495817d2ebb0c2ea6be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0574ede5952a13cec9fa54766923c54d8a69edaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0574ede5952a13cec9fa54766923c54d8a69edaf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0574ede5952a13cec9fa54766923c54d8a69edaf"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c84bd966f559ed49d0abc2bdf04714c5c64c0b45",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
        "patch": "@@ -16,4 +16,4 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n-* [`BIP 111'](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0**\n+* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579))."
      },
      {
        "sha": "02270801e4fdbf5f183094668af9fb2384748589",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
        "patch": "@@ -58,19 +58,19 @@ specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n other software, the last specified value for an option will hold.\n \n-`NODE_BLOOM` node service bit\n-------------------------------\n+`NODE_BLOOM` service bit\n+------------------------\n \n-Support for the `NODE_BLOOM` service bit, as described in [`BIP\n-111'](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n+Support for the `NODE_BLOOM` service bit, as described in [BIP\n+111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n added to the P2P protocol code.\n \n BIP 111 defines a service bit to allow peers to advertise that they support\n bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n version to allow peers to identify old nodes which allow bloom filtering of the\n connection despite lacking the new service bit.\n \n-In this version, it only enforced for peer peers that send protocol versions\n+In this version, it is only enforced for peers that send protocol versions\n `>=70011`. For the next major version it is planned that this restriction will be\n removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n service bit for nodes that report versions newer than 70011."
      }
    ]
  },
  {
    "sha": "28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGQwYjNlYzY1NWQ3Y2YyZDJiMjMxNDc4ZjBlYWQ2NzMyMmNjNWVj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T09:55:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T09:55:56Z"
      },
      "message": "Merge pull request #6652\n\na09db7c [trivial] Minor format fixes (MarcoFalke)\n0574ede doc: update release-notes and bips.md for BIP111 (Wladimir J. van der Laan)",
      "tree": {
        "sha": "54d50c7391c21b2b45761b294c3f0f54662de299",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54d50c7391c21b2b45761b294c3f0f54662de299"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWASWsAAoJEHSBCwEjRsmmhWQH/23GIi3bJnTDyEwaTdigkHA5\nKqqcBsJHn/BzhtWOdVmmZfLi+p6OfMMPmvqr7Kf5hBNE9xZ5s+za+WVemltONBnl\n0xnS7v1mP234fqAGCUYYcaD/84ju2Os1iPEXTiNwAvOAgaz1Ar5p4schH0S1XbjC\nMfpT0XcZGZGHKQ8J9y0VvPUGj3nxETR9wiPzMtIespsLuZn2kkaJzgFApMv4DE8/\nSVJNQgNnMXlX8gnGIJFWtZxgUoNKko0ZMIf4Ng179d0Jb1BbyKOuEya5wlck05gK\nhDIU8BBVwjDV0Gq3J5q7c18LM+KDOkiExQ0r9qrZFTZg3667edp1rlX/9ngcl1s=\n=NjEC\n-----END PGP SIGNATURE-----",
        "payload": "tree 54d50c7391c21b2b45761b294c3f0f54662de299\nparent a3babc826dff0c4bc027d7d62e79500fb9a5a69c\nparent a09db7c19ad79cfdb2b0efa3a895ffd9114879ed\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442915746 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442915756 +0200\n\nMerge pull request #6652\n\na09db7c [trivial] Minor format fixes (MarcoFalke)\n0574ede doc: update release-notes and bips.md for BIP111 (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3babc826dff0c4bc027d7d62e79500fb9a5a69c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a3babc826dff0c4bc027d7d62e79500fb9a5a69c"
      },
      {
        "sha": "a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a09db7c19ad79cfdb2b0efa3a895ffd9114879ed"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c84bd966f559ed49d0abc2bdf04714c5c64c0b45",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
        "patch": "@@ -1,4 +1,4 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.10.0**):\n+BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n \n * [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n * [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n@@ -16,3 +16,4 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.10.0**):\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n+* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579))."
      },
      {
        "sha": "a06075334ad7f16ac5b41e3bd4ff4d4f72f3860e",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
        "patch": "@@ -88,6 +88,23 @@ specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n other software, the last specified value for an option will hold.\n \n+`NODE_BLOOM` service bit\n+------------------------\n+\n+Support for the `NODE_BLOOM` service bit, as described in [BIP\n+111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n+added to the P2P protocol code.\n+\n+BIP 111 defines a service bit to allow peers to advertise that they support\n+bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n+version to allow peers to identify old nodes which allow bloom filtering of the\n+connection despite lacking the new service bit.\n+\n+In this version, it is only enforced for peers that send protocol versions\n+`>=70011`. For the next major version it is planned that this restriction will be\n+removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n+service bit for nodes that report versions newer than 70011.\n+\n 0.12.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "e59d2a80f9167031521d882394a08b02fa9d0343",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTlkMmE4MGY5MTY3MDMxNTIxZDg4MjM5NGEwOGIwMmZhOWQwMzQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T11:39:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-22T11:39:38Z"
      },
      "message": "Merge pull request #6315\n\n7aac6db [QT] dump banlist to disk in case of ban/unban over QT (Jonas Schnelli)\n7f90ea7 [QA] adabt QT_NO_KEYWORDS for QT ban implementation (Jonas Schnelli)\n07f70b2 [QA] fix netbase tests because of new CSubNet::ToString() output (Jonas Schnelli)\n4ed0510 [Qt] call DumpBanlist() when baning unbaning nodes (Philip Kaufmann)\nbe89292 [Qt] reenabling hotkeys for ban context menu, use different words (Jonas Schnelli)\nb1189cf [Qt] adapt QT ban option to banlist.dat changes (Jonas Schnelli)\n65abe91 [Qt] add sorting for bantable (Philip Kaufmann)\n51654de [Qt] bantable polish (Philip Kaufmann)\ncdd72cd [Qt] simplify ban list signal handling (Philip Kaufmann)\n43c1f5b [Qt] remove unused timer-code from banlistmodel.cpp (Jonas Schnelli)\ne2b8028 net: Fix CIDR notation in ToString() (Wladimir J. van der Laan)\n9e521c1 [Qt] polish ban table (Philip Kaufmann)\n607809f net: use CIDR notation in CSubNet::ToString() (Jonas Schnelli)\n53caec6 [Qt] bantable overhaul (Jonas Schnelli)\nf0bcbc4 [Qt] bantable fix timestamp 64bit issue (Jonas Schnelli)\n6135309 [Qt] banlist, UI optimizing and better signal handling (Jonas Schnelli)\n770ca79 [Qt] add context menu with unban option to ban table (Jonas Schnelli)\n5f42132 [Qt] add ui signal for banlist changes (Jonas Schnelli)\nad204df [Qt] add banlist table below peers table (Jonas Schnelli)\n50f0908 [Qt] add ban functions to peers window (Jonas Schnelli)",
      "tree": {
        "sha": "650f9d9153d617e7f0b0cbd417902d3feec18be2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/650f9d9153d617e7f0b0cbd417902d3feec18be2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e59d2a80f9167031521d882394a08b02fa9d0343",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAT36AAoJEHSBCwEjRsmm4lsH/Av5XkSsX/3SRmvmQRYUUhlD\n7oti3r6HXV6WtBThZZLEp1EXFiBiBoOmWpwH3YYdnb3qnIFRwVPC5sYABgd8E1K6\nM1WpQjsNzz6FWktWi5ZisOLUAMgJSgJurlSufOy6KKe8nbNJJEX5naevCjgbZjA3\n08bFjf5Zc61x5MFU+Q4mI6dlYRJ3gBw5peqBAq8S4kcb5ADj4Vts7k3jtQGMZc3h\nFG7+zK3olTb4aX+KAY2+C++CrDDhUEPUNsO2Kwk1CICoyiCpGBWQrEyNnpiUbcSU\nNMOzk9jKszPfRAn3qNRykpP0wJBffp+aqRTOytfTexzuKCM1hDVaUJwyoDyPacY=\n=myOq\n-----END PGP SIGNATURE-----",
        "payload": "tree 650f9d9153d617e7f0b0cbd417902d3feec18be2\nparent 28d0b3ec655d7cf2d2b231478f0ead67322cc5ec\nparent 7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1442921954 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1442921978 +0200\n\nMerge pull request #6315\n\n7aac6db [QT] dump banlist to disk in case of ban/unban over QT (Jonas Schnelli)\n7f90ea7 [QA] adabt QT_NO_KEYWORDS for QT ban implementation (Jonas Schnelli)\n07f70b2 [QA] fix netbase tests because of new CSubNet::ToString() output (Jonas Schnelli)\n4ed0510 [Qt] call DumpBanlist() when baning unbaning nodes (Philip Kaufmann)\nbe89292 [Qt] reenabling hotkeys for ban context menu, use different words (Jonas Schnelli)\nb1189cf [Qt] adapt QT ban option to banlist.dat changes (Jonas Schnelli)\n65abe91 [Qt] add sorting for bantable (Philip Kaufmann)\n51654de [Qt] bantable polish (Philip Kaufmann)\ncdd72cd [Qt] simplify ban list signal handling (Philip Kaufmann)\n43c1f5b [Qt] remove unused timer-code from banlistmodel.cpp (Jonas Schnelli)\ne2b8028 net: Fix CIDR notation in ToString() (Wladimir J. van der Laan)\n9e521c1 [Qt] polish ban table (Philip Kaufmann)\n607809f net: use CIDR notation in CSubNet::ToString() (Jonas Schnelli)\n53caec6 [Qt] bantable overhaul (Jonas Schnelli)\nf0bcbc4 [Qt] bantable fix timestamp 64bit issue (Jonas Schnelli)\n6135309 [Qt] banlist, UI optimizing and better signal handling (Jonas Schnelli)\n770ca79 [Qt] add context menu with unban option to ban table (Jonas Schnelli)\n5f42132 [Qt] add ui signal for banlist changes (Jonas Schnelli)\nad204df [Qt] add banlist table below peers table (Jonas Schnelli)\n50f0908 [Qt] add ban functions to peers window (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e59d2a80f9167031521d882394a08b02fa9d0343",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e59d2a80f9167031521d882394a08b02fa9d0343",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e59d2a80f9167031521d882394a08b02fa9d0343/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28d0b3ec655d7cf2d2b231478f0ead67322cc5ec"
      },
      {
        "sha": "7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d"
      }
    ],
    "stats": {
      "total": 710,
      "additions": 654,
      "deletions": 56
    },
    "files": [
      {
        "sha": "e383a3a12c375b2e22b5670ec6cafa53efaebb57",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -55,17 +55,17 @@ def run_test(self):\n         self.nodes[2].setban(\"192.168.0.1\", \"add\", 1) #ban for 1 seconds\n         self.nodes[2].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/19\", \"add\", 1000) #ban for 1000 seconds\n         listBeforeShutdown = self.nodes[2].listbanned();\n-        assert_equal(\"192.168.0.1/255.255.255.255\", listBeforeShutdown[2]['address']) #must be here\n+        assert_equal(\"192.168.0.1/32\", listBeforeShutdown[2]['address']) #must be here\n         time.sleep(2) #make 100% sure we expired 192.168.0.1 node time\n \n         #stop node\n         stop_node(self.nodes[2], 2)\n \n         self.nodes[2] = start_node(2, self.options.tmpdir)\n         listAfterShutdown = self.nodes[2].listbanned();\n-        assert_equal(\"127.0.0.0/255.255.255.0\", listAfterShutdown[0]['address'])\n-        assert_equal(\"127.0.0.0/255.255.255.255\", listAfterShutdown[1]['address'])\n-        assert_equal(\"2001:4000::/ffff:e000:0:0:0:0:0:0\", listAfterShutdown[2]['address'])\n+        assert_equal(\"127.0.0.0/24\", listAfterShutdown[0]['address'])\n+        assert_equal(\"127.0.0.0/32\", listAfterShutdown[1]['address'])\n+        assert_equal(\"/19\" in listAfterShutdown[2]['address'], True)\n \n         ###########################\n         # RPC disconnectnode test #"
      },
      {
        "sha": "480bd9dc8a6229f18d6f5c376061bf16cd673f9d",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -97,6 +97,7 @@ QT_MOC_CPP = \\\n   qt/moc_addressbookpage.cpp \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n   qt/moc_bitcoingui.cpp \\\n@@ -162,6 +163,7 @@ BITCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n   qt/askpassphrasedialog.h \\\n+  qt/bantablemodel.h \\\n   qt/bitcoinaddressvalidator.h \\\n   qt/bitcoinamountfield.h \\\n   qt/bitcoingui.h \\\n@@ -260,6 +262,7 @@ RES_ICONS = \\\n   qt/res/icons/verify.png\n \n BITCOIN_QT_CPP = \\\n+  qt/bantablemodel.cpp \\\n   qt/bitcoinaddressvalidator.cpp \\\n   qt/bitcoinamountfield.cpp \\\n   qt/bitcoingui.cpp \\"
      },
      {
        "sha": "c3d56d9184497249a1aef191979aa63262c6e113",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 8,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -1311,17 +1311,57 @@ bool CSubNet::Match(const CNetAddr &addr) const\n     return true;\n }\n \n+static inline int NetmaskBits(uint8_t x)\n+{\n+    switch(x) {\n+    case 0x00: return 0; break;\n+    case 0x80: return 1; break;\n+    case 0xc0: return 2; break;\n+    case 0xe0: return 3; break;\n+    case 0xf0: return 4; break;\n+    case 0xf8: return 5; break;\n+    case 0xfc: return 6; break;\n+    case 0xfe: return 7; break;\n+    case 0xff: return 8; break;\n+    default: return -1; break;\n+    }\n+}\n+\n std::string CSubNet::ToString() const\n {\n+    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n+    int cidr = 0;\n+    bool valid_cidr = true;\n+    int n = network.IsIPv4() ? 12 : 0;\n+    for (; n < 16 && netmask[n] == 0xff; ++n)\n+        cidr += 8;\n+    if (n < 16) {\n+        int bits = NetmaskBits(netmask[n]);\n+        if (bits < 0)\n+            valid_cidr = false;\n+        else\n+            cidr += bits;\n+        ++n;\n+    }\n+    for (; n < 16 && valid_cidr; ++n)\n+        if (netmask[n] != 0x00)\n+            valid_cidr = false;\n+\n+    /* Format output */\n     std::string strNetmask;\n-    if (network.IsIPv4())\n-        strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-    else\n-        strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                         netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                         netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                         netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                         netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    if (valid_cidr) {\n+        strNetmask = strprintf(\"%u\", cidr);\n+    } else {\n+        if (network.IsIPv4())\n+            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n+        else\n+            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n+                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n+                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n+                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    }\n+\n     return network.ToString() + \"/\" + strNetmask;\n }\n "
      },
      {
        "sha": "33792af5baef8a10736379ff7fcf76d4d6f3d5d2",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bantablemodel.h\"\n+\n+#include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+\n+#include \"sync.h\"\n+#include \"utiltime.h\"\n+\n+#include <QDebug>\n+#include <QList>\n+\n+bool BannedNodeLessThan::operator()(const CCombinedBan& left, const CCombinedBan& right) const\n+{\n+    const CCombinedBan* pLeft = &left;\n+    const CCombinedBan* pRight = &right;\n+\n+    if (order == Qt::DescendingOrder)\n+        std::swap(pLeft, pRight);\n+\n+    switch(column)\n+    {\n+    case BanTableModel::Address:\n+        return pLeft->subnet.ToString().compare(pRight->subnet.ToString()) < 0;\n+    case BanTableModel::Bantime:\n+        return pLeft->banEntry.nBanUntil < pRight->banEntry.nBanUntil;\n+    }\n+\n+    return false;\n+}\n+\n+// private implementation\n+class BanTablePriv\n+{\n+public:\n+    /** Local cache of peer information */\n+    QList<CCombinedBan> cachedBanlist;\n+    /** Column to sort nodes by */\n+    int sortColumn;\n+    /** Order (ascending or descending) to sort nodes by */\n+    Qt::SortOrder sortOrder;\n+\n+    /** Pull a full list of banned nodes from CNode into our cache */\n+    void refreshBanlist()\n+    {\n+        banmap_t banMap;\n+        CNode::GetBanned(banMap);\n+\n+        cachedBanlist.clear();\n+#if QT_VERSION >= 0x040700\n+        cachedBanlist.reserve(banMap.size());\n+#endif\n+        for (banmap_t::iterator it = banMap.begin(); it != banMap.end(); it++)\n+        {\n+            CCombinedBan banEntry;\n+            banEntry.subnet = (*it).first;\n+            banEntry.banEntry = (*it).second;\n+            cachedBanlist.append(banEntry);\n+        }\n+\n+        if (sortColumn >= 0)\n+            // sort cachedBanlist (use stable sort to prevent rows jumping around unneceesarily)\n+            qStableSort(cachedBanlist.begin(), cachedBanlist.end(), BannedNodeLessThan(sortColumn, sortOrder));\n+    }\n+\n+    int size() const\n+    {\n+        return cachedBanlist.size();\n+    }\n+\n+    CCombinedBan *index(int idx)\n+    {\n+        if (idx >= 0 && idx < cachedBanlist.size())\n+            return &cachedBanlist[idx];\n+\n+        return 0;\n+    }\n+};\n+\n+BanTableModel::BanTableModel(ClientModel *parent) :\n+    QAbstractTableModel(parent),\n+    clientModel(parent)\n+{\n+    columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n+    priv = new BanTablePriv();\n+    // default to unsorted\n+    priv->sortColumn = -1;\n+\n+    // load initial data\n+    refresh();\n+}\n+\n+int BanTableModel::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return priv->size();\n+}\n+\n+int BanTableModel::columnCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return columns.length();;\n+}\n+\n+QVariant BanTableModel::data(const QModelIndex &index, int role) const\n+{\n+    if(!index.isValid())\n+        return QVariant();\n+\n+    CCombinedBan *rec = static_cast<CCombinedBan*>(index.internalPointer());\n+\n+    if (role == Qt::DisplayRole) {\n+        switch(index.column())\n+        {\n+        case Address:\n+            return QString::fromStdString(rec->subnet.ToString());\n+        case Bantime:\n+            QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n+            date = date.addSecs(rec->banEntry.nBanUntil);\n+            return date.toString(Qt::SystemLocaleLongDate);\n+        }\n+    }\n+\n+    return QVariant();\n+}\n+\n+QVariant BanTableModel::headerData(int section, Qt::Orientation orientation, int role) const\n+{\n+    if(orientation == Qt::Horizontal)\n+    {\n+        if(role == Qt::DisplayRole && section < columns.size())\n+        {\n+            return columns[section];\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+Qt::ItemFlags BanTableModel::flags(const QModelIndex &index) const\n+{\n+    if(!index.isValid())\n+        return 0;\n+\n+    Qt::ItemFlags retval = Qt::ItemIsSelectable | Qt::ItemIsEnabled;\n+    return retval;\n+}\n+\n+QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    CCombinedBan *data = priv->index(row);\n+\n+    if (data)\n+        return createIndex(row, column, data);\n+    return QModelIndex();\n+}\n+\n+void BanTableModel::refresh()\n+{\n+    Q_EMIT layoutAboutToBeChanged();\n+    priv->refreshBanlist();\n+    Q_EMIT layoutChanged();\n+}\n+\n+void BanTableModel::sort(int column, Qt::SortOrder order)\n+{\n+    priv->sortColumn = column;\n+    priv->sortOrder = order;\n+    refresh();\n+}\n+\n+bool BanTableModel::shouldShow()\n+{\n+    if (priv->size() > 0)\n+        return true;\n+    return false;\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "c21dd04e311cb6dbce9cbf87292698ad2c6395f6",
        "filename": "src/qt/bantablemodel.h",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_BANTABLEMODEL_H\n+#define BITCOIN_QT_BANTABLEMODEL_H\n+\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class ClientModel;\n+class BanTablePriv;\n+\n+struct CCombinedBan {\n+    CSubNet subnet;\n+    CBanEntry banEntry;\n+};\n+\n+class BannedNodeLessThan\n+{\n+public:\n+    BannedNodeLessThan(int nColumn, Qt::SortOrder fOrder) :\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CCombinedBan& left, const CCombinedBan& right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class BanTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit BanTableModel(ClientModel *parent = 0);\n+    void startAutoRefresh();\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Bantime = 1\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    bool shouldShow();\n+    /*@}*/\n+\n+public Q_SLOTS:\n+    void refresh();\n+\n+private:\n+    ClientModel *clientModel;\n+    QStringList columns;\n+    BanTablePriv *priv;\n+};\n+\n+#endif // BITCOIN_QT_BANTABLEMODEL_H"
      },
      {
        "sha": "0900a35cc4f38476baf46d522ada11f6edbbf4dc",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"bantablemodel.h\"\n #include \"guiconstants.h\"\n #include \"peertablemodel.h\"\n \n@@ -26,13 +27,15 @@ ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent),\n     optionsModel(optionsModel),\n     peerTableModel(0),\n+    banTableModel(0),\n     cachedNumBlocks(0),\n     cachedBlockDate(QDateTime()),\n     cachedReindexing(0),\n     cachedImporting(0),\n     pollTimer(0)\n {\n     peerTableModel = new PeerTableModel(this);\n+    banTableModel = new BanTableModel(this);\n     pollTimer = new QTimer(this);\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n     pollTimer->start(MODEL_UPDATE_DELAY);\n@@ -176,6 +179,11 @@ PeerTableModel *ClientModel::getPeerTableModel()\n     return peerTableModel;\n }\n \n+BanTableModel *ClientModel::getBanTableModel()\n+{\n+    return banTableModel;\n+}\n+\n QString ClientModel::formatFullVersion() const\n {\n     return QString::fromStdString(FormatFullVersion());\n@@ -206,6 +214,11 @@ QString ClientModel::formatClientStartupTime() const\n     return QDateTime::fromTime_t(nClientStartupTime).toString();\n }\n \n+void ClientModel::updateBanlist()\n+{\n+    banTableModel->refresh();\n+}\n+\n // Handlers for core signals\n static void ShowProgress(ClientModel *clientmodel, const std::string &title, int nProgress)\n {\n@@ -230,12 +243,19 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n                               Q_ARG(int, status));\n }\n \n+static void BannedListChanged(ClientModel *clientmodel)\n+{\n+    qDebug() << QString(\"%1: Requesting update for peer banlist\").arg(__func__);\n+    QMetaObject::invokeMethod(clientmodel, \"updateBanlist\", Qt::QueuedConnection);\n+}\n+\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n+    uiInterface.BannedListChanged.connect(boost::bind(BannedListChanged, this));\n }\n \n void ClientModel::unsubscribeFromCoreSignals()\n@@ -244,4 +264,5 @@ void ClientModel::unsubscribeFromCoreSignals()\n     uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n+    uiInterface.BannedListChanged.disconnect(boost::bind(BannedListChanged, this));\n }"
      },
      {
        "sha": "627bdf862de6351d2a5abe08cfbea92661f7d9f5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -9,6 +9,7 @@\n #include <QDateTime>\n \n class AddressTableModel;\n+class BanTableModel;\n class OptionsModel;\n class PeerTableModel;\n class TransactionTableModel;\n@@ -44,6 +45,7 @@ class ClientModel : public QObject\n \n     OptionsModel *getOptionsModel();\n     PeerTableModel *getPeerTableModel();\n+    BanTableModel *getBanTableModel();\n \n     //! Return number of connections, default is in- and outbound (total)\n     int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n@@ -72,6 +74,7 @@ class ClientModel : public QObject\n private:\n     OptionsModel *optionsModel;\n     PeerTableModel *peerTableModel;\n+    BanTableModel *banTableModel;\n \n     int cachedNumBlocks;\n     QDateTime cachedBlockDate;\n@@ -99,6 +102,7 @@ public Q_SLOTS:\n     void updateTimer();\n     void updateNumConnections(int numConnections);\n     void updateAlert(const QString &hash, int status);\n+    void updateBanlist();\n };\n \n #endif // BITCOIN_QT_CLIENTMODEL_H"
      },
      {
        "sha": "4117da57f523d0812f1f04d61a133f739c0e0c15",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 78,
        "deletions": 10,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -713,17 +713,85 @@\n       </attribute>\n       <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n        <item row=\"0\" column=\"0\" rowspan=\"2\">\n-        <widget class=\"QTableView\" name=\"peerWidget\">\n-         <property name=\"horizontalScrollBarPolicy\">\n-          <enum>Qt::ScrollBarAsNeeded</enum>\n-         </property>\n-         <property name=\"sortingEnabled\">\n-          <bool>true</bool>\n+        <layout class=\"QVBoxLayout\" name=\"verticalLayout_101\">\n+         <property name=\"spacing\">\n+          <number>0</number>\n          </property>\n-         <attribute name=\"horizontalHeaderHighlightSections\">\n-          <bool>false</bool>\n-         </attribute>\n-        </widget>\n+         <item>\n+          <widget class=\"QTableView\" name=\"peerWidget\">\n+           <property name=\"horizontalScrollBarPolicy\">\n+            <enum>Qt::ScrollBarAsNeeded</enum>\n+           </property>\n+           <property name=\"sortingEnabled\">\n+            <bool>true</bool>\n+           </property>\n+           <attribute name=\"horizontalHeaderHighlightSections\">\n+            <bool>false</bool>\n+           </attribute>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"banHeading\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Minimum\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>300</width>\n+             <height>32</height>\n+            </size>\n+           </property>\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>16777215</width>\n+             <height>32</height>\n+            </size>\n+           </property>\n+           <property name=\"font\">\n+            <font>\n+             <pointsize>12</pointsize>\n+            </font>\n+           </property>\n+           <property name=\"cursor\">\n+            <cursorShape>IBeamCursor</cursorShape>\n+           </property>\n+           <property name=\"text\">\n+            <string>Banned peers</string>\n+           </property>\n+           <property name=\"alignment\">\n+            <set>Qt::AlignBottom|Qt::AlignLeading|Qt::AlignLeft</set>\n+           </property>\n+           <property name=\"wordWrap\">\n+            <bool>true</bool>\n+           </property>\n+           <property name=\"textInteractionFlags\">\n+            <set>Qt::NoTextInteraction</set>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QTableView\" name=\"banlistWidget\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"horizontalScrollBarPolicy\">\n+            <enum>Qt::ScrollBarAsNeeded</enum>\n+           </property>\n+           <property name=\"sortingEnabled\">\n+            <bool>true</bool>\n+           </property>\n+           <attribute name=\"horizontalHeaderHighlightSections\">\n+            <bool>false</bool>\n+           </attribute>\n+          </widget>\n+         </item>\n+        </layout>\n        </item>\n        <item row=\"0\" column=\"1\">\n         <widget class=\"QLabel\" name=\"peerHeading\">"
      },
      {
        "sha": "9603a26c6e1ceb12724a2d1e7b3a18a38be3f722",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 132,
        "deletions": 20,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -5,9 +5,11 @@\n #include \"rpcconsole.h\"\n #include \"ui_rpcconsole.h\"\n \n+#include \"bantablemodel.h\"\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n #include \"platformstyle.h\"\n+#include \"bantablemodel.h\"\n \n #include \"chainparams.h\"\n #include \"rpcserver.h\"\n@@ -25,6 +27,7 @@\n #include <QKeyEvent>\n #include <QMenu>\n #include <QScrollBar>\n+#include <QSignalMapper>\n #include <QThread>\n #include <QTime>\n #include <QTimer>\n@@ -240,8 +243,9 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    contextMenu(0),\n-    platformStyle(platformStyle)\n+    platformStyle(platformStyle),\n+    peersTableContextMenu(0),\n+    banTableContextMenu(0)\n {\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n@@ -328,8 +332,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n {\n     clientModel = model;\n     ui->trafficGraph->setClientModel(model);\n-    if(model)\n-    {\n+    if (model && clientModel->getPeerTableModel() && clientModel->getBanTableModel()) {\n         // Keep up to date with client\n         setNumConnections(model->getNumConnections());\n         connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n@@ -350,23 +353,75 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n+        ui->peerWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // create context menu actions\n+        // create peer table context menu actions\n         QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n-\n-        // create context menu\n-        contextMenu = new QMenu();\n-        contextMenu->addAction(disconnectAction);\n-\n-        // context menu signals\n-        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showMenu(const QPoint&)));\n+        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &day\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &week\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &year\"), this);\n+\n+        // create peer table context menu\n+        peersTableContextMenu = new QMenu();\n+        peersTableContextMenu->addAction(disconnectAction);\n+        peersTableContextMenu->addAction(banAction1h);\n+        peersTableContextMenu->addAction(banAction24h);\n+        peersTableContextMenu->addAction(banAction7d);\n+        peersTableContextMenu->addAction(banAction365d);\n+\n+        // Add a signal mapping to allow dynamic context menu arguments.\n+        // We need to use int (instead of int64_t), because signal mapper only supports\n+        // int or objects, which is okay because max bantime (1 year) is < int_max.\n+        QSignalMapper* signalMapper = new QSignalMapper(this);\n+        signalMapper->setMapping(banAction1h, 60*60);\n+        signalMapper->setMapping(banAction24h, 60*60*24);\n+        signalMapper->setMapping(banAction7d, 60*60*24*7);\n+        signalMapper->setMapping(banAction365d, 60*60*24*365);\n+        connect(banAction1h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction24h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction7d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int)));\n+\n+        // peer table context menu signals\n+        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n-        // connect the peerWidget selection model to our peerSelected() handler\n+        // peer table signal handling - update peer details when selecting new node\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n-             this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+            this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+        // peer table signal handling - update peer details when new nodes are added to the model\n         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n \n+        // set up ban table\n+        ui->banlistWidget->setModel(model->getBanTableModel());\n+        ui->banlistWidget->verticalHeader()->hide();\n+        ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n+        ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n+        ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n+        ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n+        ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n+\n+        // create ban table context menu action\n+        QAction* unbanAction = new QAction(tr(\"&Unban Node\"), this);\n+\n+        // create ban table context menu\n+        banTableContextMenu = new QMenu();\n+        banTableContextMenu->addAction(unbanAction);\n+\n+        // ban table context menu signals\n+        connect(ui->banlistWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showBanTableContextMenu(const QPoint&)));\n+        connect(unbanAction, SIGNAL(triggered()), this, SLOT(unbanSelectedNode()));\n+\n+        // ban table signal handling - clear peer details when clicking a peer in the ban table\n+        connect(ui->banlistWidget, SIGNAL(clicked(const QModelIndex&)), this, SLOT(clearSelectedNode()));\n+        // ban table signal handling - ensure ban table is shown or hidden (if empty)\n+        connect(model->getBanTableModel(), SIGNAL(layoutChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientUserAgent->setText(model->formatSubVersion());\n@@ -576,7 +631,7 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n {\n     Q_UNUSED(deselected);\n \n-    if (!clientModel || selected.indexes().isEmpty())\n+    if (!clientModel || !clientModel->getPeerTableModel() || selected.indexes().isEmpty())\n         return;\n \n     const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n@@ -586,7 +641,7 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n \n void RPCConsole::peerLayoutChanged()\n {\n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     const CNodeCombinedStats *stats = NULL;\n@@ -695,7 +750,7 @@ void RPCConsole::showEvent(QShowEvent *event)\n {\n     QWidget::showEvent(event);\n \n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     // start PeerTableModel auto refresh\n@@ -706,18 +761,25 @@ void RPCConsole::hideEvent(QHideEvent *event)\n {\n     QWidget::hideEvent(event);\n \n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     // stop PeerTableModel auto refresh\n     clientModel->getPeerTableModel()->stopAutoRefresh();\n }\n \n-void RPCConsole::showMenu(const QPoint& point)\n+void RPCConsole::showPeersTableContextMenu(const QPoint& point)\n {\n     QModelIndex index = ui->peerWidget->indexAt(point);\n     if (index.isValid())\n-        contextMenu->exec(QCursor::pos());\n+        peersTableContextMenu->exec(QCursor::pos());\n+}\n+\n+void RPCConsole::showBanTableContextMenu(const QPoint& point)\n+{\n+    QModelIndex index = ui->banlistWidget->indexAt(point);\n+    if (index.isValid())\n+        banTableContextMenu->exec(QCursor::pos());\n }\n \n void RPCConsole::disconnectSelectedNode()\n@@ -731,10 +793,60 @@ void RPCConsole::disconnectSelectedNode()\n     }\n }\n \n+void RPCConsole::banSelectedNode(int bantime)\n+{\n+    if (!clientModel)\n+        return;\n+\n+    // Get currently selected peer address\n+    QString strNode = GUIUtil::getEntryData(ui->peerWidget, 0, PeerTableModel::Address);\n+    // Find possible nodes, ban it and clear the selected node\n+    if (CNode *bannedNode = FindNode(strNode.toStdString())) {\n+        std::string nStr = strNode.toStdString();\n+        std::string addr;\n+        int port = 0;\n+        SplitHostPort(nStr, port, addr);\n+\n+        CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n+        bannedNode->fDisconnect = true;\n+        DumpBanlist();\n+\n+        clearSelectedNode();\n+        clientModel->getBanTableModel()->refresh();\n+    }\n+}\n+\n+void RPCConsole::unbanSelectedNode()\n+{\n+    if (!clientModel)\n+        return;\n+\n+    // Get currently selected ban address\n+    QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n+    CSubNet possibleSubnet(strNode.toStdString());\n+\n+    if (possibleSubnet.IsValid())\n+    {\n+        CNode::Unban(possibleSubnet);\n+        DumpBanlist();\n+        clientModel->getBanTableModel()->refresh();\n+    }\n+}\n+\n void RPCConsole::clearSelectedNode()\n {\n     ui->peerWidget->selectionModel()->clearSelection();\n     cachedNodeid = -1;\n     ui->detailWidget->hide();\n     ui->peerHeading->setText(tr(\"Select a peer to view detailed information.\"));\n }\n+\n+void RPCConsole::showOrHideBanTableIfRequired()\n+{\n+    if (!clientModel)\n+        return;\n+\n+    bool visible = clientModel->getBanTableModel()->shouldShow();\n+    ui->banlistWidget->setVisible(visible);\n+    ui->banHeading->setVisible(visible);\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "b86f7767869f3c74c44b52223716bd90464fca48",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -61,7 +61,13 @@ private Q_SLOTS:\n     void showEvent(QShowEvent *event);\n     void hideEvent(QHideEvent *event);\n     /** Show custom context menu on Peers tab */\n-    void showMenu(const QPoint& point);\n+    void showPeersTableContextMenu(const QPoint& point);\n+    /** Show custom context menu on Bans tab */\n+    void showBanTableContextMenu(const QPoint& point);\n+    /** Hides ban table if no bans are present */\n+    void showOrHideBanTableIfRequired();\n+    /** clear the selected node */\n+    void clearSelectedNode();\n \n public Q_SLOTS:\n     void clear();\n@@ -80,6 +86,10 @@ public Q_SLOTS:\n     void peerLayoutChanged();\n     /** Disconnect a selected node on the Peers tab */\n     void disconnectSelectedNode();\n+    /** Ban a selected node on the Peers tab */\n+    void banSelectedNode(int bantime);\n+    /** Unban a selected node on the Bans tab */\n+    void unbanSelectedNode();\n \n Q_SIGNALS:\n     // For RPC command executor\n@@ -92,24 +102,26 @@ public Q_SLOTS:\n     void setTrafficGraphRange(int mins);\n     /** show detailed information on ui about selected node */\n     void updateNodeDetail(const CNodeCombinedStats *stats);\n-    /** clear the selected node */\n-    void clearSelectedNode();\n \n     enum ColumnWidths\n     {\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n-        PING_COLUMN_WIDTH = 80\n+        PING_COLUMN_WIDTH = 80,\n+        BANSUBNET_COLUMN_WIDTH = 200,\n+        BANTIME_COLUMN_WIDTH = 250\n+\n     };\n \n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n     QStringList history;\n     int historyPtr;\n     NodeId cachedNodeid;\n-    QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n     RPCTimerInterface *rpcTimerInterface;\n+    QMenu *peersTableContextMenu;\n+    QMenu *banTableContextMenu;\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      },
      {
        "sha": "5d490c70caef5e6fd52ea422b5d891018c164261",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -12,6 +12,7 @@\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"timedata.h\"\n+#include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\"\n@@ -531,6 +532,8 @@ UniValue setban(const UniValue& params, bool fHelp)\n     }\n \n     DumpBanlist(); //store banlist to disk\n+    uiInterface.BannedListChanged();\n+\n     return NullUniValue;\n }\n \n@@ -577,6 +580,7 @@ UniValue clearbanned(const UniValue& params, bool fHelp)\n \n     CNode::ClearBanned();\n     DumpBanlist(); //store banlist to disk\n+    uiInterface.BannedListChanged();\n \n     return NullUniValue;\n }"
      },
      {
        "sha": "b1ef0ed24a72e498979897523e1834da98e96137",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 80,
        "deletions": 2,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -149,12 +149,90 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).IsValid());\n     BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).Match(CNetAddr(\"127.0.0.1\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"127.0.0.1\")).Match(CNetAddr(\"127.0.0.2\")));\n-    BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).ToString() == \"127.0.0.1/255.255.255.255\");\n+    BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).ToString() == \"127.0.0.1/32\");\n \n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).IsValid());\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:8\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:9\")));\n-    BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/128\");\n+\n+    CSubNet subnet = CSubNet(\"1.2.3.4/255.255.255.255\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/32\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.254\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/31\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.252\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/30\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.248\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/29\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.240\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/28\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.224\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/27\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.192\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/26\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.128\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/25\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/24\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.254.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.2.0/23\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.252.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/22\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.248.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/21\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.240.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/20\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.224.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/19\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.192.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/18\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.128.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/17\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/16\");\n+    subnet = CSubNet(\"1.2.3.4/255.254.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/15\");\n+    subnet = CSubNet(\"1.2.3.4/255.252.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/14\");\n+    subnet = CSubNet(\"1.2.3.4/255.248.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/13\");\n+    subnet = CSubNet(\"1.2.3.4/255.240.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/12\");\n+    subnet = CSubNet(\"1.2.3.4/255.224.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/11\");\n+    subnet = CSubNet(\"1.2.3.4/255.192.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/10\");\n+    subnet = CSubNet(\"1.2.3.4/255.128.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/9\");\n+    subnet = CSubNet(\"1.2.3.4/255.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/8\");\n+    subnet = CSubNet(\"1.2.3.4/254.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/7\");\n+    subnet = CSubNet(\"1.2.3.4/252.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/6\");\n+    subnet = CSubNet(\"1.2.3.4/248.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/5\");\n+    subnet = CSubNet(\"1.2.3.4/240.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/4\");\n+    subnet = CSubNet(\"1.2.3.4/224.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/3\");\n+    subnet = CSubNet(\"1.2.3.4/192.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/2\");\n+    subnet = CSubNet(\"1.2.3.4/128.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/1\");\n+    subnet = CSubNet(\"1.2.3.4/0.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/0\");\n+\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/128\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:0000:0000:0000:0000:0000:0000:0000\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.232.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      },
      {
        "sha": "1bd59497ff3460bc02d189c27a421a4fb4cb1823",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -235,7 +235,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     UniValue ar = r.get_array();\n     UniValue o1 = ar[0].get_obj();\n     UniValue adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.255\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/32\");\n     BOOST_CHECK_NO_THROW(CallRPC(string(\"setban 127.0.0.0 remove\")));;\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n@@ -247,7 +247,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     UniValue banned_until = find_value(o1, \"banned_until\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n     BOOST_CHECK_EQUAL(banned_until.get_int64(), 1607731200); // absolute time check\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n@@ -258,7 +258,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     banned_until = find_value(o1, \"banned_until\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n     int64_t now = GetTime();    \n     BOOST_CHECK(banned_until.get_int64() > now);\n     BOOST_CHECK(banned_until.get_int64()-now <= 200);\n@@ -288,23 +288,23 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"fe80::202:b3ff:fe1e:8329/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"fe80::202:b3ff:fe1e:8329/128\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n-    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:db8::/30 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:db8::/ffff:fffc:0:0:0:0:0:0 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:db8::/ffff:fffc:0:0:0:0:0:0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:db8::/30\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "e402479933887e285dd38e43c864ba2909628a1a",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e59d2a80f9167031521d882394a08b02fa9d0343/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e59d2a80f9167031521d882394a08b02fa9d0343/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=e59d2a80f9167031521d882394a08b02fa9d0343",
        "patch": "@@ -95,6 +95,9 @@ class CClientUIInterface\n \n     /** New block has been accepted */\n     boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n+\n+    /** Banlist did change. */\n+    boost::signals2::signal<void (void)> BannedListChanged;\n };\n \n extern CClientUIInterface uiInterface;"
      }
    ]
  },
  {
    "sha": "391dff16fe9ace90fc0f3308a5c63c453370e713",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTFkZmYxNmZlOWFjZTkwZmMwZjMzMDhhNWM2M2M0NTMzNzBlNzEz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-08-11T19:03:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-09-22T16:51:07Z"
      },
      "message": "Do not store Merkle branches in the wallet.\n\nAssume that when a wallet transaction has a valid block hash and transaction position\nin it, the transaction is actually there. We're already trusting wallet data in a\nmuch more fundamental way anyway.\n\nTo prevent backward compatibility issues, a new record is used for storing the\nblock locator in the wallet. Old wallets will see a wallet file synchronized up\nto the genesis block, and rescan automatically.",
      "tree": {
        "sha": "3337a40ad6bca7c57560c45d091bb9ebfd6523cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3337a40ad6bca7c57560c45d091bb9ebfd6523cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/391dff16fe9ace90fc0f3308a5c63c453370e713",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/391dff16fe9ace90fc0f3308a5c63c453370e713",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/391dff16fe9ace90fc0f3308a5c63c453370e713",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/391dff16fe9ace90fc0f3308a5c63c453370e713/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e59d2a80f9167031521d882394a08b02fa9d0343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e59d2a80f9167031521d882394a08b02fa9d0343",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e59d2a80f9167031521d882394a08b02fa9d0343"
      }
    ],
    "stats": {
      "total": 98,
      "additions": 25,
      "deletions": 73
    },
    "files": [
      {
        "sha": "bef9af60ef00d14e7356cde43b9da3d8fe467032",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -105,6 +105,15 @@ In this version, it is only enforced for peers that send protocol versions\n removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n service bit for nodes that report versions newer than 70011.\n \n+Merkle branches removed from wallet\n+-----------------------------------\n+\n+Previously, every wallet transaction stored a Merkle branch to prove its\n+presence in blocks. This wasn't being used for more than an expensive\n+sanity check. Since 0.12, these are no longer stored. When loading a\n+0.12 wallet into an older version, it will automatically rescan to avoid\n+failed checks.\n+\n 0.12.0 Change log\n =================\n "
      },
      {
        "sha": "15b86cdda639de310ede720eeb535330679114ea",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -31,7 +31,7 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     genesis.nVersion = nVersion;\n     genesis.vtx.push_back(txNew);\n     genesis.hashPrevBlock.SetNull();\n-    genesis.hashMerkleRoot = genesis.BuildMerkleTree();\n+    genesis.hashMerkleRoot = genesis.ComputeMerkleRoot();\n     return genesis;\n }\n "
      },
      {
        "sha": "a05f59ee0cd9c1db286639c685095a418c12ff43",
        "filename": "src/core_memusage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/core_memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/core_memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_memusage.h?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -48,7 +48,7 @@ static inline size_t RecursiveDynamicUsage(const CMutableTransaction& tx) {\n }\n \n static inline size_t RecursiveDynamicUsage(const CBlock& block) {\n-    size_t mem = memusage::DynamicUsage(block.vtx) + memusage::DynamicUsage(block.vMerkleTree);\n+    size_t mem = memusage::DynamicUsage(block.vtx);\n     for (std::vector<CTransaction>::const_iterator it = block.vtx.begin(); it != block.vtx.end(); it++) {\n         mem += RecursiveDynamicUsage(*it);\n     }"
      },
      {
        "sha": "1e0194e2cdfffb508da2e8c1a70570357d4044b0",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -2595,7 +2595,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n     // Check the merkle root.\n     if (fCheckMerkleRoot) {\n         bool mutated;\n-        uint256 hashMerkleRoot2 = block.BuildMerkleTree(&mutated);\n+        uint256 hashMerkleRoot2 = block.ComputeMerkleRoot(&mutated);\n         if (block.hashMerkleRoot != hashMerkleRoot2)\n             return state.DoS(100, error(\"CheckBlock(): hashMerkleRoot mismatch\"),\n                              REJECT_INVALID, \"bad-txnmrklroot\", true);"
      },
      {
        "sha": "42c8bb970b9b5aa051af5b280944b9895a67f114",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -368,7 +368,7 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n     pblock->vtx[0] = txCoinbase;\n-    pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n+    pblock->hashMerkleRoot = pblock->ComputeMerkleRoot();\n }\n \n //////////////////////////////////////////////////////////////////////////////"
      },
      {
        "sha": "7a58074d2404ccf6c43bc1140847dfffb968ea51",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 37,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -15,7 +15,7 @@ uint256 CBlockHeader::GetHash() const\n     return SerializeHash(*this);\n }\n \n-uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n+uint256 CBlock::ComputeMerkleRoot(bool* fMutated) const\n {\n     /* WARNING! If you're reading this because you're learning about crypto\n        and/or designing a new system that will use merkle trees, keep in mind\n@@ -52,7 +52,7 @@ uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n        known ways of changing the transactions without affecting the merkle\n        root.\n     */\n-    vMerkleTree.clear();\n+    std::vector<uint256> vMerkleTree;\n     vMerkleTree.reserve(vtx.size() * 2 + 16); // Safe upper bound for the number of total nodes.\n     for (std::vector<CTransaction>::const_iterator it(vtx.begin()); it != vtx.end(); ++it)\n         vMerkleTree.push_back(it->GetHash());\n@@ -78,37 +78,6 @@ uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n     return (vMerkleTree.empty() ? uint256() : vMerkleTree.back());\n }\n \n-std::vector<uint256> CBlock::GetMerkleBranch(int nIndex) const\n-{\n-    if (vMerkleTree.empty())\n-        BuildMerkleTree();\n-    std::vector<uint256> vMerkleBranch;\n-    int j = 0;\n-    for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n-    {\n-        int i = std::min(nIndex^1, nSize-1);\n-        vMerkleBranch.push_back(vMerkleTree[j+i]);\n-        nIndex >>= 1;\n-        j += nSize;\n-    }\n-    return vMerkleBranch;\n-}\n-\n-uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex)\n-{\n-    if (nIndex == -1)\n-        return uint256();\n-    for (std::vector<uint256>::const_iterator it(vMerkleBranch.begin()); it != vMerkleBranch.end(); ++it)\n-    {\n-        if (nIndex & 1)\n-            hash = Hash(BEGIN(*it), END(*it), BEGIN(hash), END(hash));\n-        else\n-            hash = Hash(BEGIN(hash), END(hash), BEGIN(*it), END(*it));\n-        nIndex >>= 1;\n-    }\n-    return hash;\n-}\n-\n std::string CBlock::ToString() const\n {\n     std::stringstream s;\n@@ -123,9 +92,5 @@ std::string CBlock::ToString() const\n     {\n         s << \"  \" << vtx[i].ToString() << \"\\n\";\n     }\n-    s << \"  vMerkleTree: \";\n-    for (unsigned int i = 0; i < vMerkleTree.size(); i++)\n-        s << \" \" << vMerkleTree[i].ToString();\n-    s << \"\\n\";\n     return s.str();\n }"
      },
      {
        "sha": "7fe8c84cb7fc3e7c02c530e14d901e05376e1339",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -77,9 +77,6 @@ class CBlock : public CBlockHeader\n     // network and disk\n     std::vector<CTransaction> vtx;\n \n-    // memory only\n-    mutable std::vector<uint256> vMerkleTree;\n-\n     CBlock()\n     {\n         SetNull();\n@@ -103,7 +100,6 @@ class CBlock : public CBlockHeader\n     {\n         CBlockHeader::SetNull();\n         vtx.clear();\n-        vMerkleTree.clear();\n     }\n \n     CBlockHeader GetBlockHeader() const\n@@ -118,14 +114,12 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    // Build the in-memory merkle tree for this block and return the merkle root.\n+    // Build the merkle tree for this block and return the merkle root.\n     // If non-NULL, *mutated is set to whether mutation was detected in the merkle\n     // tree (a duplication of transactions in the block leading to an identical\n     // merkle root).\n-    uint256 BuildMerkleTree(bool* mutated = NULL) const;\n+    uint256 ComputeMerkleRoot(bool* mutated = NULL) const;\n \n-    std::vector<uint256> GetMerkleBranch(int nIndex) const;\n-    static uint256 CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex);\n     std::string ToString() const;\n };\n "
      },
      {
        "sha": "91a3a5738ef298526c762d2f85ebdf3f5ca135cc",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -87,7 +87,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         pblock->vtx[0] = CTransaction(txCoinbase);\n         if (txFirst.size() < 2)\n             txFirst.push_back(new CTransaction(pblock->vtx[0]));\n-        pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n+        pblock->hashMerkleRoot = pblock->ComputeMerkleRoot();\n         pblock->nNonce = blockinfo[i].nonce;\n         CValidationState state;\n         BOOST_CHECK(ProcessNewBlock(state, NULL, pblock, true, NULL));"
      },
      {
        "sha": "d9f3c3e467a989360cc04ac42d4c827d76354eae",
        "filename": "src/test/pmt_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/test/pmt_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/test/pmt_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pmt_tests.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -48,7 +48,7 @@ BOOST_AUTO_TEST_CASE(pmt_test1)\n         }\n \n         // calculate actual merkle root and height\n-        uint256 merkleRoot1 = block.BuildMerkleTree();\n+        uint256 merkleRoot1 = block.ComputeMerkleRoot();\n         std::vector<uint256> vTxid(nTx, uint256());\n         for (unsigned int j=0; j<nTx; j++)\n             vTxid[j] = block.vtx[j].GetHash();"
      },
      {
        "sha": "39eff3af303264e54be3ec14fd27c6b6d0d94c61",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -702,9 +702,8 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n                 wtx.hashBlock = wtxIn.hashBlock;\n                 fUpdated = true;\n             }\n-            if (wtxIn.nIndex != -1 && (wtxIn.vMerkleBranch != wtx.vMerkleBranch || wtxIn.nIndex != wtx.nIndex))\n+            if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n             {\n-                wtx.vMerkleBranch = wtxIn.vMerkleBranch;\n                 wtx.nIndex = wtxIn.nIndex;\n                 fUpdated = true;\n             }\n@@ -2812,15 +2811,11 @@ int CMerkleTx::SetMerkleBranch(const CBlock& block)\n             break;\n     if (nIndex == (int)block.vtx.size())\n     {\n-        vMerkleBranch.clear();\n         nIndex = -1;\n         LogPrintf(\"ERROR: SetMerkleBranch(): couldn't find tx in block\\n\");\n         return 0;\n     }\n \n-    // Fill in merkle branch\n-    vMerkleBranch = block.GetMerkleBranch(nIndex);\n-\n     // Is the tx in a block that's in the main chain\n     BlockMap::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n@@ -2846,14 +2841,6 @@ int CMerkleTx::GetDepthInMainChainINTERNAL(const CBlockIndex* &pindexRet) const\n     if (!pindex || !chainActive.Contains(pindex))\n         return 0;\n \n-    // Make sure the merkle branch connects to this block\n-    if (!fMerkleVerified)\n-    {\n-        if (CBlock::CheckMerkleBranch(GetHash(), vMerkleBranch, nIndex) != pindex->hashMerkleRoot)\n-            return 0;\n-        fMerkleVerified = true;\n-    }\n-\n     pindexRet = pindex;\n     return chainActive.Height() - pindex->nHeight + 1;\n }"
      },
      {
        "sha": "34e98cfb812ffab5bfbf1e3b7e3bc385d7b9bc09",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -151,13 +151,8 @@ class CMerkleTx : public CTransaction\n \n public:\n     uint256 hashBlock;\n-    std::vector<uint256> vMerkleBranch;\n     int nIndex;\n \n-    // memory only\n-    mutable bool fMerkleVerified;\n-\n-\n     CMerkleTx()\n     {\n         Init();\n@@ -172,13 +167,13 @@ class CMerkleTx : public CTransaction\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n-        fMerkleVerified = false;\n     }\n \n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        std::vector<uint256> vMerkleBranch; // For compatibility with older versions.\n         READWRITE(*(CTransaction*)this);\n         nVersion = this->nVersion;\n         READWRITE(hashBlock);"
      },
      {
        "sha": "0624e442d16b431741093c60893885f0327db775",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391dff16fe9ace90fc0f3308a5c63c453370e713/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391dff16fe9ace90fc0f3308a5c63c453370e713/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=391dff16fe9ace90fc0f3308a5c63c453370e713",
        "patch": "@@ -131,12 +131,14 @@ bool CWalletDB::EraseWatchOnly(const CScript &dest)\n bool CWalletDB::WriteBestBlock(const CBlockLocator& locator)\n {\n     nWalletDBUpdated++;\n-    return Write(std::string(\"bestblock\"), locator);\n+    Write(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n+    return Write(std::string(\"bestblock_nomerkle\"), locator);\n }\n \n bool CWalletDB::ReadBestBlock(CBlockLocator& locator)\n {\n-    return Read(std::string(\"bestblock\"), locator);\n+    if (Read(std::string(\"bestblock\"), locator) && !locator.vHave.empty()) return true;\n+    return Read(std::string(\"bestblock_nomerkle\"), locator);\n }\n \n bool CWalletDB::WriteOrderPosNext(int64_t nOrderPosNext)"
      }
    ]
  },
  {
    "sha": "3b33ec85ed00ba7e7525858e3701f9f55071c58b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjMzZWM4NWVkMDBiYTdlNzUyNTg1OGUzNzAxZjlmNTUwNzFjNThi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-08-15T21:32:38Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-09-22T16:51:08Z"
      },
      "message": "Avoid duplicate CheckBlock checks",
      "tree": {
        "sha": "ff0ec0f97d3058f8bd89edc82b78cf1706308b5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff0ec0f97d3058f8bd89edc82b78cf1706308b5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b33ec85ed00ba7e7525858e3701f9f55071c58b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b33ec85ed00ba7e7525858e3701f9f55071c58b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b33ec85ed00ba7e7525858e3701f9f55071c58b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b33ec85ed00ba7e7525858e3701f9f55071c58b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "391dff16fe9ace90fc0f3308a5c63c453370e713",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/391dff16fe9ace90fc0f3308a5c63c453370e713",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/391dff16fe9ace90fc0f3308a5c63c453370e713"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e8bc68fe648276280a8f7921d553f39448de2ad7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b33ec85ed00ba7e7525858e3701f9f55071c58b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b33ec85ed00ba7e7525858e3701f9f55071c58b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3b33ec85ed00ba7e7525858e3701f9f55071c58b",
        "patch": "@@ -2587,6 +2587,9 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n {\n     // These are checks that are independent of context.\n \n+    if (block.fChecked)\n+        return true;\n+\n     // Check that the header is valid (particularly PoW).  This is mostly\n     // redundant with the call in AcceptBlockHeader.\n     if (!CheckBlockHeader(block, state, fCheckPOW))\n@@ -2642,6 +2645,9 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n         return state.DoS(100, error(\"CheckBlock(): out-of-bounds SigOpCount\"),\n                          REJECT_INVALID, \"bad-blk-sigops\", true);\n \n+    if (fCheckPOW && fCheckMerkleRoot)\n+        block.fChecked = true;\n+\n     return true;\n }\n "
      },
      {
        "sha": "86106098f5a1d5dc51edefe2448ba9267310fee5",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b33ec85ed00ba7e7525858e3701f9f55071c58b/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b33ec85ed00ba7e7525858e3701f9f55071c58b/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=3b33ec85ed00ba7e7525858e3701f9f55071c58b",
        "patch": "@@ -77,6 +77,9 @@ class CBlock : public CBlockHeader\n     // network and disk\n     std::vector<CTransaction> vtx;\n \n+    // memory only\n+    mutable bool fChecked;\n+\n     CBlock()\n     {\n         SetNull();\n@@ -100,6 +103,7 @@ class CBlock : public CBlockHeader\n     {\n         CBlockHeader::SetNull();\n         vtx.clear();\n+        fChecked = false;\n     }\n \n     CBlockHeader GetBlockHeader() const"
      }
    ]
  },
  {
    "sha": "0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDBhMmQ2YmY5NzFlZjYzYWNlNzBjM2YzZjE4NWE5MTcxYWEyNmRl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-07T09:00:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-23T08:27:39Z"
      },
      "message": "[Qt] Raise debug window when requested\n\n* Raise the debug window when hidden behind other windows\n* Switch to the debug window when on another virtual desktop\n* Show the debug window when minimized\n\nThis change is a conceptual copy of 5ffaaba and 382e9e2",
      "tree": {
        "sha": "30362b082ccfd48d7274ec53662e581b88449d54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30362b082ccfd48d7274ec53662e581b88449d54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e59d2a80f9167031521d882394a08b02fa9d0343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e59d2a80f9167031521d882394a08b02fa9d0343",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e59d2a80f9167031521d882394a08b02fa9d0343"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "d930d15953ec0f8bd460ddcedd1b09c6a7364f2d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
        "patch": "@@ -215,11 +215,6 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n     statusBar()->addWidget(progressBar);\n     statusBar()->addPermanentWidget(frameBlocks);\n \n-    connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n-\n-    // prevents an open debug window from becoming stuck/unusable on client shutdown\n-    connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n-\n     // Install event filter to be able to catch status tip events (QEvent::StatusTip)\n     this->installEventFilter(this);\n \n@@ -352,6 +347,10 @@ void BitcoinGUI::createActions()\n     connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n     connect(showHelpMessageAction, SIGNAL(triggered()), this, SLOT(showHelpMessageClicked()));\n+    connect(openRPCConsoleAction, SIGNAL(triggered()), this, SLOT(showDebugWindow()));\n+    // prevents an open debug window from becoming stuck/unusable on client shutdown\n+    connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n+\n #ifdef ENABLE_WALLET\n     if(walletFrame)\n     {\n@@ -590,6 +589,14 @@ void BitcoinGUI::aboutClicked()\n     dlg.exec();\n }\n \n+void BitcoinGUI::showDebugWindow()\n+{\n+    rpcConsole->showNormal();\n+    rpcConsole->show();\n+    rpcConsole->raise();\n+    rpcConsole->activateWindow();\n+}\n+\n void BitcoinGUI::showHelpMessageClicked()\n {\n     helpMessageDialog->show();"
      },
      {
        "sha": "717f2bd12dff038b284fbbb695f5595f4f618f11",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
        "patch": "@@ -196,6 +196,8 @@ private Q_SLOTS:\n     void optionsClicked();\n     /** Show about dialog */\n     void aboutClicked();\n+    /** Show debug window */\n+    void showDebugWindow();\n     /** Show help message dialog */\n     void showHelpMessageClicked();\n #ifndef Q_OS_MAC"
      }
    ]
  },
  {
    "sha": "4dee609e10909dff19e06b82440c4165d512aa05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGVlNjA5ZTEwOTA5ZGZmMTllMDZiODI0NDBjNDE2NWQ1MTJhYTA1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-08-18T17:24:10Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-23T08:27:39Z"
      },
      "message": "Rename rpcconsole.ui => debugwindow.ui",
      "tree": {
        "sha": "ceeea9ce35ba4a64204cc6985e3ac732e2a89f48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ceeea9ce35ba4a64204cc6985e3ac732e2a89f48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4dee609e10909dff19e06b82440c4165d512aa05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dee609e10909dff19e06b82440c4165d512aa05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4dee609e10909dff19e06b82440c4165d512aa05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dee609e10909dff19e06b82440c4165d512aa05/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d0a2d6bf971ef63ace70c3f3f185a9171aa26de"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dee609e10909dff19e06b82440c4165d512aa05/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dee609e10909dff19e06b82440c4165d512aa05/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=4dee609e10909dff19e06b82440c4165d512aa05",
        "patch": "@@ -11,7 +11,7 @@ FORMS += \\\n     ../src/qt/forms/overviewpage.ui \\\n     ../src/qt/forms/receivecoinsdialog.ui \\\n     ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/debugwindow.ui \\\n     ../src/qt/forms/sendcoinsdialog.ui \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\"
      },
      {
        "sha": "3330ed2890957eb85187d4ec69c215c344ae4a83",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dee609e10909dff19e06b82440c4165d512aa05/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dee609e10909dff19e06b82440c4165d512aa05/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=4dee609e10909dff19e06b82440c4165d512aa05",
        "patch": "@@ -87,7 +87,7 @@ QT_FORMS_UI = \\\n   qt/forms/overviewpage.ui \\\n   qt/forms/receivecoinsdialog.ui \\\n   qt/forms/receiverequestdialog.ui \\\n-  qt/forms/rpcconsole.ui \\\n+  qt/forms/debugwindow.ui \\\n   qt/forms/sendcoinsdialog.ui \\\n   qt/forms/sendcoinsentry.ui \\\n   qt/forms/signverifymessagedialog.ui \\"
      },
      {
        "sha": "4117da57f523d0812f1f04d61a133f739c0e0c15",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dee609e10909dff19e06b82440c4165d512aa05/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dee609e10909dff19e06b82440c4165d512aa05/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=4dee609e10909dff19e06b82440c4165d512aa05",
        "previous_filename": "src/qt/forms/rpcconsole.ui"
      },
      {
        "sha": "72a3023c9aa88b046f7c8b4b2adbe70787db40e5",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dee609e10909dff19e06b82440c4165d512aa05/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dee609e10909dff19e06b82440c4165d512aa05/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=4dee609e10909dff19e06b82440c4165d512aa05",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcconsole.h\"\n-#include \"ui_rpcconsole.h\"\n+#include \"ui_debugwindow.h\"\n \n #include \"bantablemodel.h\"\n #include \"clientmodel.h\""
      }
    ]
  },
  {
    "sha": "6264e5b378dae3852a1c1e84e5c519a3c581c941",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjY0ZTViMzc4ZGFlMzg1MmExYzFlODRlNWM1MTlhM2M1ODFjOTQx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T10:04:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T10:05:05Z"
      },
      "message": "Merge pull request #6646\n\n6ecaec3 [Trivial] [logging] Rm extraneous cleansubver in serveral debug messages. (Gregory Maxwell)",
      "tree": {
        "sha": "0618b30bae044ff65bc35f39d389cf3ca6c9ccd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0618b30bae044ff65bc35f39d389cf3ca6c9ccd0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6264e5b378dae3852a1c1e84e5c519a3c581c941",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAnlRAAoJEHSBCwEjRsmmx0EH/RRvctt4nArRuwM6Rx98kRjN\nXNrqaOw/Jg9f30YPtVQYXsaVYBCGfW9xY2st5DJG/UHBpdMAiqa1IBGs26kQigut\n7dWVx8C15EGFYhEQZNT9YPyom1GLAh9/D1t0t2PQVyE5JiQRRPUt5or8vhfDKsnR\nIx5jcK8oinKkEQ3rhCNgrP6CNxxGUdbW+KLblJmvWGnTuUAbtVMoh9/Ro7J5GLtC\n6b2Xw7sqalTY0FT92kx1PAmNfdDrYHSuvI2hrdizCykZnCFLwL7kzWTEPmf+DmwH\nTxwTSwsk4m4GOne3k2J9xXZwoV5VI9oW4ycimPnW66iEjHfy85IOnfGhmDCxwMA=\n=9GN8\n-----END PGP SIGNATURE-----",
        "payload": "tree 0618b30bae044ff65bc35f39d389cf3ca6c9ccd0\nparent e59d2a80f9167031521d882394a08b02fa9d0343\nparent 6ecaec395cf747349d59396d71a83288cd55c218\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443002685 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443002705 +0200\n\nMerge pull request #6646\n\n6ecaec3 [Trivial] [logging] Rm extraneous cleansubver in serveral debug messages. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6264e5b378dae3852a1c1e84e5c519a3c581c941",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6264e5b378dae3852a1c1e84e5c519a3c581c941",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6264e5b378dae3852a1c1e84e5c519a3c581c941/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e59d2a80f9167031521d882394a08b02fa9d0343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e59d2a80f9167031521d882394a08b02fa9d0343",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e59d2a80f9167031521d882394a08b02fa9d0343"
      },
      {
        "sha": "6ecaec395cf747349d59396d71a83288cd55c218",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ecaec395cf747349d59396d71a83288cd55c218",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ecaec395cf747349d59396d71a83288cd55c218"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4a84714ebcb84a97d795cd49363589f2703a51cb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6264e5b378dae3852a1c1e84e5c519a3c581c941/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6264e5b378dae3852a1c1e84e5c519a3c581c941/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=6264e5b378dae3852a1c1e84e5c519a3c581c941",
        "patch": "@@ -4276,8 +4276,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             RelayTransaction(tx);\n             vWorkQueue.push_back(inv.hash);\n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d %s: accepted %s (poolsz %u)\\n\",\n-                pfrom->id, pfrom->cleanSubVer,\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u)\\n\",\n+                pfrom->id,\n                 tx.GetHash().ToString(),\n                 mempool.size());\n \n@@ -4366,8 +4366,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n-            LogPrint(\"mempoolrej\", \"%s from peer=%d %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n-                pfrom->id, pfrom->cleanSubVer,\n+            LogPrint(\"mempoolrej\", \"%s from peer=%d was not accepted: %s\\n\", tx.GetHash().ToString(),\n+                pfrom->id,\n                 FormatStateMessage(state));\n             if (state.GetRejectCode() < REJECT_INTERNAL) // Never send AcceptToMemoryPool's internal codes over P2P\n                 pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n@@ -4568,9 +4568,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong peer=%d %s: %s, %x expected, %x received, %u bytes\\n\",\n+            LogPrint(\"net\", \"pong peer=%d: %s, %x expected, %x received, %u bytes\\n\",\n                 pfrom->id,\n-                pfrom->cleanSubVer,\n                 sProblem,\n                 pfrom->nPingNonceSent,\n                 nonce,"
      }
    ]
  },
  {
    "sha": "43edd515e544b46ca548933135326fbe4a4b4e5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2VkZDUxNWU1NDRiNDZjYTU0ODkzMzEzNTMyNmZiZTRhNGI0ZTVh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-23T10:06:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-23T10:06:00Z"
      },
      "message": "SanitizeString: Allow hypen char",
      "tree": {
        "sha": "deed6fc8e6db0a42fe44f1643e2d508c62088618",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/deed6fc8e6db0a42fe44f1643e2d508c62088618"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43edd515e544b46ca548933135326fbe4a4b4e5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43edd515e544b46ca548933135326fbe4a4b4e5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43edd515e544b46ca548933135326fbe4a4b4e5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43edd515e544b46ca548933135326fbe4a4b4e5a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e59d2a80f9167031521d882394a08b02fa9d0343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e59d2a80f9167031521d882394a08b02fa9d0343",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e59d2a80f9167031521d882394a08b02fa9d0343"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "997dc31931f7dc716ccb14936c42abcb3136e1f4",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43edd515e544b46ca548933135326fbe4a4b4e5a/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43edd515e544b46ca548933135326fbe4a4b4e5a/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=43edd515e544b46ca548933135326fbe4a4b4e5a",
        "patch": "@@ -413,10 +413,10 @@ BOOST_AUTO_TEST_CASE(test_FormatSubVersion)\n     comments.push_back(std::string(\"comment1\"));\n     std::vector<std::string> comments2;\n     comments2.push_back(std::string(\"comment1\"));\n-    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@; !\\\"#$%&'()*+-/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n+    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@-; !\\\"#$%&'()*+/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, std::vector<std::string>()),std::string(\"/Test:0.9.99/\"));\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments),std::string(\"/Test:0.9.99(comment1)/\"));\n-    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; Comment2; .,_?@; )/\"));\n+    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; Comment2; .,_?@-; )/\"));\n }\n \n BOOST_AUTO_TEST_CASE(test_ParseFixedPoint)"
      },
      {
        "sha": "c5a2b5cdbb780e2f1c9df8a25280de971cce2ae8",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43edd515e544b46ca548933135326fbe4a4b4e5a/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43edd515e544b46ca548933135326fbe4a4b4e5a/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=43edd515e544b46ca548933135326fbe4a4b4e5a",
        "patch": "@@ -18,8 +18,8 @@ static const string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO\n \n static const string SAFE_CHARS[] =\n {\n-    CHARS_ALPHA_NUM + \" .,;_/:?@()\", // SAFE_CHARS_DEFAULT\n-    CHARS_ALPHA_NUM + \" .,;_?@\" // SAFE_CHARS_UA_COMMENT\n+    CHARS_ALPHA_NUM + \" .,;-_/:?@()\", // SAFE_CHARS_DEFAULT\n+    CHARS_ALPHA_NUM + \" .,;-_?@\" // SAFE_CHARS_UA_COMMENT\n };\n \n string SanitizeString(const string& str, int rule)"
      }
    ]
  },
  {
    "sha": "999c8be81a00146cc0ee0f6fb49104e906e08835",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTljOGJlODFhMDAxNDZjYzBlZTBmNmZiNDkxMDRlOTA2ZTA4ODM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T12:04:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T12:04:08Z"
      },
      "message": "Merge pull request #6148\n\nae6f957 Enable block relay when pruning (Suhas Daftuar)\n0da6ae2 Do not inv old or missing blocks when pruning (Suhas Daftuar)",
      "tree": {
        "sha": "0775a8dd217e9fcd2371508b37738cd5e149119e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0775a8dd217e9fcd2371508b37738cd5e149119e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/999c8be81a00146cc0ee0f6fb49104e906e08835",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWApU4AAoJEHSBCwEjRsmmQm8H/iFydd5bEbASRr+CADjFReKR\ncu41Jy/MQvSARXhbUagTf4kbOvpkU61mVc0DnafngjyokupWZiSePThYptA6a/0I\nLuJ4A3d7cn0nLbAhk0qBtp8i0tNWBf9zQ2YTn96obNaSsu2/MOmgf0mKoSp01eN1\n+I5MPepQJtSxdBSPEoRPcDh6hYi+Xr52S829a+ZqTfQYNKgfjFf5OjIQV1dJVGO+\nAzx3+mp5Vyry/DGn94sj/pMe87XDRwd1B9wLoPnxpVTSQ1ew8xw2GNOa4H72MyBW\nK0GwnKXP12IM8Mmin45PIIZlVKzeWmp9GXL8NcQ1drRD7DdvYK7NWuvBmECQYj4=\n=Gk9k\n-----END PGP SIGNATURE-----",
        "payload": "tree 0775a8dd217e9fcd2371508b37738cd5e149119e\nparent 6264e5b378dae3852a1c1e84e5c519a3c581c941\nparent ae6f957a628efeeae47b8a2deee595c2ac5e7640\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443009847 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443009848 +0200\n\nMerge pull request #6148\n\nae6f957 Enable block relay when pruning (Suhas Daftuar)\n0da6ae2 Do not inv old or missing blocks when pruning (Suhas Daftuar)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999c8be81a00146cc0ee0f6fb49104e906e08835",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/999c8be81a00146cc0ee0f6fb49104e906e08835",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999c8be81a00146cc0ee0f6fb49104e906e08835/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6264e5b378dae3852a1c1e84e5c519a3c581c941",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6264e5b378dae3852a1c1e84e5c519a3c581c941",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6264e5b378dae3852a1c1e84e5c519a3c581c941"
      },
      {
        "sha": "ae6f957a628efeeae47b8a2deee595c2ac5e7640",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6f957a628efeeae47b8a2deee595c2ac5e7640",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6f957a628efeeae47b8a2deee595c2ac5e7640"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e27b8444b4cd58efbdea3499d7a6c6b543e20980",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999c8be81a00146cc0ee0f6fb49104e906e08835/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999c8be81a00146cc0ee0f6fb49104e906e08835/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=999c8be81a00146cc0ee0f6fb49104e906e08835",
        "patch": "@@ -2315,9 +2315,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n             int nBlockEstimate = 0;\n             if (fCheckpointsEnabled)\n                 nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints());\n-            // Don't relay blocks if pruning -- could cause a peer to try to download, resulting\n-            // in a stalled download if the block file is pruned before the request.\n-            if (nLocalServices & NODE_NETWORK) {\n+            {\n                 LOCK(cs_vNodes);\n                 BOOST_FOREACH(CNode* pnode, vNodes)\n                     if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n@@ -4198,6 +4196,14 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 LogPrint(\"net\", \"  getblocks stopping at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }\n+            // If pruning, don't inv blocks unless we have on disk and are likely to still have\n+            // for some reasonable time window (1 hour) that block relay might require.\n+            const int nPrunedBlocksLikelyToHave = MIN_BLOCKS_TO_KEEP - 3600 / chainparams.GetConsensus().nPowTargetSpacing;\n+            if (fPruneMode && (!(pindex->nStatus & BLOCK_HAVE_DATA) || pindex->nHeight <= chainActive.Tip()->nHeight - nPrunedBlocksLikelyToHave))\n+            {\n+                LogPrint(\"net\", \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n+                break;\n+            }\n             pfrom->PushInventory(CInv(MSG_BLOCK, pindex->GetBlockHash()));\n             if (--nLimit <= 0)\n             {"
      }
    ]
  },
  {
    "sha": "4939eabb758fefb9fe022ddd38c4f61d15143741",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTM5ZWFiYjc1OGZlZmI5ZmUwMjJkZGQzOGM0ZjYxZDE1MTQzNzQx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T14:51:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T14:53:40Z"
      },
      "message": "Merge pull request #6688\n\n131c23d Fix locking in GetTransaction. (Alex Morcos)",
      "tree": {
        "sha": "8284203bbb6968bbd2b6fcae1c7a52e178072f59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8284203bbb6968bbd2b6fcae1c7a52e178072f59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4939eabb758fefb9fe022ddd38c4f61d15143741",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWArz0AAoJEHSBCwEjRsmmAyUH/1iY7nTohpX1/ef5BuIJgKYM\nitDrO6Sme7ectRxRxBL4y3YIU94jH79i09qzT0GvY8MS/sCuHGm3dpErAG0Xa+LL\n0uBNL0foku/B2rzXgHCeG8rnR8YHFtozQivXlmFRyJ4uvi+rZeatchuMp/Tlt6nS\nm19bPcN1ejEaP3wFOxTLKFY/mft3ANqcMkmBxHnQjj45fO0tf9tCNedK1t/tlUhK\nJx1K71TUSYksyIWJvraZvoSvyaHfnr1Y7FoJKoCDWZmDIzSJ+yBdis9aBsHCeQOH\nWYALwechaZcJUaT3A5//SlXZM4ERNzWfqbYOw/3WUBeUnkT2nwFlqSYyTt+27k4=\n=dOe7\n-----END PGP SIGNATURE-----",
        "payload": "tree 8284203bbb6968bbd2b6fcae1c7a52e178072f59\nparent 999c8be81a00146cc0ee0f6fb49104e906e08835\nparent 131c23d02733c547975844226c1fe0dd4c87211c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443019861 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443020020 +0200\n\nMerge pull request #6688\n\n131c23d Fix locking in GetTransaction. (Alex Morcos)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4939eabb758fefb9fe022ddd38c4f61d15143741",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4939eabb758fefb9fe022ddd38c4f61d15143741",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4939eabb758fefb9fe022ddd38c4f61d15143741/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "999c8be81a00146cc0ee0f6fb49104e906e08835",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999c8be81a00146cc0ee0f6fb49104e906e08835",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/999c8be81a00146cc0ee0f6fb49104e906e08835"
      },
      {
        "sha": "131c23d02733c547975844226c1fe0dd4c87211c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c23d02733c547975844226c1fe0dd4c87211c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/131c23d02733c547975844226c1fe0dd4c87211c"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 33,
      "deletions": 35
    },
    "files": [
      {
        "sha": "21161ad24f82841c9d8efe68fc3248a3f4101fa8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 35,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4939eabb758fefb9fe022ddd38c4f61d15143741/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4939eabb758fefb9fe022ddd38c4f61d15143741/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4939eabb758fefb9fe022ddd38c4f61d15143741",
        "patch": "@@ -965,47 +965,45 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow)\n {\n     CBlockIndex *pindexSlow = NULL;\n+\n+    LOCK(cs_main);\n+\n+    if (mempool.lookup(hash, txOut))\n     {\n-        LOCK(cs_main);\n-        {\n-            if (mempool.lookup(hash, txOut))\n-            {\n-                return true;\n-            }\n-        }\n+        return true;\n+    }\n \n-        if (fTxIndex) {\n-            CDiskTxPos postx;\n-            if (pblocktree->ReadTxIndex(hash, postx)) {\n-                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-                if (file.IsNull())\n-                    return error(\"%s: OpenBlockFile failed\", __func__);\n-                CBlockHeader header;\n-                try {\n-                    file >> header;\n-                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                    file >> txOut;\n-                } catch (const std::exception& e) {\n-                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n-                }\n-                hashBlock = header.GetHash();\n-                if (txOut.GetHash() != hash)\n-                    return error(\"%s: txid mismatch\", __func__);\n-                return true;\n+    if (fTxIndex) {\n+        CDiskTxPos postx;\n+        if (pblocktree->ReadTxIndex(hash, postx)) {\n+            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+            if (file.IsNull())\n+                return error(\"%s: OpenBlockFile failed\", __func__);\n+            CBlockHeader header;\n+            try {\n+                file >> header;\n+                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                file >> txOut;\n+            } catch (const std::exception& e) {\n+                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n             }\n+            hashBlock = header.GetHash();\n+            if (txOut.GetHash() != hash)\n+                return error(\"%s: txid mismatch\", __func__);\n+            return true;\n         }\n+    }\n \n-        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-            int nHeight = -1;\n-            {\n-                CCoinsViewCache &view = *pcoinsTip;\n-                const CCoins* coins = view.AccessCoins(hash);\n-                if (coins)\n-                    nHeight = coins->nHeight;\n-            }\n-            if (nHeight > 0)\n-                pindexSlow = chainActive[nHeight];\n+    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n+        int nHeight = -1;\n+        {\n+            CCoinsViewCache &view = *pcoinsTip;\n+            const CCoins* coins = view.AccessCoins(hash);\n+            if (coins)\n+                nHeight = coins->nHeight;\n         }\n+        if (nHeight > 0)\n+            pindexSlow = chainActive[nHeight];\n     }\n \n     if (pindexSlow) {"
      }
    ]
  },
  {
    "sha": "4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGJkNDNlZDBhMzBkMDhlZDdkOGNhM2FhMjliNmU5MzBmZmExM2Yx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T14:59:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T15:02:04Z"
      },
      "message": "Merge pull request #6645\n\n77c6072 Enable wallet key imports without rescan in pruned mode. (Gregory Maxwell)",
      "tree": {
        "sha": "b4c031da00e21241b6585b1f510cf2024e6a2a8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4c031da00e21241b6585b1f510cf2024e6a2a8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAr7sAAoJEHSBCwEjRsmmywQIAImsLgAPMmU9KXefiHYzuKKu\nWPauE9MtwLT7EofPapqVpDrKSDOEM6Xip7wGMH1xF809bMJWoPal7BFI8+fAeevy\nBoLcQDJzHeCMeQ2tTzlyrRVlH15VYYBP3719/doWnYESPJeeYWUTDqnJt1hwUapF\nHXXPWZRtqwlD0K8cQqcRPRLEpGt1FgqqP2W4ymqes++RSf3wc+zlu1WoY9GvzWZe\nhTsBw7FPfj4s3znZk46FkdCmCzSMmdMyrXFfVlipCexxmaWqjHEZ5Hp1yW3dq0rj\noqzRMVtiTpk4//EBwg9V0XPfftOYON95obVzNatKBwu7sKEkXF20kTtRg4kGjYs=\n=wr6T\n-----END PGP SIGNATURE-----",
        "payload": "tree b4c031da00e21241b6585b1f510cf2024e6a2a8f\nparent 4939eabb758fefb9fe022ddd38c4f61d15143741\nparent 77c60724733a98af5248fb95625046a5a3f82dc3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443020391 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443020524 +0200\n\nMerge pull request #6645\n\n77c6072 Enable wallet key imports without rescan in pruned mode. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4939eabb758fefb9fe022ddd38c4f61d15143741",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4939eabb758fefb9fe022ddd38c4f61d15143741",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4939eabb758fefb9fe022ddd38c4f61d15143741"
      },
      {
        "sha": "77c60724733a98af5248fb95625046a5a3f82dc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c60724733a98af5248fb95625046a5a3f82dc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77c60724733a98af5248fb95625046a5a3f82dc3"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "7e22faac37df10724b32c5849fd058a94c3e6b19",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
        "patch": "@@ -97,8 +97,6 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing keys is disabled in pruned mode\");\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n@@ -114,6 +112,9 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     CBitcoinSecret vchSecret;\n     bool fGood = vchSecret.SetString(strSecret);\n \n@@ -201,8 +202,6 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importaddress\", \"\\\"myscript\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing addresses is disabled in pruned mode\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -213,6 +212,9 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     // Whether to import a p2sh version, too\n     bool fP2SH = false;\n     if (params.size() > 3)\n@@ -264,8 +266,6 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importpubkey\", \"\\\"mypubkey\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing public keys is disabled in pruned mode\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -276,6 +276,9 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     if (!IsHex(params[0].get_str()))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey must be a hex string\");\n     std::vector<unsigned char> data(ParseHex(params[0].get_str()));"
      }
    ]
  },
  {
    "sha": "e04b2fa9bab15678a12805e2a92c76be42f38349",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDRiMmZhOWJhYjE1Njc4YTEyODA1ZTJhOTJjNzZiZTQyZjM4MzQ5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T15:44:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T15:45:10Z"
      },
      "message": "Merge pull request #6653\n\n4dee609 Rename rpcconsole.ui => debugwindow.ui (MarcoFalke)\n0d0a2d6 [Qt] Raise debug window when requested (MarcoFalke)",
      "tree": {
        "sha": "65268322bcded33cfdd5248b2ee61fdd5791c9a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65268322bcded33cfdd5248b2ee61fdd5791c9a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e04b2fa9bab15678a12805e2a92c76be42f38349",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAskGAAoJEHSBCwEjRsmmZUsH/jltTx2vwBPb29ylR91y6keI\nt64+TzFNhtJ48lDnu9jeioypsgikPVETAhBdRHaHBaTESLIkKN6qnG28F7uzP8fO\nUd6T4EwuVw7gvMG2VwOsUvKRRM1s+1zWqbBysO0aVO2S/JvI5UZGQOUBjEop3O6F\naHIVVMZvnM2lZrWW75ze1GArJ27v3jSLyp4lc3w+e8SX7r1bomIeVJFdcApl/Xt6\nAD/xb71ojLpyZbu0tZHlSusxUu4yilyY1puLBLcJYtx3NrXmYiMOvUyUA6yyPLF5\nGbJ2y+xthh+EM13OZ8kU/fXMFd0WG5w9z9dKmOXv21iJuSPoKaYwPr7CrXOHoA0=\n=oQxG\n-----END PGP SIGNATURE-----",
        "payload": "tree 65268322bcded33cfdd5248b2ee61fdd5791c9a5\nparent 4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1\nparent 4dee609e10909dff19e06b82440c4165d512aa05\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443023098 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443023110 +0200\n\nMerge pull request #6653\n\n4dee609 Rename rpcconsole.ui => debugwindow.ui (MarcoFalke)\n0d0a2d6 [Qt] Raise debug window when requested (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04b2fa9bab15678a12805e2a92c76be42f38349",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e04b2fa9bab15678a12805e2a92c76be42f38349",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04b2fa9bab15678a12805e2a92c76be42f38349/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4dbd43ed0a30d08ed7d8ca3aa29b6e930ffa13f1"
      },
      {
        "sha": "4dee609e10909dff19e06b82440c4165d512aa05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dee609e10909dff19e06b82440c4165d512aa05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4dee609e10909dff19e06b82440c4165d512aa05"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b2fa9bab15678a12805e2a92c76be42f38349/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b2fa9bab15678a12805e2a92c76be42f38349/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=e04b2fa9bab15678a12805e2a92c76be42f38349",
        "patch": "@@ -11,7 +11,7 @@ FORMS += \\\n     ../src/qt/forms/overviewpage.ui \\\n     ../src/qt/forms/receivecoinsdialog.ui \\\n     ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/debugwindow.ui \\\n     ../src/qt/forms/sendcoinsdialog.ui \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\"
      },
      {
        "sha": "3330ed2890957eb85187d4ec69c215c344ae4a83",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b2fa9bab15678a12805e2a92c76be42f38349/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b2fa9bab15678a12805e2a92c76be42f38349/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e04b2fa9bab15678a12805e2a92c76be42f38349",
        "patch": "@@ -87,7 +87,7 @@ QT_FORMS_UI = \\\n   qt/forms/overviewpage.ui \\\n   qt/forms/receivecoinsdialog.ui \\\n   qt/forms/receiverequestdialog.ui \\\n-  qt/forms/rpcconsole.ui \\\n+  qt/forms/debugwindow.ui \\\n   qt/forms/sendcoinsdialog.ui \\\n   qt/forms/sendcoinsentry.ui \\\n   qt/forms/signverifymessagedialog.ui \\"
      },
      {
        "sha": "d930d15953ec0f8bd460ddcedd1b09c6a7364f2d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=e04b2fa9bab15678a12805e2a92c76be42f38349",
        "patch": "@@ -215,11 +215,6 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n     statusBar()->addWidget(progressBar);\n     statusBar()->addPermanentWidget(frameBlocks);\n \n-    connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n-\n-    // prevents an open debug window from becoming stuck/unusable on client shutdown\n-    connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n-\n     // Install event filter to be able to catch status tip events (QEvent::StatusTip)\n     this->installEventFilter(this);\n \n@@ -352,6 +347,10 @@ void BitcoinGUI::createActions()\n     connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n     connect(showHelpMessageAction, SIGNAL(triggered()), this, SLOT(showHelpMessageClicked()));\n+    connect(openRPCConsoleAction, SIGNAL(triggered()), this, SLOT(showDebugWindow()));\n+    // prevents an open debug window from becoming stuck/unusable on client shutdown\n+    connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n+\n #ifdef ENABLE_WALLET\n     if(walletFrame)\n     {\n@@ -590,6 +589,14 @@ void BitcoinGUI::aboutClicked()\n     dlg.exec();\n }\n \n+void BitcoinGUI::showDebugWindow()\n+{\n+    rpcConsole->showNormal();\n+    rpcConsole->show();\n+    rpcConsole->raise();\n+    rpcConsole->activateWindow();\n+}\n+\n void BitcoinGUI::showHelpMessageClicked()\n {\n     helpMessageDialog->show();"
      },
      {
        "sha": "717f2bd12dff038b284fbbb695f5595f4f618f11",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=e04b2fa9bab15678a12805e2a92c76be42f38349",
        "patch": "@@ -196,6 +196,8 @@ private Q_SLOTS:\n     void optionsClicked();\n     /** Show about dialog */\n     void aboutClicked();\n+    /** Show debug window */\n+    void showDebugWindow();\n     /** Show help message dialog */\n     void showHelpMessageClicked();\n #ifndef Q_OS_MAC"
      },
      {
        "sha": "4117da57f523d0812f1f04d61a133f739c0e0c15",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=e04b2fa9bab15678a12805e2a92c76be42f38349",
        "previous_filename": "src/qt/forms/rpcconsole.ui"
      },
      {
        "sha": "72a3023c9aa88b046f7c8b4b2adbe70787db40e5",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b2fa9bab15678a12805e2a92c76be42f38349/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=e04b2fa9bab15678a12805e2a92c76be42f38349",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcconsole.h\"\n-#include \"ui_rpcconsole.h\"\n+#include \"ui_debugwindow.h\"\n \n #include \"bantablemodel.h\"\n #include \"clientmodel.h\""
      }
    ]
  },
  {
    "sha": "5b77244c60f3137647fed1c9510965d48992ccbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Yjc3MjQ0YzYwZjMxMzc2NDdmZWQxYzk1MTA5NjVkNDg5OTJjY2Jl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T17:34:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-23T17:37:51Z"
      },
      "message": "Merge pull request #6550\n\n3b33ec8 Avoid duplicate CheckBlock checks (Pieter Wuille)\n391dff1 Do not store Merkle branches in the wallet. (Pieter Wuille)",
      "tree": {
        "sha": "743e4e2151f1e970ca9b44e8f39e57456ec80d7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/743e4e2151f1e970ca9b44e8f39e57456ec80d7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b77244c60f3137647fed1c9510965d48992ccbe",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWAuNvAAoJEHSBCwEjRsmmTjUIAIsfK1sK22g4EXhVbylMep8B\niyB1HZWLeWxKV1ESv6h1eV/4cC3cITayiv6xqbHdQZojjLp+Pn/TyGrAnjHEyax9\nNkZJruWL/NSucDgJ9XJoc+qyJ9YW39zz42CEDq/8H+pY7FSWMqZQ797LhJSsDE2G\nB0b65gPzYL5xFkNEKWqnLn42UGaLuPaOxKWxgDojc6StQue6Y36CuJoBbiahfHQY\n2tlk4nzrOEL6s5kIL5dQ2SsiPzhCp5/egeqPT5l/WEVcztfhBBKTtYhcRxYB+0m1\nJ8bv8g5LmqEb193LF895LeVryV983T8Mvi9BjWUMh4BFgRTu2aN4xdN6nlWlmc0=\n=EKhu\n-----END PGP SIGNATURE-----",
        "payload": "tree 743e4e2151f1e970ca9b44e8f39e57456ec80d7b\nparent e04b2fa9bab15678a12805e2a92c76be42f38349\nparent 3b33ec85ed00ba7e7525858e3701f9f55071c58b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443029672 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443029871 +0200\n\nMerge pull request #6550\n\n3b33ec8 Avoid duplicate CheckBlock checks (Pieter Wuille)\n391dff1 Do not store Merkle branches in the wallet. (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b77244c60f3137647fed1c9510965d48992ccbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b77244c60f3137647fed1c9510965d48992ccbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b77244c60f3137647fed1c9510965d48992ccbe/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e04b2fa9bab15678a12805e2a92c76be42f38349",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04b2fa9bab15678a12805e2a92c76be42f38349",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e04b2fa9bab15678a12805e2a92c76be42f38349"
      },
      {
        "sha": "3b33ec85ed00ba7e7525858e3701f9f55071c58b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b33ec85ed00ba7e7525858e3701f9f55071c58b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b33ec85ed00ba7e7525858e3701f9f55071c58b"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 33,
      "deletions": 71
    },
    "files": [
      {
        "sha": "bef9af60ef00d14e7356cde43b9da3d8fe467032",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -105,6 +105,15 @@ In this version, it is only enforced for peers that send protocol versions\n removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n service bit for nodes that report versions newer than 70011.\n \n+Merkle branches removed from wallet\n+-----------------------------------\n+\n+Previously, every wallet transaction stored a Merkle branch to prove its\n+presence in blocks. This wasn't being used for more than an expensive\n+sanity check. Since 0.12, these are no longer stored. When loading a\n+0.12 wallet into an older version, it will automatically rescan to avoid\n+failed checks.\n+\n 0.12.0 Change log\n =================\n "
      },
      {
        "sha": "15b86cdda639de310ede720eeb535330679114ea",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -31,7 +31,7 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     genesis.nVersion = nVersion;\n     genesis.vtx.push_back(txNew);\n     genesis.hashPrevBlock.SetNull();\n-    genesis.hashMerkleRoot = genesis.BuildMerkleTree();\n+    genesis.hashMerkleRoot = genesis.ComputeMerkleRoot();\n     return genesis;\n }\n "
      },
      {
        "sha": "a05f59ee0cd9c1db286639c685095a418c12ff43",
        "filename": "src/core_memusage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/core_memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/core_memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_memusage.h?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -48,7 +48,7 @@ static inline size_t RecursiveDynamicUsage(const CMutableTransaction& tx) {\n }\n \n static inline size_t RecursiveDynamicUsage(const CBlock& block) {\n-    size_t mem = memusage::DynamicUsage(block.vtx) + memusage::DynamicUsage(block.vMerkleTree);\n+    size_t mem = memusage::DynamicUsage(block.vtx);\n     for (std::vector<CTransaction>::const_iterator it = block.vtx.begin(); it != block.vtx.end(); it++) {\n         mem += RecursiveDynamicUsage(*it);\n     }"
      },
      {
        "sha": "1df4c9fa3633ee7e2b7968954d987f800d44747a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -2583,6 +2583,9 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n {\n     // These are checks that are independent of context.\n \n+    if (block.fChecked)\n+        return true;\n+\n     // Check that the header is valid (particularly PoW).  This is mostly\n     // redundant with the call in AcceptBlockHeader.\n     if (!CheckBlockHeader(block, state, fCheckPOW))\n@@ -2591,7 +2594,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n     // Check the merkle root.\n     if (fCheckMerkleRoot) {\n         bool mutated;\n-        uint256 hashMerkleRoot2 = block.BuildMerkleTree(&mutated);\n+        uint256 hashMerkleRoot2 = block.ComputeMerkleRoot(&mutated);\n         if (block.hashMerkleRoot != hashMerkleRoot2)\n             return state.DoS(100, error(\"CheckBlock(): hashMerkleRoot mismatch\"),\n                              REJECT_INVALID, \"bad-txnmrklroot\", true);\n@@ -2638,6 +2641,9 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n         return state.DoS(100, error(\"CheckBlock(): out-of-bounds SigOpCount\"),\n                          REJECT_INVALID, \"bad-blk-sigops\", true);\n \n+    if (fCheckPOW && fCheckMerkleRoot)\n+        block.fChecked = true;\n+\n     return true;\n }\n "
      },
      {
        "sha": "42c8bb970b9b5aa051af5b280944b9895a67f114",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -368,7 +368,7 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n     pblock->vtx[0] = txCoinbase;\n-    pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n+    pblock->hashMerkleRoot = pblock->ComputeMerkleRoot();\n }\n \n //////////////////////////////////////////////////////////////////////////////"
      },
      {
        "sha": "7a58074d2404ccf6c43bc1140847dfffb968ea51",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 37,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -15,7 +15,7 @@ uint256 CBlockHeader::GetHash() const\n     return SerializeHash(*this);\n }\n \n-uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n+uint256 CBlock::ComputeMerkleRoot(bool* fMutated) const\n {\n     /* WARNING! If you're reading this because you're learning about crypto\n        and/or designing a new system that will use merkle trees, keep in mind\n@@ -52,7 +52,7 @@ uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n        known ways of changing the transactions without affecting the merkle\n        root.\n     */\n-    vMerkleTree.clear();\n+    std::vector<uint256> vMerkleTree;\n     vMerkleTree.reserve(vtx.size() * 2 + 16); // Safe upper bound for the number of total nodes.\n     for (std::vector<CTransaction>::const_iterator it(vtx.begin()); it != vtx.end(); ++it)\n         vMerkleTree.push_back(it->GetHash());\n@@ -78,37 +78,6 @@ uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n     return (vMerkleTree.empty() ? uint256() : vMerkleTree.back());\n }\n \n-std::vector<uint256> CBlock::GetMerkleBranch(int nIndex) const\n-{\n-    if (vMerkleTree.empty())\n-        BuildMerkleTree();\n-    std::vector<uint256> vMerkleBranch;\n-    int j = 0;\n-    for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n-    {\n-        int i = std::min(nIndex^1, nSize-1);\n-        vMerkleBranch.push_back(vMerkleTree[j+i]);\n-        nIndex >>= 1;\n-        j += nSize;\n-    }\n-    return vMerkleBranch;\n-}\n-\n-uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex)\n-{\n-    if (nIndex == -1)\n-        return uint256();\n-    for (std::vector<uint256>::const_iterator it(vMerkleBranch.begin()); it != vMerkleBranch.end(); ++it)\n-    {\n-        if (nIndex & 1)\n-            hash = Hash(BEGIN(*it), END(*it), BEGIN(hash), END(hash));\n-        else\n-            hash = Hash(BEGIN(hash), END(hash), BEGIN(*it), END(*it));\n-        nIndex >>= 1;\n-    }\n-    return hash;\n-}\n-\n std::string CBlock::ToString() const\n {\n     std::stringstream s;\n@@ -123,9 +92,5 @@ std::string CBlock::ToString() const\n     {\n         s << \"  \" << vtx[i].ToString() << \"\\n\";\n     }\n-    s << \"  vMerkleTree: \";\n-    for (unsigned int i = 0; i < vMerkleTree.size(); i++)\n-        s << \" \" << vMerkleTree[i].ToString();\n-    s << \"\\n\";\n     return s.str();\n }"
      },
      {
        "sha": "86106098f5a1d5dc51edefe2448ba9267310fee5",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -78,7 +78,7 @@ class CBlock : public CBlockHeader\n     std::vector<CTransaction> vtx;\n \n     // memory only\n-    mutable std::vector<uint256> vMerkleTree;\n+    mutable bool fChecked;\n \n     CBlock()\n     {\n@@ -103,7 +103,7 @@ class CBlock : public CBlockHeader\n     {\n         CBlockHeader::SetNull();\n         vtx.clear();\n-        vMerkleTree.clear();\n+        fChecked = false;\n     }\n \n     CBlockHeader GetBlockHeader() const\n@@ -118,14 +118,12 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    // Build the in-memory merkle tree for this block and return the merkle root.\n+    // Build the merkle tree for this block and return the merkle root.\n     // If non-NULL, *mutated is set to whether mutation was detected in the merkle\n     // tree (a duplication of transactions in the block leading to an identical\n     // merkle root).\n-    uint256 BuildMerkleTree(bool* mutated = NULL) const;\n+    uint256 ComputeMerkleRoot(bool* mutated = NULL) const;\n \n-    std::vector<uint256> GetMerkleBranch(int nIndex) const;\n-    static uint256 CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex);\n     std::string ToString() const;\n };\n "
      },
      {
        "sha": "91a3a5738ef298526c762d2f85ebdf3f5ca135cc",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -87,7 +87,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         pblock->vtx[0] = CTransaction(txCoinbase);\n         if (txFirst.size() < 2)\n             txFirst.push_back(new CTransaction(pblock->vtx[0]));\n-        pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n+        pblock->hashMerkleRoot = pblock->ComputeMerkleRoot();\n         pblock->nNonce = blockinfo[i].nonce;\n         CValidationState state;\n         BOOST_CHECK(ProcessNewBlock(state, NULL, pblock, true, NULL));"
      },
      {
        "sha": "d9f3c3e467a989360cc04ac42d4c827d76354eae",
        "filename": "src/test/pmt_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/test/pmt_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/test/pmt_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pmt_tests.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -48,7 +48,7 @@ BOOST_AUTO_TEST_CASE(pmt_test1)\n         }\n \n         // calculate actual merkle root and height\n-        uint256 merkleRoot1 = block.BuildMerkleTree();\n+        uint256 merkleRoot1 = block.ComputeMerkleRoot();\n         std::vector<uint256> vTxid(nTx, uint256());\n         for (unsigned int j=0; j<nTx; j++)\n             vTxid[j] = block.vtx[j].GetHash();"
      },
      {
        "sha": "39eff3af303264e54be3ec14fd27c6b6d0d94c61",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -702,9 +702,8 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n                 wtx.hashBlock = wtxIn.hashBlock;\n                 fUpdated = true;\n             }\n-            if (wtxIn.nIndex != -1 && (wtxIn.vMerkleBranch != wtx.vMerkleBranch || wtxIn.nIndex != wtx.nIndex))\n+            if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n             {\n-                wtx.vMerkleBranch = wtxIn.vMerkleBranch;\n                 wtx.nIndex = wtxIn.nIndex;\n                 fUpdated = true;\n             }\n@@ -2812,15 +2811,11 @@ int CMerkleTx::SetMerkleBranch(const CBlock& block)\n             break;\n     if (nIndex == (int)block.vtx.size())\n     {\n-        vMerkleBranch.clear();\n         nIndex = -1;\n         LogPrintf(\"ERROR: SetMerkleBranch(): couldn't find tx in block\\n\");\n         return 0;\n     }\n \n-    // Fill in merkle branch\n-    vMerkleBranch = block.GetMerkleBranch(nIndex);\n-\n     // Is the tx in a block that's in the main chain\n     BlockMap::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n@@ -2846,14 +2841,6 @@ int CMerkleTx::GetDepthInMainChainINTERNAL(const CBlockIndex* &pindexRet) const\n     if (!pindex || !chainActive.Contains(pindex))\n         return 0;\n \n-    // Make sure the merkle branch connects to this block\n-    if (!fMerkleVerified)\n-    {\n-        if (CBlock::CheckMerkleBranch(GetHash(), vMerkleBranch, nIndex) != pindex->hashMerkleRoot)\n-            return 0;\n-        fMerkleVerified = true;\n-    }\n-\n     pindexRet = pindex;\n     return chainActive.Height() - pindex->nHeight + 1;\n }"
      },
      {
        "sha": "34e98cfb812ffab5bfbf1e3b7e3bc385d7b9bc09",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -151,13 +151,8 @@ class CMerkleTx : public CTransaction\n \n public:\n     uint256 hashBlock;\n-    std::vector<uint256> vMerkleBranch;\n     int nIndex;\n \n-    // memory only\n-    mutable bool fMerkleVerified;\n-\n-\n     CMerkleTx()\n     {\n         Init();\n@@ -172,13 +167,13 @@ class CMerkleTx : public CTransaction\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n-        fMerkleVerified = false;\n     }\n \n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        std::vector<uint256> vMerkleBranch; // For compatibility with older versions.\n         READWRITE(*(CTransaction*)this);\n         nVersion = this->nVersion;\n         READWRITE(hashBlock);"
      },
      {
        "sha": "0624e442d16b431741093c60893885f0327db775",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b77244c60f3137647fed1c9510965d48992ccbe/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b77244c60f3137647fed1c9510965d48992ccbe/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=5b77244c60f3137647fed1c9510965d48992ccbe",
        "patch": "@@ -131,12 +131,14 @@ bool CWalletDB::EraseWatchOnly(const CScript &dest)\n bool CWalletDB::WriteBestBlock(const CBlockLocator& locator)\n {\n     nWalletDBUpdated++;\n-    return Write(std::string(\"bestblock\"), locator);\n+    Write(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n+    return Write(std::string(\"bestblock_nomerkle\"), locator);\n }\n \n bool CWalletDB::ReadBestBlock(CBlockLocator& locator)\n {\n-    return Read(std::string(\"bestblock\"), locator);\n+    if (Read(std::string(\"bestblock\"), locator) && !locator.vHave.empty()) return true;\n+    return Read(std::string(\"bestblock_nomerkle\"), locator);\n }\n \n bool CWalletDB::WriteOrderPosNext(int64_t nOrderPosNext)"
      }
    ]
  },
  {
    "sha": "598b25d5ee9c08947a52824f47531208943a3c65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OThiMjVkNWVlOWMwODk0N2E1MjgyNGY0NzUzMTIwODk0M2EzYzY1",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-09-23T15:46:36Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-09-23T19:12:19Z"
      },
      "message": "Add test showing bug in mempool packages",
      "tree": {
        "sha": "d1cefb8db59ea62780f5218107ccdd1419916c36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1cefb8db59ea62780f5218107ccdd1419916c36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/598b25d5ee9c08947a52824f47531208943a3c65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/598b25d5ee9c08947a52824f47531208943a3c65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/598b25d5ee9c08947a52824f47531208943a3c65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/598b25d5ee9c08947a52824f47531208943a3c65/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "999c8be81a00146cc0ee0f6fb49104e906e08835",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999c8be81a00146cc0ee0f6fb49104e906e08835",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/999c8be81a00146cc0ee0f6fb49104e906e08835"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 82,
      "deletions": 11
    },
    "files": [
      {
        "sha": "6bc6e43f0b4369c05a841fa7efd72f41875217a8",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 82,
        "deletions": 11,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/598b25d5ee9c08947a52824f47531208943a3c65/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/598b25d5ee9c08947a52824f47531208943a3c65/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=598b25d5ee9c08947a52824f47531208943a3c65",
        "patch": "@@ -15,22 +15,24 @@ class MempoolPackagesTest(BitcoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []\n-        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\"]))\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\", \"-debug\"]))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\", \"-limitancestorcount=5\", \"-debug\"]))\n+        connect_nodes(self.nodes[0], 1)\n         self.is_network_split = False\n         self.sync_all()\n \n     # Build a transaction that spends parent_txid:vout\n     # Return amount sent\n-    def chain_transaction(self, parent_txid, vout, value, fee, num_outputs):\n+    def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n         send_value = satoshi_round((value - fee)/num_outputs)\n         inputs = [ {'txid' : parent_txid, 'vout' : vout} ]\n         outputs = {}\n         for i in xrange(num_outputs):\n-            outputs[self.nodes[0].getnewaddress()] = send_value\n-        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n-        signedtx = self.nodes[0].signrawtransaction(rawtx)\n-        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n-        fulltx = self.nodes[0].getrawtransaction(txid, 1)\n+            outputs[node.getnewaddress()] = send_value\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+        signedtx = node.signrawtransaction(rawtx)\n+        txid = node.sendrawtransaction(signedtx['hex'])\n+        fulltx = node.getrawtransaction(txid, 1)\n         assert(len(fulltx['vout']) == num_outputs) # make sure we didn't generate a change output\n         return (txid, send_value)\n \n@@ -46,7 +48,7 @@ def run_test(self):\n         # 100 transactions off a confirmed tx should be fine\n         chain = []\n         for i in xrange(100):\n-            (txid, sent_value) = self.chain_transaction(txid, 0, value, fee, 1)\n+            (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, 0, value, fee, 1)\n             value = sent_value\n             chain.append(txid)\n \n@@ -69,10 +71,12 @@ def run_test(self):\n \n         # Adding one more transaction on to the chain should fail.\n         try:\n-            self.chain_transaction(txid, vout, value, fee, 1)\n+            self.chain_transaction(self.nodes[0], txid, vout, value, fee, 1)\n         except JSONRPCException as e:\n             print \"too-long-ancestor-chain successfully rejected\"\n \n+        # TODO: check that node1's mempool is as expected\n+\n         # TODO: test ancestor size limits\n \n         # Now test descendant chain limits\n@@ -82,15 +86,15 @@ def run_test(self):\n \n         transaction_package = []\n         # First create one parent tx with 10 children\n-        (txid, sent_value) = self.chain_transaction(txid, vout, value, fee, 10)\n+        (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, vout, value, fee, 10)\n         parent_transaction = txid\n         for i in xrange(10):\n             transaction_package.append({'txid': txid, 'vout': i, 'amount': sent_value})\n \n         for i in xrange(1000):\n             utxo = transaction_package.pop(0)\n             try:\n-                (txid, sent_value) = self.chain_transaction(utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n+                (txid, sent_value) = self.chain_transaction(self.nodes[0], utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n                 for j in xrange(10):\n                     transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n                 if i == 998:\n@@ -101,7 +105,74 @@ def run_test(self):\n                 assert_equal(i, 999)\n                 print \"tx that would create too large descendant package successfully rejected\"\n \n+        # TODO: check that node1's mempool is as expected\n+\n         # TODO: test descendant size limits\n \n+        # Test reorg handling\n+        # First, the basics:\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        self.nodes[1].invalidateblock(self.nodes[0].getbestblockhash())\n+        self.nodes[1].reconsiderblock(self.nodes[0].getbestblockhash())\n+\n+        # Now test the case where node1 has a transaction T in its mempool that\n+        # depends on transactions A and B which are in a mined block, and the\n+        # block containing A and B is disconnected, AND B is not accepted back\n+        # into node1's mempool because its ancestor count is too high.\n+\n+        # Create 8 transactions, like so:\n+        # Tx0 -> Tx1 (vout0)\n+        #   \\--> Tx2 (vout1) -> Tx3 -> Tx4 -> Tx5 -> Tx6 -> Tx7\n+        #\n+        # Mine them in the next block, then generate a new tx8 that spends\n+        # Tx1 and Tx7, and add to node1's mempool, then disconnect the\n+        # last block.\n+\n+        # Create tx0 with 2 outputs\n+        utxo = self.nodes[0].listunspent()\n+        txid = utxo[0]['txid']\n+        value = utxo[0]['amount']\n+        vout = utxo[0]['vout']\n+\n+        send_value = satoshi_round((value - fee)/2)\n+        inputs = [ {'txid' : txid, 'vout' : vout} ]\n+        outputs = {}\n+        for i in xrange(2):\n+            outputs[self.nodes[0].getnewaddress()] = send_value\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signedtx = self.nodes[0].signrawtransaction(rawtx)\n+        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n+        tx0_id = txid\n+        value = send_value\n+\n+        # Create tx1\n+        (tx1_id, tx1_value) = self.chain_transaction(self.nodes[0], tx0_id, 0, value, fee, 1)\n+\n+        # Create tx2-7\n+        vout = 1\n+        txid = tx0_id\n+        for i in xrange(6):\n+            (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, vout, value, fee, 1)\n+            vout = 0\n+            value = sent_value\n+\n+        # Mine these in a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # Now generate tx8, with a big fee\n+        inputs = [ {'txid' : tx1_id, 'vout': 0}, {'txid' : txid, 'vout': 0} ]\n+        outputs = { self.nodes[0].getnewaddress() : send_value + value - 4*fee }\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signedtx = self.nodes[0].signrawtransaction(rawtx)\n+        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n+        sync_mempools(self.nodes)\n+        \n+        # Now try to disconnect the tip on each node...\n+        self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        sync_blocks(self.nodes)\n+\n if __name__ == '__main__':\n     MempoolPackagesTest().main()"
      }
    ]
  },
  {
    "sha": "60de0d5826f1b848a43ec989ff712f002eddc3dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGRlMGQ1ODI2ZjFiODQ4YTQzZWM5ODlmZjcxMmYwMDJlZGRjM2Rj",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-09-23T17:37:32Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-09-23T19:30:41Z"
      },
      "message": "Fix mempool package tracking edge case\n\nCalculateMemPoolAncestors was always looping over a transaction's inputs\nto find in-mempool parents.  When adding a new transaction, this is the\ncorrect behavior, but when removing a transaction, we want to use the\nancestor set that would be calculated by walking mapLinks (which should\nin general be the same set, except during a reorg when the mempool is\nin an inconsistent state, and the mapLinks-based calculation would be the\ncorrect one).",
      "tree": {
        "sha": "f30240eccceb817d58cb7a35e287f5ef979118df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f30240eccceb817d58cb7a35e287f5ef979118df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60de0d5826f1b848a43ec989ff712f002eddc3dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60de0d5826f1b848a43ec989ff712f002eddc3dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60de0d5826f1b848a43ec989ff712f002eddc3dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60de0d5826f1b848a43ec989ff712f002eddc3dc/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "598b25d5ee9c08947a52824f47531208943a3c65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/598b25d5ee9c08947a52824f47531208943a3c65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/598b25d5ee9c08947a52824f47531208943a3c65"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 39,
      "deletions": 16
    },
    "files": [
      {
        "sha": "1370cab0c05e97413014a7396789c13b474cb0e1",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 15,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60de0d5826f1b848a43ec989ff712f002eddc3dc/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60de0d5826f1b848a43ec989ff712f002eddc3dc/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=60de0d5826f1b848a43ec989ff712f002eddc3dc",
        "patch": "@@ -159,26 +159,30 @@ void CTxMemPool::UpdateTransactionsFromBlock(const std::vector<uint256> &vHashes\n     }\n }\n \n-bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString)\n+bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents /* = true */)\n {\n     setEntries parentHashes;\n     const CTransaction &tx = entry.GetTx();\n \n-    // Get parents of this transaction that are in the mempool\n-    // Entry may or may not already be in the mempool, and GetMemPoolParents()\n-    // is only valid for entries in the mempool, so we iterate mapTx to find\n-    // parents.\n-    // TODO: optimize this so that we only check limits and walk\n-    // tx.vin when called on entries not already in the mempool.\n-    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        txiter piter = mapTx.find(tx.vin[i].prevout.hash);\n-        if (piter != mapTx.end()) {\n-            parentHashes.insert(piter);\n-            if (parentHashes.size() + 1 > limitAncestorCount) {\n-                errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n-                return false;\n+    if (fSearchForParents) {\n+        // Get parents of this transaction that are in the mempool\n+        // GetMemPoolParents() is only valid for entries in the mempool, so we\n+        // iterate mapTx to find parents.\n+        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+            txiter piter = mapTx.find(tx.vin[i].prevout.hash);\n+            if (piter != mapTx.end()) {\n+                parentHashes.insert(piter);\n+                if (parentHashes.size() + 1 > limitAncestorCount) {\n+                    errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n+                    return false;\n+                }\n             }\n         }\n+    } else {\n+        // If we're not searching for parents, we require this to be an\n+        // entry in the mempool already.\n+        txiter it = mapTx.iterator_to(entry);\n+        parentHashes = GetMemPoolParents(it);\n     }\n \n     size_t totalSizeWithAncestors = entry.GetTxSize();\n@@ -249,7 +253,24 @@ void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove)\n         setEntries setAncestors;\n         const CTxMemPoolEntry &entry = *removeIt;\n         std::string dummy;\n-        CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+        // Since this is a tx that is already in the mempool, we can call CMPA\n+        // with fSearchForParents = false.  If the mempool is in a consistent\n+        // state, then using true or false should both be correct, though false\n+        // should be a bit faster.\n+        // However, if we happen to be in the middle of processing a reorg, then\n+        // the mempool can be in an inconsistent state.  In this case, the set\n+        // of ancestors reachable via mapLinks will be the same as the set of \n+        // ancestors whose packages include this transaction, because when we\n+        // add a new transaction to the mempool in addUnchecked(), we assume it\n+        // has no children, and in the case of a reorg where that assumption is\n+        // false, the in-mempool children aren't linked to the in-block tx's\n+        // until UpdateTransactionsFromBlock() is called.\n+        // So if we're being called during a reorg, ie before\n+        // UpdateTransactionsFromBlock() has been called, then mapLinks[] will\n+        // differ from the set of mempool parents we'd calculate by searching,\n+        // and it's important that we use the mapLinks[] notion of ancestor\n+        // transactions as the set of things to update for removal.\n+        CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy, false);\n         // Note that UpdateAncestorsOf severs the child links that point to\n         // removeIt in the entries for the parents of removeIt.  This is\n         // fine since we don't need to use the mempool children of any entries"
      },
      {
        "sha": "c0eef0dd222aef31d19cd554b9c99ccfba62057e",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60de0d5826f1b848a43ec989ff712f002eddc3dc/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60de0d5826f1b848a43ec989ff712f002eddc3dc/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=60de0d5826f1b848a43ec989ff712f002eddc3dc",
        "patch": "@@ -392,8 +392,10 @@ class CTxMemPool\n      *  limitDescendantCount = max number of descendants any ancestor can have\n      *  limitDescendantSize = max size of descendants any ancestor can have\n      *  errString = populated with error reason if any limits are hit\n+     *  fSearchForParents = whether to search a tx's vin for in-mempool parents, or\n+     *    look up parents from mapLinks. Must be true for entries not in the mempool\n      */\n-    bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString);\n+    bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n     unsigned long size()\n     {"
      }
    ]
  },
  {
    "sha": "82d2aef7b3e05abda81db03a8d4725d52f06f203",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmQyYWVmN2IzZTA1YWJkYTgxZGIwM2E4ZDQ3MjVkNTJmMDZmMjAz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T10:14:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T10:24:41Z"
      },
      "message": "Merge pull request #6715\n\n60de0d5 Fix mempool package tracking edge case (Suhas Daftuar)\n598b25d Add test showing bug in mempool packages (Suhas Daftuar)",
      "tree": {
        "sha": "7c055fc00cdbc9cccd63fdfb1cb7caceaab33279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c055fc00cdbc9cccd63fdfb1cb7caceaab33279"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82d2aef7b3e05abda81db03a8d4725d52f06f203",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWA89pAAoJEHSBCwEjRsmmCfUH/A9oG1F/vSOSvYiamYKsFW9t\nIHsb3QWQe6evPdJdsBb1CGbXXJudAX42eiVYUOA04l4zVRoMi6oJmjqXXFKwcUtQ\n6cZ1Qu5RLAZZHM5NeUvMiPd176isuxwT9pqx63xXfXzKe1elJetTu7nxooyi4gqT\nLKnSdHbTDFMR5GIuR2et0CVvpkuvl9dqLJib89stR4tUKIV2rJf9VQjwT9pL6LFD\nGNQkqujSlfyxyNUjlMx6+7agYNM6WamnJgs6HetCaEVYdKGCXy73J3l7y/3GA3aA\nMLLuVuJ5V0dj/31E3IH5z+uWo28ISjwPXaw9DXaq28UDf82RoHv7XhjoY5yV9jY=\n=vN7x\n-----END PGP SIGNATURE-----",
        "payload": "tree 7c055fc00cdbc9cccd63fdfb1cb7caceaab33279\nparent 5b77244c60f3137647fed1c9510965d48992ccbe\nparent 60de0d5826f1b848a43ec989ff712f002eddc3dc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443089696 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443090281 +0200\n\nMerge pull request #6715\n\n60de0d5 Fix mempool package tracking edge case (Suhas Daftuar)\n598b25d Add test showing bug in mempool packages (Suhas Daftuar)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82d2aef7b3e05abda81db03a8d4725d52f06f203",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/82d2aef7b3e05abda81db03a8d4725d52f06f203",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82d2aef7b3e05abda81db03a8d4725d52f06f203/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b77244c60f3137647fed1c9510965d48992ccbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b77244c60f3137647fed1c9510965d48992ccbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b77244c60f3137647fed1c9510965d48992ccbe"
      },
      {
        "sha": "60de0d5826f1b848a43ec989ff712f002eddc3dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60de0d5826f1b848a43ec989ff712f002eddc3dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60de0d5826f1b848a43ec989ff712f002eddc3dc"
      }
    ],
    "stats": {
      "total": 148,
      "additions": 121,
      "deletions": 27
    },
    "files": [
      {
        "sha": "6bc6e43f0b4369c05a841fa7efd72f41875217a8",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 82,
        "deletions": 11,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82d2aef7b3e05abda81db03a8d4725d52f06f203/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82d2aef7b3e05abda81db03a8d4725d52f06f203/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=82d2aef7b3e05abda81db03a8d4725d52f06f203",
        "patch": "@@ -15,22 +15,24 @@ class MempoolPackagesTest(BitcoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []\n-        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\"]))\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\", \"-debug\"]))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-maxorphantx=1000\", \"-relaypriority=0\", \"-limitancestorcount=5\", \"-debug\"]))\n+        connect_nodes(self.nodes[0], 1)\n         self.is_network_split = False\n         self.sync_all()\n \n     # Build a transaction that spends parent_txid:vout\n     # Return amount sent\n-    def chain_transaction(self, parent_txid, vout, value, fee, num_outputs):\n+    def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n         send_value = satoshi_round((value - fee)/num_outputs)\n         inputs = [ {'txid' : parent_txid, 'vout' : vout} ]\n         outputs = {}\n         for i in xrange(num_outputs):\n-            outputs[self.nodes[0].getnewaddress()] = send_value\n-        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n-        signedtx = self.nodes[0].signrawtransaction(rawtx)\n-        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n-        fulltx = self.nodes[0].getrawtransaction(txid, 1)\n+            outputs[node.getnewaddress()] = send_value\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+        signedtx = node.signrawtransaction(rawtx)\n+        txid = node.sendrawtransaction(signedtx['hex'])\n+        fulltx = node.getrawtransaction(txid, 1)\n         assert(len(fulltx['vout']) == num_outputs) # make sure we didn't generate a change output\n         return (txid, send_value)\n \n@@ -46,7 +48,7 @@ def run_test(self):\n         # 100 transactions off a confirmed tx should be fine\n         chain = []\n         for i in xrange(100):\n-            (txid, sent_value) = self.chain_transaction(txid, 0, value, fee, 1)\n+            (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, 0, value, fee, 1)\n             value = sent_value\n             chain.append(txid)\n \n@@ -69,10 +71,12 @@ def run_test(self):\n \n         # Adding one more transaction on to the chain should fail.\n         try:\n-            self.chain_transaction(txid, vout, value, fee, 1)\n+            self.chain_transaction(self.nodes[0], txid, vout, value, fee, 1)\n         except JSONRPCException as e:\n             print \"too-long-ancestor-chain successfully rejected\"\n \n+        # TODO: check that node1's mempool is as expected\n+\n         # TODO: test ancestor size limits\n \n         # Now test descendant chain limits\n@@ -82,15 +86,15 @@ def run_test(self):\n \n         transaction_package = []\n         # First create one parent tx with 10 children\n-        (txid, sent_value) = self.chain_transaction(txid, vout, value, fee, 10)\n+        (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, vout, value, fee, 10)\n         parent_transaction = txid\n         for i in xrange(10):\n             transaction_package.append({'txid': txid, 'vout': i, 'amount': sent_value})\n \n         for i in xrange(1000):\n             utxo = transaction_package.pop(0)\n             try:\n-                (txid, sent_value) = self.chain_transaction(utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n+                (txid, sent_value) = self.chain_transaction(self.nodes[0], utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n                 for j in xrange(10):\n                     transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n                 if i == 998:\n@@ -101,7 +105,74 @@ def run_test(self):\n                 assert_equal(i, 999)\n                 print \"tx that would create too large descendant package successfully rejected\"\n \n+        # TODO: check that node1's mempool is as expected\n+\n         # TODO: test descendant size limits\n \n+        # Test reorg handling\n+        # First, the basics:\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        self.nodes[1].invalidateblock(self.nodes[0].getbestblockhash())\n+        self.nodes[1].reconsiderblock(self.nodes[0].getbestblockhash())\n+\n+        # Now test the case where node1 has a transaction T in its mempool that\n+        # depends on transactions A and B which are in a mined block, and the\n+        # block containing A and B is disconnected, AND B is not accepted back\n+        # into node1's mempool because its ancestor count is too high.\n+\n+        # Create 8 transactions, like so:\n+        # Tx0 -> Tx1 (vout0)\n+        #   \\--> Tx2 (vout1) -> Tx3 -> Tx4 -> Tx5 -> Tx6 -> Tx7\n+        #\n+        # Mine them in the next block, then generate a new tx8 that spends\n+        # Tx1 and Tx7, and add to node1's mempool, then disconnect the\n+        # last block.\n+\n+        # Create tx0 with 2 outputs\n+        utxo = self.nodes[0].listunspent()\n+        txid = utxo[0]['txid']\n+        value = utxo[0]['amount']\n+        vout = utxo[0]['vout']\n+\n+        send_value = satoshi_round((value - fee)/2)\n+        inputs = [ {'txid' : txid, 'vout' : vout} ]\n+        outputs = {}\n+        for i in xrange(2):\n+            outputs[self.nodes[0].getnewaddress()] = send_value\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signedtx = self.nodes[0].signrawtransaction(rawtx)\n+        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n+        tx0_id = txid\n+        value = send_value\n+\n+        # Create tx1\n+        (tx1_id, tx1_value) = self.chain_transaction(self.nodes[0], tx0_id, 0, value, fee, 1)\n+\n+        # Create tx2-7\n+        vout = 1\n+        txid = tx0_id\n+        for i in xrange(6):\n+            (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, vout, value, fee, 1)\n+            vout = 0\n+            value = sent_value\n+\n+        # Mine these in a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # Now generate tx8, with a big fee\n+        inputs = [ {'txid' : tx1_id, 'vout': 0}, {'txid' : txid, 'vout': 0} ]\n+        outputs = { self.nodes[0].getnewaddress() : send_value + value - 4*fee }\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signedtx = self.nodes[0].signrawtransaction(rawtx)\n+        txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n+        sync_mempools(self.nodes)\n+        \n+        # Now try to disconnect the tip on each node...\n+        self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        sync_blocks(self.nodes)\n+\n if __name__ == '__main__':\n     MempoolPackagesTest().main()"
      },
      {
        "sha": "1370cab0c05e97413014a7396789c13b474cb0e1",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 15,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82d2aef7b3e05abda81db03a8d4725d52f06f203/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82d2aef7b3e05abda81db03a8d4725d52f06f203/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=82d2aef7b3e05abda81db03a8d4725d52f06f203",
        "patch": "@@ -159,26 +159,30 @@ void CTxMemPool::UpdateTransactionsFromBlock(const std::vector<uint256> &vHashes\n     }\n }\n \n-bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString)\n+bool CTxMemPool::CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents /* = true */)\n {\n     setEntries parentHashes;\n     const CTransaction &tx = entry.GetTx();\n \n-    // Get parents of this transaction that are in the mempool\n-    // Entry may or may not already be in the mempool, and GetMemPoolParents()\n-    // is only valid for entries in the mempool, so we iterate mapTx to find\n-    // parents.\n-    // TODO: optimize this so that we only check limits and walk\n-    // tx.vin when called on entries not already in the mempool.\n-    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        txiter piter = mapTx.find(tx.vin[i].prevout.hash);\n-        if (piter != mapTx.end()) {\n-            parentHashes.insert(piter);\n-            if (parentHashes.size() + 1 > limitAncestorCount) {\n-                errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n-                return false;\n+    if (fSearchForParents) {\n+        // Get parents of this transaction that are in the mempool\n+        // GetMemPoolParents() is only valid for entries in the mempool, so we\n+        // iterate mapTx to find parents.\n+        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+            txiter piter = mapTx.find(tx.vin[i].prevout.hash);\n+            if (piter != mapTx.end()) {\n+                parentHashes.insert(piter);\n+                if (parentHashes.size() + 1 > limitAncestorCount) {\n+                    errString = strprintf(\"too many unconfirmed parents [limit: %u]\", limitAncestorCount);\n+                    return false;\n+                }\n             }\n         }\n+    } else {\n+        // If we're not searching for parents, we require this to be an\n+        // entry in the mempool already.\n+        txiter it = mapTx.iterator_to(entry);\n+        parentHashes = GetMemPoolParents(it);\n     }\n \n     size_t totalSizeWithAncestors = entry.GetTxSize();\n@@ -249,7 +253,24 @@ void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove)\n         setEntries setAncestors;\n         const CTxMemPoolEntry &entry = *removeIt;\n         std::string dummy;\n-        CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+        // Since this is a tx that is already in the mempool, we can call CMPA\n+        // with fSearchForParents = false.  If the mempool is in a consistent\n+        // state, then using true or false should both be correct, though false\n+        // should be a bit faster.\n+        // However, if we happen to be in the middle of processing a reorg, then\n+        // the mempool can be in an inconsistent state.  In this case, the set\n+        // of ancestors reachable via mapLinks will be the same as the set of \n+        // ancestors whose packages include this transaction, because when we\n+        // add a new transaction to the mempool in addUnchecked(), we assume it\n+        // has no children, and in the case of a reorg where that assumption is\n+        // false, the in-mempool children aren't linked to the in-block tx's\n+        // until UpdateTransactionsFromBlock() is called.\n+        // So if we're being called during a reorg, ie before\n+        // UpdateTransactionsFromBlock() has been called, then mapLinks[] will\n+        // differ from the set of mempool parents we'd calculate by searching,\n+        // and it's important that we use the mapLinks[] notion of ancestor\n+        // transactions as the set of things to update for removal.\n+        CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy, false);\n         // Note that UpdateAncestorsOf severs the child links that point to\n         // removeIt in the entries for the parents of removeIt.  This is\n         // fine since we don't need to use the mempool children of any entries"
      },
      {
        "sha": "c0eef0dd222aef31d19cd554b9c99ccfba62057e",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82d2aef7b3e05abda81db03a8d4725d52f06f203/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82d2aef7b3e05abda81db03a8d4725d52f06f203/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=82d2aef7b3e05abda81db03a8d4725d52f06f203",
        "patch": "@@ -392,8 +392,10 @@ class CTxMemPool\n      *  limitDescendantCount = max number of descendants any ancestor can have\n      *  limitDescendantSize = max size of descendants any ancestor can have\n      *  errString = populated with error reason if any limits are hit\n+     *  fSearchForParents = whether to search a tx's vin for in-mempool parents, or\n+     *    look up parents from mapLinks. Must be true for entries not in the mempool\n      */\n-    bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString);\n+    bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n     unsigned long size()\n     {"
      }
    ]
  },
  {
    "sha": "ef4945f2218789d521da81fa9348a85eaef24b6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjQ5NDVmMjIxODc4OWQ1MjFkYTgxZmE5MzQ4YTg1ZWFlZjI0YjZm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T12:45:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T13:03:52Z"
      },
      "message": "Merge pull request #6600\n\nb0beae8 Drop \"with minimal dependencies\" from description (Zak Wilcox)\n5e5e00b Split bitcoin-tx into its own package (Zak Wilcox)\n05179f7 Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)",
      "tree": {
        "sha": "7a4565a03958d0f10c96e4023411aa7766bbb4fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a4565a03958d0f10c96e4023411aa7766bbb4fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef4945f2218789d521da81fa9348a85eaef24b6f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWA/S4AAoJEHSBCwEjRsmmlvwIAJAjw7TmCTrWMEI4H6WmY7jz\nXuKBE7xw6oVGA3LuHNeI5bJx/2faB3FmnWJrmfTBLC3lkA1Wn/Omyn9TSvEBSTJM\nfBttFStCeIuGHsYQWX+DyIpDDFQli0yqXirULr0ae4JNT4+6pVwv18bIWyGGXdAV\nduSkrG3OKM6UnpvypHkV9eLeHcBFwrbUoquMgwFnnwdjLn4VgGaCi0oTRzkZ6jeI\nfbn40lKOcI1NMGqhOs6QzfochmPBSAARCbsJaSnIUKzdhKHBedynvABDySirUlZl\nFPED0OnbNfuz1KrxTHLLB1aZ5h2JXLO8dlZ5JlNsXL6P4MCe5ci0GjVdnm7EAI0=\n=VEYV\n-----END PGP SIGNATURE-----",
        "payload": "tree 7a4565a03958d0f10c96e4023411aa7766bbb4fb\nparent 82d2aef7b3e05abda81db03a8d4725d52f06f203\nparent b0beae8b8215ca696fb9e0eeb6022d13a215a283\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443098710 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443099832 +0200\n\nMerge pull request #6600\n\nb0beae8 Drop \"with minimal dependencies\" from description (Zak Wilcox)\n5e5e00b Split bitcoin-tx into its own package (Zak Wilcox)\n05179f7 Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef4945f2218789d521da81fa9348a85eaef24b6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef4945f2218789d521da81fa9348a85eaef24b6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef4945f2218789d521da81fa9348a85eaef24b6f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "82d2aef7b3e05abda81db03a8d4725d52f06f203",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82d2aef7b3e05abda81db03a8d4725d52f06f203",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/82d2aef7b3e05abda81db03a8d4725d52f06f203"
      },
      {
        "sha": "b0beae8b8215ca696fb9e0eeb6022d13a215a283",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0beae8b8215ca696fb9e0eeb6022d13a215a283",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0beae8b8215ca696fb9e0eeb6022d13a215a283"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef4945f2218789d521da81fa9348a85eaef24b6f/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef4945f2218789d521da81fa9348a85eaef24b6f/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=ef4945f2218789d521da81fa9348a85eaef24b6f",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "01625b843899774f7d54c5daea27d3159ef37f29",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef4945f2218789d521da81fa9348a85eaef24b6f/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef4945f2218789d521da81fa9348a85eaef24b6f/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=ef4945f2218789d521da81fa9348a85eaef24b6f",
        "patch": "@@ -56,3 +56,17 @@ Description: peer-to-peer network based digital currency - Qt GUI\n  requires 20+ GB of space, slowly growing.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+\n+Package: bitcoin-tx\n+Architecture: any\n+Depends: ${shlibs:Depends}, ${misc:Depends}\n+Description: peer-to-peer digital currency - standalone transaction tool\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n+ .\n+ This package provides bitcoin-tx, a command-line transaction creation\n+ tool which can be used without a bitcoin daemon.  Some means of\n+ exchanging minimal transaction data with peers is still required."
      }
    ]
  },
  {
    "sha": "34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGRjMDNkOGUwNWZhMTQyOWQ2ZDU0M2ZkYjhlZTc2ZjI4ZjQzNmFj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T16:19:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T16:21:18Z"
      },
      "message": "Merge pull request #6664\n\n51ff777 [trivial] Fix rpc message \"help generate\" (MarcoFalke)\n4c3cab1 [trivial] init cleanup (MarcoFalke)",
      "tree": {
        "sha": "fd779199312fd4fbd4f76b343b29b70a26ca38eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd779199312fd4fbd4f76b343b29b70a26ca38eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWBCL+AAoJEHSBCwEjRsmmJ4gH/1hb+e4s0QbzgnBWswih5Qis\nHACOSIJ/EF0lvZpVu5wbtikuZ7kFScIDvYj+xJUkQel+Rrwcw8IEXqiHFFTV1Dpp\n7E1aOmqzNj+XJCmyHmncpms132jDSp8x5jqTs8bhXOjDlmtFYib70qXq/nVMXQo/\n6ev5LPfTBtLJXXcZ7r0eCQI8Fb6kOcQISLERVncyfCI7AYH1ANs+EqmyS9tDcl/r\nbx2GhzH17XME3di/eIa/gTmbUV/+IDIwC31+4ICrlx89u3Ok70qp+PqVPmltM9Ad\n8IMB2iSFOX8AAwWn3PzgqXd6cTiONhKp/jJIGOc49NIZpFS5JUsQpBM+o32hano=\n=Z406\n-----END PGP SIGNATURE-----",
        "payload": "tree fd779199312fd4fbd4f76b343b29b70a26ca38eb\nparent ef4945f2218789d521da81fa9348a85eaef24b6f\nparent 51ff77735745797b492590440425bca76b8411ea\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443111595 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443111678 +0200\n\nMerge pull request #6664\n\n51ff777 [trivial] Fix rpc message \"help generate\" (MarcoFalke)\n4c3cab1 [trivial] init cleanup (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef4945f2218789d521da81fa9348a85eaef24b6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef4945f2218789d521da81fa9348a85eaef24b6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef4945f2218789d521da81fa9348a85eaef24b6f"
      },
      {
        "sha": "51ff77735745797b492590440425bca76b8411ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51ff77735745797b492590440425bca76b8411ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51ff77735745797b492590440425bca76b8411ea"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "a079dce5bc0e59c558ab1bc740d9547bbfab6570",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
        "patch": "@@ -312,7 +312,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     if (mode == HMM_BITCOIND)\n     {\n-#if !defined(WIN32)\n+#ifndef WIN32\n         strUsage += HelpMessageOpt(\"-daemon\", _(\"Run in the background as a daemon and accept commands\"));\n #endif\n     }\n@@ -329,7 +329,7 @@ std::string HelpMessage(HelpMessageMode mode)\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for block files)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n     strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild block chain index from current blk000??.dat files on startup\"));\n-#if !defined(WIN32)\n+#ifndef WIN32\n     strUsage += HelpMessageOpt(\"-sysperms\", _(\"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\"));\n #endif\n     strUsage += HelpMessageOpt(\"-txindex\", strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), 0));\n@@ -852,15 +852,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     fServer = GetBoolArg(\"-server\", false);\n \n-    // block pruning; get the amount of disk space (in MB) to allot for block & undo files\n+    // block pruning; get the amount of disk space (in MiB) to allot for block & undo files\n     int64_t nSignedPruneTarget = GetArg(\"-prune\", 0) * 1024 * 1024;\n     if (nSignedPruneTarget < 0) {\n         return InitError(_(\"Prune cannot be configured with a negative value.\"));\n     }\n     nPruneTarget = (uint64_t) nSignedPruneTarget;\n     if (nPruneTarget) {\n         if (nPruneTarget < MIN_DISK_SPACE_FOR_BLOCK_FILES) {\n-            return InitError(strprintf(_(\"Prune configured below the minimum of %d MB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n+            return InitError(strprintf(_(\"Prune configured below the minimum of %d MiB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n         }\n         LogPrintf(\"Prune configured to target %uMiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n         fPruneMode = true;\n@@ -1036,7 +1036,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!warningString.empty())\n             InitWarning(warningString);\n         if (!errorString.empty())\n-            return InitError(warningString);\n+            return InitError(errorString);\n \n     } // (!fDisableWallet)\n #endif // ENABLE_WALLET\n@@ -1560,7 +1560,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Generate coins in the background\n     GenerateBitcoins(GetBoolArg(\"-gen\", false), GetArg(\"-genproclimit\", 1), Params());\n \n-    // ********************************************************* Step 11: finished\n+    // ********************************************************* Step 12: finished\n \n     SetRPCWarmupFinished();\n     uiInterface.InitMessage(_(\"Done loading\"));"
      },
      {
        "sha": "8dd0ff2f7e526b605328e4eafc1998ae834b0cd7",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
        "patch": "@@ -119,6 +119,7 @@ UniValue generate(const UniValue& params, bool fHelp)\n             \"generate numblocks\\n\"\n             \"\\nMine blocks immediately (before the RPC call returns)\\n\"\n             \"\\nNote: this function can only be used on the regtest network\\n\"\n+            \"\\nArguments:\\n\"\n             \"1. numblocks    (numeric, required) How many blocks are generated immediately.\\n\"\n             \"\\nResult\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\""
      }
    ]
  },
  {
    "sha": "da47fe01668369ef518aa8e69f354507f5316d8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTQ3ZmUwMTY2ODM2OWVmNTE4YWE4ZTY5ZjM1NDUwN2Y1MzE2ZDhj",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-09-24T17:12:36Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-09-24T17:12:36Z"
      },
      "message": "Add java-libbitcoinconsensus as example to documentation\n\njava-libbitcoinconsensus is a wrapper around libbitcoinconsensus, which\nuses JNA to demonstrate a potential integration in Java.",
      "tree": {
        "sha": "df71deacaad612a6f0806f9c85b2e71d219f1077",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df71deacaad612a6f0806f9c85b2e71d219f1077"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da47fe01668369ef518aa8e69f354507f5316d8c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWBDFIAAoJEHZ14xz1cZgyyxAP/RO+Hbn7zTafOVIemXwOgKKj\nQP6wi9qQ9XTkO37oCchhmtFvL7smJAlYk3iS87CYVUgALdEj/D6ETUM2hs3yLKrN\nd4NDI9BCWJMd2s0tPb3FjAsFdXB6Hh7TZJ5LjjJqPFNn7tGCXA74LozoA+hmcnpG\nu0EjpOG8uqaQ7OJJFWQuelTBKHbV8Se69MjLMC37coVaPqiOh6zTSQfsiArAvwaO\n6w5eEQSrY6BYbgCwGi4gLm5rZLl5Wmb1A6QRt8RHkwv39xzD254mP9fAa2AGbtmq\n9V8HdPnrXDl5tzw6FqG9EIZ95rtykqlHgkbgYxuxkr/ReCZqKnCkcQNCySDMklpd\nUVoUWHeuMJQByOhmiAQMjbopoAEN1W2N6JZDIXhq0dR/j8yyN5tZJSgd3TGl7cIF\nC0dbvDVNYdPL5b8Ctv9DMWMkEhjNMD4DHWYdcd3tzGa0A9o3Fy9sAWnuKRASw7SS\nyduRFlB76lwkTYZLRNoQbXzLqku4mMd8qMcfNvWwtJSlPvyGtLKBgBLdqmcxU8YI\nJb46trnfdFMXZK3c3AD/O2MpUrQ59SiV56NU/GK9A6CHQ9sSdbbp+otCnqgbO8C/\nO5qB0BHY84bCmBhqj3UAzDjpquNSeFk2ghC83sLopfiFyRnObmqJVPm1C840RIy4\nJKKpwzNoyQlGPGELI79v\n=ln24\n-----END PGP SIGNATURE-----",
        "payload": "tree df71deacaad612a6f0806f9c85b2e71d219f1077\nparent ef4945f2218789d521da81fa9348a85eaef24b6f\nauthor dexX7 <dexx@bitwatch.co> 1443114756 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1443114756 +0200\n\nAdd java-libbitcoinconsensus as example to documentation\n\njava-libbitcoinconsensus is a wrapper around libbitcoinconsensus, which\nuses JNA to demonstrate a potential integration in Java.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da47fe01668369ef518aa8e69f354507f5316d8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da47fe01668369ef518aa8e69f354507f5316d8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da47fe01668369ef518aa8e69f354507f5316d8c/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef4945f2218789d521da81fa9348a85eaef24b6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef4945f2218789d521da81fa9348a85eaef24b6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef4945f2218789d521da81fa9348a85eaef24b6f"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f1448f72581c14a0f318dd1f8b18a012b300206d",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da47fe01668369ef518aa8e69f354507f5316d8c/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da47fe01668369ef518aa8e69f354507f5316d8c/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=da47fe01668369ef518aa8e69f354507f5316d8c",
        "patch": "@@ -40,3 +40,4 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n ### Example Implementations\n - [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n - [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n+- [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)"
      }
    ]
  },
  {
    "sha": "1534d9a83c3648709690f8ad6af752b782a35be7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTM0ZDlhODNjMzY0ODcwOTY5MGY4YWQ2YWY3NTJiNzgyYTM1YmU3",
    "commit": {
      "author": {
        "name": "EthanHeilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2015-09-22T19:24:16Z"
      },
      "committer": {
        "name": "EthanHeilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2015-09-24T19:20:48Z"
      },
      "message": "Creates unittests for addrman, makes addrman testable.\nAdds several unittests for addrman to verify it works as expected.\nMakes small modifications to addrman to allow deterministic and targeted tests.",
      "tree": {
        "sha": "e97554f6ee564182aa1c6e09af938c39f222b684",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e97554f6ee564182aa1c6e09af938c39f222b684"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1534d9a83c3648709690f8ad6af752b782a35be7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1534d9a83c3648709690f8ad6af752b782a35be7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1534d9a83c3648709690f8ad6af752b782a35be7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1534d9a83c3648709690f8ad6af752b782a35be7/comments",
    "author": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bc1b3a1f37b86014bca583f8e33a5dd75772019",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc1b3a1f37b86014bca583f8e33a5dd75772019"
      }
    ],
    "stats": {
      "total": 205,
      "additions": 199,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b283d97f00a64722e32c0b33489c09109cb37bc2",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1534d9a83c3648709690f8ad6af752b782a35be7/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1534d9a83c3648709690f8ad6af752b782a35be7/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=1534d9a83c3648709690f8ad6af752b782a35be7",
        "patch": "@@ -36,6 +36,7 @@ GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.r\n BITCOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n   test/bignum.h \\\n+  test/addrman_tests.cpp \\\n   test/alert_tests.cpp \\\n   test/allocator_tests.cpp \\\n   test/base32_tests.cpp \\"
      },
      {
        "sha": "078b9e16817544ef9721f4009dc0533871f7b169",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1534d9a83c3648709690f8ad6af752b782a35be7/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1534d9a83c3648709690f8ad6af752b782a35be7/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=1534d9a83c3648709690f8ad6af752b782a35be7",
        "patch": "@@ -329,13 +329,17 @@ void CAddrMan::Attempt_(const CService& addr, int64_t nTime)\n     info.nAttempts++;\n }\n \n-CAddrInfo CAddrMan::Select_()\n+CAddrInfo CAddrMan::Select_(bool newOnly)\n {\n     if (size() == 0)\n         return CAddrInfo();\n \n+    if (newOnly && nNew == 0)\n+        return CAddrInfo();\n+\n     // Use a 50% chance for choosing between tried and new table entries.\n-    if (nTried > 0 && (nNew == 0 || GetRandInt(2) == 0)) {\n+    if (!newOnly &&\n+       (nTried > 0 && (nNew == 0 || GetRandInt(2) == 0))) { \n         // use a tried node\n         double fChanceFactor = 1.0;\n         while (1) {"
      },
      {
        "sha": "1123caabfaf601a49b7be292d97cfc5443aba4a5",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1534d9a83c3648709690f8ad6af752b782a35be7/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1534d9a83c3648709690f8ad6af752b782a35be7/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=1534d9a83c3648709690f8ad6af752b782a35be7",
        "patch": "@@ -22,6 +22,8 @@\n  */\n class CAddrInfo : public CAddress\n {\n+\n+\n public:\n     //! last try whatsoever by us (memory only)\n     int64_t nLastTry;\n@@ -230,8 +232,8 @@ class CAddrMan\n     //! Mark an entry as attempted to connect.\n     void Attempt_(const CService &addr, int64_t nTime);\n \n-    //! Select an address to connect to.\n-    CAddrInfo Select_();\n+    //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n+    CAddrInfo Select_(bool newOnly);\n \n #ifdef DEBUG_ADDRMAN\n     //! Perform consistency check. Returns an error code or zero.\n@@ -532,13 +534,13 @@ class CAddrMan\n     /**\n      * Choose an address to connect to.\n      */\n-    CAddrInfo Select()\n+    CAddrInfo Select(bool newOnly = false)\n     {\n         CAddrInfo addrRet;\n         {\n             LOCK(cs);\n             Check();\n-            addrRet = Select_();\n+            addrRet = Select_(newOnly);\n             Check();\n         }\n         return addrRet;\n@@ -567,6 +569,12 @@ class CAddrMan\n             Check();\n         }\n     }\n+    \n+    //! Ensure that bucket placement is always the same for testing purposes.\n+    void MakeDeterministic(){\n+        nKey.SetNull(); //Do not use outside of tests.\n+    }\n+\n };\n \n #endif // BITCOIN_ADDRMAN_H"
      },
      {
        "sha": "cfcdd9abb272440ae83c1103316b3cf0acbec2b6",
        "filename": "src/test/addrman_tests.cpp",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1534d9a83c3648709690f8ad6af752b782a35be7/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1534d9a83c3648709690f8ad6af752b782a35be7/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=1534d9a83c3648709690f8ad6af752b782a35be7",
        "patch": "@@ -0,0 +1,180 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"random.h\"\n+\n+using namespace std;\n+\n+class CAddrManTest : public CAddrMan{};\n+\n+BOOST_FIXTURE_TEST_SUITE(addrman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(addrman_simple)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    // Test 1: Does Addrman respond correctly when empty.\n+    BOOST_CHECK(addrman.size() == 0);\n+    CAddrInfo addr_null = addrman.Select();\n+    BOOST_CHECK(addr_null.ToString() == \"[::]:0\");\n+\n+    // Test 2: Does Addrman::Add work as expected.\n+    CService addr1 = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+    CAddrInfo addr_ret1 = addrman.Select();\n+    BOOST_CHECK(addr_ret1.ToString() == \"250.1.1.1:8333\");\n+\n+    // Test 3: Does IP address deduplication work correctly. \n+    //  Expected dup IP should not be added.\n+    CService addr1_dup = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1_dup), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+\n+\n+    // Test 5: New table has one addr and we add a diff addr we should\n+    //  have two addrs.\n+    CService addr2 = CService(\"250.1.1.2:8333\");\n+    addrman.Add(CAddress(addr2), source);\n+    BOOST_CHECK(addrman.size() == 2);\n+\n+    // Test 6: AddrMan::Clear() should empty the new table. \n+    addrman.Clear();\n+    BOOST_CHECK(addrman.size() == 0);\n+    CAddrInfo addr_null2 = addrman.Select();\n+    BOOST_CHECK(addr_null2.ToString() == \"[::]:0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(addrman_ports)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    BOOST_CHECK(addrman.size() == 0);\n+\n+    // Test 7; Addr with same IP but diff port does not replace existing addr.\n+    CService addr1 = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+\n+    CService addr1_port = CService(\"250.1.1.1:8334\");\n+    addrman.Add(CAddress(addr1_port), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+    CAddrInfo addr_ret2 = addrman.Select();\n+    BOOST_CHECK(addr_ret2.ToString() == \"250.1.1.1:8333\");\n+\n+    // Test 8: Add same IP but diff port to tried table, it doesn't get added.\n+    //  Perhaps this is not ideal behavior but it is the current behavior.\n+    addrman.Good(CAddress(addr1_port));\n+    BOOST_CHECK(addrman.size() == 1);\n+    bool newOnly = true;\n+    CAddrInfo addr_ret3 = addrman.Select(newOnly);\n+    BOOST_CHECK(addr_ret3.ToString() == \"250.1.1.1:8333\");\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(addrman_select)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    // Test 9: Select from new with 1 addr in new.\n+    CService addr1 = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+\n+    bool newOnly = true;\n+    CAddrInfo addr_ret1 = addrman.Select(newOnly);\n+    BOOST_CHECK(addr_ret1.ToString() == \"250.1.1.1:8333\");\n+\n+\n+    // Test 10: move addr to tried, select from new expected nothing returned.\n+    addrman.Good(CAddress(addr1));\n+    BOOST_CHECK(addrman.size() == 1);\n+    CAddrInfo addr_ret2 = addrman.Select(newOnly);\n+    BOOST_CHECK(addr_ret2.ToString() == \"[::]:0\");\n+\n+    CAddrInfo addr_ret3 = addrman.Select();\n+    BOOST_CHECK(addr_ret3.ToString() == \"250.1.1.1:8333\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(addrman_new_collisions)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    BOOST_CHECK(addrman.size() == 0);\n+\n+    for (unsigned int i = 1; i < 4; i++){\n+        CService addr = CService(\"250.1.1.\"+boost::to_string(i));\n+        addrman.Add(CAddress(addr), source);\n+\n+        //Test 11: No collision in new table yet.\n+        BOOST_CHECK(addrman.size() == i);\n+    }\n+\n+    //Test 12: new table collision!\n+    CService addr1 = CService(\"250.1.1.4\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 3);\n+\n+    CService addr2 = CService(\"250.1.1.5\");\n+    addrman.Add(CAddress(addr2), source);\n+    BOOST_CHECK(addrman.size() == 4);\n+}\n+\n+BOOST_AUTO_TEST_CASE(addrman_tried_collisions)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    BOOST_CHECK(addrman.size() == 0);\n+\n+    for (unsigned int i = 1; i < 75; i++){\n+        CService addr = CService(\"250.1.1.\"+boost::to_string(i));\n+        addrman.Add(CAddress(addr), source);\n+        addrman.Good(CAddress(addr));\n+\n+        //Test 13: No collision in tried table yet.\n+        BOOST_TEST_MESSAGE(addrman.size());\n+        BOOST_CHECK(addrman.size() == i);\n+    }\n+\n+    //Test 14: tried table collision!\n+    CService addr1 = CService(\"250.1.1.76\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 74);\n+\n+    CService addr2 = CService(\"250.1.1.77\");\n+    addrman.Add(CAddress(addr2), source);\n+    BOOST_CHECK(addrman.size() == 75);\n+}\n+\n+\n+BOOST_AUTO_TEST_SUITE_END()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "35365321f38cdffe1107c01faea54bdaae525936",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTM2NTMyMWYzOGNkZmZlMTEwN2MwMWZhZWE1NGJkYWFlNTI1OTM2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T13:53:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T13:53:52Z"
      },
      "message": "Merge pull request #6721\n\nda47fe0 Add java-libbitcoinconsensus as example to documentation (dexX7)",
      "tree": {
        "sha": "d5d98578140a5f652e8ba51920756347f4dcfe83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5d98578140a5f652e8ba51920756347f4dcfe83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35365321f38cdffe1107c01faea54bdaae525936",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWBVHwAAoJEHSBCwEjRsmmq5oH/jRK1T3EfeYpmhpFW7CNeM9S\nnP9BO8r5kpgrgeZpC+geVMtTCxSAxtPe7u6CTWwl7gtDK+sYUM1VhbiXECWOii2j\nP7cGTQWqXebM+Jvg8OZar5OrNkc6enF13AQmKvmb1n0MaeTILnLt/BCY0yy+ZFWj\nHfwOh5Vcm87D3vKwjKM7dFONkOKQH360DZuKz3Axa1LAN2H9MZtzZmNncap+9a2W\neZ2hYMf7WEFF1xt/oaFOa2/ZWLXFZ3UGpnyM8lSEXbp9OV3plD18obCMShU5WeX4\nymwBb5XR2U7+UTzz0tAIm9+I5UoZr/BzojTN5HZlpr1uyN+0g/lhCTrF5xqTnmU=\n=LfNn\n-----END PGP SIGNATURE-----",
        "payload": "tree d5d98578140a5f652e8ba51920756347f4dcfe83\nparent 34dc03d8e05fa1429d6d543fdb8ee76f28f436ac\nparent da47fe01668369ef518aa8e69f354507f5316d8c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443189185 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443189232 +0200\n\nMerge pull request #6721\n\nda47fe0 Add java-libbitcoinconsensus as example to documentation (dexX7)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35365321f38cdffe1107c01faea54bdaae525936",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35365321f38cdffe1107c01faea54bdaae525936",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35365321f38cdffe1107c01faea54bdaae525936/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34dc03d8e05fa1429d6d543fdb8ee76f28f436ac"
      },
      {
        "sha": "da47fe01668369ef518aa8e69f354507f5316d8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da47fe01668369ef518aa8e69f354507f5316d8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da47fe01668369ef518aa8e69f354507f5316d8c"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f1448f72581c14a0f318dd1f8b18a012b300206d",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35365321f38cdffe1107c01faea54bdaae525936/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35365321f38cdffe1107c01faea54bdaae525936/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=35365321f38cdffe1107c01faea54bdaae525936",
        "patch": "@@ -40,3 +40,4 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n ### Example Implementations\n - [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n - [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n+- [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)"
      }
    ]
  },
  {
    "sha": "486270854ec0f89e798f2baff3fe01623a274ed4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODYyNzA4NTRlYzBmODllNzk4ZjJiYWZmM2ZlMDE2MjNhMjc0ZWQ0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T14:27:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T14:29:24Z"
      },
      "message": "Merge pull request #6619\n\n42cf089 depends: bump ccache to 3.2.3 (fanquake)\n888c595 depends: bump miniupnpc to 1.9.20150730 (fanquake)",
      "tree": {
        "sha": "41e681a1dd6f31e62ccd0724ba690192dec5e1fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41e681a1dd6f31e62ccd0724ba690192dec5e1fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/486270854ec0f89e798f2baff3fe01623a274ed4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWBVpEAAoJEHSBCwEjRsmmS9MH/0bmOWkbsCxmEpT5dQz/62/s\nFe3KOdQeQCK91MxSNe3EoZRGsMmdV54XDrkl3f8OEqBm+A2Dd5IrBBgZjJsc8Dc5\nzTtJ6abpqvjTwHWaP3lFJ+qly/6K3w3W+K9EsUXQvRPnRt72Ee0RVIhqNwzFSzlU\nxgpkNaj4i+oOLH8BY3J7j8O+JT+TxXYhJpf2w/W/mdkjT4dY7h7hNvjossYmzY0K\nMu3me4+gjzYxVFWNqpi0kwTSztXp9lkaNR/lzmSX+0Fk87P9/Vqwtkhj1CiHR7y1\n7WyKsr7dJetPiv1aYGDAfjWqRYBrQF5B6YNBvA2L3IcGhkVkHIx0GlWyj183HYo=\n=tPJf\n-----END PGP SIGNATURE-----",
        "payload": "tree 41e681a1dd6f31e62ccd0724ba690192dec5e1fd\nparent 35365321f38cdffe1107c01faea54bdaae525936\nparent 42cf08905f786ebd4acf74ca9d17984d8be0d32d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443191278 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443191364 +0200\n\nMerge pull request #6619\n\n42cf089 depends: bump ccache to 3.2.3 (fanquake)\n888c595 depends: bump miniupnpc to 1.9.20150730 (fanquake)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/486270854ec0f89e798f2baff3fe01623a274ed4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/486270854ec0f89e798f2baff3fe01623a274ed4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/486270854ec0f89e798f2baff3fe01623a274ed4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35365321f38cdffe1107c01faea54bdaae525936",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35365321f38cdffe1107c01faea54bdaae525936",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35365321f38cdffe1107c01faea54bdaae525936"
      },
      {
        "sha": "42cf08905f786ebd4acf74ca9d17984d8be0d32d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cf08905f786ebd4acf74ca9d17984d8be0d32d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42cf08905f786ebd4acf74ca9d17984d8be0d32d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ee1ee2f4b8e7b55d17583fc63ed19090835c4c21",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/486270854ec0f89e798f2baff3fe01623a274ed4/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/486270854ec0f89e798f2baff3fe01623a274ed4/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=486270854ec0f89e798f2baff3fe01623a274ed4",
        "patch": "@@ -1,8 +1,8 @@\n package=miniupnpc\n-$(package)_version=1.9.20150609\n+$(package)_version=1.9.20150730\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=86e6ccec5b660ba6889893d1f3fca21db087c6466b1a90f495a1f87ab1cd1c36\n+$(package)_sha256_hash=1d64fab1fd3b4c8545139341ba197f19329a863f4f21b578fc2a228ab586a604\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\""
      },
      {
        "sha": "317674f7955a0d662721ee51f7663289cc087d71",
        "filename": "depends/packages/native_ccache.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/486270854ec0f89e798f2baff3fe01623a274ed4/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/486270854ec0f89e798f2baff3fe01623a274ed4/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=486270854ec0f89e798f2baff3fe01623a274ed4",
        "patch": "@@ -1,8 +1,8 @@\n package=native_ccache\n-$(package)_version=3.2.2\n+$(package)_version=3.2.3\n $(package)_download_path=http://samba.org/ftp/ccache\n $(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=440f5e15141cc72d2bfff467c977020979810eb800882e3437ad1a7153cce7b2\n+$(package)_sha256_hash=b07165d4949d107d17f2f84b90b52953617bf1abbf249d5cc20636f43337c98c\n \n define $(package)_set_vars\n $(package)_config_opts="
      }
    ]
  },
  {
    "sha": "48efbdbe986355bd2478f0fdd366b20952fbf30a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGVmYmRiZTk4NjM1NWJkMjQ3OGYwZmRkMzY2YjIwOTUyZmJmMzBh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T17:11:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T17:19:07Z"
      },
      "message": "Merge pull request #5264\n\naf3208b Resolve issue 3166. These changes decode valid SIGHASH types on signatures in assembly (asm) representations of scriptSig scripts. This squashed commit incorporates substantial helpful feedback from jtimon, laanwj, and sipa. (mruddy)",
      "tree": {
        "sha": "b4581561aa9d51763bda985063d0ce4913cef19d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4581561aa9d51763bda985063d0ce4913cef19d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48efbdbe986355bd2478f0fdd366b20952fbf30a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWBYILAAoJEHSBCwEjRsmmEqYH/ipbSmQ8WK+DU/T0cUMjSiJE\nIp6qc3hFFvhuO7MLrSAFcNO5usiarMJj6bXVc83US39tuaqH+v0XswJnuz65/jRa\nQDug3uLKo82guhfIiQHlw+qU5K9axraJ3hOEiNnsiibJjFQBnNsLVBGRIV35JAma\n7IQpoBNCpfyYP+rtvK72TgH5leERI6ZmP5yhYkJbYbc3xGxRCmMi1EBykrhYUEIh\n4l/rOc5P/A7aoHjf6Z87BL9Zn/81IrNmZ+ZW8OAUXDEr92xz5SwLkpFwhbrshLmd\nHyDdE8GzLKqvOSoDt97XyNtwePxMxiFxPsSMLsZNJqu3ztTO+hbqTMtVRhkdy1s=\n=YC5X\n-----END PGP SIGNATURE-----",
        "payload": "tree b4581561aa9d51763bda985063d0ce4913cef19d\nparent 486270854ec0f89e798f2baff3fe01623a274ed4\nparent af3208bfa6967d6b35aecf0ba35d9d6bf0f8317e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443201086 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443201547 +0200\n\nMerge pull request #5264\n\naf3208b Resolve issue 3166. These changes decode valid SIGHASH types on signatures in assembly (asm) representations of scriptSig scripts. This squashed commit incorporates substantial helpful feedback from jtimon, laanwj, and sipa. (mruddy)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48efbdbe986355bd2478f0fdd366b20952fbf30a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48efbdbe986355bd2478f0fdd366b20952fbf30a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48efbdbe986355bd2478f0fdd366b20952fbf30a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "486270854ec0f89e798f2baff3fe01623a274ed4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/486270854ec0f89e798f2baff3fe01623a274ed4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/486270854ec0f89e798f2baff3fe01623a274ed4"
      },
      {
        "sha": "af3208bfa6967d6b35aecf0ba35d9d6bf0f8317e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af3208bfa6967d6b35aecf0ba35d9d6bf0f8317e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af3208bfa6967d6b35aecf0ba35d9d6bf0f8317e"
      }
    ],
    "stats": {
      "total": 255,
      "additions": 206,
      "deletions": 49
    },
    "files": [
      {
        "sha": "85cdabc7e31afff61c14968328faf769263e3372",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -124,6 +124,33 @@ git merge commit are mentioned.\n \n ### RPC and REST\n \n+Asm representations of scriptSig signatures now contain SIGHASH type decodes\n+----------------------------------------------------------------------------\n+\n+The `asm` property of each scriptSig now contains the decoded signature hash\n+type for each signature that provides a valid defined hash type.\n+\n+The following items contain assembly representations of scriptSig signatures\n+and are affected by this change:\n+\n+- RPC `getrawtransaction`\n+- RPC `decoderawtransaction`\n+- REST `/rest/tx/` (JSON format)\n+- REST `/rest/block/` (JSON format when including extended tx details)\n+- `bitcoin-tx -json`\n+\n+For example, the `scriptSig.asm` property of a transaction input that\n+previously showed an assembly representation of:\n+\n+    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c509001\n+\n+now shows as:\n+\n+    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090[ALL]\n+\n+Note that the output of the RPC `decodescript` did not change because it is\n+configured specifically to process scriptPubKey and not scriptSig scripts.\n+\n ### Configuration and command-line options\n \n ### Block and transaction handling"
      },
      {
        "sha": "4bca62338046950ea2f712e8d15034d906f13603",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 71,
        "deletions": 1,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -5,6 +5,9 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n+from test_framework.mininode import *\n+from binascii import hexlify, unhexlify\n+from cStringIO import StringIO\n \n class DecodeScriptTest(BitcoinTestFramework):\n     \"\"\"Tests decoding scripts via RPC command \"decodescript\".\"\"\"\n@@ -107,10 +110,77 @@ def decodescript_script_pub_key(self):\n         rpc_result = self.nodes[0].decodescript('63' + push_public_key + 'ad670320a107b17568' + push_public_key + 'ac')\n         assert_equal('OP_IF ' + public_key + ' OP_CHECKSIGVERIFY OP_ELSE 500000 OP_NOP2 OP_DROP OP_ENDIF ' + public_key + ' OP_CHECKSIG', rpc_result['asm'])\n \n+    def decoderawtransaction_asm_sighashtype(self):\n+        \"\"\"Tests decoding scripts via RPC command \"decoderawtransaction\".\n+\n+        This test is in with the \"decodescript\" tests because they are testing the same \"asm\" script decodes.\n+        \"\"\"\n+\n+        # this test case uses a random plain vanilla mainnet transaction with a single P2PKH input and output\n+        tx = '0100000001696a20784a2c70143f634e95227dbdfdf0ecd51647052e70854512235f5986ca010000008a47304402207174775824bec6c2700023309a168231ec80b82c6069282f5133e6f11cbb04460220570edc55c7c5da2ca687ebd0372d3546ebc3f810516a002350cac72dfe192dfb014104d3f898e6487787910a690410b7a917ef198905c27fb9d3b0a42da12aceae0544fc7088d239d9a48f2828a15a09e84043001f27cc80d162cb95404e1210161536ffffffff0100e1f505000000001976a914eb6c6e0cdb2d256a32d97b8df1fc75d1920d9bca88ac00000000'\n+        rpc_result = self.nodes[0].decoderawtransaction(tx)\n+        assert_equal('304402207174775824bec6c2700023309a168231ec80b82c6069282f5133e6f11cbb04460220570edc55c7c5da2ca687ebd0372d3546ebc3f810516a002350cac72dfe192dfb[ALL] 04d3f898e6487787910a690410b7a917ef198905c27fb9d3b0a42da12aceae0544fc7088d239d9a48f2828a15a09e84043001f27cc80d162cb95404e1210161536', rpc_result['vin'][0]['scriptSig']['asm'])\n+\n+        # this test case uses a mainnet transaction that has a P2SH input and both P2PKH and P2SH outputs.\n+        # it's from James D'Angelo's awesome introductory videos about multisig: https://www.youtube.com/watch?v=zIbUSaZBJgU and https://www.youtube.com/watch?v=OSA1pwlaypc\n+        # verify that we have not altered scriptPubKey decoding.\n+        tx = '01000000018d1f5635abd06e2c7e2ddf58dc85b3de111e4ad6e0ab51bb0dcf5e84126d927300000000fdfe0000483045022100ae3b4e589dfc9d48cb82d41008dc5fa6a86f94d5c54f9935531924602730ab8002202f88cf464414c4ed9fa11b773c5ee944f66e9b05cc1e51d97abc22ce098937ea01483045022100b44883be035600e9328a01b66c7d8439b74db64187e76b99a68f7893b701d5380220225bf286493e4c4adcf928c40f785422572eb232f84a0b83b0dea823c3a19c75014c695221020743d44be989540d27b1b4bbbcfd17721c337cb6bc9af20eb8a32520b393532f2102c0120a1dda9e51a938d39ddd9fe0ebc45ea97e1d27a7cbd671d5431416d3dd87210213820eb3d5f509d7438c9eeecb4157b2f595105e7cd564b3cdbb9ead3da41eed53aeffffffff02611e0000000000001976a914dc863734a218bfe83ef770ee9d41a27f824a6e5688acee2a02000000000017a9142a5edea39971049a540474c6a99edf0aa4074c588700000000'\n+        rpc_result = self.nodes[0].decoderawtransaction(tx)\n+        assert_equal('8e3730608c3b0bb5df54f09076e196bc292a8e39a78e73b44b6ba08c78f5cbb0', rpc_result['txid'])\n+        assert_equal('0 3045022100ae3b4e589dfc9d48cb82d41008dc5fa6a86f94d5c54f9935531924602730ab8002202f88cf464414c4ed9fa11b773c5ee944f66e9b05cc1e51d97abc22ce098937ea[ALL] 3045022100b44883be035600e9328a01b66c7d8439b74db64187e76b99a68f7893b701d5380220225bf286493e4c4adcf928c40f785422572eb232f84a0b83b0dea823c3a19c75[ALL] 5221020743d44be989540d27b1b4bbbcfd17721c337cb6bc9af20eb8a32520b393532f2102c0120a1dda9e51a938d39ddd9fe0ebc45ea97e1d27a7cbd671d5431416d3dd87210213820eb3d5f509d7438c9eeecb4157b2f595105e7cd564b3cdbb9ead3da41eed53ae', rpc_result['vin'][0]['scriptSig']['asm'])\n+        assert_equal('OP_DUP OP_HASH160 dc863734a218bfe83ef770ee9d41a27f824a6e56 OP_EQUALVERIFY OP_CHECKSIG', rpc_result['vout'][0]['scriptPubKey']['asm'])\n+        assert_equal('OP_HASH160 2a5edea39971049a540474c6a99edf0aa4074c58 OP_EQUAL', rpc_result['vout'][1]['scriptPubKey']['asm'])\n+        txSave = CTransaction()\n+        txSave.deserialize(StringIO(unhexlify(tx)))\n+\n+        # make sure that a specifically crafted op_return value will not pass all the IsDERSignature checks and then get decoded as a sighash type\n+        tx = '01000000015ded05872fdbda629c7d3d02b194763ce3b9b1535ea884e3c8e765d42e316724020000006b48304502204c10d4064885c42638cbff3585915b322de33762598321145ba033fc796971e2022100bb153ad3baa8b757e30a2175bd32852d2e1cb9080f84d7e32fcdfd667934ef1b012103163c0ff73511ea1743fb5b98384a2ff09dd06949488028fd819f4d83f56264efffffffff0200000000000000000b6a0930060201000201000180380100000000001976a9141cabd296e753837c086da7a45a6c2fe0d49d7b7b88ac00000000'\n+        rpc_result = self.nodes[0].decoderawtransaction(tx)\n+        assert_equal('OP_RETURN 300602010002010001', rpc_result['vout'][0]['scriptPubKey']['asm'])\n+\n+        # verify that we have not altered scriptPubKey processing even of a specially crafted P2PKH pubkeyhash and P2SH redeem script hash that is made to pass the der signature checks\n+        tx = '01000000018d1f5635abd06e2c7e2ddf58dc85b3de111e4ad6e0ab51bb0dcf5e84126d927300000000fdfe0000483045022100ae3b4e589dfc9d48cb82d41008dc5fa6a86f94d5c54f9935531924602730ab8002202f88cf464414c4ed9fa11b773c5ee944f66e9b05cc1e51d97abc22ce098937ea01483045022100b44883be035600e9328a01b66c7d8439b74db64187e76b99a68f7893b701d5380220225bf286493e4c4adcf928c40f785422572eb232f84a0b83b0dea823c3a19c75014c695221020743d44be989540d27b1b4bbbcfd17721c337cb6bc9af20eb8a32520b393532f2102c0120a1dda9e51a938d39ddd9fe0ebc45ea97e1d27a7cbd671d5431416d3dd87210213820eb3d5f509d7438c9eeecb4157b2f595105e7cd564b3cdbb9ead3da41eed53aeffffffff02611e0000000000001976a914301102070101010101010102060101010101010188acee2a02000000000017a91430110207010101010101010206010101010101018700000000'\n+        rpc_result = self.nodes[0].decoderawtransaction(tx)\n+        assert_equal('OP_DUP OP_HASH160 3011020701010101010101020601010101010101 OP_EQUALVERIFY OP_CHECKSIG', rpc_result['vout'][0]['scriptPubKey']['asm'])\n+        assert_equal('OP_HASH160 3011020701010101010101020601010101010101 OP_EQUAL', rpc_result['vout'][1]['scriptPubKey']['asm'])\n+\n+        # some more full transaction tests of varying specific scriptSigs. used instead of\n+        # tests in decodescript_script_sig because the decodescript RPC is specifically\n+        # for working on scriptPubKeys (argh!).\n+        push_signature = hexlify(txSave.vin[0].scriptSig)[2:(0x48*2+4)]\n+        signature = push_signature[2:]\n+        der_signature = signature[:-2]\n+        signature_sighash_decoded = der_signature + '[ALL]'\n+        signature_2 = der_signature + '82'\n+        push_signature_2 = '48' + signature_2\n+        signature_2_sighash_decoded = der_signature + '[NONE|ANYONECANPAY]'\n+\n+        # 1) P2PK scriptSig\n+        txSave.vin[0].scriptSig = unhexlify(push_signature)\n+        rpc_result = self.nodes[0].decoderawtransaction(hexlify(txSave.serialize()))\n+        assert_equal(signature_sighash_decoded, rpc_result['vin'][0]['scriptSig']['asm'])\n+\n+        # make sure that the sighash decodes come out correctly for a more complex / lesser used case.\n+        txSave.vin[0].scriptSig = unhexlify(push_signature_2)\n+        rpc_result = self.nodes[0].decoderawtransaction(hexlify(txSave.serialize()))\n+        assert_equal(signature_2_sighash_decoded, rpc_result['vin'][0]['scriptSig']['asm'])\n+\n+        # 2) multisig scriptSig\n+        txSave.vin[0].scriptSig = unhexlify('00' + push_signature + push_signature_2)\n+        rpc_result = self.nodes[0].decoderawtransaction(hexlify(txSave.serialize()))\n+        assert_equal('0 ' + signature_sighash_decoded + ' ' + signature_2_sighash_decoded, rpc_result['vin'][0]['scriptSig']['asm'])\n+\n+        # 3) test a scriptSig that contains more than push operations.\n+        # in fact, it contains an OP_RETURN with data specially crafted to cause improper decode if the code does not catch it.\n+        txSave.vin[0].scriptSig = unhexlify('6a143011020701010101010101020601010101010101')\n+        rpc_result = self.nodes[0].decoderawtransaction(hexlify(txSave.serialize()))\n+        print(hexlify('636174'))\n+        assert_equal('OP_RETURN 3011020701010101010101020601010101010101', rpc_result['vin'][0]['scriptSig']['asm'])\n+\n     def run_test(self):\n         self.decodescript_script_sig()\n         self.decodescript_script_pub_key()\n+        self.decoderawtransaction_asm_sighashtype()\n \n if __name__ == '__main__':\n     DecodeScriptTest().main()\n-"
      },
      {
        "sha": "5beab265bc93ffdf0babaa64596fe21b2836d450",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -417,8 +417,8 @@ static void MutateTxSign(CMutableTransaction& tx, const string& flagStr)\n                 CCoinsModifier coins = view.ModifyCoins(txid);\n                 if (coins->IsAvailable(nOut) && coins->vout[nOut].scriptPubKey != scriptPubKey) {\n                     string err(\"Previous output scriptPubKey mismatch:\\n\");\n-                    err = err + coins->vout[nOut].scriptPubKey.ToString() + \"\\nvs:\\n\"+\n-                        scriptPubKey.ToString();\n+                    err = err + ScriptToAsmStr(coins->vout[nOut].scriptPubKey) + \"\\nvs:\\n\"+\n+                        ScriptToAsmStr(scriptPubKey);\n                     throw runtime_error(err);\n                 }\n                 if ((unsigned int)nOut >= coins->vout.size())"
      },
      {
        "sha": "ba5b4e6487c9e16914ed573eb6b5c0dab559f449",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -16,6 +16,7 @@ class UniValue;\n \n // core_read.cpp\n extern CScript ParseScript(const std::string& s);\n+extern std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode = false);\n extern bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx);\n extern bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n extern uint256 ParseHashUV(const UniValue& v, const std::string& strName);\n@@ -25,8 +26,7 @@ extern std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::strin\n // core_write.cpp\n extern std::string FormatScript(const CScript& script);\n extern std::string EncodeHexTx(const CTransaction& tx);\n-extern void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n-                        UniValue& out, bool fIncludeHex);\n+extern void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n extern void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "2ad42baddf33b17f5267a1568c714e3a25298679",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 2,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -15,6 +15,7 @@\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\"\n \n+#include <boost/assign/list_of.hpp>\n #include <boost/foreach.hpp>\n \n using namespace std;\n@@ -54,6 +55,67 @@ string FormatScript(const CScript& script)\n     return ret.substr(0, ret.size() - 1);\n }\n \n+const map<unsigned char, string> mapSigHashTypes =\n+    boost::assign::map_list_of\n+    (static_cast<unsigned char>(SIGHASH_ALL), string(\"ALL\"))\n+    (static_cast<unsigned char>(SIGHASH_ALL|SIGHASH_ANYONECANPAY), string(\"ALL|ANYONECANPAY\"))\n+    (static_cast<unsigned char>(SIGHASH_NONE), string(\"NONE\"))\n+    (static_cast<unsigned char>(SIGHASH_NONE|SIGHASH_ANYONECANPAY), string(\"NONE|ANYONECANPAY\"))\n+    (static_cast<unsigned char>(SIGHASH_SINGLE), string(\"SINGLE\"))\n+    (static_cast<unsigned char>(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY), string(\"SINGLE|ANYONECANPAY\"))\n+    ;\n+\n+/**\n+ * Create the assembly string representation of a CScript object.\n+ * @param[in] script    CScript object to convert into the asm string representation.\n+ * @param[in] fAttemptSighashDecode    Whether to attempt to decode sighash types on data within the script that matches the format\n+ *                                     of a signature. Only pass true for scripts you believe could contain signatures. For example,\n+ *                                     pass false, or omit the this argument (defaults to false), for scriptPubKeys.\n+ */\n+string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode)\n+{\n+    string str;\n+    opcodetype opcode;\n+    vector<unsigned char> vch;\n+    CScript::const_iterator pc = script.begin();\n+    while (pc < script.end()) {\n+        if (!str.empty()) {\n+            str += \" \";\n+        }\n+        if (!script.GetOp(pc, opcode, vch)) {\n+            str += \"[error]\";\n+            return str;\n+        }\n+        if (0 <= opcode && opcode <= OP_PUSHDATA4) {\n+            if (vch.size() <= static_cast<vector<unsigned char>::size_type>(4)) {\n+                str += strprintf(\"%d\", CScriptNum(vch, false).getint());\n+            } else {\n+                // the IsUnspendable check makes sure not to try to decode OP_RETURN data that may match the format of a signature\n+                if (fAttemptSighashDecode && !script.IsUnspendable()) {\n+                    string strSigHashDecode;\n+                    // goal: only attempt to decode a defined sighash type from data that looks like a signature within a scriptSig.\n+                    // this won't decode correctly formatted public keys in Pubkey or Multisig scripts due to\n+                    // the restrictions on the pubkey formats (see IsCompressedOrUncompressedPubKey) being incongruous with the\n+                    // checks in CheckSignatureEncoding.\n+                    if (CheckSignatureEncoding(vch, SCRIPT_VERIFY_STRICTENC, NULL)) {\n+                        const unsigned char chSigHashType = vch.back();\n+                        if (mapSigHashTypes.count(chSigHashType)) {\n+                            strSigHashDecode = \"[\" + mapSigHashTypes.find(chSigHashType)->second + \"]\";\n+                            vch.pop_back(); // remove the sighash type byte. it will be replaced by the decode.\n+                        }\n+                    }\n+                    str += HexStr(vch) + strSigHashDecode;\n+                } else {\n+                    str += HexStr(vch);\n+                }\n+            }\n+        } else {\n+            str += GetOpName(opcode);\n+        }\n+    }\n+    return str;\n+}\n+\n string EncodeHexTx(const CTransaction& tx)\n {\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n@@ -68,7 +130,7 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n     vector<CTxDestination> addresses;\n     int nRequired;\n \n-    out.pushKV(\"asm\", scriptPubKey.ToString());\n+    out.pushKV(\"asm\", ScriptToAsmStr(scriptPubKey));\n     if (fIncludeHex)\n         out.pushKV(\"hex\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n \n@@ -101,7 +163,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry)\n             in.pushKV(\"txid\", txin.prevout.hash.GetHex());\n             in.pushKV(\"vout\", (int64_t)txin.prevout.n);\n             UniValue o(UniValue::VOBJ);\n-            o.pushKV(\"asm\", txin.scriptSig.ToString());\n+            o.pushKV(\"asm\", ScriptToAsmStr(txin.scriptSig, true));\n             o.pushKV(\"hex\", HexStr(txin.scriptSig.begin(), txin.scriptSig.end()));\n             in.pushKV(\"scriptSig\", o);\n         }"
      },
      {
        "sha": "46d3cbbe2e8ab1ba8bcf139cd58e207d08233e63",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -36,7 +36,7 @@ std::string CTxIn::ToString() const\n     if (prevout.IsNull())\n         str += strprintf(\", coinbase %s\", HexStr(scriptSig));\n     else\n-        str += strprintf(\", scriptSig=%s\", scriptSig.ToString().substr(0,24));\n+        str += strprintf(\", scriptSig=%s\", HexStr(scriptSig).substr(0, 24));\n     if (nSequence != std::numeric_limits<unsigned int>::max())\n         str += strprintf(\", nSequence=%u\", nSequence);\n     str += \")\";\n@@ -56,7 +56,7 @@ uint256 CTxOut::GetHash() const\n \n std::string CTxOut::ToString() const\n {\n-    return strprintf(\"CTxOut(nValue=%d.%08d, scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30));\n+    return strprintf(\"CTxOut(nValue=%d.%08d, scriptPubKey=%s)\", nValue / COIN, nValue % COIN, HexStr(scriptPubKey).substr(0, 30));\n }\n \n CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) {}"
      },
      {
        "sha": "fa3150cd7f9bd7ac1180221252e628229f95448a",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -41,7 +41,7 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fInclud\n     vector<CTxDestination> addresses;\n     int nRequired;\n \n-    out.push_back(Pair(\"asm\", scriptPubKey.ToString()));\n+    out.push_back(Pair(\"asm\", ScriptToAsmStr(scriptPubKey)));\n     if (fIncludeHex)\n         out.push_back(Pair(\"hex\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n \n@@ -73,7 +73,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n             in.push_back(Pair(\"txid\", txin.prevout.hash.GetHex()));\n             in.push_back(Pair(\"vout\", (int64_t)txin.prevout.n));\n             UniValue o(UniValue::VOBJ);\n-            o.push_back(Pair(\"asm\", txin.scriptSig.ToString()));\n+            o.push_back(Pair(\"asm\", ScriptToAsmStr(txin.scriptSig, true)));\n             o.push_back(Pair(\"hex\", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));\n             in.push_back(Pair(\"scriptSig\", o));\n         }\n@@ -676,8 +676,8 @@ UniValue signrawtransaction(const UniValue& params, bool fHelp)\n                 CCoinsModifier coins = view.ModifyCoins(txid);\n                 if (coins->IsAvailable(nOut) && coins->vout[nOut].scriptPubKey != scriptPubKey) {\n                     string err(\"Previous output scriptPubKey mismatch:\\n\");\n-                    err = err + coins->vout[nOut].scriptPubKey.ToString() + \"\\nvs:\\n\"+\n-                        scriptPubKey.ToString();\n+                    err = err + ScriptToAsmStr(coins->vout[nOut].scriptPubKey) + \"\\nvs:\\n\"+\n+                        ScriptToAsmStr(scriptPubKey);\n                     throw JSONRPCError(RPC_DESERIALIZATION_ERROR, err);\n                 }\n                 if ((unsigned int)nOut >= coins->vout.size())"
      },
      {
        "sha": "d3aec26020b90f3cb2311d15bbfdc292c8bc7a4c",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -188,7 +188,7 @@ bool static IsDefinedHashtypeSignature(const valtype &vchSig) {\n     return true;\n }\n \n-bool static CheckSignatureEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {\n+bool CheckSignatureEncoding(const vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror) {\n     // Empty signature. Not strictly DER encoded, but allowed to provide a\n     // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n     if (vchSig.size() == 0) {"
      },
      {
        "sha": "213e8c765163a86e9a12f2a2162c1455bb3df60b",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -83,6 +83,8 @@ enum\n     SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),\n };\n \n+bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);\n+\n uint256 SignatureHash(const CScript &scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType);\n \n class BaseSignatureChecker"
      },
      {
        "sha": "58dbade0e244a6ba882014767dc6cad8267ec88f",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -8,16 +8,6 @@\n #include \"tinyformat.h\"\n #include \"utilstrencodings.h\"\n \n-namespace {\n-inline std::string ValueString(const std::vector<unsigned char>& vch)\n-{\n-    if (vch.size() <= 4)\n-        return strprintf(\"%d\", CScriptNum(vch, false).getint());\n-    else\n-        return HexStr(vch);\n-}\n-} // anon namespace\n-\n using namespace std;\n \n const char* GetOpName(opcodetype opcode)\n@@ -237,26 +227,3 @@ bool CScript::IsPushOnly() const\n     }\n     return true;\n }\n-\n-std::string CScript::ToString() const\n-{\n-    std::string str;\n-    opcodetype opcode;\n-    std::vector<unsigned char> vch;\n-    const_iterator pc = begin();\n-    while (pc < end())\n-    {\n-        if (!str.empty())\n-            str += \" \";\n-        if (!GetOp(pc, opcode, vch))\n-        {\n-            str += \"[error]\";\n-            return str;\n-        }\n-        if (0 <= opcode && opcode <= OP_PUSHDATA4)\n-            str += ValueString(vch);\n-        else\n-            str += GetOpName(opcode);\n-    }\n-    return str;\n-}"
      },
      {
        "sha": "f0725bbbf63a6c1acf58821824f1cec2cade75bf",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -601,7 +601,6 @@ class CScript : public std::vector<unsigned char>\n         return (size() > 0 && *begin() == OP_RETURN);\n     }\n \n-    std::string ToString() const;\n     void clear()\n     {\n         // The default std::vector::clear() does not release memory."
      },
      {
        "sha": "225da0801a1e4abf67ae1ebb7eb57ee109b5542e",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 1,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48efbdbe986355bd2478f0fdd366b20952fbf30a/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "patch": "@@ -840,7 +840,7 @@ BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG23)\n     CScript badsig6 = sign_multisig(scriptPubKey23, keys, txTo23);\n     BOOST_CHECK(!VerifyScript(badsig6, scriptPubKey23, flags, MutableTransactionSignatureChecker(&txTo23, 0), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_INVALID_STACK_OPERATION, ScriptErrorString(err));\n-}    \n+}\n \n BOOST_AUTO_TEST_CASE(script_combineSigs)\n {\n@@ -983,4 +983,34 @@ BOOST_AUTO_TEST_CASE(script_IsPushOnly_on_invalid_scripts)\n     BOOST_CHECK(!CScript(direct, direct+sizeof(direct)).IsPushOnly());\n }\n \n+BOOST_AUTO_TEST_CASE(script_GetScriptAsm)\n+{\n+    BOOST_CHECK_EQUAL(\"OP_NOP2\", ScriptToAsmStr(CScript() << OP_NOP2, true));\n+    BOOST_CHECK_EQUAL(\"OP_NOP2\", ScriptToAsmStr(CScript() << OP_CHECKLOCKTIMEVERIFY, true));\n+    BOOST_CHECK_EQUAL(\"OP_NOP2\", ScriptToAsmStr(CScript() << OP_NOP2));\n+    BOOST_CHECK_EQUAL(\"OP_NOP2\", ScriptToAsmStr(CScript() << OP_CHECKLOCKTIMEVERIFY));\n+\n+    string derSig(\"304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090\");\n+    string pubKey(\"03b0da749730dc9b4b1f4a14d6902877a92541f5368778853d9c4a0cb7802dcfb2\");\n+    vector<unsigned char> vchPubKey = ToByteVector(ParseHex(pubKey));\n+\n+    BOOST_CHECK_EQUAL(derSig + \"00 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"00\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"80 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"80\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"[ALL] \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"01\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"[NONE] \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"02\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"[SINGLE] \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"03\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"[ALL|ANYONECANPAY] \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"81\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"[NONE|ANYONECANPAY] \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"82\")) << vchPubKey, true));\n+    BOOST_CHECK_EQUAL(derSig + \"[SINGLE|ANYONECANPAY] \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey, true));\n+\n+    BOOST_CHECK_EQUAL(derSig + \"00 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"00\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"80 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"80\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"01 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"01\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"02 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"02\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"03 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"03\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"81 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"81\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"82 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"82\")) << vchPubKey));\n+    BOOST_CHECK_EQUAL(derSig + \"83 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey));\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGNhODY4ZGZlNGU5MmJjZmI2NWYzODA3NGNiYzgxMjYwYzBmODA3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-25T20:10:45Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-25T20:10:45Z"
      },
      "message": "Use standard license names in contrib/debian/copyright",
      "tree": {
        "sha": "005f999ceecf647953524cc9abc1f7413d40ba7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/005f999ceecf647953524cc9abc1f7413d40ba7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ca868dfe4e92bcfb65f38074cbc81260c0f807/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48efbdbe986355bd2478f0fdd366b20952fbf30a"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "002df55786e0429d8c77e3d9105df24ad6096832",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ca868dfe4e92bcfb65f38074cbc81260c0f807/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ca868dfe4e92bcfb65f38074cbc81260c0f807/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
        "patch": "@@ -6,7 +6,7 @@ Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n Copyright: 2009-2015, Bitcoin Core Developers\n-License: MIT/Expat\n+License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n@@ -45,19 +45,19 @@ Files: src/qt/res/icons/add.png,\n        src/qt/res/icons/warning.png\n Copyright: Stephen Hutchings (and more)\n            http://typicons.com\n-License: MIT/Expat\n+License: Expat\n Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n        src/qt/res/src/connect-*.svg\n Copyright: Marco Falke\n-License: MIT/Expat\n+License: Expat\n Comment: Inspired by Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n Copyright: Jonas Schnelli\n-License: MIT/Expat\n+License: Expat\n Comment:\n \n Files: src/qt/res/icons/clock*.png\n@@ -68,19 +68,19 @@ Files: src/qt/res/icons/clock*.png\n        src/qt/res/src/tx_*.svg\n        src/qt/res/src/verify.svg\n Copyright: Stephan Hutching, Jonas Schnelli\n-License: MIT/Expat\n+License: Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n        src/qt/res/icons/bitcoin.*\n        share/pixmaps/bitcoin*\n        src/qt/res/src/bitcoin.svg\n Copyright: Bitboy, Jonas Schnelli\n-License: PUB-DOM\n+License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n \n-License: MIT/Expat\n+License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n@@ -128,5 +128,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: PUB-DOM\n+License: public-domain\n  This work is in the public domain."
      }
    ]
  },
  {
    "sha": "71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MWFmYzY4N2U2ZmJkOWZlMzA1ZjBjZWJlOGY2ZjdmMjhmYjk1OWFi",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-25T20:35:23Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-25T20:35:23Z"
      },
      "message": "Update debian/copyright format version to 1.0",
      "tree": {
        "sha": "c1f3ce4bd197045070c1be6a99645b3b4e2a8c98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1f3ce4bd197045070c1be6a99645b3b4e2a8c98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ca868dfe4e92bcfb65f38074cbc81260c0f807",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4ca868dfe4e92bcfb65f38074cbc81260c0f807"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "66ea148e659f4b342aa842258a35e9a5afb1ff3f",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
        "patch": "@@ -1,4 +1,4 @@\n-Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net"
      }
    ]
  },
  {
    "sha": "023919b8c2c33b9143699c493bcd3ca5c021983b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjM5MTliOGMyYzMzYjkxNDM2OTljNDkzYmNkM2NhNWMwMjE5ODNi",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-25T22:59:26Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-25T23:00:07Z"
      },
      "message": "Fix debian/copyright list to be non-comma-separated.",
      "tree": {
        "sha": "3efb6a62a3b6b92d673d94d81c96de2f659d4341",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3efb6a62a3b6b92d673d94d81c96de2f659d4341"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/023919b8c2c33b9143699c493bcd3ca5c021983b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/023919b8c2c33b9143699c493bcd3ca5c021983b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/023919b8c2c33b9143699c493bcd3ca5c021983b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/023919b8c2c33b9143699c493bcd3ca5c021983b/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/71afc687e6fbd9fe305f0cebe8f6f7f28fb959ab"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "83ce560a79b5264956429bdac905b08da68b0174",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/023919b8c2c33b9143699c493bcd3ca5c021983b/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/023919b8c2c33b9143699c493bcd3ca5c021983b/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=023919b8c2c33b9143699c493bcd3ca5c021983b",
        "patch": "@@ -19,29 +19,29 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/add.png,\n-       src/qt/res/icons/address-book.png,\n-       src/qt/res/icons/configure.png,\n-       src/qt/res/icons/debugwindow.png,\n-       src/qt/res/icons/edit.png,\n-       src/qt/res/icons/editcopy.png,\n-       src/qt/res/icons/editpaste.png,\n-       src/qt/res/icons/export.png,\n-       src/qt/res/icons/eye.png,\n-       src/qt/res/icons/filesave.png,\n-       src/qt/res/icons/history.png,\n-       src/qt/res/icons/info.png,\n-       src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png,\n-       src/qt/res/icons/open.png,\n-       src/qt/res/icons/overview.png,\n-       src/qt/res/icons/quit.png,\n-       src/qt/res/icons/receive.png,\n-       src/qt/res/icons/remove.png,\n-       src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png,\n-       src/qt/res/icons/transaction*.png,\n-       src/qt/res/icons/tx_output.png,\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/configure.png\n+       src/qt/res/icons/debugwindow.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/filesave.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/info.png\n+       src/qt/res/icons/key.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/open.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/quit.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n        src/qt/res/icons/warning.png\n Copyright: Stephen Hutchings (and more)\n            http://typicons.com"
      }
    ]
  },
  {
    "sha": "06d92d71a2ef414543940fd6ef1080176eb455bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmQ5MmQ3MWEyZWY0MTQ1NDM5NDBmZDZlZjEwODAxNzZlYjQ1NWJi",
    "commit": {
      "author": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-09-24T13:28:07Z"
      },
      "committer": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-09-26T08:03:47Z"
      },
      "message": "Add CONTRIBUTING.md",
      "tree": {
        "sha": "fd5d9e96923ec22d197d66d4514a7d2ce8267788",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd5d9e96923ec22d197d66d4514a7d2ce8267788"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06d92d71a2ef414543940fd6ef1080176eb455bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d92d71a2ef414543940fd6ef1080176eb455bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06d92d71a2ef414543940fd6ef1080176eb455bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d92d71a2ef414543940fd6ef1080176eb455bb/comments",
    "author": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef4945f2218789d521da81fa9348a85eaef24b6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef4945f2218789d521da81fa9348a85eaef24b6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef4945f2218789d521da81fa9348a85eaef24b6f"
      }
    ],
    "stats": {
      "total": 149,
      "additions": 118,
      "deletions": 31
    },
    "files": [
      {
        "sha": "572d166b74824d2d3e26231ca1466eee518bfed5",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d92d71a2ef414543940fd6ef1080176eb455bb/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d92d71a2ef414543940fd6ef1080176eb455bb/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=06d92d71a2ef414543940fd6ef1080176eb455bb",
        "patch": "@@ -0,0 +1,107 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches\n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    Net: Automatically create hidden service, listen on Tor\n+    Qt: Add feed bump button\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Nit refers to trivial, often non-blocking issues.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Bitcoin Core release."
      },
      {
        "sha": "baf04574189d6ccb8c446814c783f4b865fc59d6",
        "filename": "README.md",
        "status": "modified",
        "additions": 9,
        "deletions": 16,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d92d71a2ef414543940fd6ef1080176eb455bb/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d92d71a2ef414543940fd6ef1080176eb455bb/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=06d92d71a2ef414543940fd6ef1080176eb455bb",
        "patch": "@@ -23,28 +23,21 @@ License\n Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see http://opensource.org/licenses/MIT.\n \n-Development process\n+Development Process\n -------------------\n \n-Developers work in their own trees, then submit pull requests when they think\n-their feature or bug fix is ready.\n-\n-If it is a simple/trivial/non-controversial change, then one of the Bitcoin\n-development team members simply pulls it.\n-\n-If it is a *more complicated or potentially controversial* change, then the patch\n-submitter will be asked to start a discussion (if they haven't already) on the\n-[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-\n-The patch will be accepted if there is broad consensus that it is a good thing.\n-Developers should expect to rework and resubmit patches if the code doesn't\n-match the project's coding conventions (see [doc/developer-notes.md](doc/developer-notes.md)) or are\n-controversial.\n-\n The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n regularly to indicate new official, stable release versions of Bitcoin.\n \n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial changes before working\n+on a patch set.\n+\n+Developer IRC can be found on Freenode at #bitcoin-dev.\n+\n Testing\n -------\n "
      },
      {
        "sha": "8302a78562bfc991d8169b8e0dc0c6baed4271f7",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d92d71a2ef414543940fd6ef1080176eb455bb/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d92d71a2ef414543940fd6ef1080176eb455bb/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=06d92d71a2ef414543940fd6ef1080176eb455bb",
        "patch": "@@ -1,5 +1,5 @@\n-Coding\n-====================\n+Coding Standards\n+================\n \n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to\n@@ -171,16 +171,3 @@ Threads\n - BitcoinMiner : Generates bitcoins (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n-\n-Pull Request Terminology\n-------------------------\n-\n-Concept ACK - Agree with the idea and overall direction, but have neither reviewed nor tested the code changes.\n-\n-utACK (untested ACK) - Reviewed and agree with the code changes but haven't actually tested them.\n-\n-Tested ACK - Reviewed the code changes and have verified the functionality or bug fix.\n-\n-ACK -  A loose ACK can be confusing. It's best to avoid them unless it's a documentation/comment only change in which case there is nothing to test/verify; therefore the tested/untested distinction is not there.\n-\n-NACK - Disagree with the code changes/concept. Should be accompanied by an explanation."
      }
    ]
  },
  {
    "sha": "2fa417f82907c9887e1db82ed00a06ef52f90bf9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmE0MTdmODI5MDdjOTg4N2UxZGI4MmVkMDBhMDZlZjUyZjkwYmY5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-26T08:09:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-26T08:10:35Z"
      },
      "message": "Merge pull request #6718\n\n06d92d7 Add CONTRIBUTING.md (BtcDrak)",
      "tree": {
        "sha": "c1e90937271f5626843d627630c3573798c7f46e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1e90937271f5626843d627630c3573798c7f46e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fa417f82907c9887e1db82ed00a06ef52f90bf9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWBlL8AAoJEHSBCwEjRsmmY6kH/RZWmGMtWR87smTzfbXy+bAb\nJV4ty+AE3gVnRuHS9CCaAE0NKfyvMzQJ+EilgPSmjrQJthttDIz4846pJ58KB5MI\nF+xcsf5I5w/71nIguxAhPyS4FP1nQmAP1g+uW+rTWkxHhwyYoyCf1f5AbqODwbqF\nN9mAkMowtBma4yhDAdWp1VshSAKBJhi5c9lkpVWOoIrlCn1dD2YJSYT5Apqtafr0\npO4s/nJCmCvj8b+2dtkNoCxJWVwTRfarf/wdFtPAylotadVvTgvJHreJak0mTIcj\n9CBarvsZ2r0a7OZTajHzzwWRdYxqmgQk0iiXZ34+++KpEQQ3ekAOzaK4pRo9aC8=\n=l77m\n-----END PGP SIGNATURE-----",
        "payload": "tree c1e90937271f5626843d627630c3573798c7f46e\nparent 48efbdbe986355bd2478f0fdd366b20952fbf30a\nparent 06d92d71a2ef414543940fd6ef1080176eb455bb\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443254978 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443255035 +0200\n\nMerge pull request #6718\n\n06d92d7 Add CONTRIBUTING.md (BtcDrak)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa417f82907c9887e1db82ed00a06ef52f90bf9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa417f82907c9887e1db82ed00a06ef52f90bf9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa417f82907c9887e1db82ed00a06ef52f90bf9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48efbdbe986355bd2478f0fdd366b20952fbf30a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48efbdbe986355bd2478f0fdd366b20952fbf30a"
      },
      {
        "sha": "06d92d71a2ef414543940fd6ef1080176eb455bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d92d71a2ef414543940fd6ef1080176eb455bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06d92d71a2ef414543940fd6ef1080176eb455bb"
      }
    ],
    "stats": {
      "total": 149,
      "additions": 118,
      "deletions": 31
    },
    "files": [
      {
        "sha": "572d166b74824d2d3e26231ca1466eee518bfed5",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa417f82907c9887e1db82ed00a06ef52f90bf9/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa417f82907c9887e1db82ed00a06ef52f90bf9/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=2fa417f82907c9887e1db82ed00a06ef52f90bf9",
        "patch": "@@ -0,0 +1,107 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches\n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    Net: Automatically create hidden service, listen on Tor\n+    Qt: Add feed bump button\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Nit refers to trivial, often non-blocking issues.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Bitcoin Core release."
      },
      {
        "sha": "baf04574189d6ccb8c446814c783f4b865fc59d6",
        "filename": "README.md",
        "status": "modified",
        "additions": 9,
        "deletions": 16,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa417f82907c9887e1db82ed00a06ef52f90bf9/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa417f82907c9887e1db82ed00a06ef52f90bf9/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=2fa417f82907c9887e1db82ed00a06ef52f90bf9",
        "patch": "@@ -23,28 +23,21 @@ License\n Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see http://opensource.org/licenses/MIT.\n \n-Development process\n+Development Process\n -------------------\n \n-Developers work in their own trees, then submit pull requests when they think\n-their feature or bug fix is ready.\n-\n-If it is a simple/trivial/non-controversial change, then one of the Bitcoin\n-development team members simply pulls it.\n-\n-If it is a *more complicated or potentially controversial* change, then the patch\n-submitter will be asked to start a discussion (if they haven't already) on the\n-[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-\n-The patch will be accepted if there is broad consensus that it is a good thing.\n-Developers should expect to rework and resubmit patches if the code doesn't\n-match the project's coding conventions (see [doc/developer-notes.md](doc/developer-notes.md)) or are\n-controversial.\n-\n The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n regularly to indicate new official, stable release versions of Bitcoin.\n \n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial changes before working\n+on a patch set.\n+\n+Developer IRC can be found on Freenode at #bitcoin-dev.\n+\n Testing\n -------\n "
      },
      {
        "sha": "8302a78562bfc991d8169b8e0dc0c6baed4271f7",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa417f82907c9887e1db82ed00a06ef52f90bf9/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa417f82907c9887e1db82ed00a06ef52f90bf9/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=2fa417f82907c9887e1db82ed00a06ef52f90bf9",
        "patch": "@@ -1,5 +1,5 @@\n-Coding\n-====================\n+Coding Standards\n+================\n \n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to\n@@ -171,16 +171,3 @@ Threads\n - BitcoinMiner : Generates bitcoins (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n-\n-Pull Request Terminology\n-------------------------\n-\n-Concept ACK - Agree with the idea and overall direction, but have neither reviewed nor tested the code changes.\n-\n-utACK (untested ACK) - Reviewed and agree with the code changes but haven't actually tested them.\n-\n-Tested ACK - Reviewed the code changes and have verified the functionality or bug fix.\n-\n-ACK -  A loose ACK can be confusing. It's best to avoid them unless it's a documentation/comment only change in which case there is nothing to test/verify; therefore the tested/untested distinction is not there.\n-\n-NACK - Disagree with the code changes/concept. Should be accompanied by an explanation."
      }
    ]
  },
  {
    "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDU3YjMxMGJhYzQ0YTdlNDcwY2Y2NjI3NjQyMWYyYmJjNjFiMWYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-26T09:28:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-26T09:34:14Z"
      },
      "message": "Merge pull request #6724\n\n023919b Fix debian/copyright list to be non-comma-separated. (Matt Corallo)\n71afc68 Update debian/copyright format version to 1.0 (Matt Corallo)\nd4ca868 Use standard license names in contrib/debian/copyright (Matt Corallo)",
      "tree": {
        "sha": "f1d0d2fea91738343387f21dc3f6c8b1f8507bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f1d0d2fea91738343387f21dc3f6c8b1f8507bf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWBmaWAAoJEHSBCwEjRsmmCkMIAJfzAiULRGHSIRVvJQzl2viP\n+FuV8MH2oMQ0g0jK1+klga6M/TlVrQweI2SMBOiQApIq/PKE/Gi5AWU8C7OpYVfu\noA1kfwQnzVKPDaTXycwLbvkIkfRGbyu8dVqiklDmU6Y/pZ8x1+qw1x2BawjnFN6R\nIGIUncZ9K0HOOoX4MW6WE71piNOMN9RqhGpb05qhNhkci/E3FycuI0ZVEKfMi95m\nKZXp4F9e6CujiINVYg2jDZh8Uel9BViIViMk/T2UoVIZzd9jsTElwM4VGC+Gv0of\nRlpbioUdGGUjw7PxdAd/r7rr98RGTn0SVZkheRA3TNjDR7OIBsK/O0yxVJKAXyg=\n=jxAb\n-----END PGP SIGNATURE-----",
        "payload": "tree f1d0d2fea91738343387f21dc3f6c8b1f8507bf4\nparent 2fa417f82907c9887e1db82ed00a06ef52f90bf9\nparent 023919b8c2c33b9143699c493bcd3ca5c021983b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443259738 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443260054 +0200\n\nMerge pull request #6724\n\n023919b Fix debian/copyright list to be non-comma-separated. (Matt Corallo)\n71afc68 Update debian/copyright format version to 1.0 (Matt Corallo)\nd4ca868 Use standard license names in contrib/debian/copyright (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fa417f82907c9887e1db82ed00a06ef52f90bf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa417f82907c9887e1db82ed00a06ef52f90bf9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa417f82907c9887e1db82ed00a06ef52f90bf9"
      },
      {
        "sha": "023919b8c2c33b9143699c493bcd3ca5c021983b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/023919b8c2c33b9143699c493bcd3ca5c021983b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/023919b8c2c33b9143699c493bcd3ca5c021983b"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 32,
      "deletions": 32
    },
    "files": [
      {
        "sha": "83ce560a79b5264956429bdac905b08da68b0174",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 32,
        "deletions": 32,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad57b310bac44a7e470cf66276421f2bbc61b1f0/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad57b310bac44a7e470cf66276421f2bbc61b1f0/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "patch": "@@ -1,12 +1,12 @@\n-Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n Copyright: 2009-2015, Bitcoin Core Developers\n-License: MIT/Expat\n+License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n@@ -19,45 +19,45 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/add.png,\n-       src/qt/res/icons/address-book.png,\n-       src/qt/res/icons/configure.png,\n-       src/qt/res/icons/debugwindow.png,\n-       src/qt/res/icons/edit.png,\n-       src/qt/res/icons/editcopy.png,\n-       src/qt/res/icons/editpaste.png,\n-       src/qt/res/icons/export.png,\n-       src/qt/res/icons/eye.png,\n-       src/qt/res/icons/filesave.png,\n-       src/qt/res/icons/history.png,\n-       src/qt/res/icons/info.png,\n-       src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png,\n-       src/qt/res/icons/open.png,\n-       src/qt/res/icons/overview.png,\n-       src/qt/res/icons/quit.png,\n-       src/qt/res/icons/receive.png,\n-       src/qt/res/icons/remove.png,\n-       src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png,\n-       src/qt/res/icons/transaction*.png,\n-       src/qt/res/icons/tx_output.png,\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/configure.png\n+       src/qt/res/icons/debugwindow.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/filesave.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/info.png\n+       src/qt/res/icons/key.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/open.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/quit.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n        src/qt/res/icons/warning.png\n Copyright: Stephen Hutchings (and more)\n            http://typicons.com\n-License: MIT/Expat\n+License: Expat\n Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n        src/qt/res/src/connect-*.svg\n Copyright: Marco Falke\n-License: MIT/Expat\n+License: Expat\n Comment: Inspired by Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n Copyright: Jonas Schnelli\n-License: MIT/Expat\n+License: Expat\n Comment:\n \n Files: src/qt/res/icons/clock*.png\n@@ -68,19 +68,19 @@ Files: src/qt/res/icons/clock*.png\n        src/qt/res/src/tx_*.svg\n        src/qt/res/src/verify.svg\n Copyright: Stephan Hutching, Jonas Schnelli\n-License: MIT/Expat\n+License: Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n        src/qt/res/icons/bitcoin.*\n        share/pixmaps/bitcoin*\n        src/qt/res/src/bitcoin.svg\n Copyright: Bitboy, Jonas Schnelli\n-License: PUB-DOM\n+License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n \n-License: MIT/Expat\n+License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n@@ -128,5 +128,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: PUB-DOM\n+License: public-domain\n  This work is in the public domain."
      }
    ]
  },
  {
    "sha": "9fea833a1229f9657b96ef2f0a3fb6c20e790657",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmVhODMzYTEyMjlmOTY1N2I5NmVmMmYwYTNmYjZjMjBlNzkwNjU3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-27T14:40:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-27T14:40:16Z"
      },
      "message": "timedata: Prevent warning overkill\n\nThe \"please check your computer's data and time\" message when the clock\ndeviates from the network currently generates an overkill of messages:\n\n    orion@lethe:~/bitcoin$ src/bitcoind\n    Warning: Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\n\nIn the log:\n\n    2015-09-27 16:24:13 *** Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\n    2015-09-27 16:24:13 Warning: Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\n\nRemove one level of 'Warning:' and reduce to one log message.",
      "tree": {
        "sha": "9f2ac65608c07c2e3bdad3c6c11e1ee7c1a81b31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f2ac65608c07c2e3bdad3c6c11e1ee7c1a81b31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fea833a1229f9657b96ef2f0a3fb6c20e790657",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fea833a1229f9657b96ef2f0a3fb6c20e790657",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fea833a1229f9657b96ef2f0a3fb6c20e790657",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fea833a1229f9657b96ef2f0a3fb6c20e790657/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0641009537bbd756e4765faf66d7fb768c8222bc",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fea833a1229f9657b96ef2f0a3fb6c20e790657/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fea833a1229f9657b96ef2f0a3fb6c20e790657/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=9fea833a1229f9657b96ef2f0a3fb6c20e790657",
        "patch": "@@ -99,9 +99,8 @@ void AddTimeData(const CNetAddr& ip, int64_t nOffsetSample)\n                 if (!fMatch)\n                 {\n                     fDone = true;\n-                    string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\");\n+                    string strMessage = _(\"Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\");\n                     strMiscWarning = strMessage;\n-                    LogPrintf(\"*** %s\\n\", strMessage);\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }\n             }"
      }
    ]
  },
  {
    "sha": "a5b78c2fa8db87467a6434b2dc22522d43378aa1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWI3OGMyZmE4ZGI4NzQ2N2E2NDM0YjJkYzIyNTIyZDQzMzc4YWEx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T08:36:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T08:36:33Z"
      },
      "message": "build: Remove dependency of bitcoin-cli on secp256k1\n\nbitcoin-cli (in contrast to bitcoin-tx, which does signing ops)\nshouldn't need secp256k1, and indeed it doesn't.",
      "tree": {
        "sha": "5801c2c64f3f63f71b0517af7ff485ecbb9e1ae1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5801c2c64f3f63f71b0517af7ff485ecbb9e1ae1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5b78c2fa8db87467a6434b2dc22522d43378aa1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5b78c2fa8db87467a6434b2dc22522d43378aa1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5b78c2fa8db87467a6434b2dc22522d43378aa1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5b78c2fa8db87467a6434b2dc22522d43378aa1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7fdc766e1c9df2d0335b3e3e6470c059c410818d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b78c2fa8db87467a6434b2dc22522d43378aa1/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b78c2fa8db87467a6434b2dc22522d43378aa1/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a5b78c2fa8db87467a6434b2dc22522d43378aa1",
        "patch": "@@ -361,8 +361,7 @@ endif\n bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n   $(LIBBITCOIN_UNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBSECP256K1)\n+  $(LIBBITCOIN_UTIL)\n \n bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #"
      }
    ]
  },
  {
    "sha": "9639eadd93d988e9ea10e68ef38b21b33f76dc41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjM5ZWFkZDkzZDk4OGU5ZWExMGU2OGVmMzhiMjFiMzNmNzZkYzQx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T09:24:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T11:46:09Z"
      },
      "message": "doc: Add build guide for OpenBSD 5.7\n\nAdd a specific build guide for OpenBSD. This is slightly different than\nbuilding for Linux due to different dependencies, and a compiler issue.",
      "tree": {
        "sha": "9ffadde8e5863cdd1d627552f8eaee2c0b429a3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ffadde8e5863cdd1d627552f8eaee2c0b429a3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0"
      }
    ],
    "stats": {
      "total": 189,
      "additions": 189,
      "deletions": 0
    },
    "files": [
      {
        "sha": "28fa784515038d9469cc3c30fcb88999f2519ae1",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=9639eadd93d988e9ea10e68ef38b21b33f76dc41",
        "patch": "@@ -0,0 +1,187 @@\n+OpenBSD build guide\n+======================\n+(updated for OpenBSD 5.7)\n+\n+This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+\n+As OpenBSD is most common as a server OS, we will not bother with the GUI.\n+\n+Preparation\n+-------------\n+\n+Run the following as root to install the base dependencies for building:\n+\n+```bash\n+pkg_add gmake libtool libevent\n+pkg_add autoconf # (select highest version, e.g. 2.69)\n+pkg_add automake # (select highest version, e.g. 1.15)\n+pkg_add python # (select version 2.7.x, not 3.x)\n+ln -sf /usr/local/bin/python2.7 /usr/local/bin/python2\n+```\n+\n+The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.\n+\n+GCC\n+-------\n+\n+You can install a newer version of gcc with:\n+\n+```bash\n+pkg_add g++ # (select newest 4.x version, e.g. 4.9.2)\n+```\n+\n+This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n+\n+### Building boost\n+\n+Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n+\n+    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    ...\n+    Segmentation fault (core dumped) \n+\n+This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+\n+```\n+# Pick some path to install boost to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+mkdir -p $BOOST_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget http://heanet.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\n+echo '727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca  boost_1_59_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_59_0.tar.bz2: OK\n+tar -xjf boost_1_59_0.tar.bz2\n+\n+# Boost 1.59 needs two small patches for OpenBSD\n+cd boost_1_59_0\n+# Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp \n+# https://github.com/boostorg/filesystem/commit/90517e459681790a091566dce27ca3acabf9a70c\n+sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n+mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n+\n+# Build w/ minimum configuration necessary for bitcoin\n+echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n+config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n+./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n+./b2 -d2 -j2 -d1 ${config_opts} --prefix=${BOOST_PREFIX} stage\n+./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n+```\n+\n+### OpenSSL\n+\n+OpenBSD uses a replacement of OpenSSL: LibreSSL. This can cause compatibility issues, hence `./configure` will bark if you try to compile with this library:\n+\n+    Detected LibreSSL: This is NOT supported, and may break consensus compatibility!\n+\n+To install a 'real' OpenSSL use:\n+\n+    pkg_add openssl\n+   \n+Any program linked against this library can only be used after setting the dynamic library path:\n+    \n+    export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n+\n+(otherwise there will be an error about not being able to find `libcrypto.so.1.0`)\n+\n+Alternatively, pass `--with-libressl` to `./configure`, however as the warning says, this is NOT supported, and may cause problems syncing the chain, or the node to fork off the network in unexpected circumstances.\n+\n+### Building BerkeleyDB\n+\n+BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n+\n+See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to build BerkeleyDB 4.8.\n+You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n+\n+```bash\n+# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256 -c\n+# MUST output: (SHA256) db-4.8.30.NC.tar.gz: OK\n+tar -xzf db-4.8.30.NC.tar.gz\n+\n+# Build the library and install to specified prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp \n+make install\n+```\n+\n+### Building Bitcoin Core\n+\n+**Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n+\n+Preparation:\n+```bash\n+export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you installed\n+export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n+./autogen.sh\n+```\n+\n+To configure with wallet:\n+```bash\n+./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\" \\\n+    LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+```\n+\n+To configure without wallet:\n+```bash\n+./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+```\n+\n+Build and run the tests:\n+```bash\n+gmake\n+export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n+gmake check\n+```\n+\n+Clang (not currently working)\n+------------------------------\n+\n+Using a newer g++ results in linking the new code to a new libstdc++.\n+Libraries built with the old g++, will still import the old library.\n+This gives conflicts, necessitating rebuild of all C++ dependencies of the application.\n+\n+With clang this can - at least theoretically - be avoided because it uses the\n+base system's libstdc++.\n+\n+```bash\n+pkg_add llvm boost\n+```\n+\n+```bash\n+./configure --disable-wallet --with-gui=no CC=clang CXX=clang++ \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+gmake\n+```\n+\n+However, this does not appear to work. Compilation succeeds, but link fails\n+with many 'local symbol discarded' errors:\n+\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+\n+According to similar reported errors this is a binutils (ld) issue in 2.15, the\n+version installed by OpenBSD 5.7:\n+\n+- http://openbsd-archive.7691.n7.nabble.com/UPDATE-cppcheck-1-65-td248900.html\n+- https://llvm.org/bugs/show_bug.cgi?id=9758\n+\n+There is no known workaround for this.\n+"
      },
      {
        "sha": "5c5103575ed9a06f844bf130c5d0ebbb7311f355",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=9639eadd93d988e9ea10e68ef38b21b33f76dc41",
        "patch": "@@ -2,6 +2,8 @@ UNIX BUILD NOTES\n ====================\n Some notes on how to build Bitcoin in Unix. \n \n+(for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n+\n Note\n ---------------------\n Always use absolute paths to configure and compile bitcoin and the dependencies,"
      }
    ]
  },
  {
    "sha": "5e0c22135600fe36811da3b78216efc61ba765fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTBjMjIxMzU2MDBmZTM2ODExZGEzYjc4MjE2ZWZjNjFiYTc2NWZi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-24T15:29:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T13:06:20Z"
      },
      "message": "Make HTTP server shutdown more graceful\n\nShutting down the HTTP server currently breaks off all current requests.\nThis can create a race condition with RPC `stop` command, where the calling\nprocess never receives confirmation.\n\nThis change removes the listening sockets on shutdown so that no new\nrequests can come in, but no longer breaks off requests in progress.\n\nMeant to fix #6717.",
      "tree": {
        "sha": "0d43f766390191a3b3db1ed0bb1a3f85da618a4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d43f766390191a3b3db1ed0bb1a3f85da618a4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e0c22135600fe36811da3b78216efc61ba765fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e0c22135600fe36811da3b78216efc61ba765fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e0c22135600fe36811da3b78216efc61ba765fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e0c22135600fe36811da3b78216efc61ba765fb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 23,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e967d3a4a8f50ae2e9fa435271db6bb39763a703",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e0c22135600fe36811da3b78216efc61ba765fb/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e0c22135600fe36811da3b78216efc61ba765fb/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=5e0c22135600fe36811da3b78216efc61ba765fb",
        "patch": "@@ -155,6 +155,8 @@ static std::vector<CSubNet> rpc_allow_subnets;\n static WorkQueue<HTTPClosure>* workQueue = 0;\n //! Handlers for (sub)paths\n std::vector<HTTPPathHandler> pathHandlers;\n+//! Bound listening sockets\n+std::vector<evhttp_bound_socket *> boundSockets;\n \n /** Check if a network address is allowed to access the HTTP server */\n static bool ClientAllowed(const CNetAddr& netaddr)\n@@ -264,6 +266,13 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n     }\n }\n \n+/** Callback to reject HTTP requests after shutdown. */\n+static void http_reject_request_cb(struct evhttp_request* req, void*)\n+{\n+    LogPrint(\"http\", \"Rejecting request while shutting down\\n\");\n+    evhttp_send_error(req, HTTP_SERVUNAVAIL, NULL);\n+}\n+\n /** Event dispatcher thread */\n static void ThreadHTTP(struct event_base* base, struct evhttp* http)\n {\n@@ -278,7 +287,6 @@ static void ThreadHTTP(struct event_base* base, struct evhttp* http)\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n     int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n-    int nBound = 0;\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to\n@@ -304,13 +312,14 @@ static bool HTTPBindAddresses(struct evhttp* http)\n     // Bind addresses\n     for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n         LogPrint(\"http\", \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n-        if (evhttp_bind_socket(http, i->first.empty() ? NULL : i->first.c_str(), i->second) == 0) {\n-            nBound += 1;\n+        evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? NULL : i->first.c_str(), i->second);\n+        if (bind_handle) {\n+            boundSockets.push_back(bind_handle);\n         } else {\n             LogPrintf(\"Binding RPC on address %s port %i failed.\\n\", i->first, i->second);\n         }\n     }\n-    return nBound > 0;\n+    return !boundSockets.empty();\n }\n \n /** Simple wrapper to set thread name and run work queue */\n@@ -410,8 +419,14 @@ bool StartHTTPServer(boost::thread_group& threadGroup)\n void InterruptHTTPServer()\n {\n     LogPrint(\"http\", \"Interrupting HTTP server\\n\");\n-    if (eventBase)\n-        event_base_loopbreak(eventBase);\n+    if (eventHTTP) {\n+        // Unlisten sockets\n+        BOOST_FOREACH (evhttp_bound_socket *socket, boundSockets) {\n+            evhttp_del_accept_socket(eventHTTP, socket);\n+        }\n+        // Reject requests on current connections\n+        evhttp_set_gencb(eventHTTP, http_reject_request_cb, NULL);\n+    }\n     if (workQueue)\n         workQueue->Interrupt();\n }"
      },
      {
        "sha": "dbee61efc88c98f995fb6b861c6bf5777bdb17d6",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e0c22135600fe36811da3b78216efc61ba765fb/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e0c22135600fe36811da3b78216efc61ba765fb/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=5e0c22135600fe36811da3b78216efc61ba765fb",
        "patch": "@@ -243,7 +243,8 @@ UniValue stop(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"stop\\n\"\n             \"\\nStop Bitcoin server.\");\n-    // Shutdown will take long enough that the response should get back\n+    // Event loop will exit after current HTTP requests have been handled, so\n+    // this reply will get back to the client.\n     StartShutdown();\n     return \"Bitcoin server stopping\";\n }"
      }
    ]
  },
  {
    "sha": "de9de2de361ab1355b976f17371d73e36fe3bf56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTlkZTJkZTM2MWFiMTM1NWI5NzZmMTczNzFkNzNlMzZmZTNiZjU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T11:49:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T13:06:20Z"
      },
      "message": "http: Wait for worker threads to exit\n\nAdd a WaitExit() call to http's WorkQueue to make it delete the work\nqueue only when all worker threads stopped.\n\nThis fixes a problem that was reproducable by pressing Ctrl-C during\nAppInit2:\n```\n/usr/include/boost/thread/pthread/condition_variable_fwd.hpp:81: boost::condition_variable::~condition_variable(): Assertion `!ret' failed.\n/usr/include/boost/thread/pthread/mutex.hpp:108: boost::mutex::~mutex(): Assertion `!posix::pthread_mutex_destroy(&m)' failed.\n```\n\nI was assuming that `threadGroup->join_all();` would always have been\ncalled when entering the Shutdown(). However this is not the case in\nbitcoind's AppInit2-non-zero-exit case \"was left out intentionally\nhere\".",
      "tree": {
        "sha": "d7e9a1c8c8b0cf6ecb5e789d85235e0a1304f161",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7e9a1c8c8b0cf6ecb5e789d85235e0a1304f161"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de9de2de361ab1355b976f17371d73e36fe3bf56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de9de2de361ab1355b976f17371d73e36fe3bf56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de9de2de361ab1355b976f17371d73e36fe3bf56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de9de2de361ab1355b976f17371d73e36fe3bf56/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e0c22135600fe36811da3b78216efc61ba765fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e0c22135600fe36811da3b78216efc61ba765fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e0c22135600fe36811da3b78216efc61ba765fb"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 37,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9f079aedfebe544f51296abeacce7242174c5c87",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 3,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de9de2de361ab1355b976f17371d73e36fe3bf56/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de9de2de361ab1355b976f17371d73e36fe3bf56/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=de9de2de361ab1355b976f17371d73e36fe3bf56",
        "patch": "@@ -72,13 +72,35 @@ class WorkQueue\n     std::deque<WorkItem*> queue;\n     bool running;\n     size_t maxDepth;\n+    int numThreads;\n+\n+    /** RAII object to keep track of number of running worker threads */\n+    class ThreadCounter\n+    {\n+    public:\n+        WorkQueue &wq;\n+        ThreadCounter(WorkQueue &w): wq(w)\n+        {\n+            boost::lock_guard<boost::mutex> lock(wq.cs);\n+            wq.numThreads += 1;\n+        }\n+        ~ThreadCounter()\n+        {\n+            boost::lock_guard<boost::mutex> lock(wq.cs);\n+            wq.numThreads -= 1;\n+            wq.cond.notify_all();\n+        }\n+    };\n \n public:\n     WorkQueue(size_t maxDepth) : running(true),\n-                                 maxDepth(maxDepth)\n+                                 maxDepth(maxDepth),\n+                                 numThreads(0)\n     {\n     }\n-    /* Precondition: worker threads have all stopped */\n+    /*( Precondition: worker threads have all stopped\n+     * (call WaitExit)\n+     */\n     ~WorkQueue()\n     {\n         while (!queue.empty()) {\n@@ -100,6 +122,7 @@ class WorkQueue\n     /** Thread function */\n     void Run()\n     {\n+        ThreadCounter count(*this);\n         while (running) {\n             WorkItem* i = 0;\n             {\n@@ -122,6 +145,13 @@ class WorkQueue\n         running = false;\n         cond.notify_all();\n     }\n+    /** Wait for worker threads to exit */\n+    void WaitExit()\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        while (numThreads > 0)\n+            cond.wait(lock);\n+    }\n \n     /** Return current depth of queue */\n     size_t Depth()\n@@ -434,7 +464,11 @@ void InterruptHTTPServer()\n void StopHTTPServer()\n {\n     LogPrint(\"http\", \"Stopping HTTP server\\n\");\n-    delete workQueue;\n+    if (workQueue) {\n+        LogPrint(\"http\", \"Waiting for HTTP worker threads to exit\\n\");\n+        workQueue->WaitExit();\n+        delete workQueue;\n+    }\n     if (eventHTTP) {\n         evhttp_free(eventHTTP);\n         eventHTTP = 0;"
      }
    ]
  },
  {
    "sha": "ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzkwOGQ1ZjdhYTlhZDdlMzQ4NzAxOGUwNmEyNGNiNjQ0OWNjNThi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-25T13:35:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T13:06:20Z"
      },
      "message": "http: Force-exit event loop after predefined time\n\nThis makes sure that the event loop eventually terminates, even if an\nevent (like an open timeout, or a hanging connection) happens to be\nholding it up.",
      "tree": {
        "sha": "b80a79a74bdd6a0160a2fd76c0bff2d382b85cd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b80a79a74bdd6a0160a2fd76c0bff2d382b85cd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de9de2de361ab1355b976f17371d73e36fe3bf56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de9de2de361ab1355b976f17371d73e36fe3bf56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de9de2de361ab1355b976f17371d73e36fe3bf56"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0a7f903e9f7ba999faeadec9185abb546b526ca2",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
        "patch": "@@ -457,6 +457,13 @@ void InterruptHTTPServer()\n         // Reject requests on current connections\n         evhttp_set_gencb(eventHTTP, http_reject_request_cb, NULL);\n     }\n+    if (eventBase) {\n+        // Force-exit event loop after predefined time\n+        struct timeval tv;\n+        tv.tv_sec = 10;\n+        tv.tv_usec = 0;\n+        event_base_loopexit(eventBase, &tv);\n+    }\n     if (workQueue)\n         workQueue->Interrupt();\n }"
      }
    ]
  },
  {
    "sha": "1a9f19a78daa392baf2e062bddff597ce0ce30b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTlmMTlhNzhkYWEzOTJiYWYyZTA2MmJkZGZmNTk3Y2UwY2UzMGI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T14:03:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T14:03:51Z"
      },
      "message": "Merge pull request #6719\n\nec908d5 http: Force-exit event loop after predefined time (Wladimir J. van der Laan)\nde9de2d http: Wait for worker threads to exit (Wladimir J. van der Laan)\n5e0c221 Make HTTP server shutdown more graceful (Wladimir J. van der Laan)",
      "tree": {
        "sha": "b80a79a74bdd6a0160a2fd76c0bff2d382b85cd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b80a79a74bdd6a0160a2fd76c0bff2d382b85cd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a9f19a78daa392baf2e062bddff597ce0ce30b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCUjHAAoJEHSBCwEjRsmmeMYIAJg1CCkrS16s2AD/NmNdnrld\nQl3Tzh0+FbzmZNYJh7NnRV2X8f2ZTAAa+pNYVvh7uVKo3Cq6R18YMbyWas48nscF\nfHujeNQPO/pWw0a6vw9S2iZwHmB0p3r2GDPabfXYRewGQcwfFhakZCsEzS5GjD5F\nw9+m9OTN6NlPykeNtak/NnEAxUT/EA1u4xhMyNVUPS/ecdoXWHS5qqqOid4B3jsG\naSvzFUqrTqnU9OruBEyrFFgzHyF2DuaA0kBTkKEr8/NzRiOXRuDTB3h+zTWyYPv7\nWfNe5gZpOEMdf/LDogVOxHztNlyIWr9nH+5DX8LGkSzWg1nRzlRAcNVB6shnXpg=\n=IgwO\n-----END PGP SIGNATURE-----",
        "payload": "tree b80a79a74bdd6a0160a2fd76c0bff2d382b85cd7\nparent ad57b310bac44a7e470cf66276421f2bbc61b1f0\nparent ec908d5f7aa9ad7e3487018e06a24cb6449cc58b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443449021 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443449031 +0200\n\nMerge pull request #6719\n\nec908d5 http: Force-exit event loop after predefined time (Wladimir J. van der Laan)\nde9de2d http: Wait for worker threads to exit (Wladimir J. van der Laan)\n5e0c221 Make HTTP server shutdown more graceful (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a9f19a78daa392baf2e062bddff597ce0ce30b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a9f19a78daa392baf2e062bddff597ce0ce30b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a9f19a78daa392baf2e062bddff597ce0ce30b6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0"
      },
      {
        "sha": "ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec908d5f7aa9ad7e3487018e06a24cb6449cc58b"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 67,
      "deletions": 10
    },
    "files": [
      {
        "sha": "0a7f903e9f7ba999faeadec9185abb546b526ca2",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 65,
        "deletions": 9,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a9f19a78daa392baf2e062bddff597ce0ce30b6/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a9f19a78daa392baf2e062bddff597ce0ce30b6/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=1a9f19a78daa392baf2e062bddff597ce0ce30b6",
        "patch": "@@ -72,13 +72,35 @@ class WorkQueue\n     std::deque<WorkItem*> queue;\n     bool running;\n     size_t maxDepth;\n+    int numThreads;\n+\n+    /** RAII object to keep track of number of running worker threads */\n+    class ThreadCounter\n+    {\n+    public:\n+        WorkQueue &wq;\n+        ThreadCounter(WorkQueue &w): wq(w)\n+        {\n+            boost::lock_guard<boost::mutex> lock(wq.cs);\n+            wq.numThreads += 1;\n+        }\n+        ~ThreadCounter()\n+        {\n+            boost::lock_guard<boost::mutex> lock(wq.cs);\n+            wq.numThreads -= 1;\n+            wq.cond.notify_all();\n+        }\n+    };\n \n public:\n     WorkQueue(size_t maxDepth) : running(true),\n-                                 maxDepth(maxDepth)\n+                                 maxDepth(maxDepth),\n+                                 numThreads(0)\n     {\n     }\n-    /* Precondition: worker threads have all stopped */\n+    /*( Precondition: worker threads have all stopped\n+     * (call WaitExit)\n+     */\n     ~WorkQueue()\n     {\n         while (!queue.empty()) {\n@@ -100,6 +122,7 @@ class WorkQueue\n     /** Thread function */\n     void Run()\n     {\n+        ThreadCounter count(*this);\n         while (running) {\n             WorkItem* i = 0;\n             {\n@@ -122,6 +145,13 @@ class WorkQueue\n         running = false;\n         cond.notify_all();\n     }\n+    /** Wait for worker threads to exit */\n+    void WaitExit()\n+    {\n+        boost::unique_lock<boost::mutex> lock(cs);\n+        while (numThreads > 0)\n+            cond.wait(lock);\n+    }\n \n     /** Return current depth of queue */\n     size_t Depth()\n@@ -155,6 +185,8 @@ static std::vector<CSubNet> rpc_allow_subnets;\n static WorkQueue<HTTPClosure>* workQueue = 0;\n //! Handlers for (sub)paths\n std::vector<HTTPPathHandler> pathHandlers;\n+//! Bound listening sockets\n+std::vector<evhttp_bound_socket *> boundSockets;\n \n /** Check if a network address is allowed to access the HTTP server */\n static bool ClientAllowed(const CNetAddr& netaddr)\n@@ -264,6 +296,13 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n     }\n }\n \n+/** Callback to reject HTTP requests after shutdown. */\n+static void http_reject_request_cb(struct evhttp_request* req, void*)\n+{\n+    LogPrint(\"http\", \"Rejecting request while shutting down\\n\");\n+    evhttp_send_error(req, HTTP_SERVUNAVAIL, NULL);\n+}\n+\n /** Event dispatcher thread */\n static void ThreadHTTP(struct event_base* base, struct evhttp* http)\n {\n@@ -278,7 +317,6 @@ static void ThreadHTTP(struct event_base* base, struct evhttp* http)\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n     int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n-    int nBound = 0;\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to\n@@ -304,13 +342,14 @@ static bool HTTPBindAddresses(struct evhttp* http)\n     // Bind addresses\n     for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n         LogPrint(\"http\", \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n-        if (evhttp_bind_socket(http, i->first.empty() ? NULL : i->first.c_str(), i->second) == 0) {\n-            nBound += 1;\n+        evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? NULL : i->first.c_str(), i->second);\n+        if (bind_handle) {\n+            boundSockets.push_back(bind_handle);\n         } else {\n             LogPrintf(\"Binding RPC on address %s port %i failed.\\n\", i->first, i->second);\n         }\n     }\n-    return nBound > 0;\n+    return !boundSockets.empty();\n }\n \n /** Simple wrapper to set thread name and run work queue */\n@@ -410,16 +449,33 @@ bool StartHTTPServer(boost::thread_group& threadGroup)\n void InterruptHTTPServer()\n {\n     LogPrint(\"http\", \"Interrupting HTTP server\\n\");\n-    if (eventBase)\n-        event_base_loopbreak(eventBase);\n+    if (eventHTTP) {\n+        // Unlisten sockets\n+        BOOST_FOREACH (evhttp_bound_socket *socket, boundSockets) {\n+            evhttp_del_accept_socket(eventHTTP, socket);\n+        }\n+        // Reject requests on current connections\n+        evhttp_set_gencb(eventHTTP, http_reject_request_cb, NULL);\n+    }\n+    if (eventBase) {\n+        // Force-exit event loop after predefined time\n+        struct timeval tv;\n+        tv.tv_sec = 10;\n+        tv.tv_usec = 0;\n+        event_base_loopexit(eventBase, &tv);\n+    }\n     if (workQueue)\n         workQueue->Interrupt();\n }\n \n void StopHTTPServer()\n {\n     LogPrint(\"http\", \"Stopping HTTP server\\n\");\n-    delete workQueue;\n+    if (workQueue) {\n+        LogPrint(\"http\", \"Waiting for HTTP worker threads to exit\\n\");\n+        workQueue->WaitExit();\n+        delete workQueue;\n+    }\n     if (eventHTTP) {\n         evhttp_free(eventHTTP);\n         eventHTTP = 0;"
      },
      {
        "sha": "dbee61efc88c98f995fb6b861c6bf5777bdb17d6",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a9f19a78daa392baf2e062bddff597ce0ce30b6/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a9f19a78daa392baf2e062bddff597ce0ce30b6/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=1a9f19a78daa392baf2e062bddff597ce0ce30b6",
        "patch": "@@ -243,7 +243,8 @@ UniValue stop(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"stop\\n\"\n             \"\\nStop Bitcoin server.\");\n-    // Shutdown will take long enough that the response should get back\n+    // Event loop will exit after current HTTP requests have been handled, so\n+    // this reply will get back to the client.\n     StartShutdown();\n     return \"Bitcoin server stopping\";\n }"
      }
    ]
  },
  {
    "sha": "2b0567b00291205731cbb910fb3cf33359a046ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjA1NjdiMDAyOTEyMDU3MzFjYmI5MTBmYjNjZjMzMzU5YTA0NmVl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T06:21:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T06:44:15Z"
      },
      "message": "Merge pull request #6728\n\n9fea833 timedata: Prevent warning overkill (Wladimir J. van der Laan)",
      "tree": {
        "sha": "aff962a2dcb7881e543dd4febf7f5b3ac52db9b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aff962a2dcb7881e543dd4febf7f5b3ac52db9b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b0567b00291205731cbb910fb3cf33359a046ee",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCjM/AAoJEHSBCwEjRsmmC2sIAMDSgZTaD3F2PICi546Vy6Yr\nWRZvnHkdvneKlpmyoopdaU87qijPgJyzaaVLYPKl5OEDQ2XAYFZYmv2JCHtRGPxo\nPxUQeZkoVTxRPlSSXR9CDFLQDf1EE105wLD0Yu/ttETGyWlRo0fomNIUl+EOXTcQ\nUoLk+L7jkMr5Gp7zYAWFesSOPYo1IwcmNOlAghhp5tDMK7/OWrLvDwhYeMlBqNnI\nhwMCM2BDSLSga67We7firJL/zLyVZvvXCOT40+q6OLyT/hUil7Zexn+HmjhpVs9a\nnp9/NuPjJ9HhanANnftTnPUR+ETefVGJ2OFW4mBqTdpV7ZJ9qK/6142HxUZ/ZQ8=\n=4ZBa\n-----END PGP SIGNATURE-----",
        "payload": "tree aff962a2dcb7881e543dd4febf7f5b3ac52db9b5\nparent 1a9f19a78daa392baf2e062bddff597ce0ce30b6\nparent 9fea833a1229f9657b96ef2f0a3fb6c20e790657\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443507688 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443509055 +0200\n\nMerge pull request #6728\n\n9fea833 timedata: Prevent warning overkill (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b0567b00291205731cbb910fb3cf33359a046ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b0567b00291205731cbb910fb3cf33359a046ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b0567b00291205731cbb910fb3cf33359a046ee/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a9f19a78daa392baf2e062bddff597ce0ce30b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a9f19a78daa392baf2e062bddff597ce0ce30b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a9f19a78daa392baf2e062bddff597ce0ce30b6"
      },
      {
        "sha": "9fea833a1229f9657b96ef2f0a3fb6c20e790657",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fea833a1229f9657b96ef2f0a3fb6c20e790657",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fea833a1229f9657b96ef2f0a3fb6c20e790657"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0641009537bbd756e4765faf66d7fb768c8222bc",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b0567b00291205731cbb910fb3cf33359a046ee/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b0567b00291205731cbb910fb3cf33359a046ee/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=2b0567b00291205731cbb910fb3cf33359a046ee",
        "patch": "@@ -99,9 +99,8 @@ void AddTimeData(const CNetAddr& ip, int64_t nOffsetSample)\n                 if (!fMatch)\n                 {\n                     fDone = true;\n-                    string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\");\n+                    string strMessage = _(\"Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\");\n                     strMiscWarning = strMessage;\n-                    LogPrintf(\"*** %s\\n\", strMessage);\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }\n             }"
      }
    ]
  },
  {
    "sha": "a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTFlZWE2ZTNlZGRmMzEyYzZhN2JkMGJmYzhkNWFjY2Y5M2ViZDhh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T11:36:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T11:36:33Z"
      },
      "message": "qt: periodic translations update",
      "tree": {
        "sha": "32eaa26a9e9d83a21510f78509e7554c32aa5fd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32eaa26a9e9d83a21510f78509e7554c32aa5fd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCngHAAoJEHSBCwEjRsmmtfwIAMF6CfJS+d8h+8+JVLl1wClO\nRATZ9mEgoOQ6SE1PjMsbIDKDKaNbEHfMltshg64iJ5UpC0UDkmKx4//lDXBtDW1v\nuWWfT27HvTAG9XZJQgP76vAkjULJA3WbQOV8GKAQx/pkdsGWXKf+kaJsP7QetCY4\n4/+wcWW8qdivIEo21E8cxXEpmUTt9ozzNdpl+aKomu2PKSvfh89GWrKuPrN0j+1G\nh3PdxLKluqUbCmN32zmCJzuSwoGr8G+zRrt5Z8JJ/PmbnYLNNGbX5fr7uh0kQfkS\nSJZyqq4KE6FUsKZXuyaygBve7O2r8x+opfpuWzlbcXA6QeNjnccUHsN/GORCZeE=\n=3zB7\n-----END PGP SIGNATURE-----",
        "payload": "tree 32eaa26a9e9d83a21510f78509e7554c32aa5fd2\nparent 2b0567b00291205731cbb910fb3cf33359a046ee\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443526593 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443526593 +0200\n\nqt: periodic translations update\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b0567b00291205731cbb910fb3cf33359a046ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b0567b00291205731cbb910fb3cf33359a046ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b0567b00291205731cbb910fb3cf33359a046ee"
      }
    ],
    "stats": {
      "total": 9506,
      "additions": 7240,
      "deletions": 2266
    },
    "files": [
      {
        "sha": "3cde2657cfc829e089be515210ca213b0c44cc49",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 69,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -17,9 +17,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or \"\n \"a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"An error occurred while setting up the RPC address %s port %u for listening: \"\n-\"%s\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Bind to given address and always listen on it. Use [host]:port notation for \"\n \"IPv6\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -33,9 +30,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Continuously rate-limit free transactions to <n>*1000 bytes per minute \"\n-\"(default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Create new files with system default permissions, instead of umask 077 (only \"\n \"effective with disabled wallet functionality)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -48,9 +42,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Distributed under the MIT software license, see the accompanying file \"\n \"COPYING or <http://www.opensource.org/licenses/mit-license.php>.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Enter regression test mode, which uses a special chain in which blocks can \"\n-\"be solved instantly.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: Listening for incoming connections failed (listen returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: Unsupported argument -socks found. Setting SOCKS version isn't \"\n@@ -65,56 +56,54 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when the best block changes (%s in cmd is replaced by block \"\n \"hash)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Fees (in BTC/Kb) smaller than this are considered zero fee for relaying \"\n+\"Fees (in %s/kB) smaller than this are considered zero fee for relaying \"\n \"(default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction \"\n-\"creation (default: %s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Flush database activity from memory pool to disk log every <n> megabytes \"\n-\"(default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"How thorough the block verification of -checkblocks is (0-4, default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"If <category> is not supplied or if <category> = 1, output all debugging \"\n+\"information.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"If paytxfee is not set, include enough fee so transactions begin \"\n \"confirmation on average within n blocks (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"In this mode -genproclimit controls how many blocks are generated \"\n-\"immediately.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Invalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay \"\n \"fee of %s to prevent stuck transactions)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Log transaction priority and fee per kB when mining blocks (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Maintain a full transaction index, used by the getrawtransaction rpc call \"\n \"(default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Maximum size of data in data carrier transactions we relay and mine \"\n \"(default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Maximum total fees to use in a single wallet transaction; setting this too \"\n-\"low may abort large transactions (default: %s)\"),\n+\"Maximum total fees (in %s) to use in a single wallet transaction; setting \"\n+\"this too low may abort large transactions (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Output debugging information (default: %u, supplying <category> is optional)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Prune configured below the minimum of %d MB.  Please use a higher number.\"),\n+\"Please check that your computer's date and time are correct! If your clock \"\n+\"is wrong Bitcoin Core will not work properly.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Prune configured below the minimum of %d MiB.  Please use a higher number.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Prune: last wallet synchronisation goes beyond pruned data. You need to -\"\n+\"reindex (download the whole blockchain again in case of pruned node)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Query for peer addresses via DNS lookup, if low on addresses (default: 1 \"\n \"unless -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Randomize credentials for every proxy connection. This enables Tor stream \"\n \"isolation (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Reduce storage requirements by pruning (deleting) old blocks. This mode \"\n-\"disables wallet support and is incompatible with -txindex. Warning: \"\n-\"Reverting this setting requires re-downloading the entire blockchain. \"\n-\"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for \"\n-\"block files)\"),\n+\"Reduce storage requirements by pruning (deleting) old blocks. This mode is \"\n+\"incompatible with -txindex and -rescan. Warning: Reverting this setting \"\n+\"requires re-downloading the entire blockchain. (default: 0 = disable pruning \"\n+\"blocks, >%u = target size in MiB to use for block files)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Require high priority for relaying free or low-fee transactions (default: %u)\"),\n+\"Rescans are not possible in pruned mode. You will need to use -reindex which \"\n+\"will download the whole blockchain again.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -124,6 +113,11 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Set the number of threads for coin generation if enabled (-1 = all cores, \"\n \"default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"The block database contains a block which appears to be from the future. \"\n+\"This may be due to your computer's date and time being set incorrectly. Only \"\n+\"rebuild the block database if you are sure that your computer's date and \"\n+\"time are correct\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"The transaction amount is too small to send after the fee has been deducted\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is a pre-release test build - use at your own risk - do not use for \"\n@@ -133,34 +127,26 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software \"\n \"written by Eric Young and UPnP software written by Thomas Bernard.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"To use bitcoind, or the -server option to bitcoin-qt, you must set an \"\n-\"rpcpassword in the configuration file:\\n\"\n-\"%s\\n\"\n-\"It is recommended you use the following random password:\\n\"\n-\"rpcuser=bitcoinrpc\\n\"\n-\"rpcpassword=%s\\n\"\n-\"(you do not need to remember this password)\\n\"\n-\"The username and password MUST NOT be the same.\\n\"\n-\"If the file does not exist, create it with owner-readable-only file \"\n-\"permissions.\\n\"\n-\"It is also recommended to set alertnotify so you are notified of problems;\\n\"\n-\"for example: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\" admin@foo.com\\n\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to bind to %s on this computer. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: \"\n \"%s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"WARNING: abnormally high number of blocks generated, %d blocks received in \"\n+\"the last %d hours (%d expected)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"WARNING: check your network connection, %d blocks received in the last %d \"\n+\"hours (%d expected)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: -maxtxfee is set very high! Fees this large could be paid on a \"\n \"single transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: -paytxfee is set very high! This is the transaction fee you will \"\n \"pay if you send a transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: Please check that your computer's date and time are correct! If \"\n-\"your clock is wrong Bitcoin Core will not work properly.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: The network does not appear to fully agree! Some miners appear to \"\n \"be experiencing issues.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -189,15 +175,12 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept public REST requests (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Acceptable ciphers (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Activating best chain...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow self signed root certificates (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Always query for peer addresses via DNS lookup (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Block creation options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Can't run with a wallet in prune mode.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n@@ -210,12 +193,14 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses,\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connection options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Copyright (C) 2009-%i The Bitcoin Core Developers\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Could not parse -rpcbind value %s as network address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Debugging/Testing options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Disable safemode, override a real safe mode event (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do not load the wallet and disable wallet RPC calls\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do you want to rebuild the block database now?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Enable publish hash block in <address>\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Enable publish hash transaction in <address>\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Enable publish raw block in <address>\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Enable publish raw transaction in <address>\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error initializing block database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error initializing wallet database environment %s!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading block database\"),\n@@ -225,15 +210,13 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires new\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error opening block database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error reading from database, shutting down.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: A fatal internal error occured, see debug.log for details\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: A fatal internal error occurred, see debug.log for details\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Disk space is low!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Unsupported argument -tor found, use -onion.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to listen on any port. Use -listen=0 if you want this.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee (in BTC/kB) to add to transactions you send (default: %s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Force safe mode (default: %u)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: %u, 0 = all)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"If <category> is not supplied, output all debugging information.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Importing...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Include IP addresses in debug output (default: %u)\"),\n@@ -250,7 +233,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s' (\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid netmask specified in -whitelist: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep at most <n> unconnectable transactions in memory (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Limit size of signature cache to <n> entries (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: %u or testnet: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n@@ -263,37 +245,31 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Need to specify a port with -whitebind: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Node relay options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept block chain matching built-in checkpoints (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Password for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prune cannot be configured with a negative value.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prune mode is incompatible with -txindex.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Pruning blockstore...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC server options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC support for HTTP persistent connections (default: %d)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly drop 1 of every <n> network messages\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly fuzz 1 of every <n> network messages\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild block chain index from current blk000??.dat files on startup\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Receive and display P2P network alerts (default: %u)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Reducing -maxconnections from %d to %d, because of system limitations.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay and mine data carrier transactions (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay non-P2SH multisig (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run a thread to flush wallet periodically (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send transactions as zero-fee transactions if possible (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: %s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set SSL root certificates for payment request (default: -system-)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (%d to %d, default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set language, for example \\\"de_DE\\\" (default: system locale)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set minimum block size in bytes (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set the number of threads to service RPC calls (default: %d)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Show all debugging options (usage: --help -help-debug)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Show splash screen on startup (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\"),\n@@ -306,23 +282,20 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify wallet file (within data directory)\")\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Spend unconfirmed change when sending transactions (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Start minimized\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Stop running after importing blocks from disk (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"The transaction amount is too small to pay the fee\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is experimental software.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is intended for regression testing tools and app development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amounts must be positive\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large for fee policy\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"UI Options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to start HTTP server. See debug log for details.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 1 when listening)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n@@ -336,6 +309,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Unsupported argument -benchmark igno\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Unsupported argument -debugnet ignored, use -debug=net.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"ZeroMQ notification options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };"
      },
      {
        "sha": "ddb9fb85ced6c4737c996c452eaeb09a4eb1cd73",
        "filename": "src/qt/locale/bitcoin_ach.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ach.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ach.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ach.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ach\" version=\"2.1\">\n+<TS language=\"ach\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     </context>"
      },
      {
        "sha": "3767a4c8300eaf1b3aec2e8770a30e226955312f",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"af_ZA\" version=\"2.1\">\n+<TS language=\"af_ZA\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "e56083fa2cb64a0bcfc308615a27ceb00dbb84dd",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ar\" version=\"2.1\">\n+<TS language=\"ar\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "5f7f6f89bfd8e2999f0ef8fd3bf480b8e3da1260",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"be_BY\" version=\"2.1\">\n+<TS language=\"be_BY\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "e2821dbdef1fd94bc4f2196b7f8f35852c584c07",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"bg\" version=\"2.1\">\n+<TS language=\"bg\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -1954,6 +1954,14 @@\n         <source>Debit</source>\n         <translation>\u0414\u0435\u0431\u0438\u0442</translation>\n     </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>\u041e\u0431\u0449 \u0434\u044a\u043b\u0433</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>\u041e\u0431\u0449 \u0434\u044a\u043b\u0433</translation>\n+    </message>\n     <message>\n         <source>Transaction fee</source>\n         <translation>\u0422\u0430\u043a\u0441\u0430</translation>\n@@ -1978,6 +1986,10 @@\n         <source>Merchant</source>\n         <translation>\u0422\u044a\u0440\u0433\u043e\u0432\u0435\u0446</translation>\n     </message>\n+    <message>\n+        <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0430\u043d\u0438\u0442\u0435 \u043c\u043e\u043d\u0435\u0442\u0438 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u043e\u0442\u043b\u0435\u0436\u0430\u0442 %1 \u0431\u043b\u043e\u043a\u0430 \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u043f\u043e\u0445\u0430\u0440\u0447\u0435\u043d\u0438. \u041a\u043e\u0433\u0430\u0442\u043e \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0430\u0448 \u0431\u043b\u043e\u043a\u0430, \u0442\u043e\u0439 \u0441\u0435 \u0440\u0430\u0437\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0432\u0430 \u0432 \u043c\u0440\u0435\u0436\u0430\u0442\u0430, \u0437\u0430 \u0434\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u0438 \u0432 \u0431\u043b\u043e\u043a-\u0432\u0435\u0440\u0438\u0433\u0430\u0442\u0430. \u0410\u043a\u043e \u043d\u0435 \u0443\u0441\u043f\u0435\u0435 \u0434\u0430 \u0441\u0435 \u0434\u043e\u0431\u0430\u0432\u0438 \u0432\u044a\u0432 \u0432\u0435\u0440\u0438\u0433\u0430\u0442\u0430, \u043d\u0435\u0433\u043e\u0432\u0438\u044f \u0441\u0442\u0430\u0442\u0443\u0441  \u0449\u0435 \u0441\u0435 \u0441\u0442\u0430\u043d\u0435 \"\u043d\u0435\u043f\u0440\u0438\u0435\u0442\" \u0438 \u043d\u044f\u043c\u0430 \u0434\u0430 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043f\u043e\u0445\u0430\u0440\u0447\u0438. \u0422\u043e\u0432\u0430 \u0435 \u0432\u044a\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u0430 \u0441\u0435 \u0441\u043b\u0443\u0447\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e, \u0430\u043a\u043e \u0434\u0440\u0443\u0433 \u0432\u044a\u0437\u0435\u043b \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0430 \u0431\u043b\u043e\u043a \u043d\u044f\u043a\u043e\u043b\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434\u0438 \u0441\u043b\u0435\u0434 \u0442\u0432\u043e\u044f.</translation>\n+    </message>\n     <message>\n         <source>Debug information</source>\n         <translation>\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0437\u0430 \u0433\u0440\u0435\u0448\u043a\u0438\u0442\u0435</translation>\n@@ -2028,6 +2040,10 @@\n         <source>Type</source>\n         <translation>\u0422\u0438\u043f</translation>\n     </message>\n+    <message>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation>\u041d\u0435\u043f\u043b\u0430\u0442\u0438\u043c (%1 \u043f\u043e\u0442\u0432\u044a\u0440\u0436\u0434\u0435\u043d\u0438\u044f, \u0449\u0435 \u0431\u044a\u0434\u0435 \u043f\u043b\u0430\u0442\u0438\u043c \u0441\u043b\u0435\u0434 %2)</translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>\u041f\u043e\u0434\u043b\u0435\u0436\u0438 \u043d\u0430 \u043f\u0440\u043e\u043c\u044f\u043d\u0430 \u0434\u043e %1</translation>"
      },
      {
        "sha": "86526022fe2ea1d6f91b7aaf057fea96cd0261f1",
        "filename": "src/qt/locale/bitcoin_bs.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_bs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_bs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bs.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"bs\" version=\"2.1\">\n+<TS language=\"bs\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     </context>"
      },
      {
        "sha": "ceb71469cbfd09e0bf8b99a67e8f8cd125194149",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 229,
        "deletions": 55,
        "changes": 284,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ca\" version=\"2.1\">\n+<TS language=\"ca\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Esteu segur que voleu encriptar el vostre moneder?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Ara es tancar\u00e0 el Bitcoin Core per finalitzar el proc\u00e9s d'encriptaci\u00f3. Tingueu present que encriptar el vostre moneder no garanteix que les vostres bitcoins no puguin ser robades per programari malici\u00f3s que infecti l'ordinador.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>IMPORTANT: Tota copia de seguretat que h\u00e0giu realitzat hauria de ser reempla\u00e7ada pel, recentment generat, fitxer encriptat del moneder.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Introdu\u00efu la contrasenya nova al moneder.&lt;br/&gt;Utilitzeu una contrasenya de &lt;b&gt;deu o m\u00e9s car\u00e0cters aleatoris&lt;/b&gt;, o &lt;b&gt;vuit o m\u00e9s paraules&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Introdu\u00efu la contrasenya antiga i la contrasenya nova al moneder.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>L'encriptaci\u00f3 del moneder ha fallat</translation>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Quant al Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Modifica les opcions de configuraci\u00f3 del Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Mostra la llista d'adreces d'enviament i etiquetes utilitzades</translation>\n@@ -418,6 +430,10 @@\n         <source>No block source available...</source>\n         <translation>No hi ha cap font de bloc disponible...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>S'han processat %n bloc de l'historial de transacci\u00f3.</numerusform><numerusform>S'han processat %n blocs de l'historial de transacci\u00f3.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n hora</numerusform><numerusform>%n hores</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>S'est\u00e0 posant al dia ...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Data: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Import: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Tipus: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Etiqueta: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adre\u00e7a: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Transacci\u00f3 enviada</translation>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>cap</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Aquesta etiqueta es torna en vermell si la transacci\u00f3 \u00e9s superior a 1000 bytes.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Aquesta etiqueta es torna en vermell si la propietat \u00e9s inferior que la \u00abmitjana\u00bb.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Aquesta etiqueta es torna vermella si el destinatari rep un import inferior de %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Pot variar +/- %1 satoshi(s) per entrada.</translation>\n@@ -918,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Adre\u00e7a IP del proxy (p. ex. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimitza en comptes de sortir de l'aplicaci\u00f3 quan la finestra es tanca. Quan s'habilita aquesta opci\u00f3 l'aplicaci\u00f3 es tancara nom\u00e9s quan se selecciona Surt del men\u00fa. </translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>La interf\u00edcie d'usuari pot definir-se des d'aqu\u00ed. El par\u00e0metre tindr\u00e0 efecte despr\u00e9s de reiniciar el Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URL de terceres parts (p. ex. explorador de blocs) que apareix en la pestanya de transaccions com elements del men\u00fa contextual. %s en l'URL es reempla\u00e7at pel resum de la transacci\u00f3. Diferents URL estan separades per una barra vertical |.</translation>\n@@ -942,6 +1008,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Xarxa</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Inicia el Bitcoin Core autom\u00e0ticament despr\u00e9s d'iniciar una sessi\u00f3 en el sistema.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;Inicia el Bitcoin Core en inciar el sistema</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = auto, &lt;0 = deixa tants nuclis lliures)</translation>\n@@ -1054,6 +1128,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Cal reiniciar el client per activar els canvis.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>S'aturar\u00e0 el client. Voleu procedir?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Amb aquest canvi cal un reinici del client.</translation>\n@@ -1188,10 +1266,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>No es pot llegir el fitxer de la sol\u00b7licitud de pagament. Aix\u00f2 pot ser causat per un fitxer de sol\u00b7licitud de pagament no v\u00e0lid.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>No s'accepten sol\u00b7licituds de pagament no verificades a scripts de pagament personalitzats.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Sol\u00b7licitud de pagament no v\u00e0lida.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Reemborsament de %1</translation>\n@@ -1231,6 +1317,10 @@\n         <source>User Agent</source>\n         <translation>Agent d'usuari</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>Node/Servei</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n@@ -1352,6 +1442,10 @@\n         <source>Current number of blocks</source>\n         <translation>Nombre de blocs actuals</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Obre el fitxer de registre de depuraci\u00f3 del Bitcoin Core del directori de dades actual. Pot portar uns quants segons per a fitxers de registre grans.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Rebut</translation>\n@@ -1420,6 +1514,10 @@\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Difer\u00e8ncia hor\u00e0ria</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u00daltim temps de bloc</translation>\n@@ -1464,6 +1562,10 @@\n         <source>Clear console</source>\n         <translation>Neteja la consola</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Us donem la benviguda a la consola RPC del Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Utilitza les fletxes d'amunt i avall per navegar per l'historial, i &lt;b&gt;Ctrl-L&lt;\\b&gt; per netejar la pantalla.</translation>\n@@ -1760,6 +1862,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>Si la comissi\u00f3 personalitzada es defineix a 1000 satoshis i la transacci\u00f3 \u00e9s de nom\u00e9s 250 bytes, llavors \u00abper kilobyte\u00bb nom\u00e9s es paguen 250 satoshis en una comissi\u00f3, mentre que amb la de \u00abtotal com a m\u00ednim\u00bb es pagarien 1000 satoshis. Per a transaccions superiors al kilobyte, en tots dos casos es paga per kilobyte.</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Amaga</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>total com a m\u00ednim</translation>\n@@ -1900,10 +2006,30 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>S'ha rebutjat la transacci\u00f3! Aix\u00f2 pot passar si alguna de les monedes del vostre moneder ja s'han gastat; per exemple, si heu fet servir una c\u00f2pia de seguretat del fitxer wallet.dat i s'haguessin gastat monedes de la c\u00f2pia per\u00f2 sense marcar-les-hi com a gastades.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Una comissi\u00f3 superior a %1 es considera una comissi\u00f3 absurdament alta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n bloc.</numerusform><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n blocs.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Paga nom\u00e9s la comissi\u00f3 m\u00ednima de %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>L'adre\u00e7a de destinatari no \u00e9s v\u00e0lida. Torneu-la a comprovar.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>S'ha trobat una adre\u00e7a duplicada: cal utilitzar les adreces nom\u00e9s un cop cada vegada.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Av\u00eds: adre\u00e7a Bitcoin no v\u00e0lida</translation>\n@@ -1975,10 +2101,26 @@\n         <source>Remove this entry</source>\n         <translation>Elimina aquesta entrada</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>La comissi\u00f3 es deduir\u00e0 de l'import que s'enviar\u00e0. El destinatari rebr\u00e0 menys bitcoins que les que introdu\u00efu al camp d'import. Si se seleccionen m\u00faltiples destinataris, la comissi\u00f3 es dividir\u00e0 per igual.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>S&amp;ubstreu la comissi\u00f3 de l'import</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Missatge:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Aquesta \u00e9s una sol\u00b7licitud de pagament no autenticada.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Aquesta \u00e9s una sol\u00b7licitud de pagament autenticada.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Introdu\u00efu una etiqueta per a aquesta adre\u00e7a per afegir-la a la llista d'adreces utilitzades</translation>\n@@ -2017,6 +2159,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Signa el missatge</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Podeu signar missatges/acords amb les vostres adreces per provar que rebeu les bitcoins que s'hi envien. Aneu amb compte no signar res que sigui vague o aleatori, perqu\u00e8 en alguns atacs de suplantaci\u00f3 es pot provar que hi signeu la vostra identitat. Nom\u00e9s signeu aquelles declaracions completament detallades en qu\u00e8 hi esteu d'acord. </translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 signar el missatge</translation>\n@@ -2069,6 +2215,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Verifica el missatge</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Introdu\u00efu l'adre\u00e7a del receptor, el missatge (assegureu-vos de copiar els salts de l\u00ednia, espais, tabuladors, etc. exactament) i signatura de sota per verificar el missatge. Tingueu cura de no llegir m\u00e9s en la signatura del que est\u00e0 al missatge signat, per evitar ser enganyat per un atac d'home-en-el-mig. Tingueu en compte que aix\u00f2 nom\u00e9s demostra que la part que signa rep amb l'adre\u00e7a, i no es pot provar l'enviament de qualsevol transacci\u00f3!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 va ser signat el missatge</translation>\n@@ -2420,6 +2570,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>Si est\u00e0 implicada o no una adre\u00e7a nom\u00e9s de lectura en la transacci\u00f3.</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>Intenci\u00f3/prop\u00f2sit de la transacci\u00f3 definida per l'usuari.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Import extret o afegit del balan\u00e7.</translation>\n@@ -2670,17 +2824,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribu\u00eft sota llic\u00e8ncia de programari MIT. Vegeu el fitxer acompanyant COPYING o &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Entra en el mode de proves de regressi\u00f3, que utilitza una cadena especial en qu\u00e8 els blocs poden resoldre's al moment.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa una ordre quan una transacci\u00f3 del moneder canvi\u00ef (%s en cmd es canvia per TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>En aquest mode -genproclimit controla quants blocs es generen immediatament.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Comissions totals m\u00e0ximes que s'utilitzaran en una \u00fanica transacci\u00f3 de moneder; si s'estableix un valor massa baix es poden interrompre transaccions grans (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Redueix els requeriments d'emmagatzemament podant (suprimint) els blocs antics. Aquest mode inhabilita l'\u00fas de moneders i \u00e9s incompatible amb -tindex. Av\u00eds: Revertir aquesta configuraci\u00f3 comporta tornar a baixar la cadena de blocs sencera. (per defecte: 0 = inhabilita la poda de blocs, &gt;%u = mida objectiu en MiB per utilitzar els fitxers de blocs)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2694,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>No es pot enlla\u00e7ar %s a aquest ordinador. El Bitcoin Core probablement ja estigui executant-s'hi.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AV\u00cdS: s'ha generat un nombre an\u00f2malament alt de blocs, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AV\u00cdS: comproveu la vostra connexi\u00f3 a la xarxa, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Av\u00eds: el -paytxfee \u00e9s molt elevat! Aquesta \u00e9s la comissi\u00f3 de transacci\u00f3 que pagareu si envieu una transacci\u00f3.</translation>\n@@ -2810,6 +2972,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>Nom\u00e9s connecta als nodes de la xarxa &lt;net&gt; (ipv4, ipv6 o onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>La poda no es pot configurar amb un valor negatiu.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>El mode de poda \u00e9s incompatible amb -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Defineix la mida de la mem\u00f2ria cau de la base de dades en megabytes (%d a %d, per defecte: %d)</translation>\n@@ -2822,10 +2992,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Especifica un fitxer de moneder (dins del directori de dades)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Aix\u00f2 es aix\u00ed per a eines de proves de regressi\u00f3 per al desenvolupament d'aplicacions.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Utilitza UPnP per a mapejar el port d'escolta (per defecte: %u)</translation>\n@@ -2846,6 +3012,10 @@\n         <source>Wallet options:</source>\n         <translation>Opcions de moneder:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Av\u00eds: aquesta versi\u00f3 \u00e9s obsoleta; cal actualitzar-la!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Cal que reconstru\u00efu la base de dades fent servir -reindex per canviar -txindex</translation>\n@@ -2874,6 +3044,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>Crea fitxers nous amb els permisos per defecte del sistema, en comptes de l'umask 077 (nom\u00e9s efectiu amb la funcionalitat de moneder inhabilitada)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Descobreix l'adre\u00e7a IP pr\u00f2pia (per defecte: 1 quan s'escolta i no -externalip o -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: ha fallat escoltar les connexions entrants (l'escoltament ha retornat l'error %s)</translation>\n@@ -2890,10 +3064,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la transmissi\u00f3 (per defecte: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la creaci\u00f3 de la transacci\u00f3 (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si no s'especifica una paytxfee (comissi\u00f3 de transacci\u00f3 de pagament), inclogueu suficient comissi\u00f3 per tal que les transaccions comencin a confirmar-se en una mitja de n blocs (per defecte: %u)</translation>\n@@ -2906,10 +3076,18 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Mida m\u00e0xima de les dades en les transaccions de l'operador en qu\u00e8 confiem i en les meves (per defecte: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>Poda configurada per sota el m\u00ednim de %d MB. Feu servir un nombre superior.</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta a adreces d'iguals a trav\u00e9s de DNS, si es troba baix en adreces (per defecte: 1 a menys que -connect)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>Genera a l'atzar credencials per a cada connexi\u00f3 proxy. Aix\u00f2 habilita l'a\u00efllament del flux de Tor (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Defineix la mida m\u00e0xima de transaccions d'alta prioritat / baixa comissi\u00f3 en bytes (per defecte: %d)</translation>\n@@ -2918,6 +3096,10 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Defineix el nombre de fils per a la generaci\u00f3 de moneda si est\u00e0 habilitat (-1 = tots els nuclis, per defecte: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>L'import de la transacci\u00f3 \u00e9s massa petit per enviar-la despr\u00e9s que se'n dedueixi la comissi\u00f3</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Aquest producte inclou programari desenvolupat pel projecte OpenSSL per a \u00fas a l'OpenSSL Toolkit &lt;https://www.openssl.org/&gt; i programari criptogr\u00e0fic escrit per Eric Young i programari UPnP escrit per Thomas Bernard.</translation>\n@@ -2957,10 +3139,26 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Els iguals en la llista blanca no poden ser bandejats per DoS i es transmetran sempre llurs transaccions, fins i tot si ja s\u00f3n a la mempool. Aix\u00f2 \u00e9s \u00fatil, p. ex., per a una passarel\u00b7la</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>Cal que torneu a construir la base de dades fent servir -reindex per tornar al mode no podat. Aix\u00f2 tornar\u00e0 a baixar la cadena de blocs sencera</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>Accepta sol\u00b7licituds REST p\u00fabliques (per defecte: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>S'est\u00e0 activant la millor cadena...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>No es pot executar amb un moneder en mode poda.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n@@ -3050,12 +3248,12 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <translation>Suport RPC per a connexions HTTP persistents (per defecte: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Descarta a l'atzar 1 de cada &lt;n&gt; missatges de la xarxa</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>Reconstrueix l'\u00edndex de la cadena de blocs dels fitxers blk000??.dat actuals a l'inici.</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Introdueix incertesa en 1 de cada &lt;n&gt; missatges de la xarxa</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Rep i mostra avisos de la xarxa P2P (per defecte: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3093,6 +3291,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Start minimized</source>\n         <translation>Inicia minimitzat</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Aix\u00f2 \u00e9s programari experimental.</translation>\n@@ -3113,6 +3315,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Transaction too large</source>\n         <translation>La transacci\u00f3 \u00e9s massa gran</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opcions d'interf\u00edcie:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n@@ -3193,18 +3399,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = mant\u00e9 les metadades de les tx, p. ex., propietari del compte i informaci\u00f3 de sol\u00b7licitud del pagament, 2 = prescindeix de les metadades de les tx)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Buida l'activitat de la base de dades de la mem\u00f2ria disponible al registre del disc cada &lt;n&gt; megabytes (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Com d'exhaustiva \u00e9s la verificaci\u00f3 de blocs del -checkblocks (0-4, per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Enregistreu la prioritat de la transacci\u00f3 i la comissi\u00f3 per kB en minar blocs (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Mant\u00e9 un \u00edndex complet de transaccions, utilitzat per la crida rpc getrawtransaction (per defecte: %u)</translation>\n@@ -3233,18 +3431,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Demana sempre les adreces dels iguals a trav\u00e9s de consultes DNS (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Inhabilita el mode segur, sobreescriu un esdeveniment de mode segur real (per defecte: %u) </translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Error en carregar wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>For\u00e7a el mode segur (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Genera monedes (per defecte: %u)</translation>\n@@ -3261,10 +3451,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Adre\u00e7a -proxy invalida: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Limita la mida de la cau de signatura a &lt;n&gt; entrades (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Escolta les connexions JSON-RPC en &lt;port&gt; (per defecte: %u o testnet: %u)</translation>\n@@ -3277,6 +3463,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Mant\u00e9 com a m\u00e0xim &lt;n&gt; connexions a iguals (per defecte: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Fes que el moneder faci difusi\u00f3 de les transaccions</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Mem\u00f2ria interm\u00e8dia m\u00e0xima de recepci\u00f3 per connexi\u00f3, &lt;n&gt;*1000 bytes (per defecte: %u)</translation>\n@@ -3285,10 +3475,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Mem\u00f2ria interm\u00e8dia m\u00e0xima d'enviament per connexi\u00f3, &lt;n&gt;*1000 bytes (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Nom\u00e9s accepta els punts de control integrats que coincideixen amb la cadena de blocs (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Posa davant de la sortida de depuraci\u00f3 una marca hor\u00e0ria (per defecte: %u)</translation>\n@@ -3301,10 +3487,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Retransmet multisig no P2SH (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Executa un fil per buidar el moneder peri\u00f2dicament (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Fitxer de certificat del servidor (per defecte: %s)</translation>\n@@ -3325,10 +3507,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Defineix el nombre de fils a crides de servei RPC (per defecte: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Defineix el senyalador DB_PRIVATE en l'entorn db del moneder (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Especifica el fitxer de configuraci\u00f3 (per defecte: %s)</translation>\n@@ -3345,10 +3523,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Gasta el canvi no confirmat en enviar les transaccions (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Atura l'execuci\u00f3 despr\u00e9s d'importar blocs del disc (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Llindar per a desconnectar els iguals de comportament q\u00fcestionable (per defecte: %u)</translation>"
      },
      {
        "sha": "b77845cfb246f178f6f2366c7101cfd07decaccf",
        "filename": "src/qt/locale/bitcoin_ca@valencia.ts",
        "status": "modified",
        "additions": 619,
        "deletions": 38,
        "changes": 657,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ca@valencia.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ca@valencia.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca@valencia.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"ca@valencia\" version=\"2.1\">\n+<TS language=\"ca@valencia\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Feu clic dret per a editar l'adre\u00e7a o l'etiqueta</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Crea una nova adre\u00e7a</translation>\n@@ -83,7 +87,7 @@\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n-        <translation>Fitxer separat per comes (*.csv)</translation>\n+        <translation>Fitxer de separaci\u00f3 amb comes (*.csv)</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n@@ -163,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Esteu segur que voleu encriptar el vostre moneder?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Ara es tancar\u00e0 el Bitcoin Core per finalitzar el proc\u00e9s d'encriptaci\u00f3. Tingueu present que encriptar el vostre moneder no garanteix que les vostres bitcoins no puguen ser robades per programari malici\u00f3s que infecti l'ordinador.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>IMPORTANT: Tota copia de seguretat que h\u00e0geu realitzat hauria de ser reempla\u00e7ada pel, recentment generat, fitxer encriptat del moneder.</translation>\n@@ -179,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Introdu\u00efu la contrasenya nova al moneder.&lt;br/&gt;Utilitzeu una contrasenya de &lt;b&gt;deu o m\u00e9s car\u00e0cters aleatoris&lt;/b&gt;, o &lt;b&gt;vuit o m\u00e9s paraules&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Introdu\u00efu la contrasenya antiga i la contrasenya nova al moneder.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>L'encriptaci\u00f3 del moneder ha fallat</translation>\n@@ -386,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Quant al Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Modifica les opcions de configuraci\u00f3 del Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Mostra la llista d'adreces d'enviament i etiquetes utilitzades</translation>\n@@ -406,14 +422,34 @@\n         <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Mostra el missatge d'ajuda del Bitcoin Core per obtindre una llista amb les possibles opcions de l\u00ednia d'ordes de Bitcoin</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n active connection(s) to Bitcoin network</source>\n+        <translation><numerusform>%n connexi\u00f3 activa a la xarxa Bitcoin</numerusform><numerusform>%n connexions actives a la xarxa Bitcoin</numerusform></translation>\n+    </message>\n     <message>\n         <source>No block source available...</source>\n         <translation>No hi ha cap font de bloc disponible...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n hora</numerusform><numerusform>%n hores</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n dia</numerusform><numerusform>%n dies</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n setmana</numerusform><numerusform>%n setmanes</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 i %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n any</numerusform><numerusform>%n anys</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 darrere</translation>\n@@ -436,7 +472,7 @@\n     </message>\n     <message>\n         <source>Information</source>\n-        <translation>&amp;Informaci\u00f3</translation>\n+        <translation>Informaci\u00f3</translation>\n     </message>\n     <message>\n         <source>Up to date</source>\n@@ -446,6 +482,36 @@\n         <source>Catching up...</source>\n         <translation>S'est\u00e0 posant al dia ...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Data: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Import: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Tipus: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Etiqueta: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adre\u00e7a: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Transacci\u00f3 enviada</translation>\n@@ -472,6 +538,10 @@\n </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>Selecci\u00f3 de moneda</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>Quantitat:</translation>\n@@ -490,15 +560,15 @@\n     </message>\n     <message>\n         <source>Fee:</source>\n-        <translation>Comissi\u00f3:</translation>\n+        <translation>Comissi\u00f3</translation>\n     </message>\n     <message>\n         <source>Dust:</source>\n         <translation>Polsim:</translation>\n     </message>\n     <message>\n         <source>After Fee:</source>\n-        <translation>Quota posterior:</translation>\n+        <translation>Comissi\u00f3 posterior:</translation>\n     </message>\n     <message>\n         <source>Change:</source>\n@@ -518,7 +588,15 @@\n     </message>\n     <message>\n         <source>Amount</source>\n-        <translation>Quantitat</translation>\n+        <translation>Import</translation>\n+    </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>Rebut amb l'etiqueta</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>Rebut amb l'adre\u00e7a</translation>\n     </message>\n     <message>\n         <source>Date</source>\n@@ -538,11 +616,11 @@\n     </message>\n     <message>\n         <source>Copy address</source>\n-        <translation>Copia l'adre\u00e7a</translation>\n+        <translation>Copiar adre\u00e7a </translation>\n     </message>\n     <message>\n         <source>Copy label</source>\n-        <translation>Copia l'etiqueta</translation>\n+        <translation>Copiar etiqueta</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n@@ -566,7 +644,7 @@\n     </message>\n     <message>\n         <source>Copy fee</source>\n-        <translation>Copia la comissi</translation>\n+        <translation>Copia la comissi\u00f3</translation>\n     </message>\n     <message>\n         <source>Copy after fee</source>\n@@ -632,6 +710,18 @@\n         <source>none</source>\n         <translation>cap</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Esta etiqueta es torna en roig si la transacci\u00f3 \u00e9s superior a 1000 bytes.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Esta etiqueta es torna en roig si la propietat \u00e9s inferior que la \u00abmitjana\u00bb.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Esta etiqueta es torna roja si el destinatari rep un import inferior de %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Pot variar +/- %1 satoshi(s) per entrada.</translation>\n@@ -646,7 +736,7 @@\n     </message>\n     <message>\n         <source>This means a fee of at least %1 per kB is required.</source>\n-        <translation>Aix\u00f2 comporta una comissi d'almenys %1 per kB.</translation>\n+        <translation>Aix\u00f2 comporta una comissi\u00f3 d'almenys %1 per kB.</translation>\n     </message>\n     <message>\n         <source>Can vary +/- 1 byte per input.</source>\n@@ -673,7 +763,7 @@\n     <name>EditAddressDialog</name>\n     <message>\n         <source>Edit Address</source>\n-        <translation>Editar Adre\u00e7a</translation>\n+        <translation>Edita l'adre\u00e7a</translation>\n     </message>\n     <message>\n         <source>&amp;Label</source>\n@@ -816,7 +906,15 @@\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>%n GB d'espai lliure disponible</numerusform><numerusform>%n GB d'espai lliure disponible</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>(of %n GB needed)</source>\n+        <translation><numerusform>(de %n GB necessari)</numerusform><numerusform>(de %n GB necessaris)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -874,6 +972,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Adre\u00e7a IP del proxy (p. ex. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimitza en comptes d'eixir de l'aplicaci\u00f3 quan la finestra es tanca. Quan s'habilita esta opci\u00f3 l'aplicaci\u00f3 es tancara nom\u00e9s quan se selecciona Ix del men\u00fa. </translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>La interf\u00edcie d'usuari pot definir-se des d'ac\u00ed. El par\u00e0metre tindr\u00e0 efecte despr\u00e9s de reiniciar el Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URL de terceres parts (p. ex. explorador de blocs) que apareix en la pestanya de transaccions com elements del men\u00fa contextual. %s en l'URL es reempla\u00e7at pel resum de la transacci\u00f3. Diferents URL estan separades per una barra vertical |.</translation>\n@@ -898,6 +1004,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Xarxa</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Inicia el Bitcoin Core autom\u00e0ticament despr\u00e9s d'iniciar una sessi\u00f3 en el sistema.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;Inicia el Bitcoin Core en inciar el sistema</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = auto, &lt;0 = deixa tants nuclis lliures)</translation>\n@@ -930,6 +1044,14 @@\n         <source>Map port using &amp;UPnP</source>\n         <translation>Port obert amb &amp;UPnP</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n+        <translation>Connecta a la xarxa Bitcoin a trav\u00e9s d'un proxy SOCKS5.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Connect through SOCKS5 proxy (default proxy):</source>\n+        <translation>&amp;Connecta a trav\u00e9s d'un proxy SOCKS5 (proxy per defecte):</translation>\n+    </message>\n     <message>\n         <source>Proxy &amp;IP:</source>\n         <translation>&amp;IP del proxy:</translation>\n@@ -1002,6 +1124,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Cal reiniciar el client per activar els canvis.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>Es parar\u00e0 el client. Voleu procedir?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Amb este canvi cal un reinici del client.</translation>\n@@ -1049,6 +1175,10 @@\n         <source>Mined balance that has not yet matured</source>\n         <translation>Balan\u00e7 minat que encara no ha madurat</translation>\n     </message>\n+    <message>\n+        <source>Balances</source>\n+        <translation>Balances</translation>\n+    </message>\n     <message>\n         <source>Total:</source>\n         <translation>Total:</translation>\n@@ -1061,6 +1191,14 @@\n         <source>Your current balance in watch-only addresses</source>\n         <translation>El vostre balan\u00e7 actual en adreces de nom\u00e9s lectura</translation>\n     </message>\n+    <message>\n+        <source>Spendable:</source>\n+        <translation>Que es pot gastar:</translation>\n+    </message>\n+    <message>\n+        <source>Recent transactions</source>\n+        <translation>Transaccions recents</translation>\n+    </message>\n     <message>\n         <source>Unconfirmed transactions to watch-only addresses</source>\n         <translation>Transaccions sense confirmar a adreces de nom\u00e9s lectura</translation>\n@@ -1124,14 +1262,30 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>No es pot llegir el fitxer de la sol\u00b7licitud de pagament. Aix\u00f2 pot ser causat per un fitxer de sol\u00b7licitud de pagament no v\u00e0lid.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>No s'accepten sol\u00b7licituds de pagament no verificades a scripts de pagament personalitzats.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Sol\u00b7licitud de pagament no v\u00e0lida.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Reemborsament de %1</translation>\n     </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>La sol\u00b7licitud de pagament %1 \u00e9s massa gran (%2 bytes, perm\u00e9s %3 bytes).</translation>\n+    </message>\n+    <message>\n+        <source>Payment request DoS protection</source>\n+        <translation>Protecci\u00f3 de DoS per a la sol\u00b7licitud de pagament</translation>\n+    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Error en comunicar amb %1: %2</translation>\n@@ -1159,6 +1313,10 @@\n         <source>User Agent</source>\n         <translation>Agent d'usuari</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>Node/Servei</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n@@ -1168,7 +1326,7 @@\n     <name>QObject</name>\n     <message>\n         <source>Amount</source>\n-        <translation>Quantitat</translation>\n+        <translation>Import</translation>\n     </message>\n     <message>\n         <source>Enter a Bitcoin address (e.g. %1)</source>\n@@ -1280,6 +1438,10 @@\n         <source>Current number of blocks</source>\n         <translation>Nombre de blocs actuals</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Obri el fitxer de registre de depuraci\u00f3 del Bitcoin Core del directori de dades actual. Pot portar uns quants segons per a fitxers de registre grans.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Rebut</translation>\n@@ -1348,6 +1510,10 @@\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Difer\u00e8ncia hor\u00e0ria</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u00daltim temps de bloc</translation>\n@@ -1392,6 +1558,10 @@\n         <source>Clear console</source>\n         <translation>Neteja la consola</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Vos donem la benviguda a la consola RPC del Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Utilitza les fletxes d'amunt i avall per navegar per l'historial, i &lt;b&gt;Ctrl-L&lt;\\b&gt; per netejar la pantalla.</translation>\n@@ -1560,7 +1730,7 @@\n     </message>\n     <message>\n         <source>Amount</source>\n-        <translation>Quantitat</translation>\n+        <translation>Import</translation>\n     </message>\n     <message>\n         <source>Label</source>\n@@ -1595,7 +1765,7 @@\n     </message>\n     <message>\n         <source>Amount</source>\n-        <translation>Quantitat</translation>\n+        <translation>Import</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n@@ -1654,7 +1824,7 @@\n     </message>\n     <message>\n         <source>After Fee:</source>\n-        <translation>Quota posterior:</translation>\n+        <translation>Comissi\u00f3 posterior:</translation>\n     </message>\n     <message>\n         <source>Change:</source>\n@@ -1668,6 +1838,74 @@\n         <source>Custom change address</source>\n         <translation>Personalitza l'adre\u00e7a de canvi</translation>\n     </message>\n+    <message>\n+        <source>Transaction Fee:</source>\n+        <translation>Comissi\u00f3 de transacci\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Choose...</source>\n+        <translation>Tria...</translation>\n+    </message>\n+    <message>\n+        <source>collapse fee-settings</source>\n+        <translation>redueix els par\u00e0metres de comissi\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>per kilobyte</source>\n+        <translation>per kilobyte</translation>\n+    </message>\n+    <message>\n+        <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n+        <translation>Si la comissi\u00f3 personalitzada es defineix a 1000 satoshis i la transacci\u00f3 \u00e9s de nom\u00e9s 250 bytes, llavors \u00abper kilobyte\u00bb nom\u00e9s es paguen 250 satoshis en una comissi\u00f3, mentre que amb la de \u00abtotal com a m\u00ednim\u00bb es pagarien 1000 satoshis. Per a transaccions superiors al kilobyte, en tots dos casos es paga per kilobyte.</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Amaga</translation>\n+    </message>\n+    <message>\n+        <source>total at least</source>\n+        <translation>total com a m\u00ednim</translation>\n+    </message>\n+    <message>\n+        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n+        <translation>No hi ha cap problema en pagar nom\u00e9s la comissi\u00f3 m\u00ednima sempre que hi haja menys volum de transacci\u00f3 que espai en els blocs. Per\u00f2 tingueu present que aix\u00f2 pot acabar en una transacci\u00f3 que mai es confirme una vegada hi haja m\u00e9s demanda de transaccions de bitcoins que la xarxa puga processar.</translation>\n+    </message>\n+    <message>\n+        <source>(read the tooltip)</source>\n+        <translation>(llegiu l'indicador de funci\u00f3)</translation>\n+    </message>\n+    <message>\n+        <source>Recommended:</source>\n+        <translation>Recomanada:</translation>\n+    </message>\n+    <message>\n+        <source>Custom:</source>\n+        <translation>Personalitzada:</translation>\n+    </message>\n+    <message>\n+        <source>(Smart fee not initialized yet. This usually takes a few blocks...)</source>\n+        <translation>(No s'ha inicialitzat encara la comissi\u00f3 intel\u00b7ligent. Normalment pren uns pocs blocs...)</translation>\n+    </message>\n+    <message>\n+        <source>Confirmation time:</source>\n+        <translation>Temps de confirmaci\u00f3:</translation>\n+    </message>\n+    <message>\n+        <source>normal</source>\n+        <translation>normal</translation>\n+    </message>\n+    <message>\n+        <source>fast</source>\n+        <translation>r\u00e0pid</translation>\n+    </message>\n+    <message>\n+        <source>Send as zero-fee transaction if possible</source>\n+        <translation>Envia com a transacci\u00f3 de comissi\u00f3 zero si \u00e9s possible</translation>\n+    </message>\n+    <message>\n+        <source>(confirmation may take longer)</source>\n+        <translation>(la confirmaci\u00f3 pot trigar m\u00e9s temps)</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>Envia a m\u00faltiples destinataris al mateix temps</translation>\n@@ -1678,7 +1916,7 @@\n     </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n-        <translation>Esborra tots els camps del formuari.</translation>\n+        <translation>Netejar tots els camps del formulari.</translation>\n     </message>\n     <message>\n         <source>Dust:</source>\n@@ -1718,7 +1956,7 @@\n     </message>\n     <message>\n         <source>Copy fee</source>\n-        <translation>Copia la comissi</translation>\n+        <translation>Copia la comissi\u00f3</translation>\n     </message>\n     <message>\n         <source>Copy after fee</source>\n@@ -1754,7 +1992,7 @@\n     </message>\n     <message>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n-        <translation>El total excedeix el teu balan\u00e7 quan s'afig la comisi\u00f3 a la transacci\u00f3 %1.</translation>\n+        <translation>El total excedeix el teu balan\u00e7 quan s'afig la comissi\u00f3 a la transacci\u00f3 %1.</translation>\n     </message>\n     <message>\n         <source>Transaction creation failed!</source>\n@@ -1764,6 +2002,30 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>S'ha rebutjat la transacci\u00f3! Aix\u00f2 pot passar si alguna de les monedes del vostre moneder ja s'han gastat; per exemple, si heu fet servir una c\u00f2pia de seguretat del fitxer wallet.dat i s'hagueren gastat monedes de la c\u00f2pia per\u00f2 sense marcar-les-hi com a gastades.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Una comissi\u00f3 superior a %1 es considera una comissi\u00f3 absurdament alta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n bloc.</numerusform><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n blocs.</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Pay only the minimum fee of %1</source>\n+        <translation>Paga nom\u00e9s la comissi\u00f3 m\u00ednima de %1</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>L'adre\u00e7a de destinatari no \u00e9s v\u00e0lida. Torneu-la a comprovar.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>S'ha trobat una adre\u00e7a duplicada: cal utilitzar les adreces nom\u00e9s un cop cada vegada.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Av\u00eds: adre\u00e7a Bitcoin no v\u00e0lida</translation>\n@@ -1835,10 +2097,26 @@\n         <source>Remove this entry</source>\n         <translation>Elimina esta entrada</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>La comissi\u00f3 es deduir\u00e0 de l'import que s'enviar\u00e0. El destinatari rebr\u00e0 menys bitcoins que les que introdu\u00efu al camp d'import. Si se seleccionen m\u00faltiples destinataris, la comissi\u00f3 es dividir\u00e0 per igual.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>S&amp;ubstreu la comissi\u00f3 de l'import</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Missatge:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Esta \u00e9s una sol\u00b7licitud de pagament no autenticada.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Esta \u00e9s una sol\u00b7licitud de pagament autenticada.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Introdu\u00efu una etiqueta per a esta adre\u00e7a per afegir-la a la llista d'adreces utilitzades</translation>\n@@ -1877,21 +2155,25 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Signa el missatge</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Podeu signar missatges/acords amb les vostres adreces per provar que rebeu les bitcoins que s'hi envien. Aneu amb compte no signar res que siga vague o aleatori, perqu\u00e8 en alguns atacs de suplantaci\u00f3 es pot provar que hi signeu la vostra identitat. Nom\u00e9s signeu aquelles declaracions completament detallades en qu\u00e8 hi esteu d'acord. </translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 signar el missatge</translation>\n     </message>\n     <message>\n         <source>Choose previously used address</source>\n-        <translation>Trieu una adre\u00e7a feta servir anteriorment</translation>\n+        <translation>Tria les adreces fetes servir amb anterioritat</translation>\n     </message>\n     <message>\n         <source>Alt+A</source>\n-        <translation>Alta+A</translation>\n+        <translation>Alt+A</translation>\n     </message>\n     <message>\n         <source>Paste address from clipboard</source>\n-        <translation>Apegar adre\u00e7a del porta-retalls</translation>\n+        <translation>Apega l'adre\u00e7a del porta-retalls</translation>\n     </message>\n     <message>\n         <source>Alt+P</source>\n@@ -1929,6 +2211,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Verifica el missatge</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Introdu\u00efu l'adre\u00e7a del receptor, el missatge (assegureu-vos de copiar els salts de l\u00ednia, espais, tabuladors, etc. exactament) i signatura de sota per verificar el missatge. Tingueu cura de no llegir m\u00e9s en la signatura del que est\u00e0 al missatge signat, per evitar ser enganyat per un atac d'home-en-el-mig. Tingueu en compte que aix\u00f2 nom\u00e9s demostra que la part que signa rep amb l'adre\u00e7a, i no es pot provar l'enviament de qualsevol transacci\u00f3!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 va ser signat el missatge</translation>\n@@ -2002,7 +2288,7 @@\n     <name>SplashScreen</name>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Nucli de Bitcoin</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>The Bitcoin Core developers</source>\n@@ -2046,6 +2332,10 @@\n         <source>Status</source>\n         <translation>Estat</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>, broadcast through %n node(s)</source>\n+        <translation><numerusform>, difusi\u00f3 a trav\u00e9s de %n node</numerusform><numerusform>, difusi\u00f3 a trav\u00e9s de %n nodes</numerusform></translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Data</translation>\n@@ -2082,6 +2372,10 @@\n         <source>Credit</source>\n         <translation>Cr\u00e8dit</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>madura en %n bloc m\u00e9s</numerusform><numerusform>madura en %n blocs m\u00e9s</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>no acceptat</translation>\n@@ -2140,7 +2434,7 @@\n     </message>\n     <message>\n         <source>Amount</source>\n-        <translation>Quantitat</translation>\n+        <translation>Import</translation>\n     </message>\n     <message>\n         <source>true</source>\n@@ -2154,6 +2448,10 @@\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, encara no ha estat em\u00e9s correctement</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Obri per %n bloc m\u00e9s</numerusform><numerusform>Obri per %n blocs m\u00e9s</numerusform></translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>desconegut</translation>\n@@ -2184,6 +2482,10 @@\n         <source>Immature (%1 confirmations, will be available after %2)</source>\n         <translation>Immadur (%1 confirmacions, ser\u00e0 disponible despr\u00e9s de %2)</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Obri per %n bloc m\u00e9s</numerusform><numerusform>Obri per %n blocs m\u00e9s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Obert fins %1</translation>\n@@ -2260,6 +2562,14 @@\n         <source>Type of transaction.</source>\n         <translation>Tipus de transacci\u00f3.</translation>\n     </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Si est\u00e0 implicada o no una adre\u00e7a nom\u00e9s de lectura en la transacci\u00f3.</translation>\n+    </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>Intenci\u00f3/prop\u00f2sit de la transacci\u00f3 definida per l'usuari.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Import extret o afegit del balan\u00e7.</translation>\n@@ -2329,7 +2639,7 @@\n     </message>\n     <message>\n         <source>Copy label</source>\n-        <translation>Copia l'etiqueta</translation>\n+        <translation>Copiar etiqueta</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n@@ -2351,6 +2661,10 @@\n         <source>Export Transaction History</source>\n         <translation>Exporta l'historial de transacci\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Nom\u00e9s de lectura</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>L'exportaci\u00f3 ha fallat</translation>\n@@ -2503,16 +2817,20 @@\n         <translation>Elimina totes les transaccions del moneder i nom\u00e9s recupera aquelles de la cadena de blocs a trav\u00e9s de -rescan a l'inici</translation>\n     </message>\n     <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Entra en el mode de proves de regressi\u00f3, que utilitza una cadena especial en qu\u00e8 els blocs poden resoldre's al moment.</translation>\n+        <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n+        <translation>Distribu\u00eft sota llic\u00e8ncia de programari MIT. Vegeu el fitxer acompanyant COPYING o &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa una orde quan una transacci\u00f3 del moneder canvie (%s en cmd es canvia per TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>En este mode -genproclimit controla quants blocs es generen immediatament.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Comissions totals m\u00e0ximes que s'utilitzaran en una \u00fanica transacci\u00f3 de moneder; si s'estableix un valor massa baix es poden interrompre transaccions grans (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Redueix els requeriments d'emmagatzemament podant (suprimint) els blocs antics. Este mode inhabilita l'\u00fas de moneders i \u00e9s incompatible amb -tindex. Av\u00eds: Revertir esta configuraci\u00f3 comporta tornar a baixar la cadena de blocs sencera. (per defecte: 0 = inhabilita la poda de blocs, &gt;%u = mida objectiu en MiB per utilitzar els fitxers de blocs)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2526,6 +2844,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>No es pot enlla\u00e7ar %s a este ordinador. El Bitcoin Core probablement ja estiga executant-s'hi.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AV\u00cdS: s'ha generat un nombre an\u00f2malament alt de blocs, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AV\u00cdS: comproveu la vostra connexi\u00f3 a la xarxa, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Av\u00eds: el -paytxfee \u00e9s molt elevat! Esta \u00e9s la comissi\u00f3 de transacci\u00f3 que pagareu si envieu una transacci\u00f3.</translation>\n@@ -2546,6 +2872,10 @@\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Av\u00eds: el fitxer wallet.dat \u00e9s corrupte, dades rescatades! L'arxiu wallet.dat original ha estat guardat com wallet.{estampa_temporal}.bak al directori %s; si el teu balan\u00e7 o transaccions son incorrectes hauries de restaurar-lo de un backup.</translation>\n     </message>\n+    <message>\n+        <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n+        <translation>Afig a la llista blanca els iguals que es connecten de la m\u00e0scara de xarxa o adre\u00e7a IP donada. Es pot especificar moltes vegades.</translation>\n+    </message>\n     <message>\n         <source>(default: 1)</source>\n         <translation>(per defecte: 1)</translation>\n@@ -2602,6 +2932,10 @@\n         <source>Error opening block database</source>\n         <translation>Error en obrir la base de dades de blocs</translation>\n     </message>\n+    <message>\n+        <source>Error: A fatal internal error occured, see debug.log for details</source>\n+        <translation>Error: s'ha produ\u00eft un error intern fatal. Consulteu debug.log per a m\u00e9s detalls</translation>\n+    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Error: Espai al disc baix!</translation>\n@@ -2630,6 +2964,18 @@\n         <source>Not enough file descriptors available.</source>\n         <translation>No hi ha suficient descriptors de fitxers disponibles.</translation>\n     </message>\n+    <message>\n+        <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n+        <translation>Nom\u00e9s connecta als nodes de la xarxa &lt;net&gt; (ipv4, ipv6 o onion)</translation>\n+    </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>La poda no es pot configurar amb un valor negatiu.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>El mode de poda \u00e9s incompatible amb -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Defineix la mida de la mem\u00f2ria cau de la base de dades en megabytes (%d a %d, per defecte: %d)</translation>\n@@ -2643,8 +2989,8 @@\n         <translation>Especifica un fitxer de moneder (dins del directori de dades)</translation>\n     </message>\n     <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Aix\u00f2 s'aix\u00ed per a eines de proves de regressi\u00f3 per al desenvolupament d'aplicacions.</translation>\n+        <source>Use UPnP to map the listening port (default: %u)</source>\n+        <translation>Utilitza UPnP per a mapejar el port d'escolta (per defecte: %u)</translation>\n     </message>\n     <message>\n         <source>Verifying blocks...</source>\n@@ -2662,6 +3008,10 @@\n         <source>Wallet options:</source>\n         <translation>Opcions de moneder:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Av\u00eds: esta versi\u00f3 \u00e9s obsoleta; cal actualitzar-la!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Cal que reconstru\u00efu la base de dades fent servir -reindex per canviar -txindex</translation>\n@@ -2690,6 +3040,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>Crea fitxers nous amb els permisos per defecte del sistema, en comptes de l'umask 077 (nom\u00e9s efectiu amb la funcionalitat de moneder inhabilitada)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Descobreix l'adre\u00e7a IP pr\u00f2pia (per defecte: 1 quan s'escolta i no -externalip o -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: ha fallat escoltar les connexions entrants (l'escoltament ha retornat l'error %s)</translation>\n@@ -2707,21 +3061,72 @@\n         <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la transmissi\u00f3 (per defecte: %s)</translation>\n     </message>\n     <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la creaci\u00f3 de la transacci\u00f3 (per defecte: %s)</translation>\n+        <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n+        <translation>Si no s'especifica una paytxfee (comissi\u00f3 de transacci\u00f3 de pagament), inclogueu suficient comissi\u00f3 per tal que les transaccions comencen a confirmar-se en una mitja de n blocs (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>Import no v\u00e0lid per a -maxtxfee=&lt;amount&gt;: '%s' (cal que siga com a m\u00ednim la comissi\u00f3 de minrelay de %s per evitar que les comissions s'encallin)</translation>\n+    </message>\n+    <message>\n+        <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n+        <translation>Mida m\u00e0xima de les dades en les transaccions de l'operador en qu\u00e8 confiem i en les meues (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>Poda configurada per sota el m\u00ednim de %d MB. Feu servir un nombre superior.</translation>\n     </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta a adreces d'iguals a trav\u00e9s de DNS, si es troba baix en adreces (per defecte: 1 a menys que -connect)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>Genera a l'atzar credencials per a cada connexi\u00f3 proxy. Aix\u00f2 habilita l'a\u00efllament del flux de Tor (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Defineix la mida m\u00e0xima de transaccions d'alta prioritat / baixa comissi\u00f3 en bytes (per defecte: %d)</translation>\n     </message>\n+    <message>\n+        <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n+        <translation>Defineix el nombre de fils per a la generaci\u00f3 de moneda si est\u00e0 habilitat (-1 = tots els nuclis, per defecte: %d)</translation>\n+    </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>L'import de la transacci\u00f3 \u00e9s massa petit per enviar-la despr\u00e9s que se'n dedu\u00efsca la comissi\u00f3</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Este producte inclou programari desenvolupat pel projecte OpenSSL per a \u00fas a l'OpenSSL Toolkit &lt;https://www.openssl.org/&gt; i programari criptogr\u00e0fic escrit per Eric Young i programari UPnP escrit per Thomas Bernard.</translation>\n     </message>\n+    <message>\n+        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n+%s\n+It is recommended you use the following random password:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(you do not need to remember this password)\n+The username and password MUST NOT be the same.\n+If the file does not exist, create it with owner-readable-only file permissions.\n+It is also recommended to set alertnotify so you are notified of problems;\n+for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n+</source>\n+        <translation>Per utilitzar bitcoind, o l'opci\u00f3 de serviddor de bitcoin-qt, heu de definir una rpcpassword en el fitxer de configuraci\u00f3:\n+%s\n+Es recomana que utilitzeu la contrasenya aleat\u00f2ria seg\u00fcent:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(no cal que recordeu la contrasenya)\n+El nom d'usuari i la contrasenya NO han de ser els mateixos.\n+Si el fitxer no existeix, creeu-ne un amb permisos de lectura nom\u00e9s per al seu propietari.\n+Es recomana definir alertnotify per tal de ser notificat de qualsevol problema;\n+per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</translation>\n+    </message>\n+    <message>\n+        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>Av\u00eds: s'ha especificat un -maxtxfee molt alt! Comissions tan grans podrien pagar-se en una \u00fanica transacci\u00f3.</translation>\n+    </message>\n     <message>\n         <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n         <translation>Av\u00eds: comproveu que la data i hora del vostre ordinador siguen correctes! Si el vostre rellotge no \u00e9s correcte, el Bitcoin Core no funcionar\u00e0 correctament.</translation>\n@@ -2730,6 +3135,26 @@\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Els iguals en la llista blanca no poden ser bandejats per DoS i es transmetran sempre llurs transaccions, fins i tot si ja s\u00f3n a la mempool. Aix\u00f2 \u00e9s \u00fatil, p. ex., per a una passarel\u00b7la</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>Cal que torneu a construir la base de dades fent servir -reindex per tornar al mode no podat. Aix\u00f2 tornar\u00e0 a baixar la cadena de blocs sencera</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Accept public REST requests (default: %u)</source>\n+        <translation>Accepta sol\u00b7licituds REST p\u00fabliques (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>S'est\u00e0 activant la millor cadena...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>No es pot executar amb un moneder en mode poda.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n@@ -2754,6 +3179,10 @@\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Error en carregar wallet.dat: el moneder requereix una versi\u00f3 m\u00e9s nova del Bitcoin core</translation>\n     </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>Error en llegir la base de dades, tancant.</translation>\n+    </message>\n     <message>\n         <source>Error: Unsupported argument -tor found, use -onion.</source>\n         <translation>Error: s'ha trobat un argument -tor no acceptat. Feu servir -onion.</translation>\n@@ -2770,6 +3199,10 @@\n         <source>Initialization sanity check failed. Bitcoin Core is shutting down.</source>\n         <translation>Ha fallat la inicialitzaci\u00f3 de la comprovaci\u00f3 de validesa. El Bitcoin Core s'est\u00e0 parant.</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Import no v\u00e0lid per a -maxtxfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: '%s'</source>\n         <translation>Import no v\u00e0lid per a -minrelaytxfee=&lt;amount&gt;: \u00ab%s\u00bb</translation>\n@@ -2786,6 +3219,10 @@\n         <source>Invalid netmask specified in -whitelist: '%s'</source>\n         <translation>S'ha especificat una m\u00e0scara de xarxa no v\u00e0lida a -whitelist: \u00ab%s\u00bb</translation>\n     </message>\n+    <message>\n+        <source>Keep at most &lt;n&gt; unconnectable transactions in memory (default: %u)</source>\n+        <translation>Mant\u00e9 com a m\u00e0xim &lt;n&gt; transaccions no connectables en mem\u00f2ria (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>Cal especificar un port amb -whitebind: \u00ab%s\u00bb</translation>\n@@ -2803,24 +3240,32 @@\n         <translation>Opcions del servidor RPC:</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Descarta a l'atzar 1 de cada &lt;n&gt; missatges de la xarxa</translation>\n+        <source>RPC support for HTTP persistent connections (default: %d)</source>\n+        <translation>Suport RPC per a connexions HTTP persistents (per defecte: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Introdueix incertesa en 1 de cada &lt;n&gt; missatges de la xarxa</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>Reconstrueix l'\u00edndex de la cadena de blocs dels fitxers blk000??.dat actuals a l'inici.</translation>\n+    </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Rep i mostra avisos de la xarxa P2P (per defecte: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Envia informaci\u00f3 de tra\u00e7a/depuraci\u00f3 a la consola en comptes del fitxer debug.log</translation>\n     </message>\n+    <message>\n+        <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n+        <translation>Envia les transaccions com a transaccions de comissi\u00f3 zero sempre que siga possible (per defecte: %u) </translation>\n+    </message>\n     <message>\n         <source>Set SSL root certificates for payment request (default: -system-)</source>\n         <translation>Defineix certificats arrel SSL per a la sol\u00b7licitud de pagament (per defecte: -sistema-)</translation>\n     </message>\n     <message>\n         <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Defineix un idioma, per exemple \"de_DE\" (per defecte: prefer\u00e8ncies locals de sistema)</translation>\n+        <translation>Defineix un idioma, per exemple \u00abde_DE\u00bb (per defecte: prefer\u00e8ncies locals de sistema)</translation>\n     </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n@@ -2842,6 +3287,10 @@\n         <source>Start minimized</source>\n         <translation>Inicia minimitzat</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Aix\u00f2 \u00e9s programari experimental.</translation>\n@@ -2854,10 +3303,18 @@\n         <source>Transaction amounts must be positive</source>\n         <translation>Els imports de les transaccions han de ser positius</translation>\n     </message>\n+    <message>\n+        <source>Transaction too large for fee policy</source>\n+        <translation>Transacci\u00f3 massa gran per a la pol\u00edtica de comissions</translation>\n+    </message>\n     <message>\n         <source>Transaction too large</source>\n         <translation>La transacci\u00f3 \u00e9s massa gran</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opcions d'interf\u00edcie:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en este ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n@@ -2934,14 +3391,138 @@\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Error en carregar wallet.dat: Moneder corrupte</translation>\n     </message>\n+    <message>\n+        <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n+        <translation>(1 = mant\u00e9 les metadades de les tx, p. ex., propietari del compte i informaci\u00f3 de sol\u00b7licitud del pagament, 2 = prescindeix de les metadades de les tx)</translation>\n+    </message>\n+    <message>\n+        <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n+        <translation>Com d'exhaustiva \u00e9s la verificaci\u00f3 de blocs del -checkblocks (0-4, per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n+        <translation>Mant\u00e9 un \u00edndex complet de transaccions, utilitzat per la crida rpc getrawtransaction (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Number of seconds to keep misbehaving peers from reconnecting (default: %u)</source>\n+        <translation>Nombre de segons necessaris perqu\u00e8 els iguals de comportament q\u00fcestionable puguen tornar a connectar-se (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n+        <translation>Informaci\u00f3 d'eixida de la depuraci\u00f3 (per defecte: %u, proporcionar &lt;category&gt; \u00e9s opcional)</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n+        <translation>Utilitza un proxy SOCKS4 apart per a arribar als iguals a trav\u00e9s de serveis ocults de Tor (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>(default: %s)</source>\n+        <translation>(per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Acceptable ciphers (default: %s)</source>\n+        <translation>Xifrats acceptables (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n+        <translation>Demana sempre les adreces dels iguals a trav\u00e9s de consultes DNS (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Error en carregar wallet.dat</translation>\n     </message>\n+    <message>\n+        <source>Generate coins (default: %u)</source>\n+        <translation>Genera monedes (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>How many blocks to check at startup (default: %u, 0 = all)</source>\n+        <translation>Quants blocs per comprovar a l'inici (per defecte: %u, 0 = tots)</translation>\n+    </message>\n+    <message>\n+        <source>Include IP addresses in debug output (default: %u)</source>\n+        <translation>Inclou l'adre\u00e7a IP a l'eixida de depuraci\u00f3 (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Adre\u00e7a -proxy invalida: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Escolta les connexions JSON-RPC en &lt;port&gt; (per defecte: %u o testnet: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Listen for connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Escolta les connexions en &lt;port&gt; (per defecte: %u o testnet: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n+        <translation>Mant\u00e9 com a m\u00e0xim &lt;n&gt; connexions a iguals (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Fes que el moneder fa\u00e7a difusi\u00f3 de les transaccions</translation>\n+    </message>\n+    <message>\n+        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n+        <translation>Mem\u00f2ria interm\u00e8dia m\u00e0xima de recepci\u00f3 per connexi\u00f3, &lt;n&gt;*1000 bytes (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n+        <translation>Mem\u00f2ria interm\u00e8dia m\u00e0xima d'enviament per connexi\u00f3, &lt;n&gt;*1000 bytes (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Prepend debug output with timestamp (default: %u)</source>\n+        <translation>Posa davant de l'eixida de depuraci\u00f3 una marca hor\u00e0ria (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Relay and mine data carrier transactions (default: %u)</source>\n+        <translation>Retransmet i mina les transaccions de l'operador (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Relay non-P2SH multisig (default: %u)</source>\n+        <translation>Retransmet multisig no P2SH (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Server certificate file (default: %s)</source>\n+        <translation>Fitxer de certificat del servidor (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Server private key (default: %s)</source>\n+        <translation>Clau privada del servidor (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n+        <translation>Defineix la mida clau disponible a &lt;n&gt; (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set minimum block size in bytes (default: %u)</source>\n+        <translation>Defineix la mida de bloc m\u00ednima en bytes (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set the number of threads to service RPC calls (default: %d)</source>\n+        <translation>Defineix el nombre de fils a crides de servei RPC (per defecte: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Specify configuration file (default: %s)</source>\n+        <translation>Especifica el fitxer de configuraci\u00f3 (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n+        <translation>Especifica el temps d'espera de la connexi\u00f3 en milisegons (m\u00ednim: 1, per defecte: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Specify pid file (default: %s)</source>\n+        <translation>Especifica el fitxer pid (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n+        <translation>Gasta el canvi no confirmat en enviar les transaccions (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n+        <translation>Llindar per a desconnectar els iguals de comportament q\u00fcestionable (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Xarxa desconeguda especificada a -onlynet: '%s'</translation>"
      },
      {
        "sha": "898b7f33b3d933dc1a16fb15a985979e1f1c1d76",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 229,
        "deletions": 55,
        "changes": 284,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ca_ES\" version=\"2.1\">\n+<TS language=\"ca_ES\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Esteu segur que voleu encriptar el vostre moneder?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Ara es tancar\u00e0 el Bitcoin Core per finalitzar el proc\u00e9s d'encriptaci\u00f3. Tingueu present que encriptar el vostre moneder no garanteix que les vostres bitcoins no puguin ser robades per programari malici\u00f3s que infecti l'ordinador.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>IMPORTANT: Tota copia de seguretat que h\u00e0giu realitzat hauria de ser reempla\u00e7ada pel, recentment generat, fitxer encriptat del moneder.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Introdu\u00efu la contrasenya nova al moneder.&lt;br/&gt;Utilitzeu una contrasenya de &lt;b&gt;deu o m\u00e9s car\u00e0cters aleatoris&lt;/b&gt;, o &lt;b&gt;vuit o m\u00e9s paraules&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Introdu\u00efu la contrasenya antiga i la contrasenya nova al moneder.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>L'encriptaci\u00f3 del moneder ha fallat</translation>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Quant al Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Modifica les opcions de configuraci\u00f3 del Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Mostra la llista d'adreces d'enviament i etiquetes utilitzades</translation>\n@@ -418,6 +430,10 @@\n         <source>No block source available...</source>\n         <translation>No hi ha cap font de bloc disponible...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>S'han processat %n bloc de l'historial de transacci\u00f3.</numerusform><numerusform>S'han processat %n blocs de l'historial de transacci\u00f3.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n hora</numerusform><numerusform>%n hores</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>S'est\u00e0 posant al dia ...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Data: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Import: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Tipus: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Etiqueta: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adre\u00e7a: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Transacci\u00f3 enviada</translation>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>cap</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Aquesta etiqueta es torna en vermell si la transacci\u00f3 \u00e9s superior a 1000 bytes.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Aquesta etiqueta es torna en vermell si la propietat \u00e9s inferior que la \u00abmitjana\u00bb.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Aquesta etiqueta es torna vermella si el destinatari rep un import inferior de %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Pot variar +/- %1 satoshi(s) per entrada.</translation>\n@@ -918,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Adre\u00e7a IP del proxy (p. ex. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimitza en comptes de sortir de l'aplicaci\u00f3 quan la finestra es tanca. Quan s'habilita aquesta opci\u00f3 l'aplicaci\u00f3 es tancara nom\u00e9s quan se selecciona Surt del men\u00fa. </translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>La interf\u00edcie d'usuari pot definir-se des d'aqu\u00ed. El par\u00e0metre tindr\u00e0 efecte despr\u00e9s de reiniciar el Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URL de terceres parts (p. ex. explorador de blocs) que apareix en la pestanya de transaccions com elements del men\u00fa contextual. %s en l'URL es reempla\u00e7at pel resum de la transacci\u00f3. Diferents URL estan separades per una barra vertical |.</translation>\n@@ -942,6 +1008,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Xarxa</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Inicia el Bitcoin Core autom\u00e0ticament despr\u00e9s d'iniciar una sessi\u00f3 en el sistema.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;Inicia el Bitcoin Core en inciar el sistema</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = auto, &lt;0 = deixa tants nuclis lliures)</translation>\n@@ -1054,6 +1128,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Cal reiniciar el client per activar els canvis.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>S'aturar\u00e0 el client. Voleu procedir?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Amb aquest canvi cal un reinici del client.</translation>\n@@ -1188,10 +1266,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>No es pot llegir el fitxer de la sol\u00b7licitud de pagament. Aix\u00f2 pot ser causat per un fitxer de sol\u00b7licitud de pagament no v\u00e0lid.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>No s'accepten sol\u00b7licituds de pagament no verificades a scripts de pagament personalitzats.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Sol\u00b7licitud de pagament no v\u00e0lida.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Reemborsament de %1</translation>\n@@ -1231,6 +1317,10 @@\n         <source>User Agent</source>\n         <translation>Agent d'usuari</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>Node/Servei</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n@@ -1352,6 +1442,10 @@\n         <source>Current number of blocks</source>\n         <translation>Nombre de blocs actuals</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Obre el fitxer de registre de depuraci\u00f3 del Bitcoin Core del directori de dades actual. Pot portar uns quants segons per a fitxers de registre grans.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Rebut</translation>\n@@ -1420,6 +1514,10 @@\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Difer\u00e8ncia hor\u00e0ria</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u00daltim temps de bloc</translation>\n@@ -1464,6 +1562,10 @@\n         <source>Clear console</source>\n         <translation>Neteja la consola</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Us donem la benviguda a la consola RPC del Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Utilitza les fletxes d'amunt i avall per navegar per l'historial, i &lt;b&gt;Ctrl-L&lt;\\b&gt; per netejar la pantalla.</translation>\n@@ -1760,6 +1862,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>Si la comissi\u00f3 personalitzada es defineix a 1000 satoshis i la transacci\u00f3 \u00e9s de nom\u00e9s 250 bytes, llavors \u00abper kilobyte\u00bb nom\u00e9s es paguen 250 satoshis en una comissi\u00f3, mentre que amb la de \u00abtotal com a m\u00ednim\u00bb es pagarien 1000 satoshis. Per a transaccions superiors al kilobyte, en tots dos casos es paga per kilobyte.</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Amaga</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>total com a m\u00ednim</translation>\n@@ -1900,10 +2006,30 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>S'ha rebutjat la transacci\u00f3! Aix\u00f2 pot passar si alguna de les monedes del vostre moneder ja s'han gastat; per exemple, si heu fet servir una c\u00f2pia de seguretat del fitxer wallet.dat i s'haguessin gastat monedes de la c\u00f2pia per\u00f2 sense marcar-les-hi com a gastades.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Una comissi\u00f3 superior a %1 es considera una comissi\u00f3 absurdament alta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n bloc.</numerusform><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n blocs.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Paga nom\u00e9s la comissi\u00f3 m\u00ednima de %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>L'adre\u00e7a de destinatari no \u00e9s v\u00e0lida. Torneu-la a comprovar.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>S'ha trobat una adre\u00e7a duplicada: cal utilitzar les adreces nom\u00e9s un cop cada vegada.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Av\u00eds: adre\u00e7a Bitcoin no v\u00e0lida</translation>\n@@ -1975,10 +2101,26 @@\n         <source>Remove this entry</source>\n         <translation>Elimina aquesta entrada</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>La comissi\u00f3 es deduir\u00e0 de l'import que s'enviar\u00e0. El destinatari rebr\u00e0 menys bitcoins que les que introdu\u00efu al camp d'import. Si se seleccionen m\u00faltiples destinataris, la comissi\u00f3 es dividir\u00e0 per igual.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>S&amp;ubstreu la comissi\u00f3 de l'import</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Missatge:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Aquesta \u00e9s una sol\u00b7licitud de pagament no autenticada.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Aquesta \u00e9s una sol\u00b7licitud de pagament autenticada.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Introdu\u00efu una etiqueta per a aquesta adre\u00e7a per afegir-la a la llista d'adreces utilitzades</translation>\n@@ -2017,6 +2159,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Signa el missatge</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Podeu signar missatges/acords amb les vostres adreces per provar que rebeu les bitcoins que s'hi envien. Aneu amb compte no signar res que sigui vague o aleatori, perqu\u00e8 en alguns atacs de suplantaci\u00f3 es pot provar que hi signeu la vostra identitat. Nom\u00e9s signeu aquelles declaracions completament detallades en qu\u00e8 hi esteu d'acord. </translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 signar el missatge</translation>\n@@ -2069,6 +2215,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Verifica el missatge</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Introdu\u00efu l'adre\u00e7a del receptor, el missatge (assegureu-vos de copiar els salts de l\u00ednia, espais, tabuladors, etc. exactament) i signatura de sota per verificar el missatge. Tingueu cura de no llegir m\u00e9s en la signatura del que est\u00e0 al missatge signat, per evitar ser enganyat per un atac d'home-en-el-mig. Tingueu en compte que aix\u00f2 nom\u00e9s demostra que la part que signa rep amb l'adre\u00e7a, i no es pot provar l'enviament de qualsevol transacci\u00f3!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 va ser signat el missatge</translation>\n@@ -2420,6 +2570,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>Si est\u00e0 implicada o no una adre\u00e7a nom\u00e9s de lectura en la transacci\u00f3.</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>Intenci\u00f3/prop\u00f2sit de la transacci\u00f3 definida per l'usuari.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Import extret o afegit del balan\u00e7.</translation>\n@@ -2670,17 +2824,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribu\u00eft sota llic\u00e8ncia de programari MIT. Vegeu el fitxer acompanyant COPYING o &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Entra en el mode de proves de regressi\u00f3, que utilitza una cadena especial en qu\u00e8 els blocs poden resoldre's al moment.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa una ordre quan una transacci\u00f3 del moneder canvi\u00ef (%s en cmd es canvia per TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>En aquest mode -genproclimit controla quants blocs es generen immediatament.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Comissions totals m\u00e0ximes que s'utilitzaran en una \u00fanica transacci\u00f3 de moneder; si s'estableix un valor massa baix es poden interrompre transaccions grans (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Redueix els requeriments d'emmagatzemament podant (suprimint) els blocs antics. Aquest mode inhabilita l'\u00fas de moneders i \u00e9s incompatible amb -tindex. Av\u00eds: Revertir aquesta configuraci\u00f3 comporta tornar a baixar la cadena de blocs sencera. (per defecte: 0 = inhabilita la poda de blocs, &gt;%u = mida objectiu en MiB per utilitzar els fitxers de blocs)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2694,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>No es pot enlla\u00e7ar %s a aquest ordinador. El Bitcoin Core probablement ja estigui executant-s'hi.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AV\u00cdS: s'ha generat un nombre an\u00f2malament alt de blocs, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AV\u00cdS: comproveu la vostra connexi\u00f3 a la xarxa, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Av\u00eds: el -paytxfee \u00e9s molt elevat! Aquesta \u00e9s la comissi\u00f3 de transacci\u00f3 que pagareu si envieu una transacci\u00f3.</translation>\n@@ -2810,6 +2972,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>Nom\u00e9s connecta als nodes de la xarxa &lt;net&gt; (ipv4, ipv6 o onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>La poda no es pot configurar amb un valor negatiu.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>El mode de poda \u00e9s incompatible amb -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Defineix la mida de la mem\u00f2ria cau de la base de dades en megabytes (%d a %d, per defecte: %d)</translation>\n@@ -2822,10 +2992,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Especifica un fitxer de moneder (dins del directori de dades)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Aix\u00f2 es aix\u00ed per a eines de proves de regressi\u00f3 per al desenvolupament d'aplicacions.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Utilitza UPnP per a mapejar el port d'escolta (per defecte: %u)</translation>\n@@ -2846,6 +3012,10 @@\n         <source>Wallet options:</source>\n         <translation>Opcions de moneder:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Av\u00eds: aquesta versi\u00f3 \u00e9s obsoleta; cal actualitzar-la!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Cal que reconstru\u00efu la base de dades fent servir -reindex per canviar -txindex</translation>\n@@ -2874,6 +3044,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>Crea fitxers nous amb els permisos per defecte del sistema, en comptes de l'umask 077 (nom\u00e9s efectiu amb la funcionalitat de moneder inhabilitada)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Descobreix l'adre\u00e7a IP pr\u00f2pia (per defecte: 1 quan s'escolta i no -externalip o -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: ha fallat escoltar les connexions entrants (l'escoltament ha retornat l'error %s)</translation>\n@@ -2890,10 +3064,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la transmissi\u00f3 (per defecte: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la creaci\u00f3 de la transacci\u00f3 (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si no s'especifica una paytxfee (comissi\u00f3 de transacci\u00f3 de pagament), inclogueu suficient comissi\u00f3 per tal que les transaccions comencin a confirmar-se en una mitja de n blocs (per defecte: %u)</translation>\n@@ -2906,10 +3076,18 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Mida m\u00e0xima de les dades en les transaccions de l'operador en qu\u00e8 confiem i en les meves (per defecte: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>Poda configurada per sota el m\u00ednim de %d MB. Feu servir un nombre superior.</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta a adreces d'iguals a trav\u00e9s de DNS, si es troba baix en adreces (per defecte: 1 a menys que -connect)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>Genera a l'atzar credencials per a cada connexi\u00f3 proxy. Aix\u00f2 habilita l'a\u00efllament del flux de Tor (per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Defineix la mida m\u00e0xima de transaccions d'alta prioritat / baixa comissi\u00f3 en bytes (per defecte: %d)</translation>\n@@ -2918,6 +3096,10 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Defineix el nombre de fils per a la generaci\u00f3 de moneda si est\u00e0 habilitat (-1 = tots els nuclis, per defecte: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>L'import de la transacci\u00f3 \u00e9s massa petit per enviar-la despr\u00e9s que se'n dedueixi la comissi\u00f3</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Aquest producte inclou programari desenvolupat pel projecte OpenSSL per a \u00fas a l'OpenSSL Toolkit &lt;https://www.openssl.org/&gt; i programari criptogr\u00e0fic escrit per Eric Young i programari UPnP escrit per Thomas Bernard.</translation>\n@@ -2957,10 +3139,26 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Els iguals en la llista blanca no poden ser bandejats per DoS i es transmetran sempre llurs transaccions, fins i tot si ja s\u00f3n a la mempool. Aix\u00f2 \u00e9s \u00fatil, p. ex., per a una passarel\u00b7la</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>Cal que torneu a construir la base de dades fent servir -reindex per tornar al mode no podat. Aix\u00f2 tornar\u00e0 a baixar la cadena de blocs sencera</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(per defecte: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>Accepta sol\u00b7licituds REST p\u00fabliques (per defecte: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>S'est\u00e0 activant la millor cadena...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>No es pot executar amb un moneder en mode poda.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n@@ -3050,12 +3248,12 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <translation>Suport RPC per a connexions HTTP persistents (per defecte: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Descarta a l'atzar 1 de cada &lt;n&gt; missatges de la xarxa</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>Reconstrueix l'\u00edndex de la cadena de blocs dels fitxers blk000??.dat actuals a l'inici.</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Introdueix incertesa en 1 de cada &lt;n&gt; missatges de la xarxa</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Rep i mostra avisos de la xarxa P2P (per defecte: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3093,6 +3291,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Start minimized</source>\n         <translation>Inicia minimitzat</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Aix\u00f2 \u00e9s programari experimental.</translation>\n@@ -3113,6 +3315,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Transaction too large</source>\n         <translation>La transacci\u00f3 \u00e9s massa gran</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opcions d'interf\u00edcie:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n@@ -3193,18 +3399,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = mant\u00e9 les metadades de les tx, p. ex., propietari del compte i informaci\u00f3 de sol\u00b7licitud del pagament, 2 = prescindeix de les metadades de les tx)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Buida l'activitat de la base de dades de la mem\u00f2ria disponible al registre del disc cada &lt;n&gt; megabytes (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Com d'exhaustiva \u00e9s la verificaci\u00f3 de blocs del -checkblocks (0-4, per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Enregistreu la prioritat de la transacci\u00f3 i la comissi\u00f3 per kB en minar blocs (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Mant\u00e9 un \u00edndex complet de transaccions, utilitzat per la crida rpc getrawtransaction (per defecte: %u)</translation>\n@@ -3233,18 +3431,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Demana sempre les adreces dels iguals a trav\u00e9s de consultes DNS (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Inhabilita el mode segur, sobreescriu un esdeveniment de mode segur real (per defecte: %u) </translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Error en carregar wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>For\u00e7a el mode segur (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Genera monedes (per defecte: %u)</translation>\n@@ -3261,10 +3451,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Adre\u00e7a -proxy invalida: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Limita la mida de la cau de signatura a &lt;n&gt; entrades (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Escolta les connexions JSON-RPC en &lt;port&gt; (per defecte: %u o testnet: %u)</translation>\n@@ -3277,6 +3463,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Mant\u00e9 com a m\u00e0xim &lt;n&gt; connexions a iguals (per defecte: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Fes que el moneder faci difusi\u00f3 de les transaccions</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Mem\u00f2ria interm\u00e8dia m\u00e0xima de recepci\u00f3 per connexi\u00f3, &lt;n&gt;*1000 bytes (per defecte: %u)</translation>\n@@ -3285,10 +3475,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Mem\u00f2ria interm\u00e8dia m\u00e0xima d'enviament per connexi\u00f3, &lt;n&gt;*1000 bytes (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Nom\u00e9s accepta els punts de control integrats que coincideixen amb la cadena de blocs (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Posa davant de la sortida de depuraci\u00f3 una marca hor\u00e0ria (per defecte: %u)</translation>\n@@ -3301,10 +3487,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Retransmet multisig no P2SH (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Executa un fil per buidar el moneder peri\u00f2dicament (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Fitxer de certificat del servidor (per defecte: %s)</translation>\n@@ -3325,10 +3507,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Defineix el nombre de fils a crides de servei RPC (per defecte: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Defineix el senyalador DB_PRIVATE en l'entorn db del moneder (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Especifica el fitxer de configuraci\u00f3 (per defecte: %s)</translation>\n@@ -3345,10 +3523,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Gasta el canvi no confirmat en enviar les transaccions (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Atura l'execuci\u00f3 despr\u00e9s d'importar blocs del disc (per defecte: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Llindar per a desconnectar els iguals de comportament q\u00fcestionable (per defecte: %u)</translation>"
      },
      {
        "sha": "37c937b864d6d83b5eea504d8361bda79a25062c",
        "filename": "src/qt/locale/bitcoin_cmn.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_cmn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_cmn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cmn.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"cmn\" version=\"2.1\">\n+<TS language=\"cmn\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Create a new address</source>\n+        <translation>\u521b\u5efa\u65b0\u5730\u5740</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>"
      },
      {
        "sha": "6e7ffec27f9948056dd3da6a0dd6d3f91fe6398b",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 278,
        "deletions": 60,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"cs\" version=\"2.1\">\n+<TS language=\"cs\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Jsi si jist\u00fd, \u017ee chce\u0161 pen\u011b\u017eenku za\u0161ifrovat?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Bitcoin Core se te\u010f ukon\u010d\u00ed, aby dokon\u010dil za\u0161ifrov\u00e1n\u00ed. Pamatuj v\u0161ak, \u017ee pouh\u00e9 za\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky nem\u016f\u017ee zabr\u00e1nit kr\u00e1de\u017ei tv\u00fdch bitcoin\u016f malwarem, kter\u00fdm se m\u016f\u017ee po\u010d\u00edta\u010d nakazit.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>D\u016eLE\u017dIT\u00c9: V\u0161echny p\u0159edchoz\u00ed z\u00e1lohy pen\u011b\u017eenky by m\u011bly b\u00fdt nahrazeny nov\u011b vygenerovanou, za\u0161ifrovanou pen\u011b\u017eenkou. Z bezpe\u010dnostn\u00edch d\u016fvod\u016f budou p\u0159edchoz\u00ed z\u00e1lohy ne\u0161ifrovan\u00e9 pen\u011b\u017eenky nepou\u017eiteln\u00e9, jakmile za\u010dne\u0161 pou\u017e\u00edvat novou za\u0161ifrovanou pen\u011b\u017eenku.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Zadej nov\u00e9 heslo k pen\u011b\u017eence.&lt;br/&gt;Pou\u017eij &lt;b&gt;alespo\u0148 deset n\u00e1hodn\u00fdch znak\u016f&lt;/b&gt; nebo &lt;b&gt;alespo\u0148 osm slov&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Zadej star\u00e9 a nov\u00e9 heslo k pen\u011b\u017eence.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>Za\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky selhalo</translation>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>O &amp;Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Uprav nastaven\u00ed Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Uka\u017e seznam pou\u017eit\u00fdch odes\u00edlac\u00edch adres a jejich ozna\u010den\u00ed</translation>\n@@ -418,6 +430,10 @@\n         <source>No block source available...</source>\n         <translation>Nen\u00ed dostupn\u00fd \u017e\u00e1dn\u00fd zdroj blok\u016f...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Zpracov\u00e1n %n blok transak\u010dn\u00ed historie.</numerusform><numerusform>Zpracov\u00e1ny %n bloky transak\u010dn\u00ed historie.</numerusform><numerusform>Zpracov\u00e1no %n blok\u016f transak\u010dn\u00ed historie.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n hodinu</numerusform><numerusform>%n hodiny</numerusform><numerusform>%n hodin</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>Stahuji...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Datum: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u010c\u00e1stka: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Typ: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Ozna\u010den\u00ed: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adresa: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Odeslan\u00e9 transakce</translation>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>\u017e\u00e1dn\u00e1</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Popisek z\u010derven\u00e1, pokud je velikost transakce v\u011bt\u0161\u00ed ne\u017e 1000 bajt\u016f.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Popisek z\u010derven\u00e1, pokud je priorita men\u0161\u00ed ne\u017e \u201est\u0159edn\u00ed\u201c.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Popisek z\u010derven\u00e1, pokud m\u00e1 n\u011bkter\u00fd p\u0159\u00edjemce obdr\u017eet \u010d\u00e1stku men\u0161\u00ed ne\u017e %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>M\u016f\u017ee se li\u0161it o +/\u2013 %1 satoshi na ka\u017ed\u00fd vstup.</translation>\n@@ -918,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>IP adresa proxy (nap\u0159. IPv4: 127.0.0.1/IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Zav\u0159en\u00edm se aplikace minimalizuje. Pokud je tato volba za\u0161krtnuta, tak se aplikace ukon\u010d\u00ed pouze zvolen\u00edm Konec v menu.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>Tady lze nastavit jazyk u\u017eivatelsk\u00e9ho rozhran\u00ed. Nastaven\u00ed se projev\u00ed a\u017e po restartov\u00e1n\u00ed Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URL t\u0159et\u00edch stran (nap\u0159. block exploreru), kter\u00e9 se zobraz\u00ed v kontextov\u00e9m menu v z\u00e1lo\u017ece Transakce. %s v URL se nahrad\u00ed hashem transakce. V\u00edce URL odd\u011bl svisl\u00edtkem |.</translation>\n@@ -942,6 +1008,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;S\u00ed\u0165</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Automaticky spust\u00ed Bitcoin Core po p\u0159ihl\u00e1\u0161en\u00ed do syst\u00e9mu.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>S&amp;pustit Bitcoin Core po p\u0159ihl\u00e1\u0161en\u00ed do syst\u00e9mu</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = automaticky, &lt;0 = nechat dan\u00fd po\u010det jader voln\u00fd, v\u00fdchoz\u00ed: 0)</translation>\n@@ -1054,6 +1128,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>K aktivaci zm\u011bn je pot\u0159eba restartovat klienta.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>Klient se vypne, chce\u0161 pokra\u010dovat?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Tahle zm\u011bna bude cht\u00edt restartovat klienta.</translation>\n@@ -1188,10 +1266,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>Soubor platebn\u00edho po\u017eadavku nejde p\u0159e\u010d\u00edst nebo zpracovat! P\u0159\u00ed\u010dinou m\u016f\u017ee b\u00fdt \u0161patn\u00fd soubor platebn\u00edho po\u017eadavku.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Platebn\u00ed po\u017eadavek vypr\u0161el.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>Neov\u011b\u0159en\u00e9 platebn\u00ed po\u017eadavky k u\u017eivatelsk\u00fdm platebn\u00edm skript\u016fm nejsou podporovan\u00e9.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Neplatn\u00fd platebn\u00ed po\u017eadavek.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Vr\u00e1cen\u00ed pen\u011bz od %1</translation>\n@@ -1231,6 +1317,10 @@\n         <source>User Agent</source>\n         <translation>Typ klienta</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>Uzel/Slu\u017eba</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Odezva</translation>\n@@ -1352,6 +1442,10 @@\n         <source>Current number of blocks</source>\n         <translation>Aktu\u00e1ln\u00ed po\u010det blok\u016f</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Otev\u0159i soubor s ladic\u00edmi z\u00e1znamy Bitcoin Core z aktu\u00e1ln\u00edho datov\u00e9ho adres\u00e1\u0159e. U velk\u00fdch log\u016f to m\u016f\u017ee p\u00e1r vte\u0159in zabrat.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>P\u0159ijato</translation>\n@@ -1420,6 +1514,10 @@\n         <source>Ping Time</source>\n         <translation>Odezva</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>\u010casov\u00fd posun</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u010cas posledn\u00edho bloku</translation>\n@@ -1464,6 +1562,10 @@\n         <source>Clear console</source>\n         <translation>Vy\u010distit konzoli</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>V\u00edtej v RPC konzoli Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>V historii se pohybuje\u0161 \u0161ipkami nahoru a dol\u016f a pomoc\u00ed &lt;b&gt;Ctrl-L&lt;/b&gt; \u010dist\u00ed\u0161 obrazovku.</translation>\n@@ -1760,6 +1862,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>Pokud je vlastn\u00ed poplatek nastaven\u00fd na 1000 satoshi a transakce m\u00e1 pouze 250 bajt\u016f, tak \u201eza kilobajt\u201c zaplat\u00ed poplatek jen 250 satoshi, zat\u00edmco \u201ep\u0159inejmen\u0161\u00edm\u201c zaplat\u00ed 1000 satoshi. Pro transakce v\u011bt\u0161\u00ed ne\u017e kilobajt ob\u011b mo\u017enosti plat\u00ed za kilobajt.</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Skryj</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>p\u0159inejmen\u0161\u00edm</translation>\n@@ -1900,10 +2006,30 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Transakce byla odm\u00edtnuta! Tohle m\u016f\u017ee nastat, pokud n\u011bjak\u00e9 mince z tv\u00e9 pen\u011b\u017eenky u\u017e jednou byly utraceny, nap\u0159\u00edklad pokud pou\u017e\u00edv\u00e1\u0161 kopii souboru wallet.dat a mince byly utraceny v druh\u00e9 kopii, ale nebyly ozna\u010deny jako utracen\u00e9 v t\u00e9to.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Poplatek vy\u0161\u0161\u00ed ne\u017e %1 je pova\u017eov\u00e1n za absurdn\u011b vysok\u00fd.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Platebn\u00ed po\u017eadavek vypr\u0161el.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Potvrzov\u00e1n\u00ed by podle odhadu m\u011blo za\u010d\u00edt b\u011bhem %n bloku.</numerusform><numerusform>Potvrzov\u00e1n\u00ed by podle odhadu m\u011blo za\u010d\u00edt b\u011bhem %n blok\u016f.</numerusform><numerusform>Potvrzov\u00e1n\u00ed by podle odhadu m\u011blo za\u010d\u00edt b\u011bhem %n blok\u016f.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Zaplatit pouze minim\u00e1ln\u00ed poplatek %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Adresa p\u0159\u00edjemce je neplatn\u00e1 \u2013 p\u0159ekontroluj ji pros\u00edm.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Zaznamen\u00e1na duplicitn\u00ed adresa: ka\u017ed\u00e1 adresa by ale m\u011bla b\u00fdt pou\u017eita v\u017edy jen jednou.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Upozorn\u011bn\u00ed: Neplatn\u00e1 Bitcoinov\u00e1 adresa</translation>\n@@ -1975,10 +2101,26 @@\n         <source>Remove this entry</source>\n         <translation>Sma\u017e tento z\u00e1znam</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>Poplatek se ode\u010dte od pos\u00edlan\u00e9 \u010d\u00e1stky. P\u0159\u00edjemce tak dostane m\u00e9n\u011b bitcoin\u016f, ne\u017e zad\u00e1\u0161 do pole \u010c\u00e1stka. Pokud vybere\u0161 v\u00edce p\u0159\u00edjemc\u016f, tak se poplatek rovnom\u011brn\u011b rozlo\u017e\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>&amp;Ode\u010d\u00edst poplatek od \u010d\u00e1stky</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Zpr\u00e1va:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Tohle je neov\u011b\u0159en\u00fd platebn\u00ed po\u017eadavek.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Tohle je ov\u011b\u0159en\u00fd platebn\u00ed po\u017eadavek.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Zadej ozna\u010den\u00ed t\u00e9to adresy; oboj\u00ed se ti pak ulo\u017e\u00ed do adres\u00e1\u0159e</translation>\n@@ -2017,6 +2159,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Podepi\u0161 zpr\u00e1vu</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Podeps\u00e1n\u00edm zpr\u00e1vy/smlouvy sv\u00fdmi adresami m\u016f\u017ee\u0161 prok\u00e1zat, \u017ee jsi na n\u011b schopen p\u0159ijmout bitcoiny. Bu\u010f opatrn\u00fd a nepodepisuj nic v\u00e1gn\u00edho nebo n\u00e1hodn\u00e9ho; nap\u0159\u00edklad p\u0159i phishingov\u00fdch \u00fatoc\u00edch m\u016f\u017ee\u0161 b\u00fdt l\u00e1k\u00e1n, abys n\u011bco takov\u00e9ho podepsal. Podepisuj pouze naprosto \u00fapln\u00e1 a detailn\u00ed prohl\u00e1\u0161en\u00ed, se kter\u00fdmi souhlas\u00ed\u0161.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>Bitcoinov\u00e1 adresa, kterou se zpr\u00e1va podep\u00ed\u0161e</translation>\n@@ -2069,6 +2215,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Ov\u011b\u0159 zpr\u00e1vu</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>K ov\u011b\u0159en\u00ed podpisu zpr\u00e1vy zadej adresu p\u0159\u00edjemce, zpr\u00e1vu (ov\u011b\u0159 si, \u017ee spr\u00e1vn\u011b kop\u00edruje\u0161 zalomen\u00ed \u0159\u00e1dk\u016f, mezery, tabul\u00e1tory apod.) a podpis. D\u00e1vej pozor na to, abys nezkop\u00edroval do podpisu v\u00edc, ne\u017e co je v samotn\u00e9 podepsan\u00e9 zpr\u00e1v\u011b, abys nebyl nap\u00e1len man-in-the-middle \u00fatokem. Poznamenejme v\u0161ak, \u017ee takto lze pouze prok\u00e1zat, \u017ee podepisuj\u00edc\u00ed je schopn\u00fd na dan\u00e9 adrese p\u0159ijmout platbu, ale nen\u00ed mo\u017en\u00e9prok\u00e1zat, \u017ee odeslal jakoukoli transakci!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Bitcoinov\u00e1 adresa, kterou je zpr\u00e1va podeps\u00e1na</translation>\n@@ -2420,6 +2570,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>Zda tato transakce zahrnuje i n\u011bkterou sledovanou adresu.</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>U\u017eivatelsky ur\u010den\u00fd \u00fa\u010del transakce.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>\u010c\u00e1stka ode\u010dten\u00e1 z nebo p\u0159i\u010dten\u00e1 k \u00fa\u010dtu.</translation>\n@@ -2640,7 +2794,7 @@\n     </message>\n     <message>\n         <source>Specify your own public address</source>\n-        <translation>Specifikuj svou ve\u0159ejnou adresu</translation>\n+        <translation>Udej svou ve\u0159ejnou adresu</translation>\n     </message>\n     <message>\n         <source>Accept command line and JSON-RPC commands</source>\n@@ -2670,17 +2824,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>\u0160\u00ed\u0159en pod softwarovou licenc\u00ed MIT, viz p\u0159ilo\u017een\u00fd soubor COPYING nebo &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>P\u0159epnout do m\u00f3du testov\u00e1n\u00ed regres\u00ed, kter\u00fd pou\u017e\u00edv\u00e1 speci\u00e1ln\u00ed \u0159et\u011bzec, ve kter\u00e9m mohou b\u00fdt bloky okam\u017eit\u011b vy\u0159e\u0161eny.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Spustit p\u0159\u00edkaz, kdy\u017e se objev\u00ed transakce t\u00fdkaj\u00edc\u00ed se pen\u011b\u017eenky (%s se v p\u0159\u00edkazu nahrad\u00ed za TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>V tomto m\u00f3du -genproclimit ur\u010duje, kolik blok\u016f je vygenerov\u00e1no okam\u017eit\u011b.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Horn\u00ed hranice pro celkov\u00fd poplatek za jednu transakci z pen\u011b\u017eenky; p\u0159\u00edli\u0161 n\u00edzk\u00e1 hodnota m\u016f\u017ee zma\u0159it velk\u00e9 transakce (v\u00fdchoz\u00ed: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Omezit n\u00e1roky na \u00falo\u017en\u00fd prostor pro\u0159ez\u00e1v\u00e1n\u00edm (maz\u00e1n\u00edm) star\u00fdch blok\u016f. V tomto re\u017eimu chyb\u00ed pen\u011b\u017eenka a rovn\u011b\u017e tento re\u017eim nen\u00ed slu\u010diteln\u00fd s -txindex. Upozorn\u011bn\u00ed: op\u011btovn\u00e1 zm\u011bna tohoto nastaven\u00ed bude vy\u017eadovat nov\u00e9 sta\u017een\u00ed cel\u00e9ho \u0159et\u011bzce blok\u016f. (v\u00fdchoz\u00ed: 0 = bloky nepro\u0159ez\u00e1vat, &gt;%u = c\u00edlov\u00e1 velikost soubor\u016f s bloky, v MiB)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2694,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Neda\u0159\u00ed se mi p\u0159ipojit na %s na tomhle po\u010d\u00edta\u010di. Bitcoin Core u\u017e pravd\u011bpodobn\u011b jednou b\u011b\u017e\u00ed.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>UPOZORN\u011aN\u00cd: vygenerov\u00e1no nezvykle mnoho blok\u016f \u2013 p\u0159ijato %d blok\u016f jen za posledn\u00edch %d hodin (o\u010dek\u00e1v\u00e1no %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>UPOZORN\u011aN\u00cd: zkontroluj sv\u00e9 spojen\u00ed do s\u00edt\u011b \u2013 bylo p\u0159ijato %d blok\u016f za posledn\u00edch %d hodin (o\u010dek\u00e1v\u00e1no %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Upozorn\u011bn\u00ed: -paytxfee je nastaveno velmi vysoko! Toto je transak\u010dn\u00ed poplatek, kter\u00fd zaplat\u00ed\u0161 za ka\u017edou poslanou transakci.</translation>\n@@ -2732,7 +2894,7 @@\n     </message>\n     <message>\n         <source>Block creation options:</source>\n-        <translation>Mo\u017enosti vytvo\u0159en\u00ed bloku:</translation>\n+        <translation>Mo\u017enosti vytv\u00e1\u0159en\u00ed bloku:</translation>\n     </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n@@ -2810,6 +2972,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>P\u0159ipojovat se pouze k uzl\u016fm v &lt;net&gt; s\u00edti (ipv4, ipv6 nebo onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>Pro\u0159ez\u00e1v\u00e1n\u00ed nem\u016f\u017ee b\u00fdt zkonfigurov\u00e1no s negativn\u00ed hodnotou.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>Pro\u0159ez\u00e1vac\u00ed re\u017eim nen\u00ed kompatibiln\u00ed s -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Nastavit velikost datab\u00e1zov\u00e9 vyrovn\u00e1vac\u00ed pam\u011bti v megabajtech (%d a\u017e %d, v\u00fdchoz\u00ed: %d)</translation>\n@@ -2822,17 +2992,13 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Udej n\u00e1zev souboru s pen\u011b\u017eenkou (v r\u00e1mci datov\u00e9ho adres\u00e1\u0159e)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Tohle je ur\u010deno pro n\u00e1stroje na regresn\u00ed testov\u00e1n\u00ed a vyv\u00edjen\u00ed aplikac\u00ed.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Pou\u017e\u00edt UPnP k namapov\u00e1n\u00ed naslouchac\u00edho portu (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n     <message>\n         <source>Verifying blocks...</source>\n-        <translation>Ov\u011b\u0159uji bloky... </translation>\n+        <translation>Ov\u011b\u0159uji bloky...</translation>\n     </message>\n     <message>\n         <source>Verifying wallet...</source>\n@@ -2846,6 +3012,10 @@\n         <source>Wallet options:</source>\n         <translation>Mo\u017enosti pen\u011b\u017eenky:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Upozorn\u011bn\u00ed: tahle verze je zastaral\u00e1, m\u011bl bys ji aktualizovat!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Je t\u0159eba p\u0159estav\u011bt datab\u00e1zi pou\u017eit\u00edm -reindex, aby bylo mo\u017en\u00e9 zm\u011bnit -txindex</translation>\n@@ -2878,6 +3048,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>Vytv\u00e1\u0159et nov\u00e9 soubory s v\u00fdchoz\u00edmi syst\u00e9mov\u00fdmi pr\u00e1vy nam\u00edsto umask 077 (uplatn\u00ed se, pouze pokud je vypnut\u00e1 funkce pen\u011b\u017eenky)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Zjistit vlastn\u00ed IP adresu (v\u00fdchoz\u00ed: 1, pokud naslouch\u00e1 a nen\u00ed zad\u00e1no -externalip nebo -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Chyba: Nelze naslouchat p\u0159\u00edchoz\u00ed spojen\u00ed (listen vr\u00e1til chybu %s)</translation>\n@@ -2892,24 +3066,32 @@\n     </message>\n     <message>\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Poplatky (v BTC/Kb) men\u0161\u00ed ne\u017e tato hodnota jsou pova\u017eov\u00e1ny za nulov\u00e9 pro \u00fa\u010dely p\u0159epos\u00edl\u00e1n\u00ed transakc\u00ed (v\u00fdchoz\u00ed: %s)</translation>\n+        <translation>Poplatky (v BTC/kB) men\u0161\u00ed ne\u017e tato hodnota jsou pova\u017eov\u00e1ny za nulov\u00e9 pro \u00fa\u010dely p\u0159epos\u00edl\u00e1n\u00ed transakc\u00ed (v\u00fdchoz\u00ed: %s)</translation>\n     </message>\n     <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Poplatky (v BTC/Kb) men\u0161\u00ed ne\u017e tato hodnota jsou pova\u017eov\u00e1ny za nulov\u00e9 pro \u00fa\u010dely vytv\u00e1\u0159en\u00ed transakc\u00ed (v\u00fdchoz\u00ed: %s)</translation>\n+        <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n+        <translation>Pokud paytxfee nen\u00ed nastaveno, platit dostate\u010dn\u00fd poplatek na to, aby za\u010daly b\u00fdt transakce potvrzov\u00e1ny v pr\u016fm\u011bru b\u011bhem n blok\u016f (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n     <message>\n-        <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n-        <translation>Pokud paytxfee nen\u00ed nastaveno, platit dostate\u010dn\u00fd poplatek na to, aby byly transakce potvrzeny v pr\u016fm\u011bru b\u011bhem n blok\u016f (v\u00fdchoz\u00ed: %u)</translation>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>Neplatn\u00e1 \u010d\u00e1stka pro -maxtxfee=&lt;amount&gt;: '%s' (mus\u00ed b\u00fdt alespo\u0148 jako poplatek minrelay %s, aby transakce nez\u016fst\u00e1valy tr\u010det)</translation>\n     </message>\n     <message>\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maxim\u00e1ln\u00ed velikost dat v transakc\u00edch nesouc\u00edch data, se kterou jsme ochotni je je\u0161t\u011b p\u0159epos\u00edlat a t\u011b\u017eit (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>Pro\u0159ez\u00e1v\u00e1n\u00ed je nastaveno pod minimum %d MB.  Pou\u017eij pros\u00edm n\u011bjak\u00e9 vy\u0161\u0161\u00ed \u010d\u00edslo.</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>P\u0159i nedostatku adres z\u00edskat dal\u0161\u00ed prot\u011bj\u0161ky z DNS (v\u00fdchoz\u00ed: 1, pokud nen\u00ed pou\u017eito -connect)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>Pou\u017e\u00edt n\u00e1hodn\u00e9 \u00fadaje pro ka\u017ed\u00e9 proxy spojen\u00ed. To umo\u017en\u00ed izolovat nesouvisej\u00edc\u00ed datov\u00e9 toky v Toru (v\u00fdchoz\u00ed: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Nastavit maxim\u00e1ln\u00ed velikost prioritn\u00edch/n\u00edzkopoplatkov\u00fdch transakc\u00ed v bajtech (v\u00fdchoz\u00ed: %d)</translation>\n@@ -2918,10 +3100,42 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Nastaven\u00ed po\u010dtu vl\u00e1ken pro t\u011b\u017een\u00ed, je-li zapnut\u00e9 (-1 = v\u0161echna j\u00e1dra, v\u00fdchoz\u00ed: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>\u010c\u00e1stka v transakci po ode\u010dten\u00ed poplatku je p\u0159\u00edli\u0161 mal\u00e1 na odesl\u00e1n\u00ed</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Tento produkt zahrnuje programy vyvinut\u00e9 OpenSSL Projektem pro pou\u017eit\u00ed v OpenSSL Toolkitu &lt;https://www.openssl.org/&gt; a kryptografick\u00fd program od Erika Younga a program UPnP od Thomase Bernarda.</translation>\n     </message>\n+    <message>\n+        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n+%s\n+It is recommended you use the following random password:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(you do not need to remember this password)\n+The username and password MUST NOT be the same.\n+If the file does not exist, create it with owner-readable-only file permissions.\n+It is also recommended to set alertnotify so you are notified of problems;\n+for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n+</source>\n+        <translation>K pou\u017e\u00edv\u00e1n\u00ed bitcoind nebo volby -server u bitcoin-qt mus\u00ed\u0161 nastavit rpcpassword v konfigura\u010dn\u00edm souboru:\n+%s\n+Je vhodn\u00e9 pou\u017e\u00edt n\u00e1sleduj\u00edc\u00ed n\u00e1hodn\u00e9 heslo:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(nen\u00ed pot\u0159eba si ho pamatovat)\n+rpcuser a rpcpassword NESM\u00cd b\u00fdt stejn\u00e9.\n+Pokud konfigura\u010dn\u00ed soubor je\u0161t\u011b neexistuje, vytvo\u0159 ho tak, aby ho mohl \u010d\u00edst pouze vlastn\u00edk.\n+Je tak\u00e9 doporu\u010deno si nastavit alertnotify, abys byl upozorn\u011bn na p\u0159\u00edpadn\u00e9 probl\u00e9my;\n+nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n+</translation>\n+    </message>\n+    <message>\n+        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>Upozorn\u011bn\u00ed: -maxtxfee je nastaveno velmi vysoko! Takto vysok\u00fd poplatek m\u016f\u017ee b\u00fdt zaplacen v jednotliv\u00e9 transakci.</translation>\n+    </message>\n     <message>\n         <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n         <translation>Upozorn\u011bn\u00ed: Zkontroluj, \u017ee m\u00e1\u0161 v po\u010d\u00edta\u010di spr\u00e1vn\u011b nastaven\u00fd datum a \u010das! Pokud jsou nastaveny \u0161patn\u011b, Bitcoin Core nebude fungovat spr\u00e1vn\u011b.</translation>\n@@ -2930,6 +3144,26 @@\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Na prot\u011bj\u0161ky na b\u00edl\u00e9 listin\u011b se nevztahuje DoS klatba a jejich transakce jsou v\u017edy p\u0159epos\u00edl\u00e1ny, i kdy\u017e u\u017e t\u0159eba jsou v mempoolu, co\u017e je u\u017eite\u010dn\u00e9 nap\u0159. pro br\u00e1nu</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>K n\u00e1vratu k nepro\u0159ez\u00e1vac\u00edmu re\u017eimu je pot\u0159eba p\u0159estav\u011bt datab\u00e1zi pou\u017eit\u00edm -reindex.  Tak\u00e9 se znovu st\u00e1hne cel\u00fd \u0159et\u011bzec blok\u016f</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(v\u00fdchoz\u00ed: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Accept public REST requests (default: %u)</source>\n+        <translation>P\u0159ij\u00edmat ve\u0159ejn\u00e9 REST po\u017eadavky (v\u00fdchoz\u00ed: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>Aktivuji nejlep\u0161\u00ed \u0159et\u011bzec...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>V pro\u0159ez\u00e1vac\u00edm re\u017eimu se s p\u011bn\u011b\u017eenkou nem\u016f\u017eu spustit.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Nemohu p\u0159elo\u017eit -whitebind adresu: '%s'</translation>\n@@ -2974,6 +3208,10 @@\n         <source>Initialization sanity check failed. Bitcoin Core is shutting down.</source>\n         <translation>Selhala \u00favodn\u00ed zevrubn\u00e1 prov\u011brka. Bitcoin Core se ukon\u010duje.</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Neplatn\u00e1 \u010d\u00e1stka pro -maxtxfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: '%s'</source>\n         <translation>Neplatn\u00e1 \u010d\u00e1stka pro -minrelaytxfee=&lt;\u010d\u00e1stka&gt;: '%s'</translation>\n@@ -3011,12 +3249,16 @@\n         <translation>Mo\u017enosti RPC serveru:</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>N\u00e1hodn\u011b zahazovat jednu z ka\u017ed\u00fdch &lt;n&gt; s\u00ed\u0165ov\u00fdch zpr\u00e1v</translation>\n+        <source>RPC support for HTTP persistent connections (default: %d)</source>\n+        <translation>Podpora RPC pro perzistentn\u00ed HTTP spojen\u00ed (v\u00fdchoz\u00ed: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>N\u00e1hodn\u011b pozm\u011b\u0148ovat jednu z ka\u017ed\u00fdch &lt;n&gt; s\u00ed\u0165ov\u00fdch zpr\u00e1v</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>P\u0159i startu znovu vytvo\u0159it index \u0159et\u011bzce blok\u016f z aktu\u00e1ln\u00edch blk000??.dat soubor\u016f</translation>\n+    </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>P\u0159ij\u00edmat a zobrazovat poplachy z P2P s\u00edt\u011b (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3032,7 +3274,7 @@\n     </message>\n     <message>\n         <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Nastavit jazyk, nap\u0159\u00edklad \"de_DE\" (v\u00fdchoz\u00ed: syst\u00e9mov\u00e9 nastaven\u00ed)</translation>\n+        <translation>Nastavit jazyk, nap\u0159\u00edklad \u201ede_DE\u201c (v\u00fdchoz\u00ed: syst\u00e9mov\u00e9 nastaven\u00ed)</translation>\n     </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n@@ -3054,6 +3296,10 @@\n         <source>Start minimized</source>\n         <translation>Nastartovat minimalizovan\u011b</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>\u010c\u00e1stka v transakci je p\u0159\u00edli\u0161 mal\u00e1 na pokryt\u00ed poplatku</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Tohle je experiment\u00e1ln\u00ed program.</translation>\n@@ -3074,6 +3320,10 @@\n         <source>Transaction too large</source>\n         <translation>Transakce je p\u0159\u00edli\u0161 velk\u00e1</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Mo\u017enosti UI:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Neda\u0159\u00ed se mi p\u0159ipojit na %s na tomhle po\u010d\u00edta\u010di (operace bind vr\u00e1tila chybu %s)</translation>\n@@ -3154,18 +3404,10 @@\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = ukl\u00e1dat transak\u010dn\u00ed metadata, nap\u0159. majitele \u00fa\u010dtu a informace o platebn\u00edm po\u017eadavku, 2 = mazat transak\u010dn\u00ed metadata)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Prom\u00edtnout datab\u00e1zovou aktivitu z pam\u011b\u0165ov\u00e9ho prostoru do z\u00e1znamu na disku ka\u017ed\u00fdch &lt;n&gt; megabajt\u016f (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Jak moc d\u016fkladn\u00e1 m\u00e1 b\u00fdt verifikace blok\u016f -checkblocks (0-4, v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Zaznamen\u00e1vat b\u011bhem t\u011b\u017een\u00ed blok\u016f prioritu transakce a poplatek za kB (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Spravovat \u00fapln\u00fd index transakc\u00ed, kter\u00fd je vyu\u017e\u00edv\u00e1n rpc vol\u00e1n\u00edm getrawtransaction (v\u00fdchoz\u00ed: %u)</translation>\n@@ -3194,18 +3436,10 @@\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>V\u017edy z\u00edsk\u00e1vat adresy dal\u0161\u00edch prot\u011bj\u0161k\u016f p\u0159es DNS (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Vypnout bezpe\u010dn\u00fd re\u017eim (safemode), p\u0159ekr\u00fdt skute\u010dnou ud\u00e1lost bezpe\u010dn\u00e9ho re\u017eimu (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Vynutit bezpe\u010dn\u00fd m\u00f3d (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>T\u011b\u017eit (v\u00fdchoz\u00ed: %u)</translation>\n@@ -3222,10 +3456,6 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Neplatn\u00e1 -proxy adresa: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Omezit velikost vyrovn\u00e1vac\u00ed pam\u011bti pro podpisy na &lt;n&gt; polo\u017eek (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>\u010cekat na JSON-RPC spojen\u00ed na &lt;portu&gt; (v\u00fdchoz\u00ed: %u nebo testnet: %u)</translation>\n@@ -3238,6 +3468,10 @@\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Povolit nejv\u00fd\u0161e &lt;n&gt; prot\u011bj\u0161k\u016f (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Transakce z pen\u011b\u017eenky rozes\u00edlat</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maxim\u00e1ln\u00ed velikost p\u0159ij\u00edmac\u00edho bufferu pro ka\u017ed\u00e9 spojen\u00ed, &lt;n&gt;*1000 bajt\u016f (v\u00fdchoz\u00ed: %u)</translation>\n@@ -3246,10 +3480,6 @@\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maxim\u00e1ln\u00ed velikost odes\u00edlac\u00edho bufferu pro ka\u017ed\u00e9 spojen\u00ed, &lt;n&gt;*1000 bajt\u016f (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Uzn\u00e1vat pouze \u0159et\u011bzec blok\u016f, kter\u00fd odpov\u00edd\u00e1 vnit\u0159n\u00edm kontroln\u00edm bod\u016fm (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>P\u0159ipojit p\u0159ed ladic\u00ed v\u00fdstup \u010dasov\u00e9 raz\u00edtko (v\u00fdchoz\u00ed: %u)</translation>\n@@ -3262,10 +3492,6 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>P\u0159epos\u00edlat ne-P2SH multisig (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Spustit vl\u00e1kno pro\u010di\u0161\u0165uj\u00edc\u00ed periodicky pen\u011b\u017eenku (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Soubor se serverov\u00fdm certifik\u00e1tem (v\u00fdchoz\u00ed: %s)</translation>\n@@ -3286,10 +3512,6 @@\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Nastaven\u00ed po\u010dtu vl\u00e1ken pro servisn\u00ed RPC vol\u00e1n\u00ed (v\u00fdchoz\u00ed: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Nastavit p\u0159\u00edznak DB_PRIVATE v datab\u00e1zov\u00e9m prost\u0159ed\u00ed pen\u011b\u017eenky (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Konfigura\u010dn\u00ed soubor (v\u00fdchoz\u00ed: %s)</translation>\n@@ -3302,10 +3524,6 @@\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Utr\u00e1cet i je\u0161t\u011b nepotvrzen\u00e9 drobn\u00e9 p\u0159i pos\u00edl\u00e1n\u00ed transakc\u00ed (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Ukon\u010dit se po importu blok\u016f z disku (v\u00fdchoz\u00ed: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Pr\u00e1h pro odpojov\u00e1n\u00ed zlobiv\u00fdch prot\u011bj\u0161k\u016f (v\u00fdchoz\u00ed: %u)</translation>"
      },
      {
        "sha": "1b8eb3dc41dc62cdbe741a362f47ac92ca8fe3c0",
        "filename": "src/qt/locale/bitcoin_cy.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_cy.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_cy.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cy.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"cy\" version=\"2.1\">\n+<TS language=\"cy\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "60b8925e8c613c72821f8465ae4d688df97a0db1",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 73,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"da\" version=\"2.1\">\n+<TS language=\"da\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2812,10 +2812,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Tildel til den givne adresse og lyt altid p\u00e5 den. Brug [v\u00e6rt]:port-notation for IPv6</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Begr\u00e6ns hyppigheden af gratis transaktioner l\u00f8bende til &lt;n&gt;*1000 byte pr. minut (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Slet alle transaktioner i tegnebogen og genskab kun disse dele af blokk\u00e6den gennem -rescan under opstart</translation>\n@@ -2824,18 +2820,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribueret under MIT-softwarelicensen; se den vedlagte fil COPYING eller &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Start regressionstesttilstand, som bruger en speciel k\u00e6de, hvor blokke kan l\u00f8ses med det samme.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Udf\u00f8r kommando, n\u00e5r en transaktion i tegnebogen \u00e6ndres (%s i kommandoen erstattes med TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>I denne tilstand styrer -genproclimit hvor mange blokke, der genereres med det samme.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Maksimalt totalt gebyr der kan bruges i en enkelt tegnebogstransaktion. For lav en v\u00e6rdi kan afbryde store transaktioner (standard: %s)</translation>\n@@ -2856,6 +2844,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Ikke i stand til at tildele til %s p\u00e5 denne computer. Bitcoin Core k\u00f8rer sansynligvis allerede.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ADVARSEL: unormalt mange blokke er genereret; %d blokke er modtaget i l\u00f8bet af de seneste %d timer (%d forventet)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ADVARSEL: tjek din netv\u00e6rksforbindelse; %d blokke er modtaget i l\u00f8bet af de seneste %d timer (%d forventet)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Advarsel: -paytxfee er sat meget h\u00f8jt! Dette er det gebyr du vil betale, hvis du sender en transaktion.</translation>\n@@ -2992,10 +2988,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Angiv tegnebogsfil (inden for datamappe)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>This is intended for regression testing tools and app development.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Brug UPnP til at konfigurere den lyttende port (standard: %u)</translation>\n@@ -3072,10 +3064,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Gebyrer (i BTC/Kb) mindre end dette opfattes som nulgebyr for videresendelse (standard: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Gebyrer (i BTC/Kb) mindre end dette opfattes som nulgebyr for oprettelse af transaktion (standard: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Hvis paytxfee ikke er sat, inkluderes nok gebyr til at transaktioner begynder at blive bekr\u00e6ftet ingen for gennemsnitligt n blokke (standard: %u)</translation>\n@@ -3100,10 +3088,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Brug tilf\u00e6ldige akkreditiver for hver proxy-forbindelse. Dette tillader str\u00f8misolation med Tor (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>Kr\u00e6v h\u00f8j prioritet for at videresende transaktioner uden eller med lavt gebyr (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>S\u00e6t maksimumst\u00f8rrelse for h\u00f8jprioritet/lavgebyr-transaktioner i byte (standard: %d)</translation>\n@@ -3172,10 +3156,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiverer bedste k\u00e6de \u2026</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Tillad selvsignerede rodcertifikater (standard: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>Kan ikke k\u00f8re med en tegnebog i besk\u00e5ret tilstand.</translation>\n@@ -3268,18 +3248,14 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC-underst\u00f8ttelse for HTTP-persistente forbindelser (standard: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Drop tilf\u00e6ldigt 1 ud af hver &lt;n&gt; netv\u00e6rksbeskeder</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Sl\u00f8r tilf\u00e6ldigt 1 ud af hver &lt;n&gt; netv\u00e6rksbeskeder</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Genopbyg blokk\u00e6deindeks fra nuv\u00e6rende blk000??.dat-filer ved opstart</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Modtag og vis P2P-netv\u00e6rksadvarsler (standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send sporings-/fejls\u00f8gningsinformation til konsollen i stedet for debug.log filen</translation>\n@@ -3424,18 +3400,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = behold metadata for transaktion, fx kontoindehaver og information om betalingsanmodning, 2 = drop metadata for transaktion)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Flyt databaseaktivitet fra hukommelsespulje til disklog hver &lt;n&gt; megabyte (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hvor gennemarbejdet blokverificeringen for -checkblocks er (0-4; standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Prioritet for transaktionslog og gebyr pr. kB under udvinding af blokke (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Vedligehold et komplet transaktionsindeks, der bruges af rpc-kaldet getrawtransaction (standard: %u)</translation>\n@@ -3464,18 +3432,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Foresp\u00f8rg altid adresser p\u00e5 andre knuder via DNS-opslag (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Sl\u00e5 sikker tilstand fra, tilsides\u00e6t h\u00e6ndelser fra sikker tilstand (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Fejl ved indl\u00e6sning af wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Gennemtving sikker tilstand (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Gener\u00e9r bitcoins (standard: %u)</translation>\n@@ -3492,10 +3452,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ugyldig -proxy adresse: \"%s\"</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Begr\u00e6ns st\u00f8rrelsen p\u00e5 signaturcache til &lt;n&gt; indgange (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Lyt efter JSON-RPC-forbindelser p\u00e5 &lt;port&gt; (standard: %u eller testnet: %u)</translation>\n@@ -3520,10 +3476,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maksimum for afsendelsesbuffer pr. forbindelse, &lt;n&gt;*1000 byte (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Accept\u00e9r kun indbyggede kontrolposter, der matcher blokk\u00e6den (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>F\u00f8j tidsstempel foran fejls\u00f8gningsoutput (standard: %u)</translation>\n@@ -3536,10 +3488,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Videresend ikke-P2SH multisig (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>K\u00f8r en tr\u00e5d for periodisk at rydde tegnebog (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Servercertifikat-fil (standard: %s)\n@@ -3562,10 +3510,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Angiv antallet af tr\u00e5de til at h\u00e5ndtere RPC-kald (standard: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>S\u00e6tter DB_PRIVATE-flaget i tegnebogens db-milj\u00f8 (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Angiv konfigurationsfil (standard: %s)</translation>\n@@ -3582,10 +3526,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Brug ubekr\u00e6ftede byttepenge under afsendelse af transaktioner (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Stop k\u00f8rsel efter import af blokke fra disk (standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Gr\u00e6nse for afbrydelse af forbindelse til knuder, der opf\u00f8rer sig upassende (standard: %u)</translation>"
      },
      {
        "sha": "a50a6e60cb1093682c013da855058a4267eb4fdf",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 73,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"de\" version=\"2.1\">\n+<TS language=\"de\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2816,10 +2816,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>An die angegebene Adresse binden und immer abh\u00f6ren. F\u00fcr IPv6 \"[Host]:Port\"-Notation verwenden</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Durchgehend die Anzahl freier Transaktionen auf &lt;n&gt; * 1000 Byte pro Minute begrenzen (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Alle Wallet-Transaktionen l\u00f6schen und nur diese Teilbereiche der Blockkette durch -rescan beim Starten wiederherstellen</translation>\n@@ -2828,18 +2824,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Ver\u00f6ffentlicht unter der MIT-Softwarelizenz, siehe beiligende Datei COPYING oder &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Regressionstest-Modus aktivieren, der eine spezielle Blockkette nutzt, in der Bl\u00f6cke sofort gel\u00f6st werden k\u00f6nnen.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Befehl ausf\u00fchren wenn sich eine Wallet-Transaktion ver\u00e4ndert (%s im Befehl wird durch die Transaktions-ID ersetzt)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>In diesem Modus legt -genproclimit fest, wie viele Bl\u00f6cke sofort erzeugt werden.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Maximale Gesamtgeb\u00fchren je Wallet-Transaktion, ein zu niedriger Wert kann gro\u00dfe Transaktionen abbrechen (Standard: %s)</translation>\n@@ -2860,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Kann auf diesem Computer nicht an %s binden, da Bitcoin Core wahrscheinlich bereits gestartet wurde.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>Warnung: Es wurde eine ungew\u00f6hnlich hohe Anzahl Bl\u00f6cke erzeugt, %d Bl\u00f6cke wurden in den letzten %d Stunden empfangen (%d wurden erwartet).</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>Warnung: \u00dcberpr\u00fcpfen Sie ihre Netzwerkverbindung, %d Bl\u00f6cke wurden in den letzten %d Stunden empfangen (%d wurden erwartet).</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Warnung: -paytxfee ist auf einen sehr hohen Wert festgelegt! Dies ist die Geb\u00fchr die beim Senden einer Transaktion f\u00e4llig wird.</translation>\n@@ -2996,10 +2992,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Wallet-Datei angeben (innerhalb des Datenverzeichnisses)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Dies ist f\u00fcr Regressionstest-Tools und Anwendungsentwicklung gedacht.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>UPnP verwenden, um eine Portweiterleitung einzurichten (Standard: %u)</translation>\n@@ -3076,10 +3068,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Niedrigere Geb\u00fchren (in BTC/Kb) als diese werden bei der Weiterleitung als geb\u00fchrenfrei angesehen (Standard: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Niedrigere Geb\u00fchren (in BTC/Kb) als diese werden bei der Transaktionserstellung als geb\u00fchrenfrei angesehen (Standard: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Wenn -paytxfee nicht festgelegt wurde Geb\u00fchren einschlie\u00dfen, so dass mit der Best\u00e4tigung von Transaktionen im Schnitt innerhalb von n Bl\u00f6cken begonnen wird (Standard: %u)</translation>\n@@ -3104,10 +3092,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Zuf\u00e4llige Anmeldedaten f\u00fcr jede Proxyverbindung verwenden. Dies aktiviert Tor-Datenflussisolation (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>Hohe Priorit\u00e4t zum Weiterleiten von freien bzw. Transaktionen mit niedrigen Geb\u00fchren voraussetzen (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Maximale Gr\u00f6\u00dfe in Byte von \"high-priority/low-fee\"-Transaktionen festlegen (Standard: %d)</translation>\n@@ -3176,10 +3160,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiviere beste Blockkette...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Selbstunterschriebene Stammzertifikate erlauben (Standard: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>Eine Wallet kann im K\u00fcrzungsmodus nicht verwendet werden.</translation>\n@@ -3272,18 +3252,14 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>Unterst\u00fctzung f\u00fcr persistente HTTP-Verbindungen bei RPC (Standard: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Zuf\u00e4llig eine von &lt;n&gt; Netzwerknachrichten verwerfen</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Zuf\u00e4llig eine von &lt;n&gt; Netzwerknachrichten verw\u00fcrfeln</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Blockkettenindex aus aktuellen Dateien blk000??.dat beim Starten wiederaufbauen</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>P2P-Netzwerk-Alarme empfangen und anzeigen (Standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>R\u00fcckverfolgungs- und Debuginformationen an die Konsole senden, anstatt sie in debug.log zu schreiben</translation>\n@@ -3428,18 +3404,10 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = TX-Metadaten wie z.B. Accountbesitzer und Zahlungsanforderungsinformationen behalten, 2 = TX-Metadaten verwerfen)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Datenbankaktivit\u00e4ten vom Arbeitsspeicher-Pool alle &lt;n&gt; Megabyte auf den Datentr\u00e4ger schreiben (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Legt fest, wie gr\u00fcndlich die Blockverifikation von -checkblocks ist (0-4, Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Transaktionspriorit\u00e4t und Geb\u00fchr pro kB beim Erzeugen von Bl\u00f6cken protokollieren (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Einen vollst\u00e4ndigen Transaktionsindex f\u00fchren, der vom RPC-Befehl \"getrawtransaction\" genutzt wird (Standard: %u)</translation>\n@@ -3468,18 +3436,10 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Adressen von Gegenstellen immer \u00fcber DNS-Namensaufl\u00f6sung abfragen (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Sicherheitsmodus deaktivieren, \u00fcbergeht ein echtes Sicherheitsmodusereignis (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Fehler beim Laden von wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Sicherheitsmodus erzwingen (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Bitcoins erzeugen (Standard: %u)</translation>\n@@ -3496,10 +3456,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ung\u00fcltige Adresse in -proxy: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Gr\u00f6\u00dfe des Signaturcaches auf &lt;n&gt; Eintr\u00e4ge begrenzen (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>&lt;port&gt; nach JSON-RPC-Verbindungen abh\u00f6ren (Standard: %u oder Testnetz: %u)</translation>\n@@ -3520,10 +3476,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maximale Gr\u00f6\u00dfe des Sendepuffers pro Verbindung, &lt;n&gt; * 1000 Byte (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Blockkette nur als g\u00fcltig ansehen, wenn sie mit den integrierten Pr\u00fcfpunkten \u00fcbereinstimmt (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Debugausgaben einen Zeitstempel voranstellen (Standard: %u)</translation>\n@@ -3536,10 +3488,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Nicht-\"P2SH-Multisig\" weiterleiten (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Einen Thread starten, der periodisch die Wallet sicher auf den Datentr\u00e4ger schreibt (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Serverzertifikat (Standard: %s)</translation>\n@@ -3560,10 +3508,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Maximale Anzahl an Threads zur Verarbeitung von RPC-Anfragen festlegen (Standard: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>\"DB_PRIVATE\"-Flag in der Wallet-Datenbankumgebung setzen (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Konfigurationsdatei festlegen (Standard: %s)</translation>\n@@ -3580,10 +3524,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Unbest\u00e4tigtes Wechselgeld darf beim Senden von Transaktionen ausgegeben werden (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Beenden, nachdem Bl\u00f6cke vom Datentr\u00e4ger importiert wurden (Standard: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Schwellenwert, um Verbindungen zu sich nicht konform verhaltenden Gegenstellen zu beenden (Standard: %u)</translation>"
      },
      {
        "sha": "8a0958a7bd4f30263ab162d7ba699159c1da8312",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"el_GR\" version=\"2.1\">\n+<TS language=\"el_GR\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2493,10 +2493,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>\u0391\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c3\u03b5 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03c0\u03bb\u03ae\u03ba\u03c4\u03c1\u03b1 [Host] : \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b8\u03cd\u03c1\u03b1 \u03b3\u03b9\u03b1 IPv6</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03b4\u03bf\u03ba\u03b9\u03bc\u03b1\u03c3\u03c4\u03b9\u03ba\u03ae\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2 \u03c0\u03b1\u03bb\u03b9\u03bd\u03b4\u03c1\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2, \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03bc\u03b9\u03b1 \u03b5\u03b9\u03b4\u03b9\u03ba\u03ae \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1 \u03c3\u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c4\u03b1 \u03bc\u03c0\u03bb\u03bf\u03ba \u03b5\u03c0\u03b9\u03bb\u03cd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03b1\u03af\u03b1.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0395\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b5 \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03cc\u03c4\u03b1\u03bd \u03c4\u03bf \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03bc\u03c0\u03bb\u03bf\u03ba \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03b9(%s \u03c3\u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03b1\u03bd\u03c4\u03b9\u03ba\u03b1\u03b8\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf hash \u03c4\u03bf\u03c5 \u03bc\u03c0\u03bb\u03bf\u03ba)</translation>\n@@ -2593,10 +2589,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0395\u03c0\u03b9\u03bb\u03ad\u03be\u03c4\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd (\u03bc\u03ad\u03c3\u03b1 \u03b1\u03c0\u03bf \u03ba\u03b1\u03c4\u03ac\u03bb\u03bf\u03b3\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u0391\u03c5\u03c4\u03cc \u03c0\u03c1\u03bf\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03b5\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03b1 \u03b4\u03bf\u03ba\u03b9\u03bc\u03ce\u03bd \u03c0\u03b1\u03bb\u03b9\u03bd\u03b4\u03c1\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd.</translation>\n-    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u0395\u03c0\u03b1\u03bb\u03ae\u03b8\u03b5\u03c5\u03c3\u03b7 \u03c4\u03c9\u03bd \u03bc\u03c0\u03bb\u03bf\u03ba... </translation>\n@@ -2801,10 +2793,6 @@\n         <source>Error loading wallet.dat</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>\u0395\u03c0\u03b9\u03b2\u03bf\u03bb\u03ae \u03b1\u03c3\u03c6\u03b1\u03bb\u03ae\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2 (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03bd\u03bf\u03bc\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd (\u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03c2: %u)</translation>"
      },
      {
        "sha": "3ebb4d0bf60dc710c06ec2c18e3f729409d0b8ef",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 400,
        "deletions": 352,
        "changes": 752,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -104,7 +104,7 @@\n         <translation>&amp;Edit</translation>\n     </message>\n     <message>\n-        <location line=\"+194\"/>\n+        <location line=\"+193\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -283,30 +283,43 @@\n         <translation>Wallet passphrase was successfully changed.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <location filename=\"../bantablemodel.cpp\" line=\"+88\"/>\n+        <source>IP/Netmask</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Banned Until</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+326\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+324\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+342\"/>\n+        <location line=\"+353\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-418\"/>\n+        <location line=\"-429\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n     <message>\n-        <location line=\"-134\"/>\n+        <location line=\"-130\"/>\n         <source>Node</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+135\"/>\n+        <location line=\"+131\"/>\n         <source>Show general overview of wallet</source>\n         <translation>Show general overview of wallet</translation>\n     </message>\n@@ -376,12 +389,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+175\"/>\n+        <location line=\"+180\"/>\n         <source>Bitcoin Core client</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+157\"/>\n+        <location line=\"+163\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>Importing blocks from disk...</translation>\n     </message>\n@@ -391,7 +404,7 @@\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-416\"/>\n+        <location line=\"-427\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n@@ -421,17 +434,17 @@\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"+439\"/>\n+        <location line=\"+450\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-653\"/>\n+        <location line=\"-660\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n+        <location line=\"+139\"/>\n         <source>&amp;Send</source>\n         <translation>&amp;Send</translation>\n     </message>\n@@ -471,7 +484,7 @@\n         <translation>Verify messages to ensure they were signed with specified Bitcoin addresses</translation>\n     </message>\n     <message>\n-        <location line=\"+49\"/>\n+        <location line=\"+53\"/>\n         <source>&amp;File</source>\n         <translation>&amp;File</translation>\n     </message>\n@@ -496,7 +509,7 @@\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n     <message>\n-        <location line=\"+164\"/>\n+        <location line=\"+160\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -536,7 +549,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+309\"/>\n+        <location line=\"+320\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -688,7 +701,7 @@\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+141\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+143\"/>\n         <source>Network Alert</source>\n         <translation>Network Alert</translation>\n     </message>\n@@ -791,7 +804,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"+46\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+47\"/>\n         <source>Copy address</source>\n         <translation type=\"unfinished\">Copy address</translation>\n     </message>\n@@ -912,7 +925,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+161\"/>\n+        <location line=\"+160\"/>\n         <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -958,8 +971,8 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+59\"/>\n-        <location line=\"+61\"/>\n+        <location line=\"+58\"/>\n+        <location line=\"+60\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n     </message>\n@@ -1045,7 +1058,7 @@\n <context>\n     <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+69\"/>\n+        <location filename=\"../intro.cpp\" line=\"+68\"/>\n         <source>A new data directory will be created.</source>\n         <translation>A new data directory will be created.</translation>\n     </message>\n@@ -1240,6 +1253,7 @@\n     </message>\n     <message>\n         <location line=\"+44\"/>\n+        <location line=\"+187\"/>\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1280,7 +1294,7 @@\n         <translation>&amp;Reset Options</translation>\n     </message>\n     <message>\n-        <location line=\"-317\"/>\n+        <location line=\"-504\"/>\n         <source>&amp;Network</source>\n         <translation>&amp;Network</translation>\n     </message>\n@@ -1346,21 +1360,61 @@\n     </message>\n     <message>\n         <location line=\"+9\"/>\n+        <location line=\"+187\"/>\n         <source>Proxy &amp;IP:</source>\n         <translation>Proxy &amp;IP:</translation>\n     </message>\n     <message>\n-        <location line=\"+32\"/>\n+        <location line=\"-155\"/>\n+        <location line=\"+187\"/>\n         <source>&amp;Port:</source>\n         <translation>&amp;Port:</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-162\"/>\n+        <location line=\"+187\"/>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port of the proxy (e.g. 9050)</translation>\n     </message>\n     <message>\n-        <location line=\"+36\"/>\n+        <location line=\"-163\"/>\n+        <source>Used for reaching peers via:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <location line=\"+23\"/>\n+        <location line=\"+23\"/>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-36\"/>\n+        <source>IPv4</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+23\"/>\n+        <source>IPv6</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+23\"/>\n+        <source>Tor</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+25\"/>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+102\"/>\n         <source>&amp;Window</source>\n         <translation>&amp;Window</translation>\n     </message>\n@@ -1400,12 +1454,12 @@\n         <translation>Choose the default subdivision unit to show in the interface and when sending coins.</translation>\n     </message>\n     <message>\n-        <location line=\"-253\"/>\n+        <location line=\"-440\"/>\n         <source>Whether to show coin control features or not.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+415\"/>\n+        <location line=\"+602\"/>\n         <source>&amp;OK</source>\n         <translation>&amp;OK</translation>\n     </message>\n@@ -1415,7 +1469,7 @@\n         <translation>&amp;Cancel</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+75\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+83\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n@@ -1425,28 +1479,28 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n+        <location line=\"+83\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirm options reset</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <location line=\"+29\"/>\n+        <location line=\"+30\"/>\n         <source>Client restart required to activate changes.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-30\"/>\n         <source>Client will be shut down. Do you want to proceed?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+33\"/>\n+        <location line=\"+34\"/>\n         <source>This change would require a client restart.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+24\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n@@ -1548,7 +1602,7 @@\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+434\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+432\"/>\n         <location line=\"+14\"/>\n         <location line=\"+7\"/>\n         <source>URI handling</source>\n@@ -1560,16 +1614,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+88\"/>\n+        <location line=\"+83\"/>\n         <location line=\"+9\"/>\n         <location line=\"+31\"/>\n         <location line=\"+10\"/>\n         <location line=\"+17\"/>\n+        <location line=\"+88\"/>\n         <source>Payment request rejected</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-67\"/>\n+        <location line=\"-155\"/>\n         <source>Payment request network doesn&apos;t match client network.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1584,17 +1639,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-263\"/>\n-        <location line=\"+221\"/>\n+        <location line=\"-258\"/>\n+        <location line=\"+216\"/>\n         <location line=\"+42\"/>\n-        <location line=\"+114\"/>\n+        <location line=\"+113\"/>\n         <location line=\"+14\"/>\n         <location line=\"+18\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-408\"/>\n+        <location line=\"-402\"/>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1619,7 +1674,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+75\"/>\n+        <location line=\"+70\"/>\n         <source>Payment request expired.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1640,17 +1695,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+43\"/>\n+        <location line=\"+44\"/>\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Payment request DoS protection</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>Error communicating with %1: %2</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1678,7 +1728,7 @@\n <context>\n     <name>PeerTableModel</name>\n     <message>\n-        <location filename=\"../peertablemodel.cpp\" line=\"+118\"/>\n+        <location filename=\"../peertablemodel.cpp\" line=\"+117\"/>\n         <source>User Agent</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1706,7 +1756,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+748\"/>\n+        <location line=\"+761\"/>\n         <source>%1 d</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1768,7 +1818,7 @@\n <context>\n     <name>RPCConsole</name>\n     <message>\n-        <location filename=\"../forms/rpcconsole.ui\" line=\"+46\"/>\n+        <location filename=\"../forms/debugwindow.ui\" line=\"+46\"/>\n         <source>Client name</source>\n         <translation>Client name</translation>\n     </message>\n@@ -1777,13 +1827,16 @@\n         <location line=\"+23\"/>\n         <location line=\"+26\"/>\n         <location line=\"+26\"/>\n+        <location line=\"+26\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+36\"/>\n         <location line=\"+23\"/>\n         <location line=\"+36\"/>\n         <location line=\"+23\"/>\n-        <location line=\"+465\"/>\n+        <location line=\"+533\"/>\n+        <location line=\"+23\"/>\n+        <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n@@ -1796,12 +1849,13 @@\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n+        <location line=\"+26\"/>\n         <location line=\"+23\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n     <message>\n-        <location line=\"-990\"/>\n+        <location line=\"-1156\"/>\n         <source>Client version</source>\n         <translation>Client version</translation>\n     </message>\n@@ -1821,7 +1875,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+79\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Using OpenSSL version</translation>\n     </message>\n@@ -1881,14 +1935,24 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+39\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+238\"/>\n-        <location line=\"+326\"/>\n+        <location line=\"+50\"/>\n+        <source>Banned peers</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+57\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+281\"/>\n+        <location line=\"+560\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+25\"/>\n+        <source>Whitelisted</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+23\"/>\n         <source>Direction</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1898,27 +1962,33 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n-        <source>User Agent</source>\n+        <location line=\"+69\"/>\n+        <source>Starting Block</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+23\"/>\n-        <source>Services</source>\n+        <source>Synced Headers</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+23\"/>\n-        <source>Starting Height</source>\n+        <source>Synced Blocks</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n-        <source>Sync Height</source>\n+        <location line=\"-913\"/>\n+        <location line=\"+821\"/>\n+        <source>User Agent</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+23\"/>\n+        <source>Services</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+92\"/>\n         <source>Ban Score</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1952,13 +2022,23 @@\n         <source>Ping Time</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+23\"/>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Ping Wait</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+23\"/>\n         <source>Time Offset</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-764\"/>\n+        <location line=\"-904\"/>\n         <source>Last block time</source>\n         <translation>Last block time</translation>\n     </message>\n@@ -1988,7 +2068,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../rpcconsole.cpp\" line=\"-164\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"-333\"/>\n         <source>In:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1998,7 +2078,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/rpcconsole.ui\" line=\"-357\"/>\n+        <location filename=\"../forms/debugwindow.ui\" line=\"-357\"/>\n         <source>Build date</source>\n         <translation>Build date</translation>\n     </message>\n@@ -2013,7 +2093,45 @@\n         <translation>Clear console</translation>\n     </message>\n     <message>\n-        <location filename=\"../rpcconsole.cpp\" line=\"-36\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"-150\"/>\n+        <source>&amp;Disconnect Node</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+1\"/>\n+        <location line=\"+1\"/>\n+        <location line=\"+1\"/>\n+        <source>Ban Node for</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-3\"/>\n+        <source>1 &amp;hour</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>1 &amp;day</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>1 &amp;week</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>1 &amp;year</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+46\"/>\n+        <source>&amp;Unban Node</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+64\"/>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2048,7 +2166,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+95\"/>\n+        <location line=\"+88\"/>\n+        <source>(node id: %1)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>via %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2059,7 +2182,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Inbound</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2069,14 +2192,19 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>Unknown</source>\n+        <location line=\"+2\"/>\n+        <source>Yes</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <location line=\"+1\"/>\n-        <source>Fetching...</source>\n+        <location line=\"+0\"/>\n+        <source>No</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <location line=\"+6\"/>\n+        <source>Unknown</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n@@ -2171,7 +2299,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../receivecoinsdialog.cpp\" line=\"+45\"/>\n+        <location filename=\"../receivecoinsdialog.cpp\" line=\"+46\"/>\n         <source>Copy label</source>\n         <translation type=\"unfinished\">Copy label</translation>\n     </message>\n@@ -2296,7 +2424,7 @@\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+543\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+545\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2541,12 +2669,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+244\"/>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+246\"/>\n         <source>or</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2599,7 +2722,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-114\"/>\n+        <location line=\"-309\"/>\n+        <source>Total Amount %1&lt;span style=&apos;font-size:10pt;font-weight:normal;&apos;&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+195\"/>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2614,7 +2742,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+19\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n     </message>\n@@ -2624,7 +2752,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-692\"/>\n+        <location line=\"-691\"/>\n         <source>Copy dust</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2872,7 +3000,7 @@\n         <translation>Reset all verify message fields</translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+40\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+41\"/>\n         <source>Click &quot;Sign Message&quot; to generate signature</source>\n         <translation>Click &quot;Sign Message&quot; to generate signature</translation>\n     </message>\n@@ -2956,7 +3084,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../networkstyle.cpp\" line=\"+20\"/>\n+        <location filename=\"../networkstyle.cpp\" line=\"+19\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n@@ -2972,7 +3100,7 @@\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+34\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+32\"/>\n         <source>Open until %1</source>\n         <translation>Open until %1</translation>\n     </message>\n@@ -3196,7 +3324,7 @@\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+230\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+233\"/>\n         <source>Date</source>\n         <translation>Date</translation>\n     </message>\n@@ -3332,7 +3460,7 @@\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+68\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+69\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>All</translation>\n@@ -3519,7 +3647,7 @@\n <context>\n     <name>WalletFrame</name>\n     <message>\n-        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <location filename=\"../walletframe.cpp\" line=\"+27\"/>\n         <source>No wallet has been loaded.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3535,7 +3663,7 @@\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+45\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n         <source>&amp;Export</source>\n         <translation>&amp;Export</translation>\n     </message>\n@@ -3545,7 +3673,7 @@\n         <translation>Export the data in the current tab to a file</translation>\n     </message>\n     <message>\n-        <location line=\"+189\"/>\n+        <location line=\"+194\"/>\n         <source>Backup Wallet</source>\n         <translation>Backup Wallet</translation>\n     </message>\n@@ -3578,57 +3706,112 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+268\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+249\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+30\"/>\n         <source>Specify data directory</source>\n         <translation>Specify data directory</translation>\n     </message>\n     <message>\n-        <location line=\"-94\"/>\n+        <location line=\"-87\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n     <message>\n-        <location line=\"+97\"/>\n+        <location line=\"+90\"/>\n         <source>Specify your own public address</source>\n         <translation>Specify your own public address</translation>\n     </message>\n     <message>\n-        <location line=\"-117\"/>\n+        <location line=\"-107\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"+95\"/>\n+        <location line=\"-117\"/>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Please check that your computer&apos;s date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+109\"/>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+37\"/>\n+        <source>Pruning blockstore...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n     <message>\n-        <location line=\"+42\"/>\n+        <location line=\"+32\"/>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n         <source>Use the test network</source>\n         <translation>Use the test network</translation>\n     </message>\n     <message>\n-        <location line=\"-136\"/>\n+        <location line=\"-123\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-168\"/>\n+        <location line=\"-157\"/>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Bind to given address and always listen on it. Use [host]:port notation for IPv6</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+16\"/>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3637,53 +3820,53 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+11\"/>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n+        <location line=\"+57\"/>\n+        <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <location line=\"+6\"/>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer&apos;s date and time being set incorrectly. Only rebuild the block database if you are sure that your computer&apos;s date and time are correct</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <location line=\"+7\"/>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n+        <location line=\"+3\"/>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n-        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n-        <translation>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</translation>\n+        <location line=\"+5\"/>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n+        <location line=\"+3\"/>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+6\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</translation>\n     </message>\n@@ -3718,7 +3901,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation>Attempt to recover private keys from a corrupt wallet.dat</translation>\n     </message>\n@@ -3728,7 +3911,7 @@\n         <translation>Block creation options:</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Connect only to the specified node(s)</source>\n         <translation>Connect only to the specified node(s)</translation>\n     </message>\n@@ -3743,12 +3926,12 @@\n         <translation>Corrupted block database detected</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Debugging/Testing options:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Do not load the wallet and disable wallet RPC calls</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3759,6 +3942,26 @@\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Enable publish raw transaction in &lt;address&gt;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Error initializing block database</source>\n         <translation>Error initializing block database</translation>\n     </message>\n@@ -3778,12 +3981,7 @@\n         <translation>Error opening block database</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n         <source>Error: Disk space is low!</source>\n         <translation>Error: Disk space is low!</translation>\n     </message>\n@@ -3793,12 +3991,7 @@\n         <translation>Failed to listen on any port. Use -listen=0 if you want this.</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n         <source>Importing...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3813,12 +4006,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+21\"/>\n+        <location line=\"+20\"/>\n         <source>Not enough file descriptors available.</source>\n         <translation>Not enough file descriptors available.</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3833,7 +4026,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+18\"/>\n+        <location line=\"+14\"/>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3843,22 +4036,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+12\"/>\n+        <location line=\"+11\"/>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Specify wallet file (within data directory)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+17\"/>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>Verifying blocks...</source>\n         <translation>Verifying blocks...</translation>\n     </message>\n@@ -3888,22 +4076,17 @@\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n     <message>\n-        <location line=\"-99\"/>\n+        <location line=\"-89\"/>\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation>Imports blocks from external blk000??.dat file</translation>\n     </message>\n     <message>\n-        <location line=\"-223\"/>\n+        <location line=\"-206\"/>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+7\"/>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3918,7 +4101,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+3\"/>\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3928,7 +4111,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+6\"/>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3943,37 +4126,22 @@\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+17\"/>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+3\"/>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: &apos;%s&apos; (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+6\"/>\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+18\"/>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3983,12 +4151,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+11\"/>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3998,7 +4161,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+8\"/>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4008,32 +4171,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.com\n-</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+18\"/>\n         <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+22\"/>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4053,22 +4196,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Activating best chain...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+4\"/>\n-        <source>Can&apos;t run with a wallet in prune mode.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+9\"/>\n         <source>Cannot resolve -whitebind address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4088,12 +4221,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+15\"/>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4107,11 +4235,6 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Error: Unsupported argument -tor found, use -onion.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+9\"/>\n         <source>Information</source>\n@@ -4153,7 +4276,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+10\"/>\n         <source>Need to specify a port with -whitebind: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4164,36 +4287,26 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+9\"/>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n         <source>RPC server options:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send trace/debug info to console instead of debug.log file</translation>\n     </message>\n@@ -4203,7 +4316,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+1\"/>\n         <source>Set SSL root certificates for payment request (default: -system-)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4213,7 +4326,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\">Set language, for example &quot;de_DE&quot; (default: system locale)</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4238,7 +4351,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\">Start minimized</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4248,7 +4361,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+2\"/>\n         <source>Transaction amount too small</source>\n         <translation>Transaction amount too small</translation>\n     </message>\n@@ -4278,12 +4391,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Use UPnP to map the listening port (default: 1 when listening)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+6\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n@@ -4312,6 +4420,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Zapping all transactions from wallet...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>ZeroMQ notification options:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>on startup</source>\n@@ -4323,72 +4436,57 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-71\"/>\n+        <location line=\"-64\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-205\"/>\n+        <location line=\"-195\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+258\"/>\n+        <location line=\"+242\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Upgrade wallet to latest format</translation>\n     </message>\n     <message>\n-        <location line=\"-41\"/>\n+        <location line=\"-36\"/>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescan the block chain for missing wallet transactions</translation>\n     </message>\n     <message>\n-        <location line=\"+42\"/>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Use OpenSSL (https) for JSON-RPC connections</translation>\n-    </message>\n-    <message>\n-        <location line=\"-12\"/>\n+        <location line=\"+25\"/>\n         <source>This help message</source>\n         <translation>This help message</translation>\n     </message>\n     <message>\n-        <location line=\"-116\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+61\"/>\n+        <location line=\"+58\"/>\n         <source>Loading addresses...</source>\n         <translation>Loading addresses...</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-30\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Error loading wallet.dat: Wallet corrupted</translation>\n     </message>\n     <message>\n-        <location line=\"-211\"/>\n+        <location line=\"-196\"/>\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+61\"/>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+49\"/>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+11\"/>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4408,37 +4506,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n+        <location line=\"+37\"/>\n         <source>(default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+10\"/>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+18\"/>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+26\"/>\n         <source>Error loading wallet.dat</source>\n         <translation>Error loading wallet.dat</translation>\n     </message>\n     <message>\n         <location line=\"+11\"/>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n         <source>Generate coins (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4448,7 +4531,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>Include IP addresses in debug output (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4459,11 +4542,6 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+8\"/>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4493,17 +4571,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+7\"/>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+8\"/>\n         <source>Relay and mine data carrier transactions (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4513,22 +4586,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+4\"/>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Server private key (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+8\"/>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4542,11 +4600,6 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+5\"/>\n         <source>Specify configuration file (default: %s)</source>\n@@ -4567,23 +4620,18 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+5\"/>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+8\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"-119\"/>\n+        <location line=\"-111\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation>Cannot resolve -bind address: &apos;%s&apos;</translation>\n     </message>\n@@ -4603,22 +4651,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Insufficient funds</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+13\"/>\n         <source>Loading block index...</source>\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-63\"/>\n+        <location line=\"-60\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n     <message>\n-        <location line=\"+64\"/>\n+        <location line=\"+61\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-56\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -4628,17 +4676,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot write default address</translation>\n     </message>\n     <message>\n-        <location line=\"+77\"/>\n+        <location line=\"+74\"/>\n         <source>Rescanning...</source>\n         <translation>Rescanning...</translation>\n     </message>\n     <message>\n-        <location line=\"-64\"/>\n+        <location line=\"-63\"/>\n         <source>Done loading</source>\n         <translation>Done loading</translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+13\"/>\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>"
      },
      {
        "sha": "17ce494f9173be02fa7b171bc5eeb9015cb87d77",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 46,
        "deletions": 2,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"eo\" version=\"2.1\">\n+<TS language=\"eo\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Dekstre-klaku por redakti adreson a\u016d etikedon</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Krei novan adreson</translation>\n@@ -89,7 +93,11 @@\n         <source>Exporting Failed</source>\n         <translation>ekspotado malsukcesinta</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Okazis eraron dum konservo de adreslisto al %1. Bonvolu provi denove.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -326,6 +334,10 @@\n         <source>&amp;Receive</source>\n         <translation>&amp;Ricevi</translation>\n     </message>\n+    <message>\n+        <source>Show information about Bitcoin Core</source>\n+        <translation>Vidigi informon pri Bitmona Kerno</translation>\n+    </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;Montri / Kas\u0302i</translation>\n@@ -476,6 +488,10 @@\n         <source>Fee:</source>\n         <translation>Krompago:</translation>\n     </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>Polvo:</translation>\n+    </message>\n     <message>\n         <source>After Fee:</source>\n         <translation>Post krompago:</translation>\n@@ -500,6 +516,14 @@\n         <source>Amount</source>\n         <translation>Sumo</translation>\n     </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>Ricevita kun etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>Ricevita kun adreso</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Dato</translation>\n@@ -560,6 +584,10 @@\n         <source>Copy priority</source>\n         <translation>Kopii prioritaton</translation>\n     </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Kopii polvon</translation>\n+    </message>\n     <message>\n         <source>Copy change</source>\n         <translation>Kopii restmonon</translation>\n@@ -834,6 +862,10 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Reto</translation>\n     </message>\n+    <message>\n+        <source>Expert</source>\n+        <translation>Fakulo</translation>\n+    </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n         <translation>Au\u0306tomate malfermi la kursilan pordon por Bitmono. Tio funkcias nur se via kursilo havas la UPnP-funkcion, kaj se tiu c\u0302i estas s\u0302altita.</translation>\n@@ -1088,6 +1120,10 @@\n         <source>Current number of blocks</source>\n         <translation>Aktuala nombro de blokoj</translation>\n     </message>\n+    <message>\n+        <source>Bytes Sent</source>\n+        <translation>Bajtoj Senditaj:</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Horo de la lasta bloko</translation>\n@@ -1352,6 +1388,10 @@\n         <source>Clear all fields of the form.</source>\n         <translation>Malplenigi \u0109iujn kampojn de la formularo.</translation>\n     </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>Polvo:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>&amp;Forigi C\u0302ion</translation>\n@@ -1436,6 +1476,10 @@\n         <source>(no label)</source>\n         <translation>(neniu etikedo)</translation>\n     </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Kopii polvon</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\u0108u vi certas, ke vi volas sendi?</translation>"
      },
      {
        "sha": "de55496c09cb2cce08cf6f7cc82f233e5043c0a7",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 147,
        "deletions": 59,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,9 +1,9 @@\n-<TS language=\"es\" version=\"2.1\">\n+<TS language=\"es\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Haz-clic para editar la direcci\u00f3n o etiqueta</translation>\n+        <translation>Haz clic derecho para editar la direcci\u00f3n o etiqueta</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -47,11 +47,11 @@\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>Elije la direcci\u00f3n para enviar monedas a</translation>\n+        <translation>Elija la direcci\u00f3n para enviar monedas a</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation>Elije la direcci\u00f3n para recibir monedas con</translation>\n+        <translation>Elija la direcci\u00f3n para recibir monedas con</translation>\n     </message>\n     <message>\n         <source>C&amp;hoose</source>\n@@ -75,7 +75,7 @@\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n-        <translation>Copiar &amp;etiqueta</translation>\n+        <translation>Copiar &amp;Etiqueta</translation>\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n@@ -394,6 +394,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Acerca de Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Modificar las opciones de configuraci\u00f3n de Bitcoin</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Mostrar la lista de direcciones de env\u00edo y etiquetas</translation>\n@@ -422,6 +426,10 @@\n         <source>No block source available...</source>\n         <translation>Ninguna fuente de bloques disponible ...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>%n bloque procesado del historial de transacciones.</numerusform><numerusform>%n bloques procesados del historial de transacciones.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n hora</numerusform><numerusform>%n horas</numerusform></translation>\n@@ -478,6 +486,18 @@\n         <source>Date: %1\n </source>\n         <translation>Fecha: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Amount: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Tipo: %1\n </translation>\n     </message>\n     <message>\n@@ -698,6 +718,10 @@\n         <source>This label turns red if the priority is smaller than \"medium\".</source>\n         <translation>Esta etiqueta se mostrar\u00e1 en rojo si la prioridad es menor a \"media\"</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Esta etiqueta se vuelve roja si el cambio es menor que %1</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Puede variar en +/- %1 satoshi(s) por entrada.</translation>\n@@ -948,6 +972,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Direcci\u00f3n IP del proxy (p. ej. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimizar en lugar de salir de la aplicaci\u00f3n cuando la ventana est\u00e1 cerrada. Cuando se activa esta opci\u00f3n, la aplicaci\u00f3n s\u00f3lo se cerrar\u00e1 despu\u00e9s de seleccionar Salir en el men\u00fa.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>El idioma de la interfaz de usuario puede establecerse aqu\u00ed. Este ajuste se aplicar\u00e1 cuando se reinicie Bitcoin.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>Identificadores URL de terceros (por ejemplo, un explorador de bloques) que aparecen en la pesta\u00f1a de transacciones como elementos del men\u00fa contextual. El %s en la URL es reemplazado por el valor hash de la transacci\u00f3n. Se pueden separar URL m\u00faltiples por una barra vertical |.</translation>\n@@ -1092,6 +1124,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Se necesita reiniciar el cliente para activar los cambios.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>El cliente se cerrar\u00e1. \u00bfDesea continuar?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Este cambio exige el reinicio del cliente.</translation>\n@@ -1402,6 +1438,10 @@\n         <source>Current number of blocks</source>\n         <translation>N\u00famero actual de bloques</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Abre el archivo de registro de depuraci\u00f3n de Bitcoin desde el directorio de datos actual. Esto puede tardar unos segundos para ficheros de registro de gran tama\u00f1o.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Recibido</translation>\n@@ -1470,6 +1510,10 @@\n         <source>Ping Time</source>\n         <translation>Ping</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Desplazamiento de tiempo</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Hora del \u00faltimo bloque</translation>\n@@ -1962,10 +2006,22 @@\n         <source>Payment request expired.</source>\n         <translation>Solicitud de pago caducada.</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Estimado para empezar la confirmaci\u00f3n dentro de %n bloque.</numerusform><numerusform>Estimado para empezar la confirmaci\u00f3n dentro de %n bloques.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Paga s\u00f3lo la cuota m\u00ednima de %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>La direcci\u00f3n del destinatario no es v\u00e1lida. Por favor, compru\u00e9bela de nuevo.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Se ha encontrado una direcci\u00f3n duplicada. Solo se puede enviar a cada direcci\u00f3n una vez por operaci\u00f3n de env\u00edo.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Alerta: Direcci\u00f3n de Bitcoin inv\u00e1lida</translation>\n@@ -2037,6 +2093,10 @@\n         <source>Remove this entry</source>\n         <translation>Eliminar esta transacci\u00f3n</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>La cuota ser\u00e1 deducida de la cantidad que sea mandada. El destinatario recibir\u00e1 menos bitcoins de los que entres en el  </translation>\n+    </message>\n     <message>\n         <source>S&amp;ubtract fee from amount</source>\n         <translation>Restar comisiones a la cantidad</translation>\n@@ -2091,6 +2151,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Firmar mensaje</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Puede firmar los mensajes con sus direcciones para demostrar que las posee. Tenga cuidado de no firmar cualquier cosa de manera vaga o aleatoria, pues los ataques de phishing pueden tratar de enga\u00f1arle firmando su identidad a trav\u00e9s de ellos. S\u00f3lo firme declaraciones totalmente detalladas con las que usted est\u00e9 de acuerdo.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>Direcci\u00f3n Bitcoin con la que firmar el mensaje</translation>\n@@ -2143,6 +2207,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Verificar mensaje</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Introduzca la direcci\u00f3n para la firma, el mensaje (asegur\u00e1ndose de copiar tal cual los saltos de l\u00ednea, espacios, tabulaciones, etc.) y la firma a continuaci\u00f3n para verificar el mensaje. Tenga cuidado de no asumir m\u00e1s informaci\u00f3n de lo que dice el propio mensaje firmado para evitar fraudes basados en ataques de tipo man-in-the-middle. </translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>La direcci\u00f3n Bitcoin con la que se firm\u00f3 el mensaje</translation>\n@@ -2494,6 +2562,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>Sea o no una direcci\u00f3n s\u00f3lo est\u00e1 involucrada en esta transacci\u00f3n.</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>intento/prop\u00f3sito de la transacci\u00f3n definido por el usuario.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Cantidad retirada o a\u00f1adida al saldo.</translation>\n@@ -2748,17 +2820,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuido bajo la licencia de software MIT, vea la copia del archivo adjunto o &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Ingresar en el modo de prueba de regresi\u00f3n, que utiliza una cadena especial en la que los bloques se pueden resolver instant\u00e1neamente.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ejecutar comando cuando una transacci\u00f3n del monedero cambia (%s en cmd se remplazar\u00e1 por TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>En este modo -genproclimit controla cu\u00e1ntos bloques se generan de inmediato.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Maximo Comisi\u00f3n totales para usar en una sola transacci\u00f3n billetera; establecer esta demasiado bajo puede abortar transacciones grandes (por defecto: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Reducir los requerimientos de almacenamiento mediante la poda (borrado) bloquea viejos. Este modo desactiva el apoyo cartera y es incompatible con -txindex. Advertencia: Revertir esta configuraci\u00f3n requiere volver a descargar toda la blockchain. (por defecto: 0 = desactivar bloques de poda, &gt;%u = tama\u00f1o de destino en MiB de usar para los archivos de bloques)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2772,6 +2844,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>No se ha podido acceder a %s en esta m\u00e1quina. Probablemente ya se est\u00e1 ejecutando Bitcoin Core.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ADVERTENCIA: anormalmente alto n\u00famero de bloques generado, %d bloques recibidos en las \u00faltimas horas %d (%d espera)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ADVERTENCIA: comprueba tu conexi\u00f3n de red, %d bloques recibidos en las \u00faltimas %d horas (%d esperados)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Aviso: \u00a1-paytxfee tiene un valor muy alto! Esta es la comisi\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n@@ -2888,6 +2968,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>S\u00f3lo conectar a nodos en redes &lt;net&gt; (ipv4, ipv6 o onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>Pode no se puede configurar con un valor negativo.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>El modo recorte es incompatible con -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Asignar tama\u00f1o de cache en megabytes (entre %d y %d; predeterminado: %d)</translation>\n@@ -2900,10 +2988,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Especificar archivo de monedero (dentro del directorio de datos)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Esto afecta a las herramientas de prueba de regresi\u00f3n y al desarrollo inform\u00e1tico de la aplicaci\u00f3n.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Usar UPnP para asignar el puerto de escucha (predeterminado:: %u)</translation>\n@@ -2960,6 +3044,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>Crear nuevos archivos con permisos por defecto del sistema, en lugar de umask 077 (s\u00f3lo efectivo con la funcionalidad de monedero desactivada)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Descubra direcciones IP propias (por defecto: 1 cuando se escucha y nadie -externalip o -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: la escucha para conexiones entrantes fall\u00f3 (la escucha regres\u00f3 el error %s)</translation>\n@@ -2976,10 +3064,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Tarifas (en BTC/Kb) m\u00e1s peque\u00f1os que esto se consideran cero cuota de reinstalaci\u00f3n (por defecto: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Tarifas (en BTC/Kb) m\u00e1s peque\u00f1os que esto se consideran cero cuota para la creaci\u00f3n de la transacci\u00f3n (por defecto: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si el pago de comisi\u00f3n no est\u00e1 establecido, incluir la cuota suficiente para que las transacciones comiencen la confirmaci\u00f3n en una media de n bloques ( por defecto :%u)</translation>\n@@ -2988,10 +3072,18 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>El tama\u00f1o m\u00e1ximo de los datos en las operaciones de transporte de datos que transmitimos y el mio (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>Pode configurado por debajo del m\u00ednimo de %d MB. Por favor, use un n\u00famero m\u00e1s alto.</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta de direcciones pares mediante b\u00fasqueda de DNS, si bajo en direcciones (por defecto: 1 a menos que - conectar)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>Aleatorizar las credenciales para cada conexi\u00f3n proxy. Esto habilita la Tor stream isolation (por defecto: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Establecer tama\u00f1o m\u00e1ximo de las transacciones de alta prioridad/baja comisi\u00f3n en bytes (predeterminado: %d)</translation>\n@@ -3000,6 +3092,10 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Ajuste el n\u00famero de hilos para la generaci\u00f3n de moneda si est\u00e1 habilitado  (-1 = all cores, default: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>Monto de transacci\u00f3n muy peque\u00f1a luego de la deducci\u00f3n por comisi\u00f3n</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Este producto incluye software desarrollado por el OpenSSL Project para su uso en OpenSSL Toolkit &lt;https://www.openssl.org/&gt;, software de cifrado escrito por Eric Young y software UPnP escrito por Thomas Bernard.</translation>\n@@ -3040,10 +3136,26 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>A los equipos en lista blanca no se les pueden prohibir los ataques DoS y sus transacciones siempre son retransmitidas, incluso si ya est\u00e1n en el mempool, es \u00fatil por ejemplo para un gateway.</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>Necesitas reconstruir la base de datos utilizando -reindex para volver al modo sin recorte. Esto volver\u00e1 a descargar toda la cadena de bloques</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(por defecto: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>Aceptar solicitudes p\u00fablicas en FERIADOS (por defecto: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>Activando la mejor cadena...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>No se puede ejecutar con un monedero en modo recorte.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No se puede resolver -whitebind address: '%s'</translation>\n@@ -3133,12 +3245,12 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <translation>Soporte RPC para conexiones HTTP persistentes (por defecto: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Ignorar 1 de cada &lt;n&gt; mensajes de red al azar</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>Reconstruir el \u00edndice de la cadena de bloques en el arranque desde los actuales ficheros blk000??.dat</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Introducir datos fuzz en 1 de cada &lt;n&gt; mensajes de red al azar</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Recibir y mostrar alertas de red P2P (default: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3176,6 +3288,10 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Start minimized</source>\n         <translation>Arrancar minimizado</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>Cantidad de la transacci\u00f3n demasiado peque\u00f1a para pagar la comisi\u00f3n</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Este software es experimental.</translation>\n@@ -3196,6 +3312,10 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Transaction too large</source>\n         <translation>Transacci\u00f3n demasiado grande</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opciones de interfaz de usuario</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No es posible conectar con %s en este sistema (bind ha dado el error %s)</translation>\n@@ -3280,18 +3400,10 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Volcar la actividad de la base de datos de memoria al registro en disco cada &lt;n&gt; megabytes (predeterminado: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Nivel de rigor en la verificaci\u00f3n de bloques de -checkblocks (0-4; predeterminado: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Registrar prioridad de las transacciones y cuota por kB cuando se minen bloques (por defecto: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Mantener el \u00edndice completo de transacciones, usado por la llamada rpc de getrawtransaction  (por defecto: %u)</translation>\n@@ -3320,18 +3432,10 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Siempre consultar direcciones de otros equipos por medio de DNS lookup (por defecto: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Inhabilitar el modo seguro, no considerar un suceso real de modo seguro (predeterminado: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Error al cargar wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Forzar modo seguro (por defecto: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Generar monedas (por defecto: %u)</translation>\n@@ -3348,10 +3452,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Direcci\u00f3n -proxy inv\u00e1lida: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Limitar tama\u00f1o de la cache de firmas a &lt;n&gt; entradas (predeterminado: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Escuchar conexiones JSON-RPC en &lt;puerto&gt; (predeterminado: %u o testnet: %u)</translation>\n@@ -3364,6 +3464,10 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Mantener como m\u00e1ximo &lt;n&gt; conexiones a pares (predeterminado: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Realiza las operaciones de difusi\u00f3n del monedero</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>B\u00fafer de recepci\u00f3n m\u00e1ximo por conexi\u00f3n, &lt;n&gt;*1000 bytes (por defecto: %u)</translation>\n@@ -3372,10 +3476,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>B\u00fafer de recepci\u00f3n m\u00e1ximo por conexi\u00f3n, , &lt;n&gt;*1000 bytes (por defecto: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Aceptar solamente cadena de bloques que concuerde con los puntos de control internos (predeterminado: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Anteponer marca temporal a la informaci\u00f3n de depuraci\u00f3n (por defecto: %u)</translation>\n@@ -3388,10 +3488,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Ejecutar un hilo para limpiar de la memoria el monedero peri\u00f3dicamente (predeterminado:  %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Archivo de certificado del servidor (por defecto: %s)</translation>\n@@ -3412,10 +3508,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Establecer el n\u00famero de procesos para llamadas del servicio RPC (por defecto: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Establece la opci\u00f3n DB_PRIVATE en el entorno de base de datos del monedero (predeterminado: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Especificar archivo de configuraci\u00f3n (por defecto: %s)</translation>\n@@ -3432,10 +3524,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Gastar cambio no confirmado al enviar transacciones (predeterminado: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Detener despu\u00e9s de importar los bloques del disco (por defecto: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Umbral para la desconexi\u00f3n de pares con mal comportamiento (predeterminado: %u)</translation>"
      },
      {
        "sha": "c35acf2c67b4a084167e6711417e8266d67f92f9",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_CL\" version=\"2.1\">\n+<TS language=\"es_CL\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -204,7 +204,7 @@\n     </message>\n     <message>\n         <source>Show information about Qt</source>\n-        <translation>Mostrar Informaci\u00f3n sobre QT</translation>\n+        <translation>Mostrar Informaci\u00f3n sobre Qt</translation>\n     </message>\n     <message>\n         <source>&amp;Options...</source>"
      },
      {
        "sha": "6071702989f742bab318ac7e1efa59da4381921e",
        "filename": "src/qt/locale/bitcoin_es_DO.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_DO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_DO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_DO.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_DO\" version=\"2.1\">\n+<TS language=\"es_DO\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2270,10 +2270,6 @@\n         <source>RPC server options:</source>\n         <translation>Opciones del sservidor RPC:</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Descartar aleatoriamente 1 de cada &lt;n&gt; mensajes de red</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Enviar informaci\u00f3n de trazas/depuraci\u00f3n a la consola en lugar de al archivo debug.log</translation>"
      },
      {
        "sha": "258308598eb15484c811da53e415ef0241a8a377",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_MX\" version=\"2.1\">\n+<TS language=\"es_MX\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "bb994666190d1f250f8727410db3aeb8872a52a6",
        "filename": "src/qt/locale/bitcoin_es_UY.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_UY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_es_UY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_UY.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_UY\" version=\"2.1\">\n+<TS language=\"es_UY\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "c746107bc7757954f633795198d839a146adbcb3",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"et\" version=\"2.1\">\n+<TS language=\"et\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "3de9ad5a2f6a7407e2d95b7e5bb88a78e6f94f0e",
        "filename": "src/qt/locale/bitcoin_eu_ES.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_eu_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_eu_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu_ES.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"eu_ES\" version=\"2.1\">\n+<TS language=\"eu_ES\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "5eeea04684b295ee6cfaa0e053515395fcc63637",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 268,
        "deletions": 4,
        "changes": 272,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fa\" version=\"2.1\">\n+<TS language=\"fa\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -65,6 +65,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u0627\u06cc\u0646\u200c\u0647\u0627 \u0646\u0634\u0627\u0646\u06cc\u200c\u0647\u0627\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0648\u062c\u0648\u062f \u0647\u0633\u062a\u0646\u062f. \u0647\u0645\u06cc\u0634\u0647 \u0642\u0628\u0644 \u0627\u0632 \u0627\u0631\u0633\u0627\u0644 \u0633\u06a9\u0647\u200c\u0647\u0627\u060c \u0646\u0634\u0627\u0646\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a\u200c\u06a9\u0646\u0646\u062f\u0647 \u0648 \u0645\u0642\u062f\u0627\u0631 \u0627\u0631\u0633\u0627\u0644\u06cc \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0627\u06cc\u0646\u200c\u0647\u0627 \u0646\u0634\u0627\u0646\u06cc\u200c\u0647\u0627\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0648\u062c\u0648\u0647 \u0647\u0633\u062a\u0646\u062f. \u062a\u0648\u0635\u06cc\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f \u06cc\u06a9 \u0646\u0634\u0627\u0646\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u062c\u062f\u06cc\u062f \u0628\u0631\u0627\u06cc \u0647\u0631 \u062a\u0628\u0627\u062f\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Copy &amp;Label</source>\n         <translation>\u06a9\u067e\u06cc \u0648 \u0628\u0631\u0686\u0633\u0628\u200c&amp;\u06af\u0630\u0627\u0631\u06cc</translation>\n@@ -85,7 +89,11 @@\n         <source>Exporting Failed</source>\n         <translation>\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0646\u062c\u0627\u0645 \u0646\u0634\u062f</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u062e\u0637\u0627\u06cc\u06cc \u0647\u0646\u06af\u0627\u0645 \u062a\u0644\u0627\u0634 \u0628\u0631\u0627\u06cc \u0630\u062e\u06cc\u0631\u0647\u0654 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u0647\u0627 \u062f\u0631 %1 \u0631\u062e \u062f\u0627\u062f.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -155,6 +163,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>\u0622\u06cc\u0627 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f \u06a9\u0647 \u0645\u06cc\u200c\u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0648\u062f \u0631\u0627 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u0646\u06cc\u062f\u061f</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u0647\u0633\u062a\u0647 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0647\u0645 \u0627\u06a9\u0646\u0648\u0646 \u0628\u0633\u062a\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f \u062a\u0627 \u0641\u0631\u0627\u06cc\u0646\u062f \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0631\u0627 \u062a\u0645\u0627\u0645 \u06a9\u0646\u062f. \u0628\u0647 \u062e\u0627\u0637\u0631 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f \u06a9\u0647 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u0631\u062f\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u200c\u062a\u0627\u0646 \u0646\u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0628\u0647 \u0637\u0648\u0631 \u06a9\u0627\u0645\u0644 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646\u200c\u0647\u0627\u06cc \u0634\u0645\u0627 \u0631\u0627 \u062f\u0631 \u0628\u0631\u0627\u0628\u0631 \u062f\u0632\u062f\u06cc\u062f\u0647 \u0634\u062f\u0646 \u062a\u0648\u0633\u0637 \u0628\u062f\u0627\u0641\u0632\u0627\u0631\u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0631\u0627\u06cc\u0627\u0646\u0647\u200c\u06cc \u0634\u0645\u0627 \u0631\u0627 \u0622\u0644\u0648\u062f\u0647 \u0645\u06cc\u200c\u06a9\u0646\u0646\u062f\u060c \u0645\u062d\u0627\u0641\u0638\u062a \u0646\u0645\u0627\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\u0645\u0647\u0645: \u0647\u0631 \u0646\u0633\u062e\u0647\u0654 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0647 \u062a\u0627 \u06a9\u0646\u0648\u0646 \u0627\u0632 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0648\u062f \u062a\u0647\u06cc\u0647 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f\u060c \u0628\u0627\u06cc\u062f \u0628\u0627 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u0634\u062f\u0647\u0654 \u062c\u062f\u06cc\u062f \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u0634\u0648\u062f. \u0628\u0647 \u062f\u0644\u0627\u06cc\u0644 \u0627\u0645\u0646\u06cc\u062a\u06cc\u060c \u067e\u0631\u0648\u0646\u062f\u0647\u0654 \u0642\u062f\u06cc\u0645\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u062f\u0648\u0646 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc\u060c \u062a\u0627 \u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u0627\u0632 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc\u200c\u0634\u062f\u0647\u0654 \u062c\u062f\u06cc\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u06a9\u0646\u06cc\u062f\u060c \u063a\u06cc\u0631\u0642\u0627\u0628\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f.</translation>\n@@ -167,6 +179,14 @@\n         <source>Wallet encrypted</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u0631\u0645\u0632 \u062c\u062f\u06cc\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f.&lt;br/&gt;\u0627\u0632 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u06a9\u0647&lt;b&gt; \u062d\u062f\u0627\u0642\u0644 10  \u06a9\u0627\u0631\u0627\u06a9\u062a\u0631 \u062a\u0635\u0627\u062f\u0641\u06cc &lt;/b&gt; \u0648 \u06cc\u0627 &lt;b&gt; \u062d\u062f\u0627\u0642\u0644 8 \u062d\u0631\u0641 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f.&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0642\u062f\u06cc\u0645\u06cc \u0648 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062c\u062f\u06cc\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06af\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u0627 \u0634\u06a9\u0633\u062a \u0645\u0648\u0627\u062c\u0647 \u0634\u062f</translation>\n@@ -210,6 +230,10 @@\n         <source>&amp;Overview</source>\n         <translation>&amp;\u0628\u0631\u0631\u0633\u06cc \u0627\u062c\u0645\u0627\u0644\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Node</source>\n+        <translation>\u06af\u0631\u0647</translation>\n+    </message>\n     <message>\n         <source>Show general overview of wallet</source>\n         <translation>\u0646\u0645\u0627\u06cc\u0634 \u0628\u0631\u0631\u0633\u06cc \u0627\u062c\u0645\u0627\u0644\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -254,6 +278,18 @@\n         <source>&amp;Change Passphrase...</source>\n         <translation>&amp;\u062a\u063a\u06cc\u06cc\u0631 \u06af\u0630\u0631\u0648\u0627\u0698\u0647...</translation>\n     </message>\n+    <message>\n+        <source>&amp;Sending addresses...</source>\n+        <translation>&amp;\u062f\u0631 \u062d\u0627\u0644 \u0627\u0631\u0633\u0627\u0644 \u0622\u062f\u0631\u0633 \u0647\u0627...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses...</source>\n+        <translation>&amp;\u062f\u0631 \u062d\u0627\u0644 \u062f\u0631\u06cc\u0627\u0641\u062a \u0622\u062f\u0631\u0633 \u0647\u0627...</translation>\n+    </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 &amp;\u0622\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Importing blocks from disk...</source>\n         <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0628\u0644\u0648\u06a9\u200c\u0647\u0627 \u0627\u0632 \u062f\u06cc\u0633\u06a9...</translation>\n@@ -302,6 +338,10 @@\n         <source>&amp;Receive</source>\n         <translation>&amp;\u062f\u0631\u06cc\u0627\u0641\u062a</translation>\n     </message>\n+    <message>\n+        <source>Show information about Bitcoin Core</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u0631 \u0645\u0648\u0631\u062f \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646</translation>\n+    </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;\u0646\u0645\u0627\u06cc\u0634/ \u0639\u062f\u0645 \u0646\u0645\u0627\u06cc\u0634</translation>\n@@ -346,6 +386,14 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>\u062f\u0631\u0628\u0627\u0631\u0647 \u0647\u0633\u062a\u0647 \u06cc \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646</translation>\n     </message>\n+    <message>\n+        <source>Show the list of used sending addresses and labels</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0648 \u0644\u06cc\u0628\u0644 \u0647\u0627</translation>\n+    </message>\n+    <message>\n+        <source>Show the list of used receiving addresses and labels</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0648 \u0644\u06cc\u0628\u0644 \u0647\u0627</translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation><numerusform>%n \u0627\u0631\u062a\u0628\u0627\u0637 \u0641\u0639\u0627\u0644 \u0628\u0627 \u0634\u0628\u06a9\u0647\u0654 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646</numerusform></translation>\n@@ -456,18 +504,42 @@\n         <source>Change:</source>\n         <translation>\u067e\u0648\u0644 \u062e\u0648\u0631\u062f:</translation>\n     </message>\n+    <message>\n+        <source>Tree mode</source>\n+        <translation>\u0645\u062f\u0644 \u062f\u0631\u062e\u062a\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>List mode</source>\n+        <translation>\u0645\u062f\u0644 \u0644\u06cc\u0633\u062a</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>\u0645\u0628\u0644\u063a</translation>\n     </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0634\u062f\u0647 \u0628\u0627 \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0634\u062f\u0647 \u0628\u0627 \u0646\u0634\u0627\u0646\u06cc</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>\u062a\u0627\u0631\u06cc\u062e</translation>\n     </message>\n+    <message>\n+        <source>Confirmations</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f\u06cc\u0647 \u0647\u0627</translation>\n+    </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Priority</source>\n+        <translation>\u0627\u0648\u0644\u0648\u06cc\u062a</translation>\n+    </message>\n     <message>\n         <source>Copy address</source>\n         <translation>\u06a9\u067e\u06cc \u0646\u0634\u0627\u0646\u06cc</translation>\n@@ -484,6 +556,46 @@\n         <source>Copy transaction ID</source>\n         <translation>\u06a9\u067e\u06cc \u0634\u0646\u0627\u0633\u0647\u0654 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n     </message>\n+    <message>\n+        <source>highest</source>\n+        <translation>\u0628\u06cc\u0634\u062a\u0631\u06cc\u0646</translation>\n+    </message>\n+    <message>\n+        <source>higher</source>\n+        <translation>\u0628\u06cc\u0634\u062a\u0631</translation>\n+    </message>\n+    <message>\n+        <source>high</source>\n+        <translation>\u0632\u06cc\u0627\u062f</translation>\n+    </message>\n+    <message>\n+        <source>medium-high</source>\n+        <translation>\u0645\u062a\u0648\u0633\u0637 \u0645\u062a\u0645\u0627\u06cc\u0644 \u0628\u0647 \u0632\u06cc\u0627\u062f</translation>\n+    </message>\n+    <message>\n+        <source>medium</source>\n+        <translation>\u0645\u062a\u0648\u0633\u0637</translation>\n+    </message>\n+    <message>\n+        <source>low-medium</source>\n+        <translation>\u0645\u062a\u0648\u0633\u0637 \u0645\u062a\u0645\u0627\u06cc\u0644 \u0628\u0647 \u06a9\u0645</translation>\n+    </message>\n+    <message>\n+        <source>low</source>\n+        <translation>\u06a9\u0645</translation>\n+    </message>\n+    <message>\n+        <source>lower</source>\n+        <translation>\u06a9\u0645\u062a\u0631</translation>\n+    </message>\n+    <message>\n+        <source>lowest</source>\n+        <translation>\u06a9\u0645\u062a\u0631\u06cc\u0646</translation>\n+    </message>\n+    <message>\n+        <source>none</source>\n+        <translation>\u0647\u06cc\u0686\u06a9\u062f\u0627\u0645</translation>\n+    </message>\n     <message>\n         <source>yes</source>\n         <translation>\u0628\u0644\u0647</translation>\n@@ -496,7 +608,11 @@\n         <source>(no label)</source>\n         <translation>(\u0628\u062f\u0648\u0646 \u0628\u0631\u0686\u0633\u0628)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(\u062a\u063a\u06cc\u06cc\u0631)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -577,6 +693,10 @@\n         <source>version</source>\n         <translation>\u0646\u0633\u062e\u0647</translation>\n     </message>\n+    <message>\n+        <source>About Bitcoin Core</source>\n+        <translation>\u062f\u0631\u0628\u0627\u0631\u0647 \u0647\u0633\u062a\u0647 \u06cc \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646</translation>\n+    </message>\n     <message>\n         <source>Command-line options</source>\n         <translation>\u06af\u0632\u06cc\u0646\u0647\u200c\u0647\u0627\u06cc \u062e\u0637\u200c\u0641\u0631\u0645\u0627\u0646</translation>\n@@ -596,6 +716,14 @@\n         <source>Welcome</source>\n         <translation>\u062e\u0648\u0634\u200c\u0622\u0645\u062f\u06cc\u062f</translation>\n     </message>\n+    <message>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation>\u0628\u0647 \u0647\u0633\u062a\u0647 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646 \u062e\u0648\u0634 \u0622\u0645\u062f\u06cc\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation>\u0627\u0632 \u0622\u0646\u062c\u0627\u06cc\u06cc \u06a9\u0647 \u0627\u06cc\u0646 \u0627\u0648\u0644\u06cc\u0646 \u0627\u062c\u0631\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647 \u0627\u0633\u062a\u060c \u0634\u0645\u0627 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0645\u0633\u06cc\u0631 \u0630\u062e\u06cc\u0631\u0647\u0654 \u062f\u0627\u062f\u0647\u200c\u0647\u0627 \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Use the default data directory</source>\n         <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0645\u0633\u06cc\u0631 \u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n@@ -706,6 +834,10 @@\n         <source>default</source>\n         <translation>\u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n     </message>\n+    <message>\n+        <source>none</source>\n+        <translation>\u0647\u06cc\u0686\u06a9\u062f\u0627\u0645</translation>\n+    </message>\n     <message>\n         <source>Confirm options reset</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f\u0650 \u0628\u0627\u0632\u0646\u0634\u0627\u0646\u06cc \u06af\u0632\u06cc\u0646\u0647\u200c\u0647\u0627</translation>\n@@ -749,6 +881,10 @@\n         <source>Mined balance that has not yet matured</source>\n         <translation>\u062a\u0631\u0627\u0632 \u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0634\u062f\u0647 \u0627\u0632 \u0645\u0639\u062f\u0646 \u06a9\u0647 \u0647\u0646\u0648\u0632 \u0628\u0627\u0644\u063a \u0646\u0634\u062f\u0647 \u0627\u0633\u062a</translation>\n     </message>\n+    <message>\n+        <source>Balances</source>\n+        <translation>\u062a\u0631\u0627\u0632 \u0647\u0627</translation>\n+    </message>\n     <message>\n         <source>Total:</source>\n         <translation>\u062c\u0645\u0639 \u06a9\u0644:</translation>\n@@ -757,17 +893,41 @@\n         <source>Your current total balance</source>\n         <translation>\u062a\u0631\u0627\u0632 \u06a9\u0644 \u0641\u0639\u0644\u06cc \u0634\u0645\u0627</translation>\n     </message>\n+    <message>\n+        <source>Spendable:</source>\n+        <translation>:\u0642\u0627\u0628\u0644 \u062e\u0631\u062c \u06a9\u0631\u062f\u0646</translation>\n+    </message>\n+    <message>\n+        <source>Recent transactions</source>\n+        <translation>\u062a\u0631\u0627\u06a9\u0646\u0634 \u0647\u0627\u06cc \u0627\u062e\u06cc\u0631</translation>\n+    </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n         <source>URI handling</source>\n         <translation>\u0645\u062f\u06cc\u0631\u06cc\u062a URI</translation>\n     </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a \u0631\u062f \u0634\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request error</source>\n+        <translation>\u062e\u0637\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a</translation>\n+    </message>\n     <message>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation>\u0646\u0645\u06cc\u200c\u062a\u0648\u0627\u0646 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0631\u062f: \u06a9\u0646\u062a\u0631\u0644\u200c\u06a9\u0646\u0646\u062f\u0647\u0654 \u06a9\u0644\u06cc\u06a9-\u0648-\u067e\u0631\u062f\u0627\u062e\u062a</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u0646\u0642\u0636\u06cc \u0634\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a \u0646\u0627\u0645\u0639\u062a\u0628\u0631</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -778,6 +938,10 @@\n         <source>Amount</source>\n         <translation>\u0645\u0628\u0644\u063a</translation>\n     </message>\n+    <message>\n+        <source>None</source>\n+        <translation>\u0647\u06cc\u0686\u06a9\u062f\u0627\u0645</translation>\n+    </message>\n     <message>\n         <source>N/A</source>\n         <translation>\u0646\u0627\u0645\u0648\u062c\u0648\u062f</translation>\n@@ -836,6 +1000,22 @@\n         <source>Current number of blocks</source>\n         <translation>\u062a\u0639\u062f\u0627\u062f \u0641\u0639\u0644\u06cc \u0628\u0644\u0648\u06a9\u200c\u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>Sent</source>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Version</source>\n+        <translation>\u0646\u0633\u062e\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>\u0633\u0631\u0648\u06cc\u0633 \u0647\u0627</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u062e\u0631\u06cc\u0646 \u0628\u0644\u0648\u06a9</translation>\n@@ -864,6 +1044,10 @@\n         <source>Clear console</source>\n         <translation>\u067e\u0627\u06a9\u0633\u0627\u0632\u06cc \u06a9\u0646\u0633\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>\u0628\u0647 \u06a9\u0646\u0633\u0648\u0644 RPC \u0647\u0633\u062a\u0647 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646 \u062e\u0648\u0634 \u0622\u0645\u062f\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>\u062f\u06a9\u0645\u0647\u200c\u0647\u0627\u06cc \u0628\u0627\u0644\u0627 \u0648 \u067e\u0627\u06cc\u06cc\u0646 \u0628\u0631\u0627\u06cc \u067e\u06cc\u0645\u0627\u06cc\u0634 \u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u0648 &lt;b&gt;Ctrl-L&lt;/b&gt; \u0628\u0631\u0627\u06cc \u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u0635\u0641\u062d\u0647.</translation>\n@@ -883,6 +1067,14 @@\n         <source>&amp;Label:</source>\n         <translation>&amp;\u0628\u0631\u0686\u0633\u0628:</translation>\n     </message>\n+    <message>\n+        <source>Show</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634</translation>\n+    </message>\n+    <message>\n+        <source>Remove</source>\n+        <translation>\u062d\u0630\u0641 \u06a9\u0631\u062f\u0646</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n@@ -980,6 +1172,10 @@\n         <source>Change:</source>\n         <translation>\u067e\u0648\u0644 \u062e\u0648\u0631\u062f:</translation>\n     </message>\n+    <message>\n+        <source>fast</source>\n+        <translation>\u0633\u0631\u06cc\u0639</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u0628\u0647 \u0686\u0646\u062f \u062f\u0631\u06cc\u0627\u0641\u062a\u200c\u06a9\u0646\u0646\u062f\u0647\u0654 \u0628\u0647\u200c\u0637\u0648\u0631 \u0647\u0645\u0632\u0645\u0627\u0646</translation>\n@@ -1028,10 +1224,18 @@\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>\u0628\u0627 \u0627\u062d\u062a\u0633\u0627\u0628 \u0647\u0632\u06cc\u0646\u0647\u0654 %1 \u0628\u0631\u0627\u06cc \u0647\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634\u060c \u0645\u062c\u0645\u0648\u0639 \u0645\u06cc\u0632\u0627\u0646 \u067e\u0631\u062f\u0627\u062e\u062a\u06cc \u0627\u0632 \u0645\u0628\u0644\u063a \u062a\u0631\u0627\u0632 \u0634\u0645\u0627 \u0628\u06cc\u0634\u062a\u0631 \u0645\u06cc\u200c\u0634\u0648\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u0646\u0642\u0636\u06cc \u0634\u062f.</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0628\u062f\u0648\u0646 \u0628\u0631\u0686\u0633\u0628)</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you want to send?</source>\n+        <translation>\u0622\u06cc\u0627 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f \u06a9\u0647 \u0645\u06cc \u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u06cc\u062f\u061f</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsEntry</name>\n@@ -1051,6 +1255,18 @@\n         <source>&amp;Label:</source>\n         <translation>&amp;\u0628\u0631\u0686\u0633\u0628:</translation>\n     </message>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0646\u0634\u0627\u0646\u06cc \u067e\u06cc\u0634\u200c\u062a\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>This is a normal payment.</source>\n+        <translation>\u0627\u06cc\u0646 \u06cc\u06a9 \u067e\u0631\u062f\u0627\u062e\u062a \u0639\u0627\u062f\u06cc \u0627\u0633\u062a</translation>\n+    </message>\n+    <message>\n+        <source>The Bitcoin address to send the payment to</source>\n+        <translation>\u0646\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u067e\u0631\u062f\u0627\u062e\u062a \u0628\u0647 \u0622\u0646</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1063,6 +1279,10 @@\n         <source>Alt+P</source>\n         <translation>Alt+P</translation>\n     </message>\n+    <message>\n+        <source>Remove this entry</source>\n+        <translation>\u062d\u0630\u0641 \u0627\u06cc\u0646 \u0645\u062f\u062e\u0644</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>\u067e\u06cc\u0627\u0645:</translation>\n@@ -1081,6 +1301,14 @@\n         <source>&amp;Sign Message</source>\n         <translation>\u0627&amp;\u0645\u0636\u0627\u06cc \u067e\u06cc\u0627\u0645</translation>\n     </message>\n+    <message>\n+        <source>The Bitcoin address to sign the message with</source>\n+        <translation>\u0646\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0628\u0631\u0627\u06cc \u0627\u0645\u0636\u0627\u0621 \u067e\u06cc\u063a\u0627\u0645 \u0628\u0627 \u0622\u0646</translation>\n+    </message>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0646\u0634\u0627\u0646\u06cc \u067e\u06cc\u0634\u062a\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1125,6 +1353,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;\u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u067e\u06cc\u0627\u0645</translation>\n     </message>\n+    <message>\n+        <source>The Bitcoin address the message was signed with</source>\n+        <translation>\u0646\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u06a9\u0647 \u067e\u06cc\u063a\u0627\u0645 \u0628\u0627 \u0622\u0646 \u0627\u0645\u0636\u0627\u0621 \u0634\u062f\u0647</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>\u0628\u0631\u0627\u06cc \u062d\u0635\u0648\u0644 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u0627\u0632 \u0627\u06cc\u0646\u06a9\u0647 \u067e\u06cc\u0627\u0645 \u0628\u0627 \u0646\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0627\u0645\u0636\u0627 \u0627\u0633\u062a \u06cc\u0627 \u062e\u06cc\u0631\u060c \u067e\u06cc\u0627\u0645 \u0631\u0627 \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u06a9\u0646\u06cc\u062f</translation>\n@@ -1196,14 +1428,22 @@\n         <source>Bitcoin Core</source>\n         <translation> \u0647\u0633\u062a\u0647 Bitcoin </translation>\n     </message>\n+    <message>\n+        <source>The Bitcoin Core developers</source>\n+        <translation>\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u06af\u0627\u0646 \u0647\u0633\u062a\u0647 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646</translation>\n+    </message>\n     <message>\n         <source>[testnet]</source>\n         <translation>\u0622\u0632\u0645\u0627\u06cc\u0634 \u0634\u0628\u06a9\u0647</translation>\n     </message>\n </context>\n <context>\n     <name>TrafficGraphWidget</name>\n-    </context>\n+    <message>\n+        <source>KB/s</source>\n+        <translation>\u06a9\u06cc\u0644\u0648\u0628\u0627\u06cc\u062a</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n@@ -1503,6 +1743,10 @@\n         <source>Exporting Failed</source>\n         <translation>\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0646\u062c\u0627\u0645 \u0646\u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0645\u0648\u0641\u0642</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u067e\u0631\u0648\u0646\u062f\u0647\u0654 \u0646\u0648\u0639 CSV \u062c\u062f\u0627\u0634\u0648\u0646\u062f\u0647 \u0628\u0627 \u06a9\u0627\u0645\u0627 (*.csv)</translation>\n@@ -1658,10 +1902,22 @@\n         <source>Error opening block database</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0628\u0627\u0632\u06af\u0634\u0627\u06cc\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u06cc \u0628\u0644\u0648\u06a9</translation>\n     </message>\n+    <message>\n+        <source>Error: A fatal internal error occured, see debug.log for details</source>\n+        <translation>\u062e\u0637\u0627: \u06cc\u06a9 \u062e\u0637\u0627\u06cc \u062f\u0627\u062e\u0644\u06cc \u0645\u0647\u0644\u06a9 \u0631\u0648\u06cc \u062f\u0627\u062f\u060c debug.log \u0631\u0627 \u0628\u0631\u0627\u06cc \u062c\u0632\u0626\u06cc\u0627\u062a \u0628\u0628\u06cc\u0646\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Error: Disk space is low!</source>\n+        <translation>\u062e\u0637\u0627: \u0641\u0636\u0627\u06cc \u062f\u06cc\u0633\u06a9 \u06a9\u0645 \u0627\u0633\u062a!</translation>\n+    </message>\n     <message>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u0634\u0646\u06cc\u062f\u0646 \u0647\u0631 \u06af\u0648\u0646\u0647 \u062f\u0631\u06af\u0627\u0647 \u0627\u0646\u062c\u0627\u0645 \u067e\u0630\u06cc\u0631 \u0646\u06cc\u0633\u062a. \u0627\u0632listen=0  \u0628\u0631\u0627\u06cc \u0627\u06cc\u0646\u06a9\u0627\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u06cc\u0646\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Importing...</source>\n+        <translation>\u062f\u0631 \u062d\u0627\u0644 \u067e\u06cc\u0627\u062f\u0647\u200c\u0633\u0627\u0632\u06cc...</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u0628\u0644\u0648\u06a9 \u0647\u0627...</translation>\n@@ -1670,6 +1926,10 @@\n         <source>Verifying wallet...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644...</translation>\n     </message>\n+    <message>\n+        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>\u0647\u0634\u062f\u0627\u0631: \u062a\u0627\u0631\u06cc\u062e \u0648 \u0633\u0627\u0639\u062a \u06a9\u0627\u0645\u067e\u06cc\u0648\u062a\u0631 \u062e\u0648\u062f \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f. \u0627\u06af\u0631 \u0633\u0627\u0639\u062a \u062f\u0631\u0633\u062a \u0646\u0628\u0627\u0634\u062f \u0647\u0633\u062a\u0647 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0628\u0647 \u062f\u0631\u0633\u062a\u06cc \u06a9\u0627\u0631 \u0646\u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f.</translation>\n+    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0645\u0633\u06cc\u0631 \u062f\u0627\u062f\u0647\u200c\u0647\u0627 \u062f\u0631 \u0627\u0628\u062a\u062f\u0627\u06cc \u0627\u062c\u0631\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647 (\u067e\u06cc\u0634\u200c\u0641\u0631\u0636: 0)</translation>\n@@ -1698,6 +1958,10 @@\n         <source>Start minimized</source>\n         <translation>\u0627\u062c\u0631\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647 \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u0648\u0686\u06a9\u200c\u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>\u06af\u0632\u06cc\u0646\u0647\u200c\u0647\u0627\u06cc \u0631\u0627\u0628\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc:</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>\u0627\u0632 UPnP  \u0628\u0631\u0627\u06cc \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u062f\u0631\u06af\u0627\u0647 \u0634\u0646\u06cc\u062f\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636:1 \u062f\u0631 \u0632\u0645\u0627\u0646 \u0634\u0646\u06cc\u062f\u0646)</translation>"
      },
      {
        "sha": "1174e24b46937ab3a537fef3a37986ac2989f876",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 132,
        "deletions": 12,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fa_IR\" version=\"2.1\">\n+<TS language=\"fa_IR\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -13,31 +13,79 @@\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u062d\u0633\u0627\u0628 \u0627\u0646\u062a\u062e\u0627\u0628 \u0634\u062f\u0647 \u0628\u0647 \u062d\u0627\u0641\u0638\u0647 \u0633\u06cc\u0633\u062a\u0645 - \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f</translation>\n     </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>\u06a9\u067e\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>\u0628\u0633\u062a\u0646</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n-        <translation>\u0648 \u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n+        <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>\u062d\u0630\u0641 \u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u0634\u062f\u0647 \u0627\u0632 \u0644\u06cc\u0633\u062a</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation>\u0635\u062f\u0648\u0631 \u062f\u0627\u062f\u0647 \u0646\u0648\u0627\u0631 \u062c\u0627\u0631\u06cc \u0628\u0647 \u06cc\u06a9 \u0641\u0627\u06cc\u0644</translation>\n     </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>\u0635\u062f\u0648\u0631</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n-        <translation>\u0648 \u062d\u0630\u0641</translation>\n+        <translation>\u062d\u0630\u0641</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0622\u062f\u0631\u0633 \u062c\u0647\u062a \u0627\u0631\u0633\u0627\u0644 \u06a9\u0648\u06cc\u0646 \u0647\u0627 \u0628\u0647 \u0622\u0646 \u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0622\u062f\u0631\u0633 \u062c\u0647\u062a \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0648\u06cc\u0646 \u0647\u0627 \u0627\u0632 \u0622\u0646 \u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u0622\u062f\u0631\u0633 \u0647\u0627</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0622\u062f\u0631\u0633 \u0647\u0627</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n-        <translation>\u06a9\u067e\u06cc \u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n+        <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n-        <translation>\u0648 \u0648\u06cc\u0631\u0627\u06cc\u0634</translation>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633</translation>\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n-        <translation>Comma separated file (*.csv) \u0641\u0627\u06cc\u0644 \u062c\u062f\u0627\u06af\u0627\u0646\u0647 \u062f\u0633\u062a\u0648\u0631\u06cc</translation>\n+        <translation>\u0641\u0627\u06cc\u0644 \u0633\u06cc \u0627\u0633 \u0648\u06cc (*.csv)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0628\u0627 \u0634\u06a9\u0633\u062a \u0645\u0648\u0627\u062c\u0647 \u0634\u062f</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u062e\u0637\u0627\u06cc\u06cc \u0628\u0647 \u0647\u0646\u06af\u0627\u0645 \u0630\u062e\u06cc\u0631\u0647 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u062f\u0631 %1 \u0631\u062e \u062f\u0627\u062f\u0647 \u0627\u0633\u062a. \u0644\u0637\u0641\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -55,6 +103,10 @@\n </context>\n <context>\n     <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>\u062f\u06cc\u0627\u0644\u0648\u06af \u0631\u0645\u0632\u0639\u0628\u0648\u0631</translation>\n+    </message>\n     <message>\n         <source>Enter passphrase</source>\n         <translation>\u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632 \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f</translation>\n@@ -95,10 +147,18 @@\n         <source>Confirm wallet encryption</source>\n         <translation>\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc wallet \u0631\u0627 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u0627\u062e\u0637\u0627\u0631: \u06a9\u0644\u06cc\u062f Caps Lock \u0641\u0639\u0627\u0644 \u0627\u0633\u062a!</translation>\n+    </message>\n     <message>\n         <source>Wallet encrypted</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u0631\u0645\u0632 \u0642\u062f\u06cc\u0645\u06cc \u0648 \u062c\u062f\u06cc\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u062a\u0627\u06cc\u06cc\u062f \u0646\u0634\u062f</translation>\n@@ -123,7 +183,11 @@\n         <source>Wallet decryption failed</source>\n         <translation>\u06a9\u0634\u0641 \u0631\u0645\u0632 wallet \u0627\u0646\u062c\u0627\u0645 \u0646\u0634\u062f</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u0631\u062f.</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -160,11 +224,11 @@\n     </message>\n     <message>\n         <source>About &amp;Qt</source>\n-        <translation>\u062f\u0631\u0628\u0627\u0631\u0647 \u0648 QT</translation>\n+        <translation>\u062f\u0631\u0628\u0627\u0631\u0647 \u0648 Qt</translation>\n     </message>\n     <message>\n         <source>Show information about Qt</source>\n-        <translation>\u0646\u0645\u0627\u06cc\u0634 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u0631\u0628\u0627\u0631\u0647 QT</translation>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u0631\u0628\u0627\u0631\u0647 Qt</translation>\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n@@ -580,10 +644,26 @@\n         <source>Message:</source>\n         <translation>\u067e\u06cc\u0627\u0645:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Pay To:</source>\n+        <translation>\u067e\u0631\u062f\u0627\u062e\u062a \u0628\u0647:</translation>\n+    </message>\n+    <message>\n+        <source>Memo:</source>\n+        <translation>\u06cc\u0627\u062f\u062f\u0627\u0634\u062a:</translation>\n+    </message>\n+</context>\n <context>\n     <name>ShutdownWindow</name>\n-    </context>\n+    <message>\n+        <source>Bitcoin Core is shutting down...</source>\n+        <translation>\u0647\u0633\u062a\u0647 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646 \u062f\u0631 \u062d\u0627\u0644 \u062e\u0627\u0645\u0648\u0634 \u0634\u062f\u0646 \u0627\u0633\u062a...</translation>\n+    </message>\n+    <message>\n+        <source>Do not shut down the computer until this window disappears.</source>\n+        <translation>\u062a\u0627 \u067e\u06cc\u0634 \u0627\u0632 \u0628\u0633\u062a\u0647 \u0634\u062f\u0646 \u0627\u06cc\u0646 \u067e\u0646\u062c\u0631\u0647 \u06a9\u0627\u0645\u067e\u06cc\u0648\u062a\u0631 \u062e\u0648\u062f \u0631\u0627 \u062e\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SignVerifyMessageDialog</name>\n     <message>\n@@ -812,6 +892,14 @@\n         <source>Edit label</source>\n         <translation>\u0628\u0631\u0686\u0633\u0628 \u0631\u0627 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0628\u0627 \u0634\u06a9\u0633\u062a \u0645\u0648\u0627\u062c\u0647 \u0634\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u0627\u0646\u062c\u0627\u0645 \u0634\u062f</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Comma separated file (*.csv) \u0641\u0627\u06cc\u0644 \u062c\u062f\u0627\u06af\u0627\u0646\u0647 \u062f\u0633\u062a\u0648\u0631\u06cc</translation>\n@@ -864,6 +952,10 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>\u0635\u062f\u0648\u0631</translation>\n+    </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation>\u0635\u062f\u0648\u0631 \u062f\u0627\u062f\u0647 \u0646\u0648\u0627\u0631 \u062c\u0627\u0631\u06cc \u0628\u0647 \u06cc\u06a9 \u0641\u0627\u06cc\u0644</translation>\n@@ -904,10 +996,22 @@\n         <source>Use the test network</source>\n         <translation>\u0627\u0632 \u062a\u0633\u062a\u0650 \u0634\u0628\u06a9\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0627\u06cc\u06cc\u062f</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>\u0645\u0628\u0644\u063a \u062a\u0631\u0627\u06a9\u0646\u0634 \u06a9\u0645\u062a\u0631 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u067e\u0633 \u0627\u0632 \u06a9\u0633\u0631 \u0647\u0632\u06cc\u0646\u0647  \u062a\u0631\u0627\u06a9\u0646\u0634 \u0642\u0627\u0628\u0644 \u0627\u0631\u0633\u0627\u0644 \u0628\u0627\u0634\u062f</translation>\n+    </message>\n+    <message>\n+        <source>RPC server options:</source>\n+        <translation>\u06af\u0632\u06cc\u0646\u0647 \u0647\u0627\u06cc \u0633\u0631\u0648\u06cc\u0633 \u062f\u0647\u0646\u062f\u0647 RPC:</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u067e\u06cc\u06af\u06cc\u0631\u06cc/\u062e\u0637\u0627\u06cc\u0627\u0628\u06cc \u0628\u0647 \u06a9\u0646\u0633\u0648\u0644 \u0628\u0647 \u062c\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0628\u0647 \u0641\u0627\u06cc\u0644 debug.log</translation>\n     </message>\n+    <message>\n+        <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u062a\u0631\u0627\u06a9\u0646\u0634 \u0647\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u0628\u062f\u0648\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f \u062f\u0631 \u0635\u0648\u0631\u062a \u0627\u0645\u06a9\u0627\u0646 (\u067e\u06cc\u0634 \u0641\u0631\u0636: %u)</translation>\n+    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u0634\u0646\u0627\u0633\u0647 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0631\u0627\u06cc \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a\u0650 JSON-RPC</translation>\n@@ -948,6 +1052,22 @@\n         <source>Error loading wallet.dat</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0644\u0648\u062f \u0634\u062f\u0646 wallet.dat</translation>\n     </message>\n+    <message>\n+        <source>Set minimum block size in bytes (default: %u)</source>\n+        <translation>\u062a\u0646\u0638\u06cc\u0645 \u06a9\u0645\u06cc\u0646\u0647 \u0627\u0646\u062f\u0627\u0632\u0647 \u0628\u0644\u0627\u06a9 \u0628\u0631 \u062d\u0633\u0628 \u0628\u0627\u06cc\u062a (\u067e\u06cc\u0634 \u0641\u0631\u0636: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set the number of threads to service RPC calls (default: %d)</source>\n+        <translation>\u062a\u0646\u0638\u06cc\u0645 \u062a\u0639\u062f\u0627\u062f \u0631\u06cc\u0633\u0645\u0627\u0646 \u0647\u0627 \u0628\u0631\u0627\u06cc \u0633\u0631\u0648\u06cc\u0633 \u062f\u0647\u06cc \u0641\u0631\u0627\u062e\u0648\u0627\u0646\u06cc \u0647\u0627\u06cc RPC (\u067e\u06cc\u0634 \u0641\u0631\u0636: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Specify configuration file (default: %s)</source>\n+        <translation>\u0641\u0627\u06cc\u0644 \u062a\u0646\u0638\u06cc\u0645\u0627\u062a \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Specify pid file (default: %s)</source>\n+        <translation>\u0641\u0627\u06cc\u0644 pid \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636: %s)</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: '%s'</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0627\u0634\u062a\u0628\u0627\u0647 \u0627\u0633\u062a for -paytxfee=&lt;amount&gt;: '%s'</translation>"
      },
      {
        "sha": "eb90aa4281ec5152d4849e3ee265b79fec85943c",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 202,
        "deletions": 24,
        "changes": 226,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,9 +1,9 @@\n-<TS language=\"fi\" version=\"2.1\">\n+<TS language=\"fi\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Klikkaa hiiren oikealla painikkeella muokataksesi osoitetta tai nimikett\u00e4</translation>\n+        <translation>Valitse hiiren oikealla painikkeella muokataksesi osoitetta tai nimikett\u00e4</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -27,7 +27,7 @@\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n-        <translation>&amp;Kopioi Osoite</translation>\n+        <translation>&amp;Kopioi osoite</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Haluatko varmasti salata lompakkosi?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Bitcoin Core sammuu nyt viimeistell\u00e4kseen kryptaamisen. Muista ett\u00e4 lompakon kryptaaminen ei voi t\u00e4ysin suojata bitcoinejasi varkaudelta malwaren saastuttamalla tietokoneella.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>T\u00c4RKE\u00c4\u00c4: Kaikki vanhat lompakon varmuuskopiot pit\u00e4isi korvata uusilla suojatuilla varmuuskopioilla. Turvallisuussyist\u00e4 edelliset varmuuskopiot muuttuvat turhiksi, kun aloitat suojatun lompakon k\u00e4yt\u00f6n.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Anna salauslause lompakkoon. &lt;br/&gt;Ole hyv\u00e4 ja k\u00e4yt\u00e4 lausetta jossa on &lt;b&gt;kymmenen tai enemm\u00e4n satunnaista merkki\u00e4&lt;/b&gt; tai &lt;b&gt;kahdeksan tai useampi sanaa&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Sy\u00f6t\u00e4 vanha ja uusi salasana lompakolle.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>Lompakon salaus ep\u00e4onnistui</translation>\n@@ -256,7 +264,7 @@\n     </message>\n     <message>\n         <source>Show information about Qt</source>\n-        <translation>N\u00e4yt\u00e4 tietoja QT:ta</translation>\n+        <translation>N\u00e4yt\u00e4 tietoja Qt:ta</translation>\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Tietoja Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Muokkaa kokoonpanoasetuksia Bitcoin Corelle</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>N\u00e4yt\u00e4 l\u00e4hett\u00e4miseen k\u00e4ytettyjen osoitteiden ja nimien lista</translation>\n@@ -418,6 +430,10 @@\n         <source>No block source available...</source>\n         <translation>Lohkojen l\u00e4hdett\u00e4 ei saatavilla...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Prosessoitu %n lohko rahansiirtohistoriasta.</numerusform><numerusform>Prosessoitu %n lohkoa rahansiirtohistoriasta.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n tunti</numerusform><numerusform>%n tuntia</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>Saavutetaan verkkoa...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>P\u00e4iv\u00e4m\u00e4\u00e4r\u00e4: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>M\u00e4\u00e4r\u00e4: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Tyyppi: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Nimike: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Osoite: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>L\u00e4hetetyt rahansiirrot</translation>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>ei mit\u00e4\u00e4n</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>T\u00e4m\u00e4 nimi muuttuu punaiseksi mik\u00e4li rahansiirron koko on suurempi kuin 1000 tavua.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>T\u00e4m\u00e4 nimi muuttuu punaiseksi mik\u00e4li prioriteetti on pienempi kuin \"medium\".</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>T\u00e4m\u00e4 nimike muuttuu punaiseksi mik\u00e4li mik\u00e4 tahansa saaja vastaanottaa pienemm\u00e4n m\u00e4\u00e4r\u00e4n kuin %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Saattaa vaihdella +/- %1 satoshia per sy\u00f6te.</translation>\n@@ -942,6 +1000,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Verkko</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>K\u00e4ynnist\u00e4 Bitcoin Core automaattisesti j\u00e4rjestelm\u00e4\u00e4n kirjautumisen j\u00e4lkeen.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;K\u00e4ynnist\u00e4 Bitcoin Core j\u00e4rjestelm\u00e4\u00e4n kirjautuessa</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = auto, &lt;0 = j\u00e4t\u00e4 n\u00e4in monta ydint\u00e4 vapaaksi)</translation>\n@@ -1054,6 +1120,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Ohjelman uudelleenk\u00e4ynnistys aktivoi muutokset.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>Asiakasohjelma sammutetaan. Haluatko jatkaa?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>T\u00e4m\u00e4 muutos vaatii ohjelman uudelleenk\u00e4ynnistyksen.</translation>\n@@ -1184,14 +1254,30 @@\n         <source>Payment request file handling</source>\n         <translation>Maksupyynn\u00f6n tiedoston k\u00e4sittely</translation>\n     </message>\n+    <message>\n+        <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n+        <translation>Maksupyynn\u00f6n tiedostoa ei voida lukea! T\u00e4m\u00e4 voi aiheutua sopimattomasta maksupyynt\u00f6tiedostosta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Maksupyynt\u00f6 on vanhentunut.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>Varmistamattomia maksupyynt\u00f6j\u00e4 kustomoituun maksupalveluun ei tueta.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Ep\u00e4kelpo maksupyynt\u00f6.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Maksupalautus %1:sta</translation>\n     </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>Maksupyynt\u00f6 %1 on liian suuri (%2 tavua, sallittu %3 tavua).</translation>\n+    </message>\n     <message>\n         <source>Payment request DoS protection</source>\n         <translation>Maksupyynn\u00f6n DoS-suojaus</translation>\n@@ -1200,6 +1286,10 @@\n         <source>Error communicating with %1: %2</source>\n         <translation>Virhe kommunikoidessa %1n kanssa: %2</translation>\n     </message>\n+    <message>\n+        <source>Payment request cannot be parsed!</source>\n+        <translation>Maksupyynt\u00f6\u00e4 ei voida j\u00e4sent\u00e4\u00e4!</translation>\n+    </message>\n     <message>\n         <source>Bad response from server %1</source>\n         <translation>Huono vastaus palvelimelta %1</translation>\n@@ -1219,6 +1309,10 @@\n         <source>User Agent</source>\n         <translation>K\u00e4ytt\u00f6liittym\u00e4</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>Noodi/Palvelu</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Vasteaika</translation>\n@@ -1408,6 +1502,10 @@\n         <source>Ping Time</source>\n         <translation>Vasteaika</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Ajan poikkeama</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Viimeisimm\u00e4n lohkon aika</translation>\n@@ -1452,6 +1550,10 @@\n         <source>Clear console</source>\n         <translation>Tyhjenn\u00e4 konsoli</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Tervetuloa Bitcoin Coren RPC-konsoliin.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Yl\u00f6s- ja alas-nuolet selaavat historiaa ja &lt;b&gt;Ctrl-L&lt;/b&gt; tyhjent\u00e4\u00e4 ruudun.</translation>\n@@ -1744,6 +1846,10 @@\n         <source>per kilobyte</source>\n         <translation>per kilotavu</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Piilota</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>yhteens\u00e4 ainakin</translation>\n@@ -1876,10 +1982,22 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Rahansiirto hyl\u00e4ttiin! T\u00e4m\u00e4 saattaa tapahtua jos lompakossa olevat kolikot on jo kulutettu, kuten jos k\u00e4yt\u00e4t kopioita wallet.dat tiedostosta ja kolikot oli jos k\u00e4ytetty mutta ei merkattu t\u00e4\u00e4ll\u00e4.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Rahansiirtokulua %1 ja sit\u00e4 suurempia m\u00e4\u00e4ri\u00e4 pidet\u00e4\u00e4n j\u00e4rjenvastaisen korkeana kuluna.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Maksupyynt\u00f6 on vanhentunut.</translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Maksa vain v\u00e4himm\u00e4iskulu %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Vastaanottajan osoite ei ole kelvollinen. Tarkistathan uudelleen.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Varoitus: Virheellinen Bitcoin osoite</translation>\n@@ -1951,10 +2069,22 @@\n         <source>Remove this entry</source>\n         <translation>Poista t\u00e4m\u00e4 alkio</translation>\n     </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>V&amp;\u00e4henn\u00e4 maksukulu m\u00e4\u00e4r\u00e4st\u00e4</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Viesti:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>T\u00e4m\u00e4 on todentamaton maksupyynt\u00f6.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>T\u00e4m\u00e4 on todennettu maksupyynt\u00f6.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Aseta nimi t\u00e4lle osoitteelle lis\u00e4t\u00e4ksesi sen k\u00e4ytettyjen osoitteiden listalle.</translation>\n@@ -2392,6 +2522,10 @@\n         <source>Type of transaction.</source>\n         <translation>Rahansiirron laatu.</translation>\n     </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Onko rahansiirrossa mukana ainoastaan katseltava osoite vai ei.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Saldoon lis\u00e4tty tai siit\u00e4 v\u00e4hennetty m\u00e4\u00e4r\u00e4.</translation>\n@@ -2634,18 +2768,10 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Kytkeydy annettuun osoitteeseen ja pid\u00e4 linja aina auki. K\u00e4yt\u00e4 [host]:portin merkint\u00e4tapaa IPv6:lle.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Aloita regression testimoodi joka k\u00e4ytt\u00e4\u00e4 erikoisketjua jossa lohkoja voidaan ratkaista v\u00e4litt\u00f6m\u00e4sti.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Suorita k\u00e4sky kun lompakossa rahansiirto muuttuu (%s cmd on vaihdettu TxID kanssa)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>T\u00e4ss\u00e4 moodissa -genproclimit ohjaa kuinka monta lohkoa luodaan v\u00e4litt\u00f6m\u00e4sti.</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Aseta script varmistuksen threadien lukum\u00e4\u00e4r\u00e4 (%u - %d, 0= auto, &lt;0 = j\u00e4t\u00e4 n\u00e4in monta ydint\u00e4 vapaaksi, oletus: %d)</translation>\n@@ -2734,6 +2860,10 @@\n         <source>Error opening block database</source>\n         <translation>Virhe avattaessa lohkoindeksi\u00e4</translation>\n     </message>\n+    <message>\n+        <source>Error: A fatal internal error occured, see debug.log for details</source>\n+        <translation>Virhe: Sis\u00e4inen kriittinen virhe kohdattiin, katso debug.log:sta lis\u00e4tietoja</translation>\n+    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Varoitus: Levytila on v\u00e4hiss\u00e4!</translation>\n@@ -2762,6 +2892,14 @@\n         <source>Not enough file descriptors available.</source>\n         <translation>Ei tarpeeksi tiedostomerkint\u00f6j\u00e4 vapaana.</translation>\n     </message>\n+    <message>\n+        <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n+        <translation>Yhdist\u00e4 vain solmukohtiin &lt;net&gt;-verkossa (ipv4, ipv6 tai onion)</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>Karsittu tila ei ole yhteensopiva -txindex:n kanssa.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Aseta tietokannan v\u00e4limuistin koko megatavuissa (%d - %d, oletus: %d</translation>\n@@ -2774,10 +2912,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Aseta lompakkotiedosto (data-hakemiston sis\u00e4ll\u00e4)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>T\u00e4m\u00e4 on tarkoitettu regression testity\u00f6kaluille ja ohjelman kehitt\u00e4miseen.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>K\u00e4yt\u00e4 UPnP:ta kuuntelevan portin kartoittamiseen (oletus: %u)</translation>\n@@ -2798,6 +2932,10 @@\n         <source>Wallet options:</source>\n         <translation>Lompakon valinnat:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Varoitus: T\u00e4m\u00e4 versio on vanhentunut; p\u00e4ivitt\u00e4mist\u00e4 vaaditaan!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Sinun tulee uudelleenrakentaa tietokanta k\u00e4ytt\u00e4en -reindex vaihtaen -txindex</translation>\n@@ -2822,6 +2960,26 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Aseta kolikoiden luomiseen tarkoitettujen s\u00e4ikeiden lukum\u00e4\u00e4r\u00e4 (-1 = kaikki ytimet, oletus: %d)</translation>\n     </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(oletus: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Accept public REST requests (default: %u)</source>\n+        <translation>Hyv\u00e4ksy julkisia REST-pyynt\u00f6j\u00e4 (oletus: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>Aktivoidaan parhainta ketjua...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>Lompakkoa ei voida ajaa karsitussa tilassa.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot resolve -whitebind address: '%s'</source>\n+        <translation>-whitebind -osoitetta '%s' ei voida j\u00e4sent\u00e4\u00e4</translation>\n+    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>Valitse data-hakemisto k\u00e4ynnistyksess\u00e4 (oletus: 0)</translation>\n@@ -2838,6 +2996,10 @@\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Virhe ladattaessa wallet.dat-tiedostoa: Tarvitset uudemman version Bitcoinista</translation>\n     </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>Virheit\u00e4 tietokantaa luettaessa, ohjelma pys\u00e4ytet\u00e4\u00e4n.</translation>\n+    </message>\n     <message>\n         <source>Information</source>\n         <translation>Tietoa</translation>\n@@ -2863,12 +3025,12 @@\n         <translation>RPC-palvelimen valinnat:</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Satunnaisesti pudota 1 joka &lt;n&gt; verkkoviestist\u00e4</translation>\n+        <source>RPC support for HTTP persistent connections (default: %d)</source>\n+        <translation>RPC-tuki pysyville HTTP-yhteyksille (oletus: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Satunnaisesti sekoita 1 joka &lt;n&gt; verkkoviestist\u00e4</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Vastaanota ja n\u00e4yt\u00e4 P2P-verkon h\u00e4lytyksi\u00e4 (oletus: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -2918,6 +3080,10 @@\n         <source>Transaction too large</source>\n         <translation>Siirtosumma liian iso</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Ulkoasun asetukset:</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>K\u00e4yt\u00e4 UPnP:t\u00e4 kuunneltavan portin avaamiseen (vakioasetus: 1 kun kuuntelemassa)</translation>\n@@ -2982,6 +3148,10 @@\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Virhe ladattaessa wallet.dat-tiedostoa: Lompakko vioittunut</translation>\n     </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n+        <translation>K\u00e4yt\u00e4 erillist\u00e4 SOCKS5-proxy\u00e4 tavoittaaksesi vertaisia Tor-piilopalveluiden kautta (oletus: %s)</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(oletus: %s)</translation>\n@@ -2994,10 +3164,6 @@\n         <source>Error loading wallet.dat</source>\n         <translation>Virhe ladattaessa wallet.dat-tiedostoa</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Pakota yhteensopivuustila (oletus: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Luo kolikoita (oletus: %u)</translation>\n@@ -3014,6 +3180,14 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Virheellinen proxy-osoite '%s'</translation>\n     </message>\n+    <message>\n+        <source>Listen for connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Kuuntele yhteyksi\u00e4 portissa &lt;port&gt; (oletus: %u tai testnet: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Aseta lompakko kuuluttamaan rahansiirtoja</translation>\n+    </message>\n     <message>\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>V\u00e4lit\u00e4 ei-P2SH-multisig (oletus: %u)</translation>\n@@ -3046,6 +3220,10 @@\n         <source>Specify pid file (default: %s)</source>\n         <translation>M\u00e4\u00e4rit\u00e4 pid-tiedosto (oletus: %s)</translation>\n     </message>\n+    <message>\n+        <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n+        <translation>K\u00e4yt\u00e4 vahvistamattomia vaihtorahoja l\u00e4hetett\u00e4ess\u00e4 rahansiirtoja (oletus: %u)</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Tuntematon verkko -onlynet parametrina: '%s'</translation>"
      },
      {
        "sha": "fe140634e65607f23031b7003a1274050c87fd4d",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 69,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fr\" version=\"2.1\">\n+<TS language=\"fr\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2808,10 +2808,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Se lier \u00e0 l'adresse donn\u00e9e et toujours l'\u00e9couter. Utilisez la notation [host]:port pour l'IPv6</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Limiter continuellement les transactions gratuites \u00e0 &lt;n&gt;*1000 octets par minute (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Supprimer toutes les transactions du portefeuille et ne r\u00e9cup\u00e9rer que ces parties de la cha\u00eene de bloc avec -rescan au d\u00e9marrage</translation>\n@@ -2820,18 +2816,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribu\u00e9 sous la licence MIT d'utilisation d'un logiciel. Consultez le fichier joint COPYING ou &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Passer en mode de test de r\u00e9gression qui utilise une cha\u00eene sp\u00e9ciale dans laquelle les blocs sont r\u00e9solus instantan\u00e9ment.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ex\u00e9cuter la commande lorsqu'une transaction de portefeuille change (%s dans la commande est remplac\u00e9e par TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>Dans ce mode -genproclimit contr\u00f4le combien de blocs sont g\u00e9n\u00e9r\u00e9s imm\u00e9diatement.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Total maximal des frais \u00e0 utiliser en une seule transaction de portefeuille. Le d\u00e9finir trop bas pourrait interrompre les grosses transactions (par d\u00e9faut : %s)</translation>\n@@ -2852,6 +2840,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Impossible de se lier \u00e0 %s sur cet ordinateur. Bitcoin Core fonctionne probablement d\u00e9j\u00e0.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AVERTISSEMENT : un nombre anormalement \u00e9lev\u00e9 de blocs a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9, %d blocs re\u00e7us durant les %d derni\u00e8res heures (%d attendus)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>AVERTISSEMENT : v\u00e9rifiez votre connexion r\u00e9seau, %d blocs re\u00e7us durant les %d derni\u00e8res heures (%d attendus)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Avertissement : -paytxfee est r\u00e9gl\u00e9 sur un montant tr\u00e8s \u00e9lev\u00e9 ! Il s'agit des frais de transaction que vous payerez si vous envoyez une transaction.</translation>\n@@ -2988,10 +2984,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Sp\u00e9cifiez le fichier de portefeuille (dans le r\u00e9pertoire de donn\u00e9es)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Ceci est \u00e0 l'intention des outils de test de r\u00e9gression et du d\u00e9veloppement applicatif.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Utiliser l'UPnP pour mapper le port d'\u00e9coute (par d\u00e9faut : %u)</translation>\n@@ -3068,10 +3060,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Les frais (en BTC/Ko) inf\u00e9rieurs \u00e0 ce seuil sont consid\u00e9r\u00e9s comme \u00e9tant nuls pour le relayage (par d\u00e9faut : %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Les frais (en BTC/Ko) inf\u00e9rieurs \u00e0 ce seuil sont consid\u00e9r\u00e9s comme \u00e9tant nuls pour la cr\u00e9ation de transactions (par d\u00e9faut : %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si paytxfee n'est pas d\u00e9fini, inclure suffisamment de frais afin que les transactions commencent la confirmation en moyenne avant n blocs (par d\u00e9faut : %u)</translation>\n@@ -3164,10 +3152,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Activation de la meilleure cha\u00eene...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Permettre les certificats racine autosign\u00e9s (par d\u00e9faut : 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>L'ex\u00e9cution est impossible quand le portefeuille est en mode \u00e9lagage.</translation>\n@@ -3260,18 +3244,14 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>Prise en charge de RPC pour les connexions persistantes HTTP (par d\u00e9faut : %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Abandonner al\u00e9atoirement 1 message du r\u00e9seau sur &lt;n&gt;</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Tester al\u00e9atoirement 1 message du r\u00e9seau sur &lt;n&gt;</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Reconstruire au d\u00e9marrage l'index de la cha\u00eene de blocs \u00e0 partir des fichiers blk000??.dat actuels</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Recevoir et afficher les alertes du r\u00e9seau poste \u00e0 poste (%u par d\u00e9faut)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Envoyer les informations de d\u00e9bogage/trace \u00e0 la console au lieu du fichier debug.log</translation>\n@@ -3416,18 +3396,10 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = conserver les m\u00e9tadonn\u00e9es de transmission, par ex. les informations du propri\u00e9taire du compte et de la demande de paiement, 2 = abandonner les m\u00e9tadonn\u00e9es de transmission)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Purger l\u2019activit\u00e9 de la base de donn\u00e9es de la zone de m\u00e9moire vers le journal sur disque tous les &lt;n&gt; m\u00e9gaoctets (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Degr\u00e9 de profondeur de la v\u00e9rification des blocs -checkblocks (0-4, par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Lors du minage, journaliser la priorit\u00e9 des transactions et les frais par ko (par d\u00e9faut : %u) </translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Maintenir un index complet des transactions, utilis\u00e9 par l'appel RPC getrawtransaction (obtenir la transaction brute) (par d\u00e9faut : %u)</translation>\n@@ -3456,18 +3428,10 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Toujours demander les adresses des pairs par recherche DNS (par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>D\u00e9sactiver le mode sans \u00e9chec, passer outre un \u00e9v\u00e9nement sans \u00e9chec r\u00e9el (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Erreur lors du chargement de wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Forcer le mode sans \u00e9chec (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>G\u00e9n\u00e9rer des pi\u00e8ces (d\u00e9faut : %u)</translation>\n@@ -3484,10 +3448,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Adresse -proxy invalide\u00a0: \u00ab\u00a0%s\u00a0\u00bb</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Limiter la taille du cache des signatures \u00e0 &lt;n&gt; entr\u00e9es (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>\u00c9couter les connexions JSON-RPC sur &lt;port&gt; (par d\u00e9faut : %u ou tesnet : %u)</translation>\n@@ -3512,10 +3472,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Tampon maximal d'envoi par connexion \u00bb, &lt;n&gt;*1000 octets (par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>N'accepter qu'une cha\u00eene de blocs correspondant aux points de v\u00e9rification int\u00e9gr\u00e9s (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Ajouter l'horodatage au d\u00e9but de la sortie de d\u00e9bogage (par d\u00e9faut : %u)</translation>\n@@ -3528,10 +3484,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relayer les multisignatures non-P2SH (par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Ex\u00e9cuter une t\u00e2che pour purger le portefeuille p\u00e9riodiquement (par d\u00e9faut : %u) </translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>D\u00e9finir la taille de la r\u00e9serve de clefs \u00e0 &lt;n&gt; (par d\u00e9faut : %u)</translation>\n@@ -3540,10 +3492,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Set minimum block size in bytes (default: %u)</source>\n         <translation>D\u00e9finir la taille de bloc minimale en octets (par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>D\u00e9finit le drapeau DB_PRIVATE dans l'environnement de la BD du portefeuille (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Sp\u00e9cifier le fichier de configuration (par d\u00e9faut : %s)</translation>\n@@ -3560,10 +3508,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>D\u00e9penser la monnaie non confirm\u00e9e lors de l'envoi de transactions (par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Cesser l'ex\u00e9cution apr\u00e8s l'importation des blocs du disque (par d\u00e9faut : %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Seuil de d\u00e9connexion des pairs pr\u00e9sentant un mauvais comportement (par d\u00e9faut : %u)</translation>"
      },
      {
        "sha": "f4fe7d659747fa669ab263859727582da1e5ba93",
        "filename": "src/qt/locale/bitcoin_fr_CA.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fr_CA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_fr_CA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_CA.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fr_CA\" version=\"2.1\">\n+<TS language=\"fr_CA\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "709b17e2f774c8decb6200a3fb6c613c92bef7f0",
        "filename": "src/qt/locale/bitcoin_gl.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_gl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_gl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gl.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"gl\" version=\"2.1\">\n+<TS language=\"gl\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "ef99b0dd39434a9e4e4fd497e9ef8ab2ee585fbc",
        "filename": "src/qt/locale/bitcoin_gu_IN.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_gu_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_gu_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gu_IN.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"gu_IN\" version=\"2.1\">\n+<TS language=\"gu_IN\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     </context>"
      },
      {
        "sha": "9c1863de8a7599906c87396f630dfdba8b92fbf6",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"he\" version=\"2.1\">\n+<TS language=\"he\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2510,10 +2510,6 @@\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>\u05de\u05d7\u05d9\u05e7\u05ea \u05db\u05dc \u05d4\u05e2\u05d1\u05e8\u05d5\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d5\u05dc\u05e9\u05d7\u05d6\u05e8 \u05e8\u05e7 \u05d0\u05ea \u05d4\u05d7\u05dc\u05e7\u05d9\u05dd \u05d4\u05de\u05e1\u05d5\u05d9\u05de\u05d9\u05dd \u05d1\u05e9\u05e8\u05e9\u05e8\u05ea \u05d4\u05de\u05e7\u05d8\u05e2\u05d9\u05dd \u05d1\u05d0\u05de\u05e6\u05e2\u05d5\u05ea \u200e-rescan \u05e2\u05dd \u05d4\u05d4\u05e4\u05e2\u05dc\u05d4</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u05db\u05e0\u05d9\u05e1\u05d4 \u05dc\u05de\u05e6\u05d1 \u05d1\u05d3\u05d9\u05e7\u05ea \u05e0\u05e1\u05d9\u05d2\u05d4, \u05e9\u05de\u05e9\u05ea\u05de\u05e9 \u05d1\u05e9\u05e8\u05e9\u05e8\u05ea \u05de\u05d9\u05d5\u05d7\u05d3\u05ea \u05d1\u05d4 \u05e0\u05d9\u05ea\u05df \u05dc\u05e4\u05ea\u05d5\u05e8 \u05d0\u05ea \u05d4\u05de\u05e7\u05d8\u05e2\u05d9\u05dd \u05d1\u05de\u05d4\u05d9\u05e8\u05d5\u05ea.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u05d1\u05d9\u05e6\u05d5\u05e2 \u05e4\u05e7\u05d5\u05d3\u05d4 \u05db\u05d0\u05e9\u05e8 \u05d4\u05e2\u05d1\u05e8\u05d4 \u05d1\u05d0\u05e8\u05e0\u05e7 \u05de\u05e9\u05ea\u05e0\u05d4 (%s \u05d1\u05becmd \u05d9\u05d5\u05d7\u05dc\u05e3 \u05d1\u05beTxID)</translation>\n@@ -2646,10 +2642,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u05e6\u05d9\u05d5\u05df \u05e7\u05d5\u05d1\u05e5 \u05d0\u05e8\u05e0\u05e7 (\u05d1\u05ea\u05d5\u05da \u05ea\u05d9\u05e7\u05d9\u05d9\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u05ea\u05db\u05d5\u05e0\u05d4 \u05d6\u05d5 \u05de\u05d9\u05d5\u05e2\u05d3\u05ea \u05dc\u05db\u05dc\u05d9 \u05d1\u05d3\u05d9\u05e7\u05d5\u05ea \u05e0\u05e1\u05d9\u05d2\u05d4 \u05d5\u05e4\u05d9\u05ea\u05d5\u05d7 \u05d9\u05d9\u05e9\u05d5\u05de\u05d9\u05dd.</translation>\n-    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u05d4\u05de\u05e7\u05d8\u05e2\u05d9\u05dd \u05de\u05d0\u05d5\u05de\u05ea\u05d9\u05dd\u2026</translation>\n@@ -2678,10 +2670,6 @@\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u05d4\u05e8\u05e5 \u05e4\u05e7\u05d5\u05d3\u05d4 \u05db\u05d0\u05e9\u05e8 \u05d4\u05d4\u05ea\u05e8\u05d0\u05d4 \u05d4\u05e8\u05dc\u05d5\u05d5\u05e0\u05d8\u05d9\u05ea \u05de\u05ea\u05e7\u05d1\u05dc\u05ea \u05d0\u05d5 \u05db\u05e9\u05d0\u05e0\u05d7\u05e0\u05d5 \u05e2\u05d3\u05d9\u05dd \u05dc\u05e4\u05d9\u05e6\u05d5\u05dc \u05d0\u05e8\u05d5\u05da \u05de\u05d0\u05d5\u05d3 (%s \u05d1\u05e9\u05d5\u05e8\u05ea \u05d4\u05e4\u05e7\u05d5\u05d3\u05d4 \u05d9\u05d5\u05d7\u05dc\u05e3 \u05e2\"\u05d9 \u05d4\u05d4\u05d5\u05d3\u05e2\u05d4)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>\u05d4\u05e2\u05de\u05dc\u05d5\u05ea (\u05d1\u05beBTC/\u05e7\u05f4\u05d1) \u05d4\u05e0\u05de\u05d5\u05db\u05d5\u05ea \u05de\u05d4\u05e1\u05db\u05d5\u05dd \u05d4\u05d6\u05d4 \u05e0\u05d7\u05e9\u05d1\u05d5\u05ea \u05dc\u05e2\u05de\u05dc\u05d5\u05ea \u05d0\u05e4\u05e1 \u05dc\u05d9\u05e6\u05d9\u05e8\u05ea \u05d4\u05e2\u05d1\u05e8\u05d4 (\u05d1\u05e8\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: %s)</translation>\n-    </message>\n     <message>\n         <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05e0\u05d0 \u05dc\u05d1\u05d3\u05d5\u05e7 \u05e9\u05d4\u05ea\u05d0\u05e8\u05d9\u05da \u05d5\u05d4\u05e9\u05e2\u05d4 \u05e9\u05dc \u05d4\u05de\u05d7\u05e9\u05d1 \u05e9\u05dc\u05da \u05e0\u05db\u05d5\u05e0\u05d9\u05dd! \u05d0\u05dd \u05d4\u05e9\u05e2\u05d5\u05df \u05e9\u05dc\u05da \u05e9\u05d2\u05d5\u05d9 \u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05dc\u05d0 \u05ea\u05e2\u05d1\u05d5\u05d3 \u05db\u05e8\u05d0\u05d5\u05d9.</translation>\n@@ -2758,10 +2746,6 @@\n         <source>RPC server options:</source>\n         <translation>\u05d4\u05d2\u05d3\u05e8\u05d5\u05ea \u05e9\u05e8\u05ea RPC</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u05dc\u05d4\u05e9\u05de\u05d9\u05d8 \u05d0\u05e7\u05e8\u05d0\u05d9\u05ea \u05d0\u05d7\u05ea \u05de\u05ea\u05d5\u05da \u05db\u05dc &lt;n&gt; \u05d4\u05d5\u05d3\u05e2\u05d5\u05ea \u05e8\u05e9\u05ea</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u05e9\u05dc\u05d7 \u05de\u05d9\u05d3\u05e2 \u05d3\u05d9\u05d1\u05d0\u05d2 \u05d5\u05e2\u05e7\u05d1\u05d4 \u05dc\u05e7\u05d5\u05e0\u05e1\u05d5\u05dc\u05d4 \u05d1\u05de\u05e7\u05d5\u05dd \u05dc\u05e7\u05d5\u05d1\u05e5 debug.log</translation>"
      },
      {
        "sha": "01e074ffc65862828adecbb920ba07024ea63714",
        "filename": "src/qt/locale/bitcoin_hi_IN.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_hi_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_hi_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi_IN.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"hi_IN\" version=\"2.1\">\n+<TS language=\"hi_IN\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "74d380ec2b763aa62db9f83efb41234b8b72ad34",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 498,
        "deletions": 68,
        "changes": 566,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"hr\" version=\"2.1\">\n+<TS language=\"hr\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Desni klik za ure\u0111ivanje adresa i oznaka</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Dodajte novu adresu</translation>\n@@ -23,23 +27,23 @@\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n-        <translation>&amp;Kopirati adresu</translation>\n+        <translation>&amp;Kopiraj adresu</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n         <translation>Brisanje trenutno odabrane adrese s popisa.</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>Izvoz podataka iz trenutnog taba u datoteku</translation>\n+        <translation>Izvoz podataka iz trenutnog lista u datoteku</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n-        <translation>&amp;Izvoz</translation>\n+        <translation>&amp;Izvozi</translation>\n     </message>\n     <message>\n         <source>&amp;Delete</source>\n-        <translation>&amp;Brisanje</translation>\n+        <translation>Iz&amp;bri\u0161i</translation>\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n@@ -63,19 +67,19 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>Ovo su va\u0161e Bitcoin adrese za slanje uplate. Uvijek provjerite iznos i adresu primatelja prije slanja novca.</translation>\n+        <translation>Ovo su va\u0161e Bitcoin adrese za slanje novca. Uvijek provjerite iznos i adresu primatelja prije slanja novca.</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>Ovo su va\u0161e Bitcoin adrese za primanje isplate. Preporu\u010damo da koristite novu primateljsku adresu za svaku transakciju.</translation>\n+        <translation>Ovo su va\u0161e Bitcoin adrese za primanje novca. Preporu\u010damo da koristite novu adresu za primanje za svaku transakciju.</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n-        <translation>Kopirati &amp;oznaku</translation>\n+        <translation>Kopiraj &amp;oznaku</translation>\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n-        <translation>&amp;Izmjeniti</translation>\n+        <translation>&amp;Uredi</translation>\n     </message>\n     <message>\n         <source>Export Address List</source>\n@@ -157,7 +161,7 @@\n     </message>\n     <message>\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n-        <translation>Upozorenje: Ako \u0161ifrirate va\u0161 nov\u010danik i izgubite lozinku, &lt;b&gt;IZGUBIT \u0106ETE SVE SVOJE BITCOINSE!&lt;/b&gt;</translation>\n+        <translation>Upozorenje: Ako \u0161ifrirate va\u0161 nov\u010danik i izgubite lozinku, &lt;b&gt;IZGUBIT \u0106ETE SVE SVOJE BITCOINE!&lt;/b&gt;</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n@@ -179,6 +183,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Unesite novu lozinku za nov\u010danik. &lt;br/&gt;Molimo Vas da koristite zaporku od &lt;b&gt;deset ili vi\u0161e slu\u010dajnih znakova&lt;/b&gt;, ili &lt;b&gt;osam ili vi\u0161e rije\u010di.&lt;/b&gt;</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Unesite staru i novu lozinku za nov\u010danik.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u0160ifriranje nov\u010danika nije uspjelo</translation>\n@@ -256,27 +264,27 @@\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n-        <translation>Pos&amp;tavke</translation>\n+        <translation>Pos&amp;tavke...</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation>\u0160i&amp;friraj nov\u010danik...</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>Si&amp;gurnosno kopiraj nov\u010danik...</translation>\n+        <translation>Spremi &amp;kopiju nov\u010danika...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation>&amp;Promjena lozinke...</translation>\n+        <translation>Promjena &amp;lozinke...</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses...</source>\n-        <translation>Adrese za s&amp;lanje</translation>\n+        <translation>Adrese za &amp;slanje</translation>\n     </message>\n     <message>\n         <source>&amp;Receiving addresses...</source>\n-        <translation>Adrese za p&amp;rimanje</translation>\n+        <translation>Adrese za &amp;primanje</translation>\n     </message>\n     <message>\n         <source>Open &amp;URI...</source>\n@@ -308,11 +316,11 @@\n     </message>\n     <message>\n         <source>&amp;Debug window</source>\n-        <translation>&amp;Ispravljanje programerskih pogre\u0161aka</translation>\n+        <translation>Konzola za dijagnostiku</translation>\n     </message>\n     <message>\n         <source>Open debugging and diagnostic console</source>\n-        <translation>Otvori konzolu za dijagnostiku i otklanjanje programskih pogre\u0161aka.</translation>\n+        <translation>Otvori konzolu za dijagnostiku</translation>\n     </message>\n     <message>\n         <source>&amp;Verify message...</source>\n@@ -332,11 +340,11 @@\n     </message>\n     <message>\n         <source>&amp;Receive</source>\n-        <translation>Pri&amp;miti</translation>\n+        <translation>Pri&amp;mi</translation>\n     </message>\n     <message>\n         <source>Show information about Bitcoin Core</source>\n-        <translation>Prika\u017ei informacije o Bitcoin Coreu</translation>\n+        <translation>Prika\u017ei informacije o programu Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n@@ -348,15 +356,15 @@\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n-        <translation>\u0160ifriraj privatne klju\u010deve koji pripadaju tvom nov\u010daniku</translation>\n+        <translation>\u0160ifriranje privatnih klju\u010deva koji u nov\u010daniku</translation>\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>Potpi\u0161i poruke svojim Bitcoin adresama kako bi dokazao da si njihov vlasnik</translation>\n+        <translation>Poruku potpi\u0161emo s bitcoin adresom, kako bi dokazali vlasni\u0161tvo nad tom adresom</translation>\n     </message>\n     <message>\n         <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n-        <translation>Provjerite porkue kako bi se uvjerili da su potpisane navedenim Bitcoin adresama</translation>\n+        <translation>Provjeravanje poruke, kao dokaz, da je potpisana navedenom bitcoin adresom</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n@@ -376,23 +384,75 @@\n     </message>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin Jezgra</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation>Zatra\u017ei uplate (Stvara QR kodove i bitcoin: URIje)</translation>\n+        <translation>Zatra\u017ei uplatu (stvara QR kod i bitcoin: URI adresu)</translation>\n     </message>\n     <message>\n         <source>&amp;About Bitcoin Core</source>\n-        <translation>&amp;O Bitcoin Jezgri</translation>\n+        <translation>&amp;O programu Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Promijeni postavke programa</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n-        <translation>Prika\u017ei popis kori\u0161tenih adresa i oznaka za slanje isplate</translation>\n+        <translation>Prika\u017ei popis kori\u0161tenih adresa i oznaka za slanje novca</translation>\n     </message>\n     <message>\n         <source>Show the list of used receiving addresses and labels</source>\n-        <translation>Prika\u017ei popis kori\u0161tenih adresa i oznaka za primanje isplate</translation>\n+        <translation>Prika\u017ei popis kori\u0161tenih adresa i oznaka za primanje novca</translation>\n+    </message>\n+    <message>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation>Otvori bitcoin: URI adresu ili zahtjev za uplatu</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Command-line options</source>\n+        <translation>Opcije &amp;naredbene linije</translation>\n+    </message>\n+    <message>\n+        <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n+        <translation>Ispis svih opcija naredbene linije programa sa kratkim opisom</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n active connection(s) to Bitcoin network</source>\n+        <translation><numerusform>%n aktivna veza na Bitcoin mre\u017eu</numerusform><numerusform>%n aktivnih veza na Bitcoin mre\u017eu</numerusform><numerusform>%n aktivnih veza na Bitcoin mre\u017eu</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Obra\u0111en %n blok povijesti transakcije.</numerusform><numerusform>Obra\u0111eno %n bloka povijesti transakcije.</numerusform><numerusform>Obra\u0111eno %n blokova povijesti transakcije.</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n sat</numerusform><numerusform>%n sata</numerusform><numerusform>%n sati</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n dan</numerusform><numerusform>%n dana</numerusform><numerusform>%n dana</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n tjedan</numerusform><numerusform>%n tjedna</numerusform><numerusform>%n tjedana</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>%1 and %2</source>\n+        <translation>%1 i %2</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n godina</numerusform><numerusform>%n godine</numerusform><numerusform>%n godina</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Last received block was generated %1 ago.</source>\n+        <translation>Zadnji primljeni blok je bio ustvaren prije %1.</translation>\n+    </message>\n+    <message>\n+        <source>Transactions after this will not yet be visible.</source>\n+        <translation>Transakcije izvr\u0161ene za tim blokom nisu jo\u0161 prikazane.</translation>\n     </message>\n     <message>\n         <source>Error</source>\n@@ -414,6 +474,36 @@\n         <source>Catching up...</source>\n         <translation>A\u017euriranje...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Datum: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Iznos: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Vrsta: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Oznaka: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adresa: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Poslana transakcija</translation>\n@@ -436,34 +526,146 @@\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>Izbor ulaza transakcije</translation>\n+    </message>\n+    <message>\n+        <source>Quantity:</source>\n+        <translation>Koli\u010dina:</translation>\n+    </message>\n+    <message>\n+        <source>Bytes:</source>\n+        <translation>Bajtova:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Iznos:</translation>\n     </message>\n+    <message>\n+        <source>Priority:</source>\n+        <translation>Prioriteta:</translation>\n+    </message>\n+    <message>\n+        <source>Fee:</source>\n+        <translation>Naknada:</translation>\n+    </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>Prah:</translation>\n+    </message>\n+    <message>\n+        <source>Change:</source>\n+        <translation>Vra\u0107eno:</translation>\n+    </message>\n+    <message>\n+        <source>(un)select all</source>\n+        <translation>Izaberi sve/ni\u0161ta</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>Iznos</translation>\n     </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>Primljeno pod oznakom</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>Primljeno na adresu</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Datum</translation>\n     </message>\n+    <message>\n+        <source>Confirmations</source>\n+        <translation>Broj potvrda</translation>\n+    </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>Potvr\u0111eno</translation>\n     </message>\n+    <message>\n+        <source>Priority</source>\n+        <translation>Prioriteta</translation>\n+    </message>\n     <message>\n         <source>Copy address</source>\n-        <translation>Kopirati adresu</translation>\n+        <translation>Kopiraj adresu</translation>\n     </message>\n     <message>\n         <source>Copy label</source>\n-        <translation>Kopirati oznaku</translation>\n+        <translation>Kopiraj oznaku</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n         <translation>Kopiraj iznos</translation>\n     </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Kopiraj ID transakcije</translation>\n+    </message>\n+    <message>\n+        <source>highest</source>\n+        <translation>najvi\u0161a</translation>\n+    </message>\n+    <message>\n+        <source>higher</source>\n+        <translation>vi\u0161a</translation>\n+    </message>\n+    <message>\n+        <source>high</source>\n+        <translation>visoka</translation>\n+    </message>\n+    <message>\n+        <source>medium-high</source>\n+        <translation>srednje visoka</translation>\n+    </message>\n+    <message>\n+        <source>medium</source>\n+        <translation>srednja</translation>\n+    </message>\n+    <message>\n+        <source>low-medium</source>\n+        <translation>srednje niska</translation>\n+    </message>\n+    <message>\n+        <source>low</source>\n+        <translation>niska</translation>\n+    </message>\n+    <message>\n+        <source>lower</source>\n+        <translation>ni\u017ea</translation>\n+    </message>\n+    <message>\n+        <source>lowest</source>\n+        <translation>najni\u017ea</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Oznaka postane crvene boje ako je transakcija ve\u0107a od 1000 bajtova.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Oznaka postane crvene boje ako je prioriteta transakcije ni\u017ea od \"srednja\"</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Oznaka postane crvene boje ako je iznos manji od %1</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>da</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>ne</translation>\n+    </message>\n+    <message>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n+        <translation>Transakcije vi\u0161e prioritete imaju ve\u0107u vjerojatnost da budu prije dodane u novi blok.</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez oznake)</translation>\n@@ -473,12 +675,20 @@\n     <name>EditAddressDialog</name>\n     <message>\n         <source>Edit Address</source>\n-        <translation>Izmjeni adresu</translation>\n+        <translation>Uredi adresu</translation>\n     </message>\n     <message>\n         <source>&amp;Label</source>\n         <translation>&amp;Oznaka</translation>\n     </message>\n+    <message>\n+        <source>The label associated with this address list entry</source>\n+        <translation>Oznaka bitcoin adrese</translation>\n+    </message>\n+    <message>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation>Bitcoin adresa. Izmjene adrese su mogu\u0107e samo za adrese za slanje.</translation>\n+    </message>\n     <message>\n         <source>&amp;Address</source>\n         <translation>&amp;Adresa</translation>\n@@ -518,39 +728,63 @@\n </context>\n <context>\n     <name>FreespaceChecker</name>\n+    <message>\n+        <source>A new data directory will be created.</source>\n+        <translation>Stvoren \u0107e biti novi direktorij za podatke.</translation>\n+    </message>\n     <message>\n         <source>name</source>\n         <translation>ime</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Cannot create data directory here.</source>\n+        <translation>Nije mogu\u0107e stvoriti direktorij za podatke na tom mjestu.</translation>\n+    </message>\n+</context>\n <context>\n     <name>HelpMessageDialog</name>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin Jezgra</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>version</source>\n         <translation>verzija</translation>\n     </message>\n+    <message>\n+        <source>(%1-bit)</source>\n+        <translation>(%1-bit)</translation>\n+    </message>\n     <message>\n         <source>About Bitcoin Core</source>\n-        <translation>O Bitcoinovoj jezgri</translation>\n+        <translation>O programu Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <source>Command-line options</source>\n+        <translation>Opcije programa u naredbenoj liniji</translation>\n     </message>\n     <message>\n         <source>Usage:</source>\n         <translation>Upotreba:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>command-line options</source>\n+        <translation>opcije programa u naredbenoj liniji</translation>\n+    </message>\n+</context>\n <context>\n     <name>Intro</name>\n     <message>\n         <source>Welcome</source>\n         <translation>Dobrodo\u0161li</translation>\n     </message>\n+    <message>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation>Dobrodo\u0161li u programu Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin Jezgra</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>Error</source>\n@@ -559,7 +793,27 @@\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n-    </context>\n+    <message>\n+        <source>Open URI</source>\n+        <translation>Otvori URI adresu</translation>\n+    </message>\n+    <message>\n+        <source>Open payment request from URI or file</source>\n+        <translation>Otvori zahtjev za pla\u0107anje iz URI adrese ili datoteke</translation>\n+    </message>\n+    <message>\n+        <source>URI:</source>\n+        <translation>URI:</translation>\n+    </message>\n+    <message>\n+        <source>Select payment request file</source>\n+        <translation>Izaberi datoteku zahtjeva za pla\u0107anje</translation>\n+    </message>\n+    <message>\n+        <source>Select payment request file to open</source>\n+        <translation>Izaberi datoteku zahtjeva za pla\u0107anje</translation>\n+    </message>\n+</context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n@@ -570,10 +824,58 @@\n         <source>&amp;Main</source>\n         <translation>&amp;Glavno</translation>\n     </message>\n+    <message>\n+        <source>Size of &amp;database cache</source>\n+        <translation>Veli\u010dina predmemorije baze podataka</translation>\n+    </message>\n+    <message>\n+        <source>MB</source>\n+        <translation>MB</translation>\n+    </message>\n+    <message>\n+        <source>Number of script &amp;verification threads</source>\n+        <translation>Broj CPU niti za verifikaciju transakcija</translation>\n+    </message>\n+    <message>\n+        <source>Allow incoming connections</source>\n+        <translation>Dozvoli povezivanje izvana</translation>\n+    </message>\n+    <message>\n+        <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n+        <translation>IP adresa proxy servera (npr. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n+    </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimizirati aplikaciju umjesto zatvoriti, kada se zatvori prozor. Kada je ova opcija omogu\u0107ena, aplikacija \u0107e biti zatvorena tek nakon odabira naredbe Izlaz u izborniku.</translation>\n+    </message>\n+    <message>\n+        <source>Reset all client options to default.</source>\n+        <translation>Nastavi sve postavke programa na po\u010detne vrijednosti.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Reset Options</source>\n+        <translation>Po&amp;nastavi postavke</translation>\n+    </message>\n     <message>\n         <source>&amp;Network</source>\n         <translation>&amp;Mre\u017ea</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Program se automatski pokrene po prijavi u sustav.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;Pokreni program kod prijave u sustav</translation>\n+    </message>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>&amp;Nov\u010danik</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Spend unconfirmed change</source>\n+        <translation>&amp;Tro\u0161enje nepotvr\u0111enih vra\u0107enih iznosa</translation>\n+    </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n         <translation>Automatski otvori port Bitcoin klijenta na ruteru. To radi samo ako ruter podr\u017eava UPnP i ako je omogu\u0107en.</translation>\n@@ -586,9 +888,13 @@\n         <source>Proxy &amp;IP:</source>\n         <translation>Proxy &amp;IP:</translation>\n     </message>\n+    <message>\n+        <source>&amp;Port:</source>\n+        <translation>&amp;Vrata:</translation>\n+    </message>\n     <message>\n         <source>Port of the proxy (e.g. 9050)</source>\n-        <translation>Port od proxy-a (npr. 9050)</translation>\n+        <translation>Proxy vrata (npr. 9050)</translation>\n     </message>\n     <message>\n         <source>&amp;Window</source>\n@@ -610,9 +916,13 @@\n         <source>&amp;Display</source>\n         <translation>&amp;Prikaz</translation>\n     </message>\n+    <message>\n+        <source>User Interface &amp;language:</source>\n+        <translation>Jezi&amp;k su\u010delja:</translation>\n+    </message>\n     <message>\n         <source>&amp;Unit to show amounts in:</source>\n-        <translation>&amp;Jedinica za prikazivanje iznosa:</translation>\n+        <translation>&amp;Jedinica za prikaz iznosa:</translation>\n     </message>\n     <message>\n         <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>\n@@ -673,6 +983,10 @@\n     </context>\n <context>\n     <name>QRImageWidget</name>\n+    <message>\n+        <source>&amp;Save Image...</source>\n+        <translation>&amp;Spremi sliku...</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>Spremi QR kod</translation>\n@@ -694,11 +1008,11 @@\n     </message>\n     <message>\n         <source>&amp;Information</source>\n-        <translation>&amp;Informacija</translation>\n+        <translation>&amp;Informacije</translation>\n     </message>\n     <message>\n         <source>Using OpenSSL version</source>\n-        <translation>Koristim OpenSSL verziju</translation>\n+        <translation>OpenSSL verzija u upotrebi</translation>\n     </message>\n     <message>\n         <source>Network</source>\n@@ -710,7 +1024,7 @@\n     </message>\n     <message>\n         <source>Number of connections</source>\n-        <translation>Broj konekcija</translation>\n+        <translation>Broj veza</translation>\n     </message>\n     <message>\n         <source>Block chain</source>\n@@ -720,6 +1034,34 @@\n         <source>Current number of blocks</source>\n         <translation>Trenutni broj blokova</translation>\n     </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>Primljeno</translation>\n+    </message>\n+    <message>\n+        <source>Sent</source>\n+        <translation>Poslano</translation>\n+    </message>\n+    <message>\n+        <source>Direction</source>\n+        <translation>Smjer</translation>\n+    </message>\n+    <message>\n+        <source>Version</source>\n+        <translation>Verzija</translation>\n+    </message>\n+    <message>\n+        <source>Connection Time</source>\n+        <translation>Trajanje veze</translation>\n+    </message>\n+    <message>\n+        <source>Bytes Sent</source>\n+        <translation>Bajtova poslano</translation>\n+    </message>\n+    <message>\n+        <source>Bytes Received</source>\n+        <translation>Bajtova primljeno</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Posljednje vrijeme bloka</translation>\n@@ -732,6 +1074,10 @@\n         <source>&amp;Console</source>\n         <translation>&amp;Konzola</translation>\n     </message>\n+    <message>\n+        <source>&amp;Network Traffic</source>\n+        <translation>&amp;Mre\u017eni promet</translation>\n+    </message>\n     <message>\n         <source>Totals</source>\n         <translation>Ukupno:</translation>\n@@ -740,24 +1086,48 @@\n         <source>Clear console</source>\n         <translation>O\u010disti konzolu</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Dobrodo\u0161li u Bitcoin RPC konzolu.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n-        <translation>Kako bi navigirali kroz povijest koristite strelice gore i dolje. &lt;b&gt;Ctrl-L&lt;/b&gt; kako bi o\u010distili ekran.</translation>\n+        <translation>Koristite tipke gore i dolje za izbor ve\u0107 kori\u0161tenih naredbi. &lt;b&gt;Ctrl-L&lt;/b&gt; kako bi o\u010distili ekran i povijest naredbi.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Nepoznato</translation>\n     </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>&amp;Amount:</source>\n+        <translation>&amp;Iznos:</translation>\n+    </message>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>&amp;Oznaka:</translation>\n     </message>\n+    <message>\n+        <source>&amp;Message:</source>\n+        <translation>&amp;Poruka:</translation>\n+    </message>\n+    <message>\n+        <source>Clear all fields of the form.</source>\n+        <translation>Obri\u0161i sva polja</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Request payment</source>\n+        <translation>&amp;Zatra\u017ei pla\u0107anje</translation>\n+    </message>\n     <message>\n         <source>Show</source>\n         <translation>Poka\u017ei</translation>\n     </message>\n     <message>\n         <source>Copy label</source>\n-        <translation>Kopirati oznaku</translation>\n+        <translation>Kopiraj oznaku</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n@@ -770,6 +1140,22 @@\n         <source>QR Code</source>\n         <translation>QR k\u00f4d</translation>\n     </message>\n+    <message>\n+        <source>Copy &amp;URI</source>\n+        <translation>Kopiraj &amp;URI</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Address</source>\n+        <translation>Kopiraj &amp;adresu</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Save Image...</source>\n+        <translation>&amp;Spremi sliku...</translation>\n+    </message>\n+    <message>\n+        <source>URI</source>\n+        <translation>URI</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>Adresa</translation>\n@@ -788,9 +1174,13 @@\n     </message>\n     <message>\n         <source>Resulting URI too long, try to reduce the text for label / message.</source>\n-        <translation>Rezultiraju\u0107i URI je predug, probajte umanjiti tekst za naslov / poruku.</translation>\n+        <translation>URI je predug, probajte skratiti tekst za naslov / poruku.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Error encoding URI into QR Code.</source>\n+        <translation>Gre\u0161ka kod kodiranja URI adrese u QR kod.</translation>\n+    </message>\n+</context>\n <context>\n     <name>RecentRequestsTableModel</name>\n     <message>\n@@ -813,25 +1203,61 @@\n         <source>(no label)</source>\n         <translation>(bez oznake)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(bez poruke)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount)</source>\n+        <translation>(bez iznosa)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <source>Send Coins</source>\n         <translation>Slanje novca</translation>\n     </message>\n+    <message>\n+        <source>Quantity:</source>\n+        <translation>Koli\u010dina:</translation>\n+    </message>\n+    <message>\n+        <source>Bytes:</source>\n+        <translation>Bajtova:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Iznos:</translation>\n     </message>\n+    <message>\n+        <source>Priority:</source>\n+        <translation>Prioriteta:</translation>\n+    </message>\n+    <message>\n+        <source>Fee:</source>\n+        <translation>Naknada:</translation>\n+    </message>\n+    <message>\n+        <source>Change:</source>\n+        <translation>Vra\u0107eno:</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n-        <translation>Po\u0161alji k nekoliko primatelja odjednom</translation>\n+        <translation>Po\u0161alji novce ve\u0107em broju primatelja u jednoj transakciji</translation>\n     </message>\n     <message>\n         <source>Add &amp;Recipient</source>\n         <translation>&amp;Dodaj primatelja</translation>\n     </message>\n+    <message>\n+        <source>Clear all fields of the form.</source>\n+        <translation>Obri\u0161i sva polja</translation>\n+    </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>Prah:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>Obri\u0161i &amp;sve</translation>\n@@ -866,11 +1292,11 @@\n     </message>\n     <message>\n         <source>The amount exceeds your balance.</source>\n-        <translation>Iznos je ve\u0107i od stanja ra\u010duna.</translation>\n+        <translation>Iznos je ve\u0107i od raspolo\u017eljivog stanja nov\u010danika.</translation>\n     </message>\n     <message>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n-        <translation>Iznos je ve\u0107i od stanja ra\u010duna kad se doda naknada za transakcije od %1.</translation>\n+        <translation>Iznos je ve\u0107i od stanja nov\u010danika kad se doda naknada za transakcije od %1.</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n@@ -966,7 +1392,7 @@\n     <name>SplashScreen</name>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin Jezgra</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>[testnet]</source>\n@@ -1087,7 +1513,7 @@\n     </message>\n     <message>\n         <source>This pane shows a detailed description of the transaction</source>\n-        <translation>Ova panela prikazuje detaljni opis transakcije</translation>\n+        <translation>Ovaj prozor prikazuje detaljni opis transakcije</translation>\n     </message>\n </context>\n <context>\n@@ -1110,7 +1536,7 @@\n     </message>\n     <message>\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n-        <translation>Generirano - Upozorenje: ovaj blok nije bio primljen od strane bilo kojeg drugog noda i vjerojatno ne\u0107e biti prihva\u0107en!</translation>\n+        <translation>Ovaj blok nije bio primljen od strane bilo kojeg drugog \u010dvora i vjerojatno ne\u0107e biti prihva\u0107en!</translation>\n     </message>\n     <message>\n         <source>Generated but not accepted</source>\n@@ -1201,7 +1627,7 @@\n     </message>\n     <message>\n         <source>To yourself</source>\n-        <translation>Tebi</translation>\n+        <translation>Samom sebi</translation>\n     </message>\n     <message>\n         <source>Mined</source>\n@@ -1221,19 +1647,23 @@\n     </message>\n     <message>\n         <source>Copy address</source>\n-        <translation>Kopirati adresu</translation>\n+        <translation>Kopiraj adresu</translation>\n     </message>\n     <message>\n         <source>Copy label</source>\n-        <translation>Kopirati oznaku</translation>\n+        <translation>Kopiraj oznaku</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n         <translation>Kopiraj iznos</translation>\n     </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Kopiraj ID transakcije</translation>\n+    </message>\n     <message>\n         <source>Edit label</source>\n-        <translation>Izmjeniti oznaku</translation>\n+        <translation>Izmjeni oznaku</translation>\n     </message>\n     <message>\n         <source>Show transaction details</source>\n@@ -1305,15 +1735,15 @@\n     </message>\n     <message>\n         <source>Backup Wallet</source>\n-        <translation>Backup nov\u010danika</translation>\n+        <translation>Arhiviranje nov\u010danika</translation>\n     </message>\n     <message>\n         <source>Wallet Data (*.dat)</source>\n         <translation>Podaci nov\u010danika (*.dat)</translation>\n     </message>\n     <message>\n         <source>Backup Failed</source>\n-        <translation>Backup nije uspio</translation>\n+        <translation>Arhiviranje nije uspjelo</translation>\n     </message>\n     </context>\n <context>\n@@ -1324,7 +1754,7 @@\n     </message>\n     <message>\n         <source>Specify data directory</source>\n-        <translation>Odredi direktorij za datoteke</translation>\n+        <translation>Odaberi direktorij za datoteke</translation>\n     </message>\n     <message>\n         <source>Specify your own public address</source>\n@@ -1352,15 +1782,15 @@\n     </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n-        <translation>Pove\u017ei se samo sa odre\u0111enim nodom</translation>\n+        <translation>Pove\u017ei se samo sa odre\u0111enim \u010dvorom/\u010dvorovima</translation>\n     </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n-        <translation>Pogre\u0161ka: Nema prostora na disku!</translation>\n+        <translation>Pogre\u0161ka: Nema dovoljno prostora na disku!</translation>\n     </message>\n     <message>\n         <source>Imports blocks from external blk000??.dat file</source>\n-        <translation>Importiraj blokove sa vanjskog blk000??.dat fajla</translation>\n+        <translation>Uvozi blokove sa vanjske blk000??.dat datoteke</translation>\n     </message>\n     <message>\n         <source>Information</source>\n@@ -1412,27 +1842,27 @@\n     </message>\n     <message>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n-        <translation>Dozvoli DNS upite za dodavanje nodova i povezivanje</translation>\n+        <translation>Dozvoli DNS upite za -addnode, -seednode i -connect</translation>\n     </message>\n     <message>\n         <source>Loading addresses...</source>\n         <translation>U\u010ditavanje adresa...</translation>\n     </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n-        <translation>Gre\u0161ka kod u\u010ditavanja wallet.dat: Nov\u010danik pokvaren</translation>\n+        <translation>Gre\u0161ka kod u\u010ditavanja datoteke wallet.dat: Nov\u010danik pokvaren</translation>\n     </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n-        <translation>Gre\u0161ka kod u\u010ditavanja wallet.dat</translation>\n+        <translation>Gre\u0161ka kod u\u010ditavanja datoteke wallet.dat</translation>\n     </message>\n     <message>\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Nevaljala -proxy adresa: '%s'</translation>\n     </message>\n     <message>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: '%s'</source>\n-        <translation>Nevaljali iznos za opciju -paytxfee=&lt;amount&gt;: '%s'</translation>\n+        <translation>Nevaljali iznos za opciju -paytxfee=&lt;iznos&gt;: '%s'</translation>\n     </message>\n     <message>\n         <source>Insufficient funds</source>\n@@ -1444,7 +1874,7 @@\n     </message>\n     <message>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n-        <translation>Unesite nod s kojim se \u017eelite spojiti and attempt to keep the connection open</translation>\n+        <translation>Doda \u010dvor s kojim se \u017eelite povezati i nastoji odr\u017eati vezu otvorenu</translation>\n     </message>\n     <message>\n         <source>Loading wallet...</source>\n@@ -1460,7 +1890,7 @@\n     </message>\n     <message>\n         <source>Rescanning...</source>\n-        <translation>Rescaniranje</translation>\n+        <translation>Ponovno pretra\u017eivanje...</translation>\n     </message>\n     <message>\n         <source>Done loading</source>"
      },
      {
        "sha": "fd476611ee6b1d0f8ef7c7ad217a3b80ae40235d",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 93,
        "deletions": 1,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"hu\" version=\"2.1\">\n+<TS language=\"hu\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -414,6 +414,10 @@\n         <source>No block source available...</source>\n         <translation>Blokk forr\u00e1sa ismeretlen...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n \u00f3ra</numerusform><numerusform>%n \u00f3ra</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 \u00e9s %2</translation>\n@@ -450,6 +454,18 @@\n         <source>Catching up...</source>\n         <translation>Friss\u00edt\u00e9s...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>D\u00e1tum:  %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>T\u00edpus: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Tranzakci\u00f3 elk\u00fcldve.</translation>\n@@ -788,6 +804,10 @@\n         <source>Welcome to Bitcoin Core.</source>\n         <translation>\u00dcdv\u00f6zl\u00fcnk a Bitcoin Core-ban.</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation>A Bitcoin Core le fogja t\u00f6lteni \u00e9s t\u00e1rolni fogja a Bitcoin blokkl\u00e1nc egy m\u00e1solat\u00e1t. Legal\u00e1bb %1GB adat lesz t\u00e1rolva ebben a mapp\u00e1ban, \u00e9s ez folyamatosan n\u0151ni fog. A t\u00e1rca szint\u00e9n itt lesz t\u00e1rolva.</translation>\n+    </message>\n     <message>\n         <source>Use the default data directory</source>\n         <translation>Az alap\u00e9rtelmezett adat k\u00f6nyvt\u00e1r haszn\u00e1lata</translation>\n@@ -870,6 +890,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;H\u00e1l\u00f3zat</translation>\n     </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>A Bitcoin elind\u00edt\u00e1sa bejelentkez\u00e9skor</translation>\n+    </message>\n+    <message>\n+        <source>Expert</source>\n+        <translation>szak\u00e9rt\u0151</translation>\n+    </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n         <translation>A Bitcoin-kliens portj\u00e1nak automatikus megnyit\u00e1sa a routeren. Ez csak akkor m\u0171k\u00f6dik, ha a routered t\u00e1mogatja az UPnP-t \u00e9s az enged\u00e9lyezve is van rajta.</translation>\n@@ -878,6 +906,10 @@\n         <source>Map port using &amp;UPnP</source>\n         <translation>&amp;UPnP port-felt\u00e9rk\u00e9pez\u00e9s</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n+        <translation>Csatlakoz\u00e1s a Bitcoin h\u00e1l\u00f3zat\u00e1hoz SOCKS5 proxyn kereszt\u00fcl</translation>\n+    </message>\n     <message>\n         <source>Proxy &amp;IP:</source>\n         <translation>Proxy &amp;IP:</translation>\n@@ -1015,6 +1047,10 @@\n     </context>\n <context>\n     <name>PeerTableModel</name>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>User Agent</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Ping id\u0151</translation>\n@@ -1136,10 +1172,30 @@\n         <source>Version</source>\n         <translation>Verzi\u00f3</translation>\n     </message>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>User Agent</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>Szolg\u00e1ltat\u00e1sok</translation>\n     </message>\n+    <message>\n+        <source>Last Send</source>\n+        <translation>Legut\u00f3bbi k\u00fcld\u00e9s</translation>\n+    </message>\n+    <message>\n+        <source>Last Receive</source>\n+        <translation>Legut\u00f3bbi fogad\u00e1s</translation>\n+    </message>\n+    <message>\n+        <source>Bytes Sent</source>\n+        <translation>K\u00fcld\u00f6tt b\u00e1jtok</translation>\n+    </message>\n+    <message>\n+        <source>Bytes Received</source>\n+        <translation>Fogadott b\u00e1jtok</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Ping id\u0151</translation>\n@@ -1212,13 +1268,21 @@\n         <source>never</source>\n         <translation>soha</translation>\n     </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Ismeretlen</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>C\u00edmke:</translation>\n     </message>\n+    <message>\n+        <source>&amp;Message:</source>\n+        <translation>&amp;\u00dczenet:</translation>\n+    </message>\n     <message>\n         <source>Clear</source>\n         <translation>T\u00f6rl\u00e9s</translation>\n@@ -1352,6 +1416,14 @@\n         <source>Change:</source>\n         <translation>Visszaj\u00e1r\u00f3:</translation>\n     </message>\n+    <message>\n+        <source>Transaction Fee:</source>\n+        <translation>Tranzakci\u00f3s d\u00edj</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Elrejt\u00e9s</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>K\u00fcld\u00e9s t\u00f6bb c\u00edmzettnek egyszerre</translation>\n@@ -1749,6 +1821,10 @@\n         <source>Label</source>\n         <translation>C\u00edmke</translation>\n     </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>Meger\u0151s\u00edtetlen:</translation>\n+    </message>\n     <message>\n         <source>Received with</source>\n         <translation>Erre a c\u00edmre</translation>\n@@ -1876,6 +1952,10 @@\n         <source>Exporting Failed</source>\n         <translation>Az export\u00e1l\u00e1s sikertelen volt</translation>\n     </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>Sikeres export\u00e1l\u00e1s</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Vessz\u0151vel elv\u00e1lasztott f\u00e1jl (*.csv)</translation>\n@@ -2056,6 +2136,10 @@\n         <source>Verifying wallet...</source>\n         <translation>T\u00e1rca ellen\u0151rz\u00e9se...</translation>\n     </message>\n+    <message>\n+        <source>Wallet options:</source>\n+        <translation>T\u00e1rca be\u00e1ll\u00edt\u00e1sok:</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Az adatb\u00e1zist \u00fajra kell \u00e9p\u00edteni -reindex haszn\u00e1lat\u00e1val (m\u00f3dos\u00edt\u00e1s -tindex).</translation>\n@@ -2064,6 +2148,14 @@\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>Adatk\u00f6nyvt\u00e1r kiv\u00e1laszt\u00e1sa indul\u00e1skor (alapbe\u00e1ll\u00edt\u00e1s: 0)</translation>\n     </message>\n+    <message>\n+        <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n+        <translation>Copyright (C) 2009-%i A Bitcoin Core Fejleszt\u0151i</translation>\n+    </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>Hiba az adatb\u00e1zis olvas\u00e1sakor, le\u00e1ll\u00edt\u00e1s</translation>\n+    </message>\n     <message>\n         <source>Information</source>\n         <translation>Inform\u00e1ci\u00f3</translation>"
      },
      {
        "sha": "6855d11c8030dc2b055521334bf76b663c09486c",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"id_ID\" version=\"2.1\">\n+<TS language=\"id_ID\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "d3cc576979ea292d5be8fa522a4d1d99fbc18764",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 69,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"it\" version=\"2.1\">\n+<TS language=\"it\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2805,10 +2805,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Associa all'indirizzo indicato e resta permanentemente in ascolto su di esso. Usa la notazione [host]:porta per l'IPv6</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Limita la quantit\u00e0 di transazioni gratuite ad &lt;n&gt;*1000 byte al minuto (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Elimina tutte le transazioni dal portamonete e recupera solo quelle che fanno parte della blockchain attraverso il comando -rescan all'avvio.</translation>\n@@ -2817,18 +2813,10 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuito secondo la licenza software MIT, vedi il file COPYING incluso oppure &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Entra in modalit\u00e0 test di regressione. Questa utilizza una speciale catena in cui i blocchi possono essere risolti istantaneamente.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Esegue un comando quando lo stato di una transazione del portamonete cambia (%s in cmd \u00e8 sostituito da TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>In questa modalit\u00e0 -genproclimit determina quanti blocchi saranno generati immediatamente.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Commissioni massime totali da includere in una singola transazione dal portamonete. Un'impostazione troppo bassa potrebbe provocare l'annullamento di transazioni di grosse dimensioni (predefinito: %s)</translation>\n@@ -2849,6 +2837,14 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Impossibile associarsi a %s su questo computer. Probabilmente Bitcoin Core \u00e8 gi\u00e0 in esecuzione.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ATTENZIONE, il numero di blocchi generati \u00e8 insolitamente elevato: %d blocchi ricevuti nelle ultime %d ore (%d previsti)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ATTENZIONE, si consiglia di verificare la connessione di rete: %d blocchi ricevuti nelle ultime %d ore (%d previsti)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Attenzione: -paytxfee \u00e8 impostato su un valore molto elevato. Questa \u00e8 la commissione che si paga quando si invia una transazione.</translation>\n@@ -2985,10 +2981,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Specifica il file del portamonete (all'interno della cartella dati)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Questa impostazione \u00e8 destinata all'uso con i test di regressione e per lo sviluppo di applicazioni.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Usa UPnP per mappare la porta di ascolto (predefinito: %u)</translation>\n@@ -3061,10 +3053,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Le commissioni (in BTC/kB) inferiori a questo valore sono considerate pari a zero relativamente alla trasmissione (predefinito: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Le commissioni (in BTC/kB) inferiori a questo valore sono considerate pari a zero relativamente alla creazione della transazione (predefinito: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Nel caso in cui paytxfee non sia impostato, include una commissione tale da ottenere un avvio delle conferme entro una media di n blocchi (predefinito: %u)</translation>\n@@ -3089,10 +3077,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Randomizza le credenziali per ogni connessione proxy. Permette la Tor stream isolation (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>Richiedi alta priorit\u00e0 per la trasmissione di transazioni a zero o basse commissioni (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Imposta la dimensione massima in byte delle transazioni ad alta-priorit\u00e0/basse-commissioni (predefinito: %d)</translation>\n@@ -3160,10 +3144,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Activating best chain...</source>\n         <translation>Attivazione della blockchain migliore...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Permette certificati radice auto-firmati (predefinito: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>Impossibile operare con un portamonete in modalit\u00e0 prune.</translation>\n@@ -3257,12 +3237,12 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <translation>Supporto RPC per le connessioni HTTP persistenti (predefinito: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Scarta casualmente 1 ogni &lt;n&gt; messaggi di rete</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>Ricostruzione dell'indice della block chain dai file blk000??.dat correnti all'avvio</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Altera casualmente 1 ogni &lt;n&gt; messaggi di rete</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Ricevi e visualizza gli alerts della rete P2P (default: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3408,18 +3388,10 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = mantiene metadati tx, ad es. proprietario account ed informazioni di richiesta di pagamento, 2 = scarta metadati tx)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Scarica l'attivit\u00e0 del database dal pool in memoria al log su disco ogni &lt;n&gt; megabyte (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Determina quanto sar\u00e0 approfondita la verifica da parte di -checkblocks (0-4, predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Abilita il log della priorit\u00e0 di transazione e della commissione per kB quando si generano blocchi (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Mantiene l'indice completo delle transazioni usato dalla chiamata rpc getrawtransaction (predefinito: %u)</translation>\n@@ -3448,18 +3420,10 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Interroga sempre i DNS per ottenere gli indirizzi dei peer (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Disabilita la modalit\u00e0 sicura ignorando gli eventi che porterebbero alla sua attivazione (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Errore caricamento wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Forza modalit\u00e0 sicura (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Genera bitcoin (predefinito: %u)</translation>\n@@ -3476,10 +3440,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Indirizzo -proxy non valido: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Limita la dimensione della cache delle firme a &lt;n&gt; voci (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Resta in attesa di connessioni JSON-RPC su &lt;port&gt; (predefinito: %u o testnet: %u)</translation>\n@@ -3504,10 +3464,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Buffer di invio massimo per connessione, &lt;n&gt;*1000 byte (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Accetta solo block chain corrispondenti ai checkpoint integrati nel codice (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Antepone un timestamp all'output del debug (predefinito: %u)</translation>\n@@ -3520,10 +3476,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Trasmette transazioni non-P2SH multisig (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Mantieni in esecuzione un thread per scaricare periodicamente il portamonete (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>File del certificato del server (predefinito: %s)</translation>\n@@ -3544,10 +3496,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Imposta il numero di thread destinati a rispondere alle chiamate RPC (predefinito %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Imposta il flag DB_PRIVATE nell'ambiente di database del portamonete (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Specifica il file di configurazione (predefinito: %s)</translation>\n@@ -3564,10 +3512,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Abilita la spesa di resto non confermato quando si inviano transazioni (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Interrompi l'esecuzione dopo aver importato i blocchi dal disco (predefinito: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Soglia di disconnessione per i peer che si comportano in maniera anomala (predefinito: %u)</translation>"
      },
      {
        "sha": "e2c22f7f6da8e2d9a075f58292da2c5724f08ef4",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 73,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ja\" version=\"2.1\">\n+<TS language=\"ja\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2816,10 +2816,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>\u6307\u5b9a\u306e\u30a2\u30c9\u30ec\u30b9\u3078\u30d0\u30a4\u30f3\u30c9\u3057\u3001\u305d\u306e\u4e0a\u3067\u5e38\u306b\u30ea\u30b9\u30f3\u3057\u307e\u3059\u3002IPv6 \u306f [\u30db\u30b9\u30c8\u540d]:\u30dd\u30fc\u30c8\u756a\u53f7 \u3068\u8868\u8a18\u3057\u307e\u3059</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>\u7d99\u7d9a\u7684\u306b\u7121\u6599\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30ec\u30fc\u30c8\u3092\u4e00\u5206\u9593\u306b&lt;n&gt;*1000\u30d0\u30a4\u30c8\u306b\u5236\u9650\u3059\u308b (\u898f\u5b9a\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u5168\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3057\u3001\u3053\u308c\u3089\u3092-rescan\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u8d77\u52d5\u6642\u306b\u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u306e\u307f\u304b\u3089\u30ea\u30ab\u30d0\u30ea\u3057\u307e\u3059\u3002</translation>\n@@ -2828,18 +2824,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>MIT\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u3082\u3068\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ed8\u5c5e\u306eCOPYING\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306f&lt;http://www.opensource.org/licenses/mit-license.php&gt;\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u30d6\u30ed\u30c3\u30af\u3092\u77ac\u6642\u306b\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u7279\u5225\u306a\u30c1\u30a7\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ea\u30b0\u30ec\u30c3\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u30e2\u30fc\u30c9\u306b\u5165\u308b\u3002</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u53d6\u5f15\u3092\u5909\u66f4\u3059\u308b\u969b\u306b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c (cmd \u306e %s \u306f TxID \u306b\u7f6e\u63db\u3055\u308c\u308b)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>\u3053\u306e\u30e2\u30fc\u30c9\u3067\u306f -genproclimit \u306f\u4f55\u500b\u306e\u30d6\u30ed\u30c3\u30af\u3092\u305f\u3060\u3061\u306b\u751f\u6210\u3059\u308b\u306e\u304b\u5236\u5fa1\u3057\u307e\u3059\u3002</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>\u3072\u3068\u3064\u306e\u30a6\u30a9\u30ec\u30c3\u30c8\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u5408\u8a08\u624b\u6570\u6599\u306e\u6700\u5927\u5024\u3002\u4f4e\u3059\u304e\u308b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3068\u5de8\u5927\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059 (\u898f\u5b9a\u5024: %s)</translation>\n@@ -2860,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u3053\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e %s \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u304a\u305d\u3089\u304f Bitcoin Core \u306f\u65e2\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u8b66\u544a\uff1a\u7570\u5e38\u306b\u591a\u304f\u306e\u6570\u306e\u30d6\u30ed\u30c3\u30af\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002%d \u30d6\u30ed\u30c3\u30af\u304c\u6700\u8fd1 %d \u6642\u9593\u4ee5\u5185\u306b\u53d7\u3051\u53d6\u3089\u308c\u307e\u3057\u305f\u3002(\u671f\u5f85\u5024: %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u8b66\u544a\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002%d \u30d6\u30ed\u30c3\u30af\u304c\u6700\u8fd1 %d \u6642\u9593\u4ee5\u5185\u306b\u306b\u53d7\u3051\u53d6\u3089\u308c\u307e\u3057\u305f\u3002(\u671f\u5f85\u5024: %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>\u8b66\u544a: -paytxfee \u304c\u975e\u5e38\u306b\u9ad8\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059! \u3053\u308c\u306f\u53d6\u5f15\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306b\u652f\u6255\u3046\u53d6\u5f15\u624b\u6570\u6599\u3067\u3059\u3002</translation>\n@@ -2997,10 +2993,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3000(\u30c7\u30fc\u30bf\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u3053\u308c\u306f\u30ea\u30b0\u30ec\u30c3\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u3084\u30a2\u30d7\u30ea\u958b\u767a\u306e\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>\u30ea\u30c3\u30b9\u30f3\u30dd\u30fc\u30c8\u306e\u5272\u5f53\u306b UPnP \u3092\u4f7f\u7528 (\u521d\u671f\u5024: %u)</translation>\n@@ -3077,10 +3069,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>\u4e2d\u7d99\u306e\u969b\u3001\u3053\u306e\u5024\u672a\u6e80\u306e\u624b\u6570\u6599 (BTC/Kb\u5358\u4f4d) \u306f\u30bc\u30ed\u3067\u3042\u308b\u3068\u307f\u306a\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u4f5c\u6210\u306e\u969b\u3001\u3053\u306e\u5024\u672a\u6e80\u306e\u624b\u6570\u6599 (BTC/Kb\u5358\u4f4d) \u306f\u30bc\u30ed\u3067\u3042\u308b\u3068\u307f\u306a\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>paytxfee \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u5e73\u5747\u3057\u3066 n \u30d6\u30ed\u30c3\u30af\u4ee5\u5185\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u691c\u8a3c\u3055\u308c\u59cb\u3081\u308b\u306e\u306b\u5341\u5206\u306a\u624b\u6570\u6599\u3092\u542b\u3081\u308b (\u521d\u671f\u5024: %u)</translation>\n@@ -3105,10 +3093,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>\u8a8d\u8a3c\u60c5\u5831\u3092\u30d7\u30ed\u30ad\u30b7\u30fc\u63a5\u7d9a\u3054\u3068\u306b\u30e9\u30f3\u30c0\u30e0\u5316\u3059\u308b\u3002\u3053\u308c\u306b\u3088\u308aTor\u30b9\u30c8\u30ea\u30fc\u30e0\u5206\u96e2\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 (\u898f\u5b9a\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>\u7121\u6599\u3084\u4f4e\u3044\u624b\u6570\u6599\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30ea\u30ec\u30fc\u306b\u969b\u3057\u3001\u9ad8\u3044\u512a\u5148\u5ea6\u3092\u8981\u6c42\u3059\u308b (\u898f\u5b9a\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>\u6700\u512a\u5148/\u6700\u4f4e\u624b\u6570\u6599\u306e\u6700\u5927\u30b5\u30a4\u30ba\u3092\u30d0\u30a4\u30c8\u3067\u6307\u5b9a (\u521d\u671f\u5024: %d)</translation>\n@@ -3177,10 +3161,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u6700\u512a\u826f\u306e\u30c1\u30a7\u30a4\u30f3\u3092\u6709\u52b9\u5316\u3057\u3066\u3044\u307e\u3059...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>\u81ea\u5df1\u7f72\u540d\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u3092\u8a31\u53ef\u3059\u308b (\u898f\u5b9a\u5024: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>\u526a\u5b9a\u30e2\u30fc\u30c9\u3067\u306f\u30a6\u30a9\u30ec\u30c3\u30c8\u6a5f\u80fd\u4ed8\u304d\u3067\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3002</translation>\n@@ -3273,18 +3253,14 @@ rpcpassword=%s\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC\u306b\u304a\u3051\u308bHTTP\u306e\u6301\u7d9a\u7684\u63a5\u7d9a\u306e\u30b5\u30dd\u30fc\u30c8 (\u521d\u671f\u5024: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>&lt;n&gt; \u500b\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u3072\u3068\u3064\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u6368\u3066\u308b</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>&lt;n&gt;\u500b\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u3072\u3068\u3064\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u6539\u5909\u3059\u308b</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u8d77\u52d5\u6642\u306b\u73fe\u5728\u306e blk000??.dat \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d6\u30ed\u30c3\u30af \u30c1\u30a7\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u518d\u69cb\u7bc9</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>P2P\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30a2\u30e9\u30fc\u30c8\u306e\u53d7\u3051\u53d6\u308a\u3068\u8868\u793a\u3092\u884c\u3046 (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u30c8\u30ec\u30fc\u30b9/\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u3092 debug.log \u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u9001\u308b</translation>\n@@ -3429,18 +3405,10 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3001\u4f8b\u3048\u3070\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u6240\u6709\u8005\u3084\u652f\u6255\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5185\u5bb9\u3092\u4fdd\u6301\u3059\u308b, 2 = \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u7834\u68c4\u3059\u308b)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>&lt;n&gt; \u30e1\u30ac\u30d0\u30a4\u30c8\u3054\u3068\u306b\u30e1\u30e2\u30ea\u30d7\u30fc\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u30c7\u30a3\u30b9\u30af\u30ed\u30b0\u306b\u66f8\u304d\u51fa\u3059 (\u521d\u671f\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>-checkblocks \u306e\u30d6\u30ed\u30c3\u30af\u306e\u691c\u8a3c\u30ec\u30d9\u30eb (0-4, \u521d\u671f\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>\u30d6\u30ed\u30c3\u30af\u306e\u63a1\u6398\u6642\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u512a\u5148\u5ea6\u30681kB\u3042\u305f\u308a\u306e\u624b\u6570\u6599\u3092\u30ed\u30b0\u306b\u6b8b\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>getrawtransaction rpc \u547c\u3073\u51fa\u3057\u6642\u306b\u7528\u3044\u308b\u3001\u5b8c\u5168\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4fdd\u6301\u3059\u308b (\u521d\u671f\u5024: %u)</translation>\n@@ -3469,18 +3437,10 @@ rpcpassword=%s\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>DNS \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u901a\u3057\u3066\u30d4\u30a2\u30a2\u30c9\u30ec\u30b9\u3092\u5e38\u306b\u554f\u3044\u5408\u308f\u305b\u308b (\u521d\u671f\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>\u30bb\u30fc\u30d5\u30e2\u30fc\u30c9\u3092\u7121\u52b9\u5316\u3057\u3001\u5b9f\u969b\u306e\u30bb\u30fc\u30d5\u30e2\u30fc\u30c9\u30a4\u30d9\u30f3\u30c8\u3082\u7121\u52b9\u5316\u3059\u308b (\u521d\u671f\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>wallet.dat \u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>\u30bb\u30fc\u30d5\u30e2\u30fc\u30c9\u3092\u5f37\u5236\u3059\u308b (\u521d\u671f\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>\u30b3\u30a4\u30f3\u3092\u751f\u6210 (\u521d\u671f\u5024: %u)</translation>\n@@ -3497,10 +3457,6 @@ rpcpassword=%s\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u7121\u52b9\u306a -proxy \u30a2\u30c9\u30ec\u30b9: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>\u7f72\u540d\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u3092 &lt;n&gt; \u30a8\u30f3\u30c8\u30ea\u30fc\u306b\u5236\u9650\u3059\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>&lt;port&gt; \u3067 JSON-RPC \u63a5\u7d9a\u3092\u30ea\u30b9\u30f3 (\u521d\u671f\u5024: %u\u3001testnet \u306f %u)</translation>\n@@ -3525,10 +3481,6 @@ rpcpassword=%s\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u63a5\u7d9a\u6bce\u306e\u6700\u5927\u9001\u4fe1\u30d0\u30c3\u30d5\u30a1 &lt;n&gt;*1000 \u30d0\u30a4\u30c8 (\u521d\u671f\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>\u5185\u8535\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3068\u4e00\u81f4\u3059\u308b\u30d6\u30ed\u30c3\u30af \u30c1\u30a7\u30fc\u30f3\u306e\u307f\u3092\u8a31\u53ef (\u521d\u671f\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u306b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u4ed8\u3051\u308b (\u521d\u671f\u5024: %u)</translation>\n@@ -3541,10 +3493,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>P2SH\u3067\u306a\u3044\u30de\u30eb\u30c1\u30b7\u30b0\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u30ea\u30ec\u30fc\u3059\u308b (\u521d\u671f\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u3092\u5b9a\u671f\u7684\u306b\u66f8\u304d\u51fa\u3059\u305f\u3081\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u8d70\u3089\u305b\u308b (\u521d\u671f\u5024: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb (\u521d\u671f\u5024: %s)</translation>\n@@ -3565,10 +3513,6 @@ rpcpassword=%s\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>RPC \u30b5\u30fc\u30d3\u30b9\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u8a2d\u5b9a (\u521d\u671f\u5024: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>\u30a6\u30a9\u30ec\u30c3\u30c8DB\u74b0\u5883\u5185\u306bDB_PRIVATE\u30d5\u30e9\u30b0\u3092\u8a2d\u5b9a\u3059\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a (\u521d\u671f\u5024: %s)</translation>\n@@ -3585,10 +3529,6 @@ rpcpassword=%s\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u9001\u4fe1\u6642\u306b\u672a\u691c\u8a3c\u306e\u304a\u3064\u308a\u3092\u4f7f\u7528\u3059\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>\u30c7\u30a3\u30b9\u30af\u304b\u3089\u30d6\u30ed\u30c3\u30af\u3092\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u306b\u7d42\u4e86\u3059\u308b (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>\u4e0d\u6b63\u306a\u30d4\u30a2\u3092\u5207\u65ad\u3059\u308b\u305f\u3081\u306e\u3057\u304d\u3044\u5024 (\u521d\u671f\u5024: %u)</translation>"
      },
      {
        "sha": "4c6ce13eff3e41aa3d7c71991c244d5f6fccd586",
        "filename": "src/qt/locale/bitcoin_ka.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ka.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ka.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ka.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ka\" version=\"2.1\">\n+<TS language=\"ka\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2214,10 +2214,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>\u10db\u10dd\u10ea\u10d4\u10db\u10e3\u10da \u10db\u10d8\u10e1\u10d0\u10db\u10d0\u10e0\u10d7\u10d6\u10d4 \u10db\u10d8\u10ef\u10d0\u10ed\u10d5\u10d0 \u10db\u10e3\u10d3\u10db\u10d8\u10d5\u10d0\u10d3 \u10db\u10d0\u10e1\u10d6\u10d4 \u10db\u10d8\u10e7\u10e3\u10e0\u10d0\u10d3\u10d4\u10d1\u10d8\u10d7. \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 [host]:port \u10e4\u10dd\u10e0\u10db\u10d0 IPv6-\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u10d2\u10d0\u10d3\u10d0\u10e1\u10d5\u10da\u10d0 \u10e0\u10d4\u10d2\u10e0\u10d4\u10e1\u10e3\u10da\u10d8 \u10e2\u10d4\u10e1\u10e2\u10d8\u10e0\u10d4\u10d1\u10d8\u10e1 \u10e0\u10d4\u10df\u10d8\u10db\u10e8\u10d8, \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10d8\u10e7\u10d4\u10dc\u10d4\u10d1\u10e1 \u10e1\u10de\u10d4\u10ea\u10d8\u10d0\u10da\u10e3\u10e0 \u10ef\u10d0\u10ed\u10d5\u10e1 \u10d1\u10da\u10dd\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d3\u10d0\u10e3\u10e7\u10dd\u10d5\u10dc\u10d4\u10d1\u10da\u10d8\u10d5\u10d8 \u10de\u10dd\u10d5\u10dc\u10d8\u10e1 \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10d4\u10d1\u10da\u10dd\u10d1\u10d8\u10d7.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u10d9\u10dd\u10db\u10d0\u10dc\u10d3\u10d8\u10e1 \u10e8\u10d4\u10e1\u10e0\u10e3\u10da\u10d4\u10d1\u10d0 \u10e1\u10d0\u10e4\u10e3\u10da\u10d8\u10e1 \u10e2\u10e0\u10d0\u10dc\u10e1\u10d0\u10e5\u10ea\u10d8\u10d8\u10e1 \u10ea\u10d5\u10da\u10d8\u10da\u10d4\u10d1\u10d8\u10e1\u10d0\u10e1 (%s \u10d9\u10dd\u10db\u10d0\u10dc\u10d3\u10d0\u10e8\u10d8 \u10e9\u10d0\u10dc\u10d0\u10ea\u10d5\u10da\u10d3\u10d4\u10d1\u10d0 TxID-\u10d8\u10d7)</translation>\n@@ -2322,10 +2318,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u10db\u10d8\u10e3\u10d7\u10d8\u10d7\u10d4\u10d7 \u10e1\u10d0\u10e4\u10e3\u10da\u10d8\u10e1 \u10e4\u10d0\u10d8\u10da\u10d8 (\u10d9\u10d0\u10e2\u10d0\u10da\u10dd\u10d2\u10e8\u10d8)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0 \u10e0\u10d4\u10d2\u10e0\u10d4\u10e1\u10e3\u10da\u10d8 \u10e2\u10d4\u10e1\u10e2\u10d8\u10e0\u10d4\u10d1\u10d8\u10e1 \u10d8\u10dc\u10e1\u10e2\u10e0\u10e3\u10db\u10d4\u10dc\u10e2\u10d4\u10d1\u10d8\u10e1\u10d0 \u10d3\u10d0 \u10de\u10e0\u10dd\u10d2\u10e0\u10d0\u10db\u10d4\u10d1\u10d8\u10e1 \u10e8\u10d4\u10db\u10e3\u10e8\u10d0\u10d5\u10d4\u10d1\u10d8\u10e1\u10d0\u10e1.</translation>\n-    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u10d1\u10da\u10dd\u10d9\u10d4\u10d1\u10d8\u10e1 \u10d5\u10d4\u10e0\u10d8\u10e4\u10d8\u10d9\u10d0\u10ea\u10d8\u10d0...</translation>"
      },
      {
        "sha": "5ee90406335ca96d7ce935c99620db7713c29acc",
        "filename": "src/qt/locale/bitcoin_kk_KZ.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_kk_KZ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_kk_KZ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_kk_KZ.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"kk_KZ\" version=\"2.1\">\n+<TS language=\"kk_KZ\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "5126e53f8e265236ba7b88e6c9b44f1fe4acd340",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "modified",
        "additions": 26,
        "deletions": 6,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"ko_KR\" version=\"2.1\">\n+<TS language=\"ko_KR\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\uc9c0\uac11 \uc8fc\uc18c\ub098 \uc774\ub984\uc744 \uc218\uc815\ud558\ub824\uba74 \uc6b0\ud074\ub9ad\ud558\uc138\uc694.</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\uc0c8 \uc8fc\uc18c \ub9cc\ub4e4\uae30</translation>\n@@ -89,7 +93,11 @@\n         <source>Exporting Failed</source>\n         <translation>\ub0b4\ubcf4\ub0b4\uae30 \uc2e4\ud328</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>%1\uc73c\ub85c \uc8fc\uc18c \ub9ac\uc2a4\ud2b8\ub97c \uc800\uc7a5\ud558\ub294 \ub3d9\uc548 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud574\uc8fc\uc138\uc694.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -476,6 +484,10 @@\n </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>\ucf54\uc778 \uc120\ud0dd</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>\uc218\ub7c9:</translation>\n@@ -894,6 +906,14 @@\n         <source>Map port using &amp;UPnP</source>\n         <translation>\uc0ac\uc6a9\uc911\uc778 UPnP \ud3ec\ud2b8 \ub9e4\ud551(&amp;U)</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n+        <translation>SOCKS5 \ud504\ub85d\uc2dc\ub97c \ud1b5\ud574 \ube44\ud2b8\ucf54\uc778 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Connect through SOCKS5 proxy (default proxy):</source>\n+        <translation>SOCKS5 \ud504\ub85d\uc2dc\ub97c \uac70\uccd0 \uc5f0\uacb0\ud569\ub2c8\ub2e4 (\uae30\ubcf8\uac12 \ud504\ub85d\uc2dc):</translation>\n+    </message>\n     <message>\n         <source>Proxy &amp;IP:</source>\n         <translation>\ud504\ub85d\uc2dc IP(&amp;I):</translation>\n@@ -1090,6 +1110,10 @@\n         <source>Amount</source>\n         <translation>\uac70\ub798\ub7c9</translation>\n     </message>\n+    <message>\n+        <source>Enter a Bitcoin address (e.g. %1)</source>\n+        <translation>\ube44\ud2b8\ucf54\uc778 \uc8fc\uc18c\ub97c \uc785\ub825\ud558\uae30 (\uc608. %1)</translation>\n+    </message>\n     <message>\n         <source>N/A</source>\n         <translation>\uc5c6\uc74c</translation>\n@@ -2402,10 +2426,6 @@\n         <source>RPC server options:</source>\n         <translation>RPC \uc11c\ubc84 \uc124\uc815</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>\ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \uba54\uc2dc\uc9c0 \ub9c8\ub2e4 \ubb34\uc791\uc704\ub85c 1\uc774 \ub5a8\uc5b4\uc9c4\ub2e4</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\ucd94\uc801\uc624\ub958 \uc815\ubcf4\ub97c degug.log \uc790\ub8cc\ub85c \ubcf4\ub0b4\ub294 \ub300\uc2e0 \ucf58\uc194\ub85c \ubcf4\ub0b4\uae30</translation>"
      },
      {
        "sha": "442d7c5d52f992c4041fb5b47e14d227e6dae4ff",
        "filename": "src/qt/locale/bitcoin_ky.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ky.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ky.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ky.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ky\" version=\"2.1\">\n+<TS language=\"ky\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "b1a69c9a9eb6dc1ef4363a355c65c56dedabc578",
        "filename": "src/qt/locale/bitcoin_la.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_la.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_la.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_la.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"la\" version=\"2.1\">\n+<TS language=\"la\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "4e468911dc4b63c28c5499f63bd48f1f14d28d25",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 65,
        "deletions": 1,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"lt\" version=\"2.1\">\n+<TS language=\"lt\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Spustel\u0117kite de\u0161in\u012fj\u012f klavi\u0161a norint keisti adres\u0105 arba etiket\u0119</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Sukurti nauj\u0105 adres\u0105</translation>\n@@ -25,6 +29,10 @@\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopijuoti adres\u0105</translation>\n     </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>I\u0161trinti pasirinkt\u0105 adres\u0105 i\u0161 s\u0105ra\u0161o</translation>\n+    </message>\n     <message>\n         <source>&amp;Export</source>\n         <translation>&amp;Eksportuoti</translation>\n@@ -33,6 +41,10 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Trinti</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Pasirinkite adres\u0105 kuriam si\u016bsite monetas</translation>\n+    </message>\n     <message>\n         <source>C&amp;hoose</source>\n         <translation>P&amp;asirinkti</translation>\n@@ -246,6 +258,10 @@\n         <source>&amp;Receiving addresses...</source>\n         <translation>&amp;Gaunami adresai...</translation>\n     </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>Atidaryti &amp;URI...</translation>\n+    </message>\n     <message>\n         <source>Bitcoin Core client</source>\n         <translation>Bitcoin Core klientas</translation>\n@@ -384,6 +400,10 @@\n </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>Monet\u0173 pasirinkimas</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>Kiekis:</translation>\n@@ -714,6 +734,10 @@\n         <source>none</source>\n         <translation>niekas</translation>\n     </message>\n+    <message>\n+        <source>Confirm options reset</source>\n+        <translation>Patvirtinti nustatym\u0173 atstatym\u0105</translation>\n+    </message>\n     <message>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>Nurodytas tarpinio serverio adresas negalioja.</translation>\n@@ -725,6 +749,14 @@\n         <source>Form</source>\n         <translation>Forma</translation>\n     </message>\n+    <message>\n+        <source>Available:</source>\n+        <translation>Galimi:</translation>\n+    </message>\n+    <message>\n+        <source>Pending:</source>\n+        <translation>Laukiantys:</translation>\n+    </message>\n     <message>\n         <source>Immature:</source>\n         <translation>Nepribrend\u0119:</translation>\n@@ -744,6 +776,10 @@\n         <source>URI handling</source>\n         <translation>URI apdorojimas</translation>\n     </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>Mok\u0117jimo siuntimas atmestas</translation>\n+    </message>\n     <message>\n         <source>Network request error</source>\n         <translation>Tinklo u\u017eklausos klaida</translation>\n@@ -820,6 +856,26 @@\n         <source>Current number of blocks</source>\n         <translation>Dabartinis blok\u0173 skai\u010dius</translation>\n     </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>Gauta</translation>\n+    </message>\n+    <message>\n+        <source>Direction</source>\n+        <translation>Kryptis</translation>\n+    </message>\n+    <message>\n+        <source>Version</source>\n+        <translation>Versija</translation>\n+    </message>\n+    <message>\n+        <source>Bytes Sent</source>\n+        <translation>Nusi\u0173sti baitai</translation>\n+    </message>\n+    <message>\n+        <source>Bytes Received</source>\n+        <translation>Gauti baitai</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Paskutinio bloko laikas</translation>\n@@ -864,13 +920,21 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>never</source>\n+        <translation>Niekada</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>\u017d&amp;ym\u0117:</translation>\n     </message>\n+    <message>\n+        <source>Clear</source>\n+        <translation>I\u0161valyti</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>Kopijuoti \u017eym\u0119</translation>"
      },
      {
        "sha": "23b846bd492f678dbae7669643e31a08b63ad91d",
        "filename": "src/qt/locale/bitcoin_lv_LV.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_lv_LV.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_lv_LV.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv_LV.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"lv_LV\" version=\"2.1\">\n+<TS language=\"lv_LV\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "73793482d674cd670b6469e36644a4a79d64381b",
        "filename": "src/qt/locale/bitcoin_mn.ts",
        "status": "modified",
        "additions": 61,
        "deletions": 1,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_mn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_mn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_mn.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,22 +1,70 @@\n-<TS language=\"mn\" version=\"2.1\">\n+<TS language=\"mn\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0428\u0438\u043d\u044d \u0445\u0430\u044f\u0433 \u043d\u044d\u044d\u0445</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>&amp;\u0428\u0438\u043d\u044d</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>\u041e\u0434\u043e\u043e\u0433\u043e\u043e\u0440 \u0441\u043e\u043d\u0433\u043e\u0433\u0434\u0441\u043e\u043d \u0431\u0430\u0439\u0433\u0430\u0430 \u0445\u0430\u044f\u0433\u0443\u0443\u0434\u044b\u0433 \u0441\u0430\u043d\u0443\u0443\u043b\u0430\u0445</translation>\n     </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>&amp;\u0425\u0443\u0443\u043b\u0430\u0445</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>&amp;\u0425\u0430\u0430\u0445</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>\u0425\u0430\u044f\u0433\u0438\u0439\u0433 &amp;\u0425\u0443\u0443\u043b\u0431\u0430\u0440\u043b\u0430\u0445</translation>\n     </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>\u041e\u0434\u043e\u043e \u0441\u043e\u043d\u0433\u043e\u0433\u0434\u0441\u043e\u043d \u0431\u0430\u0439\u0433\u0430\u0430 \u0445\u0430\u044f\u0433\u0443\u0443\u0434\u044b\u0433 \u0436\u0430\u0433\u0441\u0430\u0430\u043b\u0442\u0430\u0430\u0441 \u0443\u0441\u0442\u0433\u0430\u0445</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u0421\u043e\u043d\u0433\u043e\u0433\u0434\u0441\u043e\u043d \u0442\u0430\u0431 \u0434\u044d\u044d\u0440\u0445\u0438 \u0434\u0430\u0442\u0430-\u0433 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043b\u043e\u0445</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0434\u043b\u043e\u0445</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;\u0423\u0441\u0442\u0433\u0430\u0445</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u0417\u043e\u043e\u0441\u043d\u0443\u0443\u0434\u044b\u0433 \u0438\u043b\u0433\u044d\u044d\u0445 \u0445\u0430\u044f\u0433\u0438\u0439\u0433 \u0441\u043e\u043d\u0433\u043e\u043d\u043e \u0443\u0443</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u0417\u043e\u043e\u0441\u043d\u0443\u0443\u0434\u044b\u0433 \u0445\u04af\u043b\u044d\u044d\u043d \u0430\u0432\u0430\u0445 \u0445\u0430\u044f\u0433\u0438\u0439\u0433 \u0441\u043e\u043d\u0433\u043e\u043d\u043e \u0443\u0443</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0418\u043b\u0433\u044d\u044d\u0445 \u0445\u0430\u044f\u0433\u0443\u0443\u0434</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u0425\u04af\u043b\u044d\u044d\u043d \u0430\u0432\u0430\u0445 \u0445\u0430\u044f\u0433</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u042d\u0434\u0433\u044d\u044d\u0440 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0445\u0430\u044f\u0433\u0443\u0443\u0434 \u043d\u044c \u0438\u043b\u0433\u044d\u044d\u0445 \u0445\u0430\u044f\u0433\u0443\u0443\u0434. \u0425\u04af\u043b\u044d\u044d\u043d \u0430\u0432\u0430\u0445 \u0445\u0430\u044f\u0433 \u0431\u043e\u043b\u043e\u043d \u0442\u043e\u043e \u0445\u044d\u043c\u0436\u044d\u044d\u0433 \u0438\u043b\u0433\u044d\u044d\u0445\u044d\u044d\u0441\u044d\u044d \u04e9\u043c\u043d\u04e9 \u0441\u0430\u0439\u043d \u043d\u044f\u0433\u0442\u0430\u043b\u0436 \u04af\u0437\u044d\u0436 \u0431\u0430\u0439\u043d\u0430 \u0443\u0443</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u042d\u0434\u0433\u044d\u044d\u0440 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0445\u0430\u044f\u0433\u0443\u0443\u0434 \u043d\u044c \u0445\u04af\u043b\u044d\u044d\u043d \u0430\u0432\u0430\u0445 \u0445\u0430\u044f\u0433\u0443\u0443\u0434. \u0413\u04af\u0439\u043b\u0433\u044d\u044d \u0431\u043e\u043b\u0433\u043e\u043d\u0434 \u0448\u0438\u043d\u044d\u044d\u0440 \u0445\u0430\u044f\u0433 \u04af\u04af\u0441\u0433\u044d\u0445\u0438\u0439\u0433 \u0431\u0438\u0434 \u0441\u0430\u043d\u0430\u043b \u0431\u043e\u043b\u0433\u043e\u0436 \u0431\u0430\u0439\u043d\u0430.</translation>\n+    </message>\n     <message>\n         <source>Copy &amp;Label</source>\n         <translation>&amp;\u0428\u043e\u0448\u0433\u044b\u0433 \u0445\u0443\u0443\u043b\u0431\u0430\u0440\u043b\u0430\u0445</translation>\n@@ -25,6 +73,10 @@\n         <source>&amp;Edit</source>\n         <translation>&amp;\u0472\u0473\u0440\u0447\u043b\u0473\u0445</translation>\n     </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0445\u0438\u0439\u0445 \u0445\u0430\u044f\u0433\u0443\u0443\u0434\u044b\u043d \u0436\u0430\u0433\u0441\u0430\u0430\u043b\u0442</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u0422\u0430\u0441\u043b\u0430\u043b\u0430\u0430\u0440 \u0442\u0443\u0441\u0433\u0430\u0430\u0440\u043b\u0430\u0433\u0434\u0441\u0430\u043d \u0445\u04af\u0441\u043d\u044d\u0433\u0442\u044d\u043d \u0444\u0430\u0439\u043b (.csv)</translation>\n@@ -959,6 +1011,14 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0434\u043b\u043e\u0445</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u0421\u043e\u043d\u0433\u043e\u0433\u0434\u0441\u043e\u043d \u0442\u0430\u0431 \u0434\u044d\u044d\u0440\u0445\u0438 \u0434\u0430\u0442\u0430-\u0433 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043b\u043e\u0445</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "5e10c80aff7f9d03ce62e8cd9d1012b5331edbe3",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ms_MY\" version=\"2.1\">\n+<TS language=\"ms_MY\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "385f038d4602734b31976d3dfaff4a67d15c8bbc",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 73,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"nb\" version=\"2.1\">\n+<TS language=\"nb\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2816,10 +2816,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Bind til angitt adresse. Bruk [vertsmaskin]:port notasjon for IPv6</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Ratebegrens gratistransaksjoner kontinuerlig til &lt;n&gt;*1000 bytes per minutt (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Slett alle transaksjoner i lommeboken og gjenopprett kun de delene av blokkjeden gjennom -rescan ved oppstart</translation>\n@@ -2828,18 +2824,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuert under MIT programvarelisensen, se medf\u00f8lgende fil COPYING eller &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>G\u00e5 til modus for regresjonstesting, som bruker en spesiell blokkjede der blokker kan bli l\u00f8st momentant.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Kj\u00f8r kommando n\u00e5r en lommeboktransaksjon endres (%s i kommando er erstattet med TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>I denne modusen kontrollerer -genproclimit hvor mange blokker som genereres \u00f8yeblikkelig.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Maksimalt samlede gebyrer til \u00e5 bruke i en enkelt lommeboktransaksjon; settes dette for lavt kan store transaksjoner kanskje avbrytes (standardverdi: %s)</translation>\n@@ -2860,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Ute av stand til \u00e5 binde til %s p\u00e5 denne datamaskinen. Bitcoin Core kj\u00f8rer sannsynligvis allerede.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ADVARSEL: unormalt h\u00f8yt antall blokker generert, %d blokker mottatt de siste %d timene (%d forventet)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ADVARSEL: kontroller nettverkstilkoblingen, mottok %d blokker i de siste %d timene (%d forventet)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Advarsel: -paytxfee er satt veldig h\u00f8yt! Dette er transaksjonsgebyret du betaler n\u00e5r du sender transaksjoner.</translation>\n@@ -2996,10 +2992,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Angi lommebokfil (inne i datamappe)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Dette er tiltenkt verkt\u00f8y for regresjonstesting og apputvikling.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Bruk UPnP for \u00e5 sette opp lytteport (standardverdi: %u)</translation>\n@@ -3076,10 +3068,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Gebyrer (i BTC/Kb) mindre enn dette anses som null gebyr for videresending (standardverdi: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Gebyrer (i BTC/Kb) mindre enn dette anses som null gebyr for laging av transaksjoner (standardverdi: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Hvis paytxfee ikke er angitt, inkluderer da nok i gebyr til at transaksjoner gjennomsnittligt bekreftes innen n blokker (standardverdi: %u)</translation>\n@@ -3104,10 +3092,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Bruk tilfeldig identitet for hver proxytilkobling. Dette muliggj\u00f8r TOR stream isolasjon (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>Krev h\u00f8y prioritet for videresending av gratistransaksjoner eller transaksjoner med lavt gebyr (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Sett maksimum st\u00f8rrelse for transaksjoner med h\u00f8y prioritet / lavt gebyr, i bytes (standardverdi: %d)</translation>\n@@ -3176,10 +3160,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiverer beste kjede...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Tillat selvsignerte rotsertifikater (standardverdi: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>Kan ikke kj\u00f8re med en lommebok i beskj\u00e6ringsmodus.</translation>\n@@ -3272,18 +3252,14 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC-st\u00f8tte for persistente HTTP-forbindelser (standardverdi: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Slumpvis dropp 1 av hver &lt;n&gt; nettverksmeldinger</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Slumpvis bland 1 av hver &lt;n&gt; nettverksmeldinger</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Gjenopprett blokkjedeindeks fra gjeldende blk000??.dat filer ved oppstart</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Motta og vis P2P nettverksvarsler (standardvalg: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send spor-/feils\u00f8kingsinformasjon til konsollen istedenfor filen debug.log</translation>\n@@ -3428,18 +3404,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = behold metadata for transaksjon som f. eks. kontoeier og informasjon om betalingsanmodning, 2 = dropp metadata for transaksjon)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Overf\u00f8r aktiviteten i databasen fra minnelageret til loggen p\u00e5 harddisken for hver &lt;n&gt; megabytes (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hvor grundig blokkverifiseringen til -checkblocks er (0-4, standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Logg transaksjonsprioritet og gebyr per kB under blokkutvinning (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Oppretthold en full transaksjonsindeks, brukt av getrawtransaction RPC-kall (standardverdi: %u)</translation>\n@@ -3468,18 +3436,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Alltid s\u00f8k etter nodeadresser via DNS-oppslag (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Sl\u00e5 av sikkerhetsmodus, overstyr en virkelig sikkerhetsmodushendelse (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Feil ved lasting av wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Tving sikkerhetsmodus (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Generer mynter (standardverdi: %u)</translation>\n@@ -3496,10 +3456,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ugyldig -proxy adresse: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Begrens st\u00f8rrelsen p\u00e5 hurtigbufferen for signaturer til &lt;n&gt; oppf\u00f8ringer (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Lytt etter JSON-RPC tilkoblinger p\u00e5 &lt;port&gt; (standardverdi: %u eller testnett: %u)</translation>\n@@ -3524,10 +3480,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maks sendebuffer per forbindelse, &lt;n&gt;*1000 bytes (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Aksepter kun blokkjeden som stemmer med innebygde sjekkpunkter (standardvalg: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Sett inn tidsstempel i front av feils\u00f8kingsdata (standardverdi: %u)</translation>\n@@ -3540,10 +3492,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Videresend ikke-P2SH multisig (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Kj\u00f8r en tr\u00e5d som skriver lommeboken til disk periodisk (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Fil for tjenersertifikat (standardverdi: %s)</translation>\n@@ -3564,10 +3512,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Sett antall tr\u00e5der til betjening av RPC-kall (standardverdi: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Setter flagget DB_PRIVATE i milj\u00f8et til lommebokdatabasen (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Angi konfigurasjonsfil (standardverdi: %s)</translation>\n@@ -3584,10 +3528,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Bruk ubekreftet veksel ved sending av transaksjoner (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Avslutt etter import av blokker fra disk (standardverdi: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Grenseverdi for \u00e5 koble fra noder med d\u00e5rlig oppf\u00f8rsel (standardverdi: %u)</translation>"
      },
      {
        "sha": "7999e263e4b7264c8492b0d6291331f39a77629b",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 108,
        "deletions": 61,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"nl\" version=\"2.1\">\n+<TS language=\"nl\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -398,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Over Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Wijzig configuratieopties voor Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Toon de lijst met gebruikt verzend adressen en labels</translation>\n@@ -972,6 +976,10 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>IP-adres van de proxy (bijv. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimaliseren in plaats van de applicatie af te sluiten wanneer het venster is afgesloten. Als deze optie is ingeschakeld, zal de toepassing pas worden afgesloten na het selecteren van Exit in het menu.</translation>\n+    </message>\n     <message>\n         <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n         <translation>Stel hier de taal van de applicatie in. Deze instelling zal van kracht worden na het herstarten van de applicatie.</translation>\n@@ -1258,10 +1266,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>Betalingsverzoek-bestand kan niet gelezen of verwerkt worden! Dit kan veroorzaakt worden door een ongeldig betalingsverzoek-bestand.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Betalingsverzoek verlopen.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>Niet-geverifieerde betalingsverzoeken naar aangepaste betaling scripts worden niet ondersteund.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Ongeldig betalingsverzoek.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Restitutie van %1</translation>\n@@ -1422,6 +1438,10 @@\n         <source>Current number of blocks</source>\n         <translation>Huidig aantal blokken</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Open het Bitcoin Core debug logbestand van de huidige gegevens directory. Dit kan enkele seconden duren voor grote logbestanden.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Ontvangen</translation>\n@@ -1534,6 +1554,10 @@\n         <source>Clear console</source>\n         <translation>Maak console leeg</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Welkom op de Bitcoin Core RPC console.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Gebruik de pijltjestoetsen om door de geschiedenis te navigeren, en &lt;b&gt;Ctrl-L&lt;/b&gt; om het scherm leeg te maken.</translation>\n@@ -1830,6 +1854,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>Als de aangepaste toeslag is ingesteld op 1000 satoshis en de transactie is maar 250 bytes, dan wordt bij \"per kilobyte\" 250 satoshis aan toeslag berekend, terwijl er bij \"totaal tenminste\" 1000 satoshis worden berekend. Voor transacties die groter zijn dan een kilobyte, wordt in beide gevallen per kilobyte de toeslag berekend.</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Verbergen</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>totaal ten minste</translation>\n@@ -1970,10 +1998,22 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>De transactie was afgewezen. Dit kan gebeuren als u eerder uitgegeven munten opnieuw wilt versturen, zoals wanneer u een kopie van uw wallet.dat heeft gebruikt en in de kopie deze munten zijn gemarkeerd als uitgegeven, maar in de huidige nog niet.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Betalingsverzoek verlopen.</translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Betaal alleen de minimale transactiekosten van %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Het adres van de ontvanger is niet geldig. Gelieve opnieuw te controleren..</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Dubbel adres gevonden: adressen mogen maar \u00e9\u00e9n keer worden gebruikt worden.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Waarschuwing: Ongeldig Bitcoin adres</translation>\n@@ -2049,6 +2089,14 @@\n         <source>Message:</source>\n         <translation>Bericht:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Dit is een niet-geverifieerd betalingsverzoek.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Dit is een geverifieerd betalingsverzoek.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Vul een label voor dit adres in om het aan de lijst met gebruikte adressen toe te voegen</translation>\n@@ -2087,6 +2135,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>O&amp;nderteken Bericht</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>U kunt berichten/overeenkomsten ondertekenen met uw adres om te bewijzen dat u Bitcoins kunt versturen. Wees voorzichtig met het ondertekenen van iets vaags of willekeurigs, omdat phishing-aanvallen u kunnen proberen te misleiden tot het ondertekenen van overeenkomsten om uw identiteit aan hen toe te vertrouwen. Onderteken alleen volledig gedetailleerde verklaringen voordat u akkoord gaat.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>Het Bitcoin adres om bericht mee te ondertekenen</translation>\n@@ -2740,18 +2792,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Uitgegeven onder de MIT software licentie, zie het bijgevoegde bestand COPYING of &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Schakel regressietest-modus in, die een speciale blokketen gebruikt waarin blokken onmiddellijk opgelost kunnen worden.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Voer opdracht uit zodra een portemonneetransactie verandert (%s in cmd wordt vervangen door TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>In deze modus, -genproclimit controleert hoeveel blokken er onmiddellijk worden gegenereerd.</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Kies het aantal script verificatie processen (%u tot %d, 0 = auto, &lt;0 = laat dit aantal kernen vrij, standaard: %d)</translation>\n@@ -2764,6 +2808,10 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Niet in staat om %s te verbinden op deze computer. Bitcoin Core draait waarschijnlijk al.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>WAARSCHUWING: controleer uw netwerkverbinding, %d blokken ontvangen in de laatste %d uren (%d verwacht)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Waarschuwing: -paytxfee is zeer hoog ingesteld.  Dit zijn de transactiekosten die u betaalt bij het versturen van een transactie.</translation>\n@@ -2892,10 +2940,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Specificeer het portemonnee bestand (vanuit de gegevensmap)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Dit is bedoeld voor regressie test toepassingen en applicatie onwikkeling.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Gebruik UPnP om de luisterende poort te mappen (standaard: %u)</translation>\n@@ -2916,6 +2960,10 @@\n         <source>Wallet options:</source>\n         <translation>Portemonnee instellingen:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Waarschuwing: Deze versie is verouderd; upgraden verplicht!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Om -txindex te kunnen veranderen dient u de database opnieuw te bouwen met gebruik van -reindex.</translation>\n@@ -2964,10 +3012,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Toeslagen (in BTC/Kb) kleiner dan dit worden beschouwd als geen vergoeding (voor doorgeven) (standaard: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Toeslagen (in BTC/Kb) kleiner dan dit worden beschouwd als geen vergoeding transactieaanmaak (standaard: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Als paytxfee niet is ingesteld, het pakket voldoende vergoeding zodat transacties beginnen bevestiging gemiddeld binnen in blokken (default: %u)</translation>\n@@ -2993,10 +3037,37 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Stel het aantal threads in voor het genereren van coins indien ingesteld (-1 = alle kernen, standaard: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>Het transactiebedrag is te klein om te versturen nadat de vergoeding in mindering is gebracht</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Dit product bevat software dat ontwikkeld is door het OpenSSL Project voor gebruik in de OpenSSL Toolkit &lt;https://www.openssl.org/&gt; en cryptografische software geschreven door Eric Young en UPnP software geschreven door Thomas Bernard.</translation>\n     </message>\n+    <message>\n+        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n+%s\n+It is recommended you use the following random password:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(you do not need to remember this password)\n+The username and password MUST NOT be the same.\n+If the file does not exist, create it with owner-readable-only file permissions.\n+It is also recommended to set alertnotify so you are notified of problems;\n+for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n+</source>\n+        <translation>Om bitcoind of de -server optie naar bitcoin-gt te gebruiken, dient u een rpcwachtwoord in te stellen in het configuratiebestand:\n+ %s\n+Wij raden u aan om het volgende wachtwoord willekeurig te gebruiken: \n+rpcuser=bitcoinrpc \n+rpcpassword=%s \n+(u hoeft dit wachtwoord niet te onthouden)\n+De gebruikersnaam en het wachtwoorden moeten NIET hetzelfde zijn. \n+Indien het bestand niet bestaat, maak het bestand aan met bestandsrechten: alleen lezen voor eigenaar.\n+Het is ook aan te raden om een alarmnotificatie in te stellen, zodat u op de hoogte bent van de problemen;\n+Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</translation>\n+    </message>\n     <message>\n         <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n         <translation>Let op: -maxtxfee is erg hoog ingesteld! Transactiekosten van dergelijke groottes kunnen in een enkele transactie worden betaald.</translation>\n@@ -3009,10 +3080,18 @@\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Goedgekeurde peers kunnen niet ge-DoS-banned worden en hun transacties worden altijd doorgestuurd, zelfs als ze reeds in de mempool aanwezig zijn, nuttig voor bijv. een gateway</translation>\n     </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(standaard: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>Accepteer publieke REST-requests (standaard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>Beste reeks activeren...</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Kan -whitebind adres niet herleiden: '%s'</translation>\n@@ -3101,14 +3180,6 @@\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC ondersteuning voor HTTP persisten verbindingen (default: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Laat willekeurig 1 elke &lt;n&gt; netwerkberichten vallen</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Fuzz willekeurig 1 van elke &lt;n&gt; netwerkberichten</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Stuur trace/debug-info naar de console in plaats van het debug.log bestand</translation>\n@@ -3145,6 +3216,10 @@\n         <source>Start minimized</source>\n         <translation>Geminimaliseerd starten</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>Het transactiebedrag is te klein om de vergoeding te betalen</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Dit is experimentele software.</translation>\n@@ -3165,6 +3240,10 @@\n         <source>Transaction too large</source>\n         <translation>Transactie te groot</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>UI Opties:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Niet in staat om aan %s te binden op deze computer (bind gaf error %s)</translation>\n@@ -3245,18 +3324,10 @@\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = behoudt tx meta data bijv. account eigenaar en betalingsverzoek informatie, 2. sla tx meta data niet op)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Leeg database-activiteit uit de geheugen pool naar schijf log elke &lt;n&gt; megabytes (standaard: %u) </translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hoe grondig de blokverificatie van -checkblocks is (0-4, standaard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Log transactieprioriteit en -kosten per kB bij het mijnen van blokken (standaard: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Onderhoud een volledige transactieindex, gebruikt door de getrawtransaction rpc call (standaard: %u)</translation>\n@@ -3281,18 +3352,10 @@\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Vind anderen door middel van een DNS-naslag (standaard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Veilige modus uitschakelen, hef een echte veilige modus gebeurtenis uit (default: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Fout bij laden wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Forceer veilige modus (default: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Genereer munten (standaard: %u)</translation>\n@@ -3309,10 +3372,6 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ongeldig -proxy adres: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Limiteer grootte van de handtekening cache tot &lt;n&gt; entries (default: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Luister naar JSON-RPC-verbindingen op poort &lt;port&gt; (standaard: %u of testnet: %u)</translation>\n@@ -3325,6 +3384,10 @@\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Onderhoud maximaal &lt;n&gt; verbindingen naar peers (standaard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Laat de portemonnee transacties uitsturen</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maximum per-connectie ontvangstbuffer, &lt;n&gt;*1000 bytes (standaard: %u)</translation>\n@@ -3333,10 +3396,6 @@\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maximum per-connectie zendbuffer, &lt;n&gt;*1000 bytes (standaard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Accepteer alleen blokkenketen die overeenkomt met de ingebouwde checkpoints (standaard: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Prepend debug output met tijdstempel (standaard: %u)</translation>\n@@ -3349,10 +3408,6 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Draai een proces om de wallet periodiek te flushen (default: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Certificaat-bestand voor server (standaard: %s)</translation>\n@@ -3373,10 +3428,6 @@\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Stel het aantal threads in om RPC-aanvragen mee te bedienen (standaard: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Plaatst de DB_PRIVATE vlag in de wallet db omgeving (default: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Specificeer configuratie bestand (standaard: %s)</translation>\n@@ -3393,10 +3444,6 @@\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Besteed onbevestigd wisselgeld bij het versturen van transacties (standaard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Stop uitvoeren na het importeren van blokken van de schijf (standaard: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Drempel om verbinding te verbreken naar zich misdragende peers (standaard: %u)</translation>"
      },
      {
        "sha": "4939dff4b037f6659f2f2af3141aeb2f149230cb",
        "filename": "src/qt/locale/bitcoin_pam.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pam.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pam.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pam.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"pam\" version=\"2.1\">\n+<TS language=\"pam\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>I-right click ban alilan ing address o libel</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Maglalang kang bayung address</translation>"
      },
      {
        "sha": "5bc7df0aca8359d5876866e31c62f25a0ea34534",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 472,
        "deletions": 38,
        "changes": 510,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pl\" version=\"2.1\">\n+<TS language=\"pl\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Jeste\u015b pewien, \u017ce chcesz zaszyfrowa\u0107 sw\u00f3j portfel?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Program Bitcoin Core zamknie si\u0119, aby doko\u0144czy\u0107 proces szyfrowania. Pami\u0119taj, \u017ce szyfrowanie portfela nie zabezpiecza w pe\u0142ni Twoich bitcoin\u00f3w przed kradzie\u017c\u0105 przez wirusy lub trojany mog\u0105ce zainfekowa\u0107 Tw\u00f3j komputer.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>WA\u017bNE: Wszystkie wykonane wcze\u015bniej kopie pliku portfela powinny by\u0107 zamienione na nowe, szyfrowane pliki. Z powod\u00f3w bezpiecze\u0144stwa, poprzednie kopie nieszyfrowanych plik\u00f3w portfela stan\u0105 si\u0119 bezu\u017cyteczne jak tylko zaczniesz korzysta\u0107 z nowego, szyfrowanego portfela.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Wprowad\u017a nowe has\u0142o do portfela.&lt;br/&gt;Prosz\u0119 u\u017cywa\u0107 has\u0142a z\u0142o\u017conego z &lt;b&gt;10 lub wi\u0119cej losowych znak\u00f3w&lt;/b&gt; lub &lt;b&gt;o\u015bmiu lub wi\u0119cej s\u0142\u00f3w.&lt;/b&gt;</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Podaj stare i nowe has\u0142o do portfela.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>Szyfrowanie portfela nie powiod\u0142o si\u0119</translation>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;O Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Zmie\u0144 opcje konfiguracji dla Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Poka\u017c list\u0119 adres\u00f3w i etykiet u\u017cytych do wysy\u0142ania</translation>\n@@ -410,14 +422,34 @@\n         <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Poka\u017c pomoc Rdzenia Bitcoin, aby zobaczy\u0107 list\u0119 wszystkich opcji linii polece\u0144</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n active connection(s) to Bitcoin network</source>\n+        <translation><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform></translation>\n+    </message>\n     <message>\n         <source>No block source available...</source>\n         <translation>Brak dost\u0119pnych \u017ar\u00f3de\u0142 blok\u00f3w...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n godzin</numerusform><numerusform>%n godzin</numerusform><numerusform>%n godzin</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n tygodni</numerusform><numerusform>%n tygodni</numerusform><numerusform>%n tygodni</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 i %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n lat</numerusform><numerusform>%n lat</numerusform><numerusform>%n lat</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 wstecz</translation>\n@@ -450,6 +482,36 @@\n         <source>Catching up...</source>\n         <translation>Synchronizuj\u0119 si\u0119...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Data: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Kwota: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Typ: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Etykieta: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adres: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Transakcja wys\u0142ana</translation>\n@@ -648,6 +710,18 @@\n         <source>none</source>\n         <translation>\u017caden</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Ta etykieta staje si\u0119 czerwona, kiedy transakcja jest wi\u0119ksza ni\u017c 1000 bajt\u00f3w.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Ta etykieta jest czerwona, je\u017celi priorytet jest mniejszy ni\u017c \"\u015bredni\"</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Etykieta staje si\u0119 czerwona kiedy kt\u00f3rykolwiek odbiorca otrzymuje kwot\u0119 mniejsz\u0105 ni\u017c %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Waha si\u0119 +/- %1 satoshi na wej\u015bcie.</translation>\n@@ -832,7 +906,15 @@\n         <source>Error</source>\n         <translation>B\u0142\u0105d</translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>(of %n GB needed)</source>\n+        <translation><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -890,6 +972,22 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Adres IP serwera proxy (np. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimalizuje zamiast zako\u0144czy\u0107 dzia\u0142anie programu przy zamykaniu okna. Kiedy ta opcja jest w\u0142\u0105czona, program zako\u0144czy dzia\u0142anie po wybieraniu Zamknij w menu.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>Mo\u017cna tu ustawi\u0107 j\u0119zyk interfejsu uzytkownika. \u017beby ustawienie przynios\u0142o skutek trzeba uruchomi\u0107 ponownie Bitcoin.</translation>\n+    </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation>Zewn\u0119trzne URL podgl\u0105du transakcji (np. eksplorator blok\u00f3w), kt\u00f3re b\u0119d\u0105 wy\u015bwietla\u0142y si\u0119 w menu kontekstowym, w zak\u0142adce transakcji. %s b\u0119dzie zamieniany w adresie na hash transakcji. Oddziel wiele adres\u00f3w pionow\u0105 kresk\u0105 |.</translation>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation>Zewn\u0119trzny URL podgl\u0105du transakcji</translation>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation>Aktywne opcje linii komend, kt\u00f3re nadpisuj\u0105 powy\u017csze opcje:</translation>\n@@ -906,6 +1004,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Sie\u0107</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Automatycznie uruchamia Bitcoin po zalogowaniu do systemu.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>Uruchamiaj Bitcoin wraz z zalogowaniem do &amp;systemu</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = automatycznie, &lt;0 = zostaw tyle wolnych rdzeni)</translation>\n@@ -922,6 +1028,10 @@\n         <source>Enable coin &amp;control features</source>\n         <translation>W\u0142\u0105cz funk&amp;cje kontoli monet</translation>\n     </message>\n+    <message>\n+        <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n+        <translation>Je\u017celi wy\u0142\u0105czysz mo\u017cliwo\u015b\u0107 wydania niezatwierdzonej wydanej reszty, reszta z transakcji nie b\u0119dzie mog\u0142a zosta\u0107 wykorzystana, dop\u00f3ki ta transakcja nie b\u0119dzie mia\u0142a przynajmniej jednego potwierdzenia. To tak\u017ce ma wp\u0142yw na obliczanie Twojego salda.</translation>\n+    </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n         <translation>Wydaj niepotwierdzon\u0105 re&amp;szt\u0119</translation>\n@@ -1014,6 +1124,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Wymagany restart programu, aby uaktywni\u0107 zmiany.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>Program zostanie wy\u0142\u0105czony. Czy chcesz kontynuowa\u0107?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Ta zmiana mo\u017ce wymaga\u0107 ponownego uruchomienia klienta.</translation>\n@@ -1136,14 +1250,50 @@\n         <source>Payment request fetch URL is invalid: %1</source>\n         <translation>URL pobrania \u017c\u0105dania zap\u0142aty jest nieprawid\u0142owe: %1</translation>\n     </message>\n+    <message>\n+        <source>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n+        <translation>URI nie mo\u017ce zosta\u0107 przetworzony! Mo\u017ce to by\u0107 spowodowane nieprawid\u0142owym adresem Bitcoin lub uszkodzonymi parametrami URI.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request file handling</source>\n+        <translation>Przechwytywanie plik\u00f3w \u017c\u0105dania p\u0142atno\u015bci</translation>\n+    </message>\n+    <message>\n+        <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n+        <translation>Plik\u00f3w \u017c\u0105dania p\u0142atno\u015bci nie mo\u017ce zosta\u0107 odczytany. Mog\u0142o to by\u0107 spowodowane nieprawid\u0142owym plikiem \u017c\u0105dania p\u0142atno\u015bci.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u017b\u0105danie p\u0142atno\u015bci up\u0142yn\u0119\u0142o.</translation>\n+    </message>\n+    <message>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation>Niezweryfikowane \u017c\u0105dania p\u0142atno\u015bci do w\u0142asnych skrypt\u00f3w p\u0142atno\u015bci s\u0105 niewspierane.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Nieprawid\u0142owe \u017c\u0105danie p\u0142atno\u015bci</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Zwrot z %1</translation>\n     </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>\u017b\u0105danie p\u0142atno\u015bci %1 jest zbyt du\u017ce (%2 bajt\u00f3w, dozwolone %3 bajt\u00f3w).</translation>\n+    </message>\n+    <message>\n+        <source>Payment request DoS protection</source>\n+        <translation>Zabezpieczenie \u017c\u0105dania p\u0142atno\u015bci przed atakiem DoS</translation>\n+    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>B\u0142\u0105d komunikacji z %1 : %2</translation>\n     </message>\n+    <message>\n+        <source>Payment request cannot be parsed!</source>\n+        <translation>\u017b\u0105danie p\u0142atno\u015bci nie mo\u017ce zosta\u0107 przetworzone.</translation>\n+    </message>\n     <message>\n         <source>Bad response from server %1</source>\n         <translation>B\u0142\u0119dna odpowied\u017a z serwera %1</translation>\n@@ -1159,6 +1309,14 @@\n </context>\n <context>\n     <name>PeerTableModel</name>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>Aplikacja kliencka</translation>\n+    </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>W\u0119ze\u0142/Us\u0142ugi</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Czas odpowiedzi</translation>\n@@ -1280,6 +1438,10 @@\n         <source>Current number of blocks</source>\n         <translation>Aktualna liczba blok\u00f3w</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Otw\u00f3rz plik logowania debugowania Bitcoin Core z obecnego katalogu z danymi. Mo\u017ce to potrwa\u0107 kilka sekund przy wi\u0119kszych plikach.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Otrzymane</translation>\n@@ -1288,6 +1450,10 @@\n         <source>Sent</source>\n         <translation>Wys\u0142ane</translation>\n     </message>\n+    <message>\n+        <source>&amp;Peers</source>\n+        <translation>&amp;W\u0119z\u0142y</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>Wybierz w\u0119ze\u0142 \u017ceby zobaczy\u0107 szczeg\u00f3\u0142y.</translation>\n@@ -1300,6 +1466,10 @@\n         <source>Version</source>\n         <translation>Wersja</translation>\n     </message>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>Aplikacja kliencka</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>Us\u0142ugi</translation>\n@@ -1308,10 +1478,26 @@\n         <source>Starting Height</source>\n         <translation>Pocz\u0105tkowa wysoko\u015b\u0107</translation>\n     </message>\n+    <message>\n+        <source>Sync Height</source>\n+        <translation>Zsynchronizowana wysoko\u015b\u0107</translation>\n+    </message>\n+    <message>\n+        <source>Ban Score</source>\n+        <translation>Punkty karne</translation>\n+    </message>\n     <message>\n         <source>Connection Time</source>\n         <translation>Czas po\u0142\u0105czenia</translation>\n     </message>\n+    <message>\n+        <source>Last Send</source>\n+        <translation>Ostatnio wys\u0142ano</translation>\n+    </message>\n+    <message>\n+        <source>Last Receive</source>\n+        <translation>Ostatnio odebrano</translation>\n+    </message>\n     <message>\n         <source>Bytes Sent</source>\n         <translation>Bajt\u00f3w wys\u0142ano</translation>\n@@ -1324,6 +1510,10 @@\n         <source>Ping Time</source>\n         <translation>Czas odpowiedzi</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Przesuni\u0119cie czasu</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Czas ostatniego bloku</translation>\n@@ -1368,6 +1558,10 @@\n         <source>Clear console</source>\n         <translation>Wyczy\u015b\u0107 konsol\u0119</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Witaj w konsoli Bitcoin Core RPC.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>U\u017cyj strza\u0142ek do przewijania historii i &lt;b&gt;Ctrl-L&lt;/b&gt; aby wyczy\u015bci\u0107 ekran</translation>\n@@ -1435,6 +1629,10 @@\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation>U\u017cyj jednego z poprzednio u\u017cytych adres\u00f3w odbiorczych. Podczas ponownego u\u017cywania adres\u00f3w wyst\u0119puj\u0105 problemy z bezpiecze\u0144stwem i prywatno\u015bci\u0105. Nie korzystaj z tej opcji, chyba \u017ce odtwarzasz \u017c\u0105danie p\u0142atno\u015bci wykonane ju\u017c wcze\u015bniej.</translation>\n     </message>\n+    <message>\n+        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</source>\n+        <translation>Opcjonalna wiadomo\u015b\u0107 do do\u0142\u0105czenia do \u017c\u0105dania p\u0142atno\u015bci, kt\u00f3ra b\u0119dzie wy\u015bwietlana, gdy \u017c\u0105danie zostanie otwarte. Uwaga: wiadomo\u015b\u0107 ta nie zostanie wys\u0142ana wraz z p\u0142atno\u015bci\u0105 w sieci Bitcoin.</translation>\n+    </message>\n     <message>\n         <source>An optional label to associate with the new receiving address.</source>\n         <translation>Opcjonalna etykieta do skojarzenia z nowym adresem odbiorczym.</translation>\n@@ -1652,6 +1850,22 @@\n         <source>per kilobyte</source>\n         <translation>za kilobajt</translation>\n     </message>\n+    <message>\n+        <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n+        <translation>Je\u017celi w\u0142asna op\u0142ata zostanie ustawiona na 1000 satoshi, a transakcja b\u0119dzie mia\u0142a tylko 250 bajt\u00f3w, to \"za kilobajt\" p\u0142aci tylko 250 satoshi, podczas gdy, \"razem przynajmniej\" p\u0142aci 1000 satoshi. Przy transakcjach wi\u0119kszych ni\u017c kilobajt, w obu przypadkach p\u0142aci za ka\u017cdy kilobajt.</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Ukryj</translation>\n+    </message>\n+    <message>\n+        <source>total at least</source>\n+        <translation>razem przynajmniej</translation>\n+    </message>\n+    <message>\n+        <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n+        <translation>Zap\u0142acenie tylko minimalnej op\u0142aty jest nadal wystarczaj\u0105ce, dop\u00f3ki jest mniejszy wolumen transakcji ni\u017c miejsca w blokach. Nale\u017cy jednak mie\u0107 \u015bwiadomo\u015b\u0107, \u017ce mo\u017ce sko\u0144czy\u0107 si\u0119 to niezatwierdzeniem nigdy transakcji, gdy jest wi\u0119ksze zapotrzebowanie na transakcje bitcoina ni\u017c sie\u0107 mo\u017ce przetworzy\u0107.</translation>\n+    </message>\n     <message>\n         <source>(read the tooltip)</source>\n         <translation>(przeczytaj podpowied\u017a)</translation>\n@@ -1660,6 +1874,10 @@\n         <source>Recommended:</source>\n         <translation>Zalecane:</translation>\n     </message>\n+    <message>\n+        <source>Custom:</source>\n+        <translation>W\u0142asna:</translation>\n+    </message>\n     <message>\n         <source>(Smart fee not initialized yet. This usually takes a few blocks...)</source>\n         <translation>(Sprytne op\u0142aty nie s\u0105 jeszcze zainicjowane. Trwa to zwykle kilka blok\u00f3w...)</translation>\n@@ -1780,10 +1998,30 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Transakcja zosta\u0142a odrzucona! Mo\u017ce si\u0119 to zdarzy\u0107 je\u015bli cz\u0119\u015b\u0107 monet z portfela zosta\u0142a ju\u017c wydana u\u017cywaj\u0105c kopii pliku wallet.dat i nie zosta\u0142o to tutaj uwzgl\u0119dnione.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Op\u0142ata wy\u017csza ni\u017c %1 jest uwa\u017cana za szalenie wysok\u0105.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u017b\u0105danie p\u0142atno\u015bci up\u0142yn\u0119\u0142o.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Przybli\u017cony czas zatwierdzenia: %n blok\u00f3w.</numerusform><numerusform>Przybli\u017cony czas zatwierdzenia: %n blok\u00f3w.</numerusform><numerusform>Przybli\u017cony czas zatwierdzenia: %n blok\u00f3w.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>P\u0142ac tylko minimalna op\u0142at\u0119 %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Adres odbiorcy jest nieprawid\u0142owy, prosz\u0119 sprawi\u0107 ponownie.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Znaleziono powt\u00f3rzony adres, mo\u017cna wys\u0142a\u0107 tylko raz na ka\u017cdy adres podczas jednej operacji wysy\u0142ania.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Ostrze\u017cenie: nieprawid\u0142owy adres Bitcoin</translation>\n@@ -1835,6 +2073,10 @@\n         <source>This is a normal payment.</source>\n         <translation>To jest standardowa p\u0142atno\u015b\u0107</translation>\n     </message>\n+    <message>\n+        <source>The Bitcoin address to send the payment to</source>\n+        <translation>Adres Bitcoin gdzie wys\u0142a\u0107 p\u0142atno\u015b\u0107</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1851,14 +2093,34 @@\n         <source>Remove this entry</source>\n         <translation>Usu\u0144 ten wpis</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>Op\u0142ata zostanie odj\u0119ta od kwoty wysy\u0142ane.Odbiorca otrzyma mniej ni\u017c bitcoins wpisz w polu kwoty. Je\u015bli wybrano kilku odbiorc\u00f3w, op\u0142ata jest podzielona r\u00f3wno.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>Odejmij od wysoko\u015bci op\u0142aty</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Wiadomo\u015b\u0107:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>To \u017c\u0105danie zap\u0142aty nie zosta\u0142o zweryfikowane.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>To \u017c\u0105danie zap\u0142aty jest zweryfikowane.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Wprowad\u017a etykiet\u0119 dla tego adresu by doda\u0107 go do listy u\u017cytych adres\u00f3w</translation>\n     </message>\n+    <message>\n+        <source>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</source>\n+        <translation>Wiadomo\u015b\u0107, kt\u00f3ra zosta\u0142a do\u0142\u0105czona do URI bitcoin:, kt\u00f3ra b\u0119dzie przechowywana wraz z transakcj\u0105 w celach informacyjnych. Uwaga: Ta wiadomo\u015b\u0107 nie b\u0119dzie rozsy\u0142ana w sieci Bitcoin.</translation>\n+    </message>\n     <message>\n         <source>Pay To:</source>\n         <translation>Wp\u0142a\u0107 do:</translation>\n@@ -1889,6 +2151,14 @@\n         <source>&amp;Sign Message</source>\n         <translation>Podpi&amp;sz Wiadomo\u015b\u0107</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Mo\u017cesz podpisywa\u0107 wiadomo\u015bci swoimi adresami aby udowodni\u0107, \u017ce jeste\u015b ich w\u0142a\u015bcicielem. Uwa\u017caj, aby nie podpisywa\u0107 niczego co wzbudza Twoje podejrzenia, poniewa\u017c kto\u015b mo\u017ce stosowa\u0107 phishing pr\u00f3buj\u0105c nak\u0142oni\u0107 Ci\u0119 do ich podpisania. Akceptuj i podpisuj tylko w pe\u0142ni zrozumia\u0142e komunikaty i wiadomo\u015bci.</translation>\n+    </message>\n+    <message>\n+        <source>The Bitcoin address to sign the message with</source>\n+        <translation>Adres Bitcoin, za pomoc\u0105 kt\u00f3rego podpisa\u0107 wiadomo\u015b\u0107</translation>\n+    </message>\n     <message>\n         <source>Choose previously used address</source>\n         <translation>Wybierz wcze\u015bniej u\u017cyty adres</translation>\n@@ -1937,6 +2207,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Zweryfikuj wiadomo\u015b\u0107</translation>\n     </message>\n+    <message>\n+        <source>The Bitcoin address the message was signed with</source>\n+        <translation>Adres Bitcoin, kt\u00f3rym zosta\u0142a podpisana wiadomo\u015b\u0107</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Zweryfikuj wiadomo\u015b\u0107,  aby upewni\u0107 si\u0119, \u017ce zosta\u0142a podpisana odpowiednim adresem Bitcoin.</translation>\n@@ -2050,6 +2324,10 @@\n         <source>Status</source>\n         <translation>Status</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>, broadcast through %n node(s)</source>\n+        <translation><numerusform>, przekazywany przez %n w\u0119z\u0142\u00f3w</numerusform><numerusform>, przekazywany przez %n w\u0119z\u0142\u00f3w</numerusform><numerusform>, przekazywany przez %n w\u0119z\u0142\u00f3w</numerusform></translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Data</translation>\n@@ -2074,6 +2352,10 @@\n         <source>own address</source>\n         <translation>w\u0142asny adres</translation>\n     </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>tylko-obserwowany</translation>\n+    </message>\n     <message>\n         <source>label</source>\n         <translation>etykieta</translation>\n@@ -2082,6 +2364,10 @@\n         <source>Credit</source>\n         <translation>Przypisy</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>potwierdzona przy %n blokach wi\u0119cej</numerusform><numerusform>potwierdzona przy %n blokach wi\u0119cej</numerusform><numerusform>potwierdzona przy %n blokach wi\u0119cej</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>niezaakceptowane</translation>\n@@ -2090,6 +2376,14 @@\n         <source>Debit</source>\n         <translation>Debet</translation>\n     </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Razem wychodz\u0105cych</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Razem przychodz\u0105cych</translation>\n+    </message>\n     <message>\n         <source>Transaction fee</source>\n         <translation>Op\u0142ata transakcyjna</translation>\n@@ -2146,6 +2440,10 @@\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, nie zosta\u0142 jeszcze pomy\u015blnie rozes\u0142any</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Otw\u00f3rz dla %n nast\u0119pnych blok\u00f3w</numerusform><numerusform>Otw\u00f3rz dla %n nast\u0119pnych blok\u00f3w</numerusform><numerusform>Otw\u00f3rz dla %n nast\u0119pnych blok\u00f3w</numerusform></translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>nieznany</translation>\n@@ -2176,6 +2474,10 @@\n         <source>Immature (%1 confirmations, will be available after %2)</source>\n         <translation>Niedojrza\u0142a (%1 potwierdze\u0144, b\u0119dzie dost\u0119pna po %2)</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Otw\u00f3rz dla %n nast\u0119pnych blok\u00f3w</numerusform><numerusform>Otw\u00f3rz dla %n nast\u0119pnych blok\u00f3w</numerusform><numerusform>Otw\u00f3rz dla %n nast\u0119pnych blok\u00f3w</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Otw\u00f3rz do %1</translation>\n@@ -2232,6 +2534,10 @@\n         <source>Mined</source>\n         <translation>Wydobyto</translation>\n     </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>tylko-obserwowany</translation>\n+    </message>\n     <message>\n         <source>(n/a)</source>\n         <translation>(brak)</translation>\n@@ -2248,6 +2554,14 @@\n         <source>Type of transaction.</source>\n         <translation>Rodzaj transakcji.</translation>\n     </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Czy adres tylko-obserwowany jest lub nie u\u017cyty w tej transakcji.</translation>\n+    </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>Zdefiniowana przez u\u017cytkownika intencja/cel transakcji.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Kwota usuni\u0119ta z lub dodana do konta.</translation>\n@@ -2339,6 +2653,10 @@\n         <source>Export Transaction History</source>\n         <translation>Eksport historii transakcji</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Tylko obserwowany</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>B\u0142\u0105d przy pr\u00f3bie eksportu</translation>\n@@ -2486,6 +2804,14 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Skojarz z podanym adresem i nas\u0142uchuj na nim. U\u017cyj formatu [host]:port dla IPv6</translation>\n     </message>\n+    <message>\n+        <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n+        <translation>Usuwa wszystkie transakcje w portfelu i tylko odtwarza te cz\u0119\u015bci z \u0142a\u0144cucha blok\u00f3w poprzez -rescan przy starcie</translation>\n+    </message>\n+    <message>\n+        <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n+        <translation>Rozprowadzane na licencji MIT, zobacz do\u0142\u0105czony plik COPYING lub &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n+    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Wykonaj polecenie, kiedy transakcja portfela ulegnie zmianie (%s w poleceniu zostanie zast\u0105pione przez TxID)</translation>\n@@ -2522,6 +2848,10 @@\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Ostrze\u017cenie: Odtworzono dane z uszkodzonego pliku wallet.dat! Oryginalny wallet.dat zosta\u0142 zapisany jako wallet.{timestamp}.bak w %s; je\u015bli twoje saldo lub transakcje s\u0105 niepoprawne powiniene\u015b odtworzy\u0107 kopi\u0119 zapasow\u0105.</translation>\n     </message>\n+    <message>\n+        <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n+        <translation>Dodawaj do bia\u0142ej listy w\u0119z\u0142y \u0142\u0105cz\u0105ce si\u0119 z podanej maski sieciowej lub adresu IP. Mo\u017ce by\u0107 okre\u015blona kilka razy.</translation>\n+    </message>\n     <message>\n         <source>(default: 1)</source>\n         <translation>(domy\u015blnie: 1)</translation>\n@@ -2590,6 +2920,10 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Pr\u00f3ba nas\u0142uchiwania na jakimkolwiek porcie nie powiod\u0142a si\u0119. U\u017cyj -listen=0 je\u015bli tego chcesz.</translation>\n     </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation>Je\u017celi &lt;category&gt; nie zostanie okre\u015blona, wy\u015bwietl wszystkie informacje debugowania.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importowanie\u2026</translation>\n@@ -2610,6 +2944,10 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>\u0141\u0105cz z w\u0119z\u0142ami tylko w sieci &lt;net&gt; (ipv4, piv6 lub onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>Tryb ograniczony jest niekompatybilny z -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Ustaw wielko\u015b\u0107 pami\u0119ci podr\u0119cznej w megabajtach (%d do %d, domy\u015blnie: %d)</translation>\n@@ -2622,10 +2960,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Okre\u015bl plik portfela (w obr\u0119bie folderu danych)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Jest to przeznaczone dla narz\u0119dzi testowania regresji i rozwoju aplikacji.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>U\u017cyj UPnP do przekazania portu nas\u0142uchu (domy\u015blnie : %u)</translation>\n@@ -2646,6 +2980,10 @@\n         <source>Wallet options:</source>\n         <translation>Opcje portfela:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Uwaga: Ta wersja jest przestarza\u0142a, wymagana jest aktualizacja!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Musisz przebudowa\u0107 baz\u0119 u\u017cywaj\u0105c parametru -reindex aby zmieni\u0107 -txindex</translation>\n@@ -2662,10 +3000,22 @@\n         <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n         <translation>Napotkano b\u0142\u0105d podczas ustawiania adres RPC %s port %u dla nas\u0142uchiwania: %s</translation>\n     </message>\n+    <message>\n+        <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n+        <translation>Podepnij si\u0119 do podanego adresu i dodawaj do bia\u0142ej listy w\u0119z\u0142y \u0142\u0105cz\u0105ce si\u0119 z nim. U\u017cyj notacji [host]:port dla IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)</source>\n+        <translation>Powi\u0105\u017c si\u0119 z podanym adresem, aby nas\u0142uchiwa\u0107 po\u0142\u0105czenia JSON-RPC. U\u017cyj notacji [host]:port dla IPv6. Ta opcja mo\u017ce by\u0107 okre\u015blona kilka razy (domy\u015blnie: powi\u0105\u017c ze wszystkimi interfejsami)</translation>\n+    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>Nie mo\u017cna uzyska\u0107 blokady na katalogu z danymi %s. Rdze\u0144 Bitcoin najprawdopodobniej jest ju\u017c uruchomiony.</translation>\n     </message>\n+    <message>\n+        <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n+        <translation>Tw\u00f3rz nowe pliki z domy\u015blnymi dla systemu uprawnieniami, zamiast umask 077 (skuteczne tylko przy wy\u0142\u0105czonej funkcjonalno\u015bci portfela)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>B\u0142\u0105d: Nas\u0142uchiwanie po\u0142\u0105cze\u0144 przychodz\u0105cych nie powiod\u0142o si\u0119 (nas\u0142uch zwr\u00f3ci\u0142 b\u0142\u0105d %s)</translation>\n@@ -2678,6 +3028,18 @@\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Uruchom polecenie przy otrzymaniu odpowiedniego powiadomienia lub gdy zobaczymy naprawd\u0119 d\u0142ugie rozga\u0142\u0119zienie (%s w poleceniu jest podstawiane za komunikat)</translation>\n     </message>\n+    <message>\n+        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>Op\u0142aty (w BTC/Kb) mniejsze ni\u017c ta b\u0119d\u0105 traktowane jako bez op\u0142aty przy propagowaniu (domy\u015blnie: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n+        <translation>Je\u017celi nie ustawiono paytxfee, do\u0142\u0105cz wystarczaj\u0105ca op\u0142at\u0119, aby transakcja mog\u0142a zosta\u0107 zatwierdzona w ci\u0105gu \u015bredniej ilo\u015bci n blok\u00f3w (domy\u015blnie: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>Niew\u0142a\u015bciwa ilo\u015b\u0107 dla -maxtxfee=&lt;ilo\u015b\u0107&gt;: '%s' (musi wynosi\u0107 przynajmniej minimaln\u0105 wielko\u015b\u0107 %s aby zapobiec utkni\u0119ciu transakcji)</translation>\n+    </message>\n     <message>\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maksymalny rozmiar danych w transakcji przekazuj\u0105cej dane kt\u00f3re przekazujemy i wydobywamy (domy\u015blnie: %u)</translation>\n@@ -2694,14 +3056,70 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>Ustaw liczb\u0119 w\u0105tk\u00f3w dla generowania monet (-1 = wszystkie rdzenie, domy\u015blnie: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>Zbyt niska kwota transakcji do wys\u0142ania po odj\u0119ciu op\u0142aty</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Program ten zawiera oprogramowanie stworzone przez OpenSSL Project do u\u017cycia w OpensSSL Toolkit &lt;https://www.openssl.org/&gt;, oprogramowanie kryptograficzne napisane przez Eric Young oraz oprogramowanie UPnP napisane przez Thomas Bernard.</translation>\n     </message>\n+    <message>\n+        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n+%s\n+It is recommended you use the following random password:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(you do not need to remember this password)\n+The username and password MUST NOT be the same.\n+If the file does not exist, create it with owner-readable-only file permissions.\n+It is also recommended to set alertnotify so you are notified of problems;\n+for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n+</source>\n+        <translation>Aby korzysta\u0107 z bitcoind, lub opcji -server w bitcoin-qt, musisz ustawi\u0107 opcj\u0119 rpcpassword w pliku konfiguracyjnym:\n+%s\n+Zalecane jest u\u017cycie poni\u017cszego losowego has\u0142a:\n+rpcuser=bitcoinrpc\n+rpcpassword=%s\n+(nie musisz pami\u0119ta\u0107 tego has\u0142a)\n+Nazwa u\u017cytkownika i has\u0142o NIE MOG\u0104 by\u0107 takie same.\n+Je\u017celi ten plik nie istnieje, utw\u00f3rz go z uprawnieniami tylko-do-odczytu przez w\u0142a\u015bciciela.\n+Zalecane jest tak\u017ce ustawienie opcji alertnotify, dzi\u0119ki kt\u00f3rej b\u0119dziesz powiadamiany o problemach;\n+na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n+</translation>\n+    </message>\n     <message>\n         <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n         <translation>Ostrze\u017cenie: -matxfee jest ustawione bardzo wysokie! Tak wysokie op\u0142aty mog\u0105 by\u0107 zap\u0142acone w jednej transakcji.</translation>\n     </message>\n+    <message>\n+        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>Ostrze\u017cenie: Prosz\u0119 sprawdzi\u0107 czy data i czas na Twoim komputerze s\u0105 poprawne! Je\u017celi ustawienia zegara b\u0119d\u0105 z\u0142e, Bitcoin Core nie b\u0119dzie dzia\u0142a\u0142 prawid\u0142owo.</translation>\n+    </message>\n+    <message>\n+        <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n+        <translation>W\u0119z\u0142y z bia\u0142ej listy nie mog\u0105 zosta\u0107 zbanowane za ataki DoS, a ich transakcje b\u0119d\u0105 zawsze przekazywane, nawet je\u017celi b\u0119d\u0105 znajdywa\u0107 si\u0119 ju\u017c w pami\u0119ci, przydatne np. dla bramek p\u0142atniczych</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(domy\u015blnie: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Accept public REST requests (default: %u)</source>\n+        <translation>Akceptuj publiczne \u017c\u0105dania REST (domy\u015blnie: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>Aktywuje najlepszy \u0142a\u0144cuch</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>Nie mo\u017cna uruchomi\u0107 z portfela w trybie ograniczonym.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot resolve -whitebind address: '%s'</source>\n+        <translation>Nie mo\u017cna rozwi\u0105za\u0107 adresu -whitebind: '%s'</translation>\n+    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>Wybierz folder danych przy starcie (domy\u015blnie: 0)</translation>\n@@ -2714,6 +3132,10 @@\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i The Bitcoin Core Developers</translation>\n     </message>\n+    <message>\n+        <source>Could not parse -rpcbind value %s as network address</source>\n+        <translation>Nie mo\u017cna przetworzy\u0107 warto\u015bci -rpcbind %s jako adresu sieciowego</translation>\n+    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>B\u0142\u0105d \u0142adowania wallet.dat: Portfel wymaga nowszej wersji Bitcoin Core</translation>\n@@ -2754,6 +3176,14 @@\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: '%s' (must be at least %s)</source>\n         <translation>Nieprawid\u0142owa kwota dla -paytxfee=&lt;amount&gt;: '%s' (musi by\u0107 co najmniej %s)</translation>\n     </message>\n+    <message>\n+        <source>Invalid netmask specified in -whitelist: '%s'</source>\n+        <translation>Nieprawid\u0142owa maska sieci okre\u015blona w -whitelist: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Keep at most &lt;n&gt; unconnectable transactions in memory (default: %u)</source>\n+        <translation>Przechowuj w pami\u0119ci maksymalnie &lt;n&gt; transakcji nie mo\u017cliwych do po\u0142\u0105czenia (domy\u015blnie: %u)</translation>\n+    </message>\n     <message>\n         <source>Node relay options:</source>\n         <translation>Opcje przeka\u017anikowe w\u0119z\u0142a:</translation>\n@@ -2767,12 +3197,16 @@\n         <translation>Opcje serwera RPC:</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Losowo ignoruje 1 z ka\u017cdych &lt;n&gt; wiadomo\u015bci sieciowych.</translation>\n+        <source>RPC support for HTTP persistent connections (default: %d)</source>\n+        <translation>Wsparcie RPC dla ci\u0105g\u0142ych po\u0142\u0105cze\u0144 HTTP  (domy\u015blnie: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Losowo miesza 1 z wszystkich &lt;n&gt; wiadomo\u015bci sieciowych.</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>Odbuduj indeks \u0142a\u0144cucha blok\u00f3w z obecnych plik\u00f3w blk000??.dat podczas ponownego uruchomienia</translation>\n+    </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Odbieranie i wy\u015bwietlanie alert\u00f3w sieci P2P (domy\u015blnie: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -2810,6 +3244,10 @@\n         <source>Start minimized</source>\n         <translation>Uruchom zminimalizowany</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>Zbyt niska kwota transakcji by zap\u0142aci\u0107 op\u0142at\u0119</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>To oprogramowanie eksperymentalne.</translation>\n@@ -2830,6 +3268,10 @@\n         <source>Transaction too large</source>\n         <translation>Transakcja zbyt du\u017ca</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opcje UI</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Nie mo\u017cna przywi\u0105za\u0107 do %s na tym komputerze (bind zwr\u00f3ci\u0142 b\u0142\u0105d %s)</translation>\n@@ -2914,10 +3356,6 @@\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Jak dok\u0142adna jest weryfikacja blok\u00f3w przy -checkblocks (0-4, domy\u015blnie: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Loguj priorytety transakcji i op\u0142aty na kB podczas kopania blok\u00f3w (domy\u015blnie: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Utrzymuj pe\u0142ny indeks transakcji, u\u017cywany przy wywo\u0142aniu RPC getrawtransaction (domy\u015blnie: %u)</translation>\n@@ -2926,17 +3364,29 @@\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: %u)</source>\n         <translation>Czas w sekundach, przez jaki nietrzymaj\u0105ce si\u0119 zasad w\u0119z\u0142y nie b\u0119d\u0105 mog\u0142y ponownie si\u0119 pod\u0142\u0105czy\u0107 (domy\u015blnie: %u)</translation>\n     </message>\n+    <message>\n+        <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n+        <translation>Wypu\u015b\u0107 informacje debugowania (domy\u015blnie: %u, podanie &lt;category&gt; jest opcjonalne)</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n+        <translation>U\u017cyj oddzielnego prozy SOCKS5 aby osi\u0105gn\u0105\u0107 w\u0119z\u0142y w ukrytych us\u0142ugach Tor (domy\u015blnie: %s)</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(domy\u015blnie: %s)</translation>\n     </message>\n     <message>\n-        <source>Error loading wallet.dat</source>\n-        <translation>B\u0142\u0105d \u0142adowania wallet.dat</translation>\n+        <source>Acceptable ciphers (default: %s)</source>\n+        <translation>Akceptowane szyfry (domy\u015blne: %s)</translation>\n     </message>\n     <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Wymu\u015b tryb bezpieczny (domy\u015blnie: %u)</translation>\n+        <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n+        <translation>Zawsze wypytuj o adresy w\u0119z\u0142\u00f3w poprzez podejrzenie DNS (domy\u015blnie: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error loading wallet.dat</source>\n+        <translation>B\u0142\u0105d \u0142adowania wallet.dat</translation>\n     </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n@@ -2954,10 +3404,6 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Nieprawid\u0142owy adres -proxy: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Ogranicz rozmiar pami\u0119ci podr\u0119cznej sygnatur do &lt;n&gt; wpis\u00f3w (domy\u015blnie: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Nas\u0142uchuj po\u0142\u0105cze\u0144 JSON-RPC na &lt;port&gt; (domy\u015blnie: %u lub testnet: %u)</translation>\n@@ -2970,6 +3416,10 @@\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Utrzymuj maksymalnie &lt;n&gt; po\u0142\u0105cze\u0144 z w\u0119z\u0142ami (domy\u015blnie: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>Spraw by portfel dokona\u0142 transmisji transakcji</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maksymalny bufor odbioru na po\u0142\u0105czenie, &lt;n&gt;*1000 bajt\u00f3w (domy\u015blnie: %u)</translation>\n@@ -2978,10 +3428,6 @@\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maksymalny bufor wysy\u0142ania na po\u0142\u0105czenie, &lt;n&gt;*1000 bajt\u00f3w (domy\u015blnie: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Akceptuj tylko \u0142a\u0144cuch blok\u00f3w zgodny z wbudowanymi punktami kontrolnymi (domy\u015blnie: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Do\u0142\u0105czaj znacznik czasu do logowania (domy\u015blnie: %u)</translation>\n@@ -2994,10 +3440,6 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Przekazuj transakcje multisig inne ni\u017c P2SH (domy\u015blnie: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Uruchom w\u0105tek do okresowego zapisywania portfela (domy\u015blnie: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Plik certyfikatu serwera (domy\u015blnie: %s)</translation>\n@@ -3018,10 +3460,6 @@\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Ustaw liczb\u0119 w\u0105tk\u00f3w do obs\u0142ugi RPC (domy\u015blnie: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Ustaw flag\u0119 DB_PRIVATE w \u015brodowisku wallet db (domy\u015blnie: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Wska\u017c plik konfiguracyjny (domy\u015blnie: %s)</translation>\n@@ -3038,10 +3476,6 @@\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Wydawaj niepotwierdzon\u0105 reszt\u0119 podczas wysy\u0142ania transakcji (domy\u015blnie: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Zatrzymaj po zaimportowaniu blok\u00f3w z dysku (domy\u015blnie: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Pr\u00f3g, po kt\u00f3rym nast\u0105pi roz\u0142\u0105czenie w\u0119z\u0142\u00f3w nietrzymaj\u0105cych si\u0119 zasad (domy\u015blnie: %u)</translation>"
      },
      {
        "sha": "cd2a5a63233db00b34ba38285d48f66218b66d36",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 96,
        "deletions": 40,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pt_BR\" version=\"2.1\">\n+<TS language=\"pt_BR\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -67,7 +67,7 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>Estes s\u00e3o os seus endere\u00e7os Bitcoin para receber pagamentos. Voc\u00ea pode querer enviar um endere\u00e7o diferente para cada remetente, para acompanhar quem est\u00e1 pagando.</translation>\n+        <translation>Esses s\u00e3o seus endere\u00e7os Bitcoin para enviar pagamentos. Certifique-se sempre da quantia e do destinat\u00e1rio antes de enviar moedas.</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n@@ -276,7 +276,7 @@\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>&amp;Backup Carteira...</translation>\n+        <translation>&amp;Backup da carteira...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n@@ -288,7 +288,7 @@\n     </message>\n     <message>\n         <source>&amp;Receiving addresses...</source>\n-        <translation>Endere\u00e7os de &amp;Recebimento...</translation>\n+        <translation>Endere\u00e7os de &amp;recebimento...</translation>\n     </message>\n     <message>\n         <source>Open &amp;URI...</source>\n@@ -1830,6 +1830,10 @@\n         <source>Choose...</source>\n         <translation>Escolher</translation>\n     </message>\n+    <message>\n+        <source>collapse fee-settings</source>\n+        <translation>colapso Taxa de defini\u00e7\u00f5es</translation>\n+    </message>\n     <message>\n         <source>per kilobyte</source>\n         <translation>por kilobyte</translation>\n@@ -2077,6 +2081,10 @@\n         <source>Remove this entry</source>\n         <translation>Remover esta entrada</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>A taxa ser\u00e1 deduzida da quantia sendo enviada. O beneficiario receber\u00e1 menos bitcoins do que voc\u00ea colocou no campo de quantidade. Se varios beneficiarios est\u00e3o selecionados, a taxa \u00e9 dividida igualmente.</translation>\n+    </message>\n     <message>\n         <source>S&amp;ubtract fee from amount</source>\n         <translation>&amp;Retirar taxa da quantia</translation>\n@@ -2085,6 +2093,14 @@\n         <source>Message:</source>\n         <translation>Mensagem:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Esta \u00e9 uma cobran\u00e7a n\u00e3o autenticada.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Esta \u00e9 uma cobran\u00e7a autenticada.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Digite um r\u00f3tulo para este endere\u00e7o para adicion\u00e1-lo no cat\u00e1logo</translation>\n@@ -2110,7 +2126,7 @@\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n-        <translation>N\u00e3o desligue o computador at\u00e9 esta janela desapare\u00e7a.</translation>\n+        <translation>N\u00e3o desligue o computador at\u00e9 que esta janela desapare\u00e7a.</translation>\n     </message>\n </context>\n <context>\n@@ -2522,6 +2538,10 @@\n         <source>Type of transaction.</source>\n         <translation>Tipo de transa\u00e7\u00e3o.</translation>\n     </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Mostrar ou n\u00e3o endere\u00e7os Bitcoin na lista de transa\u00e7\u00f5es.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Quantidade debitada ou creditada ao saldo.</translation>\n@@ -2734,7 +2754,7 @@\n     </message>\n     <message>\n         <source>Specify data directory</source>\n-        <translation>Especificar diret\u00f3rio de dados</translation>\n+        <translation>Especificar o diret\u00f3rio de dados</translation>\n     </message>\n     <message>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n@@ -2772,17 +2792,13 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuido sob a licen\u00e7a MIT software license. Veja os termos em &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Entra no modo de teste de regress\u00e3o, que usa uma cadeia especial onde os blocos podem ser resolvidos instantaneamente.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n-        <translation>Executar comando quando uma transa\u00e7\u00e3o da carteira mudar (%s no comando ser\u00e1 substitu\u00eddo por TxID)</translation>\n+        <translation>Executa um comando quando uma transa\u00e7\u00e3o da carteira mudar (%s no comando ser\u00e1 substitu\u00eddo por TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>Neste modo -genproclimit controla quantos blocos s\u00e3o gerados imediatamente.</translation>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Reduz o armazenamento requerido prunando (apagando) blocos antigos. Este modo desativa o suporte a carteira e \u00e9 incompat\u00edvel com -txindex. Aviso: Reverter essa op\u00e7\u00e3o requer re-baixar o blockchain inteiro. (padr\u00e3o: 0 = disativado, &gt;%u = Tamanho em mega para os arquivos de bloco)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2816,6 +2832,10 @@\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aten\u00e7\u00e3o: wallet.dat corrompido, dados recuperados! Arquivo wallet.dat original salvo como wallet.{timestamp}.bak em %s; se seu saldo ou transa\u00e7\u00f5es estiverem incorretos, voc\u00ea deve restaurar o backup.</translation>\n     </message>\n+    <message>\n+        <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n+        <translation>Lista Branca pares de liga\u00e7\u00e3o da m\u00e1scara de rede dado ou o endere\u00e7o IP . Pode ser especificado v\u00e1rias vezes.</translation>\n+    </message>\n     <message>\n         <source>(default: 1)</source>\n         <translation>(padr\u00e3o: 1)</translation>\n@@ -2834,7 +2854,7 @@\n     </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n-        <translation>Conectar apenas a n\u00f3(s) espec\u00edfico(s)</translation>\n+        <translation>Conectar apenas a cliente(s) espec\u00edfico(s)</translation>\n     </message>\n     <message>\n         <source>Connection options:</source>\n@@ -2908,6 +2928,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>Somente conectar a clientes na rede &lt;net&gt; (ipv4, ipv6 ou onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>O modo Prune n\u00e3o pode ser configurado com um valor negativo.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>O modo Prune \u00e9 incompat\u00edvel com -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Define o tamanho do cache do banco de dados em megabytes (%d para %d, padr\u00e3o: %d)</translation>\n@@ -2920,10 +2948,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Especifique o arquivo da carteira (dentro do diret\u00f3rio de dados)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Isso \u00e9 usado para testes de regress\u00e3o e ferramentas de desenvolvimento.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Use UPnP para mapear a porta de entrada (padr\u00e3o: %u)</translation>\n@@ -2964,25 +2988,33 @@\n         <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n         <translation>Um erro ocorreu enquanto configurando o endere\u00e7o RPC %s porta %u para escuta: %s</translation>\n     </message>\n+    <message>\n+        <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n+        <translation>Vincular ao endere\u00e7o fornecido e sempre escutar nele. Use a nota\u00e7\u00e3o [host]:port para IPv6</translation>\n+    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>N\u00e3o foi poss\u00edvel obter acesso exclusivo ao diret\u00f3rio de dados %s. Provavelmente Bitcoin j\u00e1 est\u00e1 sendo executado.</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Descobrir o pr\u00f3prio IP (padr\u00e3o: 1 enquanto aguardando conex\u00f5es e sem -externalip ou -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Erro: Aceitar conex\u00f5es de entrada falhou (retornou erro %s)</translation>\n     </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n-        <translation>Executa o comando quando um alerta relevante \u00e9 recebido ou vemos uma longa segrega\u00e7\u00e3o (%s em cmd \u00e9 substitu\u00eddo pela mensagem)</translation>\n+        <translation>Executa um comando quando um alerta relevante \u00e9 recebido ou vemos uma longa segrega\u00e7\u00e3o (%s em cmd \u00e9 substitu\u00eddo pela mensagem)</translation>\n     </message>\n     <message>\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Taxas (em BTC/Kb) menores do que este valor s\u00e3o consideradas inexistentes para divulga\u00e7\u00e3o (padr\u00e3o: %s)</translation>\n     </message>\n     <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Taxas (em BTC/Kb) menores do que este valor s\u00e3o consideradas inexistentes para a cria\u00e7\u00e3o da transa\u00e7\u00e3o (padr\u00e3o: %s)</translation>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>Prunagem configurada abaixo do m\u00ednimo de %d MB.  Use um n\u00famero maior.</translation>\n     </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n@@ -3012,10 +3044,18 @@ Se o arquivo n\u00e3o existir, crie com permiss\u00e3o de propriet\u00e1rio criador somente.\n por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n </translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>Voc\u00ea precisa reconstruir o banco de dados usando -reindex para sair do modo prune. Isso ir\u00e1 rebaixar todo o blockchain.</translation>\n+    </message>\n     <message>\n         <source>(default: %u)</source>\n         <translation>(padr\u00e3o: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>Ativando a melhor sequ\u00eancia...</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Imposs\u00edvel resolver endere\u00e7o -whitebind: '%s'</translation>\n@@ -3080,6 +3120,10 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>Necess\u00e1rio informar uma porta com -whitebind: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Node relay options:</source>\n+        <translation>Op\u00e7\u00f5es de rel\u00e9 n\u00f3 :</translation>\n+    </message>\n     <message>\n         <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>Op\u00e7\u00f5es RPC SSL: (veja o Bitcoin Wiki para instru\u00e7\u00f5es de configura\u00e7\u00e3o SSL)</translation>\n@@ -3088,14 +3132,6 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>RPC server options:</source>\n         <translation>Op\u00e7\u00f5es do servidor RPC:</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Aleatoriamente descarta 1 em cada &lt;n&gt; mensagens da rede</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Aleatoriamente embaralha 1 em cada &lt;n&gt; mensagens da rede</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Mandar informa\u00e7\u00e3o de trace/debug para o console em vez de para o arquivo debug.log</translation>\n@@ -3194,7 +3230,7 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n     </message>\n     <message>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n-        <translation>Executar comando quando o melhor bloco mudar (%s no comando ser\u00e1 substitu\u00eddo pelo hash do bloco)</translation>\n+        <translation>Executa um comando quando o melhor bloco mudar (%s no comando ser\u00e1 substitu\u00eddo pelo hash do bloco)</translation>\n     </message>\n     <message>\n         <source>Upgrade wallet to latest format</source>\n@@ -3210,7 +3246,7 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n     </message>\n     <message>\n         <source>This help message</source>\n-        <translation>Esta mensagem de ajuda</translation>\n+        <translation>Exibe esta mensagem de ajuda</translation>\n     </message>\n     <message>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n@@ -3229,17 +3265,21 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <translation>(padr\u00e3o: %s)</translation>\n     </message>\n     <message>\n-        <source>Error loading wallet.dat</source>\n-        <translation>Erro ao carregar wallet.dat</translation>\n+        <source>Acceptable ciphers (default: %s)</source>\n+        <translation>C\u00edfras aceitas (padr\u00e3o: %s)</translation>\n     </message>\n     <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>For\u00e7ar modo seguro (default: %u)</translation>\n+        <source>Error loading wallet.dat</source>\n+        <translation>Erro ao carregar wallet.dat</translation>\n     </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Gerar moedas (padr\u00e3o: %u)</translation>\n     </message>\n+    <message>\n+        <source>How many blocks to check at startup (default: %u, 0 = all)</source>\n+        <translation>Quantos blocos devem ser checados ao iniciar (padr\u00e3o: %u, 0 = todos)</translation>\n+    </message>\n     <message>\n         <source>Include IP addresses in debug output (default: %u)</source>\n         <translation>Incluir endere\u00e7o IP na sa\u00edda de depura\u00e7\u00e3o (padr\u00e3o: %u)</translation>\n@@ -3248,14 +3288,18 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Endere\u00e7o -proxy inv\u00e1lido: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Tamanho limite do cache de assinaturas de &lt;n&gt; entradas (padr\u00e3o: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Aguardar por conex\u00f5es na porta &lt;port&gt; (padr\u00e3o: %u ou testnet: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prepend debug output with timestamp (default: %u)</source>\n+        <translation>Adiciona timestamp como prefixo no debug (default: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Relay non-P2SH multisig (default: %u)</source>\n+        <translation>Retransmitir P2SH n\u00e3o multisig (default: %u)</translation>\n+    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Arquivo de certificado do servidor (padr\u00e3o: %s)</translation>\n@@ -3264,6 +3308,18 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Server private key (default: %s)</source>\n         <translation>Chave privada do servidor (padr\u00e3o: %s)</translation>\n     </message>\n+    <message>\n+        <source>Set minimum block size in bytes (default: %u)</source>\n+        <translation>Definir tamanho m\u00ednimo do bloco, em bytes (padr\u00e3o: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Specify configuration file (default: %s)</source>\n+        <translation>Especificar arquivo de configura\u00e7\u00e3o (padr\u00e3o: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n+        <translation>Especificar tempo para desist\u00eancia de conex\u00f5es, em mili segundos (m\u00ednimo: 1, padr\u00e3o: %d)</translation>\n+    </message>\n     <message>\n         <source>Specify pid file (default: %s)</source>\n         <translation>Especificar aqrquivo pid (default: %s)</translation>\n@@ -3294,7 +3350,7 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n     </message>\n     <message>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n-        <translation>Adicionar um n\u00f3 com o qual se conectar e tentar manter a conex\u00e3o ativa</translation>\n+        <translation>Adicionar um cliente para se conectar e tentar manter a conex\u00e3o ativa</translation>\n     </message>\n     <message>\n         <source>Loading wallet...</source>"
      },
      {
        "sha": "7ac0a4fa5c79cc46e6227ceb86a87daf4af6e1fe",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 179,
        "deletions": 13,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pt_PT\" version=\"2.1\">\n+<TS language=\"pt_PT\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Tem a certeza que deseja encriptar a carteira?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>O cliente Bitcoin Core ir\u00e1 agora ser fechado para terminar o processo de encripta\u00e7\u00e3o. Recorde que a encripta\u00e7\u00e3o da sua carteira n\u00e3o proteger\u00e1 totalmente os seus bitcoins de serem roubados por programas maliciosos que infectem o seu computador.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>IMPORTANTE: Qualquer c\u00f3pia de seguran\u00e7a da carteira anterior dever\u00e1 ser substitu\u00edda com o novo ficheiro de carteira, agora encriptado. Por raz\u00f5es de seguran\u00e7a, c\u00f3pias de seguran\u00e7a n\u00e3o encriptadas tornar-se-\u00e3o in\u00fateis assim que come\u00e7ar a usar a nova carteira encriptada.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Escreva a nova frase de segura\u00e7a da sua carteira. &lt;br/&gt; Por favor, use uma frase de &lt;b&gt;10 ou mais caracteres aleat\u00f3rios,&lt;/b&gt; ou &lt;b&gt;oito ou mais palavras&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Escreva a antiga frase de seguran\u00e7a da carteira, seguida da nova.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>A encripta\u00e7\u00e3o da carteira falhou</translation>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;Sobre o Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Modificar op\u00e7\u00f5es de configura\u00e7\u00e3o de Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Mostrar a lista de r\u00f3tulos e endere\u00e7os de envio usados</translation>\n@@ -418,6 +430,10 @@\n         <source>No block source available...</source>\n         <translation>Nenhuma fonte de blocos dispon\u00edvel...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Processado %n bloco do hist\u00f3rico de transa\u00e7\u00f5es.</numerusform><numerusform>Processados %n blocos do hist\u00f3rico de transa\u00e7\u00f5es.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n hora</numerusform><numerusform>%n horas</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>Recuperando o atraso...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Data: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Quantia: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Tipo: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>R\u00f3tulo: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Endere\u00e7o: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Transa\u00e7\u00e3o enviada</translation>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>nenhum</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Este r\u00f3tulo fica vermelho se o tamanho da transac\u00e7\u00e3o exceder os 1000 bytes.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Esta legenda fica vermelha se a prioridade for menor que \"m\u00e9dia\".</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Este r\u00f3tulo fica vermelho se algum recipiente receber uma quantia menor que %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Pode variar +/- %1 satoshi(s) por entrada</translation>\n@@ -918,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Endere\u00e7o IP do proxy (p.ex. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimize ao inv\u00e9s de sair da aplica\u00e7\u00e3o quando a janela \u00e9 fechada. Com esta  op\u00e7\u00e3o selecionada, a aplica\u00e7\u00e3o apenas ser\u00e1 encerrada quando escolher Sair da aplica\u00e7\u00e3o no men\u00fa.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>A linguagem da interface do utilizador pode ser definida aqui. Esta defini\u00e7\u00e3o entrar\u00e1 em efeito ap\u00f3s reiniciar o Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URLs de outrem (ex. um explorador de blocos) que aparece no separador de transa\u00e7\u00f5es como itens do menu de contexto.\n@@ -943,6 +1009,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Rede</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Come\u00e7ar o Bitcoin Core automaticamente ao iniciar sess\u00e3o no sistema.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;Come\u00e7ar o Bitcoin Core ao iniciar o sistema</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = auto, &lt;0 = Deixar essa quantidade de n\u00facleos livre)</translation>\n@@ -1055,6 +1129,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>\u00c9 necess\u00e1rio reiniciar o cliente para ativar as altera\u00e7\u00f5es.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>O cliente ser\u00e1 desligado. Deseja continuar?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>Esta altera\u00e7\u00e3o requer um rein\u00edcio do cliente.</translation>\n@@ -1189,10 +1267,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>O ficheiro de pedido de pagamento n\u00e3o p\u00f4de ser lido! Isto pode ter sido causado por um ficheiro de pedido de pagamento inv\u00e1lido.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Pedido de pagamento expirou.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>Pedidos de pagamento n\u00e3o-verificados para scripts de pagamento personalizados n\u00e3o s\u00e3o suportados.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Pedido de pagamento inv\u00e1lido.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Reembolsar de %1</translation>\n@@ -1232,6 +1318,10 @@\n         <source>User Agent</source>\n         <translation>Agente Usu\u00e1rio</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>N\u00f3/Servi\u00e7o</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Tempo de Lat\u00eancia</translation>\n@@ -1465,6 +1555,10 @@\n         <source>Clear console</source>\n         <translation>Limpar consola</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Bem-vindo \u00e0 consola RPC do Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Use as setas para cima e para baixo para navegar no hist\u00f3rico e &lt;b&gt;Ctrl-L&lt;/b&gt; para limpar o ecr\u00e3.</translation>\n@@ -1761,6 +1855,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>Se a taxa fixa for 1000 satoshis e a transa\u00e7\u00e3o for somente 250 bytes, pagar\u00e1 somente 250 satoshis \"por kilobyte\" em custos se trasacionar \"pelo menos\" 1000 satoshis. Transa\u00e7\u00f5es superiores a um kilobyte s\u00e3o cobradas por kilobyte.</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Esconder</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>total minimo</translation>\n@@ -1901,6 +1999,10 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>A transa\u00e7\u00e3o foi rejeitada! Isto poder\u00e1 acontecer se algumas das moedas na sua carteira j\u00e1 tiverem sido gastas, se por exemplo tiver usado uma c\u00f3pia do ficheiro wallet.dat e as moedas tiverem sido gastas na c\u00f3pia mas n\u00e3o tiverem sido marcadas como gastas aqui.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Pedido de pagamento expirou.</translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Pagar somente a taxa minima de %1</translation>\n@@ -2671,18 +2773,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuido atrav\u00e9s da licen\u00e7a de software MIT, verifique o ficheiro anexado COPYING ou &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Entre no modo de teste de regress\u00e3o, que usa uma cadeia especial cujos blocos podem ser resolvidos instantaneamente.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executar comando quando uma das transa\u00e7\u00f5es na carteira mudar (no comando, %s \u00e9 substitu\u00eddo pelo ID da Transa\u00e7\u00e3o)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>O modo -genproclimit controla quantos blocos s\u00e3o generados imediatamente.</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Defina o n\u00famero de processos de verifica\u00e7\u00e3o (%u at\u00e9 %d, 0 = autom\u00e1tico, &lt;0 = ldisponibiliza esse n\u00famero de n\u00facleos livres, por defeito: %d)</translation>\n@@ -2823,10 +2917,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Especifique ficheiro de carteira (dentro da pasta de dados)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Isto t\u00eam como fim a realiza\u00e7\u00e3o de testes de regress\u00e3o para pools e desenvolvimento de aplica\u00e7\u00f5es.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Use UPnP para mapear a porto de escuta (default: %u)</translation>\n@@ -2847,6 +2937,10 @@\n         <source>Wallet options:</source>\n         <translation>Op\u00e7\u00f5es da carteira:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>Aviso: Esta vers\u00e3o est\u00e1 desatualizada; atualiza\u00e7\u00e3o necess\u00e1ria!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>\u00c9 necess\u00e1rio reconstruir as bases de dados usando -reindex para mudar o -txindex</translation>\n@@ -2879,10 +2973,26 @@\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Definir tamanho m\u00e1ximo de transa\u00e7\u00f5es com alta-prioridade/baixa-taxa em bytes (por defeito: %d)</translation>\n     </message>\n+    <message>\n+        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>Aten\u00e7\u00e3o: Por favor verifique que a data e hora do seu computador est\u00e3o correctas! Se o seu rel\u00f3gio n\u00e3o estiver certo o Bitcoin Core n\u00e3o ir\u00e1 funcionar correctamente.</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(por defeito: %u)</translation>\n+    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>Escolha a pasta de dados ao iniciar (por defeito: 0)</translation>\n     </message>\n+    <message>\n+        <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n+        <translation>Copyright (C) 2009-%i Os Programadores do Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n+        <translation>Erro ao carregar wallet.dat: A Carteira requer uma vers\u00e3o mais recente do Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informa\u00e7\u00e3o</translation>\n@@ -2943,6 +3053,10 @@\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nome de utilizador para liga\u00e7\u00f5es JSON-RPC</translation>\n     </message>\n+    <message>\n+        <source>Wallet needed to be rewritten: restart Bitcoin Core to complete</source>\n+        <translation>A Carteira precisou de ser reescrita: reinicie o Bitcoin Core para completar o processo</translation>\n+    </message>\n     <message>\n         <source>Warning</source>\n         <translation>Aviso</translation>\n@@ -2999,6 +3113,58 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Endere\u00e7o -proxy inv\u00e1lido: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Escutar por liga\u00e7\u00f5es JSON-RPC na porta &lt;port&gt; (por defeito: %u ou rede de testes: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Listen for connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Escute liga\u00e7\u00f5es na porta &lt;port&gt; (por defeito: %u ou testnet: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n+        <translation>Manter no m\u00e1ximo &lt;n&gt; liga\u00e7\u00f5es a outros n\u00f3s da rede (por defeito: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n+        <translation>Maximo armazenamento interm\u00e9dio de recep\u00e7\u00e3o por liga\u00e7\u00e3o, &lt;n&gt;*1000 bytes (por defeito: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n+        <translation>Maximo armazenamento interm\u00e9dio de envio por liga\u00e7\u00e3o, &lt;n&gt;*1000 bytes (por defeito: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Prepend debug output with timestamp (default: %u)</source>\n+        <translation>Adicionar data e hora \u00e0 informa\u00e7\u00e3o de depura\u00e7\u00e3o (por defeito: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Server certificate file (default: %s)</source>\n+        <translation>Ficheiro de certificado do servidor (por defeito: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Server private key (default: %s)</source>\n+        <translation>Chave privada do servidor (por defeito: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n+        <translation>Definir o tamanho da mem\u00f3ria de chaves para &lt;n&gt; (por defeito: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set minimum block size in bytes (default: %u)</source>\n+        <translation>Definir tamanho min\u00edmo de um bloco em bytes (por defeito: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set the number of threads to service RPC calls (default: %d)</source>\n+        <translation>Defina o n\u00famero de processos para servir as chamadas RPC (por defeito: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Specify configuration file (default: %s)</source>\n+        <translation>Especificar ficheiro de configura\u00e7\u00e3o (por defeito: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n+        <translation>Especificar tempo de espera da liga\u00e7\u00e3o em milissegundos (m\u00ednimo 1, por defeito: %d)</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Rede desconhecida especificada em -onlynet: '%s'</translation>"
      },
      {
        "sha": "be24668536ee466a35d3c6a00541478bcf3945e6",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 29,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ro_RO\" version=\"2.1\">\n+<TS language=\"ro_RO\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -2712,18 +2712,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuit sub licen\u0163a de programe MIT/X11, vezi fi\u015fierul \u00eenso\u0163itor COPYING sau &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Ini\u0163iaz\u0103 modul de test regresie, care folose\u015fte un lan\u0163 special \u00een care blocurile pot fi rezolvate instantaneu.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Execut\u0103 comanda c\u00eend o tranzac\u0163ie a portofelului se schimb\u0103 (%s \u00een cmd este \u00eenlocuit de TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>\u00cen acest mod -genproclimit controleaz\u0103 c\u00eete blocuri s\u00eent generate imediat.</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Seteaz\u0103 num\u0103rul de thread-uri de verificare a script-urilor (%u la %d, 0 = auto, &lt;0 = las\u0103 at\u00eetea nuclee libere, implicit: %d)</translation>\n@@ -2856,10 +2848,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Specific\u0103 fi\u015fierul portofel (\u00een dosarul de date)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Este folosit\u0103 pentru programe de testare a regresiei \u00een algoritmi \u015fi dezvoltare de alte aplica\u0163ii.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Folose\u015fte mapare UPnP pentru asculatere port (implicit: %u)</translation>\n@@ -2984,14 +2972,6 @@\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC suport\u0103 pentru HTTP conexiuni persistente (implicit: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Aleator sccap\u0103 1 din fiecare &lt;n&gt; mesaje ale re\u0163elei</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Aleator aproximeaz\u0103 1 din fiecare &lt;n&gt; mesaje ale re\u0163elei</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Trimite informa\u0163iile trace/debug la consol\u0103 \u00een locul fi\u015fierului debug.log</translation>\n@@ -3124,10 +3104,6 @@\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Eroare la \u00eenc\u0103rcarea wallet.dat: Portofel corupt</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Gole\u015fte baza de date a activit\u0103\u0163ii din memoria pool \u00een jurnal pe disc la fiecare &lt;n&gt; megaocte\u0163i (implicit: %u)</translation>\n-    </message>\n     <message>\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Produce toate informa\u0163iile de depanare (implicit: %u &lt;category&gt; furnizat\u0103 este op\u0163ional\u0103)</translation>\n@@ -3144,10 +3120,6 @@\n         <source>Error loading wallet.dat</source>\n         <translation>Eroare la \u00eenc\u0103rcarea wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>For\u0163eaz\u0103 mod sigur (implicit: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Genereaz\u0103 monede (implicit: %u)</translation>"
      },
      {
        "sha": "004208d3450bf087c5429be8da2e344531cd30f4",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 221,
        "deletions": 55,
        "changes": 276,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ru\" version=\"2.1\">\n+<TS language=\"ru\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -163,6 +163,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0430\u0448 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041f\u043e\u043c\u043d\u0438\u0442\u0435, \u0447\u0442\u043e \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043e \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0437\u0430\u0449\u0438\u0442\u0438\u0442\u044c \u0432\u0430\u0448\u0438 \u0431\u0438\u0442\u043a\u043e\u0438\u043d\u044b \u043e\u0442 \u043a\u0440\u0430\u0436\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0438\u043d\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u043c \u041f\u041e.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\u0412\u0410\u0416\u041d\u041e: \u0432\u0441\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u0438 \u0432\u0430\u0448\u0435\u0433\u043e \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b \u043d\u043e\u0432\u044b\u043c \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c. \u0412 \u0446\u0435\u043b\u044f\u0445 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u0438 \u043d\u0435\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u0441\u0442\u0430\u043d\u0443\u0442 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u044b, \u043a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b \u043d\u0430\u0447\u043d\u0451\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a.</translation>\n@@ -179,6 +183,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430.&lt;br/&gt;\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 &lt;b&gt;\u0434\u0435\u0441\u044f\u0442\u0438 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432&lt;/b&gt;, \u0438\u043b\u0438 &lt;b&gt;\u0432\u043e\u0441\u044c\u043c\u0438 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0432&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0430\u0440\u044b\u0439 \u0438 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u0442\u044c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a</translation>\n@@ -386,6 +394,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;\u041e Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043e\u043f\u0446\u0438\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0438 \u043c\u0435\u0442\u043e\u043a \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438</translation>\n@@ -410,6 +422,10 @@\n         <source>No block source available...</source>\n         <translation>\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0431\u043b\u043e\u043a\u043e\u0432 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d %n \u0431\u043b\u043e\u043a \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e %n \u0431\u043b\u043e\u043a\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e %n \u0431\u043b\u043e\u043a\u043e\u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e %n \u0431\u043b\u043e\u043a\u043e\u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 \u0438 %2</translation>\n@@ -446,6 +462,36 @@\n         <source>Catching up...</source>\n         <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u0414\u0430\u0442\u0430: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\u0422\u0438\u043f: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\u041c\u0435\u0442\u043a\u0430: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>\u0418\u0441\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f</translation>\n@@ -644,6 +690,18 @@\n         <source>none</source>\n         <translation>\u043d\u0438\u0447\u0435\u0433\u043e</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>\u042d\u0442\u0430 \u043c\u0435\u0442\u043a\u0430 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043a\u0440\u0430\u0441\u043d\u043e\u0439, \u0435\u0441\u043b\u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c 1000 \u0431\u0430\u0439\u0442.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>\u042d\u0442\u0430 \u043c\u0435\u0442\u043a\u0430 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043a\u0440\u0430\u0441\u043d\u043e\u0439, \u0435\u0441\u043b\u0438 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \"\u0441\u0440\u0435\u0434\u043d\u0435\u0435\".</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>\u042d\u0442\u0430 \u043c\u0435\u0442\u043a\u0430 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043a\u0440\u0430\u0441\u043d\u043e\u0439, \u0435\u0441\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0438\u0437 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>\u041c\u043e\u0436\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u043d\u0430 +/- %1 \u0441\u0430\u0442\u043e\u0448\u0438 \u043d\u0430 \u0432\u0445\u043e\u0434.</translation>\n@@ -886,6 +944,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>IP-\u0430\u0434\u0440\u0435\u0441 \u043f\u0440\u043e\u043a\u0441\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>\u0421\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u0432\u043c\u0435\u0441\u0442\u043e \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043e\u043f\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u0430 \u2014 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0432 \u043c\u0435\u043d\u044e.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>\u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044f\u0437\u044b\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u0441\u0442\u0443\u043f\u044f\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, block explorer), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043a\u0430\u043a \u043f\u0443\u043d\u043a\u0442\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0445\u044d\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. URL \u043e\u0442\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0435\u0440\u0442\u043e\u0439 |.</translation>\n@@ -910,6 +976,14 @@\n         <source>&amp;Network</source>\n         <translation>&amp;\u0421\u0435\u0442\u044c</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c Bitcoin Core \u043f\u043e\u0441\u043b\u0435 \u0432\u0445\u043e\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c Bitcoin Core \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, &lt;0 = \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u044f\u0434\u0435\u0440)</translation>\n@@ -1022,6 +1096,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>\u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>\u041a\u043b\u0438\u0435\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d. \u0416\u0435\u043b\u0430\u0435\u0442\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>\u042d\u0442\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</translation>\n@@ -1156,10 +1234,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>\u0424\u0430\u0439\u043b \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d! \u041e\u0431\u044b\u0447\u043d\u043e \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0438\u0437-\u0437\u0430 \u043d\u0435\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>\u041d\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439 \u0441 \u043d\u0435\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u043c\u0438 \u043f\u043b\u0430\u0442\u0451\u0436\u043d\u044b\u043c\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u043c\u0438 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u043e\u0442 %1</translation>\n@@ -1199,6 +1285,10 @@\n         <source>User Agent</source>\n         <translation>\u042e\u0437\u0435\u0440-\u0430\u0433\u0435\u043d\u0442</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>\u0423\u0437\u0435\u043b/\u0441\u0435\u0440\u0432\u0438\u0441</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>\u0412\u0440\u0435\u043c\u044f \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0438</translation>\n@@ -1320,6 +1410,10 @@\n         <source>Current number of blocks</source>\n         <translation>\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u0431\u043b\u043e\u043a\u043e\u0432</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0439 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b Bitcoin Core \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b\u043e\u0432.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e</translation>\n@@ -1388,6 +1482,10 @@\n         <source>Ping Time</source>\n         <translation>\u0412\u0440\u0435\u043c\u044f \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0438</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>\u0421\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0412\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0431\u043b\u043e\u043a\u0430</translation>\n@@ -1432,6 +1530,10 @@\n         <source>Clear console</source>\n         <translation>\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u043a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 RPC-\u043a\u043e\u043d\u0441\u043e\u043b\u044c Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0442\u0440\u0435\u043b\u043a\u0438 \u0432\u0432\u0435\u0440\u0445 \u0438 \u0432\u043d\u0438\u0437 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0438 &lt;b&gt;Ctrl-L&lt;/b&gt; \u0434\u043b\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u0430.</translation>\n@@ -1728,6 +1830,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>\u0415\u0441\u043b\u0438 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0432 1000 \u0441\u0430\u0442\u043e\u0448\u0438, \u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043b\u0438\u0448\u044c 250 \u0431\u0430\u0439\u0442, \u0442\u043e\u0433\u0434\u0430 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \"\u043d\u0430 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\" \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442 250 \u0441\u0430\u0442\u043e\u0448\u0438, \u0430 \"\u0432\u0441\u0435\u0433\u043e \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c\" \u2014 1000 \u0441\u0430\u0442\u043e\u0448\u0438. \u0414\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043a\u0440\u0443\u043f\u043d\u0435\u0435 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u0430 \u0432 \u043e\u0431\u043e\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043b\u0430\u0442\u0451\u0436 \"\u043d\u0430 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\".</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>\u0421\u043a\u0440\u044b\u0442\u044c</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>\u0418\u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c</translation>\n@@ -1872,6 +1978,18 @@\n         <source>A fee higher than %1 is considered an absurdly high fee.</source>\n         <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c %1, \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0439.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d.</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>\u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0439\u0441\u044f \u0430\u0434\u0440\u0435\u0441: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 Bitcoin</translation>\n@@ -1943,10 +2061,26 @@\n         <source>Remove this entry</source>\n         <translation>\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u0443 \u0437\u0430\u043f\u0438\u0441\u044c</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>\u0421 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0439 \u0441\u0443\u043c\u043c\u044b \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0435\u0440\u0436\u0430\u043d\u0430 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f. \u041f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044e \u043f\u0440\u0438\u0434\u0451\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 \u0431\u0438\u0442\u043a\u043e\u0438\u043d\u043e\u0432, \u0447\u0435\u043c \u0432\u044b \u0432\u0432\u043e\u0434\u0438\u0442\u0435 \u0432 \u043f\u043e\u043b\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b\u0431\u0440\u0430\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0440\u043e\u0432\u043d\u0443.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>\u0412\u044b\u0447\u0435\u0441\u0442\u044c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e \u0438\u0437 \u0441\u0443\u043c\u043c\u044b</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>\u042d\u0442\u043e \u043d\u0435\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>\u042d\u0442\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0435\u0442\u043a\u0443 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445</translation>\n@@ -1985,6 +2119,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f/\u0441\u043e\u0433\u043b\u0430\u0448\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u043c\u0438 \u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u0432\u043e\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0431\u0438\u0442\u043a\u043e\u0438\u043d\u044b \u043d\u0430 \u043d\u0438\u0445. \u0411\u0443\u0434\u044c\u0442\u0435 \u043e\u0441\u0442\u043e\u0440\u043e\u0436\u043d\u044b, \u043d\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0439\u0442\u0435 \u0447\u0442\u043e-\u0442\u043e \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u0438\u043b\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435, \u0442\u0430\u043a \u043a\u0430\u043a \u0444\u0438\u0448\u0438\u043d\u0433\u043e\u0432\u044b\u0435 \u0430\u0442\u0430\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u0431\u043c\u0430\u043d\u043d\u044b\u043c \u043f\u0443\u0442\u0451\u043c \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432\u0430\u0441 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0435\u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u041f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u044b \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u044b \u0432\u043f\u043b\u043e\u0442\u044c \u0434\u043e \u043c\u0435\u043b\u043e\u0447\u0435\u0439.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441 Bitcoin, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>\n@@ -2037,6 +2175,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0438\u0436\u0435 \u0430\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f, \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044b \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0442\u0430\u0431\u044b \u0438 \u0442.\u043f. \u0432 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b) \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043b\u0438\u0448\u043d\u0435\u0433\u043e \u0432 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u0441\u0430\u043c\u0438\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c\u044b\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0441\u0442\u0430\u0442\u044c \u0436\u0435\u0440\u0442\u0432\u043e\u0439 \u0430\u0442\u0430\u043a\u0438 \"man-in-the-middle\". \u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u0447\u0442\u043e \u044d\u0442\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043b\u0438\u0448\u044c \u0430\u0432\u0442\u043e\u0440\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0432\u0448\u0435\u0433\u043e, \u043d\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441 Bitcoin, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>\n@@ -2368,6 +2510,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f \u043b\u0438 \u0432 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441 \u0434\u043b\u044f \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u044f.</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430\u043c\u0435\u0440\u0435\u043d\u0438\u0435/\u0446\u0435\u043b\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>\u0421\u0443\u043c\u043c\u0430, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u0430\u044f, \u0438\u043b\u0438 \u0441\u043d\u044f\u0442\u0430\u044f \u0441 \u0431\u0430\u043b\u0430\u043d\u0441\u0430.</translation>\n@@ -2618,17 +2764,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>\u0420\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0435\u0439 MIT, \u0441\u043c. \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b COPYING \u0438\u043b\u0438 &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u0412\u043e\u0439\u0442\u0438 \u0432 \u0440\u0435\u0436\u0438\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0435\u043f\u044c, \u0433\u0434\u0435 \u0431\u043b\u043e\u043a\u0438 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u043c\u0433\u043d\u043e\u0432\u0435\u043d\u043d\u043e.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u0433\u0434\u0430 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435 (%s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 TxID)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>\u0412 \u044d\u0442\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 -genproclimit \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0431\u043b\u043e\u043a\u043e\u0432 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0439 \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435; \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043d\u0438\u0437\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0437\u0430 \u0441\u0447\u0451\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f (\u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f) \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432. \u042d\u0442\u043e\u0442 \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u0438 \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c \u0441 -txindex. \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u043e\u043f\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0 = \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432, &gt;%u = \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432 \u041c\u0431 \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u043e\u0432 \u0431\u043b\u043e\u043a\u043e\u0432)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2642,6 +2788,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0431\u0438\u043d\u0434\u0438\u0442\u044c\u0441\u044f \u043d\u0430 %s \u043d\u0430 \u044d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, Bitcoin Core \u0443\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u0412\u041d\u0418\u041c\u0410\u041d\u0418\u0415: \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0431\u043b\u043e\u043a\u043e\u0432, %d \u0431\u043b\u043e\u043a\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 %d \u0447\u0430\u0441\u043e\u0432 (\u043e\u0436\u0438\u0434\u0430\u043b\u043e\u0441\u044c %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u0412\u041d\u0418\u041c\u0410\u041d\u0418\u0415: \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0435\u0442\u0435\u0432\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e %d \u0431\u043b\u043e\u043a\u043e\u0432 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 %d \u0447\u0430\u0441\u043e\u0432 (\u043e\u0436\u0438\u0434\u0430\u043b\u043e\u0441\u044c %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 -paytxfee. \u042d\u0442\u043e \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u0442\u0435 \u043f\u0440\u0438 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n@@ -2758,6 +2912,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>\u0421\u043e\u0435\u0434\u0438\u043d\u044f\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0441\u0435\u0442\u0438 &lt;net&gt; (ipv4, ipv6 \u0438\u043b\u0438 onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>\u0420\u0435\u0436\u0438\u043c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0431\u043b\u043e\u043a\u043e\u0432 \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c \u0441 -txindex.</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043a\u044d\u0448\u0430 \u0411\u0414 \u0432 \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430\u0445(\u043e\u0442 %d \u0434\u043e %d, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n@@ -2770,10 +2932,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0444\u0430\u0439\u043b \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 (\u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u042d\u0442\u043e \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043e \u043d\u0430 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c UPnP \u0434\u043b\u044f \u043f\u0440\u043e\u0431\u0440\u043e\u0441\u0430 \u043f\u043e\u0440\u0442\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -2794,6 +2952,10 @@\n         <source>Wallet options:</source>\n         <translation>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u044d\u0442\u0430 \u0432\u0435\u0440\u0441\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430; \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e -reindex, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c -txindex</translation>\n@@ -2826,6 +2988,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c\u0438 \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u043c\u0435\u0441\u0442\u043e umask 077 (\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u043c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>\u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0432\u0430\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 IP \u0430\u0434\u0440\u0435\u0441 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1 \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0438 \u0438 \u0431\u0435\u0437 -externalip \u0438\u043b\u0438 -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 (\u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0440\u043d\u0443\u043b\u043e \u043e\u0448\u0438\u0431\u043a\u0443 %s)</translation>\n@@ -2842,10 +3008,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 (\u0432 BTC/\u041a\u0431) \u043c\u0435\u043d\u044c\u0448\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0443\u043b\u0435\u0432\u044b\u043c\u0438 \u0434\u043b\u044f \u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0438\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 (\u0432 BTC/\u041a\u0431) \u043c\u0435\u043d\u044c\u0448\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0443\u043b\u0435\u0432\u044b\u043c\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u0415\u0441\u043b\u0438 paytxfee \u043d\u0435 \u0437\u0430\u0434\u0430\u043d, \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u0443\u044e \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0437\u0430 n \u0431\u043b\u043e\u043a\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -2858,10 +3020,18 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0438\u0436\u0435, \u0447\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0432 %d \u041c\u0431. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0430 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DNS, \u0435\u0441\u043b\u0438 \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u043c\u0430\u043b\u043e (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d -connect)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0443\u0447\u0451\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0440\u043e\u043a\u0441\u0438-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0438 Tor (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432\u044b\u0441\u043e\u043a\u043e\u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0445/\u043d\u0438\u0437\u043a\u043e\u043a\u043e\u043c\u0438\u0441\u0441\u0438\u043e\u043d\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n@@ -2870,6 +3040,10 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043c\u043e\u043d\u0435\u0442, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430 (-1 = \u0432\u0441\u0435 \u044f\u0434\u0440\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>\u0421\u0443\u043c\u043c\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0437\u0430 \u0432\u044b\u0447\u0435\u0442\u043e\u043c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0430</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u042d\u0442\u043e\u0442 \u043f\u0440\u043e\u0434\u0443\u043a\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u041f\u041e, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0435 OpenSSL Project \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 OpenSSL Toolkit &lt;https://www.openssl.org/&gt; \u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u041f\u041e, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 Eric Young \u0438 \u041f\u041e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 UPnP, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 Thomas Bernard.</translation>\n@@ -2910,10 +3084,26 @@ rpcpassword=%s\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438 \u0438\u0437 \u0431\u0435\u043b\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442\u044c \u0431\u044b\u0442\u044c \u0437\u0430\u0431\u0430\u043d\u0435\u043d\u044b \u0437\u0430 DoS, \u0438 \u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0442\u0440\u0430\u043d\u0441\u043b\u0438\u0440\u0443\u044e\u0442\u0441\u044f, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0443\u0436\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0432 \u043f\u0430\u043c\u044f\u0442\u0438. \u041f\u043e\u043b\u0435\u0437\u043d\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0448\u043b\u044e\u0437\u0430.</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e -reindex, \u0447\u0442\u043e\u0431\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u043a \u043f\u043e\u043b\u043d\u043e\u043c\u0443 \u0440\u0435\u0436\u0438\u043c\u0443. \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0451\u0442 \u043a \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0432\u0441\u0435\u0439 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 REST-\u0437\u0430\u043f\u0440\u043e\u0441\u044b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043b\u0443\u0447\u0448\u0430\u044f \u0446\u0435\u043f\u044c...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>\u041d\u0435\u043b\u044c\u0437\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u043e\u043c \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0441 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u0431\u043b\u043e\u043a\u043e\u0432.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u0451\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0430\u0434\u0440\u0435\u0441 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 -whitebind: '%s'</translation>\n@@ -3003,12 +3193,12 @@ rpcpassword=%s\n         <translation>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 RPC \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0445 HTTP \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0442\u044c 1 \u0438\u0437 \u043a\u0430\u0436\u0434\u044b\u0445 &lt;n&gt; \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>\u041f\u0435\u0440\u0435\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0438\u043d\u0434\u0435\u043a\u0441 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 blk000??.dat</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u0440\u0430\u0437\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0442\u044c 1 \u0438\u0437 \u043a\u0430\u0436\u0434\u044b\u0445 &lt;n&gt; \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>\u041f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c P2P \u0441\u0435\u0442\u0435\u0432\u044b\u0435 \u0442\u0440\u0435\u0432\u043e\u0433\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3046,6 +3236,10 @@ rpcpassword=%s\n         <source>Start minimized</source>\n         <translation>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441\u0432\u0451\u0440\u043d\u0443\u0442\u044b\u043c</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>\u0421\u0443\u043c\u043c\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u0430\u043b\u0430 \u0434\u043b\u044f \u0443\u043f\u043b\u0430\u0442\u044b \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>\u042d\u0442\u043e \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u041f\u041e.</translation>\n@@ -3066,6 +3260,10 @@ rpcpassword=%s\n         <source>Transaction too large</source>\n         <translation>\u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0430\u044f</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u043a %s \u043d\u0430 \u044d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 (bind \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443 %s)</translation>\n@@ -3146,18 +3344,10 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438: \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430; 2 = \u043e\u0442\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>\u0421\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043f\u0430\u043c\u044f\u0442\u0438 \u043d\u0430 \u0434\u0438\u0441\u043a \u043a\u0430\u0436\u0434\u044b\u0435 &lt;n&gt; \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>\u041d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 -checkblocks (0-4, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>\u0417\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0432 \u043b\u043e\u0433 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0438 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e \u043d\u0430 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0434\u043e\u0431\u044b\u0447\u0438 \u0431\u043b\u043e\u043a\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>\u0414\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 RPC-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c getrawtransaction (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -3186,18 +3376,10 @@ rpcpassword=%s\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>\u0412\u0441\u0435\u0433\u0434\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0430 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DNS (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c, \u043f\u0435\u0440\u0435\u043a\u0440\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0440\u0435\u0436\u0438\u043c\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>\u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0434\u043e\u0431\u044b\u0447\u0443 \u043c\u043e\u043d\u0435\u0442 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -3214,10 +3396,6 @@ rpcpassword=%s\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 -proxy: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043a\u044d\u0448\u0430 \u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439 &lt;n&gt; \u0437\u0430\u043f\u0438\u0441\u044f\u043c\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>\u041f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f JSON-RPC \u043d\u0430 &lt;\u043f\u043e\u0440\u0442\u0443&gt; (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u \u0438\u043b\u0438 %u \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0441\u0435\u0442\u0438)</translation>\n@@ -3230,6 +3408,10 @@ rpcpassword=%s\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 &lt;n&gt; \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043a \u0443\u0437\u043b\u0430\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>\u0420\u0430\u0441\u0441\u044b\u043b\u0430\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0438\u0437 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0443\u0444\u0435\u0440\u0430 \u043f\u0440\u0438\u0451\u043c\u0430 \u043d\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435, &lt;n&gt;*1000 \u0431\u0430\u0439\u0442 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -3238,10 +3420,6 @@ rpcpassword=%s\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0443\u0444\u0435\u0440\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043d\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435, &lt;n&gt;*1000 \u0431\u0430\u0439\u0442 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0446\u0435\u043f\u044c \u0431\u043b\u043e\u043a\u043e\u0432, \u043b\u0438\u0448\u044c \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u043c \u0442\u043e\u0447\u043a\u0430\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>\u0414\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043a \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u043e\u043c\u0443 \u0432\u044b\u0432\u043e\u0434\u0443 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -3254,10 +3432,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u0422\u0440\u0430\u043d\u0441\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0435-P2SH \u043c\u0443\u043b\u044c\u0442\u0438\u043f\u043e\u0434\u043f\u0438\u0441\u044c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>\u0424\u0430\u0439\u043b \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n@@ -3274,10 +3448,6 @@ rpcpassword=%s\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 RPC (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u043b\u0430\u0433 DB_PRIVATE \u0432 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n@@ -3294,10 +3464,6 @@ rpcpassword=%s\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>\u0422\u0440\u0430\u0442\u0438\u0442\u044c \u043d\u0435\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u0443\u044e \u0441\u0434\u0430\u0447\u0443 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>\u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0430 \u0431\u043b\u043e\u043a\u043e\u0432 \u0441 \u0434\u0438\u0441\u043a\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>\u041f\u043e\u0440\u043e\u0433 \u0434\u043b\u044f \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0432\u0435\u0434\u0443\u0449\u0438\u0445 \u0441\u0435\u0431\u044f \u0443\u0437\u043b\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>"
      },
      {
        "sha": "9ca08ee7da7b8fcdaaf11a114ea038bbe5ace2ea",
        "filename": "src/qt/locale/bitcoin_sah.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sah.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sah.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sah.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sah\" version=\"2.1\">\n+<TS language=\"sah\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     </context>"
      },
      {
        "sha": "48d5a0914288076be2f788b4e0e3966ffba6cfa0",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 587,
        "deletions": 33,
        "changes": 620,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sk\" version=\"2.1\">\n+<TS language=\"sk\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Ste si ist\u00ed, \u017ee si \u017eel\u00e1te za\u0161ifrova\u0165 pe\u0148a\u017eenku?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Jadro Bitcoin sa teraz ukon\u010d\u00ed pre dokon\u010denie procesu \u0161ifrovania. Pam\u00e4taj, \u017ee \u0161ifrovanie pe\u0148a\u017eenky \u0164a nem\u00f4\u017ee \u00faplne ochr\u00e1ni\u0165 pred kr\u00e1de\u017eou bitcoinov pomocou \u0161kodliv\u00e9ho software.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>D\u00d4LE\u017dIT\u00c9: V\u0161etky doteraj\u0161ie z\u00e1lo\u017en\u00e9 k\u00f3pie pe\u0148a\u017eenky ktor\u00e9 ste zhotovili by mali by\u0165 nahraden\u00e9 nov\u00fdm za\u0161ifrovan\u00fdm s\u00faborom s pe\u0148a\u017eenkou. Z bezpe\u010dnostn\u00fdch d\u00f4vodov sa predch\u00e1dzaj\u00face k\u00f3pie neza\u0161ifrovanej pe\u0148a\u017eenky stan\u00fa neu\u017eito\u010dn\u00e9 ke\u010f za\u010dnete pou\u017e\u00edva\u0165 nov\u00fa za\u0161ifrovan\u00fa pe\u0148a\u017eenku.</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Zadajte nov\u00e9 heslo k pe\u0148a\u017eenke.&lt;br/&gt;Pros\u00edm pou\u017eite heslo s d\u013a\u017ekou aspo\u0148 &lt;b&gt;10 alebo viac n\u00e1hodn\u00fdch znakov&lt;/b&gt;, alebo &lt;b&gt;8 alebo viac slov&lt;/b&gt;.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Zadajte star\u00e9 a nov\u00e9 heslo k pe\u0148a\u017eenke.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u0160ifrovanie pe\u0148a\u017eenky zlyhalo</translation>\n@@ -268,7 +276,7 @@\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>&amp;Backup pe\u0148a\u017eenku...</translation>\n+        <translation>&amp;Z\u00e1lohova\u0165 pe\u0148a\u017eenku...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n@@ -320,7 +328,7 @@\n     </message>\n     <message>\n         <source>&amp;Verify message...</source>\n-        <translation>Overi\u0165 spr\u00e1vu</translation>\n+        <translation>O&amp;veri\u0165 spr\u00e1vu...</translation>\n     </message>\n     <message>\n         <source>Bitcoin</source>\n@@ -384,12 +392,16 @@\n     </message>\n     <message>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation>Vy\u017eiada\u0165 platbu (vygeneruje QR k\u00f3d a bitcoin: URI)</translation>\n+        <translation>Vy\u017eiada\u0165 platby (vygeneruje QR k\u00f3dy a bitcoin: URI)</translation>\n     </message>\n     <message>\n         <source>&amp;About Bitcoin Core</source>\n         <translation>O jadre Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Upravi\u0165 mo\u017enosti nastavenia pre Jadro Bitcoin</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>Zobrazi\u0165 zoznam pou\u017eit\u00fdch adries odosielate\u013ea a ich popisy</translation>\n@@ -410,14 +422,38 @@\n         <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Zobrazi\u0165 pomocn\u00fa spr\u00e1vu od Bitcoin Jadra pre z\u00edskanie zoznamu dostupn\u00fdch mo\u017enost\u00ed pr\u00edkazov\u00e9ho riadku</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n active connection(s) to Bitcoin network</source>\n+        <translation><numerusform>%n akt\u00edvne pripojenie do siete Bitcoin</numerusform><numerusform>%n akt\u00edvne pripojenia do siete Bitcoin</numerusform><numerusform>%n akt\u00edvnych pripojen\u00ed do siete Bitcoin</numerusform></translation>\n+    </message>\n     <message>\n         <source>No block source available...</source>\n         <translation>Nedostupn\u00fd zdroj blokov...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Spracovan\u00fdch %n blok transak\u010dnej hist\u00f3rie.</numerusform><numerusform>Spracovan\u00fdch %n bloky transak\u010dnej hist\u00f3rie.</numerusform><numerusform>Spracovan\u00fdch %n blokov transak\u010dnej hist\u00f3rie.</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n hodina</numerusform><numerusform>%n hodiny</numerusform><numerusform>%n hod\u00edn</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n de\u0148</numerusform><numerusform>%n dni</numerusform><numerusform>%n dn\u00ed</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n t\u00fd\u017ede\u0148</numerusform><numerusform>%n t\u00fd\u017edne</numerusform><numerusform>%n t\u00fd\u017ed\u0148ov</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation> %1 a  %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n rok</numerusform><numerusform>%n roky</numerusform><numerusform>%n rokov</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 pozadu</translation>\n@@ -450,13 +486,43 @@\n         <source>Catching up...</source>\n         <translation>S\u0165ahujem...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>D\u00e1tum: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>Suma: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Typ: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Popis: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Adresa: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Odoslan\u00e9 transakcie</translation>\n     </message>\n     <message>\n         <source>Incoming transaction</source>\n-        <translation>Prijat\u00e9 transakcie</translation>\n+        <translation>Prijat\u00e1 transakcia</translation>\n     </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n@@ -648,6 +714,18 @@\n         <source>none</source>\n         <translation>\u017eiadne</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Tento popis s\u010dervenie ak ve\u013ekos\u0165 transakcie presiahne 1000 bajtov.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Tento popis s\u010dervenie ak je priorita ni\u017e\u0161ia ako \"stredn\u00e1\".</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Tento popis s\u010dervenie ak ktor\u00fdko\u013evek pr\u00edjemca dostane sumu men\u0161iu ako %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>M\u00f4\u017ee sa l\u00ed\u0161i\u0165 o +/- %1 satoshi pre ka\u017ed\u00fd vstup</translation>\n@@ -824,11 +902,23 @@\n         <source>Bitcoin Core</source>\n         <translation>Jadro Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Error: Specified data directory \"%1\" cannot be created.</source>\n+        <translation>Chyba: Zadan\u00fd prie\u010dinok pre d\u00e1ta \"%1\" nem\u00f4\u017ee by\u0165 vytvoren\u00fd.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>Chyba</translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>%n GB vo\u013en\u00e9ho miesta</numerusform><numerusform>%n GB vo\u013en\u00e9ho miesta</numerusform><numerusform>%n GB vo\u013en\u00e9ho miesta</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>(of %n GB needed)</source>\n+        <translation><numerusform>(z %n GB potrebn\u00e9ho)</numerusform><numerusform>(z %n GB potrebn\u00fdch)</numerusform><numerusform>(z %n GB potrebn\u00fdch)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -886,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>IP adresy proxy (napr. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimalizova\u0165 namiesto ukon\u010denia aplik\u00e1cie ke\u010f sa okno zavrie. Ke\u010f je zvolen\u00e1 t\u00e1to mo\u017enos\u0165, aplik\u00e1cia sa zavrie len po zvolen\u00ed Ukon\u010di\u0165 v menu.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>Tu sa d\u00e1 nastavi\u0165 jazyk u\u017e\u00edvate\u013esk\u00e9ho rozhrania. Toto nastavenie bude \u00fa\u010dinn\u00e9 po re\u0161tartovan\u00ed Jadra Bitcoin.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URL tret\u00edch str\u00e1n (napr. prehliada\u010d blockchain) ktor\u00e9 sa zobrazuj\u00fa v z\u00e1lo\u017eke transakci\u00ed ako polo\u017eky kontextov\u00e9ho menu. %s v URL je nahraden\u00e9 hash-om transakcie. Viacer\u00e9 URL s\u00fa oddelen\u00e9 zvislou \u010diarou |.</translation>\n@@ -896,7 +994,7 @@\n     </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n-        <translation>Akt\u00e9vne mo\u017enosti pr\u00edkazov\u00e9ho riadku ktor\u00e9 prep\u00ed\u0161u mo\u017enosti vy\u0161\u0161ie:</translation>\n+        <translation>Akt\u00edvne mo\u017enosti pr\u00edkazov\u00e9ho riadku ktor\u00e9 prep\u00ed\u0161u mo\u017enosti vy\u0161\u0161ie:</translation>\n     </message>\n     <message>\n         <source>Reset all client options to default.</source>\n@@ -910,6 +1008,14 @@\n         <source>&amp;Network</source>\n         <translation>Sie\u0165</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>Automaticky spusti\u0165 Jadro Bitcoin po prihl\u00e1sen\u00ed do syst\u00e9mu</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;Spusti\u0165 Bitcoin pri spusten\u00ed syst\u00e9mu spr\u00e1vy okien</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = auto, &lt;0 = necha\u0165 to\u013eko jadier vo\u013en\u00fdch)</translation>\n@@ -1022,6 +1128,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>Re\u0161tart klienta potrebn\u00fd pre aktivovanie zmien.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>Klient bude vypnut\u00fd, chcete pokra\u010dova\u0165?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>T\u00e1to zmena by vy\u017eadovala re\u0161tart klienta.</translation>\n@@ -1041,6 +1151,10 @@\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>Zobrazen\u00e9 inform\u00e1cie m\u00f4\u017eu by\u0165 neaktu\u00e1lne. Va\u0161a pe\u0148a\u017eenka sa automaticky synchronizuje so sie\u0165ou Bitcoin po nadviazan\u00ed spojenia, ale tento proces e\u0161te nie je ukon\u010den\u00fd.</translation>\n     </message>\n+    <message>\n+        <source>Watch-only:</source>\n+        <translation>Iba sledovan\u00e9:</translation>\n+    </message>\n     <message>\n         <source>Available:</source>\n         <translation>Disponibiln\u00e9:</translation>\n@@ -1077,11 +1191,31 @@\n         <source>Your current total balance</source>\n         <translation>V\u00e1\u0161 s\u00fa\u010dasn\u00fd celkov\u00fd zostatok</translation>\n     </message>\n+    <message>\n+        <source>Your current balance in watch-only addresses</source>\n+        <translation>V\u00e1\u0161 celkov\u00fd zostatok pre adresy ktor\u00e9 sa iba sleduj\u00fa</translation>\n+    </message>\n+    <message>\n+        <source>Spendable:</source>\n+        <translation>Pou\u017eite\u013en\u00e9:</translation>\n+    </message>\n     <message>\n         <source>Recent transactions</source>\n         <translation>Ned\u00e1vne transakcie</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Unconfirmed transactions to watch-only addresses</source>\n+        <translation>Nepotvrden\u00e9 transakcie pre adresy ktor\u00e9 sa iba sleduj\u00fa</translation>\n+    </message>\n+    <message>\n+        <source>Mined balance in watch-only addresses that has not yet matured</source>\n+        <translation>Vy\u0165a\u017een\u00e1 suma pre adresy ktor\u00e9 sa iba sleduj\u00fa ale e\u0161te nie je dozret\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Current total balance in watch-only addresses</source>\n+        <translation>Aktu\u00e1lny celkov\u00fd zostatok pre adries ktor\u00e9 sa iba sleduj\u00fa</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1092,6 +1226,18 @@\n         <source>Invalid payment address %1</source>\n         <translation>Neplatn\u00e1 adresa platby %1</translation>\n     </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>Po\u017eiadavka na platbu zamietnut\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Payment request network doesn't match client network.</source>\n+        <translation>Sie\u0165 po\u017eiadavky na platbu nie je zhodn\u00e1 so sie\u0165ou klienta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request is not initialized.</source>\n+        <translation>Po\u017eiadavka na platbu nie je inicializovan\u00e1</translation>\n+    </message>\n     <message>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation>Po\u017eadovan\u00e1 platba sumy  %1 je pr\u00edli\u0161 mal\u00e1 (pova\u017eovan\u00e1 za prach).</translation>\n@@ -1108,22 +1254,50 @@\n         <source>Payment request fetch URL is invalid: %1</source>\n         <translation>URL pre stiahnutie v\u00fdzvy na zaplatenie je neplatn\u00e9: %1</translation>\n     </message>\n+    <message>\n+        <source>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n+        <translation>URI sa ned\u00e1 analyzova\u0165! To m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 neplatnou Bitcoin adresou alebo zle upraven\u00fdmi vlastnos\u0165ami URI.</translation>\n+    </message>\n     <message>\n         <source>Payment request file handling</source>\n         <translation>Obsluha s\u00faboru s po\u017eiadavkou na platbu</translation>\n     </message>\n+    <message>\n+        <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n+        <translation>S\u00fabor s v\u00fdzvou na zaplatenie sa ned\u00e1 \u010d\u00edta\u0165 alebo spracova\u0165! To m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 aj neplatn\u00fdm s\u00faborom s v\u00fdzvou.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>Program nepodporuje neoveren\u00e9 platobn\u00e9 v\u00fdzvy na vlastn\u00e1 skripty.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Chybn\u00e1 po\u017eiadavka na platbu.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>Vr\u00e1tenie z  %1</translation>\n     </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>Po\u017eiadavka na platbu %1 je pr\u00edli\u0161 ve\u013ek\u00e1 (%2 bajtov, povolen\u00e9 je %3 bajtov).</translation>\n+    </message>\n+    <message>\n+        <source>Payment request DoS protection</source>\n+        <translation>Ochrana pred zahlten\u00edm po\u017eiadavkami na platbu</translation>\n+    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Chyba komunik\u00e1cie s %1: %2 </translation>\n     </message>\n+    <message>\n+        <source>Payment request cannot be parsed!</source>\n+        <translation>Po\u017eiadavka na platbu nem\u00f4\u017ee by\u0165 analyzovan\u00e1!</translation>\n+    </message>\n     <message>\n         <source>Bad response from server %1</source>\n         <translation>Zl\u00e1 odpove\u010f zo servera %1</translation>\n@@ -1143,6 +1317,10 @@\n         <source>User Agent</source>\n         <translation>Aplik\u00e1cia</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>Uzol/Slu\u017eba</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>\u010cas odozvy</translation>\n@@ -1158,6 +1336,10 @@\n         <source>Enter a Bitcoin address (e.g. %1)</source>\n         <translation>Zadajte bitcoin adresu (napr. %1)</translation>\n     </message>\n+    <message>\n+        <source>%1 d</source>\n+        <translation>%1 d</translation>\n+    </message>\n     <message>\n         <source>%1 h</source>\n         <translation>%1 h</translation>\n@@ -1166,6 +1348,14 @@\n         <source>%1 m</source>\n         <translation>%1 m</translation>\n     </message>\n+    <message>\n+        <source>%1 s</source>\n+        <translation>%1 s</translation>\n+    </message>\n+    <message>\n+        <source>None</source>\n+        <translation>\u017diadne</translation>\n+    </message>\n     <message>\n         <source>N/A</source>\n         <translation>nie je k dispoz\u00edcii</translation>\n@@ -1252,6 +1442,10 @@\n         <source>Current number of blocks</source>\n         <translation>Aktu\u00e1lny po\u010det blokov</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Otvori\u0165 Bitcoin log s\u00fabor pre ladenie z aktu\u00e1lneho d\u00e1tov\u00e9ho adres\u00e1ra. Toto m\u00f4\u017ee trva\u0165 nieko\u013eko sek\u00fand pre ve\u013ek\u00e9 s\u00fabory.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Prijat\u00e9</translation>\n@@ -1260,6 +1454,10 @@\n         <source>Sent</source>\n         <translation>Odoslan\u00e9</translation>\n     </message>\n+    <message>\n+        <source>&amp;Peers</source>\n+        <translation>&amp;Partneri</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>Vyberte po\u010d\u00edta\u010d pre zobrazenie podrobnost\u00ed.</translation>\n@@ -1284,10 +1482,26 @@\n         <source>Starting Height</source>\n         <translation>Po\u010diato\u010dn\u00e1 v\u00fd\u0161ka</translation>\n     </message>\n+    <message>\n+        <source>Sync Height</source>\n+        <translation>Synchronizovan\u00e1 v\u00fd\u0161ka</translation>\n+    </message>\n+    <message>\n+        <source>Ban Score</source>\n+        <translation>Sk\u00f3re z\u00e1kazu</translation>\n+    </message>\n     <message>\n         <source>Connection Time</source>\n         <translation>D\u013a\u017eka spojenia</translation>\n     </message>\n+    <message>\n+        <source>Last Send</source>\n+        <translation>Posledn\u00e9 odoslanie</translation>\n+    </message>\n+    <message>\n+        <source>Last Receive</source>\n+        <translation>Posledn\u00e9 prijatie</translation>\n+    </message>\n     <message>\n         <source>Bytes Sent</source>\n         <translation>Odoslan\u00fdch bajtov</translation>\n@@ -1300,6 +1514,10 @@\n         <source>Ping Time</source>\n         <translation>\u010cas odozvy</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>\u010casov\u00fd posun</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u010cas posledn\u00e9ho bloku</translation>\n@@ -1344,6 +1562,10 @@\n         <source>Clear console</source>\n         <translation>Vymaza\u0165 konzolu</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>Vitajte v RPC konzole pre Jadro Bitcoin.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>Pou\u017ei \u0161\u00edpky hore a dolu pre navig\u00e1ciu hist\u00f3riou a &lt;b&gt;Ctrl-L&lt;/b&gt; pre vy\u010distenie obrazovky.</translation>\n@@ -1368,6 +1590,14 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>via %1</source>\n+        <translation>cez %1</translation>\n+    </message>\n+    <message>\n+        <source>never</source>\n+        <translation>nikdy</translation>\n+    </message>\n     <message>\n         <source>Inbound</source>\n         <translation>Prich\u00e1dzaj\u00face</translation>\n@@ -1376,6 +1606,10 @@\n         <source>Outbound</source>\n         <translation>Odch\u00e1dzaj\u00face</translation>\n     </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>nezn\u00e1my</translation>\n+    </message>\n     <message>\n         <source>Fetching...</source>\n         <translation>Z\u00edskava sa...</translation>\n@@ -1612,6 +1846,10 @@\n         <source>Transaction Fee:</source>\n         <translation>Poplatok za transakciu:</translation>\n     </message>\n+    <message>\n+        <source>Choose...</source>\n+        <translation>Zvoli\u0165...</translation>\n+    </message>\n     <message>\n         <source>collapse fee-settings</source>\n         <translation>zbali\u0165 nastavenia poplatkov</translation>\n@@ -1624,6 +1862,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>Ak je poplatok nastaven\u00fd na 1000 satoshi a transakcia je ve\u013ek\u00e1 len 250 bajtov, potom \"za kilobajt\" zaplat\u00ed poplatok 250 satoshi, ale \"spolu aspo\u0148\" zaplat\u00ed 1000 satoshi. Pre transakcie v\u00e4\u010d\u0161ie ako kilobajt platia oba sp\u00f4soby za ka\u017ed\u00fd kilobajt.</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Skry\u0165</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>spolu aspo\u0148</translation>\n@@ -1686,7 +1928,7 @@\n     </message>\n     <message>\n         <source>Clear &amp;All</source>\n-        <translation>Zmaza\u0165 &amp;v\u0161etko</translation>\n+        <translation>&amp;Zmaza\u0165 v\u0161etko</translation>\n     </message>\n     <message>\n         <source>Balance:</source>\n@@ -1764,10 +2006,26 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Transakcia bola zamietnut\u00e1! Toto sa m\u00f4\u017ee sta\u0165 ak niektor\u00e9 coins vo va\u0161ej pe\u0148a\u017eenke u\u017e boli minut\u00e9, ako ke\u010f pou\u017eijete k\u00f3piu wallet.dat a coins boli minut\u00e9 z k\u00f3pie ale neozna\u010den\u00e9 ako minut\u00e9 tu.</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>Poplatok vy\u0161\u0161\u00ed ako %1 je pova\u017eovan\u00fd za \u0161ialene vysok\u00fd.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Zaplati\u0165 minim\u00e1lny poplatok %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Adresa pr\u00edjemcu je neplatn\u00e1. Pros\u00edm, overte ju.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Na\u0161la sa duplicitn\u00e1 adresa: ka\u017ed\u00fa adresu je mo\u017en\u00e9 pou\u017ei\u0165 len raz.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Varovanie: Nespr\u00e1vna Bitcoin adresa</translation>\n@@ -1819,6 +2077,10 @@\n         <source>This is a normal payment.</source>\n         <translation>Toto je norm\u00e1lna platba.</translation>\n     </message>\n+    <message>\n+        <source>The Bitcoin address to send the payment to</source>\n+        <translation>Zvo\u013ete adresu kam posla\u0165 platbu</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1835,10 +2097,22 @@\n         <source>Remove this entry</source>\n         <translation>Odstr\u00e1ni\u0165 t\u00fato polo\u017eku</translation>\n     </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>Odpo\u010d\u00edta\u0165 poplatok od s&amp;umy</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Spr\u00e1va:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Toto je neoveren\u00e1 v\u00fdzva k platbe.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Toto je overen\u00e1 v\u00fdzva k platbe.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Vlo\u017ete popis pre t\u00fato adresu aby sa ulo\u017eila do zoznamu pou\u017eit\u00fdch adries</translation>\n@@ -1919,19 +2193,23 @@\n     </message>\n     <message>\n         <source>Clear &amp;All</source>\n-        <translation>Zmaza\u0165 &amp;v\u0161etko</translation>\n+        <translation>&amp;Zmaza\u0165 v\u0161etko</translation>\n     </message>\n     <message>\n         <source>&amp;Verify Message</source>\n-        <translation>Overi\u0165 spr\u00e1vu...</translation>\n+        <translation>O&amp;veri\u0165 spr\u00e1vu...</translation>\n+    </message>\n+    <message>\n+        <source>The Bitcoin address the message was signed with</source>\n+        <translation>Adresa Bitcoin, ktorou bola podp\u00edsan\u00e1 spr\u00e1va</translation>\n     </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Over\u00edm spr\u00e1vy sa uisti\u0165 \u017ee bola podp\u00edsan\u00e1 ozna\u010denou Bitcoin adresou</translation>\n     </message>\n     <message>\n         <source>Verify &amp;Message</source>\n-        <translation>Overi\u0165 spr\u00e1vu</translation>\n+        <translation>&amp;Overi\u0165 spr\u00e1vu</translation>\n     </message>\n     <message>\n         <source>Reset all verify message fields</source>\n@@ -2038,6 +2316,10 @@\n         <source>Status</source>\n         <translation>Stav</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>, broadcast through %n node(s)</source>\n+        <translation><numerusform>, vysiela\u0165 cez %n uzol</numerusform><numerusform>, vysiela\u0165 cez %n uzle</numerusform><numerusform>, vysiela\u0165 cez %n uzolov</numerusform></translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>D\u00e1tum</translation>\n@@ -2062,6 +2344,10 @@\n         <source>own address</source>\n         <translation>vlastn\u00e1 adresa</translation>\n     </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n     <message>\n         <source>label</source>\n         <translation>popis</translation>\n@@ -2078,6 +2364,14 @@\n         <source>Debit</source>\n         <translation>Debet</translation>\n     </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Debit spolu</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Kredit spolu</translation>\n+    </message>\n     <message>\n         <source>Transaction fee</source>\n         <translation>Transak\u010dn\u00fd poplatok</translation>\n@@ -2104,7 +2398,7 @@\n     </message>\n     <message>\n         <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>Vytvoren\u00e9 coins musia dospie\u0165 %1 blokov k\u00fdm m\u00f4\u017eu by\u0165 minut\u00e9. Ke\u010f vytvor\u00edte tento blok, bude rozoslan\u00fd do siete aby bol akceptovan\u00fd do re\u0165aze blokov. Ak sa nedostane re\u0165aze, jeho stav sa zmen\u00ed na \"zamietnut\u00fd\" a nebude sa da\u0165 min\u00fa\u0165. Toto sa m\u00f4\u017ee ob\u010das sta\u0165 ak in\u00e1 n\u00f3da vytvor\u00ed blok pribli\u017ene v tom istom \u010dase.</translation>\n+        <translation>Vygenerovan\u00e9 mince musia dospie\u0165 %1 blokov k\u00fdm m\u00f4\u017eu by\u0165 minut\u00e9. Ke\u010f vytvor\u00edte tento blok, bude rozoslan\u00fd do siete aby bol akceptovan\u00fd do re\u0165aze blokov. Ak sa nedostane do re\u0165azca, jeho stav sa zmen\u00ed na \"zamietnut\u00fd\" a nebude sa da\u0165 min\u00fa\u0165. Toto sa m\u00f4\u017ee ob\u010das sta\u0165 ak in\u00fd uzol vytvor\u00ed blok pribli\u017ene v rovnakom \u010dase.</translation>\n     </message>\n     <message>\n         <source>Debug information</source>\n@@ -2134,6 +2428,10 @@\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, e\u0161te nebola \u00faspe\u0161ne odoslan\u00e1</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Otvoren\u00e9 pre %n \u010fal\u0161\u00ed blok</numerusform><numerusform>Otvoren\u00e9 pre %n \u010fal\u0161ie bloky</numerusform><numerusform>Otvoren\u00e9 pre %n \u010fal\u0161\u00edch blokov</numerusform></translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>nezn\u00e1my</translation>\n@@ -2164,6 +2462,10 @@\n         <source>Immature (%1 confirmations, will be available after %2)</source>\n         <translation>Nezrel\u00e9 (%1 potvrden\u00ed, bude k dispoz\u00edcii po %2)</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Otvoren\u00e9 pre %n \u010fal\u0161\u00ed blok</numerusform><numerusform>Otvoren\u00e9 pre %n \u010fal\u0161ie bloky</numerusform><numerusform>Otvoren\u00e9 pre %n \u010fal\u0161\u00edch blokov</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Otvoren\u00e9 do %1</translation>\n@@ -2178,7 +2480,7 @@\n     </message>\n     <message>\n         <source>Generated but not accepted</source>\n-        <translation>Vypo\u010d\u00edtan\u00e9 ale neakceptovan\u00e9</translation>\n+        <translation>Vygenerovan\u00e9 ale neakceptovan\u00e9</translation>\n     </message>\n     <message>\n         <source>Offline</source>\n@@ -2218,7 +2520,11 @@\n     </message>\n     <message>\n         <source>Mined</source>\n-        <translation>Vyf\u00e1ran\u00e9</translation>\n+        <translation>Vy\u0165a\u017een\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Iba sledovanie</translation>\n     </message>\n     <message>\n         <source>(n/a)</source>\n@@ -2236,6 +2542,10 @@\n         <source>Type of transaction.</source>\n         <translation>Typ transakcie.</translation>\n     </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>\u010ci s\u00fa ale nie s\u00fa, adresy iba na sledovanie zahrnut\u00e9 v tejto transakcii.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>Suma pridan\u00e1 alebo odobran\u00e1 k zostatku.</translation>\n@@ -2285,7 +2595,7 @@\n     </message>\n     <message>\n         <source>Mined</source>\n-        <translation>Vyf\u00e1ran\u00e9</translation>\n+        <translation>Vy\u0165a\u017een\u00e9</translation>\n     </message>\n     <message>\n         <source>Other</source>\n@@ -2327,6 +2637,10 @@\n         <source>Export Transaction History</source>\n         <translation>Exportova\u0165 hist\u00f3riu transakci\u00ed</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>Export zlyhal</translation>\n@@ -2382,7 +2696,11 @@\n </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n-    </context>\n+    <message>\n+        <source>Unit to show amounts in. Click to select another unit.</source>\n+        <translation>Jednotka pre zobrazovanie s\u00fam. Kliknite pre zvolenie inej jednotky.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n     <message>\n@@ -2471,16 +2789,16 @@\n         <translation>Spoji\u0165 s danou adresou a v\u017edy na nej po\u010d\u00fava\u0165. Pou\u017eite z\u00e1pis [host]:port pre IPv6</translation>\n     </message>\n     <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Vojs\u0165 do re\u017eimu regresn\u00e9ho testovania, ktor\u00fd pou\u017e\u00edva \u0161peci\u00e1lnu re\u0165az v ktorej m\u00f4\u017eu by\u0165 bloky v okamihu vyrie\u0161en\u00e9.</translation>\n+        <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n+        <translation>Vymaza\u0165 v\u0161etky transakcie z pe\u0148a\u017eenky a pri spusten\u00ed znova z\u00edska\u0165 z re\u0165azca blokov iba tie z\u00edskan\u00e9 pomocou -rescan</translation>\n     </message>\n     <message>\n-        <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n-        <translation>Vykonaj pr\u00edkaz ke\u010f sa zmen\u00ed transakcia pe\u0148a\u017eenky (%s v pr\u00edkaze je nahraden\u00e1 TxID)</translation>\n+        <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n+        <translation>Distribuovan\u00e9 pod softv\u00e9rovou licenciou MIT, vi\u010f sprievodn\u00fd s\u00fabor COPYING alebo &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>V tomto re\u017eime -getproclimit kontroluje ko\u013eko blokov sa vytvor\u00ed okam\u017eite.</translation>\n+        <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n+        <translation>Vykonaj pr\u00edkaz ke\u010f sa zmen\u00ed transakcia pe\u0148a\u017eenky (%s v pr\u00edkaze je nahraden\u00e1 TxID)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2516,6 +2834,10 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Varovanie: wallet.dat je po\u0161koden\u00fd, \u00fadaje \u00faspe\u0161ne z\u00edskan\u00e9! P\u00f4vodn\u00fd wallet.dat ulo\u017een\u00fd ako wallet.{timestamp}.bak v %s; ak v\u00e1\u0161 zostatok alebo transakcie niesu spr\u00e1vne, mali by ste s\u00fabor obnovi\u0165 zo z\u00e1lohy.</translation>\n     </message>\n+    <message>\n+        <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n+        <translation>Uzle na zoznam povolen\u00fdch, ktor\u00e9 sa prip\u00e1jaj\u00fa z danej netmask alebo IP adresy. M\u00f4\u017ee by\u0165 zadan\u00e9 viac kr\u00e1t.</translation>\n+    </message>\n     <message>\n         <source>(default: 1)</source>\n         <translation>(predvolen\u00e9: 1)</translation>\n@@ -2572,6 +2894,10 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Error opening block database</source>\n         <translation>Chyba otv\u00e1rania datab\u00e1zy blokov</translation>\n     </message>\n+    <message>\n+        <source>Error: A fatal internal error occured, see debug.log for details</source>\n+        <translation>Chyba: Nastala fat\u00e1lna intern\u00e1 chyba. Pre podrobnosti pozrite debug.log</translation>\n+    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Chyba: M\u00e1lo miesta na disku!</translation>\n@@ -2600,6 +2926,10 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Not enough file descriptors available.</source>\n         <translation>Nedostatok k\u013e\u00fa\u010dov\u00fdch slov s\u00faboru.</translation>\n     </message>\n+    <message>\n+        <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n+        <translation>Pripoji\u0165 iba k uzlom v sieti &lt;net&gt; (ipv4, ipv6, alebo onion)</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>Nastavi\u0165 ve\u013ekos\u0165 pomocnej pam\u00e4ti datab\u00e1zy v megabajtoch (%d do %d, prednastaven\u00e9: %d)</translation>\n@@ -2613,8 +2943,8 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <translation>Ozna\u010d s\u00fabor pe\u0148a\u017eenky (v prie\u010dinku s d\u00e1tami)</translation>\n     </message>\n     <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Toto je mienen\u00e9 n\u00e1strojom pre regresn\u00e9 testovania a v\u00fdvoj programu.</translation>\n+        <source>Use UPnP to map the listening port (default: %u)</source>\n+        <translation>Pou\u017ei\u0165 UPnP pre mapovanie po\u010d\u00favaj\u00faceho portu (predvolen\u00e9: %u)</translation>\n     </message>\n     <message>\n         <source>Verifying blocks...</source>\n@@ -2640,14 +2970,38 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation>Importuje bloky z extern\u00e9ho s\u00faboru blk000??.dat</translation>\n     </message>\n+    <message>\n+        <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n+        <translation>Povoli\u0165 JSON-RPC pripojenia zo zadan\u00e9ho zdroja. Pre &lt;ip&gt; s\u00fa platn\u00e9 jednoduch\u00e9 IP (napr. 1.2.3.4), sie\u0165/netmask (napr. 1.2.3.4/255.255.255.0) alebo sie\u0165/CIDR (napr. 1.2.3.4/24). T\u00e1to mo\u017enos\u0165 m\u00f4\u017ee by\u0165 zadan\u00e1 nieko\u013eko kr\u00e1t</translation>\n+    </message>\n+    <message>\n+        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n+        <translation>Pri nastavovan\u00ed RPC adresy %s na porte %u pre po\u010d\u00favanie do\u0161lo k chybe: %s</translation>\n+    </message>\n+    <message>\n+        <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n+        <translation>Spoji\u0165 s danou adresou a povolen\u00fdmi partnersk\u00fdmi zariadeniami ktor\u00e9 sa tam prip\u00e1jaj\u00fa. Pou\u017eite z\u00e1pis [host]:port pre IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)</source>\n+        <translation>Spoji\u0165 s danou adresou pre po\u010d\u00favanie JSON-RPC spojen\u00ed. Pou\u017eite z\u00e1pis [host]:port pre IPv6. T\u00e1to mo\u017enos\u0165 m\u00f4\u017ee byt zadan\u00e1 nieko\u013eko kr\u00e1t (predvolen\u00e9: spoji\u0165 so v\u0161etk\u00fdmi rozhraniami)</translation>\n+    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>Neviem uzamkn\u00fa\u0165 data adres\u00e1r %s. Jadro Bitcoin je pravdepodobne u\u017e spusten\u00e9.</translation>\n     </message>\n+    <message>\n+        <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n+        <translation>Vytvori\u0165 nov\u00e9 s\u00fabory z predvolen\u00fdmi syst\u00e9mov\u00fdmi pr\u00e1vami, namiesto umask 077 (funguje iba z vypnutou funkcionalitou pe\u0148a\u017eenky)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Chyba: Po\u010d\u00favanie prich\u00e1dzaj\u00facich spojen\u00ed zlyhalo (vr\u00e1ten\u00e1 chyba je %s)</translation>\n     </message>\n+    <message>\n+        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>Chyba: N\u00e1jden\u00fd nepodporovan\u00fd argument -socks. Nastavenie SOCKS verzie nie je u\u017e mo\u017en\u00e9, podporovan\u00e9 s\u00fa u\u017e iba proxy SOCKS5.</translation>\n+    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Vykona\u0165 pr\u00edkaz po prijat\u00ed patri\u010dn\u00e9ho varovania alebo uvid\u00edme ve\u013emi dlh\u00e9 rozdvojenie siete (%s v cmd je nahraden\u00e9 spr\u00e1vou)</translation>\n@@ -2657,13 +3011,53 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <translation>Poplatky (v BTC/Kb) ni\u017e\u0161ie ako to\u013ekoto sa pova\u017euj\u00fa za nulov\u00e9 pri postupovan\u00ed transakci\u00ed (predvolen\u00e9: %s)</translation>\n     </message>\n     <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Poplatky (v BTC/Kb) ni\u017e\u0161ie ako to\u013ekoto sa pova\u017euj\u00fa za nulov\u00e9 pri vytv\u00e1ran\u00ed transakci\u00ed (predvolen\u00e9: %s)</translation>\n+        <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n+        <translation>Ak nie je nastaven\u00e9 paytxfee, prida\u0165 dostato\u010dn\u00fd poplatok aby sa transakcia za\u010dala potvrdzova\u0165 priemerne v r\u00e1mci bloku (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>Neplatn\u00e1 suma pre -maxtxfee=&lt;amount&gt;: '%s' (aby sa transakcia nezasekla, minim\u00e1lny prenosov\u00fd poplatok mus\u00ed by\u0165 aspo\u0148 %s)</translation>\n+    </message>\n+    <message>\n+        <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n+        <translation>Maxim\u00e1lna ve\u013ekos\u0165 d\u00e1t v transakci\u00e1ch nosn\u00fdch d\u00e1t, ktor\u00e9 pren\u00e1\u0161ame a \u0165a\u017e\u00edme (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n+        <translation>Dotaz na partnersk\u00e9 adresy pomocou vyh\u013ead\u00e1vania DNS v pr\u00edpade nedostatku adries (predvolen\u00e9: 1, pokia\u013e -connect)</translation>\n     </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Nastavi\u0165 najv\u00e4\u010d\u0161iu ve\u013ekos\u0165 vysok\u00e1-d\u00f4le\u017eitos\u0165/n\u00edzke-poplatky transakci\u00ed v bajtoch (prednastaven\u00e9: %d)</translation>\n     </message>\n+    <message>\n+        <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n+        <translation>Nastavi\u0165 po\u010det vl\u00e1kien pre gener\u00e1ciu minc\u00ed (-1 = v\u0161etky jadr\u00e1, predvolen\u00e9: %d)</translation>\n+    </message>\n+    <message>\n+        <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n+        <translation>Tento produkt obsahuje softv\u00e9r vyvinut\u00fd projektom OpenSSL pre pou\u017eitie sady n\u00e1strojov OpenSSL &lt;https://www.openssl.org/&gt; a kryptografick\u00e9ho softv\u00e9ru nap\u00edsan\u00e9ho Eric Young a UPnP softv\u00e9r nap\u00edsan\u00fd Thomas Bernard.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>Upozornenie: -maxtxfee je nastaven\u00e9 pr\u00edli\u0161 vysoko! Takto vysok\u00e9 poplatky by mali by\u0165 zaplaten\u00e9 za jednu transakciu.</translation>\n+    </message>\n+    <message>\n+        <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n+        <translation>Uzle na zoznam povolen\u00fdch nem\u00f4\u017eu by\u0165 DoS zak\u00e1zan\u00e9 a ich transakcie v\u017edy post\u00fapen\u00e9 \u010falej, aj v pr\u00edpade, ak s\u00fa u\u017e pam\u00e4\u0165ovej fronte. U\u017eito\u010dn\u00e9 napr. pre br\u00e1ny</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Accept public REST requests (default: %u)</source>\n+        <translation>Akceptova\u0165 verejn\u00e9 REST \u017eiadosti (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Cannot resolve -whitebind address: '%s'</source>\n+        <translation>Ned\u00e1 sa vyrie\u0161i\u0165 -whitebind adresa: '%s'</translation>\n+    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>Zvo\u013ete d\u00e1tov\u00fd prie\u010dinok pri \u0161tarte (prednastaven\u00e9: 0)</translation>\n@@ -2672,10 +3066,26 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>Pripoji\u0165 cez proxy server SOCKS5</translation>\n     </message>\n+    <message>\n+        <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n+        <translation>Autorsk\u00e9 pr\u00e1va (C) 2009-%i V\u00fdvoj\u00e1ri jadra Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse -rpcbind value %s as network address</source>\n+        <translation>Ned\u00e1 sa analyzova\u0165 -rpcbind hodnota %s ako sie\u0165ov\u00e1 adresa</translation>\n+    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Chyba pri \u010d\u00edtan\u00ed wallet.dat: Pe\u0148a\u017eenka vy\u017eaduje vy\u0161\u0161iu verziu Jadra Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>Chyba pri na\u010d\u00edtan\u00ed z datab\u00e1zy, ukon\u010duje sa.</translation>\n+    </message>\n+    <message>\n+        <source>Error: Unsupported argument -tor found, use -onion.</source>\n+        <translation>Chyba: n\u00e1jden\u00fd nepodporovan\u00fd argument -tor, pou\u017eite -onion.</translation>\n+    </message>\n     <message>\n         <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n         <translation>Poplatok (v BTC/kB), ktor\u00fd sa prid\u00e1 k transakci\u00e1m, ktor\u00e9 odosielate (predvolen\u00fd: %s)</translation>\n@@ -2684,6 +3094,10 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Information</source>\n         <translation>Inform\u00e1cia</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Neplatn\u00e1 suma pre -maxtxfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: '%s'</source>\n         <translation>Neplatn\u00e1 suma pre -minrelaytxfee=&lt;amount&gt;: '%s'</translation>\n@@ -2692,6 +3106,26 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Invalid amount for -mintxfee=&lt;amount&gt;: '%s'</source>\n         <translation>Neplatn\u00e1 suma pre -mintxfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -paytxfee=&lt;amount&gt;: '%s' (must be at least %s)</source>\n+        <translation>Neplatn\u00e1 suma pre -paytxfee=&lt;amount&gt;: '%s' (mus\u00ed by\u0165 aspo\u0148 %s)</translation>\n+    </message>\n+    <message>\n+        <source>Invalid netmask specified in -whitelist: '%s'</source>\n+        <translation>Nadan\u00e1 neplatn\u00e1 netmask vo -whitelist: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Keep at most &lt;n&gt; unconnectable transactions in memory (default: %u)</source>\n+        <translation>V pam\u00e4ti udr\u017eiava\u0165 najviac &lt;n&gt; nepotvrden\u00fdch transakci\u00ed (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Need to specify a port with -whitebind: '%s'</source>\n+        <translation>Je potrebn\u00e9 zada\u0165 port s -whitebind: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Node relay options:</source>\n+        <translation>Prenosov\u00e9 mo\u017enosti uzla:</translation>\n+    </message>\n     <message>\n         <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>Mo\u017enosti RPC SSL: (Pozri v Bitcoin Wiki pokyny pre SSL nastavenie)</translation>\n@@ -2701,12 +3135,12 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <translation>Mo\u017enosti servra RPC:</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>N\u00e1hodne zahadzuj 1 z ka\u017ed\u00fdch &lt;n&gt; sie\u0165ov\u00fdch spr\u00e1v</translation>\n+        <source>RPC support for HTTP persistent connections (default: %d)</source>\n+        <translation>Podpora RPC pre trval\u00e9 HTTP spojenia (predvolen\u00e9: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>N\u00e1hodne premie\u0161aj 1 z ka\u017ed\u00fdch &lt;n&gt; sie\u0165ov\u00fdch spr\u00e1v</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Obdr\u017ea\u0165 a zobrazi\u0165 sie\u0165ov\u00e9 P2P varovania (predvolen\u00e9: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -2764,6 +3198,14 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Transaction too large</source>\n         <translation>Transakcia pr\u00edli\u0161 ve\u013ek\u00e1</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Mo\u017enosti pou\u017e\u00edvate\u013esk\u00e9ho rozhrania:</translation>\n+    </message>\n+    <message>\n+        <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n+        <translation>Na tomto po\u010d\u00edta\u010di sa ned\u00e1 vytvori\u0165 v\u00e4zba %s (vytvorenie v\u00e4zby vr\u00e1tilo chybu %s)</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>Sk\u00fasi\u0165 pou\u017ei\u0165 UPnP pre mapovanie po\u010d\u00favaj\u00faceho portu (default: 1 when listening)</translation>\n@@ -2776,6 +3218,14 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Warning</source>\n         <translation>Upozornenie</translation>\n     </message>\n+    <message>\n+        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>Upozornenie: Nepodporovan\u00fd argument -benchmark bol ignorovan\u00fd, pou\u017eite -debug=bench.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>Upozornenie: Nepodporovan\u00fd argument -debugnet bol ignorovan\u00fd, pou\u017eite -debug=net.</translation>\n+    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Zmaza\u0165 v\u0161etky transakcie z pe\u0148a\u017eenky...</translation>\n@@ -2825,25 +3275,129 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <translation>Chyba na\u010d\u00edtania wallet.dat: Pe\u0148a\u017eenka je po\u0161koden\u00e1</translation>\n     </message>\n     <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Zaznamena\u0165 prioritu transakcie a poplatok za kB pri \u0165a\u017een\u00ed blokov (predvolen\u00e9: %u)</translation>\n+        <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n+        <translation>(1 = zachova\u0165 meta\u00fadaje tx napr. vlastn\u00edka \u00fa\u010dtu a inform\u00e1cie o platobn\u00fdch pr\u00edkazoch, 2 = zahodi\u0165 meta\u00fadaje tx)</translation>\n+    </message>\n+    <message>\n+        <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n+        <translation>Ako d\u00f4kladn\u00e9 je -checkblocks overenie blokov (0-4, predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n+        <translation>Udr\u017eiava\u0165 kompletn\u00fd transak\u010dn\u00fd index, vyu\u017e\u00edva getrawtransaction rpc volanie (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Number of seconds to keep misbehaving peers from reconnecting (default: %u)</source>\n+        <translation>Po\u010det sek\u00fand, po\u010das ktor\u00fdch neprip\u00e1ja\u0165 zle spr\u00e1vaj\u00face sa uzle (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n+        <translation>V\u00fdstupn\u00e9 ladiace inform\u00e1cie (predvolen\u00e9: %u, dodanie &lt;category&gt; je volite\u013en\u00e9)</translation>\n     </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Pou\u017ei\u0165 samostatn\u00fd SOCKS5 proxy server na dosiahnutie po\u010d\u00edta\u010dov cez skryt\u00e9 slu\u017eby Tor (predvolen\u00e9: %s)</translation>\n     </message>\n+    <message>\n+        <source>(default: %s)</source>\n+        <translation>(predvolen\u00e9: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Acceptable ciphers (default: %s)</source>\n+        <translation>Prijate\u013en\u00e9 \u0161ifry (predvolen\u00e9: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n+        <translation>V\u017edy sa dotazova\u0165 adresy partnersk\u00fdch uzlov cez vyh\u013ead\u00e1vanie DNS (predvolen\u00e9: %u)</translation>\n+    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Chyba na\u010d\u00edtania wallet.dat</translation>\n     </message>\n+    <message>\n+        <source>How many blocks to check at startup (default: %u, 0 = all)</source>\n+        <translation>Ko\u013eko blokov overi\u0165 pri spusten\u00ed (predvolen\u00e9: %u, 0 = v\u0161etky)</translation>\n+    </message>\n+    <message>\n+        <source>Include IP addresses in debug output (default: %u)</source>\n+        <translation>Zahrn\u00fa\u0165 IP adresy v ladiacom v\u00fdstupe (predvolen\u00e9: %u)</translation>\n+    </message>\n     <message>\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Neplatn\u00e1 adresa proxy: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Po\u010d\u00fava\u0165 JSON-RPC pripojenia na &lt;port&gt; (predvolen\u00e9: %u alebo testovacia sie\u0165: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Listen for connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>Po\u010d\u00fava\u0165 pripojenia na &lt;port&gt; (predvolen\u00e9: %u alebo testovacia sie\u0165: %u)</translation>\n+    </message>\n     <message>\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Udr\u017eiava\u0165 najviac &lt;n&gt; spojen\u00ed s in\u00fdmi po\u010d\u00edta\u010dmi (predvolen\u00e9: %u)</translation>\n     </message>\n+    <message>\n+        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n+        <translation>Maxim\u00e1lna prij\u00edmaj\u00faca medzipam\u00e4\u0165 pre pripojenie, &lt;n&gt;*1000 bajtov (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n+        <translation>Maxim\u00e1lna odosielaj\u00faca medzipam\u00e4\u0165 pre pripojenie, &lt;n&gt;*1000 bajtov (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Prepend debug output with timestamp (default: %u)</source>\n+        <translation>Na za\u010diatok pripoji\u0165 \u010dasov\u00fa zn\u00e1mku k ladiacemu v\u00fdstupu (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Relay and mine data carrier transactions (default: %u)</source>\n+        <translation>Pren\u00e1\u0161a\u0165 a \u0165a\u017ei\u0165 transakcie nosn\u00fdch d\u00e1t (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Relay non-P2SH multisig (default: %u)</source>\n+        <translation>Pren\u00e1\u0161a\u0165 non-P2SH multi-podpis (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Server certificate file (default: %s)</source>\n+        <translation>Certifika\u010dn\u00fd s\u00fabor servera (predvolen\u00e9: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Server private key (default: %s)</source>\n+        <translation>Priv\u00e1tny k\u013e\u00fa\u010d servera (predvolen\u00e9: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n+        <translation>Nastavi\u0165 ve\u013ekos\u0165 k\u013e\u00fa\u010da fronty na &lt;n&gt; (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set minimum block size in bytes (default: %u)</source>\n+        <translation>Nastavi\u0165 minim\u00e1lnu ve\u013ekos\u0165 bloku v bajtoch (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set the number of threads to service RPC calls (default: %d)</source>\n+        <translation>Nastavi\u0165 po\u010det vl\u00e1kien na obsluhu RPC volan\u00ed (predvolen\u00e9: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Specify configuration file (default: %s)</source>\n+        <translation>Zada\u0165 konfigura\u010dn\u00fd s\u00fabor (predvolen\u00e9: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n+        <translation>Zadajte \u010dasov\u00fd limit pripojenia v milisekund\u00e1ch (minimum: 1, predvolen\u00e9: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Specify pid file (default: %s)</source>\n+        <translation>Zada\u0165 pid s\u00fabor (predvolen\u00e9: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n+        <translation>Min\u00fa\u0165 nepotvrden\u00e9 zmenu pri posielan\u00ed transakci\u00ed (predvolen\u00e9: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n+        <translation>Hranica pre odp\u00e1janie zle sa spr\u00e1vaj\u00facim partnersk\u00fdm uzlom (predvolen\u00e9: %u)</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Nezn\u00e1ma sie\u0165 upresnen\u00e1 v -onlynet: '%s'</translation>"
      },
      {
        "sha": "39dcb6e997e4ab0a83111b62ecb03d3c0464c0c1",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 1426,
        "deletions": 264,
        "changes": 1690,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a"
      },
      {
        "sha": "6ed9856889be263e30f5adea418afeafdea0b1b4",
        "filename": "src/qt/locale/bitcoin_sq.ts",
        "status": "modified",
        "additions": 30,
        "deletions": 2,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sq.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sq.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sq.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sq\" version=\"2.1\">\n+<TS language=\"sq\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -45,15 +45,39 @@\n         <source>Receiving addresses</source>\n         <translation>Duke marr adresen</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>K\u00ebto jan\u00eb Bitcoin adresat e juaja p\u00ebr t\u00eb d\u00ebrguar pagesa. Gjithmon kontrolloni shum\u00ebn dhe adres\u00ebn pranuese para se t\u00eb d\u00ebrgoni monedha.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>K\u00ebto jan\u00eb Bitcoin adresat e juaja p\u00ebr t\u00eb pranuar pagesa. Rekomandohet q\u00eb gjithmon t\u00eb p\u00ebrdorni nj\u00eb adres\u00eb t\u00eb re p\u00ebr \u00e7do transaksion.</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopjo &amp;Etiket\u00eb</translation>\n+    </message>\n     <message>\n         <source>&amp;Edit</source>\n         <translation>&amp;Ndrysho</translation>\n     </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eksporto list\u00ebn e adresave</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Skedar i ndar\u00eb me pik\u00ebpresje(*.csv)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Eksportimi d\u00ebshtoj</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Gabim gjat\u00eb ruajtjes s\u00eb list\u00ebs s\u00eb adresave n\u00eb %1. Ju lutem provoni prap\u00eb.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -687,6 +711,10 @@\n         <source>Copy address</source>\n         <translation>Kopjo adres\u00ebn</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Eksportimi d\u00ebshtoj</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Skedar i ndar\u00eb me pik\u00ebpresje(*.csv)</translation>"
      },
      {
        "sha": "ddaab9ab2bc2ae954adfbe2743cef7e8ce9192ea",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sr\" version=\"2.1\">\n+<TS language=\"sr\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "0139154019f2847fddd971130c8358c771fcf740",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 44,
        "deletions": 104,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sv\" version=\"2.1\">\n+<TS language=\"sv\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -67,11 +67,11 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>Detta \u00e4r dina Bitcoin adresser f\u00f6r att skicka betalningar. Kolla alltid summan och den mottagande adressen innan du skickar Bitcoins.</translation>\n+        <translation>Detta \u00e4r dina Bitcoin-adresser f\u00f6r att skicka betalningar. Kolla alltid summan och den mottagande adressen innan du skickar Bitcoins.</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>Detta \u00e4r dina Bitcoin adresser f\u00f6r att ta emot betalningar. Det rekommenderas att anv\u00e4nda en ny mottagningsadress f\u00f6r varje transaktion.</translation>\n+        <translation>Detta \u00e4r dina Bitcoin-adresser f\u00f6r att ta emot betalningar. Det rekommenderas att anv\u00e4nda en ny mottagningsadress f\u00f6r varje transaktion.</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n@@ -111,14 +111,14 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(Ingen etikett)</translation>\n+        <translation>(ingen etikett)</translation>\n     </message>\n </context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n         <source>Passphrase Dialog</source>\n-        <translation>L\u00f6senords Dialog</translation>\n+        <translation>L\u00f6senordsdialog</translation>\n     </message>\n     <message>\n         <source>Enter passphrase</source>\n@@ -281,7 +281,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation>&amp;Byt L\u00f6senord...</translation>\n+        <translation>&amp;Byt l\u00f6senord...</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses...</source>\n@@ -297,7 +297,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core client</source>\n-        <translation>Bitcoin Core klient</translation>\n+        <translation>Bitcoin Core-klient</translation>\n     </message>\n     <message>\n         <source>Importing blocks from disk...</source>\n@@ -321,7 +321,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>&amp;Debug window</source>\n-        <translation>&amp;Debug f\u00f6nster</translation>\n+        <translation>&amp;Debug-f\u00f6nster</translation>\n     </message>\n     <message>\n         <source>Open debugging and diagnostic console</source>\n@@ -385,11 +385,11 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Tabs toolbar</source>\n-        <translation>Verktygsf\u00e4lt f\u00f6r Tabbar</translation>\n+        <translation>Verktygsf\u00e4lt f\u00f6r tabbar</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin K\u00e4rna</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n@@ -421,7 +421,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n-        <translation>Visa Bitcoin Core hj\u00e4lpmeddelande f\u00f6r att f\u00e5 en lista med m\u00f6jliga Bitcoin kommandoradsalternativ.</translation>\n+        <translation>Visa Bitcoin Cores hj\u00e4lpmeddelande f\u00f6r att f\u00e5 en lista med m\u00f6jliga Bitcoin-kommandoradsalternativ.</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n@@ -461,7 +461,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Last received block was generated %1 ago.</source>\n-        <translation>Senast mottagna block genererades %1 sen.</translation>\n+        <translation>Senast mottagna block genererades f\u00f6r %1 sen.</translation>\n     </message>\n     <message>\n         <source>Transactions after this will not yet be visible.</source>\n@@ -553,7 +553,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Bytes:</source>\n-        <translation>Antal Byte:</translation>\n+        <translation>Antal byte:</translation>\n     </message>\n     <message>\n         <source>Amount:</source>\n@@ -581,15 +581,15 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>(un)select all</source>\n-        <translation>(av)v\u00e4lj allt</translation>\n+        <translation>(av)markera allt</translation>\n     </message>\n     <message>\n         <source>Tree mode</source>\n-        <translation>Tr\u00e4dmetod</translation>\n+        <translation>Tr\u00e4dvy</translation>\n     </message>\n     <message>\n         <source>List mode</source>\n-        <translation>Listmetod</translation>\n+        <translation>Listvy</translation>\n     </message>\n     <message>\n         <source>Amount</source>\n@@ -609,7 +609,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Confirmations</source>\n-        <translation>Konfirmationer</translation>\n+        <translation>Bekr\u00e4ftelser</translation>\n     </message>\n     <message>\n         <source>Confirmed</source>\n@@ -764,7 +764,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     <name>EditAddressDialog</name>\n     <message>\n         <source>Edit Address</source>\n-        <translation>Redigera Adress</translation>\n+        <translation>Redigera adress</translation>\n     </message>\n     <message>\n         <source>&amp;Label</source>\n@@ -842,7 +842,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     <name>HelpMessageDialog</name>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin K\u00e4rna</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>version</source>\n@@ -881,11 +881,11 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n-        <translation>Eftersom detta \u00e4r f\u00f6rsta g\u00e5ngen programmet startas f\u00e5r du v\u00e4lja var Bitcoin Core skall lagra sitt data.</translation>\n+        <translation>Eftersom detta \u00e4r f\u00f6rsta g\u00e5ngen programmet startas f\u00e5r du v\u00e4lja var Bitcoin Core skall lagra sina data.</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n-        <translation>Bitcoin Core kommer att ladda ner och spara en kopia av Bitcoin blockkedjan. \u00c5tminstone %1GB av data kommer att sparas i denna katalog, och den kommer att v\u00e4xa \u00f6ver tiden. Pl\u00e5nboken kommer ocks\u00e5 att sparas i denna katalog.</translation>\n+        <translation>Bitcoin Core kommer att ladda ner och spara en kopia av Bitcoin-blockkedjan. \u00c5tminstone %1GB av data kommer att sparas i denna katalog, och den kommer att v\u00e4xa \u00f6ver tiden. Pl\u00e5nboken kommer ocks\u00e5 att sparas i denna katalog.</translation>\n     </message>\n     <message>\n         <source>Use the default data directory</source>\n@@ -897,7 +897,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Bitcoin K\u00e4rna</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>Error: Specified data directory \"%1\" cannot be created.</source>\n@@ -959,7 +959,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Number of script &amp;verification threads</source>\n-        <translation>Antalet skript &amp; verifikationstr\u00e5dar</translation>\n+        <translation>Antalet skript&amp;verifikationstr\u00e5dar</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside</source>\n@@ -983,23 +983,23 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n-        <translation>Tredjeparts URL:er (t.ex. en block utforskare) som finns i transaktionstabben som ett menyval i sammanhanget. %s i URL:en ers\u00e4tts med tansaktionshashen. Flera URL:er \u00e4r separerade med vertikala streck |.</translation>\n+        <translation>Tredjeparts URL:er (t.ex. en blockutforskare) som finns i transaktionstabben som ett menyval i sammanhanget. %s i URL:en ers\u00e4tts med tansaktionshashen. Flera URL:er \u00e4r separerade med vertikala streck |.</translation>\n     </message>\n     <message>\n         <source>Third party transaction URLs</source>\n         <translation>Tredjeparts transaktions-URL:er</translation>\n     </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n-        <translation>Aktiva kommandoradsalternativ som \u00f6verrider alternativen ovan:</translation>\n+        <translation>Aktiva kommandoradsalternativ som ers\u00e4tter alternativen ovan:</translation>\n     </message>\n     <message>\n         <source>Reset all client options to default.</source>\n-        <translation>\u00c5terst\u00e4ll alla klient inst\u00e4llningar till f\u00f6rvalen.</translation>\n+        <translation>\u00c5terst\u00e4ll alla klientinst\u00e4llningar till f\u00f6rvalen.</translation>\n     </message>\n     <message>\n         <source>&amp;Reset Options</source>\n-        <translation>&amp;\u00c5terst\u00e4ll Alternativ</translation>\n+        <translation>&amp;\u00c5terst\u00e4ll alternativ</translation>\n     </message>\n     <message>\n         <source>&amp;Network</source>\n@@ -1027,15 +1027,15 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Enable coin &amp;control features</source>\n-        <translation>Aktivera mynt och kontrollfunktioner</translation>\n+        <translation>Aktivera mynt&amp;kontrollfunktioner</translation>\n     </message>\n     <message>\n         <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n-        <translation>Om du avaktiverar betalning med okonfirmerade v\u00e4xel, kan inte v\u00e4xeln fr\u00e5n en transaktion anv\u00e4ndas f\u00f6rr\u00e4n den transaktionen har minst en konfirmation.</translation>\n+        <translation>Om du avaktiverar betalning med obekr\u00e4ftad v\u00e4xel, kan inte v\u00e4xeln fr\u00e5n en transaktion anv\u00e4ndas f\u00f6rr\u00e4n den transaktionen har minst en bekr\u00e4ftelse.</translation>\n     </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n-        <translation>&amp;Spendera okonfirmerad v\u00e4xel</translation>\n+        <translation>&amp;Spendera obekr\u00e4ftad v\u00e4xel</translation>\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n@@ -1095,7 +1095,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>\n-        <translation>V\u00e4lj en m\u00e5ttenhet att visa n\u00e4r du skickar mynt.</translation>\n+        <translation>V\u00e4lj en m\u00e5ttenhet att visa i gr\u00e4nssnittet och n\u00e4r du skickar mynt.</translation>\n     </message>\n     <message>\n         <source>Whether to show coin control features or not.</source>\n@@ -1135,7 +1135,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>The supplied proxy address is invalid.</source>\n-        <translation>Den medf\u00f6ljande proxy adressen \u00e4r ogiltig.</translation>\n+        <translation>Den angivna proxy-adressen \u00e4r ogiltig.</translation>\n     </message>\n </context>\n <context>\n@@ -2805,10 +2805,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Bind till given adress och lyssna alltid p\u00e5 den. Anv\u00e4nd [v\u00e4rd]:port notation f\u00f6r IPv6</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Hastighetsbegr\u00e4nsa avgiftsfria transaktionerna till &lt;n&gt;*1000 bytes per minut (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Ta bort alla pl\u00e5nbokstransaktioner och \u00e5terskapa bara dom som \u00e4r en del av blockkedjan genom att ange -rescan vid uppstart</translation>\n@@ -2817,18 +2813,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distribuerad under MIT mjukvarulicens, se den bifogade filen COPYING eller &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Ange regressiontestl\u00e4ge, som anv\u00e4nder en speciell kedja i vilka block kan l\u00f6sas omedelbart.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Exekvera kommando n\u00e4r en pl\u00e5nbokstransaktion \u00e4ndras (%s i cmd \u00e4r ersatt av TxID)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>I denna mode kontrollerar -genproclimit hur m\u00e5nga block som genereras p\u00e5 en g\u00e5ng.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Maximal total avgift att anv\u00e4nda i en pl\u00e5nbokstransaktion. S\u00e4tts denna f\u00f6r l\u00e5gt kommer stora transaktioner att avbrytas (f\u00f6rvalt: %s)</translation>\n@@ -2849,6 +2837,14 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Det g\u00e5r inte att binda till %s p\u00e5 den h\u00e4r datorn. Bitcoin Core \u00e4r f\u00f6rmodligen redan ig\u00e5ng.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>Varning: Onormalt antal block block genererade. %d block mottagna senaste %d timmarna (%d f\u00f6rv\u00e4ntade)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>Varning: Kontrollera din n\u00e4rverksanslutning. %d block mottagna senaste %d timmarna, (%d f\u00f6rv\u00e4ntade)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Varning: -paytxfee \u00e4r satt v\u00e4ldigt h\u00f6g! Detta \u00e4r avgiften du kommer betala f\u00f6r varje transaktion.</translation>\n@@ -2985,10 +2981,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Ange pl\u00e5nboksfil (inom datakatalogen)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Detta \u00e4r avsett f\u00f6r regressionstestningsverktyg och applikationsutveckling.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Anv\u00e4nd UPnP f\u00f6r att mappa den lyssnande porten (f\u00f6rvalt: %u)</translation>\n@@ -3065,10 +3057,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Avgifter (i BTC/Kb) mindre \u00e4n detta betraktas som nollavgift f\u00f6r vidarebefodran (f\u00f6rvalt: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Avgifter (i BTC/Kb) mindre \u00e4n detta betraktas som nollavgift f\u00f6r transaktionsskapande (f\u00f6rvalt: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Om paytxfee inte \u00e4r satt, inkludera tillr\u00e4cklig avgift s\u00e5 att transaktionen b\u00f6rjar att konfirmeras inom n blocks (f\u00f6rvalt: %u)</translation>\n@@ -3093,10 +3081,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Slumpa autentiseringen f\u00f6r varje proxyanslutning. Detta m\u00f6jligg\u00f6r Tor str\u00f6m-isolering (f\u00f6rvalt: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>Beg\u00e4r h\u00f6g prioritet f\u00f6r att vidarebefodra l\u00e5gavgiftstransaktioner (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>S\u00e4tt den maximala storleken av h\u00f6g-prioriterade/l\u00e5g-avgifts transaktioner i byte (f\u00f6rvalt: %d)</translation>\n@@ -3161,10 +3145,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiverar b\u00e4sta kedjan...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Till\u00e5t sj\u00e4lvsignerade root-certifikat  (f\u00f6rvalt: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>Kan inte k\u00f6ra med en pl\u00e5nbok i besk\u00e4rningsl\u00e4ge.</translation>\n@@ -3257,18 +3237,14 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC support f\u00f6r HTTP permanent anslutning (f\u00f6rvalt: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Slumpm\u00e4ssigt tappa 1 av varje &lt;n&gt; n\u00e5tverksmeddelande</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Slupm\u00e4ssigt brus 1 g\u00e5ng varje &lt;n&gt; n\u00e4tverksmeddelande</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u00c5terskapa blockkedjans index fr\u00e5n nuvarande blk000??.dat filer under uppstarten</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Mottag och visa P2P n\u00e4tverksvarningar (f\u00f6rvalt: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Skicka trace-/debuginformation till terminalen ist\u00e4llet f\u00f6r till debug.log</translation>\n@@ -3413,18 +3389,10 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = spara tx metadata t.ex. konto\u00e4gare och betalningsbeg\u00e4ransinformation, 2 = sl\u00e4ng tx metadata)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>T\u00f6m databasens minnespool till disk varje &lt;n&gt; megabytes (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hur grundlig blockverifikationen vid -checkblocks \u00e4r (0-4, f\u00f6rvalt: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Logga transaktionsprioritet och avgift per kB vid blockbrytning (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Uppr\u00e4tth\u00e5ll ett fullst\u00e4ndigt transaktionsindex, som anv\u00e4nds av getrawtransaction rpc-anrop (f\u00f6rval: %u)</translation>\n@@ -3453,18 +3421,10 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>S\u00f6k alltid efter klientadresser med DNS s\u00f6kningen (f\u00f6rvalt: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>Avaktivera s\u00e4kert l\u00e4ge. \u00c5sidos\u00e4tt en riktigt s\u00e4kert l\u00e4ge h\u00e4ndelse (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Fel vid inl\u00e4sning av pl\u00e5nboksfilen wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>Tv\u00e5ngsk\u00f6r i s\u00e4kert l\u00e4ge (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Generera mynt (f\u00f6rvalt: %u)</translation>\n@@ -3481,10 +3441,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ogiltig -proxy adress: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>Begr\u00e4nsa signaturcachestorleken till &lt;n&gt; poster (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Lyssna p\u00e5 JSON-RPC-anslutningar p\u00e5 &lt;port&gt; (f\u00f6rval: %u eller testnet: %u)</translation>\n@@ -3509,10 +3465,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Maximal s\u00e4ndningsbuffert per anslutning, &lt;n&gt;*1000 byte (f\u00f6rvalt: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Acceptera bara blockkedjans matchande inbyggda kontrollpunkter (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Skriv ut tidsst\u00e4mpel i avlusningsinformationen (f\u00f6rvalt: %u)</translation>\n@@ -3525,10 +3477,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Rel\u00e4a icke P2SH multisig (f\u00f6rvalt: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>K\u00f6r en tr\u00e5d f\u00f6r att t\u00f6mma pl\u00e5nboken periodiskt (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Serverns certifikatfil (f\u00f6rvalt: %s)</translation>\n@@ -3549,10 +3497,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Ange antalet tr\u00e5dar f\u00f6r att hantera RPC anrop (f\u00f6rvalt: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>S\u00e4tt DB_PRIVATE flaggan i pl\u00e5nbokens databasmilj\u00f6 (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Ange konfigurationsfil (f\u00f6rvalt: %s)</translation>\n@@ -3569,10 +3513,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Spendera okonfirmerad v\u00e4xel n\u00e4r transaktioner s\u00e4nds (f\u00f6rvalt: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Sluta k\u00f6ra efter importen av block fr\u00e5n disk \u00e4r klar (f\u00f6rvalt: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Tr\u00f6skelv\u00e4rde f\u00f6r att koppla ifr\u00e5n klienter som missk\u00f6ter sig (f\u00f6rvalt: %u)</translation>"
      },
      {
        "sha": "09805029682af6f72c09e2e89de513ab3bf1ddf8",
        "filename": "src/qt/locale/bitcoin_th_TH.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_th_TH.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_th_TH.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th_TH.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"th_TH\" version=\"2.1\">\n+<TS language=\"th_TH\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "dcc82e644dde5c2ec6e5b8e3d7d0a5906883748e",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 25,
        "deletions": 85,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,9 +1,9 @@\n-<TS language=\"tr\" version=\"2.1\">\n+<TS language=\"tr\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Adresi ya da etiketi d\u00fczenlemek i\u00e7in sa\u011f d\u00fc\u011fme ile t\u0131klay\u0131n\u0131z.</translation>\n+        <translation>Adres veya etiketi d\u00fczenlemek i\u00e7in sa\u011f t\u0131klay\u0131n\u0131z.</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -15,7 +15,7 @@\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\u015eu anda se\u00e7ili olan adresi sistem panosuna kopyala</translation>\n+        <translation>Se\u00e7ili adresi panoya kopyala</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n@@ -35,7 +35,7 @@\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>G\u00fcncel sekmedeki verileri bir dosyaya aktar</translation>\n+        <translation>A\u00e7\u0131k olan sekmedeki verileri bir dosyaya aktar</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n@@ -67,11 +67,11 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>Bunlar \u00f6deme yapmak i\u00e7in kullanaca\u011f\u0131n\u0131z Bitcoin adreslerinizdir. Bitcoin yollamadan \u00f6nce mebla\u011f\u0131 ve al\u0131c\u0131 adresini daima kontrol ediniz.</translation>\n+        <translation>Bunlar \u00f6demeleri g\u00f6ndermek i\u00e7in kullanaca\u011f\u0131n\u0131z Bitcoin adreslerinizdir. Bitcoin yollamadan \u00f6nce miktar\u0131 ve al\u0131c\u0131n\u0131n al\u0131m adresini daima kontrol ediniz.</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>Bunlar \u00f6deme almak i\u00e7in kullanaca\u011f\u0131n\u0131z Bitcoin adreslerinizdir. Her muamele i\u00e7in yeni bir al\u0131m adresi kullanman\u0131z tavsiye edilir.</translation>\n+        <translation>Bunlar \u00f6demeleri almak i\u00e7in kullanaca\u011f\u0131n\u0131z Bitcoin adreslerinizdir. Her i\u015flem i\u00e7in yeni bir al\u0131m adresi kullanman\u0131z tavsiye edilir.</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n@@ -110,7 +110,7 @@\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(bo\u015f etiket)</translation>\n+        <translation>(etiket yok)</translation>\n     </message>\n </context>\n <context>\n@@ -145,19 +145,19 @@\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n-        <translation>Bu i\u015flem, c\u00fczdan \u015fifresini a\u00e7mak i\u00e7in c\u00fczdan parolas\u0131n\u0131 gerektirir.</translation>\n+        <translation>Bu i\u015flem c\u00fczdan\u0131n \u015fifrelemesini a\u00e7mak i\u00e7in c\u00fczdan parolas\u0131n\u0131 gerektirir.</translation>\n     </message>\n     <message>\n         <source>Decrypt wallet</source>\n-        <translation>C\u00fczdan \u015fifresini a\u00e7</translation>\n+        <translation>C\u00fczdan\u0131n \u015fifrelemesini a\u00e7</translation>\n     </message>\n     <message>\n         <source>Change passphrase</source>\n         <translation>Parolay\u0131 de\u011fi\u015ftir</translation>\n     </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n-        <translation>C\u00fczdan \u015fifrelenmesini teyit eder</translation>\n+        <translation>C\u00fczdan\u0131n \u015fifrelemesini teyit eder</translation>\n     </message>\n     <message>\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n@@ -1323,7 +1323,7 @@\n     </message>\n     <message>\n         <source>Ping Time</source>\n-        <translation>Ping Zaman\u0131</translation>\n+        <translation>Ping S\u00fcresi</translation>\n     </message>\n </context>\n <context>\n@@ -1492,7 +1492,7 @@\n     </message>\n     <message>\n         <source>Connection Time</source>\n-        <translation>Ba\u011flant\u0131 Zaman\u0131</translation>\n+        <translation>Ba\u011flant\u0131 S\u00fcresi</translation>\n     </message>\n     <message>\n         <source>Last Send</source>\n@@ -1512,7 +1512,7 @@\n     </message>\n     <message>\n         <source>Ping Time</source>\n-        <translation>Ping Zaman\u0131</translation>\n+        <translation>Ping S\u00fcresi</translation>\n     </message>\n     <message>\n         <source>Time Offset</source>\n@@ -2812,10 +2812,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Belirtilen adrese ba\u011flan ve daima ondan dinle. IPv6 i\u00e7in [makine]:port yaz\u0131m\u0131n\u0131 kullan\u0131n\u0131z</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>Devaml\u0131 olarak \u00fccretsiz muameleleri dakikada &lt;n&gt;*1000 bayt olarak s\u0131n\u0131rla (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>T\u00fcm c\u00fczdan muamelelerini sil ve ba\u015flang\u0131\u00e7ta -rescan ile sadece blok zincirinin par\u00e7as\u0131 olanlar\u0131 geri getir</translation>\n@@ -2824,18 +2820,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>MIT yaz\u0131l\u0131m lisans\u0131 kapsam\u0131nda yay\u0131nlanm\u0131\u015ft\u0131r, ekteki COPYING dosyas\u0131na ya da &lt;http://www.opensource.org/licenses/mit-license.php&gt; adresine bak\u0131n\u0131z.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>Bloklar\u0131n an\u0131nda \u00e7\u00f6z\u00fclebilece\u011fi \u00f6zel bir zincir kullanan regresyon deneme kipine gir.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Bir c\u00fczdan muamelesi de\u011fi\u015fti\u011finde komutu \u00e7al\u0131\u015ft\u0131r (komuttaki %s muamele kimli\u011fi ile de\u011fi\u015ftirilecektir)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>Bu kipte -genproclimit ka\u00e7 say\u0131da blo\u011fun an\u0131nda olu\u015fturuldu\u011funu kontrol eder.</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>Tek c\u00fczdan muamelesinde kullan\u0131lacak azami toplam \u00fccret; bunu \u00e7ok d\u00fc\u015f\u00fck olarak ayarlamak b\u00fcy\u00fck muameleleri iptal edebilir (varsay\u0131lan: %s)</translation>\n@@ -2856,6 +2844,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Bu bilgisayarda %s unsuruna ba\u011flan\u0131lamad\u0131. Bitcoin \u00c7ekirde\u011fi muhtemelen h\u00e2lihaz\u0131rda \u00e7al\u0131\u015fmaktad\u0131r.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u0130KAZ: anormal y\u00fcksek say\u0131da blok olu\u015fturulmu\u015ftur, %d blok son %d saat i\u00e7inde al\u0131nm\u0131\u015ft\u0131r (%d bekleniyordu)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u0130KAZ: a\u011f ba\u011flant\u0131n\u0131z\u0131 kontrol ediniz, %d blok son %d saat i\u00e7inde al\u0131nm\u0131\u015ft\u0131r (%d bekleniyordu)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Uyar\u0131: -paytxfee \u00e7ok y\u00fcksek bir de\u011fere ayarlanm\u0131\u015f! Bu, muamele g\u00f6nderirseniz \u00f6deyece\u011finiz muamele \u00fccretidir.</translation>\n@@ -2992,10 +2988,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>C\u00fczdan dosyas\u0131 belirtiniz (veri klas\u00f6r\u00fcn\u00fcn i\u00e7inde)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>Bu, regresyon deneme ara\u00e7lar\u0131 ve uygulama geli\u015ftirmesi i\u00e7in tasarlanm\u0131\u015ft\u0131r. </translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Dinleme portunu haritalamak i\u00e7in UPnP kullan (varsay\u0131lan: %u)</translation>\n@@ -3072,10 +3064,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>Kb ba\u015f\u0131na BTC olarak bundan d\u00fc\u015f\u00fck \u00fccretler aktar\u0131m i\u00e7in s\u0131f\u0131r de\u011ferinde \u00fccret olarak kabul edilir (varsay\u0131lan: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>Kb ba\u015f\u0131na BTC olarak bundan d\u00fc\u015f\u00fck \u00fccretler muamele olu\u015fturulmas\u0131 i\u00e7in s\u0131f\u0131r de\u011ferinde \u00fccret olarak kabul edilir (varsay\u0131lan: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>E\u011fer paytxfee ayarlanmad\u0131ysa kafi derecede \u00fccret ekleyin ki muameleler teyite vasati n blok i\u00e7inde ba\u015flas\u0131n (varsay\u0131lan: %u)</translation>\n@@ -3100,10 +3088,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Her vekil ba\u011flant\u0131s\u0131 i\u00e7in kimlik verilerini rastgele yap. Bu, Tor ak\u0131\u015f izolasyonunu etkinle\u015ftirir (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>\u00dccretsiz ya da d\u00fc\u015f\u00fck \u00fccretli muamelelerin ge\u00e7i\u015fi i\u00e7in y\u00fcksek \u00f6ncelik iste (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Y\u00fcksek \u00f6ncelikli/d\u00fc\u015f\u00fck \u00fccretli muamelelerin azami boyutunu bayt olarak ayarla (varsay\u0131lan: %d)</translation>\n@@ -3172,10 +3156,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>En iyi zincir etkinle\u015ftiriliyor...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>Kendinden imzal\u0131 k\u00f6k sertifikalara m\u00fcsaade et (varsay\u0131lan: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>Prune kipindeki bir c\u00fczdan ile \u00e7al\u0131\u015famaz.</translation>\n@@ -3268,18 +3248,14 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>Kal\u0131c\u0131 HTTP ba\u011flant\u0131lar\u0131 i\u00e7in RPC deste\u011fi (varsay\u0131lan: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>Her &lt;n&gt; \u015febeke mesaj\u0131ndan rastgele 1 mesaj\u0131 g\u00f6rmezden gel</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>Her &lt;n&gt; \u015febeke mesaj\u0131ndan rastgele birini bulan\u0131kla\u015ft\u0131r</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Ba\u015flang\u0131\u00e7ta blok zinciri indeksini g\u00fcncel blk000??.dat dosyalar\u0131ndan tekrar in\u015fa et</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>P2P a\u011f\u0131ndan gelen \u00f6nemli uyar\u0131lar\u0131 al\u0131n ve g\u00f6sterin (\u00f6nse\u00e7ili de\u011fer: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Trace/hata ay\u0131klama verilerini debug.log dosyas\u0131 yerine konsola g\u00f6nder</translation>\n@@ -3424,18 +3400,10 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = tx meta verilerini tut mesela hesap sahibi ve \u00f6deme talebi bilgileri, 2 = tx meta verilerini at)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Veritaban\u0131 etkinli\u011fini bellekten disk k\u00fct\u00fc\u011f\u00fcne her &lt;n&gt; megabaytta aktar (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>-checkblocks'un blok kontrol\u00fcn\u00fcn ne kadar kapsaml\u0131 olaca\u011f\u0131 (0 il\u00e2 4, varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>Blok olu\u015fturuldu\u011funda muamele \u00f6nceli\u011fini ve kB ba\u015f\u0131 \u00fccreti k\u00fct\u00fc\u011fe al (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>Muamelelerin tamam\u0131n\u0131n indeksini tut, getrawtransaction rpc \u00e7a\u011fr\u0131s\u0131 taraf\u0131ndan kullan\u0131l\u0131r (varsay\u0131lan: %u)</translation>\n@@ -3464,18 +3432,10 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>E\u015f adresleri sorgulamas\u0131 i\u00e7in daima DNS aramas\u0131n\u0131 kullan (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>G\u00fcvenli kipi devre d\u0131\u015f\u0131 b\u0131rak, ger\u00e7ek bir g\u00fcvenli olay\u0131 ge\u00e7ersiz k\u0131l (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>wallet.dat dosyas\u0131n\u0131n y\u00fcklenmesinde hata olu\u015ftu</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>G\u00fcvenli kipi zorla (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>Bitcoin olu\u015ftur (varsay\u0131lan: %u)</translation>\n@@ -3492,10 +3452,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ge\u00e7ersiz -proxy adresi: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>\u0130mza arabelle\u011finin boyutunu &lt;n&gt; unsurla s\u0131n\u0131rla (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>JSON-RPC ba\u011flant\u0131lar\u0131n\u0131 &lt;port&gt; \u00fczerinde dinle (varsay\u0131lan: %u veya tesnet: %u)</translation>\n@@ -3520,10 +3476,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>Her ba\u011flant\u0131 i\u00e7in azami yollama tamponu, &lt;n&gt;*1000 bayt (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>Sadece yerle\u015fik kontrol noktalar\u0131yla e\u015fle\u015fen blok zincirini kabul et (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Hata ay\u0131klama verilerinin \u00f6n\u00fcne zaman damgas\u0131 ekle (varsay\u0131lan: %u)</translation>\n@@ -3536,10 +3488,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>P2SH olmayan \u00e7oklu imzalar\u0131 aktar (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>Periyodik olarak c\u00fcdan\u0131 diske yazd\u0131rmak i\u00e7in bir i\u015f par\u00e7ac\u0131\u011f\u0131 \u00e7al\u0131\u015ft\u0131r (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>Sunucu sertifika dosyas\u0131 (varsay\u0131lan: %s)</translation>\n@@ -3560,10 +3508,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>Hizmet RCP aramalar\u0131 i\u015f par\u00e7ac\u0131\u011f\u0131 say\u0131s\u0131n\u0131 belirle (varsay\u0131lan: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>C\u00fczdan veritaban\u0131 ortam\u0131nda DB_PRIVATE bayra\u011f\u0131n\u0131 koyar (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Yap\u0131land\u0131rma dosyas\u0131 belirtiniz (varsay\u0131lan: %s)</translation>\n@@ -3580,10 +3524,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>G\u00f6nderme muamelelerinde teyit edilmemi\u015f para \u00fcst\u00fcn\u00fc harca (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>Diskten bloklar\u0131 i\u00e7eri aktard\u0131ktan sonra \u00e7al\u0131\u015fmay\u0131 durdur (varsay\u0131lan: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Aksakl\u0131k g\u00f6steren e\u015flerle ba\u011flant\u0131y\u0131 kesme s\u0131n\u0131r\u0131 (varsay\u0131lan: %u)</translation>"
      },
      {
        "sha": "21ab4ac1918b23a494419abf1485bea4cfae64ea",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 283,
        "deletions": 97,
        "changes": 380,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,9 +1,9 @@\n-<TS language=\"uk\" version=\"2.1\">\n+<TS language=\"uk\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>\u041a\u043b\u0456\u043a \u043f\u0440\u0430\u0432\u043e\u044e \u043a\u043d\u043e\u043f\u043a\u043e\u044e \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043d\u043d\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u0430\u0431\u043e \u043c\u0456\u0442\u043a\u0438</translation>\n+        <translation>\u041a\u043b\u0456\u043a\u043d\u0456\u0442\u044c \u043f\u0440\u0430\u0432\u043e\u044e \u043a\u043d\u043e\u043f\u043a\u043e\u044e \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043d\u043d\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u0430\u0431\u043e \u043c\u0456\u0442\u043a\u0438</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -71,7 +71,7 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>\u0426\u0435 \u0432\u0430\u0448\u0430 \u043d\u043e\u0432\u0430 Bitcoin \u0430\u0434\u0440\u0435\u0441\u0430 \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0456\u0432. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n+        <translation>\u0426\u0435 \u0432\u0430\u0448\u0430 \u043d\u043e\u0432\u0430 Bitcoin \u0430\u0434\u0440\u0435\u0441\u0430 \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0456\u0432. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n@@ -167,9 +167,13 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>\u0412\u0438 \u0434\u0456\u0439\u0441\u043d\u043e \u0445\u043e\u0447\u0435\u0442\u0435 \u0437\u0430\u0448\u0438\u0444\u0440\u0443\u0432\u0430\u0442\u0438 \u0441\u0432\u0456\u0439 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u041a\u043b\u0456\u0454\u043d\u0442 \u00abBitcoin Core\u00bb \u0431\u0443\u0434\u0435 \u0437\u0430\u043a\u0440\u0438\u0442\u043e \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0443 \u0448\u0438\u0444\u0440\u0443\u0432\u0430\u043d\u043d\u044f. \u041f\u0430\u043c'\u044f\u0442\u0430\u0439\u0442\u0435, \u0449\u043e \u0448\u0438\u0444\u0440\u0443\u0432\u0430\u043d\u043d\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u043d\u0435 \u0437\u043c\u043e\u0436\u0435 \u043f\u043e\u0432\u043d\u0456\u0441\u0442\u044e \u0437\u0430\u0445\u0438\u0441\u0442\u0438\u0442\u0438 \u0432\u0430\u0448\u0456 \u0431\u0456\u0442\u043a\u043e\u0457\u043d\u0438 \u0432\u0456\u0434 \u043a\u0440\u0430\u0434\u0456\u0436\u043a\u0438 \u044f\u043a\u0449\u043e \u0432\u0430\u0448 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440 \u0431\u0443\u0434\u0435 \u0456\u043d\u0444\u0456\u043a\u043e\u0432\u0430\u043d\u043e \u0448\u043a\u0456\u0434\u043b\u0438\u0432\u0438\u043c\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u043c\u0438.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n-        <translation>\u0412\u0410\u0416\u041b\u0418\u0412\u041e: \u0412\u0441\u0456 \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0456 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0456 \u043a\u043e\u043f\u0456\u0457, \u044f\u043a\u0456 \u0432\u0438 \u0437\u0440\u043e\u0431\u0438\u043b\u0438 \u0437 \u0432\u0430\u0448\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0431\u0443\u0442\u0438 \u0437\u0430\u043c\u0456\u043d\u0435\u043d\u0456 \u043d\u043e\u0432\u043e\u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u043c, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u0433\u0430\u043c\u0430\u043d\u0446\u044f. \u0417 \u043c\u0456\u0440\u043a\u0443\u0432\u0430\u043d\u044c \u0431\u0435\u0437\u043f\u0435\u043a\u0438, \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0456 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0456 \u043a\u043e\u043f\u0456\u0457 \u043d\u0435\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0441\u0442\u0430\u043d\u0443\u0442\u044c \u043c\u0430\u0440\u043d\u0438\u043c\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u0436, \u044f\u043a \u0442\u0456\u043b\u044c\u043a\u0438 \u0432\u0438 \u043f\u043e\u0447\u043d\u0435\u0442\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0438\u0439, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c.</translation>\n+        <translation>\u0412\u0410\u0416\u041b\u0418\u0412\u041e: \u0412\u0441\u0456 \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0456 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0456 \u043a\u043e\u043f\u0456\u0457, \u044f\u043a\u0456 \u0432\u0438 \u0437\u0440\u043e\u0431\u0438\u043b\u0438 \u0437 \u0432\u0430\u0448\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0431\u0443\u0442\u0438 \u0437\u0430\u043c\u0456\u043d\u0435\u043d\u0456 \u043d\u043e\u0432\u043e\u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u043c, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u0433\u0430\u043c\u0430\u043d\u0446\u044f. \u0417 \u043c\u0456\u0440\u043a\u0443\u0432\u0430\u043d\u044c \u0431\u0435\u0437\u043f\u0435\u043a\u0438, \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0456 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0456 \u043a\u043e\u043f\u0456\u0457 \u043d\u0435\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0441\u0442\u0430\u043d\u0443\u0442\u044c \u043d\u0435\u043f\u0440\u0438\u0434\u0430\u0442\u043d\u0438\u043c\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u0436, \u044f\u043a \u0442\u0456\u043b\u044c\u043a\u0438 \u0432\u0438 \u043f\u043e\u0447\u043d\u0435\u0442\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0438\u0439, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c.</translation>\n     </message>\n     <message>\n         <source>Warning: The Caps Lock key is on!</source>\n@@ -181,7 +185,11 @@\n     </message>\n     <message>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043d\u043e\u0432\u0443 \u043a\u043e\u0434\u043e\u0432\u0443 \u0444\u0440\u0430\u0437\u0443 \u0434\u043b\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f.&lt;br/&gt;\u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 \u043a\u043e\u0434\u043e\u0432\u0456 \u0444\u0440\u0430\u0437\u0438 \u0449\u043e \u043c\u0456\u0441\u0442\u044f\u0442\u044c &lt;b&gt; \u044f\u043a \u043c\u0456\u043d\u0456\u043c\u0443\u043c \u0434\u0435\u0441\u044f\u0442\u044c \u0432\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0438\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 &lt;/b&gt; \u0430\u0431\u043e &lt;b&gt; \u044f\u043a \u043c\u0456\u043d\u0456\u043c\u0443\u043c \u0432\u0456\u0441\u0456\u043c \u0441\u043b\u0456\u0432 &lt;/b&gt;.</translation>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043d\u043e\u0432\u0443 \u043a\u043e\u0434\u043e\u0432\u0443 \u0444\u0440\u0430\u0437\u0443 \u0434\u043b\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f.&lt;br/&gt;\u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 \u043a\u043e\u0434\u043e\u0432\u0456 \u0444\u0440\u0430\u0437\u0438 \u0449\u043e \u043c\u0456\u0441\u0442\u044f\u0442\u044c &lt;b&gt; \u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 \u0434\u0435\u0441\u044f\u0442\u044c \u0432\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0438\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 &lt;/b&gt; \u0430\u0431\u043e &lt;b&gt; \u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 \u0432\u0456\u0441\u0456\u043c \u0441\u043b\u0456\u0432 &lt;/b&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0441\u0442\u0430\u0440\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0442\u0430 \u043d\u043e\u0432\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043e \u0433\u0430\u043c\u0430\u043d\u0446\u044f.</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed</source>\n@@ -232,11 +240,11 @@\n     </message>\n     <message>\n         <source>Show general overview of wallet</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0438\u0439 \u043e\u0433\u043b\u044f\u0434 \u0433\u0430\u043c\u0430\u043d\u0446\u044f</translation>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0441\u0442\u0430\u043d \u0433\u0430\u043c\u0430\u043d\u0446\u044f</translation>\n     </message>\n     <message>\n         <source>&amp;Transactions</source>\n-        <translation>\u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457</translation>\n+        <translation>&amp;\u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457</translation>\n     </message>\n     <message>\n         <source>Browse transaction history</source>\n@@ -312,7 +320,7 @@\n     </message>\n     <message>\n         <source>&amp;Debug window</source>\n-        <translation>\u0412\u0456\u043a\u043d\u043e \u0437\u043d\u0435\u0432\u0430\u0434\u0436\u0435\u043d\u043d\u044f</translation>\n+        <translation>\u0412&amp;\u0456\u043a\u043d\u043e \u0437\u043d\u0435\u0432\u0430\u0434\u0436\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n         <source>Open debugging and diagnostic console</source>\n@@ -344,15 +352,15 @@\n     </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 / \u041f\u0440\u0438\u0445\u043e\u0432\u0430\u0442\u0438</translation>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u0430&amp;\u0442\u0438 / \u041f\u0440\u0438\u0445\u043e\u0432\u0430\u0442\u0438</translation>\n     </message>\n     <message>\n         <source>Show or hide the main Window</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u0443\u0454 \u0430\u0431\u043e \u043f\u0440\u0438\u0445\u043e\u0432\u0443\u0454 \u0433\u043e\u043b\u043e\u0432\u043d\u0435 \u0432\u0456\u043a\u043d\u043e</translation>\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n-        <translation>\u0428\u0438\u0444\u0440\u0443\u0432\u0430\u043d\u043d\u044f \u0437\u0430\u043a\u0440\u0438\u0442\u0438\u0445 \u043a\u043b\u044e\u0447\u0456\u0432, \u044f\u043a\u0456 \u043d\u0430\u043b\u0435\u0436\u0430\u0442\u044c \u0432\u0430\u0448\u043e\u043c\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u0456</translation>\n+        <translation>\u0417\u0430\u0448\u0438\u0444\u0440\u0443\u0432\u0430\u0442\u0438 \u0437\u0430\u043a\u0440\u0438\u0442\u0456 \u043a\u043b\u044e\u0447\u0456, \u0449\u043e \u0437\u043d\u0430\u0445\u043e\u0434\u044f\u0442\u044c\u0441\u044f \u0443 \u0432\u0430\u0448\u043e\u043c\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u0456</translation>\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n@@ -388,7 +396,11 @@\n     </message>\n     <message>\n         <source>&amp;About Bitcoin Core</source>\n-        <translation>&amp;\u041f\u0440\u043e Bitcoin Core</translation>\n+        <translation>\u041f&amp;\u0440\u043e Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n@@ -404,20 +416,24 @@\n     </message>\n     <message>\n         <source>&amp;Command-line options</source>\n-        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u043a\u0430</translation>\n+        <translation>\u041f&amp;\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u043a\u0430</translation>\n     </message>\n     <message>\n         <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0434\u043e\u0432\u0456\u0434\u043a\u0443 Bitcoin Core \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u0435\u0440\u0435\u043b\u0456\u043a\u0443 \u043c\u043e\u0436\u043b\u0438\u0432\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u043a\u0430.</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n-        <translation><numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0435 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e</numerusform><numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0456 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e</numerusform><numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0445 \u0437'\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e Bitcoin</numerusform></translation>\n+        <translation><numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0435 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e Bitcoin</numerusform><numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0456 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e Bitcoin</numerusform><numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0445 \u0437'\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e Bitcoin</numerusform></translation>\n     </message>\n     <message>\n         <source>No block source available...</source>\n         <translation>\u041d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0436\u043e\u0434\u043d\u043e\u0433\u043e \u0434\u0436\u0435\u0440\u0435\u043b\u0430 \u0431\u043b\u043e\u043a\u0456\u0432...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>\u041e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043e %n \u0431\u043b\u043e\u043a \u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043e %n \u0431\u043b\u043e\u043a\u0438 \u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043e %n \u0431\u043b\u043e\u043a\u0456\u0432 \u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n \u0433\u043e\u0434\u0438\u043d\u0430</numerusform><numerusform>%n \u0433\u043e\u0434\u0438\u043d\u0438</numerusform><numerusform>%n \u0433\u043e\u0434\u0438\u043d</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u0443\u0454\u0442\u044c\u0441\u044f...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u0414\u0430\u0442\u0430: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u041a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\u0422\u0438\u043f: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\u041c\u0456\u0442\u043a\u0430: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441\u0430: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>\u041d\u0430\u0434\u0456\u0441\u043b\u0430\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457</translation>\n@@ -510,7 +556,7 @@\n     </message>\n     <message>\n         <source>Amount:</source>\n-        <translation>\u041a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c:</translation>\n+        <translation>\u0421\u0443\u043c\u0430:</translation>\n     </message>\n     <message>\n         <source>Priority:</source>\n@@ -582,11 +628,11 @@\n     </message>\n     <message>\n         <source>Copy amount</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0441\u0443\u043c\u0443</translation>\n     </message>\n     <message>\n         <source>Copy transaction ID</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 </translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 </translation>\n     </message>\n     <message>\n         <source>Lock unspent</source>\n@@ -598,31 +644,31 @@\n     </message>\n     <message>\n         <source>Copy quantity</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n     </message>\n     <message>\n         <source>Copy fee</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e</translation>\n     </message>\n     <message>\n         <source>Copy after fee</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0456\u0441\u043b\u044f \u043a\u043e\u043c\u0456\u0441\u0456\u0457</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0456\u0441\u043b\u044f \u043a\u043e\u043c\u0456\u0441\u0456\u0457</translation>\n     </message>\n     <message>\n         <source>Copy bytes</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0431\u0430\u0439\u0442\u0438</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0431\u0430\u0439\u0442\u0438</translation>\n     </message>\n     <message>\n         <source>Copy priority</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0440\u0456\u043e\u0440\u0456\u0442\u0435\u0442</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0440\u0456\u043e\u0440\u0456\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n         <source>Copy dust</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0438\u043b</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0438\u043b</translation>\n     </message>\n     <message>\n         <source>Copy change</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0440\u0435\u0448\u0442\u0443</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0440\u0435\u0448\u0442\u0443</translation>\n     </message>\n     <message>\n         <source>highest</source>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>\u0432\u0456\u0434\u0441\u0443\u0442\u043d\u0456\u0439</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>\u0426\u044f \u043f\u043e\u0437\u043d\u0430\u0447\u043a\u0430 \u0441\u0442\u0430\u043d\u0435 \u0447\u0435\u0440\u0432\u043e\u043d\u043e\u044e, \u044f\u043a\u0449\u043e \u0440\u043e\u0437\u043c\u0456\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u043f\u0435\u0440\u0435\u0432\u0438\u0449\u0438\u0442\u044c 1000 \u0431\u0430\u0439\u0442\u0456\u0432.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>\u0426\u044f \u043f\u043e\u0437\u043d\u0430\u0447\u043a\u0430 \u0441\u0442\u0430\u043d\u0435 \u0447\u0435\u0440\u0432\u043e\u043d\u043e\u044e, \u044f\u043a\u0449\u043e \u043f\u0440\u0456\u043e\u0440\u0438\u0442\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u00ab\u0441\u0435\u0440\u0435\u0434\u043d\u0456\u0439\u00bb.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>\u0426\u044f \u043f\u043e\u0437\u043d\u0430\u0447\u043a\u0430 \u0441\u0442\u0430\u043d\u0435 \u0447\u0435\u0440\u0432\u043e\u043d\u043e\u044e, \u044f\u043a\u0449\u043e \u0431\u0443\u0434\u044c-\u044f\u043a\u0438\u0439 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447 \u043e\u0442\u0440\u0438\u043c\u0430\u0454 \u0441\u0443\u043c\u0443, \u043c\u0435\u043d\u0448\u0443 \u0437\u0430 %1.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>\u041c\u043e\u0436\u0435 \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0442\u0438\u0441\u044f \u043d\u0430 +/- %1 \u0441\u0430\u0442\u043e\u0448\u0456 \u0437\u0430 \u0432\u0445\u0456\u0434</translation>\n@@ -764,7 +822,7 @@\n     <name>FreespaceChecker</name>\n     <message>\n         <source>A new data directory will be created.</source>\n-        <translation>\u0411\u0443\u0434\u0435 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0430 \u043d\u043e\u0432\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u0438\u0445.</translation>\n+        <translation>\u0411\u0443\u0434\u0435 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043e \u043d\u043e\u0432\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u0438\u0445.</translation>\n     </message>\n     <message>\n         <source>name</source>\n@@ -904,7 +962,7 @@\n     </message>\n     <message>\n         <source>Number of script &amp;verification threads</source>\n-        <translation>\u041a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0456\u0432 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438</translation>\n+        <translation>\u041a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0456\u0432 &amp;\u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside</source>\n@@ -918,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>IP-\u0430\u0434\u0440\u0435\u0441\u0430 \u043f\u0440\u043e\u043a\u0441\u0456-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>\u0417\u0433\u043e\u0440\u0442\u0430\u0442\u0438 \u0437\u0430\u043c\u0456\u0441\u0442\u044c \u0437\u0430\u043a\u0440\u0438\u0442\u0442\u044f. \u042f\u043a\u0449\u043e \u0446\u044f \u043e\u043f\u0446\u0456\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430\u043a\u0440\u0438\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043f\u0456\u0441\u043b\u044f \u0432\u0438\u0431\u043e\u0440\u0443 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u043e\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0443 \u0432 \u043c\u0435\u043d\u044e.</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u043c\u043e\u0432\u0443 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430\u0431\u0443\u0434\u0443\u0442\u044c \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0443 Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0456 URL (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, block explorer), \u0449\u043e \u0437'\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u0446\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0443 \u0432\u0438\u0433\u043b\u044f\u0434\u0456 \u043f\u0443\u043d\u043a\u0442\u0443 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0431\u0443\u0434\u0435 \u0437\u0430\u043c\u0456\u043d\u0435\u043d\u043e \u043d\u0430 \u0445\u0435\u0448 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457. \u0414\u043b\u044f \u0432\u0456\u0434\u043e\u043a\u0440\u0435\u043c\u043b\u0435\u043d\u043d\u044f URL\u0456\u0432 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u0443 \u0440\u0438\u0441\u043a\u0443 |.</translation>\n@@ -936,12 +1002,20 @@\n     </message>\n     <message>\n         <source>&amp;Reset Options</source>\n-        <translation>\u0421\u043a\u0438\u043d\u0443\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438</translation>\n+        <translation>\u0421&amp;\u043a\u0438\u043d\u0443\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438</translation>\n     </message>\n     <message>\n         <source>&amp;Network</source>\n         <translation>&amp;\u041c\u0435\u0440\u0435\u0436\u0430</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u0438 Bitcoin Core \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0456 \u0434\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0438.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>&amp;\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u0438 Bitcoin Core \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0456 \u0434\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0438</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 = \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e, &lt;0 = \u0432\u043a\u0430\u0437\u0443\u0454 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u043b\u044c\u043d\u0438\u0445 \u044f\u0434\u0435\u0440)</translation>\n@@ -1054,6 +1128,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>\u0414\u043b\u044f \u0437\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u043d\u043d\u044f \u0437\u043c\u0456\u043d \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0438 \u043a\u043b\u0456\u0454\u043d\u0442\u0430.</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>\u041a\u043b\u0456\u0454\u043d\u0442 \u0431\u0443\u0434\u0435 \u0432\u0438\u043c\u043a\u043d\u0435\u043d\u043e. \u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0438\u0442\u0438?</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>\u0426\u044f \u0437\u043c\u0456\u043d\u0430 \u0432\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u0432 \u0441\u0438\u043b\u0443 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u043a\u043b\u0456\u0454\u043d\u0442\u0430</translation>\n@@ -1188,14 +1266,26 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u0438 \u0444\u0430\u0439\u043b \u0437\u0430\u043f\u0438\u0442\u0443 \u043f\u043b\u0430\u0442\u0435\u0436\u0443! \u0419\u043c\u043e\u0432\u0456\u0440\u043d\u043e, \u0444\u0430\u0439\u043b \u043f\u043e\u0448\u043a\u043e\u0434\u0436\u0435\u043d\u043e.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u0417\u0430\u043f\u0438\u0442 \u043f\u043b\u0430\u0442\u0435\u0436\u0443 \u043f\u0440\u043e\u0441\u0442\u0440\u043e\u0447\u0435\u043d\u043e.</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>\u041d\u0435\u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0435\u043d\u0456 \u0437\u0430\u043f\u0438\u0442\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0456\u0432 \u0437 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043f\u043b\u0430\u0442\u0456\u0436\u043d\u0438\u043c\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044f\u043c\u0438 \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u044e\u0442\u044c\u0441\u044f.</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0432 \u0437\u0430\u043f\u0438\u0442\u0456 \u043f\u043b\u0430\u0442\u0435\u0436\u0443.</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>\u0412\u0456\u0434\u0448\u043a\u043e\u0434\u0443\u0432\u0430\u043d\u043d\u044f \u0437 %1</translation>\n     </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>\u0417\u0430\u043f\u0438\u0442 \u043f\u043b\u0430\u0442\u0435\u0436\u0443 %1 \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0439 (%2 \u0431\u0430\u0439\u0442, \u0434\u043e\u0437\u0432\u043e\u043b\u0435\u043d\u043e %3 \u0431\u0430\u0439\u0442).</translation>\n+    </message>\n     <message>\n         <source>Payment request DoS protection</source>\n         <translation>\u041e\u043f\u043b\u0430\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u0437\u0430\u0445\u0438\u0441\u0442\u0443 DoS</translation>\n@@ -1227,6 +1317,10 @@\n         <source>User Agent</source>\n         <translation>\u041a\u043b\u0456\u0454\u043d\u0442 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>\u0412\u0443\u0437\u043e\u043b/\u0421\u0435\u0440\u0432\u0456\u0441</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>\u0417\u0430\u0442\u0440\u0438\u043c\u043a\u0430</translation>\n@@ -1348,6 +1442,10 @@\n         <source>Current number of blocks</source>\n         <translation>\u041f\u043e\u0442\u043e\u0447\u043d\u0435 \u0447\u0438\u0441\u043b\u043e \u0431\u043b\u043e\u043a\u0456\u0432</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0438 \u0444\u0430\u0439\u043b \u0436\u0443\u0440\u043d\u0430\u043b\u0443 \u043d\u0430\u043b\u0430\u0433\u043e\u0434\u0436\u0435\u043d\u043d\u044f Bitcoin Core \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445. \u0426\u0435 \u043c\u043e\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0430 \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u0456\u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0456\u0432.</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>\u041e\u0442\u0440\u0438\u043c\u0430\u043d\u043e</translation>\n@@ -1416,17 +1514,21 @@\n         <source>Ping Time</source>\n         <translation>\u0417\u0430\u0442\u0440\u0438\u043c\u043a\u0430</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>\u0420\u0456\u0437\u043d\u0438\u0446\u044f \u0447\u0430\u0441\u0443</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0427\u0430\u0441 \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0431\u043b\u043e\u043a\u0443</translation>\n     </message>\n     <message>\n         <source>&amp;Open</source>\n-        <translation>\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0438</translation>\n+        <translation>&amp;\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0438</translation>\n     </message>\n     <message>\n         <source>&amp;Console</source>\n-        <translation>\u041a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n+        <translation>&amp;\u041a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n     </message>\n     <message>\n         <source>&amp;Network Traffic</source>\n@@ -1460,6 +1562,10 @@\n         <source>Clear console</source>\n         <translation>\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u0438 \u043a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>\u0412\u0456\u0442\u0430\u0454\u043c\u043e \u0443 RPC-\u043a\u043e\u043d\u0441\u043e\u043b\u0456 Bitcoin Core.</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 \u0441\u0442\u0440\u0456\u043b\u043a\u0438 \u0432\u0433\u043e\u0440\u0443 \u0432\u043d\u0438\u0437 \u0434\u043b\u044f \u043d\u0430\u0432\u0456\u0433\u0430\u0446\u0456\u0457 \u043f\u043e \u0456\u0441\u0442\u043e\u0440\u0456\u0457, \u0456 &lt;b&gt;Ctrl-L&lt;/b&gt; \u0434\u043b\u044f \u043e\u0447\u0438\u0449\u0435\u043d\u043d\u044f \u0435\u043a\u0440\u0430\u043d\u0430.</translation>\n@@ -1600,11 +1706,11 @@\n     </message>\n     <message>\n         <source>Copy &amp;URI</source>\n-        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 URI</translation>\n+        <translation>&amp;\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 URI</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Address</source>\n-        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0443</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 &amp;\u0430\u0434\u0440\u0435\u0441\u0443</translation>\n     </message>\n     <message>\n         <source>&amp;Save Image...</source>\n@@ -1754,15 +1860,19 @@\n     </message>\n     <message>\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n-        <translation>\u042f\u043a\u0449\u043e \u043e\u043f\u043b\u0430\u0442\u0430 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454\u0442\u044c\u0441\u044f \u0432 1000 Satoshi \u0456 \u0440\u043e\u0437\u043c\u0456\u0440 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0456 \u0432\u0441\u044c\u043e\u0433\u043e 250 \u0431\u0430\u0439\u0442, \u0442\u043e \"\u0437\u0430 \u043a\u0456\u043b\u043e\u0431\u0430\u0439\u0442\" \u043f\u043b\u0430\u0442\u0438\u0442\u044c \u0442\u0456\u043b\u044c\u043a\u0438 250 Satoshi, \u0432 \u0442\u043e\u0439 \u0447\u0430\u0441 \u044f\u043a \"\u0432\u0441\u044c\u043e\u0433\u043e \u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435\" \u043f\u043b\u0430\u0442\u0438\u0442\u044c 1000 satoshis. \u0414\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447 \u0431\u0456\u043b\u044c\u0448\u0438\u0445, \u043d\u0456\u0436 \u043a\u0456\u043b\u043e\u0431\u0430\u0439\u0442 \u043e\u0431\u043e\u0454 \u043f\u043b\u0430\u0442\u044f\u0442\u044c \u0437\u0430 \u043a\u0456\u043b\u043e\u0431\u0430\u0439\u0442.</translation>\n+        <translation>\u042f\u043a\u0449\u043e \u043a\u043e\u043c\u0456\u0441\u0456\u044f \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454\u0442\u044c\u0441\u044f \u0432 1000 \u0441\u0430\u0442\u043e\u0448\u0456 \u0456 \u0440\u043e\u0437\u043c\u0456\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u043b\u0438\u0448\u0435 250 \u0431\u0430\u0439\u0442\u0456\u0432, \u0442\u043e \u043e\u043f\u0446\u0456\u044f \"\u0437\u0430 \u043a\u0456\u043b\u043e\u0431\u0430\u0439\u0442\" \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0432 250 \u0441\u0430\u0442\u043e\u0448\u0456, \u0432 \u0442\u043e\u0439 \u0447\u0430\u0441, \u044f\u043a \"\u0432\u0441\u044c\u043e\u0433\u043e \u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435\" - \u0432 1000 \u0441\u0430\u0442\u043e\u0448\u0456. \u0414\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0431\u0456\u043b\u044c\u0448\u0438\u0445 \u0437\u0430 \u043a\u0456\u043b\u043e\u0431\u0430\u0439\u0442 \u0432 \u043e\u0431\u043e\u0445 \u0432\u0438\u043f\u0430\u0434\u043a\u0430\u0445 \u0431\u0443\u0434\u0435 \u0437\u043d\u044f\u0442\u043e \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0437\u0430 \u043a\u0456\u043b\u043e\u0431\u0430\u0439\u0442.</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>\u041f\u0440\u0438\u0445\u043e\u0432\u0430\u0442\u0438</translation>\n     </message>\n     <message>\n         <source>total at least</source>\n         <translation>\u0432\u0441\u044c\u043e\u0433\u043e \u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435</translation>\n     </message>\n     <message>\n         <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n-        <translation>\u041e\u043f\u043b\u0430\u0442\u0430 \u0442\u0456\u043b\u044c\u043a\u0438 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u0438\u0445 \u0437\u0431\u043e\u0440\u0456\u0432 \u0454 \u043f\u0440\u0438\u0439\u043d\u044f\u0442\u043d\u043e\u044e \u0434\u043e \u0442\u0438\u0445 \u043f\u0456\u0440, \u044f\u043a \u043e\u0431\u0441\u044f\u0433 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0442\u0430\u043c \u0454 \u043c\u0435\u043d\u0448\u0438\u043c \u0430\u043d\u0456\u0436 \u043f\u0440\u043e\u0441\u0442\u043e\u0440\u0443 \u0432 \u0431\u043b\u043e\u043a\u0430\u0445. \u0410\u043b\u0435 \u043c\u0430\u0439\u0442\u0435 \u043d\u0430 \u0443\u0432\u0430\u0437\u0456, \u0449\u043e \u0446\u0435 \u043c\u043e\u0436\u0435 \u0430\u043d\u0443\u043b\u044e\u0432\u0430\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e, \u044f\u043a\u0449\u043e \u043f\u043e\u043f\u0438\u0442 \u043d\u0430 Bitcoin \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0441\u0442\u0430\u043d\u0435 \u0437\u043d\u0430\u0447\u043d\u043e \u0431\u0456\u043b\u044c\u0448\u0438\u043c, \u043d\u0456\u0436 \u043c\u0435\u0440\u0435\u0436\u0430 \u0437\u043c\u043e\u0436\u0435 \u043e\u0431\u0440\u043e\u0431\u0438\u0442\u0438.</translation>\n+        <translation>\u041e\u043f\u043b\u0430\u0442\u0430 \u0442\u0456\u043b\u044c\u043a\u0438 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u043e\u0457 \u043a\u043e\u043c\u0456\u0441\u0456\u0457 \u0454 \u043f\u0440\u0438\u0439\u043d\u044f\u0442\u043d\u043e\u044e, \u0434\u043e\u043f\u043e\u043a\u0438 \u043e\u0431\u0441\u044f\u0433 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0454 \u043c\u0435\u043d\u0448\u0438\u043c \u043f\u0440\u043e\u0441\u0442\u043e\u0440\u0443 \u0432 \u0431\u043b\u043e\u043a\u0430\u0445. \u0410\u043b\u0435 \u043c\u0430\u0439\u0442\u0435 \u043d\u0430 \u0443\u0432\u0430\u0437\u0456, \u0449\u043e \u0446\u0435 \u043c\u043e\u0436\u0435 \u0430\u043d\u0443\u043b\u044e\u0432\u0430\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e, \u044f\u043a\u0449\u043e \u043f\u043e\u043f\u0438\u0442 \u043d\u0430 Bitcoin \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0441\u0442\u0430\u043d\u0435 \u0431\u0456\u043b\u044c\u0448\u0438\u043c, \u043d\u0456\u0436 \u043c\u0435\u0440\u0435\u0436\u0430 \u0437\u043c\u043e\u0436\u0435 \u043e\u0431\u0440\u043e\u0431\u0438\u0442\u0438.</translation>\n     </message>\n     <message>\n         <source>(read the tooltip)</source>\n@@ -1778,7 +1888,7 @@\n     </message>\n     <message>\n         <source>(Smart fee not initialized yet. This usually takes a few blocks...)</source>\n-        <translation>(\u0420\u043e\u0437\u0443\u043c\u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0430 \u0449\u0435 \u043d\u0435 \u0456\u043d\u0456\u0446\u0456\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0430. \u0426\u0435 \u0437\u0432\u0438\u0447\u0430\u0439\u043d\u043e \u0437\u0430\u0439\u043c\u0430\u0454 \u043a\u0456\u043b\u044c\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432...)</translation>\n+        <translation>(\u0420\u043e\u0437\u0443\u043c\u043d\u0443 \u043e\u043f\u043b\u0430\u0442\u0443 \u0449\u0435 \u043d\u0435 \u0456\u043d\u0456\u0446\u0456\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u043e. \u0426\u0435, \u0437\u0430\u0437\u0432\u0438\u0447\u0430\u0439, \u0442\u0440\u0438\u0432\u0430\u0454 \u043a\u0456\u043b\u044c\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432...)</translation>\n     </message>\n     <message>\n         <source>Confirmation time:</source>\n@@ -1846,7 +1956,7 @@\n     </message>\n     <message>\n         <source>Copy amount</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n+        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0441\u0443\u043c\u0443</translation>\n     </message>\n     <message>\n         <source>Copy fee</source>\n@@ -1900,9 +2010,25 @@\n         <source>A fee higher than %1 is considered an absurdly high fee.</source>\n         <translation>\u041f\u043b\u0430\u0442\u0430 \u0432\u0438\u0449\u0430, \u043d\u0456\u0436 %1 \u0432\u0432\u0430\u0436\u0430\u0454\u0442\u044c\u0441\u044f \u0448\u0430\u043b\u0435\u043d\u043e \u0432\u0438\u0441\u043e\u043a\u043e\u044e.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u0417\u0430\u043f\u0438\u0442 \u043f\u043b\u0430\u0442\u0435\u0436\u0443 \u043f\u0440\u043e\u0441\u0442\u0440\u043e\u0447\u0435\u043d\u043e.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>\u041f\u0435\u0440\u0448\u0435 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f \u043e\u0447\u0456\u043a\u0443\u0454\u0442\u044c\u0441\u044f \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c %n \u0431\u043b\u043e\u043a\u0443.</numerusform><numerusform>\u041f\u0435\u0440\u0448\u0435 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f \u043e\u0447\u0456\u043a\u0443\u0454\u0442\u044c\u0441\u044f \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c %n \u0431\u043b\u043e\u043a\u0456\u0432.</numerusform><numerusform>\u041f\u0435\u0440\u0448\u0435 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f \u043e\u0447\u0456\u043a\u0443\u0454\u0442\u044c\u0441\u044f \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c %n \u0431\u043b\u043e\u043a\u0456\u0432.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n-        <translation>\u041f\u043b\u0430\u0442\u0438\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0437\u0431\u0456\u0440 \u0443 \u0440\u043e\u0437\u043c\u0456\u0440\u0456 %1</translation>\n+        <translation>\u041f\u043b\u0430\u0442\u0438\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u0443 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0443 \u0440\u043e\u0437\u043c\u0456\u0440\u0456 %1</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441\u0430 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447\u0430 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430. \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0457\u0457.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>\u0417\u043d\u0430\u0439\u0434\u0435\u043d\u043e \u0430\u0434\u0440\u0435\u0441\u0443, \u0449\u043e \u0434\u0443\u0431\u043b\u044e\u0454\u0442\u044c\u0441\u044f: \u043a\u043e\u0436\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u0432\u043a\u0430\u0437\u0430\u043d\u0430 \u043d\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0443.</translation>\n     </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n@@ -1975,10 +2101,26 @@\n         <source>Remove this entry</source>\n         <translation>\u0412\u0438\u0434\u0430\u043b\u0438\u0442\u0438 \u0446\u0435\u0439 \u0437\u0430\u043f\u0438\u0441</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044e \u0431\u0443\u0434\u0435 \u0437\u043d\u044f\u0442\u043e \u0437\u0456 \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u0457 \u0441\u0443\u043c\u0438. \u0414\u043e \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447\u0430 \u043d\u0430\u0434\u0456\u0439\u0434\u0435 \u043c\u0435\u043d\u0448\u0435 \u0431\u0456\u0442\u043a\u043e\u0456\u043d\u0456\u0432, \u043d\u0456\u0436 \u0431\u0443\u043b\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043f\u043e\u043b\u0456 \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456. \u042f\u043a\u0449\u043e \u0436 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447\u0456\u0432 \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u0430 - \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0431\u0443\u0434\u0435 \u0440\u043e\u0437\u043f\u043e\u0434\u0456\u043b\u0435\u043d\u043e \u043c\u0456\u0436 \u043d\u0438\u043c\u0438.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>\u0412&amp;\u0456\u0434\u043d\u044f\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0432\u0456\u0434 \u0441\u0443\u043c\u0438</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>\u041f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>\u0426\u0435\u0439 \u0437\u0430\u043f\u0438\u0442 \u043f\u043b\u0430\u0442\u0435\u0436\u0443 \u043d\u0435 \u0454 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u043e\u0432\u0430\u043d\u0438\u043c.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>\u0426\u0435\u0439 \u0437\u0430\u043f\u0438\u0442 \u043f\u043b\u0430\u0442\u0435\u0436\u0443 \u0454 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u043e\u0432\u0430\u043d\u0438\u043c.</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043c\u0456\u0442\u043a\u0443 \u0434\u043b\u044f \u0446\u0456\u0454\u0457 \u0430\u0434\u0440\u0435\u0441\u0438 \u0434\u043b\u044f \u0434\u043e\u0434\u0430\u0432\u0430\u043d\u043d\u044f \u0457\u0457 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0438\u0445 \u0430\u0434\u0440\u0435\u0441</translation>\n@@ -2017,6 +2159,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;\u041f\u0456\u0434\u043f\u0438\u0441\u0430\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>\u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0456\u0434\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f/\u0443\u0433\u043e\u0434\u0438 \u0441\u0432\u043e\u0457\u043c\u0438 \u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438, \u0449\u043e\u0431 \u0434\u043e\u0432\u0435\u0441\u0442\u0438 \u043c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0431\u0456\u0442\u043a\u043e\u0456\u043d\u0456\u0432, \u0449\u043e \u0431\u0443\u0434\u0443\u0442\u044c \u043d\u0430\u0434\u0456\u0441\u043b\u0430\u043d\u0456 \u043d\u0430 \u043d\u0438\u0445. \u041e\u0441\u0442\u0435\u0440\u0456\u0433\u0430\u0439\u0442\u0435\u0441\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0431\u0443\u0434\u044c-\u0449\u043e \u043d\u0435\u0447\u0456\u0442\u043a\u0435 \u0447\u0438 \u043d\u0435\u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0435, \u0442\u0430\u043a \u044f\u043a \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0444\u0456\u0448\u0438\u043d\u0433-\u0430\u0442\u0430\u043a\u0438 \u0432\u0430\u0441 \u043c\u043e\u0436\u0443\u0442\u044c \u0441\u043f\u0440\u043e\u0431\u0443\u0432\u0430\u0442\u0438 \u0432\u0432\u0435\u0441\u0442\u0438 \u0432 \u043e\u043c\u0430\u043d\u0443 \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0432\u0430\u0448\u043e\u0433\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0443 \u043f\u0456\u0434 \u0447\u0443\u0436\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u041f\u0456\u0434\u043f\u0438\u0441\u0443\u0439\u0442\u0435 \u043b\u0438\u0448\u0435 \u0447\u0456\u0442\u043a\u0456 \u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f, \u0437 \u044f\u043a\u0438\u043c\u0438 \u0432\u0438 \u043f\u043e\u0432\u043d\u0456\u0441\u0442\u044e \u0437\u0433\u043e\u0434\u043d\u0456.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441\u0430 Bitcoin \u0434\u043b\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0443 \u0446\u044c\u043e\u0433\u043e \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n@@ -2067,7 +2213,11 @@\n     </message>\n     <message>\n         <source>&amp;Verify Message</source>\n-        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n+        <translation>\u041f&amp;\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n+    </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043d\u0438\u0436\u0447\u0435 \u0430\u0434\u0440\u0435\u0441\u0443 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447\u0430, \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f (\u0432\u043f\u0435\u0432\u043d\u0456\u0442\u044c\u0441\u044f, \u0449\u043e \u0432\u0438 \u0442\u043e\u0447\u043d\u043e \u0441\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044f \u0440\u044f\u0434\u043a\u0430, \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0456\u044e, \u043f\u0440\u043e\u0431\u0456\u043b\u0438 \u0442\u043e\u0449\u043e) \u0442\u0430 \u043f\u0456\u0434\u043f\u0438\u0441 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f. \u0412\u043f\u0435\u0432\u043d\u0456\u0442\u044c\u0441\u044f, \u0449\u043e \u0432 \u043f\u0456\u0434\u043f\u0438\u0441 \u043d\u0435 \u0431\u0443\u043b\u043e \u0434\u043e\u0434\u0430\u043d\u043e \u0437\u0430\u0439\u0432\u0438\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432: \u0446\u0435 \u0434\u043e\u043f\u043e\u043c\u043e\u0436\u0435 \u0443\u043d\u0438\u043a\u043d\u0443\u0442\u0438 \u0430\u0442\u0430\u043a \u0442\u0438\u043f\u0443 \u00ab\u043b\u044e\u0434\u0438\u043d\u0430 \u043f\u043e\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0456\u00bb. \u0417\u0430\u0443\u0432\u0430\u0436\u0442\u0435, \u0449\u043e \u0446\u0435 \u043b\u0438\u0448\u0435 \u0437\u0430\u0441\u0432\u0456\u0434\u0447\u0443\u0454 \u043c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u043f\u0456\u0434\u043f\u0438\u0441\u0443\u0432\u0430\u0447\u0435\u043c, \u0430\u043b\u0435 \u043d\u0435 \u0432 \u0441\u0442\u0430\u043d\u0456 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0438 \u0434\u0436\u0435\u0440\u0435\u043b\u043e \u0436\u043e\u0434\u043d\u043e\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457!</translation>\n     </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n@@ -2079,7 +2229,7 @@\n     </message>\n     <message>\n         <source>Verify &amp;Message</source>\n-        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n+        <translation>\u041f\u0435\u0440\u0435&amp;\u0432\u0456\u0440\u0438\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n         <source>Reset all verify message fields</source>\n@@ -2284,7 +2434,7 @@\n     </message>\n     <message>\n         <source>Inputs</source>\n-        <translation>\u0432\u0438\u0442\u0440\u0430\u0442\u0438</translation>\n+        <translation>\u0412\u0445\u043e\u0434\u0438</translation>\n     </message>\n     <message>\n         <source>Amount</source>\n@@ -2420,6 +2570,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u0443\u0454, \u0447\u0438 \u0431\u0443\u043b\u043e \u0437\u0430\u043b\u0443\u0447\u0435\u043d\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f \u0441\u043f\u043e\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043d\u043d\u044f \u0432 \u0446\u0456\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>\u041f\u0440\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 (\u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0435\u043c).</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>\u0421\u0443\u043c\u0430, \u0434\u043e\u0434\u0430\u043d\u0430 \u0447\u0438 \u0437\u043d\u044f\u0442\u0430 \u0437 \u0431\u0430\u043b\u0430\u043d\u0441\u0443.</translation>\n@@ -2493,11 +2647,11 @@\n     </message>\n     <message>\n         <source>Copy amount</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0441\u0443\u043c\u0443</translation>\n     </message>\n     <message>\n         <source>Copy transaction ID</source>\n-        <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 </translation>\n+        <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 </translation>\n     </message>\n     <message>\n         <source>Edit label</source>\n@@ -2670,17 +2824,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>\u041f\u043e\u0448\u0438\u0440\u044e\u0454\u0442\u044c\u0441\u044f \u0437\u0430 \u043b\u0456\u0446\u0435\u043d\u0437\u0456\u0454\u044e MIT, \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u0430 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u0443 \u0444\u0430\u0439\u043b\u0456 COPYING \u0442\u0430 \u0437\u0430 \u0430\u0434\u0440\u0435\u0441\u043e\u044e &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u0412\u0432\u0456\u0439\u0442\u0438 \u0432 \u0440\u0435\u0436\u0438\u043c \u0440\u0435\u0433\u0440\u0435\u0441\u0438\u0432\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f, \u0449\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 \u0441\u043f\u0435\u0446\u0456\u0430\u043b\u044c\u043d\u0438\u0439 \u043b\u0430\u043d\u0446\u044e\u0433 \u0437 \u043c\u0438\u0442\u0442\u0454\u0432\u0438\u043c \u0437\u043d\u0430\u0445\u043e\u0434\u0436\u0435\u043d\u043d\u044f\u043c \u0431\u043b\u043e\u043a\u0456\u0432.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u0438\u043a\u043e\u043d\u0430\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u043b\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0437\u043c\u0456\u043d\u0438\u0442\u044c\u0441\u044f (\u0437\u0430\u043c\u0456\u0441\u0442\u044c %s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0456 \u0431\u0443\u0434\u0435 \u043f\u0456\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>\u0412 \u0446\u044c\u043e\u043c\u0443 \u0440\u0435\u0436\u0438\u043c\u0456 -genproclimit \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0431\u043b\u043e\u043a\u0456\u0432, \u0449\u043e \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0456 \u043d\u0435\u0433\u0430\u0439\u043d\u043e.</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u043e\u0434\u043d\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e; \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043d\u0438\u0437\u044c\u043a\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u043e\u0436\u0435 \u0441\u043a\u0430\u0441\u0443\u0432\u0430\u0442\u0438 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043a\u0443 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>\u0417\u043c\u0435\u043d\u0448\u0438\u0442\u0438 \u0432\u0438\u043c\u043e\u0433\u0438 \u0434\u043e \u043d\u0430\u044f\u0432\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0440\u0443 \u043d\u0430 \u043d\u043e\u0441\u0456\u0457 \u0434\u0430\u043d\u0438\u0445 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 (\u0432\u0438\u0434\u0430\u043b\u0435\u043d\u043d\u044f \u0441\u0442\u0430\u0440\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432). \u0426\u0435\u0439 \u0440\u0435\u0436\u0438\u043c \u0432\u0438\u043c\u0438\u043a\u0430\u0454 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u043a\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0442\u0430 \u0454 \u043d\u0435\u0441\u0443\u043c\u0456\u0441\u043d\u0438\u043c \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c -txindex. \u0423\u0432\u0430\u0433\u0430: \u043f\u0440\u0438 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u0456 \u0434\u043e \u0442\u0438\u043f\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0438\u0434\u0430\u043b\u0435\u043d\u0456 \u0447\u0430\u0441\u0442\u0438\u043d\u0438 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u0443\u0434\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043e. (\u0442\u0438\u043f\u043e\u0432\u043e: 0 = \u0432\u0438\u043c\u043a\u043d\u0443\u0442\u0438 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430, &gt;%u = \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0444\u0430\u0439\u043b\u0456\u0432 \u0431\u043b\u043e\u043a\u0456\u0432 \u0432 \u041c\u0456\u0411)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2694,6 +2848,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u0438\u0432'\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e %s \u043d\u0430 \u0446\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0456. \u041c\u043e\u0436\u043b\u0438\u0432\u043e, Bitcoin Core \u0432\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043e.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u0423\u0412\u0410\u0413\u0410: \u0430\u043d\u043e\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u0438\u0441\u043e\u043a\u0430 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432, %d \u0431\u043b\u043e\u043a(\u0456\u0432) \u0431\u0443\u043b\u043e \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043e \u0437\u0430 \u043e\u0441\u0442\u0430\u043d\u043d\u0456 %d \u0433\u043e\u0434\u0438\u043d(\u0438) (\u043c\u0430\u0454 \u0431\u0443\u0442\u0438 %d)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u0423\u0412\u0410\u0413\u0410: \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0432\u0430\u0448\u0435 \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u0435 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f, %d \u0431\u043b\u043e\u043a(\u0456\u0432) \u0431\u0443\u043b\u043e \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043e \u0437\u0430 \u043e\u0441\u0442\u0430\u043d\u043d\u0456 %d \u0433\u043e\u0434\u0438\u043d(\u0438) (\u043c\u0430\u0454 \u0431\u0443\u0442\u0438 %d)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0443 \u043a\u043e\u043c\u0456\u0441\u0456\u044e (-paytxfee). \u041a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u043d\u0456\u043c\u0430\u0442\u0438\u043c\u0435\u0442\u044c\u0441\u044f \u043a\u043e\u0436\u0435\u043d \u0440\u0430\u0437 \u043a\u043e\u043b\u0438 \u0432\u0438 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u0438\u043c\u0435\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n@@ -2736,7 +2898,7 @@\n     </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n-        <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0438\u0441\u044c \u043b\u0438\u0448\u0435 \u0434\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u0433\u043e \u0432\u0443\u0437\u043b\u0430</translation>\n+        <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0438\u0441\u044c \u043b\u0438\u0448\u0435 \u0434\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u0433\u043e \u0432\u0443\u0437\u043b\u0430/\u0432\u0443\u0437\u043b\u0456\u0432</translation>\n     </message>\n     <message>\n         <source>Connection options:</source>\n@@ -2808,7 +2970,15 @@\n     </message>\n     <message>\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n-        <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u0434\u043e \u0432\u0443\u0437\u043b\u0456\u0432 \u0432 \u043c\u0435\u0440\u0435\u0436\u0456 &lt;net&gt; (ipv4, ipv6 \u0430\u0431\u043e onion)</translation>\n+        <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u0438\u0441\u044f \u0442\u0456\u043b\u044c\u043a\u0438 \u0434\u043e \u0432\u0443\u0437\u043b\u0456\u0432 \u0432 \u043c\u0435\u0440\u0435\u0436\u0456 &lt;net&gt; (ipv4, ipv6 \u0430\u0431\u043e onion)</translation>\n+    </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>\u0420\u043e\u0437\u043c\u0456\u0440 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043e\u0433\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0432\u0456\u0434'\u0454\u043c\u043d\u0438\u043c. </translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043e\u0433\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u043d\u0435\u0441\u0443\u043c\u0456\u0441\u043d\u0435 \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c -txindex.</translation>\n     </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n@@ -2822,10 +2992,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c \u0444\u0430\u0439\u043b \u0433\u0430\u043c\u0430\u043d\u0446\u044f (\u0432 \u043c\u0435\u0436\u0430\u0445 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u0426\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u0456\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0456\u0432 \u0440\u0435\u0433\u0440\u0435\u0441\u0438\u0432\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0442\u0430 \u0440\u043e\u0437\u0440\u043e\u0431\u043a\u0438 \u0434\u043e\u0434\u0430\u0442\u043a\u0456\u0432.</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>\u041d\u0430\u043c\u0430\u0433\u0430\u0442\u0438\u0441\u044c \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 UPnP \u0434\u043b\u044f \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0440\u0442\u0443, \u0449\u043e \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f, \u043d\u0430 \u0440\u043e\u0443\u0442\u0435\u0440\u0456 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -2846,6 +3012,10 @@\n         <source>Wallet options:</source>\n         <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0433\u0430\u043c\u0430\u043d\u0446\u044f:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>\u0423\u0432\u0430\u0433\u0430: \u041f\u043e\u0442\u043e\u0447\u043d\u0430 \u0432\u0435\u0440\u0441\u0456\u044f \u0437\u0430\u0441\u0442\u0430\u0440\u0456\u043b\u0430, \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u0435 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f!</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u043f\u0435\u0440\u0435\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u0438\u0445 \u0437 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f\u043c -reindex \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0437\u043c\u0456\u043d\u0438\u0442\u0438 -txindex</translation>\n@@ -2878,6 +3048,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>\u0421\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0456 \u0444\u0430\u0439\u043b\u0438 \u0437 \u0442\u0438\u043f\u043e\u0432\u0438\u043c\u0438 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0443 \u0437\u0430\u043c\u0456\u0441\u0442\u044c \u043c\u0430\u0441\u043a\u0438 077 (\u0434\u0456\u0454 \u0442\u0456\u043b\u044c\u043a\u0438 \u043f\u0440\u0438 \u0432\u0438\u043c\u043a\u043d\u0435\u043d\u043e\u043c\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u0456)</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>\u0412\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0432\u043b\u0430\u0441\u043d\u0456 IP-\u0430\u0434\u0440\u0435\u0441\u0438 (\u0442\u0438\u043f\u043e\u0432\u043e: 1 \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u0456 \u0442\u0430 \u0437\u0430 \u0432\u0456\u0434\u0441\u0443\u0442\u043d\u043e\u0441\u0442\u0456 -externalip \u0430\u0431\u043e -proxy)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u0442\u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0445\u0456\u0434\u043d\u0438\u0445 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u044c (listen \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0432 \u043f\u043e\u043c\u0438\u043b\u043a\u0443: %s)</translation>\n@@ -2894,22 +3068,30 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u0457 (\u0432 BTC/\u041a\u0411), \u0449\u043e \u043c\u0435\u043d\u0448\u0456 \u0437\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0443, \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u043c\u0443\u0442\u044c\u0441\u044f \u043d\u0443\u043b\u044c\u043e\u0432\u0438\u043c\u0438 (\u0434\u043b\u044f \u0440\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0456\u0457) (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u0457 (\u0432 BTC/\u041a\u0411), \u0449\u043e \u043c\u0435\u043d\u0448\u0456 \u0437\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0443, \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u043c\u0443\u0442\u044c\u0441\u044f \u043d\u0443\u043b\u044c\u043e\u0432\u0438\u043c\u0438 (\u0434\u043b\u044f \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457) (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u042f\u043a\u0449\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 paytxfee \u043d\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u0435\u0440\u0448\u0438\u0445 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c n \u0431\u043b\u043e\u043a\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>\u041d\u0435\u043f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0441\u0443\u043c\u0430 \u0434\u043b\u044f -maxtxfee = &lt;amount&gt;: \u00ab%s\u00bb ( \u043f\u043b\u0430\u0442\u0430 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u0431\u0443\u0442\u0438, \u043f\u0440\u0438\u043d\u0430\u0439\u043c\u043d\u0456 %s, \u0449\u043e\u0431 \u0437\u0430\u043f\u043e\u0431\u0456\u0433\u0442\u0438 \u0437\u0430\u0432\u0438\u0441\u0430\u043d\u043d\u044e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439)</translation>\n+    </message>\n     <message>\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0434\u0430\u043d\u0438\u0445 \u0432 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044f\u0445 \u043d\u043e\u0441\u0456\u0457\u0432 \u0434\u0430\u043d\u0438\u0445, \u0449\u043e \u043c\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0454\u043c\u043e \u0456 \u0434\u043e\u0431\u0443\u0432\u0430\u0454\u043c\u043e (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u0454 \u0437\u0430\u043c\u0430\u043b\u0438\u043c (\u043c\u0435\u043d\u0448\u0438\u0439 \u0437\u0430 %d \u041c\u0411). \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0431\u0456\u043b\u044c\u0448\u0435 \u0447\u0438\u0441\u043b\u043e.</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u0414\u0456\u0437\u043d\u0430\u0432\u0430\u0442\u0438\u0441\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432 \u0447\u0435\u0440\u0435\u0437 DNS \u043f\u0440\u0438 \u0437\u0430\u043c\u0430\u043b\u0456\u0439 \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u0432\u0456\u0434\u043e\u043c\u0438\u0445 \u0430\u0434\u0440\u0435\u0441 (\u0442\u0438\u043f\u043e\u0432\u043e: 1 \u0437\u0430 \u0432\u0456\u0434\u0441\u0443\u0442\u043d\u043e\u0441\u0442\u0456 -connect)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>\u041d\u0430\u0434\u0430\u0432\u0430\u0442\u0438 \u0432\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0456 \u0434\u0430\u043d\u0456 \u0434\u043e\u0441\u0442\u0443\u043f\u0443 \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043a\u0441\u0456-\u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f. \u0426\u0435 \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454 \u0432\u0432\u0456\u043c\u043a\u043d\u0443\u0442\u0438 \u0456\u0437\u043e\u043b\u044f\u0446\u0456\u044e \u043f\u043e\u0442\u043e\u043a\u0456\u0432 Tor'\u0443 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0437 \u0432\u0438\u0441\u043e\u043a\u0438\u043c \u043f\u0440\u0456\u043e\u0440\u0438\u0442\u0435\u0442\u043e\u043c \u0442\u0430 \u043d\u0438\u0437\u044c\u043a\u043e\u044e \u043a\u043e\u043c\u0456\u0441\u0456\u0454\u044e (\u0432 \u0431\u0430\u0439\u0442\u0430\u0445) (\u0442\u0438\u043f\u043e\u0432\u043e: %d)</translation>\n@@ -2918,6 +3100,10 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0456\u0432 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u0457 \u043c\u043e\u043d\u0435\u0442 (-1 = \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u044f\u0434\u0435\u0440, \u0442\u0438\u043f\u043e\u0432\u043e: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>\u0417\u0430\u043b\u0438\u0448\u043e\u043a \u0432\u0456\u0434 \u0441\u0443\u043c\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437\u0456 \u0441\u043f\u043b\u0430\u0442\u043e\u044e \u043a\u043e\u043c\u0456\u0441\u0456\u0457 \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043c\u0430\u043b\u0438\u0439 </translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u0426\u0435\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0454 \u0432 \u0441\u0435\u0431\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043d\u0435 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0435\u043d\u043d\u044f, \u0440\u043e\u0437\u0440\u043e\u0431\u043b\u0435\u043d\u0435 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u0443 OpenSSL &lt;https://www.openssl.org/&gt;, \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0456\u0447\u043d\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043d\u0435 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0435\u043d\u043d\u044f, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0415\u0440\u0456\u043a\u043e\u043c \u042f\u043d\u0433\u043e\u043c, \u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0434\u043b\u044f \u0440\u043e\u0431\u043e\u0442\u0438 \u0437 UPnP, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0422\u043e\u043c\u0430\u0441\u043e\u043c \u0411\u0435\u0440\u043d\u0430\u0440\u0434\u043e\u043c.</translation>\n@@ -2958,10 +3144,26 @@ rpcpassword=%s\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u0423\u0447\u0430\u0441\u043d\u0438\u043a\u0438, \u0449\u043e \u0437\u043d\u0430\u0445\u043e\u0434\u044f\u0442\u044c\u0441\u044f \u0432 \u0431\u0456\u043b\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043a\u0443, \u043d\u0435 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0437\u0430\u0431\u043b\u043e\u043a\u043e\u0432\u0430\u043d\u0456 \u0437\u0430 DoS \u0442\u0430 \u0457\u0445\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437\u0430\u0432\u0436\u0434\u0438 \u0440\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044e\u0432\u0430\u0442\u0438\u043c\u0443\u0442\u044c\u0441\u044f (\u043d\u0430\u0432\u0456\u0442\u044c \u044f\u043a\u0449\u043e \u0432\u043e\u043d\u0438 \u0454 \u0432 \u043f\u0430\u043c'\u044f\u0442\u0456), \u0449\u043e \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u043a\u043e\u0440\u0438\u0441\u043d\u0438\u043c, \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0434\u043b\u044f \u0448\u043b\u044e\u0437\u0443</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>\u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u043f\u0435\u0440\u0435\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u0438\u0445 \u0437 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f\u043c -reindex \u0434\u043b\u044f \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u043d\u043e\u0433\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432.</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>\u041f\u0440\u0438\u0439\u043c\u0430\u0442\u0438 \u043f\u0443\u0431\u043b\u0456\u0447\u043d\u0456 REST-\u0437\u0430\u043f\u0438\u0442\u0438 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>\u0410\u043a\u0442\u0438\u0432\u0430\u0446\u0456\u044f \u043d\u0430\u0439\u043a\u0440\u0430\u0449\u043e\u0433\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0437\u0456 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u0438\u043c \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u043e\u043c \u0431\u043b\u043e\u043a\u0456\u0432 \u043d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u0435.</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0440\u043e\u0437\u043f\u0456\u0437\u043d\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f -whitebind: \u00ab%s\u00bb</translation>\n@@ -2986,6 +3188,10 @@ rpcpassword=%s\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u0456 wallet.dat: \u0413\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u043d\u043e\u0432\u0456\u0448\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 Bitcoin Core</translation>\n     </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0447\u0438\u0442\u0430\u043d\u043d\u044f \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445, \u043f\u0440\u0438\u043f\u0438\u043d\u044f\u044e \u0440\u043e\u0431\u043e\u0442\u0443.</translation>\n+    </message>\n     <message>\n         <source>Error: Unsupported argument -tor found, use -onion.</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -tor \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -onion</translation>\n@@ -3004,7 +3210,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s'</source>\n-        <translation>\u041d\u0435\u043f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0441\u0443\u043c\u0430 \u0434\u043b\u044f -maxtxfee = &lt;amount&gt;: '%s'</translation>\n+        <translation>\u041d\u0435\u043f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0441\u0443\u043c\u0430 \u0434\u043b\u044f -maxtxfee = &lt;amount&gt;: \u00ab%s\u00bb</translation>\n     </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: '%s'</source>\n@@ -3043,12 +3249,16 @@ rpcpassword=%s\n         <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 RPC:</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u0412\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0438\u043c \u0447\u0438\u043d\u043e\u043c \u0432\u0456\u0434\u043a\u0438\u0434\u0430\u0442\u0438 1 \u0437 &lt;n&gt; \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u0438\u0445 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u044c</translation>\n+        <source>RPC support for HTTP persistent connections (default: %d)</source>\n+        <translation>\u041f\u0456\u0434\u0442\u0440\u0438\u043c\u043a\u0430 RPC \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0456\u0439\u043d\u0438\u0445 HTTP-\u0437'\u0454\u0434\u043d\u0430\u043d\u044c (\u0442\u0438\u043f\u043e\u0432\u043e: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>\u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u043f\u0435\u0440\u0435\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u0456\u043d\u0434\u0435\u043a\u0441 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u0438\u0445 \u0444\u0430\u0439\u043b\u0456\u0432 blk000??.dat</translation>\n     </message>\n     <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u0412\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0438\u043c \u0447\u0438\u043d\u043e\u043c \u043f\u043e\u0448\u043a\u043e\u0434\u0436\u0443\u0432\u0430\u0442\u0438 1 \u0437 &lt;n&gt; \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u0438\u0445 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u044c</translation>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>\u041e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u0442\u0430 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438 \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u0436\u0435\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0456 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3086,6 +3296,10 @@ rpcpassword=%s\n         <source>Start minimized</source>\n         <translation>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u0438 \u0437\u0433\u043e\u0440\u043d\u0443\u0442\u0438\u043c</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u0441\u043f\u043b\u0430\u0442\u0438\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0456\u0437-\u0437\u0430 \u043c\u0430\u043b\u043e\u0457 \u0441\u0443\u043c\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>\u0426\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043d\u0435 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0435\u043d\u043d\u044f \u0454 \u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u0438\u043c.</translation>\n@@ -3106,6 +3320,10 @@ rpcpassword=%s\n         <source>Transaction too large</source>\n         <translation>\u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044f \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0430</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u0438\u0432'\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e %s \u043d\u0430 \u0446\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0456 (bind \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0432 \u043f\u043e\u043c\u0438\u043b\u043a\u0443: %s)</translation>\n@@ -3186,18 +3404,10 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = \u0443\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0434\u043e \u044f\u043a\u0438\u0445 \u0432\u0456\u0434\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f \u043f\u0440\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u0430 \u0440\u0430\u0445\u0443\u043d\u043a\u0443 \u0442\u0430 \u0437\u0430\u043f\u0438\u0442\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0456\u0432), 2 - \u0432\u0456\u0434\u043a\u0438\u043d\u0443\u0442\u0438)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>\u0417\u0430\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0437\u043c\u0456\u043d\u0438 \u0432 \u0431\u0430\u0437\u0456 \u0434\u0430\u043d\u0438\u0445 \u0434\u043e \u0444\u0430\u0439\u043b\u0443 \u043a\u043e\u0436\u043d\u0456 &lt;n&gt; \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>\u0420\u0456\u0432\u0435\u043d\u044c \u0440\u0435\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 \u0431\u043b\u043e\u043a\u0456\u0432 (0-4, \u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>\u0417\u0430\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0432 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b \u043f\u0440\u0456\u043e\u0440\u0438\u0442\u0435\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0442\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0437\u0430 \u043a\u0411 \u043f\u0456\u0434 \u0447\u0430\u0441 \u0434\u043e\u0431\u0443\u0432\u0430\u043d\u043d\u044f \u0431\u043b\u043e\u043a\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>\u0423\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u043f\u043e\u0432\u043d\u0438\u0439 \u0456\u043d\u0434\u0435\u043a\u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f RPC-\u0432\u0438\u043a\u043b\u0438\u043a\u043e\u043c getrawtransaction) (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3226,18 +3436,10 @@ rpcpassword=%s\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>\u0417\u0430\u0432\u0436\u0434\u0438 \u0434\u0456\u0437\u043d\u0430\u0432\u0430\u0442\u0438\u0441\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432 \u0447\u0435\u0440\u0435\u0437 DNS (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>\u0412\u0438\u043c\u043a\u043d\u0443\u0442\u0438 \u0431\u0435\u0437\u043f\u0435\u0447\u043d\u0438\u0439 \u0440\u0435\u0436\u0438\u043c \u0442\u0430 \u0456\u0433\u043d\u043e\u0440\u0443\u0432\u0430\u0442\u0438 \u043f\u043e\u0434\u0456\u0457, \u0449\u043e \u0437\u0434\u0430\u0442\u043d\u0456 \u0432\u0432\u0456\u043c\u043a\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u0456 wallet.dat</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>\u0412\u0432\u0456\u043c\u043a\u043d\u0443\u0442\u0438 \u0431\u0435\u0437\u043f\u0435\u0447\u043d\u0438\u0439 \u0440\u0435\u0436\u0438\u043c (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u043c\u043e\u043d\u0435\u0442 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3254,10 +3456,6 @@ rpcpassword=%s\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0432 \u0430\u0434\u0440\u0435\u0441\u0456 \u043f\u0440\u043e\u043a\u0441\u0456-\u0441\u0435\u0440\u0432\u0435\u0440\u0430: \u00ab%s\u00bb</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>\u041e\u0431\u043c\u0435\u0436\u0438\u0442\u0438 \u0440\u043e\u0437\u043c\u0456\u0440 \u043a\u0435\u0448\u0443 \u043f\u0456\u0434\u043f\u0438\u0441\u0456\u0432 \u0434\u043e &lt;n&gt; \u0437\u0430\u043f\u0438\u0441\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>\u041f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u0442\u0438 &lt;port&gt; \u0434\u043b\u044f JSON-RPC \u0437'\u0454\u0434\u043d\u0430\u043d\u044c (\u0442\u0438\u043f\u043e\u0432\u043e: %u, \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456: %u)</translation>\n@@ -3270,6 +3468,10 @@ rpcpassword=%s\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>\u041f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u0449\u043e\u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448\u0435 &lt;n&gt; \u0437'\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0430\u043c\u0438 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>\u0414\u043e\u0437\u0432\u043e\u043b\u0438\u0442\u0438 \u0433\u0430\u043c\u0430\u043d\u0446\u044e \u0440\u043e\u0437\u043f\u043e\u0432\u0441\u044e\u0434\u0436\u0443\u0432\u0430\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0432\u0445\u0456\u0434\u043d\u043e\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0443 \u043d\u0430 \u043e\u0434\u043d\u0435 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f, &lt;n&gt;*1000 \u0431\u0430\u0439\u0442\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3278,10 +3480,6 @@ rpcpassword=%s\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0432\u0438\u0445\u0456\u0434\u043d\u043e\u0433\u043e \u0431\u0443\u0444\u0435\u0440\u0443 \u043d\u0430 \u043e\u0434\u043d\u0435 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f, &lt;n&gt;*1000 \u0431\u0430\u0439\u0442\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>\u041f\u0440\u0438\u0439\u043c\u0430\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u0442\u043e\u0439 \u043b\u0430\u043d\u0446\u044e\u0436\u043e\u043a \u0431\u043b\u043e\u043a\u0456\u0432, \u0449\u043e \u043d\u0435 \u0441\u0443\u043f\u0435\u0440\u0435\u0447\u0438\u0442\u044c \u0432\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0438\u043c \u0442\u043e\u0447\u043a\u0430\u043c (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>\u0414\u043e\u043f\u043e\u0432\u043d\u044e\u0432\u0430\u0442\u0438 \u043d\u0430\u043b\u0430\u0433\u043e\u0434\u0436\u0443\u0432\u0430\u043b\u044c\u043d\u0438\u0439 \u0432\u0438\u0432\u0456\u0434 \u0432\u0456\u0434\u043c\u0456\u0442\u043a\u043e\u044e \u0447\u0430\u0441\u0443 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3294,10 +3492,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u0420\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044e\u0432\u0430\u0442\u0438 \u043d\u0435-P2SH \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437 \u043c\u0443\u043b\u044c\u0442\u0438\u043f\u0456\u0434\u043f\u0438\u0441\u043e\u043c (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0438 \u043f\u043e\u0442\u0456\u043a \u0434\u043b\u044f \u043f\u0435\u0440\u0456\u043e\u0434\u0438\u0447\u043d\u043e\u0433\u043e \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043d\u043d\u044f \u0434\u0430\u043d\u0438\u0445 \u0433\u0430\u043c\u0430\u043d\u0446\u044f (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>\u0424\u0430\u0439\u043b \u0441\u0435\u0440\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n@@ -3318,10 +3512,6 @@ rpcpassword=%s\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u0456\u0432 \u0434\u043b\u044f \u043e\u0431\u0441\u043b\u0443\u0433\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0456\u0432 RPC (\u0442\u0438\u043f\u043e\u0432\u043e: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u043f\u0440\u0430\u043f\u043e\u0440\u0435\u0446\u044c DB_PRIVATE \u0432 \u0441\u0435\u0440\u0435\u0434\u043e\u0432\u0438\u0449\u0456 \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445 \u0433\u0430\u043c\u0430\u043d\u0446\u044f (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>\u0412\u043a\u0430\u0437\u0430\u0442\u0438 \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n@@ -3338,10 +3528,6 @@ rpcpassword=%s\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>\u0412\u0438\u0442\u0440\u0430\u0447\u0430\u0442\u0438 \u043d\u0435\u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u0443 \u0440\u0435\u0448\u0442\u0443 \u043f\u0440\u0438 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>\u0412\u0438\u043c\u043a\u043d\u0443\u0442\u0438\u0441\u044f \u043f\u0456\u0441\u043b\u044f \u0456\u043c\u043f\u043e\u0440\u0442\u0443 \u0431\u043b\u043e\u043a\u0456\u0432 \u0437 \u0434\u0438\u0441\u043a\u0443 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>\u041f\u043e\u0440\u0456\u0433 \u0432\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044f \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432 \u0437 \u043f\u043e\u0433\u0430\u043d\u043e\u044e \u043f\u043e\u0432\u0435\u0434\u0456\u043d\u043a\u043e\u044e (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>"
      },
      {
        "sha": "d4242d5e3cbb6fd12ec186039ad30546ee8a2046",
        "filename": "src/qt/locale/bitcoin_ur_PK.ts",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ur_PK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_ur_PK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ur_PK.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"ur_PK\" version=\"2.1\">\n+<TS language=\"ur_PK\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u067e\u062a\u06c1 \u062a\u0628\u062f\u06cc\u0644 \u06a9\u0631\u06d2 \u06a9\u06d2 \u0644\u06cc\u06d2 \u062f\u0627\u0626\u06cc\u0627\u06ba \u06a9\u0644\u06a9 \u06a9\u0631\u06cc\u06ba</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0646\u06cc\u0627 \u0627\u06cc\u0688\u0631\u06cc\u0633 \u0628\u0646\u0627\u0626\u06cc\u06ba</translation>\n@@ -9,6 +13,10 @@\n         <source>&amp;New</source>\n         <translation>\u0646\u06cc\u0627</translation>\n     </message>\n+    <message>\n+        <source>Copy the currently selected address to the system clipboard</source>\n+        <translation>\u0633\u0644\u06cc\u06a9\u0679\u0688 \u067e\u062a\u06d2 \u06a9\u0648 \u06a9\u0645\u067e\u0648\u0679\u0631 \u06a9\u06cc \u0639\u0627\u0631\u0636\u06cc \u062c\u06af\u06c1 \u0631\u06a9\u06be\u06cc\u06ba</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy</source>\n         <translation>\u0646\u0642\u0644</translation>\n@@ -21,6 +29,14 @@\n         <source>&amp;Copy Address</source>\n         <translation>\u06a9\u0627\u067e\u06cc \u067e\u062a\u06c1</translation>\n     </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>\u0633\u0644\u06cc\u06a9\u0679\u0688 \u067e\u062a\u06d2 \u06a9\u0648 \u0645\u0679\u0627\u0626\u06cc\u06ba</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u0645\u0648\u062c\u0648\u062f\u06c1 \u0688\u06cc\u0679\u0627 \u06a9\u0648 \u0641\u0627\u0626\u06cc\u0644 \u0645\u06cc\u06ba \u0645\u062d\u0641\u0648\u0638 \u06a9\u0631\u06cc\u06ba</translation>\n+    </message>\n     <message>\n         <source>&amp;Export</source>\n         <translation>\u0628\u0631\u0622\u0645\u062f</translation>\n@@ -29,10 +45,22 @@\n         <source>&amp;Delete</source>\n         <translation>\u0645\u0679\u0627</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u06a9\u0648\u0626\u06cc\u0646 \u0648\u0635\u0648\u0644 \u06a9\u0631\u0646\u06d2 \u0648\u0627\u0644\u06d2 \u06a9\u0627 \u067e\u062a\u06c1</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u06a9\u0648\u0626\u06cc\u0646 \u0628\u06be\u06cc\u062c\u0646\u06d2  \u0648\u0627\u0644\u06d2 \u06a9\u0627 \u067e\u062a\u06c1</translation>\n+    </message>\n     <message>\n         <source>C&amp;hoose</source>\n         <translation>\u0686\u0646\u0646\u0627</translation>\n     </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u062c\u0633 \u067e\u062a\u06d2 \u067e\u0631 \u0628\u06be\u06cc\u062c\u0646\u06d2 \u06c1\u06cc\u06ba</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -315,6 +343,10 @@\n         <source>&amp;Export</source>\n         <translation>\u0628\u0631\u0622\u0645\u062f</translation>\n     </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u0645\u0648\u062c\u0648\u062f\u06c1 \u0688\u06cc\u0679\u0627 \u06a9\u0648 \u0641\u0627\u0626\u06cc\u0644 \u0645\u06cc\u06ba \u0645\u062d\u0641\u0648\u0638 \u06a9\u0631\u06cc\u06ba</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "cc0a4bba08b330e39380f80ea4237d563ba4de28",
        "filename": "src/qt/locale/bitcoin_uz@Cyrl.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_uz@Cyrl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_uz@Cyrl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uz@Cyrl.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,6 +1,10 @@\n-<TS language=\"uz@Cyrl\" version=\"2.1\">\n+<TS language=\"uz@Cyrl\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u041c\u0430\u043d\u0437\u0438\u043b \u0451\u043a\u0438 \u0451\u0440\u043b\u0438\u049b\u043d\u0438 \u0442\u0430\u04b3\u0440\u0438\u0440\u043b\u0430\u0448 \u0443\u0447\u0443\u043d \u0438\u043a\u043a\u0438 \u043c\u0430\u0440\u0442\u0430 \u0431\u043e\u0441\u0438\u043d\u0433</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u042f\u043d\u0433\u0438 \u043c\u0430\u043d\u0437\u0438\u043b \u044f\u0440\u0430\u0442\u0438\u043d\u0433</translation>"
      },
      {
        "sha": "64d11d46454198507bc01d2232a2606580fef314",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,14 +1,26 @@\n-<TS language=\"vi\" version=\"2.1\">\n+<TS language=\"vi\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Create a new address</source>\n         <translation>T\u1ea1o m\u1ed9t \u0111\u1ecba ch\u1ec9 m\u1edbi</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>T\u1ea1o m\u1edbi</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Sao ch\u00e9p c\u00e1c \u0111\u1ecba ch\u1ec9 \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ecdn v\u00e0o b\u1ed9 nh\u1edb t\u1ea1m th\u1eddi c\u1ee7a h\u1ec7 th\u1ed1ng</translation>\n     </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>Sao ch\u00e9p</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>Sao ch\u00e9p \u0111\u1ecba ch\u1ec9</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;X\u00f3a</translation>"
      },
      {
        "sha": "7bcded7448a444eb39b74d023b6a62e88bee6d37",
        "filename": "src/qt/locale/bitcoin_vi_VN.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_vi_VN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_vi_VN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi_VN.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"vi_VN\" version=\"2.1\">\n+<TS language=\"vi_VN\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>"
      },
      {
        "sha": "4470b2601bcb8b4d1b19ae7a4c1c2042ad941267",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 22,
        "deletions": 74,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"zh_CN\" version=\"2.1\">\n+<TS language=\"zh_CN\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -67,7 +67,7 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>\u8fd9\u662f\u60a8\u7528\u6765\u4ed8\u6b3e\u7684\u6bd4\u7279\u5e01\u5730\u5740\u3002\u5728\u4ed8\u6b3e\u524d\uff0c\u8bf7\u603b\u662f\u6838\u5b9e\u4ed8\u6b3e\u91d1\u989d\u548c\u6536\u6b3e\u5730\u5740\u3002</translation>\n+        <translation>\u8fd9\u662f\u60a8\u7528\u6765\u4ed8\u6b3e\u7684\u6bd4\u7279\u5e01\u5730\u5740\u3002\u5728\u4ed8\u6b3e\u524d\uff0c\u8bf7\u4ed4\u7ec6\u6838\u5b9e\u4ed8\u6b3e\u91d1\u989d\u548c\u6536\u6b3e\u5730\u5740\u3002</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n@@ -2101,6 +2101,10 @@\n         <source>Remove this entry</source>\n         <translation>\u79fb\u9664\u6b64\u9879</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>\u4ea4\u6613\u8d39\u5c06\u4ece\u53d1\u9001\u603b\u989d\u4e2d\u6263\u9664\u3002\u63a5\u6536\u4eba\u5c06\u6536\u5230\u6bd4\u60a8\u5728\u91d1\u989d\u6846\u4e2d\u8f93\u5165\u7684\u66f4\u5c11\u7684\u6bd4\u7279\u5e01\u3002\u5982\u679c\u9009\u4e2d\u4e86\u591a\u4e2a\u6536\u4ef6\u4eba\uff0c\u4ea4\u6613\u8d39\u5e73\u5206\u3002</translation>\n+    </message>\n     <message>\n         <source>S&amp;ubtract fee from amount</source>\n         <translation>\u4ece\u91d1\u989d\u4e2d\u51cf\u53bb\u4ea4\u6613\u8d39(&amp;U)</translation>\n@@ -2155,6 +2159,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>\u7b7e\u540d\u6d88\u606f(&amp;S)</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>\u60a8\u53ef\u4ee5\u7528\u4f60\u7684\u5730\u5740\u5bf9\u6d88\u606f/\u534f\u8bae\u8fdb\u884c\u7b7e\u540d\uff0c\u4ee5\u8bc1\u660e\u60a8\u53ef\u4ee5\u63a5\u6536\u53d1\u9001\u5230\u8be5\u5730\u5740\u7684\u6bd4\u7279\u5e01\u3002\u6ce8\u610f\u4e0d\u8981\u5bf9\u4efb\u4f55\u6a21\u68f1\u4e24\u53ef\u6216\u8005\u968f\u673a\u7684\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\uff0c\u4ee5\u514d\u906d\u53d7\u9493\u9c7c\u5f0f\u653b\u51fb\u3002\u8bf7\u786e\u4fdd\u6d88\u606f\u5185\u5bb9\u51c6\u786e\u7684\u8868\u8fbe\u4e86\u60a8\u7684\u771f\u5b9e\u610f\u613f\u3002</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>\u7528\u6765\u5bf9\u6d88\u606f\u7b7e\u540d\u7684\u5730\u5740 </translation>\n@@ -2814,10 +2822,6 @@\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>\u7ed1\u5b9a\u6307\u5b9a\u7684IP\u5730\u5740\u5f00\u59cb\u76d1\u542c\u3002IPv6\u5730\u5740\u8bf7\u4f7f\u7528[host]:port \u683c\u5f0f</translation>\n     </message>\n-    <message>\n-        <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default: %u)</source>\n-        <translation>\u81ea\u7531\u4ea4\u6613\u4e0d\u65ad\u7684\u901f\u7387\u9650\u5236\u4e3a&lt;n&gt;*1000 \u5b57\u8282\u6bcf\u5206\u949f(\u9ed8\u8ba4\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>\u5220\u9664\u94b1\u5305\u7684\u6240\u6709\u4ea4\u6613\u8bb0\u5f55\uff0c\u4e14\u53ea\u6709\u7528 -rescan\u53c2\u6570\u542f\u52a8\u5ba2\u6237\u7aef\u624d\u80fd\u91cd\u65b0\u53d6\u56de\u4ea4\u6613\u8bb0\u5f55 </translation>\n@@ -2826,18 +2830,10 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u8fdb\u5165\u56de\u5f52\u6d4b\u8bd5\u6a21\u5f0f\uff0c\u5b83\u91c7\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u53ef\u7acb\u5373\u89e3\u51b3\u7684\u533a\u5757\u94fe\u6a21\u62df\u60c5\u51b5\u3002</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u5f53\u6700\u4f73\u533a\u5757\u53d8\u5316\u65f6\u6267\u884c\u547d\u4ee4 (\u547d\u4ee4\u884c\u4e2d\u7684 %s \u4f1a\u88ab\u66ff\u6362\u6210\u533a\u5757\u54c8\u5e0c\u503c)</translation>\n     </message>\n-    <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>\u5728-genproclimit\u8fd9\u79cd\u6a21\u5f0f\u4e0b\u63a7\u5236\u4ea7\u51fa\u591a\u5c11\u533a\u5757</translation>\n-    </message>\n     <message>\n         <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n         <translation>\u5355\u6b21\u4ea4\u6613\u6700\u591a\u4f7f\u7528\u4ea4\u6613\u8d39\uff1b\u8bbe\u7f6e\u592a\u4f4e\u53ef\u80fd\u5bfc\u81f4\u5927\u5b97\u4ea4\u6613\u4e2d\u6b62 (\u9ed8\u8ba4: %s)</translation>\n@@ -2858,6 +2854,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u65e0\u6cd5 %s\u7684\u7ed1\u5b9a\u5230\u7535\u8111\u4e0a\uff0c\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305\u53ef\u80fd\u5df2\u7ecf\u5728\u8fd0\u884c\u3002</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u8b66\u544a\uff1a\u6570\u636e\u5757\u751f\u6210\u6570\u91cf\u5f02\u5e38\uff0c\u6700\u8fd1 %d \u5c0f\u65f6\u6536\u5230\u4e86 %d \u4e2a\u6570\u636e\u5757\uff08\u9884\u671f\u4e3a %d \u4e2a\uff09</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u8b66\u544a\uff1a\u8bf7\u68c0\u67e5\u60a8\u7684\u7f51\u7edc\u8fde\u63a5\uff0c\u6700\u8fd1 %d \u5c0f\u65f6\u6536\u5230\u4e86 %d \u4e2a\u6570\u636e\u5757\uff08\u9884\u671f\u4e3a %d \u4e2a\uff09</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>\u8b66\u544a\uff1a-paytxfee \u4ea4\u6613\u8d39\u8bbe\u7f6e\u5f97\u592a\u9ad8\u4e86\uff01\u6bcf\u7b14\u4ea4\u6613\u90fd\u5c06\u652f\u4ed8\u4ea4\u6613\u8d39\u3002</translation>\n@@ -2994,10 +2998,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u6307\u5b9a\u94b1\u5305\u6587\u4ef6\uff08\u6570\u636e\u76ee\u5f55\u5185\uff09</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u8fd9\u662f\u7528\u4e8e\u56de\u5f52\u6d4b\u8bd5\u548c\u5e94\u7528\u5f00\u53d1\u76ee\u7684\u3002</translation>\n-    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>\u4f7f\u7528UPnp\u6620\u5c04\u76d1\u542c\u7aef\u53e3 (\u9ed8\u8ba4: %u) </translation>\n@@ -3074,10 +3074,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>\u4ea4\u6613\u8d39(BTC/kb)\u6bd4\u8fd9\u66f4\u5c0f\u7684\u4ea4\u6613\u5728\u8f6c\u53d1\u65f6\u5c06\u88ab\u89c6\u4e3a\u96f6\u8d39\u4ea4\u6613 (\u9ed8\u8ba4: %s) </translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>\u4ea4\u6613\u8d39(BTC/kb)\u6bd4\u8fd9\u66f4\u5c0f\u7684\u4ea4\u6613\u5728\u751f\u6210\u4ea4\u6613\u65f6\u5c06\u88ab\u89c6\u4e3a\u96f6\u8d39\u4ea4\u6613 (\u9ed8\u8ba4: %s) </translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u5982\u679c\u672a\u8bbe\u7f6e\u4ea4\u6613\u8d39\u7528\uff0c\u81ea\u52a8\u6dfb\u52a0\u8db3\u591f\u7684\u4ea4\u6613\u8d39\u4ee5\u786e\u4fdd\u4ea4\u6613\u5728\u5e73\u5747n\u4e2a\u6570\u636e\u5757\u5185\u88ab\u786e\u8ba4 (\u9ed8\u8ba4: %u) </translation>\n@@ -3102,10 +3098,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>\u4e3a\u6bcf\u4e2a\u4ee3\u7406\u8fde\u63a5\u968f\u673a\u5316\u51ed\u636e\u3002\u8fd9\u5c06\u542f\u7528 Tor \u6d41\u9694\u79bb (\u9ed8\u8ba4: %u)</translation>\n     </message>\n-    <message>\n-        <source>Require high priority for relaying free or low-fee transactions (default: %u)</source>\n-        <translation>\u514d\u8d39\u4e2d\u7ee7\u548c\u4f4e\u8d39\u7387\u4ea4\u6613\u9700\u8981\u9ad8\u4f18\u5148\u7ea7 (\u9ed8\u8ba4: %u)</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>\u8bbe\u7f6e \u9ad8\u4f18\u5148\u7ea7/\u4f4e\u4ea4\u6613\u8d39 \u4ea4\u6613\u7684\u6700\u5927\u5b57\u8282  (\u7f3a\u7701: %d)</translation>\n@@ -3174,10 +3166,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u6b63\u5728\u6fc0\u6d3b\u6700\u4f73\u6570\u636e\u94fe...</translation>\n     </message>\n-    <message>\n-        <source>Allow self signed root certificates (default: 0)</source>\n-        <translation>\u5141\u8bb8\u81ea\u7b7e\u540d\u6839\u8bc1\u4e66 (\u9ed8\u8ba4: 0)</translation>\n-    </message>\n     <message>\n         <source>Can't run with a wallet in prune mode.</source>\n         <translation>\u4e0d\u80fd\u5728\u4fee\u526a\u6a21\u5f0f\u4e0b\u8fd0\u884c\u4e00\u4e2a\u94b1\u5305\u3002</translation>\n@@ -3266,18 +3254,14 @@ rpcpassword=%s\n         <source>RPC support for HTTP persistent connections (default: %d)</source>\n         <translation>RPC \u652f\u6301 HTTP \u6301\u4e45\u8fde\u63a5 (\u9ed8\u8ba4: %d)</translation>\n     </message>\n-    <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u968f\u673a\u6bcf1\u4e2a\u4e22\u5931\u6d4b\u8bd5&lt;n&gt;\u7f51\u7edc\u4fe1\u606f</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u968f\u673a\u6bcf1\u4e2a\u6a21\u62df\u6d4b\u8bd5&lt;n&gt;\u7f51\u7edc\u4fe1\u606f</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u542f\u52a8\u65f6\u91cd\u65b0\u4e3a\u5f53\u524d\u7684 blk000??.dat \u6587\u4ef6\u5efa\u7acb\u7d22\u5f15</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>\u6536\u5230\u5e76\u4e14\u663e\u793aP2P\u7f51\u7edc\u7684\u544a\u8b66(\u9ed8\u8ba4:%u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u8ddf\u8e2a/\u8c03\u8bd5\u4fe1\u606f\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u4e0d\u8f93\u51fa\u5230 debug.log \u6587\u4ef6</translation>\n@@ -3425,18 +3409,10 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = \u4fdd\u7559 tx meta data , \u5982 account owner \u548c payment request information, 2 = \u4e0d\u4fdd\u7559 tx meta data) </translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>\u6570\u636e\u5757\u9a8c\u8bc1 \u4e25\u5bc6\u7ea7\u522b  -checkblocks (0-4, \u9ed8\u8ba4: %u) </translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>\u6316\u77ff\u65f6\uff0c\u8bb0\u5f55\u4ea4\u6613\u4f18\u5148\u7ea7 \u548c \u6bcfkb\u4ea4\u6613\u8d39 (\u9ed8\u8ba4: %u) </translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>\u7ef4\u62a4\u4e00\u4efd\u5b8c\u6574\u7684\u4ea4\u6613\u7d22\u5f15, \u7528\u4e8e getrawtransaction RPC\u8c03\u7528 (\u9ed8\u8ba4: %u)</translation>\n@@ -3461,18 +3437,10 @@ rpcpassword=%s\n         <source>Acceptable ciphers (default: %s)</source>\n         <translation>\u53ef\u63a5\u53d7\u7684\u5bc6\u7801\u7b97\u6cd5 (\u9ed8\u8ba4: %s) </translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>\u7981\u6b62\u4f7f\u7528\u5b89\u5168\u6a21\u5f0f\uff0c\u91cd\u65b0\u5199\u5165\u4e00\u4e2a\u771f\u6b63\u7684\u5b89\u5168\u6a21\u5f0f\u65e5\u5fd7(\u9ed8\u8ba4: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>wallet.dat \u94b1\u5305\u6587\u4ef6\u52a0\u8f7d\u51fa\u9519</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>\u5f3a\u5236\u5b89\u5168\u6a21\u5f0f (\u9ed8\u8ba4: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>\u751f\u6210\u6bd4\u7279\u5e01 (\u9ed8\u8ba4: %u)</translation>\n@@ -3489,10 +3457,6 @@ rpcpassword=%s\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u65e0\u6548\u7684\u4ee3\u7406\u5730\u5740\uff1a%s</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>\u7b7e\u540d\u7f13\u51b2\u533a\u5927\u5c0f\u9650\u5236\u6700\u591a &lt;n&gt; \u6761 (\u9ed8\u8ba4: %u) </translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>\u4f7f\u7528 &lt;port&gt;\u7aef\u53e3\u76d1\u542c JSON-RPC \u8fde\u63a5 (\u9ed8\u8ba4: %u ; testnet: %u) </translation>\n@@ -3517,10 +3481,6 @@ rpcpassword=%s\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u6bcf\u4e2a\u8fde\u63a5\u7684\u6700\u5927\u53d1\u9001\u7f13\u5b58\uff0c&lt;n&gt;*1000 \u5b57\u8282 (\u9ed8\u8ba4: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>\u4ec5\u63a5\u53d7\u7b26\u5408\u5ba2\u6237\u7aef\u68c0\u67e5\u70b9\u8bbe\u7f6e \u7684\u6570\u636e\u5757\u94fe (\u9ed8\u8ba4: %u) </translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\u65f6\uff0c\u524d\u9762\u52a0\u4e0a\u65f6\u95f4\u6233 (\u9ed8\u8ba4: %u)</translation>\n@@ -3533,10 +3493,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u662f\u5426\u8f6c\u53d1 \u975eP2SH\u683c\u5f0f\u7684\u591a\u7b7e\u540d\u4ea4\u6613 (\u9ed8\u8ba4: %u) </translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>\u8fd0\u884c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5b9a\u65f6\u6e05\u7406\u94b1\u5305 (\u9ed8\u8ba4: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>\u670d\u52a1\u5668\u8bc1\u4e66\u6587\u4ef6 (\u9ed8\u8ba4: %s) </translation>\n@@ -3557,10 +3513,6 @@ rpcpassword=%s\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>\u8bbe\u7f6eRPC\u670d\u52a1\u7ebf\u7a0b\u6570 (\u9ed8\u8ba4: %d) </translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 (\u9ed8\u8ba4: %s) </translation>\n@@ -3577,10 +3529,6 @@ rpcpassword=%s\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>\u4ed8\u6b3e\u65f6\u5141\u8bb8\u4f7f\u7528\u672a\u786e\u8ba4\u7684\u96f6\u94b1 (\u9ed8\u8ba4: %u) </translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>\u4ece\u78c1\u76d8\u5bfc\u5165\u6570\u636e\u5757\u540e\u9000\u51fa (\u9ed8\u8ba4: %u) </translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>\u65ad\u5f00 \u975e\u793c\u8282\u70b9\u7684\u9600\u503c (\u9ed8\u8ba4: %u) </translation>"
      },
      {
        "sha": "7062377f45e0215b0d8cca7ca966010818da4d51",
        "filename": "src/qt/locale/bitcoin_zh_HK.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_zh_HK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_zh_HK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_HK.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"zh_HK\" version=\"2.1\">\n+<TS language=\"zh_HK\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     </context>"
      },
      {
        "sha": "9a93d896feea3dd153d5bf9825093eaae3bff9c2",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 223,
        "deletions": 57,
        "changes": 280,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"zh_TW\" version=\"2.1\">\n+<TS language=\"zh_TW\" version=\"2.0\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -167,6 +167,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>\u4f60\u78ba\u5b9a\u8981\u628a\u9322\u5305\u52a0\u5bc6\u55ce\uff1f</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u4f4d\u5143\u5e63\u6838\u5fc3\u73fe\u5728\u8981\u95dc\u9589\uff0c\u597d\u5b8c\u6210\u52a0\u5bc6\u7a0b\u5e8f\u3002\u8acb\u6ce8\u610f\uff0c\u52a0\u5bc6\u9322\u5305\u4e0d\u80fd\u5b8c\u5168\u9632\u6b62\u5165\u4fb5\u4f60\u7684\u96fb\u8166\u7684\u60e1\u610f\u7a0b\u5f0f\u5077\u53d6\u4f4d\u5143\u5e63\u3002</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\u91cd\u8981: \u8acb\u6539\u7528\u65b0\u7522\u751f\u6709\u52a0\u5bc6\u7684\u9322\u5305\u6a94\uff0c\u4f86\u53d6\u4ee3\u820a\u9322\u5305\u6a94\u7684\u5099\u4efd\u3002\u70ba\u4e86\u5b89\u5168\u6027\u7684\u7406\u7531\uff0c\u7576\u4f60\u958b\u59cb\u4f7f\u7528\u65b0\u7684\u6709\u52a0\u5bc6\u7684\u9322\u5305\u5f8c\uff0c\u820a\u9322\u5305\u6a94\u7684\u5099\u4efd\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e86\u3002</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>\u8f38\u5165\u9322\u5305\u7684\u65b0\u5bc6\u78bc\u3002&lt;br/&gt;\u5bc6\u78bc\u8acb\u7528&lt;b&gt;10 \u500b\u4ee5\u4e0a\u7684\u5b57\u5143&lt;/b&gt;\uff0c\u6216\u662f&lt;b&gt;8 \u500b\u4ee5\u4e0a\u7684\u5b57\u8a5e&lt;/b&gt;\u3002</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u8acb\u8f38\u5165\u9322\u5305\u7684\u820a\u5bc6\u78bc\u548c\u65b0\u5bc6\u78bc\u3002</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u9322\u5305\u52a0\u5bc6\u5931\u6557</translation>\n@@ -390,6 +398,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>\u95dc\u65bc\u4f4d\u5143\u5e63\u6838\u5fc3</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>\u4fee\u6539\u4f4d\u5143\u5e63\u6838\u5fc3\u7684\u8a2d\u5b9a\u9078\u9805</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>\u986f\u793a\u5df2\u4f7f\u7528\u904e\u7684\u4ed8\u6b3e\u4f4d\u5740\u548c\u6a19\u8a18\u7684\u6e05\u55ae</translation>\n@@ -418,6 +430,10 @@\n         <source>No block source available...</source>\n         <translation>\u6c92\u6709\u53ef\u7528\u7684\u5340\u584a\u4f86\u6e90...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>\u5df2\u7d93\u8655\u7406\u4e86 %n \u500b\u5340\u584a\u7684\u4ea4\u6613\u7d00\u9304\u3002</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n \u500b\u5c0f\u6642</numerusform></translation>\n@@ -470,6 +486,36 @@\n         <source>Catching up...</source>\n         <translation>\u6b63\u5728\u8d95\u9032\u5ea6...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u65e5\u671f: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u91d1\u984d: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\u7a2e\u985e: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\u6a19\u8a18: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\u4f4d\u5740: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>\u4ed8\u6b3e\u4ea4\u6613</translation>\n@@ -668,6 +714,18 @@\n         <source>none</source>\n         <translation>\u7121</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>\u7576\u4ea4\u6613\u5927\u5c0f\u5927\u65bc 1000 \u4f4d\u5143\u7d44\u6642\uff0c\u6587\u5b57\u6703\u8b8a\u7d05\u8272\u3002</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>\u7576\u512a\u5148\u5ea6\u4f4e\u65bc\u300c\u4e2d\u7b49\u300d\u6642\uff0c\u6587\u5b57\u6703\u8b8a\u7d05\u8272\u3002</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>\u7576\u4efb\u4f55\u4e00\u500b\u6536\u6b3e\u91d1\u984d\u5c0f\u65bc %1 \u6642\uff0c\u6587\u5b57\u6703\u8b8a\u7d05\u8272\u3002</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>\u6bcf\u7d44\u8f38\u5165\u53ef\u80fd\u6709 +/- %1 \u500b satoshi \u7684\u8aa4\u5dee\u3002</translation>\n@@ -918,6 +976,14 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>\u4ee3\u7406\u4f3a\u670d\u5668\u7684\u7db2\u969b\u7db2\u8def\u4f4d\u5740(\u50cf\u662f IPv4 \u7684 127.0.0.1 \u6216 IPv6 \u7684 ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>\u7576\u8996\u7a97\u95dc\u9589\u6642\uff0c\u628a\u61c9\u7528\u7a0b\u5f0f\u7e2e\u5230\u6700\u5c0f\uff0c\u800c\u4e0d\u662f\u7d50\u675f\u3002\u7576\u52fe\u9078\u9019\u500b\u9078\u9805\u6642\uff0c\u53ea\u80fd\u5920\u7528\u9078\u55ae\u4e2d\u7684\u7d50\u675f\u4f86\u95dc\u6389\u61c9\u7528\u7a0b\u5f0f\u3002</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>\u53ef\u4ee5\u5728\u9019\u88e1\u8a2d\u5b9a\u4f7f\u7528\u8005\u4ecb\u9762\u7684\u8a9e\u8a00\u3002\u9019\u500b\u8a2d\u5b9a\u5728\u91cd\u5553\u4f4d\u5143\u5e63\u6838\u5fc3\u5f8c\u624d\u6703\u751f\u6548\u3002</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>\u5728\u4ea4\u6613\u9801\u7c64\u7684\u60c5\u5883\u9078\u55ae\u51fa\u73fe\u7684\u7b2c\u4e09\u65b9(\u6bd4\u5982\u8aaa\u5340\u584a\u63a2\u7d22\u7db2\u7ad9)\u7db2\u5740\u9023\u7d50\u3002\u7db2\u5740\u4e2d\u7684 %s \u6703\u88ab\u53d6\u4ee3\u70ba\u4ea4\u6613\u7684\u96dc\u6e4a\u503c\u3002\u53ef\u4ee5\u7528\u76f4\u7dda\u7b26\u865f | \u4f86\u5206\u9694\u591a\u500b\u9023\u7d50\u3002</translation>\n@@ -942,6 +1008,14 @@\n         <source>&amp;Network</source>\n         <translation>\u7db2\u8def</translation>\n     </message>\n+    <message>\n+        <source>Automatically start Bitcoin Core after logging in to the system.</source>\n+        <translation>\u5728\u767b\u5165\u7cfb\u7d71\u5f8c\u81ea\u52d5\u5553\u52d5\u4f4d\u5143\u5e63\u6838\u5fc3\u3002</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start Bitcoin Core on system login</source>\n+        <translation>\u7cfb\u7d71\u767b\u5165\u6642\u555f\u52d5\u4f4d\u5143\u5e63\u6838\u5fc3</translation>\n+    </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation>(0 \u8868\u793a\u7a0b\u5f0f\u81ea\u52d5\u6c7a\u5b9a\uff0c\u5c0f\u65bc 0 \u8868\u793a\u4fdd\u7559\u8655\u7406\u5668\u6838\u5fc3\u4e0d\u7528\u7684\u6578\u76ee)</translation>\n@@ -1054,6 +1128,10 @@\n         <source>Client restart required to activate changes.</source>\n         <translation>\u9700\u8981\u91cd\u65b0\u555f\u52d5\u5ba2\u6236\u7aef\u8edf\u9ad4\u4f86\u8b93\u6539\u8b8a\u751f\u6548\u3002</translation>\n     </message>\n+    <message>\n+        <source>Client will be shut down. Do you want to proceed?</source>\n+        <translation>\u5ba2\u6236\u7aef\u8edf\u9ad4\u5c31\u8981\u95dc\u6389\u4e86\u3002\u7e7c\u7e8c\u505a\u4e0b\u53bb\u55ce\uff1f</translation>\n+    </message>\n     <message>\n         <source>This change would require a client restart.</source>\n         <translation>\u9019\u9805\u6539\u8b8a\u9700\u8981\u91cd\u65b0\u555f\u52d5\u5ba2\u6236\u7aef\u8edf\u9ad4\u3002</translation>\n@@ -1188,10 +1266,18 @@\n         <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n         <translation>\u6c92\u8fa6\u6cd5\u8b80\u53d6\u4ed8\u6b3e\u8981\u6c42\u6a94\u6848\uff01\u53ef\u80fd\u662f\u7121\u6548\u7684\u6a94\u6848\u9020\u6210\u7684\u3002</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u4ed8\u6b3e\u7684\u8981\u6c42\u904e\u671f\u4e86\u3002</translation>\n+    </message>\n     <message>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>\u4e0d\u652f\u63f4\u542b\u6709\u81ea\u8a02\u4ed8\u6b3e\u6307\u4ee4\u78bc\uff0c\u4e14\u6c92\u9a57\u8b49\u904e\u7684\u4ed8\u6b3e\u8981\u6c42\u3002</translation>\n     </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>\u4ed8\u6b3e\u7684\u8981\u6c42\u7121\u6548\u3002</translation>\n+    </message>\n     <message>\n         <source>Refund from %1</source>\n         <translation>\u4f86\u81ea %1 \u7684\u9000\u6b3e</translation>\n@@ -1231,6 +1317,10 @@\n         <source>User Agent</source>\n         <translation>\u4f7f\u7528\u8005\u4ee3\u7406</translation>\n     </message>\n+    <message>\n+        <source>Node/Service</source>\n+        <translation>\u7bc0\u9ede/\u670d\u52d9</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Ping \u6642\u9593</translation>\n@@ -1352,6 +1442,10 @@\n         <source>Current number of blocks</source>\n         <translation>\u76ee\u524d\u5340\u584a\u6578</translation>\n     </message>\n+    <message>\n+        <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>\u5f9e\u76ee\u524d\u7684\u8cc7\u6599\u76ee\u9304\u4e0b\u958b\u5553\u4f4d\u5143\u5e63\u6838\u5fc3\u7684\u9664\u932f\u7d00\u9304\u6a94\u3002\u7576\u7d00\u9304\u6a94\u5f88\u5927\u6642\uff0c\u53ef\u80fd\u6703\u82b1\u597d\u5e7e\u79d2\u7684\u6642\u9593\u3002</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>\u6536\u6b3e</translation>\n@@ -1420,6 +1514,10 @@\n         <source>Ping Time</source>\n         <translation>Ping \u6642\u9593</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>\u6642\u9593\u5dee</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u6700\u8fd1\u5340\u584a\u6642\u9593</translation>\n@@ -1464,6 +1562,10 @@\n         <source>Clear console</source>\n         <translation>\u6e05\u4e3b\u63a7\u53f0</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the Bitcoin Core RPC console.</source>\n+        <translation>\u6b61\u8fce\u4f7f\u7528\u4f4d\u5143\u5e63\u6838\u5fc3 RPC \u4e3b\u63a7\u53f0\u3002</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>\u8acb\u7528\u4e0a\u4e0b\u6e38\u6a19\u9375\u4f86\u700f\u89bd\u5148\u524d\u6307\u4ee4\u7684\u7d00\u9304\uff0c\u4e26\u7528 &lt;b&gt;Ctrl-L&lt;/b&gt; \u4f86\u6e05\u756b\u9762\u3002</translation>\n@@ -1760,6 +1862,10 @@\n         <source>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then \"per kilobyte\" only pays 250 satoshis in fee, while \"total at least\" pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</source>\n         <translation>\u5982\u679c\u81ea\u8a02\u624b\u7e8c\u8cbb\u8a2d\u5b9a\u70ba 1000 satoshi, \u800c\u4ea4\u6613\u8cc7\u6599\u5927\u5c0f\u53ea\u6709 250 \u500b\u4f4d\u5143\u7d44\u7684\u8a71\uff0c\u90a3\u9ebd\u9078\u64c7\u300c\u6bcf\u5343\u4f4d\u5143\u7d44\u300d\u5c31\u53ea\u6703\u4ed8 250 satoshi \u7684\u624b\u7e8c\u8cbb\uff0c\u63db\u505a\u9078\u300c\u7e3d\u5171\u81f3\u5c11\u300d\u5c31\u6703\u4ed8 1000 satoshi. \u4f46\u662f\u5982\u679c\u4ea4\u6613\u8cc7\u6599\u5927\u5c0f\u8d85\u904e\u4e00\u5343\u500b\u4f4d\u5143\u7d44\uff0c\u90a3\u9ebd\u5169\u8005\u90fd\u662f\u6bcf\u5343\u4f4d\u5143\u7d44\u7684\u8cbb\u7528\u3002</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>\u96b1\u85cf</translation>\n+    </message>\n     <message>\n         <source>total at least</source>\n         <translation>\u7e3d\u5171\u6700\u5c11</translation>\n@@ -1900,10 +2006,26 @@\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>\u4ea4\u6613\u88ab\u62d2\u7d55\u4e86\uff01\u6709\u6642\u5019\u6703\u767c\u751f\u9019\u7a2e\u932f\u8aa4\uff0c\u662f\u56e0\u70ba\u4f60\u9322\u5305\u4e2d\u7684\u4e00\u4e9b\u9322\u5df2\u7d93\u88ab\u82b1\u6389\u4e86\u3002\u6bd4\u5982\u8aaa\u4f60\u8907\u88fd\u4e86\u9322\u5305\u6a94 wallet.dat, \u7136\u5f8c\u7528\u8907\u88fd\u7684\u9322\u5305\u82b1\u6389\u4e86\u9322\uff0c\u4f60\u73fe\u5728\u6240\u7528\u7684\u539f\u4f86\u7684\u9322\u5305\u4e2d\uff0c\u537b\u6c92\u6709\u90a3\u7b46\u9322\u5df2\u7d93\u82b1\u6389\u7684\u7d00\u9304\u3002</translation>\n     </message>\n+    <message>\n+        <source>A fee higher than %1 is considered an absurdly high fee.</source>\n+        <translation>\u9ad8\u65bc %1 \u7684\u624b\u7e8c\u8cbb\u6703\u88ab\u8a8d\u70ba\u662f\u4e0d\u5408\u7406\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u4ed8\u6b3e\u7684\u8981\u6c42\u904e\u671f\u4e86\u3002</translation>\n+    </message>\n     <message>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>\u53ea\u4ed8\u6700\u4f4e\u624b\u7e8c\u8cbb %1</translation>\n     </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>\u6536\u6b3e\u4f4d\u5740\u7121\u6548\u3002\u8acb\u518d\u6aa2\u67e5\u770b\u770b\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>\u767c\u73fe\u6709\u91cd\u8907\u7684\u4f4d\u5740: \u6bcf\u500b\u4f4d\u5740\u53ea\u80fd\u51fa\u73fe\u4e00\u6b21\u3002</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>\u8b66\u544a: \u4f4d\u5143\u5e63\u4f4d\u5740\u7121\u6548</translation>\n@@ -1975,10 +2097,26 @@\n         <source>Remove this entry</source>\n         <translation>\u522a\u6389\u9019\u500b\u9805\u76ee</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>\u624b\u7e8c\u8cbb\u6703\u5f9e\u8981\u4ed8\u6b3e\u51fa\u53bb\u7684\u91d1\u984d\u4e2d\u6263\u6389\u3002\u56e0\u6b64\u6536\u6b3e\u4eba\u6703\u6536\u5230\u6bd4\u8f38\u5165\u7684\u91d1\u984d\u9084\u8981\u5c11\u7684\u4f4d\u5143\u5e63\u3002\u5982\u679c\u6709\u591a\u500b\u6536\u6b3e\u4eba\u7684\u8a71\uff0c\u624b\u7e8c\u8cbb\u6703\u5e73\u5747\u5206\u914d\u4f86\u6263\u9664\u3002</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>\u5f9e\u4ed8\u6b3e\u91d1\u984d\u6e1b\u53bb\u624b\u7e8c\u8cbb</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>\u8a0a\u606f:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>\u9019\u662f\u500b\u6c92\u9a57\u8b49\u904e\u7684\u4ed8\u6b3e\u8981\u6c42\u3002</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>\u9019\u662f\u500b\u5df2\u9a57\u8b49\u7684\u4ed8\u6b3e\u8981\u6c42\u3002</translation>\n+    </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>\u8acb\u8f38\u5165\u9019\u500b\u4f4d\u5740\u7684\u6a19\u8a18\uff0c\u4f86\u628a\u5b83\u52a0\u9032\u53bb\u5df2\u4f7f\u7528\u904e\u4f4d\u5740\u7684\u6e05\u55ae\u3002</translation>\n@@ -2017,6 +2155,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>\u7c3d\u7f72\u8a0a\u606f</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>\u4f60\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u4f4d\u5740\u7c3d\u7f72\u8a0a\u606f\u6216\u5408\u7d04\uff0c\u4f86\u8b49\u660e\u4f60\u53ef\u4ee5\u5f9e\u8a72\u4f4d\u5740\u6536\u6b3e\u3002\u4f46\u662f\u8acb\u5c0f\u5fc3\uff0c\u4e0d\u8981\u7c3d\u7f72\u8a9e\u610f\u542b\u7cca\u4e0d\u6e05\uff0c\u6216\u96a8\u6a5f\u7522\u751f\u7684\u5167\u5bb9\uff0c\u56e0\u70ba\u91e3\u9b5a\u5f0f\u8a50\u9a19\u53ef\u80fd\u6703\u7528\u9a19\u4f60\u7c3d\u7f72\u7684\u624b\u6cd5\u4f86\u5192\u5145\u662f\u4f60\u3002\u53ea\u6709\u5728\u8a9e\u53e5\u4e2d\u7684\u7d30\u7bc0\u4f60\u90fd\u540c\u610f\u6642\u624d\u7c3d\u7f72\u3002</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>\u7528\u4f86\u7c3d\u7f72\u8a0a\u606f\u7684\u4f4d\u5143\u5e63\u4f4d\u5740</translation>\n@@ -2069,6 +2211,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>\u9a57\u8b49\u8a0a\u606f</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>\u8acb\u5728\u4e0b\u9762\u8f38\u5165\u6536\u6b3e\u4eba\u7684\u4f4d\u5740\uff0c\u8a0a\u606f(\u8acb\u78ba\u5b9a\u5b8c\u6574\u8907\u88fd\u4e86\u6240\u5305\u542b\u7684\u63db\u884c\uff0c\u7a7a\u683c\uff0c\u8df3\u4f4d\u7b26\u865f\u7b49\u7b49)\uff0c\u4ee5\u53ca\u7c3d\u7ae0\uff0c\u4f86\u9a57\u8b49\u9019\u500b\u8a0a\u606f\u3002\u8acb\u5c0f\u5fc3\uff0c\u9664\u4e86\u8a0a\u606f\u5167\u5bb9\u4ee5\u5916\uff0c\u4e0d\u8981\u5c0d\u7c3d\u7ae0\u672c\u8eab\u904e\u5ea6\u89e3\u8b80\uff0c\u4ee5\u907f\u514d\u88ab\u7528\u300c\u4e2d\u9593\u4eba\u653b\u64ca\u6cd5\u300d\u8a50\u9a19\u3002\u8acb\u6ce8\u610f\uff0c\u901a\u904e\u9a57\u8b49\u7684\u7c3d\u7ae0\u53ea\u80fd\u8b49\u660e\u7c3d\u7ae0\u4eba\u78ba\u5be6\u53ef\u4ee5\u5f9e\u8a72\u4f4d\u5740\u6536\u6b3e\uff0c\u4e0d\u80fd\u8b49\u660e\u4efb\u4f55\u4ea4\u6613\u4e2d\u7684\u4ed8\u6b3e\u4eba\u8eab\u4efd\uff01</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>\u7c3d\u7f72\u9019\u500b\u8a0a\u606f\u7684\u4f4d\u5143\u5e63\u4f4d\u5740</translation>\n@@ -2420,6 +2566,10 @@\n         <source>Whether or not a watch-only address is involved in this transaction.</source>\n         <translation>\u4e0d\u8ad6\u5982\u4f55\u6709\u4e00\u500b\u53ea\u80fd\u89c0\u770b\u7684\u5730\u53ea\u6709\u53c3\u8207\u9019\u6b21\u7684\u4ea4\u6613</translation>\n     </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>\u4f7f\u7528\u8005\u5b9a\u7fa9\u7684\u4ea4\u6613\u52d5\u6a5f\u6216\u7406\u7531\u3002</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>\u8981\u6e1b\u6389\u6216\u52a0\u9032\u9918\u984d\u7684\u91d1\u984d\u3002</translation>\n@@ -2671,17 +2821,17 @@\n         <source>Distributed under the MIT software license, see the accompanying file COPYING or &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</source>\n         <translation>\u9019\u5957\u8edf\u9ad4\u662f\u4f9d\u64da MIT \u8edf\u9ad4\u6388\u6b0a\u689d\u6b3e\u6563\u5e03\uff0c\u8a73\u60c5\u8acb\u898b\u9644\u5e36\u7684 COPYING \u6a94\u6848\uff0c\u6216\u662f\u4ee5\u4e0b\u7db2\u7ad9:  &lt;http://www.opensource.org/licenses/mit-license.php&gt;.</translation>\n     </message>\n-    <message>\n-        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n-        <translation>\u9032\u5165\u56de\u6b78\u6e2c\u8a66\u6a21\u5f0f\uff0c\u4f7f\u7528\u53ef\u4ee5\u7acb\u5373\u89e3\u51fa\u5340\u584a\u7684\u7279\u6b8a\u5340\u584a\u93c8\u3002</translation>\n-    </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u7576\u9322\u5305\u6709\u4ea4\u6613\u6539\u8b8a\u6642\u8981\u57f7\u884c\u7684\u6307\u4ee4(\u6307\u4ee4\u4e2d\u7684 %s \u6703\u88ab\u53d6\u4ee3\u6210\u4ea4\u6613\u8b58\u5225\u78bc)</translation>\n     </message>\n     <message>\n-        <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation>\u5728\u9019\u500b\u904b\u4f5c\u6a21\u5f0f\u4e0b\uff0c-genproclimit \u9078\u9805\u63a7\u5236\u7acb\u523b\u7522\u751f\u51fa\u7684\u5340\u584a\u6578\u76ee\u3002</translation>\n+        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>\u4e00\u6b21\u9322\u5305\u4ea4\u6613\u5141\u8a31\u4ed8\u51fa\u6700\u9ad8\u7684\u7e3d\u624b\u7e8c\u8cbb\uff1b\u8a2d\u5b9a\u592a\u4f4e\u7684\u8a71\uff0c\u53ef\u80fd\u6703\u7121\u6cd5\u9032\u884c\u8cc7\u6599\u91cf\u5927\u7684\u4ea4\u6613(\u9810\u8a2d\u503c: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>\u4fee\u526a(\u522a\u9664)\u6389\u8001\u820a\u5340\u584a\u4f86\u6e1b\u5c11\u5132\u5b58\u7a7a\u9593\u7684\u9700\u6c42\u3002\u9019\u7a2e\u6a21\u5f0f\u6703\u95dc\u9589\u9322\u5305\u529f\u80fd\uff0c\u4e26\u4e14\u548c -txindex \u53c3\u6578\u4e0d\u76f8\u5bb9\u3002\u8b66\u544a: \u5f9e\u9019\u7a2e\u6a21\u5f0f\u9084\u539f\u6703\u9700\u8981\u91cd\u65b0\u4e0b\u8f09\u4e00\u6574\u500b\u5340\u584a\u93c8\u3002(\u9810\u8a2d\u503c: 0 \u8868\u793a\u4e0d\u4fee\u526a\u5340\u584a\uff0c&gt;%u \u8868\u793a\u70ba\u5340\u584a\u6a94\u6848\u7684\u76ee\u6a19\u5927\u5c0f\uff0c\u55ae\u4f4d\u662f\u767e\u842c\u4f4d\u5143\u7d44 MiB)</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n@@ -2695,6 +2845,14 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u6c92\u8fa6\u6cd5\u7e6b\u7d50\u5728\u9019\u53f0\u96fb\u8166\u4e0a\u7684 %s \u3002\u4f4d\u5143\u5e63\u6838\u5fc3\u53ef\u80fd\u5df2\u7d93\u5728\u57f7\u884c\u4e86\u3002</translation>\n     </message>\n+    <message>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u8b66\u544a: \u6536\u5230\u4e86\u4e0d\u5c0b\u5e38\u5730\u591a\u7684 %d \u500b\u5340\u584a\u5728\u904e\u53bb %d \u5c0f\u6642\u5167\u751f\u7522\u51fa\u4f86(\u9810\u671f\u662f %d \u500b)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>\u8b66\u544a: \u8acb\u6aa2\u67e5\u4f60\u7684\u7db2\u8def\u9023\u7dda\u72c0\u6cc1\uff0c\u6536\u5230\u4e86 %d \u500b\u5340\u584a\u662f\u5728\u904e\u53bb %d \u5c0f\u6642\u5167\u751f\u7522\u51fa\u4f86(\u9810\u671f\u662f %d \u500b)</translation>\n+    </message>\n     <message>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>\u8b66\u544a: -paytxfee \u8a2d\u5b9a\u4e86\u5f88\u9ad8\u7684\u91d1\u984d\uff01\u9019\u53ef\u662f\u4f60\u4ea4\u6613\u4ed8\u6b3e\u6240\u8981\u4ed8\u7684\u624b\u7e8c\u8cbb\u3002</translation>\n@@ -2811,6 +2969,14 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>\u53ea\u6709\u9023\u63a5\u5230\u7db2\u7d61\u7bc0\u9ede &lt;net&gt; \uff08IPv4\uff0cIPv6\u6216onion\uff09</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>\u4fee\u526a\u503c\u4e0d\u80fd\u8a2d\u5b9a\u70ba\u8ca0\u7684\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>\u4fee\u526a\u6a21\u5f0f\u548c -txindex \u53c3\u6578\u4e0d\u76f8\u5bb9\u3002</translation>\n+    </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation>\u8a2d\u5b9a\u8cc7\u6599\u5eab\u5feb\u53d6\u5927\u5c0f\u662f\u591a\u5c11\u767e\u842c\u4f4d\u5143\u7d44(MB\uff0c\u7bc4\u570d: %d \u5230 %d\uff0c\u9810\u8a2d\u503c: %d)</translation>\n@@ -2823,10 +2989,6 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u6307\u5b9a\u9322\u5305\u6a94(\u6703\u5728\u8cc7\u6599\u76ee\u9304\u4e2d)</translation>\n     </message>\n-    <message>\n-        <source>This is intended for regression testing tools and app development.</source>\n-        <translation>\u9019\u662f\u8a2d\u8a08\u7528\u4f86\u7d66\u56de\u6b78\u6e2c\u8a66\u5de5\u5177\u548c\u61c9\u7528\u7a0b\u5f0f\u958b\u767c\u7528\u7684\u3002</translation>\n-    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u6b63\u5728\u9a57\u8b49\u5340\u584a\u8cc7\u6599...</translation>\n@@ -2843,6 +3005,10 @@\n         <source>Wallet options:</source>\n         <translation>\u9322\u5305\u9078\u9805:</translation>\n     </message>\n+    <message>\n+        <source>Warning: This version is obsolete; upgrade required!</source>\n+        <translation>\u8b66\u544a: \u9019\u500b\u7248\u672c\u5df2\u7d93\u88ab\u6dd8\u6c70\u4e86\uff1b\u5fc5\u9808\u8981\u5347\u7d1a\uff01</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>\u6539\u8b8a -txindex \u53c3\u6578\u5f8c\uff0c\u5fc5\u9808\u8981\u7528 -reindex \u53c3\u6578\u4f86\u91cd\u5efa\u8cc7\u6599\u5eab</translation>\n@@ -2875,6 +3041,10 @@\n         <source>Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)</source>\n         <translation>\u7528\u7cfb\u7d71\u9810\u8a2d\u6b0a\u9650\u4f86\u9020\u51fa\u65b0\u7684\u6a94\u6848\uff0c\u800c\u4e0d\u662f\u7528\u4f7f\u7528\u8005\u6b0a\u9650\u7f69\u906e(umask)\u503c 077 (\u53ea\u6709\u5728\u95dc\u6389\u9322\u5305\u529f\u80fd\u6642\u624d\u6709\u4f5c\u7528)\u3002</translation>\n     </message>\n+    <message>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>\u627e\u51fa\u81ea\u5df1\u7684\u7db2\u969b\u7db2\u8def\u4f4d\u5740(\u9810\u8a2d\u503c: \u7576\u6709\u807d\u5019\u9023\u7dda\u4e14\u6c92\u6709\u6307\u5b9a -externalip \u6216 -proxy \u6642\u70ba 1)</translation>\n+    </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u932f\u8aa4: \u807d\u5019\u5916\u4f86\u9023\u7dda\u5931\u6557(\u56de\u50b3\u932f\u8aa4 %s)</translation>\n@@ -2891,10 +3061,6 @@\n         <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation>\u7576\u8655\u7406\u8f49\u767c\u7684\u4ea4\u6613\u6642\uff0c\u5982\u679c\u6bcf\u5343\u4f4d\u5143\u7d44(Kb)\u7684\u624b\u7e8c\u8cbb\u6bd4\u9019\u500b\u503c\u4f4e\uff0c\u5c31\u8996\u70ba\u6c92\u4ed8\u624b\u7e8c\u8cbb (\u9810\u8a2d\u503c: %s)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n-        <translation>\u7576\u88fd\u9020\u4ea4\u6613\u6642\uff0c\u5982\u679c\u6bcf\u5343\u4f4d\u5143\u7d44(Kb)\u7684\u624b\u7e8c\u8cbb\u6bd4\u9019\u500b\u503c\u4f4e\uff0c\u5c31\u8996\u70ba\u6c92\u4ed8\u624b\u7e8c\u8cbb (\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u7576\u6c92\u6709\u8a2d\u5b9a paytxfee \u6642\uff0c\u81ea\u52d5\u5305\u542b\u53ef\u4ee5\u8b93\u4ea4\u6613\u80fd\u5728\u5e73\u5747 n \u500b\u5340\u584a\u5167\u958b\u59cb\u78ba\u8a8d\u7684\u624b\u7e8c\u8cbb(\u9810\u8a2d\u503c: %u)</translation>\n@@ -2907,10 +3073,18 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u8f49\u767c\u548c\u958b\u63a1\u6642\uff0c\u5c0d\u53ea\u5e36\u8cc7\u6599\u7684\u4ea4\u6613\u7684\u5927\u5c0f\u4e0a\u9650(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n+        <translation>\u8a2d\u5b9a\u7684\u4fee\u526a\u503c\u5c0f\u65bc\u6700\u5c0f\u9700\u6c42\u7684 %d MB. \u8acb\u6307\u5b9a\u5927\u4e00\u9ede\u7684\u6578\u5b57\u3002</translation>\n+    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u662f\u5426\u5141\u8a31\u5728\u7bc0\u9ede\u4f4d\u5740\u6578\u76ee\u4e0d\u8db3\u6642\uff0c\u4f7f\u7528\u57df\u540d\u67e5\u8a62\u4f86\u641c\u5c0b\u7bc0\u9ede (\u9810\u8a2d\u503c: \u7576\u6c92\u7528 -connect \u6642\u70ba 1)</translation>\n     </message>\n+    <message>\n+        <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n+        <translation>\u5c0d\u6bcf\u500b\u4ee3\u7406\u9023\u7dda\u4f7f\u7528\u96a8\u6a5f\u7522\u751f\u7684\u6191\u8b49\u3002\u9019\u500b\u9078\u9805\u6703\u958b\u555f Tor \u7684\u4e32\u6d41\u9694\u96e2(\u9810\u8a2d\u503c: %u)</translation>\n+    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>\u8a2d\u5b9a\u9ad8\u512a\u5148\u5ea6\u6216\u4f4e\u624b\u7e8c\u8cbb\u7684\u4ea4\u6613\u8cc7\u6599\u5927\u5c0f\u4e0a\u9650\u6210\u591a\u5c11\u4f4d\u5143\u7d44(\u9810\u8a2d\u503c: %d)</translation>\n@@ -2919,6 +3093,10 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>\u8a2d\u5b9a\u7522\u751f\u9322\u5e63\u7684\u57f7\u884c\u7dd2\u6578\u76ee(-1 \u8868\u793a\u8655\u7406\u5668\u6838\u5fc3\u6578\uff0c\u9810\u8a2d\u503c: %d)</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>\u6263\u9664\u624b\u7e8c\u8cbb\u5f8c\u7684\u4ea4\u6613\u91d1\u984d\u592a\u5c11\u800c\u4e0d\u80fd\u50b3\u9001</translation>\n+    </message>\n     <message>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u6b64\u7522\u54c1\u4e5f\u5305\u542b\u4e86\u7531 OpenSSL Project \u6240\u958b\u767c\u7684 OpenSSL Toolkit \u8edf\u9ad4 &lt;https://www.openssl.org/&gt;, \u548c\u7531 Eric Young \u64b0\u5beb\u7684\u52a0\u89e3\u5bc6\u8edf\u9ad4\uff0c\u4ee5\u53ca\u7531 Thomas Bernard \u6240\u64b0\u5beb\u7684 UPnP \u8edf\u9ad4\u3002</translation>\n@@ -2959,10 +3137,26 @@ rpcpassword=%s\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u5728\u767d\u540d\u55ae\u4e2d\u7684\u7bc0\u9ede\u4e0d\u6703\u56e0\u70ba\u5075\u6e2c\u5230\u963b\u65b7\u670d\u52d9\u653b\u64ca\u800c\u88ab\u505c\u7528\u3002\u4f86\u81ea\u9019\u4e9b\u7bc0\u9ede\u7684\u4ea4\u6613\u4e5f\u4e00\u5b9a\u6703\u88ab\u8f49\u767c\uff0c\u5373\u4f7f\u8aaa\u4ea4\u6613\u672c\u4f86\u5c31\u5728\u8a18\u61b6\u6c60\u88e1\u4e86\u4e5f\u4e00\u6a23\u3002\u9069\u7528\u65bc\u50cf\u662f\u9598\u9053\u4f3a\u670d\u5668\u3002</translation>\n     </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>\u56de\u5230\u975e\u4fee\u526a\u7684\u6a21\u5f0f\u9700\u8981\u7528 -reindex \u53c3\u6578\u4f86\u91cd\u5efa\u8cc7\u6599\u5eab\u3002\u9019\u6703\u5c0e\u81f4\u91cd\u65b0\u4e0b\u8f09\u6574\u500b\u5340\u584a\u93c8\u3002</translation>\n+    </message>\n+    <message>\n+        <source>(default: %u)</source>\n+        <translation>(\u9810\u8a2d\u503c: %u)</translation>\n+    </message>\n     <message>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation>\u63a5\u53d7\u516c\u958b\u7684REST\u8acb\u6c42 (\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n+    <message>\n+        <source>Activating best chain...</source>\n+        <translation>\u555f\u7528\u6700\u4f73\u93c8\u7d50...</translation>\n+    </message>\n+    <message>\n+        <source>Can't run with a wallet in prune mode.</source>\n+        <translation>\u4e0d\u80fd\u5728\u6709\u9322\u5305\u6642\u57f7\u884c\u4fee\u526a\u6a21\u5f0f\u3002</translation>\n+    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u6c92\u8fa6\u6cd5\u89e3\u6790 -whitebind \u6307\u5b9a\u7684\u4f4d\u5740: '%s'</translation>\n@@ -3052,12 +3246,8 @@ rpcpassword=%s\n         <translation>RPC \u662f\u5426\u652f\u63f4 HTTP \u6301\u4e45\u9023\u7dda(\u9810\u8a2d\u503c: %d)</translation>\n     </message>\n     <message>\n-        <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u96a8\u6a5f\u4e1f\u6389 &lt;n&gt; \u5206\u4e4b\u4e00\u7684\u7db2\u8def\u8a0a\u606f</translation>\n-    </message>\n-    <message>\n-        <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation>\u96a8\u6a5f\u4e82\u52d5 &lt;n&gt; \u5206\u4e4b\u4e00\u7684\u7db2\u8def\u8a0a\u606f\u88e1\u7684\u8cc7\u6599</translation>\n+        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <translation>\u555f\u52d5\u6642\u5f9e\u76ee\u524d\u7684\u5340\u584a\u6a94 blk000??.dat \u91cd\u5efa\u5340\u584a\u93c8\u7684\u7d22\u5f15</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3095,6 +3285,10 @@ rpcpassword=%s\n         <source>Start minimized</source>\n         <translation>\u5553\u52d5\u6642\u7e2e\u5230\u6700\u5c0f</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>\u4ea4\u6613\u91d1\u984d\u592a\u5c11\u800c\u4ed8\u4e0d\u8d77\u624b\u7e8c\u8cbb</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>\u9019\u5957\u8edf\u9ad4\u5c6c\u65bc\u5be6\u9a57\u6027\u8cea\u3002</translation>\n@@ -3115,6 +3309,10 @@ rpcpassword=%s\n         <source>Transaction too large</source>\n         <translation>\u4ea4\u6613\u4f4d\u5143\u91cf\u592a\u5927</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>\u4f7f\u7528\u4ecb\u9762\u9078\u9805:</translation>\n+    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u7121\u6cd5\u548c\u9019\u53f0\u96fb\u8166\u4e0a\u7684 %s \u7e6b\u7d50(\u56de\u50b3\u932f\u8aa4 %s)</translation>\n@@ -3195,18 +3393,10 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 \u8868\u793a\u4fdd\u7559\u4ea4\u6613\u63cf\u8ff0\u8cc7\u6599\uff0c\u50cf\u662f\u5e33\u6236\u4f7f\u7528\u8005\u548c\u4ed8\u6b3e\u8acb\u6c42\u8cc7\u8a0a\uff1b2 \u8868\u793a\u4e1f\u6389\u4ea4\u6613\u63cf\u8ff0\u8cc7\u6599)</translation>\n     </message>\n-    <message>\n-        <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: %u)</source>\n-        <translation>\u6bcf\u7576\u7d2f\u7a4d\u5230 &lt;n&gt; \u767e\u842c\u4f4d\u5143\u7d44(MB)\u6642\uff0c\u624d\u5c07\u8cc7\u6599\u5eab\u7684\u8b8a\u52d5\u5f9e\u8a18\u61b6\u9ad4\u66ab\u5b58\u6c60\u4e2d\u5beb\u9032\u78c1\u789f\u7d00\u9304\u6a94(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>\u4f7f\u7528 -checkblocks \u6aa2\u67e5\u5340\u584a\u7684\u4ed4\u7d30\u7a0b\u5ea6(0 \u5230 4\uff0c\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Log transaction priority and fee per kB when mining blocks (default: %u)</source>\n-        <translation>\u958b\u63a1\u5340\u584a\u7684\u6642\u5019\uff0c\u7d00\u9304\u4ea4\u6613\u7684\u512a\u5148\u5ea6\u4ee5\u53ca\u6bcf\u5343\u4f4d\u5143\u7d44(kB)\u7684\u624b\u7e8c\u8cbb(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)</source>\n         <translation>\u7dad\u8b77\u5168\u90e8\u4ea4\u6613\u7684\u7d22\u5f15\uff0c\u7528\u5728 getrawtransaction \u9019\u500b RPC \u8acb\u6c42(\u9810\u8a2d\u503c: %u)</translation>\n@@ -3235,18 +3425,10 @@ rpcpassword=%s\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>\u662f\u5426\u4e00\u5b9a\u8981\u7528\u57df\u540d\u67e5\u8a62\u4f86\u641c\u5c0b\u7bc0\u9ede(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Disable safemode, override a real safe mode event (default: %u)</source>\n-        <translation>\u4e0d\u9032\u5165\u5b89\u5168\u6a21\u5f0f\uff0c\u7528\u5728\u771f\u7684\u767c\u751f\u9700\u8981\u9032\u5165\u5b89\u5168\u6a21\u5f0f\u7684\u4e8b\u4ef6\u6642\uff0c\u5f37\u5236\u4e0d\u9032\u5165(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>\u8f09\u5165\u9322\u5305\u6a94 wallet.dat \u6642\u767c\u751f\u932f\u8aa4</translation>\n     </message>\n-    <message>\n-        <source>Force safe mode (default: %u)</source>\n-        <translation>\u5f37\u5236\u9032\u5165\u5b89\u5168\u6a21\u5f0f(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Generate coins (default: %u)</source>\n         <translation>\u751f\u7522\u4f4d\u5143\u5e63(\u9810\u8a2d\u503c: %u)</translation>\n@@ -3263,10 +3445,6 @@ rpcpassword=%s\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u7121\u6548\u7684 -proxy \u4f4d\u5740: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Limit size of signature cache to &lt;n&gt; entries (default: %u)</source>\n-        <translation>\u9650\u5236\u7c3d\u7ae0\u5feb\u53d6\u5927\u5c0f\u70ba &lt;n&gt; \u7b46(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>\u5728\u901a\u8a0a\u57e0 &lt;port&gt; \u807d\u5019 JSON-RPC \u9023\u7dda(\u9810\u8a2d\u503c: %u, \u6216\u82e5\u70ba\u6e2c\u8a66\u7db2\u8def: %u)</translation>\n@@ -3279,6 +3457,10 @@ rpcpassword=%s\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>\u7dad\u6301\u8207\u7bc0\u9ede\u9023\u7dda\u6578\u7684\u4e0a\u9650\u70ba &lt;n&gt; \u500b(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n+    <message>\n+        <source>Make the wallet broadcast transactions</source>\n+        <translation>\u8b93\u9322\u5305\u80fd\u516c\u544a\u4ea4\u6613</translation>\n+    </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u6bcf\u500b\u9023\u7dda\u7684\u63a5\u6536\u7de9\u885d\u5340\u5927\u5c0f\u4e0a\u9650\u70ba &lt;n&gt;*1000 \u500b\u4f4d\u5143\u7d44(\u9810\u8a2d\u503c: %u)</translation>\n@@ -3287,10 +3469,6 @@ rpcpassword=%s\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: %u)</source>\n         <translation>\u6bcf\u500b\u9023\u7dda\u7684\u50b3\u9001\u7de9\u885d\u5340\u5927\u5c0f\u4e0a\u9650\u70ba &lt;n&gt;*1000 \u500b\u4f4d\u5143\u7d44(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n-        <translation>\u53ea\u63a5\u53d7\u8207\u5167\u5efa\u7684\u6aa2\u67e5\u6bb5\u9ede\u543b\u5408\u7684\u5340\u584a\u9396\u93c8(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>\u5728\u9664\u932f\u8f38\u51fa\u5167\u5bb9\u524d\u9644\u52a0\u6642\u9593(\u9810\u8a2d\u503c: %u)</translation>\n@@ -3303,10 +3481,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u5141\u8a31\u8f49\u767c\u975e P2SH \u7684\u591a\u7c3d\u7ae0\u4ea4\u6613(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Run a thread to flush wallet periodically (default: %u)</source>\n-        <translation>\u555f\u7528\u5b9a\u671f\u5c07\u8b8a\u52d5\u5beb\u5165\u9322\u5305\u6a94\u7684\u57f7\u884c\u7dd2(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Server certificate file (default: %s)</source>\n         <translation>\u4f3a\u670d\u5668\u6191\u8b49\u6a94(\u9810\u8a2d\u503c: %s)</translation>\n@@ -3327,10 +3501,6 @@ rpcpassword=%s\n         <source>Set the number of threads to service RPC calls (default: %d)</source>\n         <translation>\u8a2d\u5b9a\u8655\u7406 RPC \u670d\u52d9\u8acb\u6c42\u7684\u57f7\u884c\u7dd2\u6578\u76ee(\u9810\u8a2d\u503c: %d)</translation>\n     </message>\n-    <message>\n-        <source>Sets the DB_PRIVATE flag in the wallet db environment (default: %u)</source>\n-        <translation>\u5728\u9322\u5305\u8cc7\u6599\u5eab\u74b0\u5883\u8b8a\u6578\u8a2d\u5b9a DB_PRIVATE \u65d7\u6a19(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>\u6307\u5b9a\u8a2d\u5b9a\u6a94(\u9810\u8a2d\u503c: %s)</translation>\n@@ -3347,10 +3517,6 @@ rpcpassword=%s\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>\u50b3\u9001\u4ea4\u6613\u6642\u53ef\u4ee5\u82b1\u9084\u6c92\u78ba\u8a8d\u7684\u96f6\u9322(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Stop running after importing blocks from disk (default: %u)</source>\n-        <translation>\u5f9e\u78c1\u789f\u532f\u5165\u5340\u584a\u8cc7\u6599\u5f8c\u505c\u6b62\u57f7\u884c(\u9810\u8a2d\u503c: %u)</translation>\n-    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>\u8207\u4e82\u641e\u7684\u7bc0\u9ede\u65b7\u7dda\u7684\u81e8\u754c\u503c (\u9810\u8a2d: %u)</translation>"
      }
    ]
  },
  {
    "sha": "cb4d6d05693a770fc10c541a987178a11e70f82e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjRkNmQwNTY5M2E3NzBmYzEwYzU0MWE5ODcxNzhhMTFlNzBmODJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T12:17:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T12:17:21Z"
      },
      "message": "Merge pull request #6730\n\na5b78c2 build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)",
      "tree": {
        "sha": "4c1bed3d2d79b66f88bc2e67ac77de2ab74bbf23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c1bed3d2d79b66f88bc2e67ac77de2ab74bbf23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb4d6d05693a770fc10c541a987178a11e70f82e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCoFRAAoJEHSBCwEjRsmmftYH/iMBX9AZsy4p+6b7cSUmFmMM\nFzuKIbmGMwu9nop4YYptaSNzUamAV9GxRQmk+16Pdo3jVLXt+1e2g/yDMDwjf+NJ\n6u+3vLIutzFNBC0+nx8cQ9gEMh016F3t0JWC/6m4D8Fxy/7hrynW3ui5YyqafIzw\nWVSqQEFo+6X4dTK+rXLie7mg2JopaTy0rr0R2Bj339zKvG+tLqF0PjPYpXkcc8Xw\nUbrjNEz8P+Y37K9CAkl3d3Df+oHxdro4SkgK6aUIlXFtWP0cDt63X6cm0GLEHah+\nEgKeqBIiDK8dVXx76bLwa5v0lHsHohIX/+G++lW2i7AHrKTjPkHtghInI4UZrm8=\n=O7D4\n-----END PGP SIGNATURE-----",
        "payload": "tree 4c1bed3d2d79b66f88bc2e67ac77de2ab74bbf23\nparent a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a\nparent a5b78c2fa8db87467a6434b2dc22522d43378aa1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443529021 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443529041 +0200\n\nMerge pull request #6730\n\na5b78c2 build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb4d6d05693a770fc10c541a987178a11e70f82e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb4d6d05693a770fc10c541a987178a11e70f82e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb4d6d05693a770fc10c541a987178a11e70f82e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a91eea6e3eddf312c6a7bd0bfc8d5accf93ebd8a"
      },
      {
        "sha": "a5b78c2fa8db87467a6434b2dc22522d43378aa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5b78c2fa8db87467a6434b2dc22522d43378aa1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5b78c2fa8db87467a6434b2dc22522d43378aa1"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7fdc766e1c9df2d0335b3e3e6470c059c410818d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb4d6d05693a770fc10c541a987178a11e70f82e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb4d6d05693a770fc10c541a987178a11e70f82e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cb4d6d05693a770fc10c541a987178a11e70f82e",
        "patch": "@@ -361,8 +361,7 @@ endif\n bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n   $(LIBBITCOIN_UNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBSECP256K1)\n+  $(LIBBITCOIN_UTIL)\n \n bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #"
      }
    ]
  },
  {
    "sha": "551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTFkN2VkYjFiNGVkNGM2ZjY2YmZhZmEwODUyZWI2ZmJjYmIxM2U4",
    "commit": {
      "author": {
        "name": "unsystemizer",
        "email": "something@gmail.com",
        "date": "2015-09-11T14:15:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T12:51:52Z"
      },
      "message": "doc: Fix dead link in gitian-building\n\n- Link to Debian 8.1 netinstall ISO is dead, changed to valid 8.2\n- Changed checksum to 8.2 netinstall ISO checksum (http://cdimage.debian.org/debian-cd/8.2.0/amd64/iso-cd/SHA256SUMS)\n- Verified CD checksum, checksum file's signing key",
      "tree": {
        "sha": "c20646efa3a55c9b0ba9502f840173f87ec3385b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c20646efa3a55c9b0ba9502f840173f87ec3385b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8/comments",
    "author": {
      "login": "unsystemizer",
      "id": 13134193,
      "node_id": "MDQ6VXNlcjEzMTM0MTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13134193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unsystemizer",
      "html_url": "https://github.com/unsystemizer",
      "followers_url": "https://api.github.com/users/unsystemizer/followers",
      "following_url": "https://api.github.com/users/unsystemizer/following{/other_user}",
      "gists_url": "https://api.github.com/users/unsystemizer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unsystemizer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unsystemizer/subscriptions",
      "organizations_url": "https://api.github.com/users/unsystemizer/orgs",
      "repos_url": "https://api.github.com/users/unsystemizer/repos",
      "events_url": "https://api.github.com/users/unsystemizer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unsystemizer/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3ad7fd29d2d2af5fb9f0308dbac8521c9779016e",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
        "patch": "@@ -74,11 +74,11 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n - File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n - Click `Create`\n \n-Get the [Debian 8.1 net installer](http://cdimage.debian.org/debian-cd/8.1.0/amd64/iso-cd/debian-8.1.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.2.0/amd64/iso-cd/debian-8.2.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"5d0a1f804d73aee73eee7efbb38456390558094fd19894a573f1514ca44347e0  debian-8.1.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"d393d17ac6b3113c81186e545c416a00f28ed6e05774284bb5e8f0df39fcbcb9  debian-8.2.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it. "
      }
    ]
  },
  {
    "sha": "0bec36f3bb4053a37a4edca6a4370edecb6b1569",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmVjMzZmM2JiNDA1M2EzN2E0ZWRjYTZhNDM3MGVkZWNiNmIxNTY5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T12:55:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T12:55:39Z"
      },
      "message": "Merge pull request #6661\n\n551d7ed doc: Fix dead link in gitian-building (unsystemizer)",
      "tree": {
        "sha": "b25f5ddfc0bbbda2c2001d92a575ebd938b0fc42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b25f5ddfc0bbbda2c2001d92a575ebd938b0fc42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bec36f3bb4053a37a4edca6a4370edecb6b1569",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCopLAAoJEHSBCwEjRsmmNYIH/0KAs10ZLTI4v5eisIEMv2VO\nU3a+26+s2MVTcQhofiwU7h+TD+myIj7ytmxlIkboyLcHTS08d3bUK/7nofxqXZnN\nR49zuoKjhZWEJFNg/S3EryDlrETs8rO42qGeT33ZTTOjgFlfiJNeWsXaKfxNq1PX\nN/YiPFrD63WozfI/gElJeMfl35KEWjX+5i8S7OovvziKqPVEKzrtDOZtIA87k6Dp\nhe/BeC1XmJ8mzx2/zxRAks2Ek652TaY3RGPoZiYeFIgsjcEz4jlAdM2hh8g79f2O\nODlZHf+GReOid2GQ8hammlL/0k/ogkZNc2MvVUWTJxtKJw0nLmPtg9IkdHMbrq8=\n=5gKB\n-----END PGP SIGNATURE-----",
        "payload": "tree b25f5ddfc0bbbda2c2001d92a575ebd938b0fc42\nparent cb4d6d05693a770fc10c541a987178a11e70f82e\nparent 551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443531337 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443531339 +0200\n\nMerge pull request #6661\n\n551d7ed doc: Fix dead link in gitian-building (unsystemizer)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bec36f3bb4053a37a4edca6a4370edecb6b1569",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bec36f3bb4053a37a4edca6a4370edecb6b1569",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bec36f3bb4053a37a4edca6a4370edecb6b1569/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb4d6d05693a770fc10c541a987178a11e70f82e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb4d6d05693a770fc10c541a987178a11e70f82e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb4d6d05693a770fc10c541a987178a11e70f82e"
      },
      {
        "sha": "551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/551d7edb1b4ed4c6f66bfafa0852eb6fbcbb13e8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "265fbd586dd6cb316e767a16429d4176b9603456",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bec36f3bb4053a37a4edca6a4370edecb6b1569/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bec36f3bb4053a37a4edca6a4370edecb6b1569/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=0bec36f3bb4053a37a4edca6a4370edecb6b1569",
        "patch": "@@ -74,11 +74,11 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n - File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n - Click `Create`\n \n-Get the [Debian 8.1 net installer](http://cdimage.debian.org/debian-cd/8.1.0/amd64/iso-cd/debian-8.1.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.2.0/amd64/iso-cd/debian-8.2.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"5d0a1f804d73aee73eee7efbb38456390558094fd19894a573f1514ca44347e0  debian-8.1.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"d393d17ac6b3113c81186e545c416a00f28ed6e05774284bb5e8f0df39fcbcb9  debian-8.2.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it. "
      }
    ]
  },
  {
    "sha": "6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2ViZDVkODU0YjJlZGE5Y2NmYjQwM2U5ZTczZWUyYjdmZWExOGZi",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-09-29T17:18:07Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-09-29T17:18:07Z"
      },
      "message": "zmq: require version 4.x or newer of libzmq\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "fc80c05cc75bb147b764b57916f20b44f9a7c363",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc80c05cc75bb147b764b57916f20b44f9a7c363"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0bec36f3bb4053a37a4edca6a4370edecb6b1569",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bec36f3bb4053a37a4edca6a4370edecb6b1569",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0bec36f3bb4053a37a4edca6a4370edecb6b1569"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "d530f8c262b25e024f34dddfe0221019e8053f8b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
        "patch": "@@ -145,7 +145,7 @@ AC_ARG_ENABLE([zmq],\n \n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n-# Enable debug \n+# Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n                     [use debug compiler flags and macros (default is no)])],\n@@ -157,11 +157,11 @@ if test \"x$enable_debug\" = xyes; then\n     if test \"x$GCC\" = xyes; then\n         CFLAGS=\"$CFLAGS -g3 -O0\"\n     fi\n-    \n+\n     if test \"x$GXX\" = xyes; then\n         CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n     fi\n-fi \n+fi\n \n ## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n ##       compatibility with the legacy buildsystem.\n@@ -843,10 +843,10 @@ fi\n AC_MSG_CHECKING([whether to build ZMQ support])\n if test \"x$use_zmq\" = \"xyes\"; then\n   AC_MSG_RESULT([yes])\n-  PKG_CHECK_MODULES([ZMQ],[libzmq],\n+  PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n     [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n     [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-     AC_MSG_WARN([libzmq not found, disabling])\n+     AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n      use_zmq=no])\n else\n   AC_MSG_RESULT([no, --disable-zmq used])"
      }
    ]
  },
  {
    "sha": "ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjBiOGJlODU3OWQ2YThmY2EyNmFjOWVlN2YyY2ZmYmNhOGQ3MmU5",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-09-29T17:48:45Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-09-29T17:48:45Z"
      },
      "message": "zmq: update and cleanup build-unix, release-notes, and zmq docs\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "67b153edf31184b736b48a4820bafbb31709f116",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67b153edf31184b736b48a4820bafbb31709f116"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cebd5d854b2eda9ccfb403e9e73ee2b7fea18fb"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 45,
      "deletions": 29
    },
    "files": [
      {
        "sha": "39f75e6b8d5632989fe26624ce49ea2076a74769",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
        "patch": "@@ -1,6 +1,6 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin in Unix. \n+Some notes on how to build Bitcoin in Unix.\n \n Note\n ---------------------\n@@ -44,6 +44,7 @@ Optional dependencies:\n  qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n  protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n+ libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n \n For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n \n@@ -59,7 +60,7 @@ Dependency Build Instructions: Ubuntu & Debian\n Build requirements:\n \n \tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n-\t\n+\n For Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n \n \tsudo apt-get install libboost-all-dev\n@@ -81,6 +82,11 @@ Optional:\n \n \tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n+ZMQ dependencies:\n+\n+        sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n+\n+\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n@@ -229,4 +235,3 @@ In this case there is no dependency on Berkeley DB 4.8.\n \n Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n call not `getwork`.\n-"
      },
      {
        "sha": "70623a3939d7b8ba55f81ed3dac8f011d49b8524",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
        "patch": "@@ -46,7 +46,7 @@ caching. A sample config for apache2 could look like:\n         # optional enable digest auth\n         # AuthType Digest\n         # ...\n-        \n+\n         # optional bypass bitcoind rpc basic auth\n         # RequestHeader set Authorization \"Basic <hash>\"\n         # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n@@ -171,3 +171,11 @@ configured specifically to process scriptPubKey and not scriptSig scripts.\n \n - Removed bitrpc.py from contrib\n \n+Addition of ZMQ-based Notifcations\n+==================================\n+\n+Bitcoind can now (optionally) asynchronously notify clients through a\n+ZMQ-based PUB socket of the arrival of new transactions and blocks.\n+This feature requires installation of the ZMQ C API library 4.x and\n+configuring its use through the command line or configuration file.\n+Please see docs/zmq.md for details of operation."
      },
      {
        "sha": "358d29d0467c25297d5d2b8c77247868e93f8ea4",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 28,
        "deletions": 25,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
        "patch": "@@ -1,7 +1,7 @@\n # Block and Transaction Broadcasting With ZeroMQ\n \n [ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n-connections, inter-process communications, and shared-memory,\n+connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subcribe,\n request/reply, and push/pull.\n \n@@ -14,31 +14,32 @@ requesting blockchain related data. However, there exists only a\n limited service to notify external software of events like the arrival\n of new blocks or transactions.\n \n-The ZeroMQ facility implements a notification interface through a\n-set of specific notifiers. Currently there are notifiers that publish\n+The ZeroMQ facility implements a notification interface through a set\n+of specific notifiers. Currently there are notifiers that publish\n blocks and transactions. This read-only facility requires only the\n-connection of a corresponding ZeroMQ subscriber port in receiving \n+connection of a corresponding ZeroMQ subscriber port in receiving\n software; it is not authenticated nor is there any two-way protocol\n involvement. Therefore, subscribers should validate the received data\n since it may be out of date, incomplete or even invalid.\n \n-ZeroMQ sockets are self-connecting and self-healing; that is, connects\n-made between two endpoints will be automatically restored after an\n-outage, and either end may be freely started or stopped in any order.\n+ZeroMQ sockets are self-connecting and self-healing; that is,\n+connections made between two endpoints will be automatically restored\n+after an outage, and either end may be freely started or stopped in\n+any order.\n \n Because ZeroMQ is message oriented, subscribers receive transactions\n and blocks all-at-once and do not need to implement any sort of\n buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core uses only a very small part of the\n-ZeroMQ C API, and is thus compatible with any version of ZeroMQ\n-from 2.1 onward, including all versions in the 3.x and 4.x release\n-series. Typically, it is packaged by distributions as something like\n-*libzmq-dev*.\n+The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+newer. Typically, it is packaged by distributions as something like\n+*libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n-The C++ wrapper for ZeroMQ is *not* needed.\n+In order to run the example Python client scripts in contrib/ one must\n+also install *python-zmq*, though this is not necessary for daemon\n+operation.\n \n ## Enabling\n \n@@ -60,27 +61,29 @@ Currently, the following notifications are supported:\n     -zmqpubrawblock=address\n     -zmqpubrawtx=address\n \n-The socket type is PUB and the address must be a valid ZeroMQ\n-socket address. The same address can be used in more than one notification.\n+The socket type is PUB and the address must be a valid ZeroMQ socket\n+address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n \n Each PUB notification has a topic and body, where the header\n-corresponds to the notification type. For instance, for the notification\n-`-zmqpubhashtx` the topic is `hashtx` (no null terminator) and the body is the\n-hexadecimal transaction hash (32 bytes).\n+corresponds to the notification type. For instance, for the\n+notification `-zmqpubhashtx` the topic is `hashtx` (no null\n+terminator) and the body is the hexadecimal transaction hash (32\n+bytes).\n \n These options can also be provided in bitcoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org).\n \n Client side, then, the ZeroMQ subscriber socket must have the\n-ZMQ_SUBSCRIBE option set to one or either of these prefixes (for instance, just `hash`); without\n-doing so will result in no messages arriving. Please see `contrib/zmq/zmq_sub.py`\n-for a working example.\n+ZMQ_SUBSCRIBE option set to one or either of these prefixes (for\n+instance, just `hash`); without doing so will result in no messages\n+arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n@@ -93,6 +96,6 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur and just\n-the tip will be notified. It is up to the subscriber to retrieve the chain\n-from the last known block to the new tip.\n+Note that when the block chain tip changes, a reorganisation may occur\n+and just the tip will be notified. It is up to the subscriber to\n+retrieve the chain from the last known block to the new tip."
      }
    ]
  },
  {
    "sha": "e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzYxZDdhOTRmZjhiOWY2MzhiNjViMTZmNWM0ZmZhYjY1NzM4ODRh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-04-09T11:50:18Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-09-29T19:46:34Z"
      },
      "message": "Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case)",
      "tree": {
        "sha": "4eeaa151e882c0c0e33c4be97048194fd8aad1b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4eeaa151e882c0c0e33c4be97048194fd8aad1b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fb5c9b21335edfe193513ae3fe3f09c1cefe24b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fb5c9b21335edfe193513ae3fe3f09c1cefe24b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fb5c9b21335edfe193513ae3fe3f09c1cefe24b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "08303d61ca407cef0b77b9223319e9714bfb3331",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
        "patch": "@@ -89,6 +89,7 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         vAlertPubKey = ParseHex(\"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\");\n         nDefaultPort = 8333;\n+        nMaxTipAge = 24 * 60 * 60;\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n@@ -162,6 +163,7 @@ class CTestNetParams : public CChainParams {\n         pchMessageStart[3] = 0x07;\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n+        nMaxTipAge = 0x7fffffff;\n         nPruneAfterHeight = 1000;\n \n         genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n@@ -222,6 +224,7 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n+        nMaxTipAge = 24 * 60 * 60;\n         nDefaultPort = 18444;\n         nPruneAfterHeight = 1000;\n "
      },
      {
        "sha": "465e6a61a8e2e5ebbb87f7eba919bb2d343d5eee",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
        "patch": "@@ -57,6 +57,7 @@ class CChainParams\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n     bool RequireStandard() const { return fRequireStandard; }\n+    int64_t MaxTipAge() const { return nMaxTipAge; }\n     int64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n     /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n@@ -76,6 +77,7 @@ class CChainParams\n     //! Raw pub key bytes for the broadcast alert signing key.\n     std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n+    long nMaxTipAge;\n     uint64_t nPruneAfterHeight;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];"
      },
      {
        "sha": "8da2a80bb02f110e784253fb88e05b9d49001e1d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e761d7a94ff8b9f638b65b16f5c4ffab6573884a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
        "patch": "@@ -1091,7 +1091,7 @@ bool IsInitialBlockDownload()\n     if (lockIBDState)\n         return false;\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n-            pindexBestHeader->GetBlockTime() < GetTime() - 24 * 60 * 60);\n+            pindexBestHeader->GetBlockTime() < GetTime() - chainParams.MaxTipAge());\n     if (!state)\n         lockIBDState = true;\n     return state;"
      }
    ]
  },
  {
    "sha": "f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmNlNTljZDNjYjJhNmU4YTg5Y2QzY2U5MjllMGVmZDQyMjFlMGM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T22:21:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T22:23:26Z"
      },
      "message": "Merge pull request #6713\n\n43edd51 SanitizeString: Allow hypen char (MarcoFalke)",
      "tree": {
        "sha": "57a42d95943b42a8473c5bac074f0af3b55c17d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57a42d95943b42a8473c5bac074f0af3b55c17d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCw9eAAoJEHSBCwEjRsmmRlcIAJHZx2IiNS/SWd0N42aXBV8U\nQxA/8ohdOXiz5OtbVstDA2Tz4RAj9zy8nhkAY7fil8YGgdxa6dggGaf2LEvppcpe\nBGROq8xYS2Bz2nI0gNyRRMQFF4GtfbMs4y65PXe6LvgYMYatnK2m4jKjBS7+skLt\nxC65yLfn49tZmj/eSdObawd3zwvi9WDReDosaH4jVwzowlL6YMWvN5rTYIYouv4W\ncgmBvYAd9weE9Wc2qcpA+Ii+lijdz8MaMWvJY0k7CGulzebJCnnqrwLVeE5+Cdne\ncZ2SVxkHBrkvRRaH2tIIznN5OOBT8Yoq7aVsfCKBgq/iETj+mCIONmRaLLKIIgQ=\n=VyUe\n-----END PGP SIGNATURE-----",
        "payload": "tree 57a42d95943b42a8473c5bac074f0af3b55c17d3\nparent 0bec36f3bb4053a37a4edca6a4370edecb6b1569\nparent 43edd515e544b46ca548933135326fbe4a4b4e5a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443565276 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443565406 +0200\n\nMerge pull request #6713\n\n43edd51 SanitizeString: Allow hypen char (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0bec36f3bb4053a37a4edca6a4370edecb6b1569",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bec36f3bb4053a37a4edca6a4370edecb6b1569",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0bec36f3bb4053a37a4edca6a4370edecb6b1569"
      },
      {
        "sha": "43edd515e544b46ca548933135326fbe4a4b4e5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43edd515e544b46ca548933135326fbe4a4b4e5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43edd515e544b46ca548933135326fbe4a4b4e5a"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "997dc31931f7dc716ccb14936c42abcb3136e1f4",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
        "patch": "@@ -413,10 +413,10 @@ BOOST_AUTO_TEST_CASE(test_FormatSubVersion)\n     comments.push_back(std::string(\"comment1\"));\n     std::vector<std::string> comments2;\n     comments2.push_back(std::string(\"comment1\"));\n-    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@; !\\\"#$%&'()*+-/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n+    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@-; !\\\"#$%&'()*+/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, std::vector<std::string>()),std::string(\"/Test:0.9.99/\"));\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments),std::string(\"/Test:0.9.99(comment1)/\"));\n-    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; Comment2; .,_?@; )/\"));\n+    BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:0.9.99(comment1; Comment2; .,_?@-; )/\"));\n }\n \n BOOST_AUTO_TEST_CASE(test_ParseFixedPoint)"
      },
      {
        "sha": "c5a2b5cdbb780e2f1c9df8a25280de971cce2ae8",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
        "patch": "@@ -18,8 +18,8 @@ static const string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO\n \n static const string SAFE_CHARS[] =\n {\n-    CHARS_ALPHA_NUM + \" .,;_/:?@()\", // SAFE_CHARS_DEFAULT\n-    CHARS_ALPHA_NUM + \" .,;_?@\" // SAFE_CHARS_UA_COMMENT\n+    CHARS_ALPHA_NUM + \" .,;-_/:?@()\", // SAFE_CHARS_DEFAULT\n+    CHARS_ALPHA_NUM + \" .,;-_?@\" // SAFE_CHARS_UA_COMMENT\n };\n \n string SanitizeString(const string& str, int rule)"
      }
    ]
  },
  {
    "sha": "c138cf9769635cec57613ec0c8b32123f649d5b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTM4Y2Y5NzY5NjM1Y2VjNTc2MTNlYzBjOGIzMjEyM2Y2NDlkNWI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T22:54:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-29T22:55:25Z"
      },
      "message": "Merge pull request #6736\n\nab0b8be zmq: update and cleanup build-unix, release-notes, and zmq docs (Johnathan Corgan)\n6cebd5d zmq: require version 4.x or newer of libzmq (Johnathan Corgan)",
      "tree": {
        "sha": "024cd7db93afbcd564cd55766c1d54390e520fe2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/024cd7db93afbcd564cd55766c1d54390e520fe2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c138cf9769635cec57613ec0c8b32123f649d5b4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWCxbdAAoJEHSBCwEjRsmmBOEIAKhRcVKzEHE5SawY6jyDyGWZ\nm3nTxdkYhpGFXYDVe6zbhZTVLWI7YL43MaN5CSovykikicr03UpZmnBx1v+3U1ia\nsgEP9G9ZOgcwFGnOUflvmq54pmcqcYoyiQmIHJYvfW51f69BEQaCbVmt/JOdtHHy\nuXsG8SWRdMghdVaZuKsuM+htByoj2JPk8e/ExHyMAIIqyOPxBGfbIlW9o2Bs1vcb\nSysFb6HF8aIJepsAXw2GeHduDVRsUl4DdOmkgRo2745mYNQzNWoFQocDdDhlqyKB\ndIntEF23ZRB5+/oWS96WmQKvz8Eo4J2vqedih44lOWKvarnQTSYbFJQkgcdZODI=\n=rKR3\n-----END PGP SIGNATURE-----",
        "payload": "tree 024cd7db93afbcd564cd55766c1d54390e520fe2\nparent f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5\nparent ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443567253 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443567325 +0200\n\nMerge pull request #6736\n\nab0b8be zmq: update and cleanup build-unix, release-notes, and zmq docs (Johnathan Corgan)\n6cebd5d zmq: require version 4.x or newer of libzmq (Johnathan Corgan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c138cf9769635cec57613ec0c8b32123f649d5b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c138cf9769635cec57613ec0c8b32123f649d5b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c138cf9769635cec57613ec0c8b32123f649d5b4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6ce59cd3cb2a6e8a89cd3ce929e0efd4221e0c5"
      },
      {
        "sha": "ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab0b8be8579d6a8fca26ac9ee7f2cffbca8d72e9"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 50,
      "deletions": 34
    },
    "files": [
      {
        "sha": "d530f8c262b25e024f34dddfe0221019e8053f8b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c138cf9769635cec57613ec0c8b32123f649d5b4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c138cf9769635cec57613ec0c8b32123f649d5b4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c138cf9769635cec57613ec0c8b32123f649d5b4",
        "patch": "@@ -145,7 +145,7 @@ AC_ARG_ENABLE([zmq],\n \n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n-# Enable debug \n+# Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n                     [use debug compiler flags and macros (default is no)])],\n@@ -157,11 +157,11 @@ if test \"x$enable_debug\" = xyes; then\n     if test \"x$GCC\" = xyes; then\n         CFLAGS=\"$CFLAGS -g3 -O0\"\n     fi\n-    \n+\n     if test \"x$GXX\" = xyes; then\n         CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n     fi\n-fi \n+fi\n \n ## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n ##       compatibility with the legacy buildsystem.\n@@ -843,10 +843,10 @@ fi\n AC_MSG_CHECKING([whether to build ZMQ support])\n if test \"x$use_zmq\" = \"xyes\"; then\n   AC_MSG_RESULT([yes])\n-  PKG_CHECK_MODULES([ZMQ],[libzmq],\n+  PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n     [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n     [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-     AC_MSG_WARN([libzmq not found, disabling])\n+     AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n      use_zmq=no])\n else\n   AC_MSG_RESULT([no, --disable-zmq used])"
      },
      {
        "sha": "39f75e6b8d5632989fe26624ce49ea2076a74769",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c138cf9769635cec57613ec0c8b32123f649d5b4/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c138cf9769635cec57613ec0c8b32123f649d5b4/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=c138cf9769635cec57613ec0c8b32123f649d5b4",
        "patch": "@@ -1,6 +1,6 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin in Unix. \n+Some notes on how to build Bitcoin in Unix.\n \n Note\n ---------------------\n@@ -44,6 +44,7 @@ Optional dependencies:\n  qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n  protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n+ libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n \n For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n \n@@ -59,7 +60,7 @@ Dependency Build Instructions: Ubuntu & Debian\n Build requirements:\n \n \tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n-\t\n+\n For Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n \n \tsudo apt-get install libboost-all-dev\n@@ -81,6 +82,11 @@ Optional:\n \n \tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n+ZMQ dependencies:\n+\n+        sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n+\n+\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n@@ -229,4 +235,3 @@ In this case there is no dependency on Berkeley DB 4.8.\n \n Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n call not `getwork`.\n-"
      },
      {
        "sha": "70623a3939d7b8ba55f81ed3dac8f011d49b8524",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c138cf9769635cec57613ec0c8b32123f649d5b4/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c138cf9769635cec57613ec0c8b32123f649d5b4/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=c138cf9769635cec57613ec0c8b32123f649d5b4",
        "patch": "@@ -46,7 +46,7 @@ caching. A sample config for apache2 could look like:\n         # optional enable digest auth\n         # AuthType Digest\n         # ...\n-        \n+\n         # optional bypass bitcoind rpc basic auth\n         # RequestHeader set Authorization \"Basic <hash>\"\n         # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n@@ -171,3 +171,11 @@ configured specifically to process scriptPubKey and not scriptSig scripts.\n \n - Removed bitrpc.py from contrib\n \n+Addition of ZMQ-based Notifcations\n+==================================\n+\n+Bitcoind can now (optionally) asynchronously notify clients through a\n+ZMQ-based PUB socket of the arrival of new transactions and blocks.\n+This feature requires installation of the ZMQ C API library 4.x and\n+configuring its use through the command line or configuration file.\n+Please see docs/zmq.md for details of operation."
      },
      {
        "sha": "358d29d0467c25297d5d2b8c77247868e93f8ea4",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 28,
        "deletions": 25,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c138cf9769635cec57613ec0c8b32123f649d5b4/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c138cf9769635cec57613ec0c8b32123f649d5b4/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=c138cf9769635cec57613ec0c8b32123f649d5b4",
        "patch": "@@ -1,7 +1,7 @@\n # Block and Transaction Broadcasting With ZeroMQ\n \n [ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n-connections, inter-process communications, and shared-memory,\n+connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subcribe,\n request/reply, and push/pull.\n \n@@ -14,31 +14,32 @@ requesting blockchain related data. However, there exists only a\n limited service to notify external software of events like the arrival\n of new blocks or transactions.\n \n-The ZeroMQ facility implements a notification interface through a\n-set of specific notifiers. Currently there are notifiers that publish\n+The ZeroMQ facility implements a notification interface through a set\n+of specific notifiers. Currently there are notifiers that publish\n blocks and transactions. This read-only facility requires only the\n-connection of a corresponding ZeroMQ subscriber port in receiving \n+connection of a corresponding ZeroMQ subscriber port in receiving\n software; it is not authenticated nor is there any two-way protocol\n involvement. Therefore, subscribers should validate the received data\n since it may be out of date, incomplete or even invalid.\n \n-ZeroMQ sockets are self-connecting and self-healing; that is, connects\n-made between two endpoints will be automatically restored after an\n-outage, and either end may be freely started or stopped in any order.\n+ZeroMQ sockets are self-connecting and self-healing; that is,\n+connections made between two endpoints will be automatically restored\n+after an outage, and either end may be freely started or stopped in\n+any order.\n \n Because ZeroMQ is message oriented, subscribers receive transactions\n and blocks all-at-once and do not need to implement any sort of\n buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core uses only a very small part of the\n-ZeroMQ C API, and is thus compatible with any version of ZeroMQ\n-from 2.1 onward, including all versions in the 3.x and 4.x release\n-series. Typically, it is packaged by distributions as something like\n-*libzmq-dev*.\n+The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+newer. Typically, it is packaged by distributions as something like\n+*libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n-The C++ wrapper for ZeroMQ is *not* needed.\n+In order to run the example Python client scripts in contrib/ one must\n+also install *python-zmq*, though this is not necessary for daemon\n+operation.\n \n ## Enabling\n \n@@ -60,27 +61,29 @@ Currently, the following notifications are supported:\n     -zmqpubrawblock=address\n     -zmqpubrawtx=address\n \n-The socket type is PUB and the address must be a valid ZeroMQ\n-socket address. The same address can be used in more than one notification.\n+The socket type is PUB and the address must be a valid ZeroMQ socket\n+address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n \n Each PUB notification has a topic and body, where the header\n-corresponds to the notification type. For instance, for the notification\n-`-zmqpubhashtx` the topic is `hashtx` (no null terminator) and the body is the\n-hexadecimal transaction hash (32 bytes).\n+corresponds to the notification type. For instance, for the\n+notification `-zmqpubhashtx` the topic is `hashtx` (no null\n+terminator) and the body is the hexadecimal transaction hash (32\n+bytes).\n \n These options can also be provided in bitcoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org).\n \n Client side, then, the ZeroMQ subscriber socket must have the\n-ZMQ_SUBSCRIBE option set to one or either of these prefixes (for instance, just `hash`); without\n-doing so will result in no messages arriving. Please see `contrib/zmq/zmq_sub.py`\n-for a working example.\n+ZMQ_SUBSCRIBE option set to one or either of these prefixes (for\n+instance, just `hash`); without doing so will result in no messages\n+arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n@@ -93,6 +96,6 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur and just\n-the tip will be notified. It is up to the subscriber to retrieve the chain\n-from the last known block to the new tip.\n+Note that when the block chain tip changes, a reorganisation may occur\n+and just the tip will be notified. It is up to the subscriber to\n+retrieve the chain from the last known block to the new tip."
      }
    ]
  },
  {
    "sha": "96106f0f3023369ab88ad6cfde42f689f0296ab8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjEwNmYwZjMwMjMzNjlhYjg4YWQ2Y2ZkZTQyZjY4OWYwMjk2YWI4",
    "commit": {
      "author": {
        "name": "paveljanik",
        "email": "Pavel@Janik.cz",
        "date": "2015-09-30T06:40:20Z"
      },
      "committer": {
        "name": "paveljanik",
        "email": "Pavel@Janik.cz",
        "date": "2015-09-30T06:40:20Z"
      },
      "message": "[Trivial] start the help texts with lowercase",
      "tree": {
        "sha": "6d78a5729dbfed6055e01e94e160fc54f12037d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d78a5729dbfed6055e01e94e160fc54f12037d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96106f0f3023369ab88ad6cfde42f689f0296ab8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96106f0f3023369ab88ad6cfde42f689f0296ab8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96106f0f3023369ab88ad6cfde42f689f0296ab8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96106f0f3023369ab88ad6cfde42f689f0296ab8/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c138cf9769635cec57613ec0c8b32123f649d5b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c138cf9769635cec57613ec0c8b32123f649d5b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c138cf9769635cec57613ec0c8b32123f649d5b4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ad3903f14a2ebc76369c5f7a2d3d01a234f30967",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96106f0f3023369ab88ad6cfde42f689f0296ab8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96106f0f3023369ab88ad6cfde42f689f0296ab8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=96106f0f3023369ab88ad6cfde42f689f0296ab8",
        "patch": "@@ -139,7 +139,7 @@ AC_ARG_ENABLE([glibc-back-compat],\n \n AC_ARG_ENABLE([zmq],\n   [AS_HELP_STRING([--disable-zmq],\n-  [Disable ZMQ notifications])],\n+  [disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n "
      }
    ]
  },
  {
    "sha": "05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWI1ODMxYWEwMDM4Y2MyYWUyNGUxN2VhNDM4NDI4ZWIyYjZlNDRj",
    "commit": {
      "author": {
        "name": "paveljanik",
        "email": "Pavel@Janik.cz",
        "date": "2015-09-30T06:44:51Z"
      },
      "committer": {
        "name": "paveljanik",
        "email": "Pavel@Janik.cz",
        "date": "2015-09-30T06:44:51Z"
      },
      "message": "Add PR title prefix for trivial changes [skip ci]",
      "tree": {
        "sha": "7759b1179e397c94f9e9922e84ca849819e88323",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7759b1179e397c94f9e9922e84ca849819e88323"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05b5831aa0038cc2ae24e17ea438428eb2b6e44c/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c138cf9769635cec57613ec0c8b32123f649d5b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c138cf9769635cec57613ec0c8b32123f649d5b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c138cf9769635cec57613ec0c8b32123f649d5b4"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1d42dea843b6cda2419291c489ea1ad11ed30235",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05b5831aa0038cc2ae24e17ea438428eb2b6e44c/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05b5831aa0038cc2ae24e17ea438428eb2b6e44c/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
        "patch": "@@ -35,6 +35,7 @@ The title of the pull request should be prefixed by the component or area that t\n     Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n     Net: Automatically create hidden service, listen on Tor\n     Qt: Add feed bump button\n+    Trivial: fix typo\n \n If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n "
      }
    ]
  },
  {
    "sha": "3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjc0Y2QyMzYxYjlmNzJhOTFkMjFmODc5ODBlMTVmMmI1YjVjYTlm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T08:27:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T08:28:24Z"
      },
      "message": "Merge pull request #6740\n\n05b5831 Add PR title prefix for trivial changes [skip ci] (paveljanik)",
      "tree": {
        "sha": "7759b1179e397c94f9e9922e84ca849819e88323",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7759b1179e397c94f9e9922e84ca849819e88323"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWC50oAAoJEHSBCwEjRsmmxTYIAJ+pqkKnt1obaGoQ7yUxxH7/\n/uFTz0D+5Uf2339D7XfvgUit/C0UGOo7jQrTKmQuDbfg1eQENGtPO546MgRJMjV3\nSgi049EEIxywBv3RCbnznLI8eB8U7z+JelbUho0NymKoVY9pQLqwZpuoSpdLWsFM\nBt4J7HybP33Ej/a7RjfwtB66ElXcFby8q3Cj96oXJ6QwWROz4CA1cznv9P1firHR\nbqwA1cTHqBz4/ATgmq8o4YnM+10o4DaohAQy2Jqwnuvlde4MtwJbLUejJ7sTuYe2\nYR8Bd5hnOSXQDhCRCRO2gtTyWja0jZVuAXIhXANhLz5GSdkIzgNzyYg8aDtLJ74=\n=HcY+\n-----END PGP SIGNATURE-----",
        "payload": "tree 7759b1179e397c94f9e9922e84ca849819e88323\nparent c138cf9769635cec57613ec0c8b32123f649d5b4\nparent 05b5831aa0038cc2ae24e17ea438428eb2b6e44c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443601674 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443601704 +0200\n\nMerge pull request #6740\n\n05b5831 Add PR title prefix for trivial changes [skip ci] (paveljanik)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c138cf9769635cec57613ec0c8b32123f649d5b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c138cf9769635cec57613ec0c8b32123f649d5b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c138cf9769635cec57613ec0c8b32123f649d5b4"
      },
      {
        "sha": "05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05b5831aa0038cc2ae24e17ea438428eb2b6e44c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05b5831aa0038cc2ae24e17ea438428eb2b6e44c"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1d42dea843b6cda2419291c489ea1ad11ed30235",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
        "patch": "@@ -35,6 +35,7 @@ The title of the pull request should be prefixed by the component or area that t\n     Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n     Net: Automatically create hidden service, listen on Tor\n     Qt: Add feed bump button\n+    Trivial: fix typo\n \n If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n "
      }
    ]
  },
  {
    "sha": "4f44530bc38fb8367c2b9bde21492b545e7f7f26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjQ0NTMwYmMzOGZiODM2N2MyYjliZGUyMTQ5MmI1NDVlN2Y3ZjI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T09:07:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T09:08:30Z"
      },
      "message": "Merge pull request #6680\n\nd76a8ac use CBlockIndex* insted of uint256 for UpdatedBlockTip signal (Jonas Schnelli)",
      "tree": {
        "sha": "53145a92262745270cfda20578a317e24a749973",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53145a92262745270cfda20578a317e24a749973"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f44530bc38fb8367c2b9bde21492b545e7f7f26",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWC6aOAAoJEHSBCwEjRsmmTlgH/RbnlxFOjUOYTixHB79U4pN+\nmNMR/11D7hz+CRQmkHHTejsbuDafNNVK9eUyBfBVbT+NwE3CT67ummnxor/aEQpn\nNp87jKgQa8dBH5qTqtjr3l7a4WVoH/OhxoRNMudwC550EnJ1E+oAmqqtgJSV3NTy\niblHot1MrB5B0GnpQI3yVQPRGWDfIG+b3+j9R9mckkPe+rcYaYOXbDuX/qvB27Fn\nylmqRTddJq4AdF8J7GOPoQeugJACZWsuWsfFjtgcLF9x/hRAdXm6rUj9J27BF8ic\nwWi+Uiedpv4dOYJ8IYQQ4QvHqrzWvQnJv0ywprvOtQbAil4KTC1dzRvhfjKFyyI=\n=9WlO\n-----END PGP SIGNATURE-----",
        "payload": "tree 53145a92262745270cfda20578a317e24a749973\nparent 3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f\nparent d76a8acb9b7bcabf43e3e05168a36911f187818d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443604074 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443604110 +0200\n\nMerge pull request #6680\n\nd76a8ac use CBlockIndex* insted of uint256 for UpdatedBlockTip signal (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f44530bc38fb8367c2b9bde21492b545e7f7f26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f44530bc38fb8367c2b9bde21492b545e7f7f26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f44530bc38fb8367c2b9bde21492b545e7f7f26/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f74cd2361b9f72a91d21f87980e15f2b5b5ca9f"
      },
      {
        "sha": "d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d76a8acb9b7bcabf43e3e05168a36911f187818d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d76a8acb9b7bcabf43e3e05168a36911f187818d"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 21,
      "deletions": 17
    },
    "files": [
      {
        "sha": "e919a20771d29d4aa794247f328bbcbd32e05174",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -2320,7 +2320,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n                         pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n             }\n             // Notify external listeners about the new tip.\n-            GetMainSignals().UpdatedBlockTip(hashNewTip);\n+            GetMainSignals().UpdatedBlockTip(pindexNewTip);\n             uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());"
      },
      {
        "sha": "ffb56d266b95846db70ce5a162f2802b263e935d",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -11,6 +11,7 @@\n \n class CBlock;\n struct CBlockLocator;\n+class CBlockIndex;\n class CReserveScript;\n class CTransaction;\n class CValidationInterface;\n@@ -30,7 +31,7 @@ void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n \n class CValidationInterface {\n protected:\n-    virtual void UpdatedBlockTip(const uint256 &newHashTip) {}\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindex) {}\n     virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void UpdatedTransaction(const uint256 &hash) {}\n@@ -46,7 +47,7 @@ class CValidationInterface {\n \n struct CMainSignals {\n     /** Notifies listeners of updated block chain tip */\n-    boost::signals2::signal<void (const uint256 &)> UpdatedBlockTip;\n+    boost::signals2::signal<void (const CBlockIndex *)> UpdatedBlockTip;\n     /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n     boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n     /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */"
      },
      {
        "sha": "9f5cb3ba677ce5ca8b851c3c1719cb70cbf70275",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -11,7 +11,7 @@ CZMQAbstractNotifier::~CZMQAbstractNotifier()\n     assert(!psocket);\n }\n \n-bool CZMQAbstractNotifier::NotifyBlock(const uint256 &/*hash*/)\n+bool CZMQAbstractNotifier::NotifyBlock(const CBlockIndex * /*CBlockIndex*/)\n {\n     return true;\n }"
      },
      {
        "sha": "77cf5141e27b7568dbd8a3e9499b64f06477f095",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -7,7 +7,9 @@\n \n #include \"zmqconfig.h\"\n \n+class CBlockIndex;\n class CZMQAbstractNotifier;\n+\n typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n \n class CZMQAbstractNotifier\n@@ -30,7 +32,7 @@ class CZMQAbstractNotifier\n     virtual bool Initialize(void *pcontext) = 0;\n     virtual void Shutdown() = 0;\n \n-    virtual bool NotifyBlock(const uint256 &hash);\n+    virtual bool NotifyBlock(const CBlockIndex *pindex);\n     virtual bool NotifyTransaction(const CTransaction &transaction);\n \n protected:"
      },
      {
        "sha": "388b86707b346b19e9f452de50486af47e5613ea",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -120,12 +120,12 @@ void CZMQNotificationInterface::Shutdown()\n     }\n }\n \n-void CZMQNotificationInterface::UpdatedBlockTip(const uint256 &hash)\n+void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindex)\n {\n     for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n     {\n         CZMQAbstractNotifier *notifier = *i;\n-        if (notifier->NotifyBlock(hash))\n+        if (notifier->NotifyBlock(pindex))\n         {\n             i++;\n         }"
      },
      {
        "sha": "8eea15c0689ccdcadb61ff358e8834e13c514673",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -9,6 +9,7 @@\n #include <string>\n #include <map>\n \n+class CBlockIndex;\n class CZMQAbstractNotifier;\n \n class CZMQNotificationInterface : public CValidationInterface\n@@ -23,7 +24,7 @@ class CZMQNotificationInterface : public CValidationInterface\n \n protected: // CValidationInterface\n     void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n-    void UpdatedBlockTip(const uint256 &newHashTip);\n+    void UpdatedBlockTip(const CBlockIndex *pindex);\n \n private:\n     CZMQNotificationInterface();"
      },
      {
        "sha": "4c3eb8f2d9666debb02c692e4f413266d4583c23",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -116,8 +116,9 @@ void CZMQAbstractPublishNotifier::Shutdown()\n     psocket = 0;\n }\n \n-bool CZMQPublishHashBlockNotifier::NotifyBlock(const uint256 &hash)\n+bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n+    uint256 hash = pindex->GetBlockHash();\n     LogPrint(\"zmq\", \"Publish hash block %s\\n\", hash.GetHex());\n     char data[32];\n     for (unsigned int i = 0; i < 32; i++)\n@@ -137,18 +138,15 @@ bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &t\n     return rc == 0;\n }\n \n-bool CZMQPublishRawBlockNotifier::NotifyBlock(const uint256 &hash)\n+bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n-    LogPrint(\"zmq\", \"Publish raw block %s\\n\", hash.GetHex());\n+    LogPrint(\"zmq\", \"Publish raw block %s\\n\", pindex->GetBlockHash().GetHex());\n \n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     {\n         LOCK(cs_main);\n-\n         CBlock block;\n-        CBlockIndex* pblockindex = mapBlockIndex[hash];\n-\n-        if(!ReadBlockFromDisk(block, pblockindex))\n+        if(!ReadBlockFromDisk(block, pindex))\n         {\n             zmqError(\"Can't read block from disk\");\n             return false;"
      },
      {
        "sha": "44d5cbea67d2031446ac47df030c90165772af5e",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f44530bc38fb8367c2b9bde21492b545e7f7f26/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "patch": "@@ -7,6 +7,8 @@\n \n #include \"zmqabstractnotifier.h\"\n \n+class CBlockIndex;\n+\n class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n {\n public:\n@@ -17,7 +19,7 @@ class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n class CZMQPublishHashBlockNotifier : public CZMQAbstractPublishNotifier\n {\n public:\n-    bool NotifyBlock(const uint256 &hash);\n+    bool NotifyBlock(const CBlockIndex *pindex);\n };\n \n class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n@@ -29,7 +31,7 @@ class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n {\n public:\n-    bool NotifyBlock(const uint256 &hash);\n+    bool NotifyBlock(const CBlockIndex *pindex);\n };\n \n class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier"
      }
    ]
  },
  {
    "sha": "535ed9223dcb32bf90ead5b2c95052838b780620",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzVlZDkyMjNkY2IzMmJmOTBlYWQ1YjJjOTUwNTI4MzhiNzgwNjIw",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-09-24T17:13:38Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-09-30T13:24:42Z"
      },
      "message": "Simple benchmarking framework\n\nBenchmarking framework, loosely based on google's micro-benchmarking\nlibrary (https://github.com/google/benchmark)\n\nWny not use the Google Benchmark framework? Because adding Even More Dependencies\nisn't worth it. If we get a dozen or three benchmarks and need nanosecond-accurate\ntimings of threaded code then switching to the full-blown Google Benchmark library\nshould be considered.\n\nThe benchmark framework is hard-coded to run each benchmark for one wall-clock second,\nand then spits out .csv-format timing information to stdout. It is left as an\nexercise for later (or maybe never) to add command-line arguments to specify which\nbenchmark(s) to run, how long to run them for, how to format results, etc etc etc.\nAgain, see the Google Benchmark framework for where that might end up.\n\nSee src/bench/MilliSleep.cpp for a sanity-test benchmark that just benchmarks\n'sleep 100 milliseconds.'\n\nTo compile and run benchmarks:\n  cd src; make bench\n\nSample output:\n\nBenchmark,count,min,max,average\nSleep100ms,10,0.101854,0.105059,0.103881",
      "tree": {
        "sha": "d6902ff38a0e70595a85e00868da6fccc3b01152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6902ff38a0e70595a85e00868da6fccc3b01152"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/535ed9223dcb32bf90ead5b2c95052838b780620",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlYL4poACgkQdYgkL74406gNBgCfQGxeJcmIeKwk4j/f6ZPPMPEE\nbJoAn2E47SMWX6TlrMetGOaoPOiz3Nxb\n=zQgc\n-----END PGP SIGNATURE-----",
        "payload": "tree d6902ff38a0e70595a85e00868da6fccc3b01152\nparent 1a9f19a78daa392baf2e062bddff597ce0ce30b6\nauthor Gavin Andresen <gavinandresen@gmail.com> 1443114818 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1443619482 -0400\n\nSimple benchmarking framework\n\nBenchmarking framework, loosely based on google's micro-benchmarking\nlibrary (https://github.com/google/benchmark)\n\nWny not use the Google Benchmark framework? Because adding Even More Dependencies\nisn't worth it. If we get a dozen or three benchmarks and need nanosecond-accurate\ntimings of threaded code then switching to the full-blown Google Benchmark library\nshould be considered.\n\nThe benchmark framework is hard-coded to run each benchmark for one wall-clock second,\nand then spits out .csv-format timing information to stdout. It is left as an\nexercise for later (or maybe never) to add command-line arguments to specify which\nbenchmark(s) to run, how long to run them for, how to format results, etc etc etc.\nAgain, see the Google Benchmark framework for where that might end up.\n\nSee src/bench/MilliSleep.cpp for a sanity-test benchmark that just benchmarks\n'sleep 100 milliseconds.'\n\nTo compile and run benchmarks:\n  cd src; make bench\n\nSample output:\n\nBenchmark,count,min,max,average\nSleep100ms,10,0.101854,0.105059,0.103881\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/535ed9223dcb32bf90ead5b2c95052838b780620",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/535ed9223dcb32bf90ead5b2c95052838b780620",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/535ed9223dcb32bf90ead5b2c95052838b780620/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a9f19a78daa392baf2e062bddff597ce0ce30b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a9f19a78daa392baf2e062bddff597ce0ce30b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a9f19a78daa392baf2e062bddff597ce0ce30b6"
      }
    ],
    "stats": {
      "total": 222,
      "additions": 222,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24ce0f177595de90a76ead3ffb62abf635bb0bb8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -91,6 +91,11 @@ AC_ARG_ENABLE(tests,\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--enable-bench],[compile benchmarks (default is yes)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n AC_ARG_WITH([comparison-tool],\n     AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n     [use_comparison_tool=$withval],\n@@ -881,6 +886,7 @@ AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])"
      },
      {
        "sha": "45346df9544c654c5733715ee4f1e7f0c9873f4a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -61,6 +61,7 @@ endif\n \n bin_PROGRAMS =\n TESTS =\n+BENCHMARKS =\n \n if BUILD_BITCOIND\n   bin_PROGRAMS += bitcoind\n@@ -445,6 +446,10 @@ if ENABLE_TESTS\n include Makefile.test.include\n endif\n \n+if ENABLE_BENCH\n+include Makefile.bench.include\n+endif\n+\n if ENABLE_QT\n include Makefile.qt.include\n endif"
      },
      {
        "sha": "126e3a102f3a8f4bf58ad7fa9ef946d69a12f6f1",
        "filename": "src/Makefile.bench.include",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -0,0 +1,45 @@\n+bin_PROGRAMS += bench/bench_bitcoin\n+BENCH_SRCDIR = bench\n+BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+\n+\n+bench_bench_bitcoin_SOURCES = \\\n+  bench/bench_bitcoin.cpp \\\n+  bench/bench.cpp \\\n+  bench/bench.h \\\n+  bench/MilliSleep.cpp\n+\n+bench_bench_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_LDADD = \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+if ENABLE_ZMQ\n+bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n+\n+if ENABLE_WALLET\n+bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+\n+CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno\n+\n+CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n+\n+bitcoin_bench: $(BENCH_BINARY)\n+\n+bench: $(BENCH_BINARY) FORCE\n+\t$(BENCH_BINARY)\n+\n+bitcoin_bench_clean : FORCE\n+\trm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)"
      },
      {
        "sha": "991397a234aded0c4e9fdec89debe918391add5b",
        "filename": "src/bench/MilliSleep.cpp",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/MilliSleep.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/MilliSleep.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/MilliSleep.cpp?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -0,0 +1,16 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"\n+#include \"main.h\"\n+#include \"utiltime.h\"\n+\n+static void Sleep100ms(benchmark::State& state)\n+{\n+    while (state.KeepRunning()) {\n+        MilliSleep(100);\n+    }\n+}\n+\n+BENCHMARK(Sleep100ms);"
      },
      {
        "sha": "57208076095a468d3a41f847c63065da2ab3baea",
        "filename": "src/bench/bench.cpp",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -0,0 +1,60 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"bench.h\"\n+#include <iostream>\n+#include <sys/time.h>\n+\n+using namespace benchmark;\n+\n+std::map<std::string, BenchFunction> BenchRunner::benchmarks;\n+\n+static double gettimedouble(void) {\n+    struct timeval tv;\n+    gettimeofday(&tv, NULL);\n+    return tv.tv_usec * 0.000001 + tv.tv_sec;\n+}\n+\n+BenchRunner::BenchRunner(std::string name, BenchFunction func)\n+{\n+    benchmarks.insert(std::make_pair(name, func));\n+}\n+\n+void\n+BenchRunner::RunAll(double elapsedTimeForOne)\n+{\n+    std::cout << \"Benchmark\" << \",\" << \"count\" << \",\" << \"min\" << \",\" << \"max\" << \",\" << \"average\" << \"\\n\";\n+\n+    for (std::map<std::string,BenchFunction>::iterator it = benchmarks.begin();\n+         it != benchmarks.end(); ++it) {\n+\n+        State state(it->first, elapsedTimeForOne);\n+        BenchFunction& func = it->second;\n+        func(state);\n+    }\n+}\n+\n+bool State::KeepRunning()\n+{\n+    double now = gettimedouble();\n+    if (count == 0) {\n+        beginTime = now;\n+    }\n+    else {\n+        double elapsedOne = now - lastTime;\n+        if (elapsedOne < minTime) minTime = elapsedOne;\n+        if (elapsedOne > maxTime) maxTime = elapsedOne;\n+    }\n+    lastTime = now;\n+    ++count;\n+\n+    if (now - beginTime < maxElapsed) return true; // Keep going\n+\n+    --count;\n+\n+    // Output results\n+    double average = (now-beginTime)/count;\n+    std::cout << name << \",\" << count << \",\" << minTime << \",\" << maxTime << \",\" << average << \"\\n\";\n+\n+    return false;\n+}"
      },
      {
        "sha": "fee9b8c38d1c45624d5f279ce03a99233e6d7220",
        "filename": "src/bench/bench.h",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -0,0 +1,69 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BENCH_H\n+#define BITCOIN_BENCH_H\n+\n+// Simple micro-benchmarking framework; API mostly matches a subset of the Google Benchmark\n+// framework (see https://github.com/google/benchmark)\n+// Wny not use the Google Benchmark framework? Because adding Yet Another Dependency\n+// (that uses cmake as its build system and has lots of features we don't need) isn't\n+// worth it.\n+\n+/*\n+ * Usage:\n+\n+static void CODE_TO_TIME(benchmark::State& state)\n+{\n+    ... do any setup needed...\n+    while (state.KeepRunning()) {\n+       ... do stuff you want to time...\n+    }\n+    ... do any cleanup needed...\n+}\n+\n+BENCHMARK(CODE_TO_TIME);\n+\n+ */\n+\n+\n+#include <boost/function.hpp>\n+#include <boost/preprocessor/cat.hpp>\n+#include <boost/preprocessor/stringize.hpp>\n+#include <map>\n+#include <string>\n+\n+namespace benchmark {\n+\n+    class State {\n+        std::string name;\n+        double maxElapsed;\n+        double beginTime;\n+        double lastTime, minTime, maxTime;\n+        int64_t count;\n+    public:\n+        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n+            minTime = std::numeric_limits<double>::max();\n+            maxTime = std::numeric_limits<double>::min();\n+        }\n+        bool KeepRunning();\n+    };\n+\n+    typedef boost::function<void(State&)> BenchFunction;\n+\n+    class BenchRunner\n+    {\n+        static std::map<std::string, BenchFunction> benchmarks;\n+\n+    public:\n+        BenchRunner(std::string name, BenchFunction func);\n+\n+        static void RunAll(double elapsedTimeForOne=1.0);\n+    };\n+}\n+\n+// BENCHMARK(foo) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", foo);\n+#define BENCHMARK(n) \\\n+    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n+\n+#endif // BITCOIN_BENCH_H"
      },
      {
        "sha": "db1402216d823a93165fe2af90520f2bf41265bf",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/535ed9223dcb32bf90ead5b2c95052838b780620/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=535ed9223dcb32bf90ead5b2c95052838b780620",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"\n+\n+#include \"key.h\"\n+#include \"main.h\"\n+#include \"util.h\"\n+\n+int\n+main(int argc, char** argv)\n+{\n+    ECC_Start();\n+    SetupEnvironment();\n+    fPrintToDebugLog = false; // don't want to write to debug.log file\n+\n+    benchmark::BenchRunner::RunAll();\n+\n+    ECC_Stop();\n+}"
      }
    ]
  },
  {
    "sha": "7072c544b52774ac5a22835121e8e2747ad61158",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDcyYzU0NGI1Mjc3NGFjNWEyMjgzNTEyMWU4ZTI3NDdhZDYxMTU4",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-09-29T21:17:24Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-09-30T13:24:42Z"
      },
      "message": "Support very-fast-running benchmarks\n\nAvoid calling gettimeofday every time through the benchmarking loop, by keeping\ntrack of how long each loop takes and doubling the number of iterations done\nbetween time checks when they take less than 1/16'th of the total elapsed time.",
      "tree": {
        "sha": "61bab3fc434f5c058ef43a73cf2cc3b4fd78661a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61bab3fc434f5c058ef43a73cf2cc3b4fd78661a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7072c544b52774ac5a22835121e8e2747ad61158",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlYL4poACgkQdYgkL74406hzfgCeIM6/Fp4CrJ5K+xoexZFysBhD\ngboAn2BrqDz6DggITJidZsOZQvLzaMae\n=Ze/N\n-----END PGP SIGNATURE-----",
        "payload": "tree 61bab3fc434f5c058ef43a73cf2cc3b4fd78661a\nparent 535ed9223dcb32bf90ead5b2c95052838b780620\nauthor Gavin Andresen <gavinandresen@gmail.com> 1443561444 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1443619482 -0400\n\nSupport very-fast-running benchmarks\n\nAvoid calling gettimeofday every time through the benchmarking loop, by keeping\ntrack of how long each loop takes and doubling the number of iterations done\nbetween time checks when they take less than 1/16'th of the total elapsed time.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7072c544b52774ac5a22835121e8e2747ad61158",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7072c544b52774ac5a22835121e8e2747ad61158",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7072c544b52774ac5a22835121e8e2747ad61158/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "535ed9223dcb32bf90ead5b2c95052838b780620",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/535ed9223dcb32bf90ead5b2c95052838b780620",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/535ed9223dcb32bf90ead5b2c95052838b780620"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 32,
      "deletions": 4
    },
    "files": [
      {
        "sha": "61fe9e287d80e7597009014d6dd7fa7e0c5eeedf",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7072c544b52774ac5a22835121e8e2747ad61158/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7072c544b52774ac5a22835121e8e2747ad61158/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=7072c544b52774ac5a22835121e8e2747ad61158",
        "patch": "@@ -7,7 +7,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bench_bitcoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n-  bench/MilliSleep.cpp\n+  bench/Examples.cpp\n \n bench_bench_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n bench_bench_bitcoin_LDADD = \\"
      },
      {
        "sha": "b6b020a97189d84e93d24a8a7d88fff17859aa43",
        "filename": "src/bench/Examples.cpp",
        "status": "renamed",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7072c544b52774ac5a22835121e8e2747ad61158/src/bench/Examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7072c544b52774ac5a22835121e8e2747ad61158/src/bench/Examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/Examples.cpp?ref=7072c544b52774ac5a22835121e8e2747ad61158",
        "patch": "@@ -6,6 +6,8 @@\n #include \"main.h\"\n #include \"utiltime.h\"\n \n+// Sanity test: this should loop ten times, and\n+// min/max/average should be close to 100ms.\n static void Sleep100ms(benchmark::State& state)\n {\n     while (state.KeepRunning()) {\n@@ -14,3 +16,19 @@ static void Sleep100ms(benchmark::State& state)\n }\n \n BENCHMARK(Sleep100ms);\n+\n+// Extremely fast-running benchmark:\n+#include <math.h>\n+\n+volatile double sum = 0.0; // volatile, global so not optimized away\n+\n+static void Trig(benchmark::State& state)\n+{\n+    double d = 0.01;\n+    while (state.KeepRunning()) {\n+        sum += sin(d);\n+        d += 0.000001;\n+    }\n+}\n+\n+BENCHMARK(Trig);",
        "previous_filename": "src/bench/MilliSleep.cpp"
      },
      {
        "sha": "89c3b0cc2a1b7054d00cfb6b33c50f88ffd7c329",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7072c544b52774ac5a22835121e8e2747ad61158/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7072c544b52774ac5a22835121e8e2747ad61158/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=7072c544b52774ac5a22835121e8e2747ad61158",
        "patch": "@@ -36,14 +36,22 @@ BenchRunner::RunAll(double elapsedTimeForOne)\n \n bool State::KeepRunning()\n {\n-    double now = gettimedouble();\n+    double now;\n     if (count == 0) {\n-        beginTime = now;\n+        beginTime = now = gettimedouble();\n     }\n     else {\n-        double elapsedOne = now - lastTime;\n+        // timeCheckCount is used to avoid calling gettime most of the time,\n+        // so benchmarks that run very quickly get consistent results.\n+        if ((count+1)%timeCheckCount != 0) {\n+            ++count;\n+            return true; // keep going\n+        }\n+        now = gettimedouble();\n+        double elapsedOne = (now - lastTime)/timeCheckCount;\n         if (elapsedOne < minTime) minTime = elapsedOne;\n         if (elapsedOne > maxTime) maxTime = elapsedOne;\n+        if (elapsedOne*timeCheckCount < maxElapsed/16) timeCheckCount *= 2;\n     }\n     lastTime = now;\n     ++count;"
      },
      {
        "sha": "bf591a2be6ff59d67181abf8ddd13f45349789dd",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7072c544b52774ac5a22835121e8e2747ad61158/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7072c544b52774ac5a22835121e8e2747ad61158/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=7072c544b52774ac5a22835121e8e2747ad61158",
        "patch": "@@ -41,10 +41,12 @@ namespace benchmark {\n         double beginTime;\n         double lastTime, minTime, maxTime;\n         int64_t count;\n+        int64_t timeCheckCount;\n     public:\n         State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n             minTime = std::numeric_limits<double>::max();\n             maxTime = std::numeric_limits<double>::min();\n+            timeCheckCount = 1;\n         }\n         bool KeepRunning();\n     };"
      }
    ]
  },
  {
    "sha": "5424d416c2d0fd692ac55d4a2fd761a35333597d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDI0ZDQxNmMyZDBmZDY5MmFjNTVkNGEyZmQ3NjFhMzUzMzM1OTdk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T12:37:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T15:09:35Z"
      },
      "message": "doc: Change #bitcoin-dev IRC channel to #bitcoin-core-dev\n\nSplit off Bitcoin Core project development discussion from the general\nBitcoin development channel.",
      "tree": {
        "sha": "33f615e160814b4b5f035a589793ed4e14a67023",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f615e160814b4b5f035a589793ed4e14a67023"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5424d416c2d0fd692ac55d4a2fd761a35333597d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5424d416c2d0fd692ac55d4a2fd761a35333597d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5424d416c2d0fd692ac55d4a2fd761a35333597d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5424d416c2d0fd692ac55d4a2fd761a35333597d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f44530bc38fb8367c2b9bde21492b545e7f7f26"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "275367ebbbcb6644af552b0946cd8e89ca62df7b",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5424d416c2d0fd692ac55d4a2fd761a35333597d/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5424d416c2d0fd692ac55d4a2fd761a35333597d/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=5424d416c2d0fd692ac55d4a2fd761a35333597d",
        "patch": "@@ -36,7 +36,7 @@ The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-dev.\n+Developer IRC can be found on Freenode at #bitcoin-core-dev.\n \n Testing\n -------"
      },
      {
        "sha": "3e3f4a294ff4e32b444d4feddf4e1d26d6d5d248",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5424d416c2d0fd692ac55d4a2fd761a35333597d/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5424d416c2d0fd692ac55d4a2fd761a35333597d/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=5424d416c2d0fd692ac55d4a2fd761a35333597d",
        "patch": "@@ -64,7 +64,8 @@ The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss on [#bitcoin-dev](http://webchat.freenode.net/?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n+* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "b06975e1d8da48427827b3cca74d83d4e53c602a",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5424d416c2d0fd692ac55d4a2fd761a35333597d/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5424d416c2d0fd692ac55d4a2fd761a35333597d/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=5424d416c2d0fd692ac55d4a2fd761a35333597d",
        "patch": "@@ -106,6 +106,6 @@ To create a new language template, you will need to edit the languages manifest\n **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.\n \n ### Questions and general assistance\n-The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*.You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-dev`.\n+The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-core-dev`.\n \n If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/bitcoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates."
      }
    ]
  },
  {
    "sha": "1119cc3f5918575ca397518c9fd31a64704c7e4f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTE5Y2MzZjU5MTg1NzVjYTM5NzUxOGM5ZmQzMWE2NDcwNGM3ZTRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T15:12:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-30T15:13:34Z"
      },
      "message": "Merge pull request #6741\n\n5424d41 doc: Change #bitcoin-dev IRC channel to #bitcoin-core-dev (Wladimir J. van der Laan)",
      "tree": {
        "sha": "33f615e160814b4b5f035a589793ed4e14a67023",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f615e160814b4b5f035a589793ed4e14a67023"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1119cc3f5918575ca397518c9fd31a64704c7e4f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWC/weAAoJEHSBCwEjRsmm1/kIAIWulpzW5ebkY5Patz75XZFP\nxmDl9GwRkYWnQsXTqo5jMhBzuRg0Li20yMGybxSmqdi6Zu8nz9LP7rdfo642KXRu\n781UqAaDOc47j5FsPQ+tVs7+zPn9dctVyF3+eiqMjyj/Ctolk6b1Dx0bgKRNVzXY\nOV5uGgJoxGv00ZOZwujajtIeL93yT0g0uJwAXfkrAsA2e2I+dmV6zHzSX70d93h7\nX1jMIcGajkgbN3xWSD2k66mkK89stuq3dDFrY0oPh5bEfoXGuYN0FZgA8hqVbtLs\nMIAClVAWKeZ8b8UExA6erSFCCEMq0A15VnUJh0L01tR7WvzGG3TtL6OqkGaiGNs=\n=AB+y\n-----END PGP SIGNATURE-----",
        "payload": "tree 33f615e160814b4b5f035a589793ed4e14a67023\nparent 4f44530bc38fb8367c2b9bde21492b545e7f7f26\nparent 5424d416c2d0fd692ac55d4a2fd761a35333597d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443625920 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443626014 +0200\n\nMerge pull request #6741\n\n5424d41 doc: Change #bitcoin-dev IRC channel to #bitcoin-core-dev (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1119cc3f5918575ca397518c9fd31a64704c7e4f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1119cc3f5918575ca397518c9fd31a64704c7e4f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1119cc3f5918575ca397518c9fd31a64704c7e4f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f44530bc38fb8367c2b9bde21492b545e7f7f26"
      },
      {
        "sha": "5424d416c2d0fd692ac55d4a2fd761a35333597d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5424d416c2d0fd692ac55d4a2fd761a35333597d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5424d416c2d0fd692ac55d4a2fd761a35333597d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "275367ebbbcb6644af552b0946cd8e89ca62df7b",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -36,7 +36,7 @@ The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-dev.\n+Developer IRC can be found on Freenode at #bitcoin-core-dev.\n \n Testing\n -------"
      },
      {
        "sha": "3e3f4a294ff4e32b444d4feddf4e1d26d6d5d248",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -64,7 +64,8 @@ The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss on [#bitcoin-dev](http://webchat.freenode.net/?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n+* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "b06975e1d8da48427827b3cca74d83d4e53c602a",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -106,6 +106,6 @@ To create a new language template, you will need to edit the languages manifest\n **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.\n \n ### Questions and general assistance\n-The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*.You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-dev`.\n+The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-core-dev`.\n \n If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/bitcoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates."
      }
    ]
  },
  {
    "sha": "58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODk4MWQ0ZjdkM2NhYjg3MjIzOWY1YWEzYTgxMjVlMDZjYjkzYmZk",
    "commit": {
      "author": {
        "name": "Arne Brutschy",
        "email": "abrutschy@xylon.de",
        "date": "2015-09-30T15:57:28Z"
      },
      "committer": {
        "name": "Arne Brutschy",
        "email": "abrutschy@xylon.de",
        "date": "2015-09-30T15:57:28Z"
      },
      "message": "Changed logging to make -logtimestamps to work also for -printtoconsole",
      "tree": {
        "sha": "08e990c35bea2d1da8da249036bb4a8be2b57a81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08e990c35bea2d1da8da249036bb4a8be2b57a81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58981d4f7d3cab872239f5aa3a8125e06cb93bfd/comments",
    "author": {
      "login": "arnuschky",
      "id": 179920,
      "node_id": "MDQ6VXNlcjE3OTkyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnuschky",
      "html_url": "https://github.com/arnuschky",
      "followers_url": "https://api.github.com/users/arnuschky/followers",
      "following_url": "https://api.github.com/users/arnuschky/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnuschky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnuschky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnuschky/subscriptions",
      "organizations_url": "https://api.github.com/users/arnuschky/orgs",
      "repos_url": "https://api.github.com/users/arnuschky/repos",
      "events_url": "https://api.github.com/users/arnuschky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnuschky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "arnuschky",
      "id": 179920,
      "node_id": "MDQ6VXNlcjE3OTkyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnuschky",
      "html_url": "https://github.com/arnuschky",
      "followers_url": "https://api.github.com/users/arnuschky/followers",
      "following_url": "https://api.github.com/users/arnuschky/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnuschky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnuschky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnuschky/subscriptions",
      "organizations_url": "https://api.github.com/users/arnuschky/orgs",
      "repos_url": "https://api.github.com/users/arnuschky/repos",
      "events_url": "https://api.github.com/users/arnuschky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnuschky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f44530bc38fb8367c2b9bde21492b545e7f7f26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f44530bc38fb8367c2b9bde21492b545e7f7f26"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8192a7c71ca6fad3568f4e52dfa702b9cfdfd69f",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58981d4f7d3cab872239f5aa3a8125e06cb93bfd/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58981d4f7d3cab872239f5aa3a8125e06cb93bfd/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
        "patch": "@@ -280,19 +280,20 @@ int LogPrintStr(const std::string &str)\n {\n     int ret = 0; // Returns total number of characters written\n     static bool fStartedNewLine = true;\n+\n+    string strTimestamped = LogTimestampStr(str, &fStartedNewLine);\n+\n     if (fPrintToConsole)\n     {\n         // print to console\n-        ret = fwrite(str.data(), 1, str.size(), stdout);\n+        ret = fwrite(strTimestamped.data(), 1, strTimestamped.size(), stdout);\n         fflush(stdout);\n     }\n     else if (fPrintToDebugLog)\n     {\n         boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n         boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n-        string strTimestamped = LogTimestampStr(str, &fStartedNewLine);\n-\n         // buffer if we haven't opened the log yet\n         if (fileout == NULL) {\n             assert(vMsgsBeforeOpenLog);"
      }
    ]
  },
  {
    "sha": "0917306fdf39b12556b95fe91be2e7b44d34bb9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTE3MzA2ZmRmMzliMTI1NTZiOTVmZTkxYmUyZTdiNDRkMzRiYjlm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-04T14:59:04Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T08:36:50Z"
      },
      "message": "remove univalue, prepare for subtree",
      "tree": {
        "sha": "49e89d23481cb667edae981c01a12a35069d9990",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49e89d23481cb667edae981c01a12a35069d9990"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0917306fdf39b12556b95fe91be2e7b44d34bb9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0917306fdf39b12556b95fe91be2e7b44d34bb9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0917306fdf39b12556b95fe91be2e7b44d34bb9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0917306fdf39b12556b95fe91be2e7b44d34bb9f/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1119cc3f5918575ca397518c9fd31a64704c7e4f"
      }
    ],
    "stats": {
      "total": 1406,
      "additions": 0,
      "deletions": 1406
    },
    "files": [
      {
        "sha": "5e5a4d4aed43a8a03cf1dbaa24323075ddcac0d9",
        "filename": "src/univalue/gen.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 77,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/gen.cpp?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -1,77 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-//\n-// To re-create univalue_escapes.h:\n-// $ g++ -o gen gen.cpp\n-// $ ./gen > univalue_escapes.h\n-//\n-\n-#include <ctype.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include \"univalue.h\"\n-\n-using namespace std;\n-\n-static bool initEscapes;\n-static const char *escapes[256];\n-\n-static void initJsonEscape()\n-{\n-    escapes[(int)'\"'] = \"\\\\\\\"\";\n-    escapes[(int)'\\\\'] = \"\\\\\\\\\";\n-    escapes[(int)'\\b'] = \"\\\\b\";\n-    escapes[(int)'\\f'] = \"\\\\f\";\n-    escapes[(int)'\\n'] = \"\\\\n\";\n-    escapes[(int)'\\r'] = \"\\\\r\";\n-    escapes[(int)'\\t'] = \"\\\\t\";\n-\n-    initEscapes = true;\n-}\n-\n-static void outputEscape()\n-{\n-\tprintf(\t\"// Automatically generated file. Do not modify.\\n\"\n-\t\t\"#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"static const char *escapes[256] = {\\n\");\n-\n-\tfor (unsigned int i = 0; i < 256; i++) {\n-\t\tif (!escapes[i]) {\n-\t\t\tprintf(\"\\tNULL,\\n\");\n-\t\t} else {\n-\t\t\tprintf(\"\\t\\\"\");\n-\n-\t\t\tunsigned int si;\n-\t\t\tfor (si = 0; si < strlen(escapes[i]); si++) {\n-\t\t\t\tchar ch = escapes[i][si];\n-\t\t\t\tswitch (ch) {\n-\t\t\t\tcase '\"':\n-\t\t\t\t\tprintf(\"\\\\\\\"\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase '\\\\':\n-\t\t\t\t\tprintf(\"\\\\\\\\\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tdefault:\n-\t\t\t\t\tprintf(\"%c\", escapes[i][si]);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tprintf(\"\\\",\\n\");\n-\t\t}\n-\t}\n-\n-\tprintf(\t\"};\\n\"\n-\t\t\"#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\");\n-}\n-\n-int main (int argc, char *argv[])\n-{\n-\tinitJsonEscape();\n-\toutputEscape();\n-\treturn 0;\n-}\n-"
      },
      {
        "sha": "1d49a2cfc9e65680535e43a07b9dfdfb4cbf244a",
        "filename": "src/univalue/univalue.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 303,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue.cpp?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -1,303 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <stdint.h>\n-#include <ctype.h>\n-#include <iomanip>\n-#include <sstream>\n-#include <stdexcept>      // std::runtime_error\n-\n-#include \"univalue.h\"\n-\n-#include \"utilstrencodings.h\" // ParseXX\n-\n-using namespace std;\n-\n-const UniValue NullUniValue;\n-\n-void UniValue::clear()\n-{\n-    typ = VNULL;\n-    val.clear();\n-    keys.clear();\n-    values.clear();\n-}\n-\n-bool UniValue::setNull()\n-{\n-    clear();\n-    return true;\n-}\n-\n-bool UniValue::setBool(bool val_)\n-{\n-    clear();\n-    typ = VBOOL;\n-    if (val_)\n-        val = \"1\";\n-    return true;\n-}\n-\n-static bool validNumStr(const string& s)\n-{\n-    string tokenVal;\n-    unsigned int consumed;\n-    enum jtokentype tt = getJsonToken(tokenVal, consumed, s.c_str());\n-    return (tt == JTOK_NUMBER);\n-}\n-\n-bool UniValue::setNumStr(const string& val_)\n-{\n-    if (!validNumStr(val_))\n-        return false;\n-\n-    clear();\n-    typ = VNUM;\n-    val = val_;\n-    return true;\n-}\n-\n-bool UniValue::setInt(uint64_t val)\n-{\n-    string s;\n-    ostringstream oss;\n-\n-    oss << val;\n-\n-    return setNumStr(oss.str());\n-}\n-\n-bool UniValue::setInt(int64_t val)\n-{\n-    string s;\n-    ostringstream oss;\n-\n-    oss << val;\n-\n-    return setNumStr(oss.str());\n-}\n-\n-bool UniValue::setFloat(double val)\n-{\n-    string s;\n-    ostringstream oss;\n-\n-    oss << std::setprecision(16) << val;\n-\n-    bool ret = setNumStr(oss.str());\n-    typ = VNUM;\n-    return ret;\n-}\n-\n-bool UniValue::setStr(const string& val_)\n-{\n-    clear();\n-    typ = VSTR;\n-    val = val_;\n-    return true;\n-}\n-\n-bool UniValue::setArray()\n-{\n-    clear();\n-    typ = VARR;\n-    return true;\n-}\n-\n-bool UniValue::setObject()\n-{\n-    clear();\n-    typ = VOBJ;\n-    return true;\n-}\n-\n-bool UniValue::push_back(const UniValue& val)\n-{\n-    if (typ != VARR)\n-        return false;\n-\n-    values.push_back(val);\n-    return true;\n-}\n-\n-bool UniValue::push_backV(const std::vector<UniValue>& vec)\n-{\n-    if (typ != VARR)\n-        return false;\n-\n-    values.insert(values.end(), vec.begin(), vec.end());\n-\n-    return true;\n-}\n-\n-bool UniValue::pushKV(const std::string& key, const UniValue& val)\n-{\n-    if (typ != VOBJ)\n-        return false;\n-\n-    keys.push_back(key);\n-    values.push_back(val);\n-    return true;\n-}\n-\n-bool UniValue::pushKVs(const UniValue& obj)\n-{\n-    if (typ != VOBJ || obj.typ != VOBJ)\n-        return false;\n-\n-    for (unsigned int i = 0; i < obj.keys.size(); i++) {\n-        keys.push_back(obj.keys[i]);\n-        values.push_back(obj.values[i]);\n-    }\n-\n-    return true;\n-}\n-\n-int UniValue::findKey(const std::string& key) const\n-{\n-    for (unsigned int i = 0; i < keys.size(); i++) {\n-        if (keys[i] == key)\n-            return (int) i;\n-    }\n-\n-    return -1;\n-}\n-\n-bool UniValue::checkObject(const std::map<std::string,UniValue::VType>& t)\n-{\n-    for (std::map<std::string,UniValue::VType>::const_iterator it = t.begin();\n-         it != t.end(); it++) {\n-        int idx = findKey(it->first);\n-        if (idx < 0)\n-            return false;\n-\n-        if (values[idx].getType() != it->second)\n-            return false;\n-    }\n-\n-    return true;\n-}\n-\n-const UniValue& UniValue::operator[](const std::string& key) const\n-{\n-    if (typ != VOBJ)\n-        return NullUniValue;\n-\n-    int index = findKey(key);\n-    if (index < 0)\n-        return NullUniValue;\n-\n-    return values[index];\n-}\n-\n-const UniValue& UniValue::operator[](unsigned int index) const\n-{\n-    if (typ != VOBJ && typ != VARR)\n-        return NullUniValue;\n-    if (index >= values.size())\n-        return NullUniValue;\n-\n-    return values[index];\n-}\n-\n-const char *uvTypeName(UniValue::VType t)\n-{\n-    switch (t) {\n-    case UniValue::VNULL: return \"null\";\n-    case UniValue::VBOOL: return \"bool\";\n-    case UniValue::VOBJ: return \"object\";\n-    case UniValue::VARR: return \"array\";\n-    case UniValue::VSTR: return \"string\";\n-    case UniValue::VNUM: return \"number\";\n-    }\n-\n-    // not reached\n-    return NULL;\n-}\n-\n-const UniValue& find_value( const UniValue& obj, const std::string& name)\n-{\n-    for (unsigned int i = 0; i < obj.keys.size(); i++)\n-    {\n-        if( obj.keys[i] == name )\n-        {\n-            return obj.values[i];\n-        }\n-    }\n-\n-    return NullUniValue;\n-}\n-\n-std::vector<std::string> UniValue::getKeys() const\n-{\n-    if (typ != VOBJ)\n-        throw std::runtime_error(\"JSON value is not an object as expected\");\n-    return keys;\n-}\n-\n-std::vector<UniValue> UniValue::getValues() const\n-{\n-    if (typ != VOBJ && typ != VARR)\n-        throw std::runtime_error(\"JSON value is not an object or array as expected\");\n-    return values;\n-}\n-\n-bool UniValue::get_bool() const\n-{\n-    if (typ != VBOOL)\n-        throw std::runtime_error(\"JSON value is not a boolean as expected\");\n-    return getBool();\n-}\n-\n-std::string UniValue::get_str() const\n-{\n-    if (typ != VSTR)\n-        throw std::runtime_error(\"JSON value is not a string as expected\");\n-    return getValStr();\n-}\n-\n-int UniValue::get_int() const\n-{\n-    if (typ != VNUM)\n-        throw std::runtime_error(\"JSON value is not an integer as expected\");\n-    int32_t retval;\n-    if (!ParseInt32(getValStr(), &retval))\n-        throw std::runtime_error(\"JSON integer out of range\");\n-    return retval;\n-}\n-\n-int64_t UniValue::get_int64() const\n-{\n-    if (typ != VNUM)\n-        throw std::runtime_error(\"JSON value is not an integer as expected\");\n-    int64_t retval;\n-    if (!ParseInt64(getValStr(), &retval))\n-        throw std::runtime_error(\"JSON integer out of range\");\n-    return retval;\n-}\n-\n-double UniValue::get_real() const\n-{\n-    if (typ != VNUM)\n-        throw std::runtime_error(\"JSON value is not a number as expected\");\n-    double retval;\n-    if (!ParseDouble(getValStr(), &retval))\n-        throw std::runtime_error(\"JSON double out of range\");\n-    return retval;\n-}\n-\n-const UniValue& UniValue::get_obj() const\n-{\n-    if (typ != VOBJ)\n-        throw std::runtime_error(\"JSON value is not an object as expected\");\n-    return *this;\n-}\n-\n-const UniValue& UniValue::get_array() const\n-{\n-    if (typ != VARR)\n-        throw std::runtime_error(\"JSON value is not an array as expected\");\n-    return *this;\n-}\n-"
      },
      {
        "sha": "4742b56f3d566d50d7588b035f38fb886f762f2d",
        "filename": "src/univalue/univalue.h",
        "status": "removed",
        "additions": 0,
        "deletions": 248,
        "changes": 248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue.h?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -1,248 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_UNIVALUE_UNIVALUE_H\n-#define BITCOIN_UNIVALUE_UNIVALUE_H\n-\n-#include <stdint.h>\n-#include <string>\n-#include <vector>\n-#include <map>\n-#include <cassert>\n-\n-#include <sstream>        // .get_int64()\n-#include <utility>        // std::pair\n-\n-class UniValue {\n-public:\n-    enum VType { VNULL, VOBJ, VARR, VSTR, VNUM, VBOOL, };\n-\n-    UniValue() { typ = VNULL; }\n-    UniValue(UniValue::VType initialType, const std::string& initialStr = \"\") {\n-        typ = initialType;\n-        val = initialStr;\n-    }\n-    UniValue(uint64_t val_) {\n-        setInt(val_);\n-    }\n-    UniValue(int64_t val_) {\n-        setInt(val_);\n-    }\n-    UniValue(bool val_) {\n-        setBool(val_);\n-    }\n-    UniValue(int val_) {\n-        setInt(val_);\n-    }\n-    UniValue(double val_) {\n-        setFloat(val_);\n-    }\n-    UniValue(const std::string& val_) {\n-        setStr(val_);\n-    }\n-    UniValue(const char *val_) {\n-        std::string s(val_);\n-        setStr(s);\n-    }\n-    ~UniValue() {}\n-\n-    void clear();\n-\n-    bool setNull();\n-    bool setBool(bool val);\n-    bool setNumStr(const std::string& val);\n-    bool setInt(uint64_t val);\n-    bool setInt(int64_t val);\n-    bool setInt(int val) { return setInt((int64_t)val); }\n-    bool setFloat(double val);\n-    bool setStr(const std::string& val);\n-    bool setArray();\n-    bool setObject();\n-\n-    enum VType getType() const { return typ; }\n-    const std::string& getValStr() const { return val; }\n-    bool empty() const { return (values.size() == 0); }\n-\n-    size_t size() const { return values.size(); }\n-\n-    bool getBool() const { return isTrue(); }\n-    bool checkObject(const std::map<std::string,UniValue::VType>& memberTypes);\n-    const UniValue& operator[](const std::string& key) const;\n-    const UniValue& operator[](unsigned int index) const;\n-    bool exists(const std::string& key) const { return (findKey(key) >= 0); }\n-\n-    bool isNull() const { return (typ == VNULL); }\n-    bool isTrue() const { return (typ == VBOOL) && (val == \"1\"); }\n-    bool isFalse() const { return (typ == VBOOL) && (val != \"1\"); }\n-    bool isBool() const { return (typ == VBOOL); }\n-    bool isStr() const { return (typ == VSTR); }\n-    bool isNum() const { return (typ == VNUM); }\n-    bool isArray() const { return (typ == VARR); }\n-    bool isObject() const { return (typ == VOBJ); }\n-\n-    bool push_back(const UniValue& val);\n-    bool push_back(const std::string& val_) {\n-        UniValue tmpVal(VSTR, val_);\n-        return push_back(tmpVal);\n-    }\n-    bool push_back(const char *val_) {\n-        std::string s(val_);\n-        return push_back(s);\n-    }\n-    bool push_backV(const std::vector<UniValue>& vec);\n-\n-    bool pushKV(const std::string& key, const UniValue& val);\n-    bool pushKV(const std::string& key, const std::string& val) {\n-        UniValue tmpVal(VSTR, val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, const char *val_) {\n-        std::string val(val_);\n-        return pushKV(key, val);\n-    }\n-    bool pushKV(const std::string& key, int64_t val) {\n-        UniValue tmpVal(val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, uint64_t val) {\n-        UniValue tmpVal(val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, int val) {\n-        UniValue tmpVal((int64_t)val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, double val) {\n-        UniValue tmpVal(val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKVs(const UniValue& obj);\n-\n-    std::string write(unsigned int prettyIndent = 0,\n-                      unsigned int indentLevel = 0) const;\n-\n-    bool read(const char *raw);\n-    bool read(const std::string& rawStr) {\n-        return read(rawStr.c_str());\n-    }\n-\n-private:\n-    UniValue::VType typ;\n-    std::string val;                       // numbers are stored as C++ strings\n-    std::vector<std::string> keys;\n-    std::vector<UniValue> values;\n-\n-    int findKey(const std::string& key) const;\n-    void writeArray(unsigned int prettyIndent, unsigned int indentLevel, std::string& s) const;\n-    void writeObject(unsigned int prettyIndent, unsigned int indentLevel, std::string& s) const;\n-\n-public:\n-    // Strict type-specific getters, these throw std::runtime_error if the\n-    // value is of unexpected type\n-    std::vector<std::string> getKeys() const;\n-    std::vector<UniValue> getValues() const;\n-    bool get_bool() const;\n-    std::string get_str() const;\n-    int get_int() const;\n-    int64_t get_int64() const;\n-    double get_real() const;\n-    const UniValue& get_obj() const;\n-    const UniValue& get_array() const;\n-\n-    enum VType type() const { return getType(); }\n-    bool push_back(std::pair<std::string,UniValue> pear) {\n-        return pushKV(pear.first, pear.second);\n-    }\n-    friend const UniValue& find_value( const UniValue& obj, const std::string& name);\n-};\n-\n-//\n-// The following were added for compatibility with json_spirit.\n-// Most duplicate other methods, and should be removed.\n-//\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, const char *cVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(cVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, std::string strVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(strVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, uint64_t u64Val)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(u64Val);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, int64_t i64Val)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(i64Val);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, bool iVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(iVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, int iVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(iVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, double dVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(dVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, const UniValue& uVal)\n-{\n-    std::string key(cKey);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(std::string key, const UniValue& uVal)\n-{\n-    return std::make_pair(key, uVal);\n-}\n-\n-enum jtokentype {\n-    JTOK_ERR        = -1,\n-    JTOK_NONE       = 0,                           // eof\n-    JTOK_OBJ_OPEN,\n-    JTOK_OBJ_CLOSE,\n-    JTOK_ARR_OPEN,\n-    JTOK_ARR_CLOSE,\n-    JTOK_COLON,\n-    JTOK_COMMA,\n-    JTOK_KW_NULL,\n-    JTOK_KW_TRUE,\n-    JTOK_KW_FALSE,\n-    JTOK_NUMBER,\n-    JTOK_STRING,\n-};\n-\n-extern enum jtokentype getJsonToken(std::string& tokenVal,\n-                                    unsigned int& consumed, const char *raw);\n-extern const char *uvTypeName(UniValue::VType t);\n-\n-extern const UniValue NullUniValue;\n-\n-const UniValue& find_value( const UniValue& obj, const std::string& name);\n-\n-#endif // BITCOIN_UNIVALUE_UNIVALUE_H"
      },
      {
        "sha": "4133b24ca11f85814a85359131c22bf20b3bfcaf",
        "filename": "src/univalue/univalue_escapes.h",
        "status": "removed",
        "additions": 0,
        "deletions": 262,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue_escapes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue_escapes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue_escapes.h?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -1,262 +0,0 @@\n-// Automatically generated file. Do not modify.\n-#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\n-#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\n-static const char *escapes[256] = {\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\t\"\\\\b\",\n-\t\"\\\\t\",\n-\t\"\\\\n\",\n-\tNULL,\n-\t\"\\\\f\",\n-\t\"\\\\r\",\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\t\"\\\\\\\"\",\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\t\"\\\\\\\\\",\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-};\n-#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H"
      },
      {
        "sha": "64591234cb12da4ba8dac3ca9853e8a77b66247f",
        "filename": "src/univalue/univalue_read.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 389,
        "changes": 389,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue_read.cpp?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -1,389 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <string.h>\n-#include <vector>\n-#include <stdio.h>\n-#include \"univalue.h\"\n-\n-using namespace std;\n-\n-// convert hexadecimal string to unsigned integer\n-static const char *hatoui(const char *first, const char *last,\n-                          unsigned int& out)\n-{\n-    unsigned int result = 0;\n-    for (; first != last; ++first)\n-    {\n-        int digit;\n-        if (isdigit(*first))\n-            digit = *first - '0';\n-\n-        else if (*first >= 'a' && *first <= 'f')\n-            digit = *first - 'a' + 10;\n-\n-        else if (*first >= 'A' && *first <= 'F')\n-            digit = *first - 'A' + 10;\n-\n-        else\n-            break;\n-\n-        result = 16 * result + digit;\n-    }\n-    out = result;\n-\n-    return first;\n-}\n-\n-enum jtokentype getJsonToken(string& tokenVal, unsigned int& consumed,\n-                            const char *raw)\n-{\n-    tokenVal.clear();\n-    consumed = 0;\n-\n-    const char *rawStart = raw;\n-\n-    while ((*raw) && (isspace(*raw)))             // skip whitespace\n-        raw++;\n-\n-    switch (*raw) {\n-\n-    case 0:\n-        return JTOK_NONE;\n-\n-    case '{':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_OBJ_OPEN;\n-    case '}':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_OBJ_CLOSE;\n-    case '[':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_ARR_OPEN;\n-    case ']':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_ARR_CLOSE;\n-\n-    case ':':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_COLON;\n-    case ',':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_COMMA;\n-\n-    case 'n':\n-    case 't':\n-    case 'f':\n-        if (!strncmp(raw, \"null\", 4)) {\n-            raw += 4;\n-            consumed = (raw - rawStart);\n-            return JTOK_KW_NULL;\n-        } else if (!strncmp(raw, \"true\", 4)) {\n-            raw += 4;\n-            consumed = (raw - rawStart);\n-            return JTOK_KW_TRUE;\n-        } else if (!strncmp(raw, \"false\", 5)) {\n-            raw += 5;\n-            consumed = (raw - rawStart);\n-            return JTOK_KW_FALSE;\n-        } else\n-            return JTOK_ERR;\n-\n-    case '-':\n-    case '0':\n-    case '1':\n-    case '2':\n-    case '3':\n-    case '4':\n-    case '5':\n-    case '6':\n-    case '7':\n-    case '8':\n-    case '9': {\n-        // part 1: int\n-        string numStr;\n-\n-        const char *first = raw;\n-\n-        const char *firstDigit = first;\n-        if (!isdigit(*firstDigit))\n-            firstDigit++;\n-        if ((*firstDigit == '0') && isdigit(firstDigit[1]))\n-            return JTOK_ERR;\n-\n-        numStr += *raw;                       // copy first char\n-        raw++;\n-\n-        if ((*first == '-') && (!isdigit(*raw)))\n-            return JTOK_ERR;\n-\n-        while ((*raw) && isdigit(*raw)) {     // copy digits\n-            numStr += *raw;\n-            raw++;\n-        }\n-\n-        // part 2: frac\n-        if (*raw == '.') {\n-            numStr += *raw;                   // copy .\n-            raw++;\n-\n-            if (!isdigit(*raw))\n-                return JTOK_ERR;\n-            while ((*raw) && isdigit(*raw)) { // copy digits\n-                numStr += *raw;\n-                raw++;\n-            }\n-        }\n-\n-        // part 3: exp\n-        if (*raw == 'e' || *raw == 'E') {\n-            numStr += *raw;                   // copy E\n-            raw++;\n-\n-            if (*raw == '-' || *raw == '+') { // copy +/-\n-                numStr += *raw;\n-                raw++;\n-            }\n-\n-            if (!isdigit(*raw))\n-                return JTOK_ERR;\n-            while ((*raw) && isdigit(*raw)) { // copy digits\n-                numStr += *raw;\n-                raw++;\n-            }\n-        }\n-\n-        tokenVal = numStr;\n-        consumed = (raw - rawStart);\n-        return JTOK_NUMBER;\n-        }\n-\n-    case '\"': {\n-        raw++;                                // skip \"\n-\n-        string valStr;\n-\n-        while (*raw) {\n-            if (*raw < 0x20)\n-                return JTOK_ERR;\n-\n-            else if (*raw == '\\\\') {\n-                raw++;                        // skip backslash\n-\n-                switch (*raw) {\n-                case '\"':  valStr += \"\\\"\"; break;\n-                case '\\\\': valStr += \"\\\\\"; break;\n-                case '/':  valStr += \"/\"; break;\n-                case 'b':  valStr += \"\\b\"; break;\n-                case 'f':  valStr += \"\\f\"; break;\n-                case 'n':  valStr += \"\\n\"; break;\n-                case 'r':  valStr += \"\\r\"; break;\n-                case 't':  valStr += \"\\t\"; break;\n-\n-                case 'u': {\n-                    unsigned int codepoint;\n-                    if (hatoui(raw + 1, raw + 1 + 4, codepoint) !=\n-                               raw + 1 + 4)\n-                        return JTOK_ERR;\n-\n-                    if (codepoint <= 0x7f)\n-                        valStr.push_back((char)codepoint);\n-                    else if (codepoint <= 0x7FF) {\n-                        valStr.push_back((char)(0xC0 | (codepoint >> 6)));\n-                        valStr.push_back((char)(0x80 | (codepoint & 0x3F)));\n-                    } else if (codepoint <= 0xFFFF) {\n-                        valStr.push_back((char)(0xE0 | (codepoint >> 12)));\n-                        valStr.push_back((char)(0x80 | ((codepoint >> 6) & 0x3F)));\n-                        valStr.push_back((char)(0x80 | (codepoint & 0x3F)));\n-                    }\n-\n-                    raw += 4;\n-                    break;\n-                    }\n-                default:\n-                    return JTOK_ERR;\n-\n-                }\n-\n-                raw++;                        // skip esc'd char\n-            }\n-\n-            else if (*raw == '\"') {\n-                raw++;                        // skip \"\n-                break;                        // stop scanning\n-            }\n-\n-            else {\n-                valStr += *raw;\n-                raw++;\n-            }\n-        }\n-\n-        tokenVal = valStr;\n-        consumed = (raw - rawStart);\n-        return JTOK_STRING;\n-        }\n-\n-    default:\n-        return JTOK_ERR;\n-    }\n-}\n-\n-bool UniValue::read(const char *raw)\n-{\n-    clear();\n-\n-    bool expectName = false;\n-    bool expectColon = false;\n-    vector<UniValue*> stack;\n-\n-    string tokenVal;\n-    unsigned int consumed;\n-    enum jtokentype tok = JTOK_NONE;\n-    enum jtokentype last_tok = JTOK_NONE;\n-    do {\n-        last_tok = tok;\n-\n-        tok = getJsonToken(tokenVal, consumed, raw);\n-        if (tok == JTOK_NONE || tok == JTOK_ERR)\n-            return false;\n-        raw += consumed;\n-\n-        switch (tok) {\n-\n-        case JTOK_OBJ_OPEN:\n-        case JTOK_ARR_OPEN: {\n-            VType utyp = (tok == JTOK_OBJ_OPEN ? VOBJ : VARR);\n-            if (!stack.size()) {\n-                if (utyp == VOBJ)\n-                    setObject();\n-                else\n-                    setArray();\n-                stack.push_back(this);\n-            } else {\n-                UniValue tmpVal(utyp);\n-                UniValue *top = stack.back();\n-                top->values.push_back(tmpVal);\n-\n-                UniValue *newTop = &(top->values.back());\n-                stack.push_back(newTop);\n-            }\n-\n-            if (utyp == VOBJ)\n-                expectName = true;\n-            break;\n-            }\n-\n-        case JTOK_OBJ_CLOSE:\n-        case JTOK_ARR_CLOSE: {\n-            if (!stack.size() || expectColon || (last_tok == JTOK_COMMA))\n-                return false;\n-\n-            VType utyp = (tok == JTOK_OBJ_CLOSE ? VOBJ : VARR);\n-            UniValue *top = stack.back();\n-            if (utyp != top->getType())\n-                return false;\n-\n-            stack.pop_back();\n-            expectName = false;\n-            break;\n-            }\n-\n-        case JTOK_COLON: {\n-            if (!stack.size() || expectName || !expectColon)\n-                return false;\n-\n-            UniValue *top = stack.back();\n-            if (top->getType() != VOBJ)\n-                return false;\n-\n-            expectColon = false;\n-            break;\n-            }\n-\n-        case JTOK_COMMA: {\n-            if (!stack.size() || expectName || expectColon ||\n-                (last_tok == JTOK_COMMA) || (last_tok == JTOK_ARR_OPEN))\n-                return false;\n-\n-            UniValue *top = stack.back();\n-            if (top->getType() == VOBJ)\n-                expectName = true;\n-            break;\n-            }\n-\n-        case JTOK_KW_NULL:\n-        case JTOK_KW_TRUE:\n-        case JTOK_KW_FALSE: {\n-            if (!stack.size() || expectName || expectColon)\n-                return false;\n-\n-            UniValue tmpVal;\n-            switch (tok) {\n-            case JTOK_KW_NULL:\n-                // do nothing more\n-                break;\n-            case JTOK_KW_TRUE:\n-                tmpVal.setBool(true);\n-                break;\n-            case JTOK_KW_FALSE:\n-                tmpVal.setBool(false);\n-                break;\n-            default: /* impossible */ break;\n-            }\n-\n-            UniValue *top = stack.back();\n-            top->values.push_back(tmpVal);\n-\n-            break;\n-            }\n-\n-        case JTOK_NUMBER: {\n-            if (!stack.size() || expectName || expectColon)\n-                return false;\n-\n-            UniValue tmpVal(VNUM, tokenVal);\n-            UniValue *top = stack.back();\n-            top->values.push_back(tmpVal);\n-\n-            break;\n-            }\n-\n-        case JTOK_STRING: {\n-            if (!stack.size())\n-                return false;\n-\n-            UniValue *top = stack.back();\n-\n-            if (expectName) {\n-                top->keys.push_back(tokenVal);\n-                expectName = false;\n-                expectColon = true;\n-            } else {\n-                UniValue tmpVal(VSTR, tokenVal);\n-                top->values.push_back(tmpVal);\n-            }\n-\n-            break;\n-            }\n-\n-        default:\n-            return false;\n-        }\n-    } while (!stack.empty ());\n-\n-    /* Check that nothing follows the initial construct (parsed above).  */\n-    tok = getJsonToken(tokenVal, consumed, raw);\n-    if (tok != JTOK_NONE)\n-        return false;\n-\n-    return true;\n-}\n-"
      },
      {
        "sha": "bce3997af77c404f563c2414ecc27ebf10e77171",
        "filename": "src/univalue/univalue_write.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 127,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1119cc3f5918575ca397518c9fd31a64704c7e4f/src/univalue/univalue_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue_write.cpp?ref=1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "patch": "@@ -1,127 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <ctype.h>\n-#include <iomanip>\n-#include <sstream>\n-#include <stdio.h>\n-#include \"univalue.h\"\n-#include \"univalue_escapes.h\"\n-\n-// TODO: Using UTF8\n-\n-using namespace std;\n-\n-static string json_escape(const string& inS)\n-{\n-    string outS;\n-    outS.reserve(inS.size() * 2);\n-\n-    for (unsigned int i = 0; i < inS.size(); i++) {\n-        unsigned char ch = inS[i];\n-        const char *escStr = escapes[ch];\n-\n-        if (escStr)\n-            outS += escStr;\n-\n-        else if (isprint(ch))\n-            outS += ch;\n-\n-        else {\n-            char tmpesc[16];\n-            sprintf(tmpesc, \"\\\\u%04x\", ch);\n-            outS += tmpesc;\n-        }\n-    }\n-\n-    return outS;\n-}\n-\n-string UniValue::write(unsigned int prettyIndent,\n-                       unsigned int indentLevel) const\n-{\n-    string s;\n-    s.reserve(1024);\n-\n-    unsigned int modIndent = indentLevel;\n-    if (modIndent == 0)\n-        modIndent = 1;\n-\n-    switch (typ) {\n-    case VNULL:\n-        s += \"null\";\n-        break;\n-    case VOBJ:\n-        writeObject(prettyIndent, modIndent, s);\n-        break;\n-    case VARR:\n-        writeArray(prettyIndent, modIndent, s);\n-        break;\n-    case VSTR:\n-        s += \"\\\"\" + json_escape(val) + \"\\\"\";\n-        break;\n-    case VNUM:\n-        s += val;\n-        break;\n-    case VBOOL:\n-        s += (val == \"1\" ? \"true\" : \"false\");\n-        break;\n-    }\n-\n-    return s;\n-}\n-\n-static void indentStr(unsigned int prettyIndent, unsigned int indentLevel, string& s)\n-{\n-    s.append(prettyIndent * indentLevel, ' ');\n-}\n-\n-void UniValue::writeArray(unsigned int prettyIndent, unsigned int indentLevel, string& s) const\n-{\n-    s += \"[\";\n-    if (prettyIndent)\n-        s += \"\\n\";\n-\n-    for (unsigned int i = 0; i < values.size(); i++) {\n-        if (prettyIndent)\n-            indentStr(prettyIndent, indentLevel, s);\n-        s += values[i].write(prettyIndent, indentLevel + 1);\n-        if (i != (values.size() - 1)) {\n-            s += \",\";\n-            if (prettyIndent)\n-                s += \" \";\n-        }\n-        if (prettyIndent)\n-            s += \"\\n\";\n-    }\n-\n-    if (prettyIndent)\n-        indentStr(prettyIndent, indentLevel - 1, s);\n-    s += \"]\";\n-}\n-\n-void UniValue::writeObject(unsigned int prettyIndent, unsigned int indentLevel, string& s) const\n-{\n-    s += \"{\";\n-    if (prettyIndent)\n-        s += \"\\n\";\n-\n-    for (unsigned int i = 0; i < keys.size(); i++) {\n-        if (prettyIndent)\n-            indentStr(prettyIndent, indentLevel, s);\n-        s += \"\\\"\" + json_escape(keys[i]) + \"\\\":\";\n-        if (prettyIndent)\n-            s += \" \";\n-        s += values[i].write(prettyIndent, indentLevel + 1);\n-        if (i != (values.size() - 1))\n-            s += \",\";\n-        if (prettyIndent)\n-            s += \"\\n\";\n-    }\n-\n-    if (prettyIndent)\n-        indentStr(prettyIndent, indentLevel - 1, s);\n-    s += \"}\";\n-}\n-"
      }
    ]
  },
  {
    "sha": "6e16a41313dbc25d88def143cf1e0a964e36c7c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTE2YTQxMzEzZGJjMjVkODhkZWYxNDNjZjFlMGE5NjRlMzZjN2Mw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T08:37:19Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T08:37:19Z"
      },
      "message": "Merge commit '2f9f082b5ef3c495c70598ef23383effef675f9a' as 'src/univalue'",
      "tree": {
        "sha": "46da94414e5fa2e58ad15dda39152376afbad81e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46da94414e5fa2e58ad15dda39152376afbad81e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e16a41313dbc25d88def143cf1e0a964e36c7c0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e16a41313dbc25d88def143cf1e0a964e36c7c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e16a41313dbc25d88def143cf1e0a964e36c7c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e16a41313dbc25d88def143cf1e0a964e36c7c0/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0917306fdf39b12556b95fe91be2e7b44d34bb9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0917306fdf39b12556b95fe91be2e7b44d34bb9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0917306fdf39b12556b95fe91be2e7b44d34bb9f"
      },
      {
        "sha": "2f9f082b5ef3c495c70598ef23383effef675f9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f9f082b5ef3c495c70598ef23383effef675f9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f9f082b5ef3c495c70598ef23383effef675f9a"
      }
    ],
    "stats": {
      "total": 1994,
      "additions": 1994,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ca9e8423481f8c6d5574c6088746fd9ed2dc21f5",
        "filename": "src/univalue/.gitignore",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,22 @@\n+.deps/\n+INSTALL\n+Makefile\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+compile\n+config.log\n+config.status\n+config.guess\n+config.sub\n+configure\n+depcomp\n+install-sh\n+missing\n+stamp-h1\n+univalue-config.h*\n+test-driver\n+libtool\n+ltmain.sh\n+\n+*.o"
      },
      {
        "sha": "af632c78d9c3d2eb1342469180e5dc1db7fcb807",
        "filename": "src/univalue/.travis.yml",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.travis.yml?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,52 @@\n+\n+language: cpp\n+\n+compiler:\n+  - clang\n+  - gcc\n+\n+os:\n+  - linux\n+  - osx\n+\n+sudo: false\n+\n+env:\n+  global:\n+    - MAKEJOBS=-j3\n+    - RUN_TESTS=true\n+    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n+\n+cache:\n+  apt: true\n+\n+addons:\n+  apt:\n+    packages:\n+      - pkg-config\n+\n+before_script:\n+  - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n+  - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n+\n+script:\n+  - if [ -n \"$UNIVALUE_CONFIG\" ]; then unset CC; unset CXX; fi\n+  - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+  - UNIVALUE_CONFIG_ALL=\"--prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+  - ./configure --cache-file=config.cache $UNIVALUE_CONFIG_ALL $UNIVALUE_CONFIG || ( cat config.log && false)\n+  - make -s $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL ; false )\n+  - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n+  - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n+\n+matrix:\n+  fast_finish: true\n+  include:\n+    - os: linux\n+      compiler: gcc\n+      env: UNIVALUE_CONFIG=--host=x86_64-w64-mingw32 RUN_TESTS=false\n+      addons:\n+        apt:\n+          packages:\n+            - g++-mingw-w64-x86-64\n+            - gcc-mingw-w64-x86-64\n+            - binutils-mingw-w64-x86-64"
      },
      {
        "sha": "1fb429f3569c7f8a8e57e69bfb984ab905bccf15",
        "filename": "src/univalue/COPYING",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/COPYING?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,19 @@\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+"
      },
      {
        "sha": "2800f466dc55bfbc94f20d4ededd7f5ac92a1d15",
        "filename": "src/univalue/Makefile.am",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.am?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,84 @@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+.PHONY: gen\n+.INTERMEDIATE: $(GENBIN)\n+\n+include_HEADERS = include/univalue.h\n+noinst_HEADERS = lib/univalue_escapes.h\n+\n+lib_LTLIBRARIES = lib/libunivalue.la\n+\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = pc/libunivalue.pc\n+\n+lib_libunivalue_la_SOURCES = \\\n+\tlib/univalue.cpp \\\n+\tlib/univalue_read.cpp \\\n+\tlib/univalue_write.cpp\n+\n+lib_libunivalue_la_LDFLAGS = \\\n+\t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n+\t-no-undefined\n+lib_libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+\n+TESTS = test/unitester\n+\n+GENBIN = gen/gen$(BUILD_EXEEXT)\n+GEN_SRCS = gen/gen.cpp\n+\n+$(GENBIN): $(GEN_SRCS)\n+\t@echo Building $@\n+\t$(AM_V_at)c++ -I$(top_srcdir)/include -o $@ $<\n+\n+gen: lib/univalue_escapes.h $(GENBIN)\n+\t@echo Updating $<\n+\t$(AM_V_at)$(GENBIN) > lib/univalue_escapes.h\n+\n+noinst_PROGRAMS = $(TESTS)\n+\n+TEST_DATA_DIR=test\n+\n+test_unitester_SOURCES = test/unitester.cpp\n+test_unitester_LDADD = lib/libunivalue.la\n+test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n+test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n+\n+TEST_FILES = \\\n+\t$(TEST_DATA_DIR)/fail10.json \\\n+\t$(TEST_DATA_DIR)/fail11.json \\\n+\t$(TEST_DATA_DIR)/fail12.json \\\n+\t$(TEST_DATA_DIR)/fail13.json \\\n+\t$(TEST_DATA_DIR)/fail14.json \\\n+\t$(TEST_DATA_DIR)/fail15.json \\\n+\t$(TEST_DATA_DIR)/fail16.json \\\n+\t$(TEST_DATA_DIR)/fail17.json \\\n+\t$(TEST_DATA_DIR)/fail18.json \\\n+\t$(TEST_DATA_DIR)/fail19.json \\\n+\t$(TEST_DATA_DIR)/fail1.json \\\n+\t$(TEST_DATA_DIR)/fail20.json \\\n+\t$(TEST_DATA_DIR)/fail21.json \\\n+\t$(TEST_DATA_DIR)/fail22.json \\\n+\t$(TEST_DATA_DIR)/fail23.json \\\n+\t$(TEST_DATA_DIR)/fail24.json \\\n+\t$(TEST_DATA_DIR)/fail25.json \\\n+\t$(TEST_DATA_DIR)/fail26.json \\\n+\t$(TEST_DATA_DIR)/fail27.json \\\n+\t$(TEST_DATA_DIR)/fail28.json \\\n+\t$(TEST_DATA_DIR)/fail29.json \\\n+\t$(TEST_DATA_DIR)/fail2.json \\\n+\t$(TEST_DATA_DIR)/fail30.json \\\n+\t$(TEST_DATA_DIR)/fail31.json \\\n+\t$(TEST_DATA_DIR)/fail32.json \\\n+\t$(TEST_DATA_DIR)/fail33.json \\\n+\t$(TEST_DATA_DIR)/fail34.json \\\n+\t$(TEST_DATA_DIR)/fail3.json \\\n+\t$(TEST_DATA_DIR)/fail4.json \\\n+\t$(TEST_DATA_DIR)/fail5.json \\\n+\t$(TEST_DATA_DIR)/fail6.json \\\n+\t$(TEST_DATA_DIR)/fail7.json \\\n+\t$(TEST_DATA_DIR)/fail8.json \\\n+\t$(TEST_DATA_DIR)/fail9.json \\\n+\t$(TEST_DATA_DIR)/pass1.json \\\n+\t$(TEST_DATA_DIR)/pass2.json \\\n+\t$(TEST_DATA_DIR)/pass3.json\n+\n+EXTRA_DIST=$(TEST_FILES) $(GEN_SRCS)"
      },
      {
        "sha": "48167b083b0e82515a43b9cbd9912d738d260d56",
        "filename": "src/univalue/README",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/README?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,7 @@\n+\n+\t\tUniValue\n+\n+A universal value object, with JSON encoding (output) and decoding (input).\n+\n+Built as a single dynamic RAII C++ object class, and no templates.\n+"
      },
      {
        "sha": "5530048e923e51909251e7e32f7023f1fc749999",
        "filename": "src/univalue/TODO",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/TODO",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/TODO",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/TODO?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,10 @@\n+\n+Rearrange tree for easier 'git subtree' style use\n+\n+Move towards C++11 etc.\n+\n+Namespace support - must come up with useful shorthand, avoiding\n+long Univalue::Univalue::Univalue usages forced upon library users.\n+\n+Improve test suite\n+"
      },
      {
        "sha": "4b38721faad09b9339107bb375d2d31fdbde9d4a",
        "filename": "src/univalue/autogen.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/autogen.sh?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,9 @@\n+#!/bin/sh\n+set -e\n+srcdir=\"$(dirname $0)\"\n+cd \"$srcdir\"\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+autoreconf --install --force"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/univalue/build-aux/m4/.empty",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/build-aux/m4/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/build-aux/m4/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.empty?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0"
      },
      {
        "sha": "6cd951622925afac13d0820b2c25b4f8cac7ff1e",
        "filename": "src/univalue/configure.ac",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/configure.ac?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,69 @@\n+m4_define([libunivalue_major_version], [1])\n+m4_define([libunivalue_minor_version], [1])\n+m4_define([libunivalue_micro_version], [1])\n+m4_define([libunivalue_interface_age], [1])\n+# If you need a modifier for the version number. \n+# Normally empty, but can be used to make \"fixup\" releases.\n+m4_define([libunivalue_extraversion], [])\n+\n+dnl libtool versioning from libunivalue\n+m4_define([libunivalue_current], [m4_eval(100 * libunivalue_minor_version + libunivalue_micro_version - libunivalue_interface_age)])\n+m4_define([libunivalue_binary_age], [m4_eval(100 * libunivalue_minor_version + libunivalue_micro_version)])\n+m4_define([libunivalue_revision], [libunivalue_interface_age])\n+m4_define([libunivalue_age], [m4_eval(libunivalue_binary_age - libunivalue_interface_age)])\n+m4_define([libunivalue_version], [libunivalue_major_version().libunivalue_minor_version().libunivalue_micro_version()libunivalue_extraversion()])\n+\n+\n+AC_INIT([univalue], [1.0.0],\n+        [http://github.com/jgarzik/univalue/])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+AC_PREREQ(2.60)\n+AC_CONFIG_SRCDIR([lib/univalue.cpp])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+AC_CONFIG_HEADERS([univalue-config.h])\n+AM_INIT_AUTOMAKE([subdir-objects foreign])\n+\n+LIBUNIVALUE_MAJOR_VERSION=libunivalue_major_version\n+LIBUNIVALUE_MINOR_VERSION=libunivalue_minor_version\n+LIBUNIVALUE_MICRO_VERSION=libunivalue_micro_version\n+LIBUNIVALUE_INTERFACE_AGE=libunivalue_interface_age\n+\n+# ABI version\n+# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+LIBUNIVALUE_CURRENT=libunivalue_current\n+LIBUNIVALUE_REVISION=libunivalue_revision\n+LIBUNIVALUE_AGE=libunivalue_age\n+\n+AC_SUBST(LIBUNIVALUE_CURRENT)\n+AC_SUBST(LIBUNIVALUE_REVISION)\n+AC_SUBST(LIBUNIVALUE_AGE)\n+\n+LT_INIT\n+LT_LANG([C++])\n+\n+case $host in\n+  *mingw*)\n+    LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"\n+  ;;\n+esac\n+\n+BUILD_EXEEXT=\n+case $build in\n+  *mingw*)\n+    BUILD_EXEEXT=\".exe\"\n+  ;;\n+esac\n+\n+AC_CONFIG_FILES([\n+    Makefile\n+    pc/libunivalue.pc\n+    pc/libunivalue-uninstalled.pc])\n+\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n+AC_SUBST(BUILD_EXEEXT)\n+AC_OUTPUT\n+"
      },
      {
        "sha": "5e5a4d4aed43a8a03cf1dbaa24323075ddcac0d9",
        "filename": "src/univalue/gen/gen.cpp",
        "status": "added",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/gen/gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/gen/gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/gen/gen.cpp?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,77 @@\n+// Copyright 2014 BitPay Inc.\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+//\n+// To re-create univalue_escapes.h:\n+// $ g++ -o gen gen.cpp\n+// $ ./gen > univalue_escapes.h\n+//\n+\n+#include <ctype.h>\n+#include <stdio.h>\n+#include <string.h>\n+#include \"univalue.h\"\n+\n+using namespace std;\n+\n+static bool initEscapes;\n+static const char *escapes[256];\n+\n+static void initJsonEscape()\n+{\n+    escapes[(int)'\"'] = \"\\\\\\\"\";\n+    escapes[(int)'\\\\'] = \"\\\\\\\\\";\n+    escapes[(int)'\\b'] = \"\\\\b\";\n+    escapes[(int)'\\f'] = \"\\\\f\";\n+    escapes[(int)'\\n'] = \"\\\\n\";\n+    escapes[(int)'\\r'] = \"\\\\r\";\n+    escapes[(int)'\\t'] = \"\\\\t\";\n+\n+    initEscapes = true;\n+}\n+\n+static void outputEscape()\n+{\n+\tprintf(\t\"// Automatically generated file. Do not modify.\\n\"\n+\t\t\"#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n+\t\t\"#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n+\t\t\"static const char *escapes[256] = {\\n\");\n+\n+\tfor (unsigned int i = 0; i < 256; i++) {\n+\t\tif (!escapes[i]) {\n+\t\t\tprintf(\"\\tNULL,\\n\");\n+\t\t} else {\n+\t\t\tprintf(\"\\t\\\"\");\n+\n+\t\t\tunsigned int si;\n+\t\t\tfor (si = 0; si < strlen(escapes[i]); si++) {\n+\t\t\t\tchar ch = escapes[i][si];\n+\t\t\t\tswitch (ch) {\n+\t\t\t\tcase '\"':\n+\t\t\t\t\tprintf(\"\\\\\\\"\");\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase '\\\\':\n+\t\t\t\t\tprintf(\"\\\\\\\\\");\n+\t\t\t\t\tbreak;\n+\t\t\t\tdefault:\n+\t\t\t\t\tprintf(\"%c\", escapes[i][si]);\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tprintf(\"\\\",\\n\");\n+\t\t}\n+\t}\n+\n+\tprintf(\t\"};\\n\"\n+\t\t\"#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\");\n+}\n+\n+int main (int argc, char *argv[])\n+{\n+\tinitJsonEscape();\n+\toutputEscape();\n+\treturn 0;\n+}\n+"
      },
      {
        "sha": "ac051160118f4ef84237ddc5e766e91d5fb8285e",
        "filename": "src/univalue/include/univalue.h",
        "status": "added",
        "additions": 250,
        "deletions": 0,
        "changes": 250,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/include/univalue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/include/univalue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/include/univalue.h?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,250 @@\n+// Copyright 2014 BitPay Inc.\n+// Copyright 2015 Bitcoin Core Developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef __UNIVALUE_H__\n+#define __UNIVALUE_H__\n+\n+#include <stdint.h>\n+\n+#include <string>\n+#include <vector>\n+#include <map>\n+#include <cassert>\n+\n+#include <sstream>        // .get_int64()\n+#include <utility>        // std::pair\n+\n+class UniValue {\n+public:\n+    enum VType { VNULL, VOBJ, VARR, VSTR, VNUM, VBOOL, };\n+\n+    UniValue() { typ = VNULL; }\n+    UniValue(UniValue::VType initialType, const std::string& initialStr = \"\") {\n+        typ = initialType;\n+        val = initialStr;\n+    }\n+    UniValue(uint64_t val_) {\n+        setInt(val_);\n+    }\n+    UniValue(int64_t val_) {\n+        setInt(val_);\n+    }\n+    UniValue(bool val_) {\n+        setBool(val_);\n+    }\n+    UniValue(int val_) {\n+        setInt(val_);\n+    }\n+    UniValue(double val_) {\n+        setFloat(val_);\n+    }\n+    UniValue(const std::string& val_) {\n+        setStr(val_);\n+    }\n+    UniValue(const char *val_) {\n+        std::string s(val_);\n+        setStr(s);\n+    }\n+    ~UniValue() {}\n+\n+    void clear();\n+\n+    bool setNull();\n+    bool setBool(bool val);\n+    bool setNumStr(const std::string& val);\n+    bool setInt(uint64_t val);\n+    bool setInt(int64_t val);\n+    bool setInt(int val) { return setInt((int64_t)val); }\n+    bool setFloat(double val);\n+    bool setStr(const std::string& val);\n+    bool setArray();\n+    bool setObject();\n+\n+    enum VType getType() const { return typ; }\n+    const std::string& getValStr() const { return val; }\n+    bool empty() const { return (values.size() == 0); }\n+\n+    size_t size() const { return values.size(); }\n+\n+    bool getBool() const { return isTrue(); }\n+    bool checkObject(const std::map<std::string,UniValue::VType>& memberTypes);\n+    const UniValue& operator[](const std::string& key) const;\n+    const UniValue& operator[](unsigned int index) const;\n+    bool exists(const std::string& key) const { return (findKey(key) >= 0); }\n+\n+    bool isNull() const { return (typ == VNULL); }\n+    bool isTrue() const { return (typ == VBOOL) && (val == \"1\"); }\n+    bool isFalse() const { return (typ == VBOOL) && (val != \"1\"); }\n+    bool isBool() const { return (typ == VBOOL); }\n+    bool isStr() const { return (typ == VSTR); }\n+    bool isNum() const { return (typ == VNUM); }\n+    bool isArray() const { return (typ == VARR); }\n+    bool isObject() const { return (typ == VOBJ); }\n+\n+    bool push_back(const UniValue& val);\n+    bool push_back(const std::string& val_) {\n+        UniValue tmpVal(VSTR, val_);\n+        return push_back(tmpVal);\n+    }\n+    bool push_back(const char *val_) {\n+        std::string s(val_);\n+        return push_back(s);\n+    }\n+    bool push_backV(const std::vector<UniValue>& vec);\n+\n+    bool pushKV(const std::string& key, const UniValue& val);\n+    bool pushKV(const std::string& key, const std::string& val) {\n+        UniValue tmpVal(VSTR, val);\n+        return pushKV(key, tmpVal);\n+    }\n+    bool pushKV(const std::string& key, const char *val_) {\n+        std::string val(val_);\n+        return pushKV(key, val);\n+    }\n+    bool pushKV(const std::string& key, int64_t val) {\n+        UniValue tmpVal(val);\n+        return pushKV(key, tmpVal);\n+    }\n+    bool pushKV(const std::string& key, uint64_t val) {\n+        UniValue tmpVal(val);\n+        return pushKV(key, tmpVal);\n+    }\n+    bool pushKV(const std::string& key, int val) {\n+        UniValue tmpVal((int64_t)val);\n+        return pushKV(key, tmpVal);\n+    }\n+    bool pushKV(const std::string& key, double val) {\n+        UniValue tmpVal(val);\n+        return pushKV(key, tmpVal);\n+    }\n+    bool pushKVs(const UniValue& obj);\n+\n+    std::string write(unsigned int prettyIndent = 0,\n+                      unsigned int indentLevel = 0) const;\n+\n+    bool read(const char *raw);\n+    bool read(const std::string& rawStr) {\n+        return read(rawStr.c_str());\n+    }\n+\n+private:\n+    UniValue::VType typ;\n+    std::string val;                       // numbers are stored as C++ strings\n+    std::vector<std::string> keys;\n+    std::vector<UniValue> values;\n+\n+    int findKey(const std::string& key) const;\n+    void writeArray(unsigned int prettyIndent, unsigned int indentLevel, std::string& s) const;\n+    void writeObject(unsigned int prettyIndent, unsigned int indentLevel, std::string& s) const;\n+\n+public:\n+    // Strict type-specific getters, these throw std::runtime_error if the\n+    // value is of unexpected type\n+    std::vector<std::string> getKeys() const;\n+    std::vector<UniValue> getValues() const;\n+    bool get_bool() const;\n+    std::string get_str() const;\n+    int get_int() const;\n+    int64_t get_int64() const;\n+    double get_real() const;\n+    const UniValue& get_obj() const;\n+    const UniValue& get_array() const;\n+\n+    enum VType type() const { return getType(); }\n+    bool push_back(std::pair<std::string,UniValue> pear) {\n+        return pushKV(pear.first, pear.second);\n+    }\n+    friend const UniValue& find_value( const UniValue& obj, const std::string& name);\n+};\n+\n+//\n+// The following were added for compatibility with json_spirit.\n+// Most duplicate other methods, and should be removed.\n+//\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, const char *cVal)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(cVal);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, std::string strVal)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(strVal);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, uint64_t u64Val)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(u64Val);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, int64_t i64Val)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(i64Val);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, bool iVal)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(iVal);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, int iVal)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(iVal);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, double dVal)\n+{\n+    std::string key(cKey);\n+    UniValue uVal(dVal);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(const char *cKey, const UniValue& uVal)\n+{\n+    std::string key(cKey);\n+    return std::make_pair(key, uVal);\n+}\n+\n+static inline std::pair<std::string,UniValue> Pair(std::string key, const UniValue& uVal)\n+{\n+    return std::make_pair(key, uVal);\n+}\n+\n+enum jtokentype {\n+    JTOK_ERR        = -1,\n+    JTOK_NONE       = 0,                           // eof\n+    JTOK_OBJ_OPEN,\n+    JTOK_OBJ_CLOSE,\n+    JTOK_ARR_OPEN,\n+    JTOK_ARR_CLOSE,\n+    JTOK_COLON,\n+    JTOK_COMMA,\n+    JTOK_KW_NULL,\n+    JTOK_KW_TRUE,\n+    JTOK_KW_FALSE,\n+    JTOK_NUMBER,\n+    JTOK_STRING,\n+};\n+\n+extern enum jtokentype getJsonToken(std::string& tokenVal,\n+                                    unsigned int& consumed, const char *raw);\n+extern const char *uvTypeName(UniValue::VType t);\n+\n+extern const UniValue NullUniValue;\n+\n+const UniValue& find_value( const UniValue& obj, const std::string& name);\n+\n+#endif // __UNIVALUE_H__\n\\ No newline at end of file"
      },
      {
        "sha": "ca8c16dcd4b0d5ab31a3ac29be11d35e768c3cdb",
        "filename": "src/univalue/lib/.gitignore",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/.gitignore?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,10 @@\n+\n+libunivalue-uninstalled.pc\n+libunivalue.pc\n+libunivalue.a\n+gen\n+\n+.libs\n+*.lo\n+*.la\n+"
      },
      {
        "sha": "883e8651fe3d42e2c5c24a6c436dc2bf4c0f351b",
        "filename": "src/univalue/lib/univalue.cpp",
        "status": "added",
        "additions": 365,
        "deletions": 0,
        "changes": 365,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue.cpp?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,365 @@\n+// Copyright 2014 BitPay Inc.\n+// Copyright 2015 Bitcoin Core Developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdint.h>\n+#include <ctype.h>\n+#include <errno.h>\n+#include <iomanip>\n+#include <limits>\n+#include <sstream>\n+#include <stdexcept>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+#include \"univalue.h\"\n+\n+namespace \n+{\n+static bool ParsePrechecks(const std::string& str)\n+{\n+    if (str.empty()) // No empty string allowed\n+        return false;\n+    if (str.size() >= 1 && (isspace(str[0]) || isspace(str[str.size()-1]))) // No padding allowed\n+        return false;\n+    if (str.size() != strlen(str.c_str())) // No embedded NUL characters allowed\n+        return false;\n+    return true;\n+}\n+\n+bool ParseInt32(const std::string& str, int32_t *out)\n+{\n+    if (!ParsePrechecks(str))\n+        return false;\n+    char *endp = NULL;\n+    errno = 0; // strtol will not set errno if valid\n+    long int n = strtol(str.c_str(), &endp, 10);\n+    if(out) *out = (int32_t)n;\n+    // Note that strtol returns a *long int*, so even if strtol doesn't report a over/underflow\n+    // we still have to check that the returned value is within the range of an *int32_t*. On 64-bit\n+    // platforms the size of these types may be different.\n+    return endp && *endp == 0 && !errno &&\n+        n >= std::numeric_limits<int32_t>::min() &&\n+        n <= std::numeric_limits<int32_t>::max();\n+}\n+\n+bool ParseInt64(const std::string& str, int64_t *out)\n+{\n+    if (!ParsePrechecks(str))\n+        return false;\n+    char *endp = NULL;\n+    errno = 0; // strtoll will not set errno if valid\n+    long long int n = strtoll(str.c_str(), &endp, 10);\n+    if(out) *out = (int64_t)n;\n+    // Note that strtoll returns a *long long int*, so even if strtol doesn't report a over/underflow\n+    // we still have to check that the returned value is within the range of an *int64_t*.\n+    return endp && *endp == 0 && !errno &&\n+        n >= std::numeric_limits<int64_t>::min() &&\n+        n <= std::numeric_limits<int64_t>::max();\n+}\n+\n+bool ParseDouble(const std::string& str, double *out)\n+{\n+    if (!ParsePrechecks(str))\n+        return false;\n+    if (str.size() >= 2 && str[0] == '0' && str[1] == 'x') // No hexadecimal floats allowed\n+        return false;\n+    std::istringstream text(str);\n+    text.imbue(std::locale::classic());\n+    double result;\n+    text >> result;\n+    if(out) *out = result;\n+    return text.eof() && !text.fail();\n+}\n+}\n+\n+using namespace std;\n+\n+const UniValue NullUniValue;\n+\n+void UniValue::clear()\n+{\n+    typ = VNULL;\n+    val.clear();\n+    keys.clear();\n+    values.clear();\n+}\n+\n+bool UniValue::setNull()\n+{\n+    clear();\n+    return true;\n+}\n+\n+bool UniValue::setBool(bool val_)\n+{\n+    clear();\n+    typ = VBOOL;\n+    if (val_)\n+        val = \"1\";\n+    return true;\n+}\n+\n+static bool validNumStr(const string& s)\n+{\n+    string tokenVal;\n+    unsigned int consumed;\n+    enum jtokentype tt = getJsonToken(tokenVal, consumed, s.c_str());\n+    return (tt == JTOK_NUMBER);\n+}\n+\n+bool UniValue::setNumStr(const string& val_)\n+{\n+    if (!validNumStr(val_))\n+        return false;\n+\n+    clear();\n+    typ = VNUM;\n+    val = val_;\n+    return true;\n+}\n+\n+bool UniValue::setInt(uint64_t val)\n+{\n+    string s;\n+    ostringstream oss;\n+\n+    oss << val;\n+\n+    return setNumStr(oss.str());\n+}\n+\n+bool UniValue::setInt(int64_t val)\n+{\n+    string s;\n+    ostringstream oss;\n+\n+    oss << val;\n+\n+    return setNumStr(oss.str());\n+}\n+\n+bool UniValue::setFloat(double val)\n+{\n+    string s;\n+    ostringstream oss;\n+\n+    oss << std::setprecision(16) << val;\n+\n+    bool ret = setNumStr(oss.str());\n+    typ = VNUM;\n+    return ret;\n+}\n+\n+bool UniValue::setStr(const string& val_)\n+{\n+    clear();\n+    typ = VSTR;\n+    val = val_;\n+    return true;\n+}\n+\n+bool UniValue::setArray()\n+{\n+    clear();\n+    typ = VARR;\n+    return true;\n+}\n+\n+bool UniValue::setObject()\n+{\n+    clear();\n+    typ = VOBJ;\n+    return true;\n+}\n+\n+bool UniValue::push_back(const UniValue& val)\n+{\n+    if (typ != VARR)\n+        return false;\n+\n+    values.push_back(val);\n+    return true;\n+}\n+\n+bool UniValue::push_backV(const std::vector<UniValue>& vec)\n+{\n+    if (typ != VARR)\n+        return false;\n+\n+    values.insert(values.end(), vec.begin(), vec.end());\n+\n+    return true;\n+}\n+\n+bool UniValue::pushKV(const std::string& key, const UniValue& val)\n+{\n+    if (typ != VOBJ)\n+        return false;\n+\n+    keys.push_back(key);\n+    values.push_back(val);\n+    return true;\n+}\n+\n+bool UniValue::pushKVs(const UniValue& obj)\n+{\n+    if (typ != VOBJ || obj.typ != VOBJ)\n+        return false;\n+\n+    for (unsigned int i = 0; i < obj.keys.size(); i++) {\n+        keys.push_back(obj.keys[i]);\n+        values.push_back(obj.values[i]);\n+    }\n+\n+    return true;\n+}\n+\n+int UniValue::findKey(const std::string& key) const\n+{\n+    for (unsigned int i = 0; i < keys.size(); i++) {\n+        if (keys[i] == key)\n+            return (int) i;\n+    }\n+\n+    return -1;\n+}\n+\n+bool UniValue::checkObject(const std::map<std::string,UniValue::VType>& t)\n+{\n+    for (std::map<std::string,UniValue::VType>::const_iterator it = t.begin();\n+         it != t.end(); it++) {\n+        int idx = findKey(it->first);\n+        if (idx < 0)\n+            return false;\n+\n+        if (values[idx].getType() != it->second)\n+            return false;\n+    }\n+\n+    return true;\n+}\n+\n+const UniValue& UniValue::operator[](const std::string& key) const\n+{\n+    if (typ != VOBJ)\n+        return NullUniValue;\n+\n+    int index = findKey(key);\n+    if (index < 0)\n+        return NullUniValue;\n+\n+    return values[index];\n+}\n+\n+const UniValue& UniValue::operator[](unsigned int index) const\n+{\n+    if (typ != VOBJ && typ != VARR)\n+        return NullUniValue;\n+    if (index >= values.size())\n+        return NullUniValue;\n+\n+    return values[index];\n+}\n+\n+const char *uvTypeName(UniValue::VType t)\n+{\n+    switch (t) {\n+    case UniValue::VNULL: return \"null\";\n+    case UniValue::VBOOL: return \"bool\";\n+    case UniValue::VOBJ: return \"object\";\n+    case UniValue::VARR: return \"array\";\n+    case UniValue::VSTR: return \"string\";\n+    case UniValue::VNUM: return \"number\";\n+    }\n+\n+    // not reached\n+    return NULL;\n+}\n+\n+const UniValue& find_value( const UniValue& obj, const std::string& name)\n+{\n+    for (unsigned int i = 0; i < obj.keys.size(); i++)\n+    {\n+        if( obj.keys[i] == name )\n+        {\n+            return obj.values[i];\n+        }\n+    }\n+\n+    return NullUniValue;\n+}\n+\n+std::vector<std::string> UniValue::getKeys() const\n+{\n+    if (typ != VOBJ)\n+        throw std::runtime_error(\"JSON value is not an object as expected\");\n+    return keys;\n+}\n+\n+std::vector<UniValue> UniValue::getValues() const\n+{\n+    if (typ != VOBJ && typ != VARR)\n+        throw std::runtime_error(\"JSON value is not an object or array as expected\");\n+    return values;\n+}\n+\n+bool UniValue::get_bool() const\n+{\n+    if (typ != VBOOL)\n+        throw std::runtime_error(\"JSON value is not a boolean as expected\");\n+    return getBool();\n+}\n+\n+std::string UniValue::get_str() const\n+{\n+    if (typ != VSTR)\n+        throw std::runtime_error(\"JSON value is not a string as expected\");\n+    return getValStr();\n+}\n+\n+int UniValue::get_int() const\n+{\n+    if (typ != VNUM)\n+        throw std::runtime_error(\"JSON value is not an integer as expected\");\n+    int32_t retval;\n+    if (!ParseInt32(getValStr(), &retval))\n+        throw std::runtime_error(\"JSON integer out of range\");\n+    return retval;\n+}\n+\n+int64_t UniValue::get_int64() const\n+{\n+    if (typ != VNUM)\n+        throw std::runtime_error(\"JSON value is not an integer as expected\");\n+    int64_t retval;\n+    if (!ParseInt64(getValStr(), &retval))\n+        throw std::runtime_error(\"JSON integer out of range\");\n+    return retval;\n+}\n+\n+double UniValue::get_real() const\n+{\n+    if (typ != VNUM)\n+        throw std::runtime_error(\"JSON value is not a number as expected\");\n+    double retval;\n+    if (!ParseDouble(getValStr(), &retval))\n+        throw std::runtime_error(\"JSON double out of range\");\n+    return retval;\n+}\n+\n+const UniValue& UniValue::get_obj() const\n+{\n+    if (typ != VOBJ)\n+        throw std::runtime_error(\"JSON value is not an object as expected\");\n+    return *this;\n+}\n+\n+const UniValue& UniValue::get_array() const\n+{\n+    if (typ != VARR)\n+        throw std::runtime_error(\"JSON value is not an array as expected\");\n+    return *this;\n+}\n+"
      },
      {
        "sha": "4133b24ca11f85814a85359131c22bf20b3bfcaf",
        "filename": "src/univalue/lib/univalue_escapes.h",
        "status": "added",
        "additions": 262,
        "deletions": 0,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue_escapes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue_escapes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_escapes.h?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,262 @@\n+// Automatically generated file. Do not modify.\n+#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\n+#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\n+static const char *escapes[256] = {\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\t\"\\\\b\",\n+\t\"\\\\t\",\n+\t\"\\\\n\",\n+\tNULL,\n+\t\"\\\\f\",\n+\t\"\\\\r\",\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\t\"\\\\\\\"\",\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\t\"\\\\\\\\\",\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+\tNULL,\n+};\n+#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H"
      },
      {
        "sha": "64591234cb12da4ba8dac3ca9853e8a77b66247f",
        "filename": "src/univalue/lib/univalue_read.cpp",
        "status": "added",
        "additions": 389,
        "deletions": 0,
        "changes": 389,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_read.cpp?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,389 @@\n+// Copyright 2014 BitPay Inc.\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <string.h>\n+#include <vector>\n+#include <stdio.h>\n+#include \"univalue.h\"\n+\n+using namespace std;\n+\n+// convert hexadecimal string to unsigned integer\n+static const char *hatoui(const char *first, const char *last,\n+                          unsigned int& out)\n+{\n+    unsigned int result = 0;\n+    for (; first != last; ++first)\n+    {\n+        int digit;\n+        if (isdigit(*first))\n+            digit = *first - '0';\n+\n+        else if (*first >= 'a' && *first <= 'f')\n+            digit = *first - 'a' + 10;\n+\n+        else if (*first >= 'A' && *first <= 'F')\n+            digit = *first - 'A' + 10;\n+\n+        else\n+            break;\n+\n+        result = 16 * result + digit;\n+    }\n+    out = result;\n+\n+    return first;\n+}\n+\n+enum jtokentype getJsonToken(string& tokenVal, unsigned int& consumed,\n+                            const char *raw)\n+{\n+    tokenVal.clear();\n+    consumed = 0;\n+\n+    const char *rawStart = raw;\n+\n+    while ((*raw) && (isspace(*raw)))             // skip whitespace\n+        raw++;\n+\n+    switch (*raw) {\n+\n+    case 0:\n+        return JTOK_NONE;\n+\n+    case '{':\n+        raw++;\n+        consumed = (raw - rawStart);\n+        return JTOK_OBJ_OPEN;\n+    case '}':\n+        raw++;\n+        consumed = (raw - rawStart);\n+        return JTOK_OBJ_CLOSE;\n+    case '[':\n+        raw++;\n+        consumed = (raw - rawStart);\n+        return JTOK_ARR_OPEN;\n+    case ']':\n+        raw++;\n+        consumed = (raw - rawStart);\n+        return JTOK_ARR_CLOSE;\n+\n+    case ':':\n+        raw++;\n+        consumed = (raw - rawStart);\n+        return JTOK_COLON;\n+    case ',':\n+        raw++;\n+        consumed = (raw - rawStart);\n+        return JTOK_COMMA;\n+\n+    case 'n':\n+    case 't':\n+    case 'f':\n+        if (!strncmp(raw, \"null\", 4)) {\n+            raw += 4;\n+            consumed = (raw - rawStart);\n+            return JTOK_KW_NULL;\n+        } else if (!strncmp(raw, \"true\", 4)) {\n+            raw += 4;\n+            consumed = (raw - rawStart);\n+            return JTOK_KW_TRUE;\n+        } else if (!strncmp(raw, \"false\", 5)) {\n+            raw += 5;\n+            consumed = (raw - rawStart);\n+            return JTOK_KW_FALSE;\n+        } else\n+            return JTOK_ERR;\n+\n+    case '-':\n+    case '0':\n+    case '1':\n+    case '2':\n+    case '3':\n+    case '4':\n+    case '5':\n+    case '6':\n+    case '7':\n+    case '8':\n+    case '9': {\n+        // part 1: int\n+        string numStr;\n+\n+        const char *first = raw;\n+\n+        const char *firstDigit = first;\n+        if (!isdigit(*firstDigit))\n+            firstDigit++;\n+        if ((*firstDigit == '0') && isdigit(firstDigit[1]))\n+            return JTOK_ERR;\n+\n+        numStr += *raw;                       // copy first char\n+        raw++;\n+\n+        if ((*first == '-') && (!isdigit(*raw)))\n+            return JTOK_ERR;\n+\n+        while ((*raw) && isdigit(*raw)) {     // copy digits\n+            numStr += *raw;\n+            raw++;\n+        }\n+\n+        // part 2: frac\n+        if (*raw == '.') {\n+            numStr += *raw;                   // copy .\n+            raw++;\n+\n+            if (!isdigit(*raw))\n+                return JTOK_ERR;\n+            while ((*raw) && isdigit(*raw)) { // copy digits\n+                numStr += *raw;\n+                raw++;\n+            }\n+        }\n+\n+        // part 3: exp\n+        if (*raw == 'e' || *raw == 'E') {\n+            numStr += *raw;                   // copy E\n+            raw++;\n+\n+            if (*raw == '-' || *raw == '+') { // copy +/-\n+                numStr += *raw;\n+                raw++;\n+            }\n+\n+            if (!isdigit(*raw))\n+                return JTOK_ERR;\n+            while ((*raw) && isdigit(*raw)) { // copy digits\n+                numStr += *raw;\n+                raw++;\n+            }\n+        }\n+\n+        tokenVal = numStr;\n+        consumed = (raw - rawStart);\n+        return JTOK_NUMBER;\n+        }\n+\n+    case '\"': {\n+        raw++;                                // skip \"\n+\n+        string valStr;\n+\n+        while (*raw) {\n+            if (*raw < 0x20)\n+                return JTOK_ERR;\n+\n+            else if (*raw == '\\\\') {\n+                raw++;                        // skip backslash\n+\n+                switch (*raw) {\n+                case '\"':  valStr += \"\\\"\"; break;\n+                case '\\\\': valStr += \"\\\\\"; break;\n+                case '/':  valStr += \"/\"; break;\n+                case 'b':  valStr += \"\\b\"; break;\n+                case 'f':  valStr += \"\\f\"; break;\n+                case 'n':  valStr += \"\\n\"; break;\n+                case 'r':  valStr += \"\\r\"; break;\n+                case 't':  valStr += \"\\t\"; break;\n+\n+                case 'u': {\n+                    unsigned int codepoint;\n+                    if (hatoui(raw + 1, raw + 1 + 4, codepoint) !=\n+                               raw + 1 + 4)\n+                        return JTOK_ERR;\n+\n+                    if (codepoint <= 0x7f)\n+                        valStr.push_back((char)codepoint);\n+                    else if (codepoint <= 0x7FF) {\n+                        valStr.push_back((char)(0xC0 | (codepoint >> 6)));\n+                        valStr.push_back((char)(0x80 | (codepoint & 0x3F)));\n+                    } else if (codepoint <= 0xFFFF) {\n+                        valStr.push_back((char)(0xE0 | (codepoint >> 12)));\n+                        valStr.push_back((char)(0x80 | ((codepoint >> 6) & 0x3F)));\n+                        valStr.push_back((char)(0x80 | (codepoint & 0x3F)));\n+                    }\n+\n+                    raw += 4;\n+                    break;\n+                    }\n+                default:\n+                    return JTOK_ERR;\n+\n+                }\n+\n+                raw++;                        // skip esc'd char\n+            }\n+\n+            else if (*raw == '\"') {\n+                raw++;                        // skip \"\n+                break;                        // stop scanning\n+            }\n+\n+            else {\n+                valStr += *raw;\n+                raw++;\n+            }\n+        }\n+\n+        tokenVal = valStr;\n+        consumed = (raw - rawStart);\n+        return JTOK_STRING;\n+        }\n+\n+    default:\n+        return JTOK_ERR;\n+    }\n+}\n+\n+bool UniValue::read(const char *raw)\n+{\n+    clear();\n+\n+    bool expectName = false;\n+    bool expectColon = false;\n+    vector<UniValue*> stack;\n+\n+    string tokenVal;\n+    unsigned int consumed;\n+    enum jtokentype tok = JTOK_NONE;\n+    enum jtokentype last_tok = JTOK_NONE;\n+    do {\n+        last_tok = tok;\n+\n+        tok = getJsonToken(tokenVal, consumed, raw);\n+        if (tok == JTOK_NONE || tok == JTOK_ERR)\n+            return false;\n+        raw += consumed;\n+\n+        switch (tok) {\n+\n+        case JTOK_OBJ_OPEN:\n+        case JTOK_ARR_OPEN: {\n+            VType utyp = (tok == JTOK_OBJ_OPEN ? VOBJ : VARR);\n+            if (!stack.size()) {\n+                if (utyp == VOBJ)\n+                    setObject();\n+                else\n+                    setArray();\n+                stack.push_back(this);\n+            } else {\n+                UniValue tmpVal(utyp);\n+                UniValue *top = stack.back();\n+                top->values.push_back(tmpVal);\n+\n+                UniValue *newTop = &(top->values.back());\n+                stack.push_back(newTop);\n+            }\n+\n+            if (utyp == VOBJ)\n+                expectName = true;\n+            break;\n+            }\n+\n+        case JTOK_OBJ_CLOSE:\n+        case JTOK_ARR_CLOSE: {\n+            if (!stack.size() || expectColon || (last_tok == JTOK_COMMA))\n+                return false;\n+\n+            VType utyp = (tok == JTOK_OBJ_CLOSE ? VOBJ : VARR);\n+            UniValue *top = stack.back();\n+            if (utyp != top->getType())\n+                return false;\n+\n+            stack.pop_back();\n+            expectName = false;\n+            break;\n+            }\n+\n+        case JTOK_COLON: {\n+            if (!stack.size() || expectName || !expectColon)\n+                return false;\n+\n+            UniValue *top = stack.back();\n+            if (top->getType() != VOBJ)\n+                return false;\n+\n+            expectColon = false;\n+            break;\n+            }\n+\n+        case JTOK_COMMA: {\n+            if (!stack.size() || expectName || expectColon ||\n+                (last_tok == JTOK_COMMA) || (last_tok == JTOK_ARR_OPEN))\n+                return false;\n+\n+            UniValue *top = stack.back();\n+            if (top->getType() == VOBJ)\n+                expectName = true;\n+            break;\n+            }\n+\n+        case JTOK_KW_NULL:\n+        case JTOK_KW_TRUE:\n+        case JTOK_KW_FALSE: {\n+            if (!stack.size() || expectName || expectColon)\n+                return false;\n+\n+            UniValue tmpVal;\n+            switch (tok) {\n+            case JTOK_KW_NULL:\n+                // do nothing more\n+                break;\n+            case JTOK_KW_TRUE:\n+                tmpVal.setBool(true);\n+                break;\n+            case JTOK_KW_FALSE:\n+                tmpVal.setBool(false);\n+                break;\n+            default: /* impossible */ break;\n+            }\n+\n+            UniValue *top = stack.back();\n+            top->values.push_back(tmpVal);\n+\n+            break;\n+            }\n+\n+        case JTOK_NUMBER: {\n+            if (!stack.size() || expectName || expectColon)\n+                return false;\n+\n+            UniValue tmpVal(VNUM, tokenVal);\n+            UniValue *top = stack.back();\n+            top->values.push_back(tmpVal);\n+\n+            break;\n+            }\n+\n+        case JTOK_STRING: {\n+            if (!stack.size())\n+                return false;\n+\n+            UniValue *top = stack.back();\n+\n+            if (expectName) {\n+                top->keys.push_back(tokenVal);\n+                expectName = false;\n+                expectColon = true;\n+            } else {\n+                UniValue tmpVal(VSTR, tokenVal);\n+                top->values.push_back(tmpVal);\n+            }\n+\n+            break;\n+            }\n+\n+        default:\n+            return false;\n+        }\n+    } while (!stack.empty ());\n+\n+    /* Check that nothing follows the initial construct (parsed above).  */\n+    tok = getJsonToken(tokenVal, consumed, raw);\n+    if (tok != JTOK_NONE)\n+        return false;\n+\n+    return true;\n+}\n+"
      },
      {
        "sha": "bce3997af77c404f563c2414ecc27ebf10e77171",
        "filename": "src/univalue/lib/univalue_write.cpp",
        "status": "added",
        "additions": 127,
        "deletions": 0,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/lib/univalue_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_write.cpp?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,127 @@\n+// Copyright 2014 BitPay Inc.\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <ctype.h>\n+#include <iomanip>\n+#include <sstream>\n+#include <stdio.h>\n+#include \"univalue.h\"\n+#include \"univalue_escapes.h\"\n+\n+// TODO: Using UTF8\n+\n+using namespace std;\n+\n+static string json_escape(const string& inS)\n+{\n+    string outS;\n+    outS.reserve(inS.size() * 2);\n+\n+    for (unsigned int i = 0; i < inS.size(); i++) {\n+        unsigned char ch = inS[i];\n+        const char *escStr = escapes[ch];\n+\n+        if (escStr)\n+            outS += escStr;\n+\n+        else if (isprint(ch))\n+            outS += ch;\n+\n+        else {\n+            char tmpesc[16];\n+            sprintf(tmpesc, \"\\\\u%04x\", ch);\n+            outS += tmpesc;\n+        }\n+    }\n+\n+    return outS;\n+}\n+\n+string UniValue::write(unsigned int prettyIndent,\n+                       unsigned int indentLevel) const\n+{\n+    string s;\n+    s.reserve(1024);\n+\n+    unsigned int modIndent = indentLevel;\n+    if (modIndent == 0)\n+        modIndent = 1;\n+\n+    switch (typ) {\n+    case VNULL:\n+        s += \"null\";\n+        break;\n+    case VOBJ:\n+        writeObject(prettyIndent, modIndent, s);\n+        break;\n+    case VARR:\n+        writeArray(prettyIndent, modIndent, s);\n+        break;\n+    case VSTR:\n+        s += \"\\\"\" + json_escape(val) + \"\\\"\";\n+        break;\n+    case VNUM:\n+        s += val;\n+        break;\n+    case VBOOL:\n+        s += (val == \"1\" ? \"true\" : \"false\");\n+        break;\n+    }\n+\n+    return s;\n+}\n+\n+static void indentStr(unsigned int prettyIndent, unsigned int indentLevel, string& s)\n+{\n+    s.append(prettyIndent * indentLevel, ' ');\n+}\n+\n+void UniValue::writeArray(unsigned int prettyIndent, unsigned int indentLevel, string& s) const\n+{\n+    s += \"[\";\n+    if (prettyIndent)\n+        s += \"\\n\";\n+\n+    for (unsigned int i = 0; i < values.size(); i++) {\n+        if (prettyIndent)\n+            indentStr(prettyIndent, indentLevel, s);\n+        s += values[i].write(prettyIndent, indentLevel + 1);\n+        if (i != (values.size() - 1)) {\n+            s += \",\";\n+            if (prettyIndent)\n+                s += \" \";\n+        }\n+        if (prettyIndent)\n+            s += \"\\n\";\n+    }\n+\n+    if (prettyIndent)\n+        indentStr(prettyIndent, indentLevel - 1, s);\n+    s += \"]\";\n+}\n+\n+void UniValue::writeObject(unsigned int prettyIndent, unsigned int indentLevel, string& s) const\n+{\n+    s += \"{\";\n+    if (prettyIndent)\n+        s += \"\\n\";\n+\n+    for (unsigned int i = 0; i < keys.size(); i++) {\n+        if (prettyIndent)\n+            indentStr(prettyIndent, indentLevel, s);\n+        s += \"\\\"\" + json_escape(keys[i]) + \"\\\":\";\n+        if (prettyIndent)\n+            s += \" \";\n+        s += values[i].write(prettyIndent, indentLevel + 1);\n+        if (i != (values.size() - 1))\n+            s += \",\";\n+        if (prettyIndent)\n+            s += \"\\n\";\n+    }\n+\n+    if (prettyIndent)\n+        indentStr(prettyIndent, indentLevel - 1, s);\n+    s += \"}\";\n+}\n+"
      },
      {
        "sha": "b7f53e875e6e45e6e5cdb37dcd3c3b1a12e2b832",
        "filename": "src/univalue/pc/libunivalue-uninstalled.pc.in",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/pc/libunivalue-uninstalled.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/pc/libunivalue-uninstalled.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/pc/libunivalue-uninstalled.pc.in?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,9 @@\n+prefix=@prefix@\n+exec_prefix=@exec_prefix@\n+libdir=@libdir@\n+includedir=@includedir@\n+\n+Name: libunivalue\n+Description: libunivalue, C++ universal value object and JSON library\n+Version: @VERSION@\n+Libs: ${pc_top_builddir}/${pcfiledir}/libunivalue.la"
      },
      {
        "sha": "358a2d5f73219147d8a2f286146dc4e912363f40",
        "filename": "src/univalue/pc/libunivalue.pc.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/pc/libunivalue.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/pc/libunivalue.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/pc/libunivalue.pc.in?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,10 @@\n+prefix=@prefix@\n+exec_prefix=@exec_prefix@\n+libdir=@libdir@\n+includedir=@includedir@\n+\n+Name: libunivalue\n+Description: libunivalue, C++ universal value object and JSON library\n+Version: @VERSION@\n+Libs: -L${libdir} -lunivalue\n+Cflags: -I${includedir}"
      },
      {
        "sha": "e4dea0df723bbe22e111e639e394c3d62562dddd",
        "filename": "src/univalue/test/.gitignore",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/.gitignore?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,7 @@\n+\n+unitester\n+\n+*.log\n+*.trs\n+\n+.libs"
      },
      {
        "sha": "6216b865f10219c51c6af21e7a68641bab77ee4f",
        "filename": "src/univalue/test/fail1.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail1.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+\"A JSON payload should be an object or array, not a string.\"\n\\ No newline at end of file"
      },
      {
        "sha": "5d8c0047bd522dfa9fbc642051ed76bd3162d936",
        "filename": "src/univalue/test/fail10.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail10.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail10.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail10.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Extra value after close\": true} \"misplaced quoted value\"\n\\ No newline at end of file"
      },
      {
        "sha": "76eb95b4583c8ee74eee3bdc25e1db69e1aaf4bb",
        "filename": "src/univalue/test/fail11.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail11.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail11.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail11.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Illegal expression\": 1 + 2}\n\\ No newline at end of file"
      },
      {
        "sha": "77580a4522d8c79245851e72a3644a0709b3d28c",
        "filename": "src/univalue/test/fail12.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail12.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail12.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail12.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Illegal invocation\": alert()}\n\\ No newline at end of file"
      },
      {
        "sha": "379406b59bdb943f145afea98ff1bbc45d43ff45",
        "filename": "src/univalue/test/fail13.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail13.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail13.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail13.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Numbers cannot have leading zeroes\": 013}\n\\ No newline at end of file"
      },
      {
        "sha": "0ed366b38a34f551c25735bdcb9282d27beae026",
        "filename": "src/univalue/test/fail14.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail14.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail14.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail14.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Numbers cannot be hex\": 0x14}\n\\ No newline at end of file"
      },
      {
        "sha": "fc8376b605da69dda23f3fcdd9816dcbf2e736cc",
        "filename": "src/univalue/test/fail15.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail15.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail15.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail15.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Illegal backslash escape: \\x15\"]\n\\ No newline at end of file"
      },
      {
        "sha": "3fe21d4b532498c8b90872ef571c6867f45e645f",
        "filename": "src/univalue/test/fail16.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail16.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail16.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail16.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\\naked]\n\\ No newline at end of file"
      },
      {
        "sha": "62b9214aeda6d74a72ebeceedf0aae3609f1c638",
        "filename": "src/univalue/test/fail17.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail17.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail17.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail17.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Illegal backslash escape: \\017\"]\n\\ No newline at end of file"
      },
      {
        "sha": "edac92716f186e39d0e3c818b8b110b9a2c4add5",
        "filename": "src/univalue/test/fail18.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail18.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail18.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail18.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[[[[[[[[[[[[[[[[[[[[\"Too deep\"]]]]]]]]]]]]]]]]]]]]\n\\ No newline at end of file"
      },
      {
        "sha": "3b9c46fa9a296c9d8c35ce4a6592d8bb7ffe748a",
        "filename": "src/univalue/test/fail19.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail19.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail19.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail19.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Missing colon\" null}\n\\ No newline at end of file"
      },
      {
        "sha": "6b7c11e5a56537f81e651980359c62e263f7399f",
        "filename": "src/univalue/test/fail2.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail2.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Unclosed array\"\n\\ No newline at end of file"
      },
      {
        "sha": "27c1af3e72ee37bbf64ccd7b77c5bad8cdea1557",
        "filename": "src/univalue/test/fail20.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail20.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail20.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail20.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Double colon\":: null}\n\\ No newline at end of file"
      },
      {
        "sha": "62474573b2160adefc3dc669b39200ea659d6e59",
        "filename": "src/univalue/test/fail21.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail21.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail21.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail21.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Comma instead of colon\", null}\n\\ No newline at end of file"
      },
      {
        "sha": "a7752581bcf7f3b901aef052a2df541c1285b6c2",
        "filename": "src/univalue/test/fail22.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail22.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail22.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail22.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Colon instead of comma\": false]\n\\ No newline at end of file"
      },
      {
        "sha": "494add1ca190e12acd1c8e34ac819a6316c927bc",
        "filename": "src/univalue/test/fail23.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail23.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail23.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail23.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Bad value\", truth]\n\\ No newline at end of file"
      },
      {
        "sha": "caff239bfc36297da08828095105bb497b8aef2a",
        "filename": "src/univalue/test/fail24.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail24.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail24.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail24.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+['single quote']\n\\ No newline at end of file"
      },
      {
        "sha": "8b7ad23e010314591d914519996c28483b5dadc8",
        "filename": "src/univalue/test/fail25.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail25.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail25.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail25.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"\ttab\tcharacter\tin\tstring\t\"]\n\\ No newline at end of file"
      },
      {
        "sha": "845d26a6a54398c49cd492e6836c0d1987f554e4",
        "filename": "src/univalue/test/fail26.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail26.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail26.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail26.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"tab\\   character\\   in\\  string\\  \"]\n\\ No newline at end of file"
      },
      {
        "sha": "6b01a2ca4a97ec36604771dcc3175bbcda865d85",
        "filename": "src/univalue/test/fail27.json",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail27.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail27.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail27.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,2 @@\n+[\"line\n+break\"]\n\\ No newline at end of file"
      },
      {
        "sha": "621a0101c664a619457d16f1107a677c911481b4",
        "filename": "src/univalue/test/fail28.json",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail28.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail28.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail28.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,2 @@\n+[\"line\\\n+break\"]\n\\ No newline at end of file"
      },
      {
        "sha": "47ec421bb6242648e80b2b465049acbae1e6e44a",
        "filename": "src/univalue/test/fail29.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail29.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail29.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail29.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[0e]\n\\ No newline at end of file"
      },
      {
        "sha": "168c81eb78537ea4006ea0a46b67851d9995564d",
        "filename": "src/univalue/test/fail3.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail3.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{unquoted_key: \"keys must be quoted\"}\n\\ No newline at end of file"
      },
      {
        "sha": "8ab0bc4b8b2c73b616a45931d05720555a2f7762",
        "filename": "src/univalue/test/fail30.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail30.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail30.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail30.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[0e+]\n\\ No newline at end of file"
      },
      {
        "sha": "1cce602b518fc6e7f164a58cc710def27e64b8a5",
        "filename": "src/univalue/test/fail31.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail31.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail31.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail31.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[0e+-1]\n\\ No newline at end of file"
      },
      {
        "sha": "45cba7396ff7462dd6de005c32fd2a95c5318e5f",
        "filename": "src/univalue/test/fail32.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail32.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail32.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail32.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Comma instead if closing brace\": true,\n\\ No newline at end of file"
      },
      {
        "sha": "ca5eb19dc97f5ca363ff33a4c3644ad28e612679",
        "filename": "src/univalue/test/fail33.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail33.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail33.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail33.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"mismatch\"}\n\\ No newline at end of file"
      },
      {
        "sha": "3f8be172865d17dd812f50d5cf00a2509f51e6bf",
        "filename": "src/univalue/test/fail34.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail34.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail34.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail34.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{} garbage\n\\ No newline at end of file"
      },
      {
        "sha": "9de168bf34e2e368d044bccc099d44b02316de66",
        "filename": "src/univalue/test/fail4.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail4.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail4.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail4.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"extra comma\",]\n\\ No newline at end of file"
      },
      {
        "sha": "ddf3ce3d2409467011ec7545551d5d078bce1bfd",
        "filename": "src/univalue/test/fail5.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail5.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail5.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail5.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"double extra comma\",,]\n\\ No newline at end of file"
      },
      {
        "sha": "ed91580e1b1c15194a9a758f1b231575074722db",
        "filename": "src/univalue/test/fail6.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail6.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail6.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail6.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[   , \"<-- missing value\"]\n\\ No newline at end of file"
      },
      {
        "sha": "8a96af3e4ee6c7fffd8da641dedcd750a5cc4d9d",
        "filename": "src/univalue/test/fail7.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail7.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail7.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail7.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Comma after the close\"],\n\\ No newline at end of file"
      },
      {
        "sha": "b28479c6ecb21a801d6988b9ea39a4eb00a64702",
        "filename": "src/univalue/test/fail8.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail8.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail8.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail8.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[\"Extra close\"]]\n\\ No newline at end of file"
      },
      {
        "sha": "5815574f363e58cf91578e909ef4dabb402a75de",
        "filename": "src/univalue/test/fail9.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail9.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/fail9.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail9.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+{\"Extra comma\": true,}\n\\ No newline at end of file"
      },
      {
        "sha": "70e26854369282e625e75b302782f581e610f2b3",
        "filename": "src/univalue/test/pass1.json",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/pass1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/pass1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass1.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,58 @@\n+[\n+    \"JSON Test Pattern pass1\",\n+    {\"object with 1 member\":[\"array with 1 element\"]},\n+    {},\n+    [],\n+    -42,\n+    true,\n+    false,\n+    null,\n+    {\n+        \"integer\": 1234567890,\n+        \"real\": -9876.543210,\n+        \"e\": 0.123456789e-12,\n+        \"E\": 1.234567890E+34,\n+        \"\":  23456789012E66,\n+        \"zero\": 0,\n+        \"one\": 1,\n+        \"space\": \" \",\n+        \"quote\": \"\\\"\",\n+        \"backslash\": \"\\\\\",\n+        \"controls\": \"\\b\\f\\n\\r\\t\",\n+        \"slash\": \"/ & \\/\",\n+        \"alpha\": \"abcdefghijklmnopqrstuvwyz\",\n+        \"ALPHA\": \"ABCDEFGHIJKLMNOPQRSTUVWYZ\",\n+        \"digit\": \"0123456789\",\n+        \"0123456789\": \"digit\",\n+        \"special\": \"`1~!@#$%^&*()_+-={':[,]}|;.</>?\",\n+        \"hex\": \"\\u0123\\u4567\\u89AB\\uCDEF\\uabcd\\uef4A\",\n+        \"true\": true,\n+        \"false\": false,\n+        \"null\": null,\n+        \"array\":[  ],\n+        \"object\":{  },\n+        \"address\": \"50 St. James Street\",\n+        \"url\": \"http://www.JSON.org/\",\n+        \"comment\": \"// /* <!-- --\",\n+        \"# -- --> */\": \" \",\n+        \" s p a c e d \" :[1,2 , 3\n+\n+,\n+\n+4 , 5        ,          6           ,7        ],\"compact\":[1,2,3,4,5,6,7],\n+        \"jsontext\": \"{\\\"object with 1 member\\\":[\\\"array with 1 element\\\"]}\",\n+        \"quotes\": \"&#34; \\u0022 %22 0x22 034 &#x22;\",\n+        \"\\/\\\\\\\"\\uCAFE\\uBABE\\uAB98\\uFCDE\\ubcda\\uef4A\\b\\f\\n\\r\\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?\"\n+: \"A key can be any string\"\n+    },\n+    0.5 ,98.6\n+,\n+99.44\n+,\n+\n+1066,\n+1e1,\n+0.1e1,\n+1e-1,\n+1e00,2e+00,2e-00\n+,\"rosebud\"]\n\\ No newline at end of file"
      },
      {
        "sha": "d3c63c7ad845e4cedd0c70d13102b38c51ec197a",
        "filename": "src/univalue/test/pass2.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/pass2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/pass2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass2.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1 @@\n+[[[[[[[[[[[[[[[[[[[\"Not too deep\"]]]]]]]]]]]]]]]]]]]\n\\ No newline at end of file"
      },
      {
        "sha": "4528d51f1ac615e7e11dbb1321dc99187705f0d8",
        "filename": "src/univalue/test/pass3.json",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/pass3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/pass3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass3.json?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,6 @@\n+{\n+    \"JSON Test Pattern pass3\": {\n+        \"The outermost value\": \"must be an object or array.\",\n+        \"In this test\": \"It is an object.\"\n+    }\n+}"
      },
      {
        "sha": "835556e031708f8e3c9d07a8f31980d6a1228986",
        "filename": "src/univalue/test/unitester.cpp",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/unitester.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e16a41313dbc25d88def143cf1e0a964e36c7c0/src/univalue/test/unitester.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/unitester.cpp?ref=6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "patch": "@@ -0,0 +1,115 @@\n+// Copyright 2014 BitPay Inc.\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <string.h>\n+#include <cassert>\n+#include <string>\n+#include \"univalue.h\"\n+\n+#ifndef JSON_TEST_SRC\n+#error JSON_TEST_SRC must point to test source directory\n+#endif\n+\n+#ifndef ARRAY_SIZE\n+#define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))\n+#endif\n+\n+using namespace std;\n+string srcdir(JSON_TEST_SRC);\n+\n+static void runtest(string filename, const string& jdata)\n+{\n+        fprintf(stderr, \"test %s\\n\", filename.c_str());\n+\n+        string prefix = filename.substr(0, 4);\n+\n+        bool wantPass = (prefix == \"pass\");\n+        bool wantFail = (prefix == \"fail\");\n+        assert(wantPass || wantFail);\n+\n+        UniValue val;\n+        bool testResult = val.read(jdata);\n+\n+        if (wantPass) {\n+            assert(testResult == true);\n+        } else {\n+            assert(testResult == false);\n+        }\n+}\n+\n+static void runtest_file(const char *filename_)\n+{\n+        string basename(filename_);\n+        string filename = srcdir + \"/\" + basename;\n+        FILE *f = fopen(filename.c_str(), \"r\");\n+        assert(f != NULL);\n+\n+        string jdata;\n+\n+        char buf[4096];\n+        while (!feof(f)) {\n+                int bread = fread(buf, 1, sizeof(buf), f);\n+                assert(!ferror(f));\n+\n+                string s(buf, bread);\n+                jdata += s;\n+        }\n+\n+        assert(!ferror(f));\n+        fclose(f);\n+\n+        runtest(basename, jdata);\n+}\n+\n+static const char *filenames[] = {\n+        \"fail10.json\",\n+        \"fail11.json\",\n+        \"fail12.json\",\n+        \"fail13.json\",\n+        \"fail14.json\",\n+        \"fail15.json\",\n+        \"fail16.json\",\n+        \"fail17.json\",\n+        //\"fail18.json\",             // investigate\n+        \"fail19.json\",\n+        \"fail1.json\",\n+        \"fail20.json\",\n+        \"fail21.json\",\n+        \"fail22.json\",\n+        \"fail23.json\",\n+        \"fail24.json\",\n+        \"fail25.json\",\n+        \"fail26.json\",\n+        \"fail27.json\",\n+        \"fail28.json\",\n+        \"fail29.json\",\n+        \"fail2.json\",\n+        \"fail30.json\",\n+        \"fail31.json\",\n+        \"fail32.json\",\n+        \"fail33.json\",\n+        \"fail34.json\",\n+        \"fail3.json\",\n+        \"fail4.json\",                // extra comma\n+        \"fail5.json\",\n+        \"fail6.json\",\n+        \"fail7.json\",\n+        \"fail8.json\",\n+        \"fail9.json\",               // extra comma\n+        \"pass1.json\",\n+        \"pass2.json\",\n+        \"pass3.json\",\n+};\n+\n+int main (int argc, char *argv[])\n+{\n+    for (unsigned int fidx = 0; fidx < ARRAY_SIZE(filenames); fidx++) {\n+        runtest_file(filenames[fidx]);\n+    }\n+\n+    return 0;\n+}\n+"
      }
    ]
  },
  {
    "sha": "9623e934732ba0f0a5176cd3d993ebcda327b413",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjIzZTkzNDczMmJhMGYwYTUxNzZjZDNkOTkzZWJjZGEzMjdiNDEz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-04T14:11:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T08:49:57Z"
      },
      "message": "[Univalue] add univalue over subtree\n\nsimilar to secp256k1 include and compile univalue over a subtree",
      "tree": {
        "sha": "fbaf7e369670900b20c1b809885116adbab4c563",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbaf7e369670900b20c1b809885116adbab4c563"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9623e934732ba0f0a5176cd3d993ebcda327b413",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9623e934732ba0f0a5176cd3d993ebcda327b413",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9623e934732ba0f0a5176cd3d993ebcda327b413",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9623e934732ba0f0a5176cd3d993ebcda327b413/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e16a41313dbc25d88def143cf1e0a964e36c7c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e16a41313dbc25d88def143cf1e0a964e36c7c0"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 39,
      "deletions": 43
    },
    "files": [
      {
        "sha": "dbdc356f5d2b36a72dc4ffb351bfe1de8609c5e1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -940,7 +940,7 @@ unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n+AC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n \n AC_OUTPUT\n "
      },
      {
        "sha": "301880dbc344648447e58de62099adc003e4e5a2",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 9,
        "deletions": 14,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -1,4 +1,4 @@\n-DIST_SUBDIRS = secp256k1\n+DIST_SUBDIRS = secp256k1 univalue\n AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS)\n \n \n@@ -21,27 +21,30 @@ BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n+BITCOIN_INCLUDES += -I$(srcdir)/univalue/include\n \n LIBBITCOIN_SERVER=libbitcoin_server.a\n LIBBITCOIN_WALLET=libbitcoin_wallet.a\n LIBBITCOIN_COMMON=libbitcoin_common.a\n LIBBITCOIN_CLI=libbitcoin_cli.a\n LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n-LIBBITCOIN_UNIVALUE=univalue/libbitcoin_univalue.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n+LIBUNIVALUE=univalue/lib/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n+  \n+$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n EXTRA_LIBRARIES = \\\n   crypto/libbitcoin_crypto.a \\\n   libbitcoin_util.a \\\n   libbitcoin_common.a \\\n-  univalue/libbitcoin_univalue.a \\\n   libbitcoin_server.a \\\n   libbitcoin_cli.a\n if ENABLE_WALLET\n@@ -248,14 +251,6 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.cpp \\\n   crypto/sha512.h\n \n-# univalue JSON library\n-univalue_libbitcoin_univalue_a_SOURCES = \\\n-  univalue/univalue.cpp \\\n-  univalue/univalue.h \\\n-  univalue/univalue_escapes.h \\\n-  univalue/univalue_read.cpp \\\n-  univalue/univalue_write.cpp\n-\n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_common_a_SOURCES = \\\n@@ -332,7 +327,7 @@ endif\n bitcoind_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n@@ -360,7 +355,7 @@ endif\n \n bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL)\n \n bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n@@ -376,7 +371,7 @@ bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n endif\n \n bitcoin_tx_LDADD = \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\"
      },
      {
        "sha": "67fd7c1076e0e92eb4ce98e773b45a22a904aad5",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -367,7 +367,7 @@ endif\n if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)"
      },
      {
        "sha": "b8725c872de610dc148ce72066ffc6eefa272a63",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -33,7 +33,7 @@ endif\n if ENABLE_ZMQ\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)"
      },
      {
        "sha": "9a6e43631b42611758421d22a2fa02ad3a9cd614",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -91,7 +91,7 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n@@ -124,6 +124,7 @@ check-local:\n \t@echo \"Running test/bitcoin-util-test.py...\"\n \t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(srcdir)/test/bitcoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check\n \n %.json.h: %.json\n \t@$(MKDIR_P) $(@D)"
      },
      {
        "sha": "e0fe6aa5bfde8ccb2b7d26b47bc617b91cc8cb4d",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -18,7 +18,7 @@\n #include <event2/buffer.h>\n #include <event2/keyvalq_struct.h>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "f7518fab5d19f4588957bfa9974565972a027581",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -12,7 +12,7 @@\n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\""
      },
      {
        "sha": "4be24f8e09725899533d22711af2ac775b400614",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -9,7 +9,7 @@\n #include \"script/script.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\""
      },
      {
        "sha": "533fedfe7a68617c583074c76ccf264c5134ab21",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -10,7 +10,7 @@\n #include \"script/standard.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\""
      },
      {
        "sha": "f387a3ec8c5ef93ef086b6be9b39931e240b0547",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -18,7 +18,7 @@\n \n #include <openssl/crypto.h>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n #ifdef ENABLE_WALLET\n #include <db_cxx.h>"
      },
      {
        "sha": "c46d7a8bd2de75874f40b4cc66a1acf2606281f2",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -18,7 +18,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/dynamic_bitset.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "545ac1289081955ee57322d9de46cca99d16f3d7",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -20,7 +20,7 @@\n \n #include <stdint.h>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "4064c2fee320fb93933c354eb320c48ec79ef9aa",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -12,7 +12,7 @@\n #include <stdint.h>\n \n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "8937a56f035e393d1ab78ea104a22b1187b4189d",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -6,7 +6,7 @@\n #ifndef BITCOIN_RPCCLIENT_H\n #define BITCOIN_RPCCLIENT_H\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n UniValue RPCConvertValues(const std::string& strMethod, const std::vector<std::string>& strParams);\n /** Non-RFC4627 JSON parser, accepts internal values (such as numbers, true, false, null)"
      },
      {
        "sha": "c49c3e5194a1f4c29061ace337430a25f24c61f1",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -25,7 +25,7 @@\n #include <boost/assign/list_of.hpp>\n #include <boost/shared_ptr.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "0f0457c5cfa2b521f13a8393b464ce1c5f3fd232",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -22,7 +22,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "7746be25f73c9af7ddf2c863fa8d35b040a6fab9",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -19,7 +19,7 @@\n \n #include <boost/foreach.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "9cf1ab6d99ce9b1cbb3a9c50ae5860de3b0aae4f",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <boost/filesystem.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n //! HTTP status codes\n enum HTTPStatusCode"
      },
      {
        "sha": "4dec53396de89a9d88dfc582c90ec194bd62eb4f",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -31,7 +31,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "fa60f8c833f0d50247b0d831aac757571b961c98",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -13,7 +13,7 @@\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>"
      },
      {
        "sha": "dde8dfdcc3dbecfb9da7f3cce3fc2ec7ac6d5175",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -17,7 +17,7 @@\n \n #include <boost/function.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n class CRPCCommand;\n "
      },
      {
        "sha": "9845df697f996b8d04f92ac79fd0b8e6e78c51ed",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -18,7 +18,7 @@\n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n extern UniValue read_json(const std::string& jsondata);\n "
      },
      {
        "sha": "2a486f08e43518fb0758e6b81562ba6aa3b2b2b6",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -13,7 +13,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "2e652f76e272dd95142c07bb52210ed3a90eb982",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -14,7 +14,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "882f9eb199c2ae1e8b649079a73a0f7472a14695",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -27,7 +27,7 @@\n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "6fca64d5da3cd564e69c788642644c591304ab86",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -20,7 +20,7 @@\n \n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n extern UniValue read_json(const std::string& jsondata);\n "
      },
      {
        "sha": "beec39667537718bcf92ca51495303a67fec42d7",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -26,7 +26,7 @@\n #include <boost/test/unit_test.hpp>\n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "945c1acbeb49f6d07150d61207bd956a7b5aafdb",
        "filename": "src/test/univalue_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/univalue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/test/univalue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/univalue_tests.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -6,7 +6,7 @@\n #include <vector>\n #include <string>\n #include <map>\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"test/test_bitcoin.h\"\n \n #include <boost/test/unit_test.hpp>"
      },
      {
        "sha": "c431fc401311dbac3f99c199206ed8f089b8ff46",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -20,7 +20,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/date_time/posix_time/posix_time.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n #include <boost/foreach.hpp>\n "
      },
      {
        "sha": "30b854477b04b73984330f42a5e24216d5b9b67a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9623e934732ba0f0a5176cd3d993ebcda327b413/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9623e934732ba0f0a5176cd3d993ebcda327b413/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9623e934732ba0f0a5176cd3d993ebcda327b413",
        "patch": "@@ -22,7 +22,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      }
    ]
  },
  {
    "sha": "12a7712abd49079cbd128caab8904684c7563fff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMmE3NzEyYWJkNDkwNzljYmQxMjhjYWFiODkwNDY4NGM3NTYzZmZm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T09:16:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T09:20:08Z"
      },
      "message": "Merge pull request #5924\n\n835c122 Clean up change computation in CreateTransaction. (Daniel Kraft)",
      "tree": {
        "sha": "76ff04241d284c6646b1d92a767a4d03ed458974",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76ff04241d284c6646b1d92a767a4d03ed458974"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12a7712abd49079cbd128caab8904684c7563fff",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDPrIAAoJEHSBCwEjRsmmjMUIAJjVnUzqVsEhlLuNnr1eZbiV\nGpFehBlS+cbVmTBUjtiNXN4n6zi7CfbsmQjTOyZxhHHUrTs1aSJ5ll/S5aUme7mc\nvMn2zh8m5Z83q0F6GcAQBCUqCUF2urTh9iiZdSXF1MpmGO5gPV6t1zwLWVVLmSON\nC+56uJOtRi3i+SZmjZcvkozvLmOeEKhhcussM7E5T6ufSGOgYBhhY8WH9RxWPBrM\nxwMZeH/+cc0AtxjV3jtKCybptVouQDtcDj6j1NBhBK4cdpHMr4ISp+yA467//Zn1\nWdFCo4zL0JA1dZlLyGe0zgCE77/W1kELdgqGNmZSDodF0aHoDsh0HGjSlESNtdU=\n=YU5R\n-----END PGP SIGNATURE-----",
        "payload": "tree 76ff04241d284c6646b1d92a767a4d03ed458974\nparent 1119cc3f5918575ca397518c9fd31a64704c7e4f\nparent 835c12291efc2ca03017622fe970218fdeb63727\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443690974 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443691208 +0200\n\nMerge pull request #5924\n\n835c122 Clean up change computation in CreateTransaction. (Daniel Kraft)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12a7712abd49079cbd128caab8904684c7563fff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/12a7712abd49079cbd128caab8904684c7563fff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12a7712abd49079cbd128caab8904684c7563fff/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1119cc3f5918575ca397518c9fd31a64704c7e4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1119cc3f5918575ca397518c9fd31a64704c7e4f"
      },
      {
        "sha": "835c12291efc2ca03017622fe970218fdeb63727",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/835c12291efc2ca03017622fe970218fdeb63727",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/835c12291efc2ca03017622fe970218fdeb63727"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "bd3004061b1c88f0291092099dd1ce25c9b1b720",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12a7712abd49079cbd128caab8904684c7563fff/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12a7712abd49079cbd128caab8904684c7563fff/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=12a7712abd49079cbd128caab8904684c7563fff",
        "patch": "@@ -1852,9 +1852,9 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 nChangePosRet = -1;\n                 bool fFirst = true;\n \n-                CAmount nTotalValue = nValue;\n+                CAmount nValueToSelect = nValue;\n                 if (nSubtractFeeFromAmount == 0)\n-                    nTotalValue += nFeeRet;\n+                    nValueToSelect += nFeeRet;\n                 double dPriority = 0;\n                 // vouts to the payees\n                 BOOST_FOREACH (const CRecipient& recipient, vecSend)\n@@ -1891,7 +1891,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 // Choose coins to use\n                 set<pair<const CWalletTx*,unsigned int> > setCoins;\n                 CAmount nValueIn = 0;\n-                if (!SelectCoins(nTotalValue, setCoins, nValueIn, coinControl))\n+                if (!SelectCoins(nValueToSelect, setCoins, nValueIn, coinControl))\n                 {\n                     strFailReason = _(\"Insufficient funds\");\n                     return false;\n@@ -1909,10 +1909,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                     dPriority += (double)nCredit * age;\n                 }\n \n-                CAmount nChange = nValueIn - nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nChange -= nFeeRet;\n-\n+                const CAmount nChange = nValueIn - nValueToSelect;\n                 if (nChange > 0)\n                 {\n                     // Fill a vout to ourself"
      }
    ]
  },
  {
    "sha": "cf9bb11f97dbff428e9aee3b65e068d70af08e17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjliYjExZjk3ZGJmZjQyOGU5YWVlM2I2NWUwNjhkNzBhZjA4ZTE3",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-01T09:58:51Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-01T09:58:51Z"
      },
      "message": "Merge pull request #6588",
      "tree": {
        "sha": "bdea635cc8deb4925b0c7697f0a218d1f535b2b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdea635cc8deb4925b0c7697f0a218d1f535b2b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf9bb11f97dbff428e9aee3b65e068d70af08e17",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVg0D6SWzCDIBeCsvAQKfVA/9GRjr8RtgRD6PRZE/0Ey7//uZF26TKVSi\n5YV0ZbDDkNd2yHwgBZaRrZtphDWY4Z0+l/3A8yJ9NY/RK0+9MbtIgWpyTcus1Mdh\nPcnvg8K/sNuIaF851zQknACSerGanX1VLYOxexOH0cofLS4rs3+Iy1At0YzsovLy\neSbf8eQv/D7lKVlTLUsr2R36w/wPA7UKSZu9dNUUb5Fq+Zni/kK2B1u8jveH+RSZ\nzkFh3Rhpo0kXll8rR/fL3d4awqTYR6YwOtwWCUDCmI15tMd7kMz9I7xjVWiEiQzF\nJYp80cicfJOllhbCT5aK0mCbOsfYX3J0JJGMcsc23n6m8BGobSDgmwPbF8CcWnGw\niGfr3Jqpa5jo3RREfHg64MZRIeJg+dJJ8cgS8OxslKMK49qL9oXGlsxrAhxvtR/C\nwMp09wBG7zk+5rCPGzUsZXi23X19DSdZ8mO6eDBZDuYsAYxCda5BEqsxzIBa7C8s\n0L8nLVqA9/9j/LbqK1IlEAv/1vyFCF9ROdm635A0JqYzcvf+Y0M3cyfNP0YQJI/1\nok3CBwoOu0/S5csDJzpRerHr6zNhdV1jJ7L9saIiMbZ83ZmR5E7+OAf53QiBOpCe\nfRBX8Euyv0u9vQUasj89nKnsE88cSTY3K8WpswRE/aPEq6p6/bK3M9E+9Gd/FgPK\nAqCahYJ4LNo=\n=+yml\n-----END PGP SIGNATURE-----",
        "payload": "tree bdea635cc8deb4925b0c7697f0a218d1f535b2b5\nparent 12a7712abd49079cbd128caab8904684c7563fff\nparent 9524c4d35cb6ec4bd7becf1d938d21c536669d1f\nauthor Jeff Garzik <jgarzik@pobox.com> 1443693531 -0400\ncommitter Jeff Garzik <jgarzik@pobox.com> 1443693531 -0400\n\nMerge pull request #6588\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf9bb11f97dbff428e9aee3b65e068d70af08e17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf9bb11f97dbff428e9aee3b65e068d70af08e17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf9bb11f97dbff428e9aee3b65e068d70af08e17/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12a7712abd49079cbd128caab8904684c7563fff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12a7712abd49079cbd128caab8904684c7563fff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12a7712abd49079cbd128caab8904684c7563fff"
      },
      {
        "sha": "9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9524c4d35cb6ec4bd7becf1d938d21c536669d1f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e8a6edc225078bd90ee0c301d1c3ec2f8c2d1cf5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf9bb11f97dbff428e9aee3b65e068d70af08e17/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf9bb11f97dbff428e9aee3b65e068d70af08e17/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=cf9bb11f97dbff428e9aee3b65e068d70af08e17",
        "patch": "@@ -4280,6 +4280,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         mapAlreadyAskedFor.erase(inv);\n \n+        // Check for recently rejected (and do other quick existence checks)\n+        if (AlreadyHave(inv))\n+            return true;\n+\n         if (AcceptToMemoryPool(mempool, state, tx, true, &fMissingInputs))\n         {\n             mempool.check(pcoinsTip);\n@@ -4355,13 +4359,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             if (nEvicted > 0)\n                 LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n         } else {\n-            // AcceptToMemoryPool() returned false, possibly because the tx is\n-            // already in the mempool; if the tx isn't in the mempool that\n-            // means it was rejected and we shouldn't ask for it again.\n-            if (!mempool.exists(tx.GetHash())) {\n-                assert(recentRejects);\n-                recentRejects->insert(tx.GetHash());\n-            }\n+            assert(recentRejects);\n+            recentRejects->insert(tx.GetHash());\n+\n             if (pfrom->fWhitelisted) {\n                 // Always relay transactions received from whitelisted peers, even\n                 // if they were rejected from the mempool, allowing the node to"
      }
    ]
  },
  {
    "sha": "8a86d53bd5705712bebd74a037ec702bf17b83bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTg2ZDUzYmQ1NzA1NzEyYmViZDc0YTAzN2VjNzAyYmYxN2I4M2Jj",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-01T10:02:14Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-01T10:02:14Z"
      },
      "message": "Merge pull request #6731",
      "tree": {
        "sha": "eac39e94ad56b4f0cf0828d261248fdf3949f99b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eac39e94ad56b4f0cf0828d261248fdf3949f99b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a86d53bd5705712bebd74a037ec702bf17b83bc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVg0EsSWzCDIBeCsvAQJkgw/+PcJTXcn2CAWQ85R0mEYhDvMJZDTOtBma\nG/huFd1wrD9SSKa0S/eTsMJlHaK6imsSIY1mkjaFfXaVk00v6ZnnU/G+OZiovqaq\nsMmz1cNDmdm8jQ08bDOGlPes3XB5uOxNNDmQRcAAYLnNJUTASVEu33PP5J9S0YCg\nebMgUtXzFcIQgs2TvyjgwYtz8UPBp7yqQ6T1dRE97Yu+kIX3DbPrN/vpMeqww4UA\nRKhqtPGjBxRuitikbT0ah1rPLesbz4FXD0cAprg9BcLaTV8kCy6Z9b0ilnd1aerZ\n+89XejP6n/MnDS2LnoQr5jlmsrTtCu/Ic6hEHgt9zpcEyfCTAzNh6PTFOOLtX812\n9OjWQqbK612It2qzf2iMNGKOSqVLH5GH4lyyN3avCJ8hQe0Lz4OOg+wyQjvbuJ3d\nukNghizc7Nd/p+LWTdgDB3JstVZJ/tGtQ0hL7VEL1K8WMekz2SfPXsZuy6INYM53\n713zPK9BSuP3ROem2ZxDpuBpiL42d8GBODwQIG23pPDQbeW62l8yNDMNu534HC9K\nmvGimx1yYgKSuMfdypd3GWN+O9O9oIkOA9ALU5HQDi9Fv4ZgVsMm93VRtIelGkB9\nm0E+NE+bHMVqyssRd+YFu5/JESKZz1MHWOI4TsZ73ZQi1BA1ZQjhxjWJCBlcQ97F\nWWrNLYz1yIQ=\n=Oyw6\n-----END PGP SIGNATURE-----",
        "payload": "tree eac39e94ad56b4f0cf0828d261248fdf3949f99b\nparent cf9bb11f97dbff428e9aee3b65e068d70af08e17\nparent 9639eadd93d988e9ea10e68ef38b21b33f76dc41\nauthor Jeff Garzik <jgarzik@pobox.com> 1443693734 -0400\ncommitter Jeff Garzik <jgarzik@pobox.com> 1443693734 -0400\n\nMerge pull request #6731\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a86d53bd5705712bebd74a037ec702bf17b83bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a86d53bd5705712bebd74a037ec702bf17b83bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a86d53bd5705712bebd74a037ec702bf17b83bc/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf9bb11f97dbff428e9aee3b65e068d70af08e17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf9bb11f97dbff428e9aee3b65e068d70af08e17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf9bb11f97dbff428e9aee3b65e068d70af08e17"
      },
      {
        "sha": "9639eadd93d988e9ea10e68ef38b21b33f76dc41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9639eadd93d988e9ea10e68ef38b21b33f76dc41"
      }
    ],
    "stats": {
      "total": 189,
      "additions": 189,
      "deletions": 0
    },
    "files": [
      {
        "sha": "28fa784515038d9469cc3c30fcb88999f2519ae1",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a86d53bd5705712bebd74a037ec702bf17b83bc/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a86d53bd5705712bebd74a037ec702bf17b83bc/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=8a86d53bd5705712bebd74a037ec702bf17b83bc",
        "patch": "@@ -0,0 +1,187 @@\n+OpenBSD build guide\n+======================\n+(updated for OpenBSD 5.7)\n+\n+This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+\n+As OpenBSD is most common as a server OS, we will not bother with the GUI.\n+\n+Preparation\n+-------------\n+\n+Run the following as root to install the base dependencies for building:\n+\n+```bash\n+pkg_add gmake libtool libevent\n+pkg_add autoconf # (select highest version, e.g. 2.69)\n+pkg_add automake # (select highest version, e.g. 1.15)\n+pkg_add python # (select version 2.7.x, not 3.x)\n+ln -sf /usr/local/bin/python2.7 /usr/local/bin/python2\n+```\n+\n+The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.\n+\n+GCC\n+-------\n+\n+You can install a newer version of gcc with:\n+\n+```bash\n+pkg_add g++ # (select newest 4.x version, e.g. 4.9.2)\n+```\n+\n+This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n+\n+### Building boost\n+\n+Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n+\n+    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    ...\n+    Segmentation fault (core dumped) \n+\n+This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+\n+```\n+# Pick some path to install boost to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+mkdir -p $BOOST_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget http://heanet.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\n+echo '727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca  boost_1_59_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_59_0.tar.bz2: OK\n+tar -xjf boost_1_59_0.tar.bz2\n+\n+# Boost 1.59 needs two small patches for OpenBSD\n+cd boost_1_59_0\n+# Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp \n+# https://github.com/boostorg/filesystem/commit/90517e459681790a091566dce27ca3acabf9a70c\n+sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n+mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n+\n+# Build w/ minimum configuration necessary for bitcoin\n+echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n+config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n+./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n+./b2 -d2 -j2 -d1 ${config_opts} --prefix=${BOOST_PREFIX} stage\n+./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n+```\n+\n+### OpenSSL\n+\n+OpenBSD uses a replacement of OpenSSL: LibreSSL. This can cause compatibility issues, hence `./configure` will bark if you try to compile with this library:\n+\n+    Detected LibreSSL: This is NOT supported, and may break consensus compatibility!\n+\n+To install a 'real' OpenSSL use:\n+\n+    pkg_add openssl\n+   \n+Any program linked against this library can only be used after setting the dynamic library path:\n+    \n+    export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n+\n+(otherwise there will be an error about not being able to find `libcrypto.so.1.0`)\n+\n+Alternatively, pass `--with-libressl` to `./configure`, however as the warning says, this is NOT supported, and may cause problems syncing the chain, or the node to fork off the network in unexpected circumstances.\n+\n+### Building BerkeleyDB\n+\n+BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n+\n+See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to build BerkeleyDB 4.8.\n+You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n+\n+```bash\n+# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256 -c\n+# MUST output: (SHA256) db-4.8.30.NC.tar.gz: OK\n+tar -xzf db-4.8.30.NC.tar.gz\n+\n+# Build the library and install to specified prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp \n+make install\n+```\n+\n+### Building Bitcoin Core\n+\n+**Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n+\n+Preparation:\n+```bash\n+export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you installed\n+export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n+./autogen.sh\n+```\n+\n+To configure with wallet:\n+```bash\n+./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\" \\\n+    LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+```\n+\n+To configure without wallet:\n+```bash\n+./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+```\n+\n+Build and run the tests:\n+```bash\n+gmake\n+export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n+gmake check\n+```\n+\n+Clang (not currently working)\n+------------------------------\n+\n+Using a newer g++ results in linking the new code to a new libstdc++.\n+Libraries built with the old g++, will still import the old library.\n+This gives conflicts, necessitating rebuild of all C++ dependencies of the application.\n+\n+With clang this can - at least theoretically - be avoided because it uses the\n+base system's libstdc++.\n+\n+```bash\n+pkg_add llvm boost\n+```\n+\n+```bash\n+./configure --disable-wallet --with-gui=no CC=clang CXX=clang++ \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+gmake\n+```\n+\n+However, this does not appear to work. Compilation succeeds, but link fails\n+with many 'local symbol discarded' errors:\n+\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+\n+According to similar reported errors this is a binutils (ld) issue in 2.15, the\n+version installed by OpenBSD 5.7:\n+\n+- http://openbsd-archive.7691.n7.nabble.com/UPDATE-cppcheck-1-65-td248900.html\n+- https://llvm.org/bugs/show_bug.cgi?id=9758\n+\n+There is no known workaround for this.\n+"
      },
      {
        "sha": "a9a0028c4a5513f5c727df3c5385dcc0f6fc7397",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a86d53bd5705712bebd74a037ec702bf17b83bc/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a86d53bd5705712bebd74a037ec702bf17b83bc/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=8a86d53bd5705712bebd74a037ec702bf17b83bc",
        "patch": "@@ -2,6 +2,8 @@ UNIX BUILD NOTES\n ====================\n Some notes on how to build Bitcoin in Unix.\n \n+(for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n+\n Note\n ---------------------\n Always use absolute paths to configure and compile bitcoin and the dependencies,"
      }
    ]
  },
  {
    "sha": "a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWMyN2NkZjU1ZDViNWI3ZTA3ZDE4OWU1YmZlMmQ2YmM4NTg2N2Ji",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-17T14:32:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T12:02:26Z"
      },
      "message": "[travis] add zmq python module",
      "tree": {
        "sha": "e9c69ee9b61b2f9ffea274295fd6c432b8f941d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9c69ee9b61b2f9ffea274295fd6c432b8f941d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "110a1fd7271eb90448498302e2d95dab770513d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/110a1fd7271eb90448498302e2d95dab770513d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/110a1fd7271eb90448498302e2d95dab770513d6"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "cd79aa410889bac9278ba83567aae91b5ba59d46",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
        "patch": "@@ -33,11 +33,11 @@ matrix:\n     - compiler: \": Win32\"\n       env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n       env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n@@ -47,6 +47,7 @@ matrix:\n install:\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n     - unset CC; unset CXX"
      },
      {
        "sha": "e949b61f5de3a02fcb095e4e5e2047c9cfd7b456",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
        "patch": "@@ -32,15 +32,15 @@ def setup_nodes(self):\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % self.port)\n-        # Note: proxies are not used to connect to local nodes\n-        # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n         return start_nodes(4, self.options.tmpdir, extra_args=[\n             ['-zmqpubhashtx=tcp://127.0.0.1:'+str(self.port), '-zmqpubhashblock=tcp://127.0.0.1:'+str(self.port)],\n             [],\n             [],\n             []\n             ])\n \n+        return nodes\n+\n     def run_test(self):\n         self.sync_all()\n "
      }
    ]
  },
  {
    "sha": "4899a04c24b927166048a74999992d216a543c23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODk5YTA0YzI0YjkyNzE2NjA0OGE3NDk5OTk5MmQyMTZhNTQzYzIz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T12:11:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T12:11:56Z"
      },
      "message": "Merge pull request #5987\n\ne761d7a Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case) (Luke Dashjr)",
      "tree": {
        "sha": "d0a993cdb666e2c00734e6b05334c6763923215f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0a993cdb666e2c00734e6b05334c6763923215f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4899a04c24b927166048a74999992d216a543c23",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDSMMAAoJEHSBCwEjRsmmvLMH/RV5aWiI7qr88VshL9M8zGoB\n7xM601vIJcc/qcjFUZxhEm+R91zekvG7HC0wIkvoEGYyCIxukOZQbUc5Fj46y19Y\nC6b0mav9iyT3cwhyXeVXt97MEFzJ7SAIW0zEI8I6OBs34L7MkUpFZB9E+w21PcmD\nXw3oHqP8kL7pK+GnPp4KyfYrnzLdAfHFMd5vFPFuO1oqSk7NdZFzICV+gmwVyK2F\nXGk3mUJoZajz8PC8baqXCtI0DGtsWC01X7DgGr8wHJwi9NuIJ0Yw9bI+iaxx+QQE\nmZWTnUPXor48GZuHN2rqz+lwyodAQLOGI1i3sXCxwZhS7yPaHSSS7/HhdE9d6as=\n=+WQe\n-----END PGP SIGNATURE-----",
        "payload": "tree d0a993cdb666e2c00734e6b05334c6763923215f\nparent 8a86d53bd5705712bebd74a037ec702bf17b83bc\nparent e761d7a94ff8b9f638b65b16f5c4ffab6573884a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443701514 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443701516 +0200\n\nMerge pull request #5987\n\ne761d7a Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case) (Luke Dashjr)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4899a04c24b927166048a74999992d216a543c23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4899a04c24b927166048a74999992d216a543c23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4899a04c24b927166048a74999992d216a543c23/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a86d53bd5705712bebd74a037ec702bf17b83bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a86d53bd5705712bebd74a037ec702bf17b83bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a86d53bd5705712bebd74a037ec702bf17b83bc"
      },
      {
        "sha": "e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e761d7a94ff8b9f638b65b16f5c4ffab6573884a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e761d7a94ff8b9f638b65b16f5c4ffab6573884a"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "430b75683bb55f1b8198e555f3847a8a5b261fe6",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4899a04c24b927166048a74999992d216a543c23/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4899a04c24b927166048a74999992d216a543c23/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=4899a04c24b927166048a74999992d216a543c23",
        "patch": "@@ -87,6 +87,7 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         vAlertPubKey = ParseHex(\"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\");\n         nDefaultPort = 8333;\n+        nMaxTipAge = 24 * 60 * 60;\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n@@ -160,6 +161,7 @@ class CTestNetParams : public CChainParams {\n         pchMessageStart[3] = 0x07;\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n+        nMaxTipAge = 0x7fffffff;\n         nPruneAfterHeight = 1000;\n \n         genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n@@ -220,6 +222,7 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n+        nMaxTipAge = 24 * 60 * 60;\n         nDefaultPort = 18444;\n         nPruneAfterHeight = 1000;\n "
      },
      {
        "sha": "342bccb12f78068dba519147d3709ca13534db1e",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4899a04c24b927166048a74999992d216a543c23/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4899a04c24b927166048a74999992d216a543c23/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=4899a04c24b927166048a74999992d216a543c23",
        "patch": "@@ -64,6 +64,7 @@ class CChainParams\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n     bool RequireStandard() const { return fRequireStandard; }\n+    int64_t MaxTipAge() const { return nMaxTipAge; }\n     int64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n     /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n@@ -83,6 +84,7 @@ class CChainParams\n     //! Raw pub key bytes for the broadcast alert signing key.\n     std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n+    long nMaxTipAge;\n     uint64_t nPruneAfterHeight;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];"
      },
      {
        "sha": "5cfb05b0d288eae73da0e0a965490f710999648e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4899a04c24b927166048a74999992d216a543c23/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4899a04c24b927166048a74999992d216a543c23/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4899a04c24b927166048a74999992d216a543c23",
        "patch": "@@ -1112,7 +1112,7 @@ bool IsInitialBlockDownload()\n     if (lockIBDState)\n         return false;\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n-            pindexBestHeader->GetBlockTime() < GetTime() - 24 * 60 * 60);\n+            pindexBestHeader->GetBlockTime() < GetTime() - chainParams.MaxTipAge());\n     if (!state)\n         lockIBDState = true;\n     return state;"
      }
    ]
  },
  {
    "sha": "95acf3cc6d90d9406030ce897efdee8be0550a53",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWFjZjNjYzZkOTBkOTQwNjAzMGNlODk3ZWZkZWU4YmUwNTUwYTUz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T11:01:58Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T12:28:44Z"
      },
      "message": "remove $(@F) and subdirs from univalue make",
      "tree": {
        "sha": "a92fc9e9b94c44439b3b205b94607ea68259f650",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a92fc9e9b94c44439b3b205b94607ea68259f650"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95acf3cc6d90d9406030ce897efdee8be0550a53",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95acf3cc6d90d9406030ce897efdee8be0550a53",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95acf3cc6d90d9406030ce897efdee8be0550a53",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95acf3cc6d90d9406030ce897efdee8be0550a53/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9623e934732ba0f0a5176cd3d993ebcda327b413",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9623e934732ba0f0a5176cd3d993ebcda327b413",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9623e934732ba0f0a5176cd3d993ebcda327b413"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "462774389a22b4ad9ebb859b7a8dfdf7a3b5e350",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95acf3cc6d90d9406030ce897efdee8be0550a53/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95acf3cc6d90d9406030ce897efdee8be0550a53/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=95acf3cc6d90d9406030ce897efdee8be0550a53",
        "patch": "@@ -36,8 +36,8 @@ LIBUNIVALUE=univalue/lib/libunivalue.la\n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n   \n-$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n-\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n+$(LIBUNIVALUE): $(wildcard univalue/lib/*)\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue/\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:"
      }
    ]
  },
  {
    "sha": "59783884766d00866e190ba5ae761916e932df10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTc4Mzg4NDc2NmQwMDg2NmUxOTBiYTVhZTc2MTkxNmU5MzJkZjEw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T14:06:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T12:44:27Z"
      },
      "message": "build: remove libressl check\n\nNow that BIP66 passed, OpenSSL is no longer directly part of the\nconsensus. What matters is that DER signatures are correctly parsed, and\nsecp256k1 crypto is implemented correctly (as well as the other\nfunctions we use from OpenSSL, such as random number generation)\n\nThis means that effectively, using LibreSSL is not a larger risk than\nusing another version of OpenSSL.\n\nRemove the specific check for LibreSSL.\n\nIncludes the still-relevant part of #6729: make sure CHECK_HEADER is\ncalled using the right CXXFLAGS, not CFLAGS (as AC_LANG is c++).",
      "tree": {
        "sha": "147cb31c959d7d4fdadbdaba9346b713bd7cf662",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/147cb31c959d7d4fdadbdaba9346b713bd7cf662"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59783884766d00866e190ba5ae761916e932df10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59783884766d00866e190ba5ae761916e932df10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59783884766d00866e190ba5ae761916e932df10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59783884766d00866e190ba5ae761916e932df10/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4899a04c24b927166048a74999992d216a543c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4899a04c24b927166048a74999992d216a543c23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4899a04c24b927166048a74999992d216a543c23"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 3,
      "deletions": 18
    },
    "files": [
      {
        "sha": "8b518b09cf0548cf4d374d07704ed3fb38e7b960",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 18,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59783884766d00866e190ba5ae761916e932df10/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59783884766d00866e190ba5ae761916e932df10/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=59783884766d00866e190ba5ae761916e932df10",
        "patch": "@@ -700,27 +700,12 @@ else\n   fi\n fi\n \n-CFLAGS_TEMP=\"$CFLAGS\"\n+CXXFLAGS_TEMP=\"$CXXFLAGS\"\n LIBS_TEMP=\"$LIBS\"\n-CFLAGS=\"$CFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n-\n-AC_MSG_CHECKING(for a supported OpenSSL version)\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <openssl/rand.h>\n-  ]],\n-  [[RAND_egd(NULL);]])],\n-  [AC_MSG_RESULT(yes)],\n-  [\n-    AC_ARG_WITH([libressl],\n-    [AS_HELP_STRING([--with-libressl],[Build with system LibreSSL (default is no; DANGEROUS; NOT SUPPORTED)])],\n-    [AC_MSG_WARN([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])],\n-    [AC_MSG_ERROR([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])]\n-    )]\n-)\n-\n-CFLAGS=\"$CFLAGS_TEMP\"\n+CXXFLAGS=\"$CXXFLAGS_TEMP\"\n LIBS=\"$LIBS_TEMP\"\n \n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)"
      }
    ]
  },
  {
    "sha": "a3874c7c3aeefc2330424f0247129a89c27edcd8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzg3NGM3YzNhZWVmYzIzMzA0MjRmMDI0NzEyOWE4OWMyN2VkY2Q4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T12:46:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T12:55:57Z"
      },
      "message": "doc: no longer require use of openssl in OpenBSD build guide",
      "tree": {
        "sha": "1a7a957febe4d03e5bada7506cd2a07067fcb871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a7a957febe4d03e5bada7506cd2a07067fcb871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3874c7c3aeefc2330424f0247129a89c27edcd8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3874c7c3aeefc2330424f0247129a89c27edcd8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3874c7c3aeefc2330424f0247129a89c27edcd8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3874c7c3aeefc2330424f0247129a89c27edcd8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "59783884766d00866e190ba5ae761916e932df10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59783884766d00866e190ba5ae761916e932df10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/59783884766d00866e190ba5ae761916e932df10"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 3,
      "deletions": 27
    },
    "files": [
      {
        "sha": "a26b52465e94913fbbd341aee4b6d38dc3a049c4",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 3,
        "deletions": 27,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3874c7c3aeefc2330424f0247129a89c27edcd8/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3874c7c3aeefc2330424f0247129a89c27edcd8/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=a3874c7c3aeefc2330424f0247129a89c27edcd8",
        "patch": "@@ -70,24 +70,6 @@ config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static v\n ./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n ```\n \n-### OpenSSL\n-\n-OpenBSD uses a replacement of OpenSSL: LibreSSL. This can cause compatibility issues, hence `./configure` will bark if you try to compile with this library:\n-\n-    Detected LibreSSL: This is NOT supported, and may break consensus compatibility!\n-\n-To install a 'real' OpenSSL use:\n-\n-    pkg_add openssl\n-   \n-Any program linked against this library can only be used after setting the dynamic library path:\n-    \n-    export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n-\n-(otherwise there will be an error about not being able to find `libcrypto.so.1.0`)\n-\n-Alternatively, pass `--with-libressl` to `./configure`, however as the warning says, this is NOT supported, and may cause problems syncing the chain, or the node to fork off the network in unexpected circumstances.\n-\n ### Building BerkeleyDB\n \n BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n@@ -124,28 +106,24 @@ export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you i\n export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n ./autogen.sh\n ```\n+Make sure `BDB_PREFIX` and `BOOST_PREFIX` are set to the appropriate paths from the above steps.\n \n To configure with wallet:\n ```bash\n ./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n     CC=egcc CXX=eg++ CPP=ecpp \\\n-    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n-    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\" \\\n     LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n ```\n \n To configure without wallet:\n ```bash\n ./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n-    CC=egcc CXX=eg++ CPP=ecpp \\\n-    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n-    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+    CC=egcc CXX=eg++ CPP=ecpp\n ```\n \n Build and run the tests:\n ```bash\n gmake\n-export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n gmake check\n ```\n \n@@ -164,9 +142,7 @@ pkg_add llvm boost\n ```\n \n ```bash\n-./configure --disable-wallet --with-gui=no CC=clang CXX=clang++ \\\n-    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n-    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+./configure --disable-wallet --with-gui=no CC=clang CXX=clang++\n gmake\n ```\n "
      }
    ]
  },
  {
    "sha": "745f909925be419914083c66867150b11fa3a7b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDVmOTA5OTI1YmU0MTk5MTQwODNjNjY4NjcxNTBiMTFmYTNhN2Iy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-09-29T21:01:43Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-01T13:40:57Z"
      },
      "message": "travis: install a recent libzmq and pyzmq for tests",
      "tree": {
        "sha": "b55463b5c7e55b80f7408380d03e5c563adf9f90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b55463b5c7e55b80f7408380d03e5c563adf9f90"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/745f909925be419914083c66867150b11fa3a7b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/745f909925be419914083c66867150b11fa3a7b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/745f909925be419914083c66867150b11fa3a7b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/745f909925be419914083c66867150b11fa3a7b2/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9c27cdf55d5b5b7e07d189e5bfe2d6bc85867bb"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3e7077ab2659994e0c7991c7c5c043e231e3b337",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/745f909925be419914083c66867150b11fa3a7b2/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/745f909925be419914083c66867150b11fa3a7b2/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=745f909925be419914083c66867150b11fa3a7b2",
        "patch": "@@ -33,21 +33,21 @@ matrix:\n     - compiler: \": Win32\"\n       env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n       env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n       env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n install:\n+    - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n     - unset CC; unset CXX"
      },
      {
        "sha": "bcb132321a4c6931efe41d8d1ae3605d9278d62b",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/745f909925be419914083c66867150b11fa3a7b2/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/745f909925be419914083c66867150b11fa3a7b2/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=745f909925be419914083c66867150b11fa3a7b2",
        "patch": "@@ -39,8 +39,6 @@ def setup_nodes(self):\n             []\n             ])\n \n-        return nodes\n-\n     def run_test(self):\n         self.sync_all()\n "
      }
    ]
  },
  {
    "sha": "17d0e638b66b9dd51370335c9b0a7039de3f81fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2QwZTYzOGI2NmI5ZGQ1MTM3MDMzNWM5YjBhNzAzOWRlM2Y4MWZh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T14:12:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T14:22:26Z"
      },
      "message": "Merge pull request #6686\n\n745f909 travis: install a recent libzmq and pyzmq for tests (Cory Fields)\na9c27cd [travis] add zmq python module (Jonas Schnelli)\n110a1fd enable zmq-test in rpc-tests.sh (Jonas Schnelli)",
      "tree": {
        "sha": "5f23133631a574afda55dbad76e451d172856fd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f23133631a574afda55dbad76e451d172856fd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17d0e638b66b9dd51370335c9b0a7039de3f81fa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDUGiAAoJEHSBCwEjRsmmRF8H/RskNZojzvZSgqgYV12cCCsi\ncwk8vmCI7OtsYl1mKEzCkRS+Ry63Vi6Nyfbq4kw6e9HAWeUSQycGejDqTNT1ep1L\nOgZVCWzj3wnM5fkK6BPKMOZV2R2FlHRSPsd1J1fnf/51HP7+8t8FyQxi6RIpZ2y/\ncQiND5m/MJaSUJjfdOQELJsHn7V3ZLGGO1EWQAyH/42794s+XSmS0q1SMMC1LTzb\nvtkyCkAE5iZ6+zFBBV87sMcGtlTaip2UAjE38s6dBKXrS9q4vTkjQaixeVBCXR7y\nkmYzZL1Yi94iF7wLHCsnJ7L057I6CVYPb9hImzXQtOjis31VkhVcH+qBYXhqAx0=\n=8Lpt\n-----END PGP SIGNATURE-----",
        "payload": "tree 5f23133631a574afda55dbad76e451d172856fd4\nparent 4899a04c24b927166048a74999992d216a543c23\nparent 745f909925be419914083c66867150b11fa3a7b2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443708726 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443709346 +0200\n\nMerge pull request #6686\n\n745f909 travis: install a recent libzmq and pyzmq for tests (Cory Fields)\na9c27cd [travis] add zmq python module (Jonas Schnelli)\n110a1fd enable zmq-test in rpc-tests.sh (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17d0e638b66b9dd51370335c9b0a7039de3f81fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17d0e638b66b9dd51370335c9b0a7039de3f81fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17d0e638b66b9dd51370335c9b0a7039de3f81fa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4899a04c24b927166048a74999992d216a543c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4899a04c24b927166048a74999992d216a543c23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4899a04c24b927166048a74999992d216a543c23"
      },
      {
        "sha": "745f909925be419914083c66867150b11fa3a7b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/745f909925be419914083c66867150b11fa3a7b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/745f909925be419914083c66867150b11fa3a7b2"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3e7077ab2659994e0c7991c7c5c043e231e3b337",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17d0e638b66b9dd51370335c9b0a7039de3f81fa/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17d0e638b66b9dd51370335c9b0a7039de3f81fa/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=17d0e638b66b9dd51370335c9b0a7039de3f81fa",
        "patch": "@@ -33,18 +33,19 @@ matrix:\n     - compiler: \": Win32\"\n       env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n       env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n     - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n       env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n install:\n+    - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi"
      },
      {
        "sha": "7e1d2e8e503fd2f483b3629c0797146fcc826922",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17d0e638b66b9dd51370335c9b0a7039de3f81fa/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17d0e638b66b9dd51370335c9b0a7039de3f81fa/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=17d0e638b66b9dd51370335c9b0a7039de3f81fa",
        "patch": "@@ -60,9 +60,9 @@ testScriptsExt=(\n     'mempool_packages.py'\n );\n \n-#if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-#  testScripts+=('zmq_test.py')\n-#fi\n+if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n+  testScripts+=('zmq_test.py')\n+fi\n \n extArg=\"-extended\"\n passOn=${@#$extArg}"
      },
      {
        "sha": "bcb132321a4c6931efe41d8d1ae3605d9278d62b",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17d0e638b66b9dd51370335c9b0a7039de3f81fa/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17d0e638b66b9dd51370335c9b0a7039de3f81fa/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=17d0e638b66b9dd51370335c9b0a7039de3f81fa",
        "patch": "@@ -32,8 +32,6 @@ def setup_nodes(self):\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % self.port)\n-        # Note: proxies are not used to connect to local nodes\n-        # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n         return start_nodes(4, self.options.tmpdir, extra_args=[\n             ['-zmqpubhashtx=tcp://127.0.0.1:'+str(self.port), '-zmqpubhashblock=tcp://127.0.0.1:'+str(self.port)],\n             [],"
      }
    ]
  },
  {
    "sha": "f297042cae572753e6c25d25caf92091e88b76df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjk3MDQyY2FlNTcyNzUzZTZjMjVkMjVjYWY5MjA5MWU4OGI3NmRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T14:23:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T14:36:15Z"
      },
      "message": "Merge pull request #6637\n\n95acf3c remove $(@F) and subdirs from univalue make (Jonas Schnelli)\n9623e93 [Univalue] add univalue over subtree (Jonas Schnelli)\n2f9f082 Squashed 'src/univalue/' content from commit 87d9045 (Jonas Schnelli)\n0917306 remove univalue, prepare for subtree (Jonas Schnelli)",
      "tree": {
        "sha": "59a0827f7d3500f1b145e4f5653f1f8b94c1e037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59a0827f7d3500f1b145e4f5653f1f8b94c1e037"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f297042cae572753e6c25d25caf92091e88b76df",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDUTfAAoJEHSBCwEjRsmm3aIH/Ri/JLHTiN+7fl+pbw9bXs2f\nm4sV+Zk4YhplmrxRgBfQObikDTppShTwKpxEKrlnzJgSj9+uJi8pZJ69PNfmgvL0\nL+ZBmanXlmxR8reNb54q6khn0080aTy/IsA5WjKf9QYKOgtT31hWbUGhZVmnlGVo\ny6YmkTsSRaKMkF5X5SUR8KA3DCvcdVUbEnumCNep0PANNPDWHAz9gVWXloZHMlDL\nyfpCYCz4Ip4zS4oBYw5gVrnEWB6rpvjjYVepfn4Fb+5MX0diRtyXjbY4C5jF14sr\ng9f69PtfuJtWKemV6YSxq1ZGO/7XyiIHXTkSdOj8mrGGzwYmw6jtteD5+b7HlD4=\n=ArFd\n-----END PGP SIGNATURE-----",
        "payload": "tree 59a0827f7d3500f1b145e4f5653f1f8b94c1e037\nparent 17d0e638b66b9dd51370335c9b0a7039de3f81fa\nparent 95acf3cc6d90d9406030ce897efdee8be0550a53\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443709439 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443710175 +0200\n\nMerge pull request #6637\n\n95acf3c remove $(@F) and subdirs from univalue make (Jonas Schnelli)\n9623e93 [Univalue] add univalue over subtree (Jonas Schnelli)\n2f9f082 Squashed 'src/univalue/' content from commit 87d9045 (Jonas Schnelli)\n0917306 remove univalue, prepare for subtree (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f297042cae572753e6c25d25caf92091e88b76df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f297042cae572753e6c25d25caf92091e88b76df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f297042cae572753e6c25d25caf92091e88b76df/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17d0e638b66b9dd51370335c9b0a7039de3f81fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17d0e638b66b9dd51370335c9b0a7039de3f81fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17d0e638b66b9dd51370335c9b0a7039de3f81fa"
      },
      {
        "sha": "95acf3cc6d90d9406030ce897efdee8be0550a53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95acf3cc6d90d9406030ce897efdee8be0550a53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95acf3cc6d90d9406030ce897efdee8be0550a53"
      }
    ],
    "stats": {
      "total": 680,
      "additions": 632,
      "deletions": 48
    },
    "files": [
      {
        "sha": "dbdc356f5d2b36a72dc4ffb351bfe1de8609c5e1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -940,7 +940,7 @@ unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n+AC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n \n AC_OUTPUT\n "
      },
      {
        "sha": "462774389a22b4ad9ebb859b7a8dfdf7a3b5e350",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 9,
        "deletions": 14,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -1,4 +1,4 @@\n-DIST_SUBDIRS = secp256k1\n+DIST_SUBDIRS = secp256k1 univalue\n AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS)\n \n \n@@ -21,27 +21,30 @@ BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n+BITCOIN_INCLUDES += -I$(srcdir)/univalue/include\n \n LIBBITCOIN_SERVER=libbitcoin_server.a\n LIBBITCOIN_WALLET=libbitcoin_wallet.a\n LIBBITCOIN_COMMON=libbitcoin_common.a\n LIBBITCOIN_CLI=libbitcoin_cli.a\n LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n-LIBBITCOIN_UNIVALUE=univalue/libbitcoin_univalue.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n+LIBUNIVALUE=univalue/lib/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n+  \n+$(LIBUNIVALUE): $(wildcard univalue/lib/*)\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue/\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n EXTRA_LIBRARIES = \\\n   crypto/libbitcoin_crypto.a \\\n   libbitcoin_util.a \\\n   libbitcoin_common.a \\\n-  univalue/libbitcoin_univalue.a \\\n   libbitcoin_server.a \\\n   libbitcoin_cli.a\n if ENABLE_WALLET\n@@ -248,14 +251,6 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.cpp \\\n   crypto/sha512.h\n \n-# univalue JSON library\n-univalue_libbitcoin_univalue_a_SOURCES = \\\n-  univalue/univalue.cpp \\\n-  univalue/univalue.h \\\n-  univalue/univalue_escapes.h \\\n-  univalue/univalue_read.cpp \\\n-  univalue/univalue_write.cpp\n-\n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_common_a_SOURCES = \\\n@@ -332,7 +327,7 @@ endif\n bitcoind_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n@@ -360,7 +355,7 @@ endif\n \n bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL)\n \n bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n@@ -376,7 +371,7 @@ bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n endif\n \n bitcoin_tx_LDADD = \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\"
      },
      {
        "sha": "67fd7c1076e0e92eb4ce98e773b45a22a904aad5",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -367,7 +367,7 @@ endif\n if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)"
      },
      {
        "sha": "b8725c872de610dc148ce72066ffc6eefa272a63",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -33,7 +33,7 @@ endif\n if ENABLE_ZMQ\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)"
      },
      {
        "sha": "9a6e43631b42611758421d22a2fa02ad3a9cd614",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -91,7 +91,7 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n@@ -124,6 +124,7 @@ check-local:\n \t@echo \"Running test/bitcoin-util-test.py...\"\n \t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(srcdir)/test/bitcoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check\n \n %.json.h: %.json\n \t@$(MKDIR_P) $(@D)"
      },
      {
        "sha": "e0fe6aa5bfde8ccb2b7d26b47bc617b91cc8cb4d",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -18,7 +18,7 @@\n #include <event2/buffer.h>\n #include <event2/keyvalq_struct.h>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "f7518fab5d19f4588957bfa9974565972a027581",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -12,7 +12,7 @@\n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\""
      },
      {
        "sha": "4be24f8e09725899533d22711af2ac775b400614",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -9,7 +9,7 @@\n #include \"script/script.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\""
      },
      {
        "sha": "533fedfe7a68617c583074c76ccf264c5134ab21",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -10,7 +10,7 @@\n #include \"script/standard.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\""
      },
      {
        "sha": "f387a3ec8c5ef93ef086b6be9b39931e240b0547",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -18,7 +18,7 @@\n \n #include <openssl/crypto.h>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n #ifdef ENABLE_WALLET\n #include <db_cxx.h>"
      },
      {
        "sha": "c46d7a8bd2de75874f40b4cc66a1acf2606281f2",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -18,7 +18,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/dynamic_bitset.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "545ac1289081955ee57322d9de46cca99d16f3d7",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -20,7 +20,7 @@\n \n #include <stdint.h>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "4064c2fee320fb93933c354eb320c48ec79ef9aa",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -12,7 +12,7 @@\n #include <stdint.h>\n \n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "8937a56f035e393d1ab78ea104a22b1187b4189d",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -6,7 +6,7 @@\n #ifndef BITCOIN_RPCCLIENT_H\n #define BITCOIN_RPCCLIENT_H\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n UniValue RPCConvertValues(const std::string& strMethod, const std::vector<std::string>& strParams);\n /** Non-RFC4627 JSON parser, accepts internal values (such as numbers, true, false, null)"
      },
      {
        "sha": "c49c3e5194a1f4c29061ace337430a25f24c61f1",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -25,7 +25,7 @@\n #include <boost/assign/list_of.hpp>\n #include <boost/shared_ptr.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "0f0457c5cfa2b521f13a8393b464ce1c5f3fd232",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -22,7 +22,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "7746be25f73c9af7ddf2c863fa8d35b040a6fab9",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -19,7 +19,7 @@\n \n #include <boost/foreach.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "9cf1ab6d99ce9b1cbb3a9c50ae5860de3b0aae4f",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <boost/filesystem.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n //! HTTP status codes\n enum HTTPStatusCode"
      },
      {
        "sha": "4dec53396de89a9d88dfc582c90ec194bd62eb4f",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -31,7 +31,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "fa60f8c833f0d50247b0d831aac757571b961c98",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -13,7 +13,7 @@\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>"
      },
      {
        "sha": "dde8dfdcc3dbecfb9da7f3cce3fc2ec7ac6d5175",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -17,7 +17,7 @@\n \n #include <boost/function.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n class CRPCCommand;\n "
      },
      {
        "sha": "9845df697f996b8d04f92ac79fd0b8e6e78c51ed",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -18,7 +18,7 @@\n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n extern UniValue read_json(const std::string& jsondata);\n "
      },
      {
        "sha": "2a486f08e43518fb0758e6b81562ba6aa3b2b2b6",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -13,7 +13,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "2e652f76e272dd95142c07bb52210ed3a90eb982",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -14,7 +14,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "882f9eb199c2ae1e8b649079a73a0f7472a14695",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -27,7 +27,7 @@\n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "6fca64d5da3cd564e69c788642644c591304ab86",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -20,7 +20,7 @@\n \n #include <boost/test/unit_test.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n extern UniValue read_json(const std::string& jsondata);\n "
      },
      {
        "sha": "beec39667537718bcf92ca51495303a67fec42d7",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -26,7 +26,7 @@\n #include <boost/test/unit_test.hpp>\n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      },
      {
        "sha": "945c1acbeb49f6d07150d61207bd956a7b5aafdb",
        "filename": "src/test/univalue_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/test/univalue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/test/univalue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/univalue_tests.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -6,7 +6,7 @@\n #include <vector>\n #include <string>\n #include <map>\n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n #include \"test/test_bitcoin.h\"\n \n #include <boost/test/unit_test.hpp>"
      },
      {
        "sha": "ca9e8423481f8c6d5574c6088746fd9ed2dc21f5",
        "filename": "src/univalue/.gitignore",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,22 @@\n+.deps/\n+INSTALL\n+Makefile\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+compile\n+config.log\n+config.status\n+config.guess\n+config.sub\n+configure\n+depcomp\n+install-sh\n+missing\n+stamp-h1\n+univalue-config.h*\n+test-driver\n+libtool\n+ltmain.sh\n+\n+*.o"
      },
      {
        "sha": "af632c78d9c3d2eb1342469180e5dc1db7fcb807",
        "filename": "src/univalue/.travis.yml",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.travis.yml?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,52 @@\n+\n+language: cpp\n+\n+compiler:\n+  - clang\n+  - gcc\n+\n+os:\n+  - linux\n+  - osx\n+\n+sudo: false\n+\n+env:\n+  global:\n+    - MAKEJOBS=-j3\n+    - RUN_TESTS=true\n+    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n+\n+cache:\n+  apt: true\n+\n+addons:\n+  apt:\n+    packages:\n+      - pkg-config\n+\n+before_script:\n+  - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n+  - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n+\n+script:\n+  - if [ -n \"$UNIVALUE_CONFIG\" ]; then unset CC; unset CXX; fi\n+  - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+  - UNIVALUE_CONFIG_ALL=\"--prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+  - ./configure --cache-file=config.cache $UNIVALUE_CONFIG_ALL $UNIVALUE_CONFIG || ( cat config.log && false)\n+  - make -s $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL ; false )\n+  - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n+  - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n+\n+matrix:\n+  fast_finish: true\n+  include:\n+    - os: linux\n+      compiler: gcc\n+      env: UNIVALUE_CONFIG=--host=x86_64-w64-mingw32 RUN_TESTS=false\n+      addons:\n+        apt:\n+          packages:\n+            - g++-mingw-w64-x86-64\n+            - gcc-mingw-w64-x86-64\n+            - binutils-mingw-w64-x86-64"
      },
      {
        "sha": "1fb429f3569c7f8a8e57e69bfb984ab905bccf15",
        "filename": "src/univalue/COPYING",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/COPYING?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,19 @@\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+"
      },
      {
        "sha": "2800f466dc55bfbc94f20d4ededd7f5ac92a1d15",
        "filename": "src/univalue/Makefile.am",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.am?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,84 @@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+.PHONY: gen\n+.INTERMEDIATE: $(GENBIN)\n+\n+include_HEADERS = include/univalue.h\n+noinst_HEADERS = lib/univalue_escapes.h\n+\n+lib_LTLIBRARIES = lib/libunivalue.la\n+\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = pc/libunivalue.pc\n+\n+lib_libunivalue_la_SOURCES = \\\n+\tlib/univalue.cpp \\\n+\tlib/univalue_read.cpp \\\n+\tlib/univalue_write.cpp\n+\n+lib_libunivalue_la_LDFLAGS = \\\n+\t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n+\t-no-undefined\n+lib_libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+\n+TESTS = test/unitester\n+\n+GENBIN = gen/gen$(BUILD_EXEEXT)\n+GEN_SRCS = gen/gen.cpp\n+\n+$(GENBIN): $(GEN_SRCS)\n+\t@echo Building $@\n+\t$(AM_V_at)c++ -I$(top_srcdir)/include -o $@ $<\n+\n+gen: lib/univalue_escapes.h $(GENBIN)\n+\t@echo Updating $<\n+\t$(AM_V_at)$(GENBIN) > lib/univalue_escapes.h\n+\n+noinst_PROGRAMS = $(TESTS)\n+\n+TEST_DATA_DIR=test\n+\n+test_unitester_SOURCES = test/unitester.cpp\n+test_unitester_LDADD = lib/libunivalue.la\n+test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n+test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n+\n+TEST_FILES = \\\n+\t$(TEST_DATA_DIR)/fail10.json \\\n+\t$(TEST_DATA_DIR)/fail11.json \\\n+\t$(TEST_DATA_DIR)/fail12.json \\\n+\t$(TEST_DATA_DIR)/fail13.json \\\n+\t$(TEST_DATA_DIR)/fail14.json \\\n+\t$(TEST_DATA_DIR)/fail15.json \\\n+\t$(TEST_DATA_DIR)/fail16.json \\\n+\t$(TEST_DATA_DIR)/fail17.json \\\n+\t$(TEST_DATA_DIR)/fail18.json \\\n+\t$(TEST_DATA_DIR)/fail19.json \\\n+\t$(TEST_DATA_DIR)/fail1.json \\\n+\t$(TEST_DATA_DIR)/fail20.json \\\n+\t$(TEST_DATA_DIR)/fail21.json \\\n+\t$(TEST_DATA_DIR)/fail22.json \\\n+\t$(TEST_DATA_DIR)/fail23.json \\\n+\t$(TEST_DATA_DIR)/fail24.json \\\n+\t$(TEST_DATA_DIR)/fail25.json \\\n+\t$(TEST_DATA_DIR)/fail26.json \\\n+\t$(TEST_DATA_DIR)/fail27.json \\\n+\t$(TEST_DATA_DIR)/fail28.json \\\n+\t$(TEST_DATA_DIR)/fail29.json \\\n+\t$(TEST_DATA_DIR)/fail2.json \\\n+\t$(TEST_DATA_DIR)/fail30.json \\\n+\t$(TEST_DATA_DIR)/fail31.json \\\n+\t$(TEST_DATA_DIR)/fail32.json \\\n+\t$(TEST_DATA_DIR)/fail33.json \\\n+\t$(TEST_DATA_DIR)/fail34.json \\\n+\t$(TEST_DATA_DIR)/fail3.json \\\n+\t$(TEST_DATA_DIR)/fail4.json \\\n+\t$(TEST_DATA_DIR)/fail5.json \\\n+\t$(TEST_DATA_DIR)/fail6.json \\\n+\t$(TEST_DATA_DIR)/fail7.json \\\n+\t$(TEST_DATA_DIR)/fail8.json \\\n+\t$(TEST_DATA_DIR)/fail9.json \\\n+\t$(TEST_DATA_DIR)/pass1.json \\\n+\t$(TEST_DATA_DIR)/pass2.json \\\n+\t$(TEST_DATA_DIR)/pass3.json\n+\n+EXTRA_DIST=$(TEST_FILES) $(GEN_SRCS)"
      },
      {
        "sha": "48167b083b0e82515a43b9cbd9912d738d260d56",
        "filename": "src/univalue/README",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/README?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,7 @@\n+\n+\t\tUniValue\n+\n+A universal value object, with JSON encoding (output) and decoding (input).\n+\n+Built as a single dynamic RAII C++ object class, and no templates.\n+"
      },
      {
        "sha": "5530048e923e51909251e7e32f7023f1fc749999",
        "filename": "src/univalue/TODO",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/TODO",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/TODO",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/TODO?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,10 @@\n+\n+Rearrange tree for easier 'git subtree' style use\n+\n+Move towards C++11 etc.\n+\n+Namespace support - must come up with useful shorthand, avoiding\n+long Univalue::Univalue::Univalue usages forced upon library users.\n+\n+Improve test suite\n+"
      },
      {
        "sha": "4b38721faad09b9339107bb375d2d31fdbde9d4a",
        "filename": "src/univalue/autogen.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/autogen.sh?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,9 @@\n+#!/bin/sh\n+set -e\n+srcdir=\"$(dirname $0)\"\n+cd \"$srcdir\"\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+autoreconf --install --force"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/univalue/build-aux/m4/.empty",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/build-aux/m4/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/build-aux/m4/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.empty?ref=f297042cae572753e6c25d25caf92091e88b76df"
      },
      {
        "sha": "6cd951622925afac13d0820b2c25b4f8cac7ff1e",
        "filename": "src/univalue/configure.ac",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/configure.ac?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,69 @@\n+m4_define([libunivalue_major_version], [1])\n+m4_define([libunivalue_minor_version], [1])\n+m4_define([libunivalue_micro_version], [1])\n+m4_define([libunivalue_interface_age], [1])\n+# If you need a modifier for the version number. \n+# Normally empty, but can be used to make \"fixup\" releases.\n+m4_define([libunivalue_extraversion], [])\n+\n+dnl libtool versioning from libunivalue\n+m4_define([libunivalue_current], [m4_eval(100 * libunivalue_minor_version + libunivalue_micro_version - libunivalue_interface_age)])\n+m4_define([libunivalue_binary_age], [m4_eval(100 * libunivalue_minor_version + libunivalue_micro_version)])\n+m4_define([libunivalue_revision], [libunivalue_interface_age])\n+m4_define([libunivalue_age], [m4_eval(libunivalue_binary_age - libunivalue_interface_age)])\n+m4_define([libunivalue_version], [libunivalue_major_version().libunivalue_minor_version().libunivalue_micro_version()libunivalue_extraversion()])\n+\n+\n+AC_INIT([univalue], [1.0.0],\n+        [http://github.com/jgarzik/univalue/])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+AC_PREREQ(2.60)\n+AC_CONFIG_SRCDIR([lib/univalue.cpp])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+AC_CONFIG_HEADERS([univalue-config.h])\n+AM_INIT_AUTOMAKE([subdir-objects foreign])\n+\n+LIBUNIVALUE_MAJOR_VERSION=libunivalue_major_version\n+LIBUNIVALUE_MINOR_VERSION=libunivalue_minor_version\n+LIBUNIVALUE_MICRO_VERSION=libunivalue_micro_version\n+LIBUNIVALUE_INTERFACE_AGE=libunivalue_interface_age\n+\n+# ABI version\n+# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n+LIBUNIVALUE_CURRENT=libunivalue_current\n+LIBUNIVALUE_REVISION=libunivalue_revision\n+LIBUNIVALUE_AGE=libunivalue_age\n+\n+AC_SUBST(LIBUNIVALUE_CURRENT)\n+AC_SUBST(LIBUNIVALUE_REVISION)\n+AC_SUBST(LIBUNIVALUE_AGE)\n+\n+LT_INIT\n+LT_LANG([C++])\n+\n+case $host in\n+  *mingw*)\n+    LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"\n+  ;;\n+esac\n+\n+BUILD_EXEEXT=\n+case $build in\n+  *mingw*)\n+    BUILD_EXEEXT=\".exe\"\n+  ;;\n+esac\n+\n+AC_CONFIG_FILES([\n+    Makefile\n+    pc/libunivalue.pc\n+    pc/libunivalue-uninstalled.pc])\n+\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n+AC_SUBST(BUILD_EXEEXT)\n+AC_OUTPUT\n+"
      },
      {
        "sha": "5e5a4d4aed43a8a03cf1dbaa24323075ddcac0d9",
        "filename": "src/univalue/gen/gen.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/gen/gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/gen/gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/gen/gen.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "previous_filename": "src/univalue/gen.cpp"
      },
      {
        "sha": "ac051160118f4ef84237ddc5e766e91d5fb8285e",
        "filename": "src/univalue/include/univalue.h",
        "status": "renamed",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/include/univalue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/include/univalue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/include/univalue.h?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -1,11 +1,13 @@\n // Copyright 2014 BitPay Inc.\n+// Copyright 2015 Bitcoin Core Developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_UNIVALUE_UNIVALUE_H\n-#define BITCOIN_UNIVALUE_UNIVALUE_H\n+#ifndef __UNIVALUE_H__\n+#define __UNIVALUE_H__\n \n #include <stdint.h>\n+\n #include <string>\n #include <vector>\n #include <map>\n@@ -245,4 +247,4 @@ extern const UniValue NullUniValue;\n \n const UniValue& find_value( const UniValue& obj, const std::string& name);\n \n-#endif // BITCOIN_UNIVALUE_UNIVALUE_H\n+#endif // __UNIVALUE_H__\n\\ No newline at end of file",
        "previous_filename": "src/univalue/univalue.h"
      },
      {
        "sha": "ca8c16dcd4b0d5ab31a3ac29be11d35e768c3cdb",
        "filename": "src/univalue/lib/.gitignore",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/.gitignore?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,10 @@\n+\n+libunivalue-uninstalled.pc\n+libunivalue.pc\n+libunivalue.a\n+gen\n+\n+.libs\n+*.lo\n+*.la\n+"
      },
      {
        "sha": "883e8651fe3d42e2c5c24a6c436dc2bf4c0f351b",
        "filename": "src/univalue/lib/univalue.cpp",
        "status": "renamed",
        "additions": 64,
        "deletions": 2,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -1,16 +1,78 @@\n // Copyright 2014 BitPay Inc.\n+// Copyright 2015 Bitcoin Core Developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <stdint.h>\n #include <ctype.h>\n+#include <errno.h>\n #include <iomanip>\n+#include <limits>\n #include <sstream>\n-#include <stdexcept>      // std::runtime_error\n+#include <stdexcept>\n+#include <stdlib.h>\n+#include <string.h>\n \n #include \"univalue.h\"\n \n-#include \"utilstrencodings.h\" // ParseXX\n+namespace \n+{\n+static bool ParsePrechecks(const std::string& str)\n+{\n+    if (str.empty()) // No empty string allowed\n+        return false;\n+    if (str.size() >= 1 && (isspace(str[0]) || isspace(str[str.size()-1]))) // No padding allowed\n+        return false;\n+    if (str.size() != strlen(str.c_str())) // No embedded NUL characters allowed\n+        return false;\n+    return true;\n+}\n+\n+bool ParseInt32(const std::string& str, int32_t *out)\n+{\n+    if (!ParsePrechecks(str))\n+        return false;\n+    char *endp = NULL;\n+    errno = 0; // strtol will not set errno if valid\n+    long int n = strtol(str.c_str(), &endp, 10);\n+    if(out) *out = (int32_t)n;\n+    // Note that strtol returns a *long int*, so even if strtol doesn't report a over/underflow\n+    // we still have to check that the returned value is within the range of an *int32_t*. On 64-bit\n+    // platforms the size of these types may be different.\n+    return endp && *endp == 0 && !errno &&\n+        n >= std::numeric_limits<int32_t>::min() &&\n+        n <= std::numeric_limits<int32_t>::max();\n+}\n+\n+bool ParseInt64(const std::string& str, int64_t *out)\n+{\n+    if (!ParsePrechecks(str))\n+        return false;\n+    char *endp = NULL;\n+    errno = 0; // strtoll will not set errno if valid\n+    long long int n = strtoll(str.c_str(), &endp, 10);\n+    if(out) *out = (int64_t)n;\n+    // Note that strtoll returns a *long long int*, so even if strtol doesn't report a over/underflow\n+    // we still have to check that the returned value is within the range of an *int64_t*.\n+    return endp && *endp == 0 && !errno &&\n+        n >= std::numeric_limits<int64_t>::min() &&\n+        n <= std::numeric_limits<int64_t>::max();\n+}\n+\n+bool ParseDouble(const std::string& str, double *out)\n+{\n+    if (!ParsePrechecks(str))\n+        return false;\n+    if (str.size() >= 2 && str[0] == '0' && str[1] == 'x') // No hexadecimal floats allowed\n+        return false;\n+    std::istringstream text(str);\n+    text.imbue(std::locale::classic());\n+    double result;\n+    text >> result;\n+    if(out) *out = result;\n+    return text.eof() && !text.fail();\n+}\n+}\n \n using namespace std;\n ",
        "previous_filename": "src/univalue/univalue.cpp"
      },
      {
        "sha": "4133b24ca11f85814a85359131c22bf20b3bfcaf",
        "filename": "src/univalue/lib/univalue_escapes.h",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue_escapes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue_escapes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_escapes.h?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "previous_filename": "src/univalue/univalue_escapes.h"
      },
      {
        "sha": "64591234cb12da4ba8dac3ca9853e8a77b66247f",
        "filename": "src/univalue/lib/univalue_read.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_read.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "previous_filename": "src/univalue/univalue_read.cpp"
      },
      {
        "sha": "bce3997af77c404f563c2414ecc27ebf10e77171",
        "filename": "src/univalue/lib/univalue_write.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/lib/univalue_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_write.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "previous_filename": "src/univalue/univalue_write.cpp"
      },
      {
        "sha": "b7f53e875e6e45e6e5cdb37dcd3c3b1a12e2b832",
        "filename": "src/univalue/pc/libunivalue-uninstalled.pc.in",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/pc/libunivalue-uninstalled.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/pc/libunivalue-uninstalled.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/pc/libunivalue-uninstalled.pc.in?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,9 @@\n+prefix=@prefix@\n+exec_prefix=@exec_prefix@\n+libdir=@libdir@\n+includedir=@includedir@\n+\n+Name: libunivalue\n+Description: libunivalue, C++ universal value object and JSON library\n+Version: @VERSION@\n+Libs: ${pc_top_builddir}/${pcfiledir}/libunivalue.la"
      },
      {
        "sha": "358a2d5f73219147d8a2f286146dc4e912363f40",
        "filename": "src/univalue/pc/libunivalue.pc.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/pc/libunivalue.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/pc/libunivalue.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/pc/libunivalue.pc.in?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,10 @@\n+prefix=@prefix@\n+exec_prefix=@exec_prefix@\n+libdir=@libdir@\n+includedir=@includedir@\n+\n+Name: libunivalue\n+Description: libunivalue, C++ universal value object and JSON library\n+Version: @VERSION@\n+Libs: -L${libdir} -lunivalue\n+Cflags: -I${includedir}"
      },
      {
        "sha": "e4dea0df723bbe22e111e639e394c3d62562dddd",
        "filename": "src/univalue/test/.gitignore",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/.gitignore?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,7 @@\n+\n+unitester\n+\n+*.log\n+*.trs\n+\n+.libs"
      },
      {
        "sha": "6216b865f10219c51c6af21e7a68641bab77ee4f",
        "filename": "src/univalue/test/fail1.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail1.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+\"A JSON payload should be an object or array, not a string.\"\n\\ No newline at end of file"
      },
      {
        "sha": "5d8c0047bd522dfa9fbc642051ed76bd3162d936",
        "filename": "src/univalue/test/fail10.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail10.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail10.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail10.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Extra value after close\": true} \"misplaced quoted value\"\n\\ No newline at end of file"
      },
      {
        "sha": "76eb95b4583c8ee74eee3bdc25e1db69e1aaf4bb",
        "filename": "src/univalue/test/fail11.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail11.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail11.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail11.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Illegal expression\": 1 + 2}\n\\ No newline at end of file"
      },
      {
        "sha": "77580a4522d8c79245851e72a3644a0709b3d28c",
        "filename": "src/univalue/test/fail12.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail12.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail12.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail12.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Illegal invocation\": alert()}\n\\ No newline at end of file"
      },
      {
        "sha": "379406b59bdb943f145afea98ff1bbc45d43ff45",
        "filename": "src/univalue/test/fail13.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail13.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail13.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail13.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Numbers cannot have leading zeroes\": 013}\n\\ No newline at end of file"
      },
      {
        "sha": "0ed366b38a34f551c25735bdcb9282d27beae026",
        "filename": "src/univalue/test/fail14.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail14.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail14.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail14.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Numbers cannot be hex\": 0x14}\n\\ No newline at end of file"
      },
      {
        "sha": "fc8376b605da69dda23f3fcdd9816dcbf2e736cc",
        "filename": "src/univalue/test/fail15.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail15.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail15.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail15.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Illegal backslash escape: \\x15\"]\n\\ No newline at end of file"
      },
      {
        "sha": "3fe21d4b532498c8b90872ef571c6867f45e645f",
        "filename": "src/univalue/test/fail16.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail16.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail16.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail16.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\\naked]\n\\ No newline at end of file"
      },
      {
        "sha": "62b9214aeda6d74a72ebeceedf0aae3609f1c638",
        "filename": "src/univalue/test/fail17.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail17.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail17.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail17.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Illegal backslash escape: \\017\"]\n\\ No newline at end of file"
      },
      {
        "sha": "edac92716f186e39d0e3c818b8b110b9a2c4add5",
        "filename": "src/univalue/test/fail18.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail18.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail18.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail18.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[[[[[[[[[[[[[[[[[[[[\"Too deep\"]]]]]]]]]]]]]]]]]]]]\n\\ No newline at end of file"
      },
      {
        "sha": "3b9c46fa9a296c9d8c35ce4a6592d8bb7ffe748a",
        "filename": "src/univalue/test/fail19.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail19.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail19.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail19.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Missing colon\" null}\n\\ No newline at end of file"
      },
      {
        "sha": "6b7c11e5a56537f81e651980359c62e263f7399f",
        "filename": "src/univalue/test/fail2.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail2.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Unclosed array\"\n\\ No newline at end of file"
      },
      {
        "sha": "27c1af3e72ee37bbf64ccd7b77c5bad8cdea1557",
        "filename": "src/univalue/test/fail20.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail20.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail20.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail20.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Double colon\":: null}\n\\ No newline at end of file"
      },
      {
        "sha": "62474573b2160adefc3dc669b39200ea659d6e59",
        "filename": "src/univalue/test/fail21.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail21.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail21.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail21.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Comma instead of colon\", null}\n\\ No newline at end of file"
      },
      {
        "sha": "a7752581bcf7f3b901aef052a2df541c1285b6c2",
        "filename": "src/univalue/test/fail22.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail22.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail22.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail22.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Colon instead of comma\": false]\n\\ No newline at end of file"
      },
      {
        "sha": "494add1ca190e12acd1c8e34ac819a6316c927bc",
        "filename": "src/univalue/test/fail23.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail23.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail23.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail23.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Bad value\", truth]\n\\ No newline at end of file"
      },
      {
        "sha": "caff239bfc36297da08828095105bb497b8aef2a",
        "filename": "src/univalue/test/fail24.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail24.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail24.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail24.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+['single quote']\n\\ No newline at end of file"
      },
      {
        "sha": "8b7ad23e010314591d914519996c28483b5dadc8",
        "filename": "src/univalue/test/fail25.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail25.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail25.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail25.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"\ttab\tcharacter\tin\tstring\t\"]\n\\ No newline at end of file"
      },
      {
        "sha": "845d26a6a54398c49cd492e6836c0d1987f554e4",
        "filename": "src/univalue/test/fail26.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail26.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail26.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail26.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"tab\\   character\\   in\\  string\\  \"]\n\\ No newline at end of file"
      },
      {
        "sha": "6b01a2ca4a97ec36604771dcc3175bbcda865d85",
        "filename": "src/univalue/test/fail27.json",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail27.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail27.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail27.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,2 @@\n+[\"line\n+break\"]\n\\ No newline at end of file"
      },
      {
        "sha": "621a0101c664a619457d16f1107a677c911481b4",
        "filename": "src/univalue/test/fail28.json",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail28.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail28.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail28.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,2 @@\n+[\"line\\\n+break\"]\n\\ No newline at end of file"
      },
      {
        "sha": "47ec421bb6242648e80b2b465049acbae1e6e44a",
        "filename": "src/univalue/test/fail29.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail29.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail29.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail29.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[0e]\n\\ No newline at end of file"
      },
      {
        "sha": "168c81eb78537ea4006ea0a46b67851d9995564d",
        "filename": "src/univalue/test/fail3.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail3.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{unquoted_key: \"keys must be quoted\"}\n\\ No newline at end of file"
      },
      {
        "sha": "8ab0bc4b8b2c73b616a45931d05720555a2f7762",
        "filename": "src/univalue/test/fail30.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail30.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail30.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail30.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[0e+]\n\\ No newline at end of file"
      },
      {
        "sha": "1cce602b518fc6e7f164a58cc710def27e64b8a5",
        "filename": "src/univalue/test/fail31.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail31.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail31.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail31.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[0e+-1]\n\\ No newline at end of file"
      },
      {
        "sha": "45cba7396ff7462dd6de005c32fd2a95c5318e5f",
        "filename": "src/univalue/test/fail32.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail32.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail32.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail32.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Comma instead if closing brace\": true,\n\\ No newline at end of file"
      },
      {
        "sha": "ca5eb19dc97f5ca363ff33a4c3644ad28e612679",
        "filename": "src/univalue/test/fail33.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail33.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail33.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail33.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"mismatch\"}\n\\ No newline at end of file"
      },
      {
        "sha": "3f8be172865d17dd812f50d5cf00a2509f51e6bf",
        "filename": "src/univalue/test/fail34.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail34.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail34.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail34.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{} garbage\n\\ No newline at end of file"
      },
      {
        "sha": "9de168bf34e2e368d044bccc099d44b02316de66",
        "filename": "src/univalue/test/fail4.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail4.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail4.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail4.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"extra comma\",]\n\\ No newline at end of file"
      },
      {
        "sha": "ddf3ce3d2409467011ec7545551d5d078bce1bfd",
        "filename": "src/univalue/test/fail5.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail5.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail5.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail5.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"double extra comma\",,]\n\\ No newline at end of file"
      },
      {
        "sha": "ed91580e1b1c15194a9a758f1b231575074722db",
        "filename": "src/univalue/test/fail6.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail6.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail6.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail6.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[   , \"<-- missing value\"]\n\\ No newline at end of file"
      },
      {
        "sha": "8a96af3e4ee6c7fffd8da641dedcd750a5cc4d9d",
        "filename": "src/univalue/test/fail7.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail7.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail7.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail7.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Comma after the close\"],\n\\ No newline at end of file"
      },
      {
        "sha": "b28479c6ecb21a801d6988b9ea39a4eb00a64702",
        "filename": "src/univalue/test/fail8.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail8.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail8.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail8.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[\"Extra close\"]]\n\\ No newline at end of file"
      },
      {
        "sha": "5815574f363e58cf91578e909ef4dabb402a75de",
        "filename": "src/univalue/test/fail9.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail9.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/fail9.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail9.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+{\"Extra comma\": true,}\n\\ No newline at end of file"
      },
      {
        "sha": "70e26854369282e625e75b302782f581e610f2b3",
        "filename": "src/univalue/test/pass1.json",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/pass1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/pass1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass1.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,58 @@\n+[\n+    \"JSON Test Pattern pass1\",\n+    {\"object with 1 member\":[\"array with 1 element\"]},\n+    {},\n+    [],\n+    -42,\n+    true,\n+    false,\n+    null,\n+    {\n+        \"integer\": 1234567890,\n+        \"real\": -9876.543210,\n+        \"e\": 0.123456789e-12,\n+        \"E\": 1.234567890E+34,\n+        \"\":  23456789012E66,\n+        \"zero\": 0,\n+        \"one\": 1,\n+        \"space\": \" \",\n+        \"quote\": \"\\\"\",\n+        \"backslash\": \"\\\\\",\n+        \"controls\": \"\\b\\f\\n\\r\\t\",\n+        \"slash\": \"/ & \\/\",\n+        \"alpha\": \"abcdefghijklmnopqrstuvwyz\",\n+        \"ALPHA\": \"ABCDEFGHIJKLMNOPQRSTUVWYZ\",\n+        \"digit\": \"0123456789\",\n+        \"0123456789\": \"digit\",\n+        \"special\": \"`1~!@#$%^&*()_+-={':[,]}|;.</>?\",\n+        \"hex\": \"\\u0123\\u4567\\u89AB\\uCDEF\\uabcd\\uef4A\",\n+        \"true\": true,\n+        \"false\": false,\n+        \"null\": null,\n+        \"array\":[  ],\n+        \"object\":{  },\n+        \"address\": \"50 St. James Street\",\n+        \"url\": \"http://www.JSON.org/\",\n+        \"comment\": \"// /* <!-- --\",\n+        \"# -- --> */\": \" \",\n+        \" s p a c e d \" :[1,2 , 3\n+\n+,\n+\n+4 , 5        ,          6           ,7        ],\"compact\":[1,2,3,4,5,6,7],\n+        \"jsontext\": \"{\\\"object with 1 member\\\":[\\\"array with 1 element\\\"]}\",\n+        \"quotes\": \"&#34; \\u0022 %22 0x22 034 &#x22;\",\n+        \"\\/\\\\\\\"\\uCAFE\\uBABE\\uAB98\\uFCDE\\ubcda\\uef4A\\b\\f\\n\\r\\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?\"\n+: \"A key can be any string\"\n+    },\n+    0.5 ,98.6\n+,\n+99.44\n+,\n+\n+1066,\n+1e1,\n+0.1e1,\n+1e-1,\n+1e00,2e+00,2e-00\n+,\"rosebud\"]\n\\ No newline at end of file"
      },
      {
        "sha": "d3c63c7ad845e4cedd0c70d13102b38c51ec197a",
        "filename": "src/univalue/test/pass2.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/pass2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/pass2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass2.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1 @@\n+[[[[[[[[[[[[[[[[[[[\"Not too deep\"]]]]]]]]]]]]]]]]]]]\n\\ No newline at end of file"
      },
      {
        "sha": "4528d51f1ac615e7e11dbb1321dc99187705f0d8",
        "filename": "src/univalue/test/pass3.json",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/pass3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/pass3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass3.json?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,6 @@\n+{\n+    \"JSON Test Pattern pass3\": {\n+        \"The outermost value\": \"must be an object or array.\",\n+        \"In this test\": \"It is an object.\"\n+    }\n+}"
      },
      {
        "sha": "835556e031708f8e3c9d07a8f31980d6a1228986",
        "filename": "src/univalue/test/unitester.cpp",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/unitester.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/univalue/test/unitester.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/unitester.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -0,0 +1,115 @@\n+// Copyright 2014 BitPay Inc.\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <string.h>\n+#include <cassert>\n+#include <string>\n+#include \"univalue.h\"\n+\n+#ifndef JSON_TEST_SRC\n+#error JSON_TEST_SRC must point to test source directory\n+#endif\n+\n+#ifndef ARRAY_SIZE\n+#define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))\n+#endif\n+\n+using namespace std;\n+string srcdir(JSON_TEST_SRC);\n+\n+static void runtest(string filename, const string& jdata)\n+{\n+        fprintf(stderr, \"test %s\\n\", filename.c_str());\n+\n+        string prefix = filename.substr(0, 4);\n+\n+        bool wantPass = (prefix == \"pass\");\n+        bool wantFail = (prefix == \"fail\");\n+        assert(wantPass || wantFail);\n+\n+        UniValue val;\n+        bool testResult = val.read(jdata);\n+\n+        if (wantPass) {\n+            assert(testResult == true);\n+        } else {\n+            assert(testResult == false);\n+        }\n+}\n+\n+static void runtest_file(const char *filename_)\n+{\n+        string basename(filename_);\n+        string filename = srcdir + \"/\" + basename;\n+        FILE *f = fopen(filename.c_str(), \"r\");\n+        assert(f != NULL);\n+\n+        string jdata;\n+\n+        char buf[4096];\n+        while (!feof(f)) {\n+                int bread = fread(buf, 1, sizeof(buf), f);\n+                assert(!ferror(f));\n+\n+                string s(buf, bread);\n+                jdata += s;\n+        }\n+\n+        assert(!ferror(f));\n+        fclose(f);\n+\n+        runtest(basename, jdata);\n+}\n+\n+static const char *filenames[] = {\n+        \"fail10.json\",\n+        \"fail11.json\",\n+        \"fail12.json\",\n+        \"fail13.json\",\n+        \"fail14.json\",\n+        \"fail15.json\",\n+        \"fail16.json\",\n+        \"fail17.json\",\n+        //\"fail18.json\",             // investigate\n+        \"fail19.json\",\n+        \"fail1.json\",\n+        \"fail20.json\",\n+        \"fail21.json\",\n+        \"fail22.json\",\n+        \"fail23.json\",\n+        \"fail24.json\",\n+        \"fail25.json\",\n+        \"fail26.json\",\n+        \"fail27.json\",\n+        \"fail28.json\",\n+        \"fail29.json\",\n+        \"fail2.json\",\n+        \"fail30.json\",\n+        \"fail31.json\",\n+        \"fail32.json\",\n+        \"fail33.json\",\n+        \"fail34.json\",\n+        \"fail3.json\",\n+        \"fail4.json\",                // extra comma\n+        \"fail5.json\",\n+        \"fail6.json\",\n+        \"fail7.json\",\n+        \"fail8.json\",\n+        \"fail9.json\",               // extra comma\n+        \"pass1.json\",\n+        \"pass2.json\",\n+        \"pass3.json\",\n+};\n+\n+int main (int argc, char *argv[])\n+{\n+    for (unsigned int fidx = 0; fidx < ARRAY_SIZE(filenames); fidx++) {\n+        runtest_file(filenames[fidx]);\n+    }\n+\n+    return 0;\n+}\n+"
      },
      {
        "sha": "c431fc401311dbac3f99c199206ed8f089b8ff46",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -20,7 +20,7 @@\n #include <boost/algorithm/string.hpp>\n #include <boost/date_time/posix_time/posix_time.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n #include <boost/foreach.hpp>\n "
      },
      {
        "sha": "30b854477b04b73984330f42a5e24216d5b9b67a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -22,7 +22,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n-#include \"univalue/univalue.h\"\n+#include <univalue.h>\n \n using namespace std;\n "
      }
    ]
  },
  {
    "sha": "bb882d04e8626ba534200a44b58e7ac872a55dd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjg4MmQwNGU4NjI2YmE1MzQyMDBhNDRiNThlN2FjODcyYTU1ZGQw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T16:12:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T16:12:36Z"
      },
      "message": "Merge pull request #6732\n\na3874c7 doc: no longer require use of openssl in OpenBSD build guide (Wladimir J. van der Laan)\n5978388 build: remove libressl check (Wladimir J. van der Laan)",
      "tree": {
        "sha": "fbaa2fc66a6966cbd0f474db0405b31fe5cdae52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbaa2fc66a6966cbd0f474db0405b31fe5cdae52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDVt0AAoJEHSBCwEjRsmmnS8H/0XR/AggAlBFP4EuSTW3mPGa\nwXLDCjUJfrVv92DdnW/Knp+B3KGxX8d1lVPm3nxxKoJOK7YOm4GcHkFXPSR/vfBp\nQrS5VrGLagkHxVMYpy87MNLgkkRuutJ6Ye9N7GmTbOI0YQJBhmKjVJRbK40NsDqY\nGW6X4DoleOScAFFO9mC6/Iri2Iusb97xLRflCoP/nhP3OhpWj42A15g1CTsDKn+b\nndDLyyKFgJWBL5HounRu8hc74OeKgn8KKVSFhA0Klnl6Q72dHZTOTDdPq1Kng/eg\nxRiUQDLwww3Qb0ubdmkutw89Mfs5G8yyiRnjaxyLaYbM4kZ6h0fgTWUIWKRJcGQ=\n=OARj\n-----END PGP SIGNATURE-----",
        "payload": "tree fbaa2fc66a6966cbd0f474db0405b31fe5cdae52\nparent f297042cae572753e6c25d25caf92091e88b76df\nparent a3874c7c3aeefc2330424f0247129a89c27edcd8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443715927 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443715956 +0200\n\nMerge pull request #6732\n\na3874c7 doc: no longer require use of openssl in OpenBSD build guide (Wladimir J. van der Laan)\n5978388 build: remove libressl check (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb882d04e8626ba534200a44b58e7ac872a55dd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f297042cae572753e6c25d25caf92091e88b76df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f297042cae572753e6c25d25caf92091e88b76df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f297042cae572753e6c25d25caf92091e88b76df"
      },
      {
        "sha": "a3874c7c3aeefc2330424f0247129a89c27edcd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3874c7c3aeefc2330424f0247129a89c27edcd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a3874c7c3aeefc2330424f0247129a89c27edcd8"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 6,
      "deletions": 45
    },
    "files": [
      {
        "sha": "0803e74ff69fc8f6bc57dd32720b8115f074d919",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 18,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb882d04e8626ba534200a44b58e7ac872a55dd0/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb882d04e8626ba534200a44b58e7ac872a55dd0/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "patch": "@@ -700,27 +700,12 @@ else\n   fi\n fi\n \n-CFLAGS_TEMP=\"$CFLAGS\"\n+CXXFLAGS_TEMP=\"$CXXFLAGS\"\n LIBS_TEMP=\"$LIBS\"\n-CFLAGS=\"$CFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n-\n-AC_MSG_CHECKING(for a supported OpenSSL version)\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <openssl/rand.h>\n-  ]],\n-  [[RAND_egd(NULL);]])],\n-  [AC_MSG_RESULT(yes)],\n-  [\n-    AC_ARG_WITH([libressl],\n-    [AS_HELP_STRING([--with-libressl],[Build with system LibreSSL (default is no; DANGEROUS; NOT SUPPORTED)])],\n-    [AC_MSG_WARN([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])],\n-    [AC_MSG_ERROR([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])]\n-    )]\n-)\n-\n-CFLAGS=\"$CFLAGS_TEMP\"\n+CXXFLAGS=\"$CXXFLAGS_TEMP\"\n LIBS=\"$LIBS_TEMP\"\n \n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)"
      },
      {
        "sha": "a26b52465e94913fbbd341aee4b6d38dc3a049c4",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 3,
        "deletions": 27,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb882d04e8626ba534200a44b58e7ac872a55dd0/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb882d04e8626ba534200a44b58e7ac872a55dd0/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "patch": "@@ -70,24 +70,6 @@ config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static v\n ./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n ```\n \n-### OpenSSL\n-\n-OpenBSD uses a replacement of OpenSSL: LibreSSL. This can cause compatibility issues, hence `./configure` will bark if you try to compile with this library:\n-\n-    Detected LibreSSL: This is NOT supported, and may break consensus compatibility!\n-\n-To install a 'real' OpenSSL use:\n-\n-    pkg_add openssl\n-   \n-Any program linked against this library can only be used after setting the dynamic library path:\n-    \n-    export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n-\n-(otherwise there will be an error about not being able to find `libcrypto.so.1.0`)\n-\n-Alternatively, pass `--with-libressl` to `./configure`, however as the warning says, this is NOT supported, and may cause problems syncing the chain, or the node to fork off the network in unexpected circumstances.\n-\n ### Building BerkeleyDB\n \n BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n@@ -124,28 +106,24 @@ export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you i\n export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n ./autogen.sh\n ```\n+Make sure `BDB_PREFIX` and `BOOST_PREFIX` are set to the appropriate paths from the above steps.\n \n To configure with wallet:\n ```bash\n ./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n     CC=egcc CXX=eg++ CPP=ecpp \\\n-    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n-    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\" \\\n     LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n ```\n \n To configure without wallet:\n ```bash\n ./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n-    CC=egcc CXX=eg++ CPP=ecpp \\\n-    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n-    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+    CC=egcc CXX=eg++ CPP=ecpp\n ```\n \n Build and run the tests:\n ```bash\n gmake\n-export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n gmake check\n ```\n \n@@ -164,9 +142,7 @@ pkg_add llvm boost\n ```\n \n ```bash\n-./configure --disable-wallet --with-gui=no CC=clang CXX=clang++ \\\n-    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n-    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+./configure --disable-wallet --with-gui=no CC=clang CXX=clang++\n gmake\n ```\n "
      }
    ]
  },
  {
    "sha": "6a07eb676a020b0035173facb25f92f1ff6380f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTA3ZWI2NzZhMDIwYjAwMzUxNzNmYWNiMjVmOTJmMWZmNjM4MGY3",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-13T14:14:58Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-01T16:27:22Z"
      },
      "message": "Make TX_SCRIPTHASH clear vSolutionsRet first\n\nPreviously unlike other transaction types the TX_SCRIPTHASH would not\nclear vSolutionsRet, which means that unlike other transaction types if\nit was called twice in a row you would get the result of the previous\ninvocation as well.",
      "tree": {
        "sha": "7c78eaa878e8a206b9412eb089224a7a85a590df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c78eaa878e8a206b9412eb089224a7a85a590df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a07eb676a020b0035173facb25f92f1ff6380f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a07eb676a020b0035173facb25f92f1ff6380f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a07eb676a020b0035173facb25f92f1ff6380f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a07eb676a020b0035173facb25f92f1ff6380f7/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb882d04e8626ba534200a44b58e7ac872a55dd0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "59496d795d1c337e57966e964e682676e869e6a2",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a07eb676a020b0035173facb25f92f1ff6380f7/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a07eb676a020b0035173facb25f92f1ff6380f7/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=6a07eb676a020b0035173facb25f92f1ff6380f7",
        "patch": "@@ -58,6 +58,8 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n+    vSolutionsRet.clear();\n+\n     // Shortcut for pay-to-script-hash, which are more constrained than the other types:\n     // it is always OP_HASH160 20 [20 byte hash] OP_EQUAL\n     if (scriptPubKey.IsPayToScriptHash())"
      }
    ]
  },
  {
    "sha": "5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDg3MDljM2I3ZmNjNjZmYmY1MzdlYzBiNmMxYTk4ZDY5MjE0ZTI1",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-04T17:38:56Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-01T16:28:11Z"
      },
      "message": "Add IsPushOnly(const_iterator pc)\n\nAllows IsPushOnly() to be applied to just part of the script for\nOP_RETURN outputs.",
      "tree": {
        "sha": "ee5385b59d430542d8f8195a6f33988e322bf107",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee5385b59d430542d8f8195a6f33988e322bf107"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a07eb676a020b0035173facb25f92f1ff6380f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a07eb676a020b0035173facb25f92f1ff6380f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a07eb676a020b0035173facb25f92f1ff6380f7"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a8ec9fa7bf7d569ed68bb447bbd422265cee578",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "patch": "@@ -210,9 +210,8 @@ bool CScript::IsPayToScriptHash() const\n             this->at(22) == OP_EQUAL);\n }\n \n-bool CScript::IsPushOnly() const\n+bool CScript::IsPushOnly(const_iterator pc) const\n {\n-    const_iterator pc = begin();\n     while (pc < end())\n     {\n         opcodetype opcode;\n@@ -227,3 +226,8 @@ bool CScript::IsPushOnly() const\n     }\n     return true;\n }\n+\n+bool CScript::IsPushOnly() const\n+{\n+    return this->IsPushOnly(begin());\n+}"
      },
      {
        "sha": "3923a559b160119950d30335b1e211212021364d",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "patch": "@@ -589,6 +589,7 @@ class CScript : public std::vector<unsigned char>\n     bool IsPayToScriptHash() const;\n \n     /** Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical). */\n+    bool IsPushOnly(const_iterator pc) const;\n     bool IsPushOnly() const;\n \n     /**"
      }
    ]
  },
  {
    "sha": "da894ab5da222ad317039eb008ec6443fb9113d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTg5NGFiNWRhMjIyYWQzMTcwMzllYjAwOGVjNjQ0M2ZiOTExM2Q5",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-13T14:18:05Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-01T16:28:13Z"
      },
      "message": "Accept any sequence of PUSHDATAs in OP_RETURN outputs\n\nPreviously only one PUSHDATA was allowed, needlessly limiting\napplications such as matching OP_RETURN contents with bloom filters that\noperate on a per-PUSHDATA level. Now any combination that passes\nIsPushOnly() is allowed, so long as the total size of the scriptPubKey\nis less than 42 bytes. (unchanged modulo non-minimal PUSHDATA encodings)\n\nAlso, this fixes the odd bug where previously the PUSHDATA could be\nreplaced by any single opcode, even sigops consuming opcodes such as\nCHECKMULTISIG. (20 sigops!)",
      "tree": {
        "sha": "391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da894ab5da222ad317039eb008ec6443fb9113d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da894ab5da222ad317039eb008ec6443fb9113d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da894ab5da222ad317039eb008ec6443fb9113d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da894ab5da222ad317039eb008ec6443fb9113d9/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 34,
      "deletions": 17
    },
    "files": [
      {
        "sha": "4c96fbf5a5c399296a1fa355ad86a4770fcef84f",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -49,7 +49,9 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n             return false;\n         if (m < 1 || m > n)\n             return false;\n-    }\n+    } else if (whichType == TX_NULL_DATA &&\n+               (!GetBoolArg(\"-datacarrier\", true) || scriptPubKey.size() > nMaxDatacarrierBytes))\n+          return false;\n \n     return whichType != TX_NONSTANDARD;\n }"
      },
      {
        "sha": "9a0c067a335d0fa6b3ed7ae117ac9880bd558871",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -144,7 +144,7 @@ const char* GetOpName(opcodetype opcode)\n     case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n     // Note:\n-    //  The template matching params OP_SMALLDATA/etc are defined in opcodetype enum\n+    //  The template matching params OP_SMALLINTEGER/etc are defined in opcodetype enum\n     //  as kind of implementation hack, they are *NOT* real opcodes.  If found in real\n     //  Script, just let the default: case deal with them.\n "
      },
      {
        "sha": "cdc9a71bb24a075a4025e3cb359e828244dd4f88",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -167,7 +167,6 @@ enum opcodetype\n \n \n     // template matching params\n-    OP_SMALLDATA = 0xf9,\n     OP_SMALLINTEGER = 0xfa,\n     OP_PUBKEYS = 0xfb,\n     OP_PUBKEYHASH = 0xfd,"
      },
      {
        "sha": "bfef8afa17bbc9d26007a74a77a764dcec3026c5",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -51,11 +51,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n \n         // Sender provides N pubkeys, receivers provides M signatures\n         mTemplates.insert(make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n-\n-        // Empty, provably prunable, data-carrying output\n-        if (GetBoolArg(\"-datacarrier\", true))\n-            mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n-        mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n     vSolutionsRet.clear();\n@@ -70,6 +65,16 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         return true;\n     }\n \n+    // Provably prunable, data-carrying output\n+    //\n+    // So long as script passes the IsUnspendable() test and all but the first\n+    // byte passes the IsPushOnly() test we don't care what exactly is in the\n+    // script.\n+    if (scriptPubKey.size() >= 1 && scriptPubKey[0] == OP_RETURN && scriptPubKey.IsPushOnly(scriptPubKey.begin()+1)) {\n+        typeRet = TX_NULL_DATA;\n+        return true;\n+    }\n+\n     // Scan templates\n     const CScript& script1 = scriptPubKey;\n     BOOST_FOREACH(const PAIRTYPE(txnouttype, CScript)& tplate, mTemplates)\n@@ -142,12 +147,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n                 else\n                     break;\n             }\n-            else if (opcode2 == OP_SMALLDATA)\n-            {\n-                // small pushdata, <= nMaxDatacarrierBytes\n-                if (vch1.size() > nMaxDatacarrierBytes)\n-                    break;\n-            }\n             else if (opcode1 != opcode2 || vch1 != vch2)\n             {\n                 // Others must match exactly"
      },
      {
        "sha": "ae1bbecca0bc58ef1f3dc5e016e94f04dd0131d4",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -25,7 +25,7 @@ class CScriptID : public uint160\n     CScriptID(const uint160& in) : uint160(in) {}\n };\n \n-static const unsigned int MAX_OP_RETURN_RELAY = 80;      //! bytes\n+static const unsigned int MAX_OP_RETURN_RELAY = 83; //! bytes (+1 for OP_RETURN, +2 for the pushdata opcodes)\n extern unsigned nMaxDatacarrierBytes;\n \n /**"
      },
      {
        "sha": "9847f6512ea6fbfd879077ec1bd9962fecd66988",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -351,12 +351,29 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].scriptPubKey = CScript() << OP_1;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n-    // 80-byte TX_NULL_DATA (standard)\n+    // MAX_OP_RETURN_RELAY-byte TX_NULL_DATA (standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\");\n+    BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY, t.vout[0].scriptPubKey.size());\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n-    // 81-byte TX_NULL_DATA (non-standard)\n+    // MAX_OP_RETURN_RELAY+1-byte TX_NULL_DATA (non-standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\");\n+    BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY + 1, t.vout[0].scriptPubKey.size());\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+\n+    // Data payload can be encoded in any way...\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"00\") << ParseHex(\"01\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    // OP_RESERVED *is* considered to be a PUSHDATA type opcode by IsPushOnly()!\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RESERVED << -1 << 0 << ParseHex(\"01\") << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 << 16;\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << 0 << ParseHex(\"01\") << 2 << ParseHex(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+\n+    // ...so long as it only contains PUSHDATA's\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RETURN;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n     // TX_NULL_DATA w/o PUSHDATA"
      }
    ]
  },
  {
    "sha": "bb24835aed822ff1842bbf0920dba592eb48dfd5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjI0ODM1YWVkODIyZmYxODQyYmJmMDkyMGRiYTU5MmViNDhkZmQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T16:38:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T16:38:54Z"
      },
      "message": "build: disable -Wself-assign\n\nPrevent these warnings in clang 3.6:\n\n    ./serialize.h:96:9: warning: explicitly assigning value of variable of type 'uint64_t' (aka 'unsigned long') to itself [-Wself-assign]\n        obj = (obj);\n        ~~~ ^  ~~~",
      "tree": {
        "sha": "19c0085bbe0a8dd786c8f86418fea0506c49a4c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19c0085bbe0a8dd786c8f86418fea0506c49a4c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb24835aed822ff1842bbf0920dba592eb48dfd5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb24835aed822ff1842bbf0920dba592eb48dfd5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb24835aed822ff1842bbf0920dba592eb48dfd5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb24835aed822ff1842bbf0920dba592eb48dfd5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb882d04e8626ba534200a44b58e7ac872a55dd0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "57d89d9d5de7cdfa01d1fe5ee42bdd478cca8979",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb24835aed822ff1842bbf0920dba592eb48dfd5/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb24835aed822ff1842bbf0920dba592eb48dfd5/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bb24835aed822ff1842bbf0920dba592eb48dfd5",
        "patch": "@@ -167,7 +167,7 @@ fi\n ##       compatibility with the legacy buildsystem.\n ##\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n+  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\n fi\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n "
      }
    ]
  },
  {
    "sha": "5467820be5404fa736436a1202079e764a4308b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDY3ODIwYmU1NDA0ZmE3MzY0MzZhMTIwMjA3OWU3NjRhNDMwOGI0",
    "commit": {
      "author": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-08-26T10:05:36Z"
      },
      "committer": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-10-01T18:28:11Z"
      },
      "message": "Migrated rpc-tests.sh to all python rpc-tests.py\n\n1) created rpc-tests.py\n2) deleted rpc-tests.sh\n3) travis.yml points to rpc-tests.py\n4) Modified Makefile.am\n5) Updated README.md\n6) Added tests_config.py and deleted tests-config.sh\n7) Modified configure.ac with script to set correct path in tests_config.py",
      "tree": {
        "sha": "64474b1acd9e650aabf9fe9298600dd36ae263f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64474b1acd9e650aabf9fe9298600dd36ae263f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5467820be5404fa736436a1202079e764a4308b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5467820be5404fa736436a1202079e764a4308b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5467820be5404fa736436a1202079e764a4308b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5467820be5404fa736436a1202079e764a4308b4/comments",
    "author": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f297042cae572753e6c25d25caf92091e88b76df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f297042cae572753e6c25d25caf92091e88b76df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f297042cae572753e6c25d25caf92091e88b76df"
      }
    ],
    "stats": {
      "total": 237,
      "additions": 139,
      "deletions": 98
    },
    "files": [
      {
        "sha": "8e9684826f69081ff8b3bdf4b37c8182a194a267",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -69,6 +69,6 @@ script:\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "8a7140398f8d2e69e3c4e6b5402b24f57555ca64",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -204,7 +204,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/pull-tester/tests_config.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "5a0b4ae9cb3b26f98f8c345d86e69313f5c93ce9",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -914,7 +914,8 @@ AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+chmod +x qa/pull-tester/rpc-tests.py\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -954,3 +955,12 @@ case $host in\n      chmod 755 libtool\n    ;;\n esac\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n+     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+     chmod +x qa/pull-tester/tests_config.py\n+   ;;\n+esac"
      },
      {
        "sha": "68c1c0471e332d48042e1c45c3a7724d308316b9",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -0,0 +1,118 @@\n+#!/usr/bin/env python2\n+\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Run Regression Test Suite\n+#\n+\n+import os\n+import sys\n+import subprocess\n+import re\n+from tests_config import *\n+from sets import Set\n+\n+#If imported values are not defined then set to zero (or disabled)\n+if not vars().has_key('ENABLE_WALLET'):\n+    ENABLE_WALLET=0\n+if not vars().has_key('ENABLE_BITCOIND'):\n+    ENABLE_BITCOIND=0\n+if not vars().has_key('ENABLE_UTILS'):\n+    ENABLE_UTILS=0\n+if not vars().has_key('ENABLE_ZMQ'):\n+    ENABLE_ZMQ=0\n+\n+#Create a set to store arguments and create the passOn string\n+opts = Set()\n+passOn = \"\"\n+p = re.compile(\"^--\")\n+for i in range(1,len(sys.argv)):\n+    if (p.match(sys.argv[i]) or sys.argv[i] == \"-h\"):\n+        passOn += \" \" + sys.argv[i]\n+    else:\n+        opts.add(sys.argv[i])\n+\n+#Set env vars\n+buildDir = BUILDDIR\n+os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n+os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n+ \n+#Disable Windows tests by default\n+if EXEEXT == \".exe\" and \"-win\" not in opts:\n+    print \"Win tests currently disabled.  Use -win option to enable\"\n+    sys.exit(0)\n+\n+#Tests\n+testScripts = [\n+    'wallet.py',\n+    'listtransactions.py',\n+    'mempool_resurrect_test.py',\n+    'txn_doublespend.py --mineblock',\n+    'txn_clone.py',\n+    'getchaintips.py',\n+    'rawtransactions.py',\n+    'rest.py',\n+    'mempool_spendcoinbase.py',\n+    'mempool_coinbase_spends.py',\n+    'httpbasics.py',\n+    'zapwallettxes.py',\n+    'proxy_test.py',\n+    'merkle_blocks.py',\n+    'fundrawtransaction.py',\n+    'signrawtransactions.py',\n+    'walletbackup.py',\n+    'nodehandling.py',\n+    'reindex.py',\n+    'decodescript.py',\n+    'p2p-fullblocktest.py',\n+]\n+testScriptsExt = [\n+    'bipdersig-p2p.py',\n+    'bipdersig.py',\n+    'getblocktemplate_longpoll.py',\n+    'getblocktemplate_proposals.py',\n+    'txn_doublespend.py',\n+    'txn_clone.py --mineblock',\n+    'pruning.py',\n+    'forknotify.py',\n+    'invalidateblock.py',\n+    'keypool.py',\n+    'receivedby.py',\n+    'rpcbind_test.py',\n+#   'script_test.py',\n+    'smartfees.py',\n+    'maxblocksinflight.py',\n+    'invalidblockrequest.py',\n+#    'forknotify.py',\n+    'p2p-acceptblock.py',\n+    'mempool_packages.py',\n+]\n+\n+#Enable ZMQ tests\n+if ENABLE_ZMQ == 1:\n+    testScripts.append('zmq_test.py')\n+\n+if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n+    rpcTestDir = buildDir + '/qa/rpc-tests/'\n+    #Run Tests\n+    for i in range(len(testScripts)):\n+       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts \n+           or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n+            print  \"Running testscript \" + testScripts[i] + \"...\" \n+            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+\t    #exit if help is called so we print just one set of instructions\n+            p = re.compile(\" -h| --help\")\n+            if p.match(passOn):\n+                sys.exit(0)\n+\n+    #Run Extended Tests\n+    for i in range(len(testScriptsExt)):\n+        if ('-extended' in opts or testScriptsExt[i] in opts \n+           or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\" \n+            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+else:\n+    print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "7e1d2e8e503fd2f483b3629c0797146fcc826922",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f297042cae572753e6c25d25caf92091e88b76df/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f297042cae572753e6c25d25caf92091e88b76df/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=f297042cae572753e6c25d25caf92091e88b76df",
        "patch": "@@ -1,89 +0,0 @@\n-#!/bin/bash\n-set -e\n-\n-CURDIR=$(cd $(dirname \"$0\"); pwd)\n-# Get BUILDDIR and REAL_BITCOIND\n-. \"${CURDIR}/tests-config.sh\"\n-\n-export BITCOIND=${REAL_BITCOIND}\n-export BITCOINCLI=${REAL_BITCOINCLI}\n-\n-if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n-  echo \"Win tests currently disabled\"\n-  exit 0\n-fi\n-\n-#Run the tests\n-\n-testScripts=(\n-    'wallet.py'\n-    'listtransactions.py'\n-    'mempool_resurrect_test.py'\n-    'txn_doublespend.py --mineblock'\n-    'txn_clone.py'\n-    'getchaintips.py'\n-    'rawtransactions.py'\n-    'rest.py'\n-    'mempool_spendcoinbase.py'\n-    'mempool_coinbase_spends.py'\n-    'httpbasics.py'\n-    'zapwallettxes.py'\n-    'proxy_test.py'\n-    'merkle_blocks.py'\n-    'fundrawtransaction.py'\n-    'signrawtransactions.py'\n-    'walletbackup.py'\n-    'nodehandling.py'\n-    'reindex.py'\n-    'decodescript.py'\n-    'p2p-fullblocktest.py'\n-);\n-testScriptsExt=(\n-    'bipdersig-p2p.py'\n-    'bipdersig.py'\n-    'getblocktemplate_longpoll.py'\n-    'getblocktemplate_proposals.py'\n-    'txn_doublespend.py'\n-    'txn_clone.py --mineblock'\n-    'pruning.py'\n-    'forknotify.py'\n-    'invalidateblock.py'\n-    'keypool.py'\n-    'receivedby.py'\n-    'rpcbind_test.py'\n-#   'script_test.py'\n-    'smartfees.py'\n-    'maxblocksinflight.py'\n-    'invalidblockrequest.py'\n-#    'forknotify.py'\n-    'p2p-acceptblock.py'\n-    'mempool_packages.py'\n-);\n-\n-if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-  testScripts+=('zmq_test.py')\n-fi\n-\n-extArg=\"-extended\"\n-passOn=${@#$extArg}\n-\n-if [ \"x${ENABLE_BITCOIND}${ENABLE_UTILS}${ENABLE_WALLET}\" = \"x111\" ]; then\n-    for (( i = 0; i < ${#testScripts[@]}; i++ ))\n-    do\n-        if [ -z \"$1\" ] || [ \"${1:0:1}\" == \"-\" ] || [ \"$1\" == \"${testScripts[$i]}\" ] || [ \"$1.py\" == \"${testScripts[$i]}\" ]\n-        then\n-            echo -e \"Running testscript \\033[1m${testScripts[$i]}...\\033[0m\"\n-            ${BUILDDIR}/qa/rpc-tests/${testScripts[$i]} --srcdir \"${BUILDDIR}/src\" ${passOn}\n-        fi\n-    done\n-    for (( i = 0; i < ${#testScriptsExt[@]}; i++ ))\n-    do\n-        if [ \"$1\" == $extArg ] || [ \"$1\" == \"${testScriptsExt[$i]}\" ] || [ \"$1.py\" == \"${testScriptsExt[$i]}\" ]\n-        then\n-            echo -e \"Running \\033[1m2nd level\\033[0m testscript \\033[1m${testScriptsExt[$i]}...\\033[0m\"\n-            ${BUILDDIR}/qa/rpc-tests/${testScriptsExt[$i]} --srcdir \"${BUILDDIR}/src\" ${passOn}\n-        fi\n-    done\n-else\n-  echo \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n-fi"
      },
      {
        "sha": "937b4231f12f82841c52d7f34133c2daf5575668",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env python2\n # Copyright (c) 2013-2014 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -12,6 +12,4 @@ EXEEXT=\"@EXEEXT@\"\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1\n \n-REAL_BITCOIND=\"$BUILDDIR/src/bitcoind${EXEEXT}\"\n-REAL_BITCOINCLI=\"$BUILDDIR/src/bitcoin-cli${EXEEXT}\"\n ",
        "previous_filename": "qa/pull-tester/tests-config.sh.in"
      },
      {
        "sha": "3391ee03aee23f01c1f0017cdfc5300ca2088bfa",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5467820be5404fa736436a1202079e764a4308b4/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5467820be5404fa736436a1202079e764a4308b4/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=5467820be5404fa736436a1202079e764a4308b4",
        "patch": "@@ -37,9 +37,13 @@ Helper functions for creating blocks and transactions.\n Notes\n =====\n \n-You can run a single test by calling `qa/pull-tester/rpc-tests.sh <testname>`.\n+You can run any single test by calling qa/pull-tester/rpc-tests.py <testname>\n \n-Run all possible tests with `qa/pull-tester/rpc-tests.sh -extended`.\n+Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n+\n+Run the regression test suite with `qa/pull-tester/rpc-tests.py'\n+\n+Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n \n Possible options:\n \n@@ -53,7 +57,7 @@ Possible options:\n   --tracerpc       Print out all RPC calls as they are made\n ```\n \n-If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.sh wallet`). \n+If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`). \n \n A 200-block -regtest blockchain and wallets for four nodes\n is created the first time a regression test is run and"
      }
    ]
  },
  {
    "sha": "cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDc4YzJhNDIxYWU1YWExNzczYzhmYjg0ZGFkYzJjNjFhMDFlNWU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T17:53:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T19:28:45Z"
      },
      "message": "Merge pull request #6424\n\nda894ab Accept any sequence of PUSHDATAs in OP_RETURN outputs (Peter Todd)\n5d8709c Add IsPushOnly(const_iterator pc) (Peter Todd)\n6a07eb6 Make TX_SCRIPTHASH clear vSolutionsRet first (Peter Todd)",
      "tree": {
        "sha": "391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDYltAAoJEHSBCwEjRsmmih0IALcgAE9/ukUBIbaxrgQmTQ2v\n5S96gCoOgYP86VKCbLBr8YTUMj2CrJcUOw9rYe3EvIJMYPXh2F1dasI2BaaDG3JY\nwhO6n8sUz+83QdniJCAgjEwswsespqzNygxtvMPxwltGxh8ZYSydSDDx56IHO/nn\niWPACWrBuAY+ve3nEVziLYRWvI5iruPoh3ky0gTbv8xKF8fTXu8jYAb4nrmoIoMd\n2ZYXiMEgQcs8SY21v3BdmotlKBxG2N7zB9i2DX3SAtkhsuU0Az9VmGCG6idWFuH0\nREtloduibpEHSfVTgMrLe3eJrGMQPyLfQJd0yjnY55193JDRBgkANR7iETh8RHQ=\n=p4ka\n-----END PGP SIGNATURE-----",
        "payload": "tree 391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3\nparent bb882d04e8626ba534200a44b58e7ac872a55dd0\nparent da894ab5da222ad317039eb008ec6443fb9113d9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443722004 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443727725 +0200\n\nMerge pull request #6424\n\nda894ab Accept any sequence of PUSHDATAs in OP_RETURN outputs (Peter Todd)\n5d8709c Add IsPushOnly(const_iterator pc) (Peter Todd)\n6a07eb6 Make TX_SCRIPTHASH clear vSolutionsRet first (Peter Todd)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb882d04e8626ba534200a44b58e7ac872a55dd0"
      },
      {
        "sha": "da894ab5da222ad317039eb008ec6443fb9113d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da894ab5da222ad317039eb008ec6443fb9113d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da894ab5da222ad317039eb008ec6443fb9113d9"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 43,
      "deletions": 19
    },
    "files": [
      {
        "sha": "4c96fbf5a5c399296a1fa355ad86a4770fcef84f",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "patch": "@@ -49,7 +49,9 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n             return false;\n         if (m < 1 || m > n)\n             return false;\n-    }\n+    } else if (whichType == TX_NULL_DATA &&\n+               (!GetBoolArg(\"-datacarrier\", true) || scriptPubKey.size() > nMaxDatacarrierBytes))\n+          return false;\n \n     return whichType != TX_NONSTANDARD;\n }"
      },
      {
        "sha": "9a0c067a335d0fa6b3ed7ae117ac9880bd558871",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "patch": "@@ -144,7 +144,7 @@ const char* GetOpName(opcodetype opcode)\n     case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n     // Note:\n-    //  The template matching params OP_SMALLDATA/etc are defined in opcodetype enum\n+    //  The template matching params OP_SMALLINTEGER/etc are defined in opcodetype enum\n     //  as kind of implementation hack, they are *NOT* real opcodes.  If found in real\n     //  Script, just let the default: case deal with them.\n \n@@ -210,9 +210,8 @@ bool CScript::IsPayToScriptHash() const\n             this->at(22) == OP_EQUAL);\n }\n \n-bool CScript::IsPushOnly() const\n+bool CScript::IsPushOnly(const_iterator pc) const\n {\n-    const_iterator pc = begin();\n     while (pc < end())\n     {\n         opcodetype opcode;\n@@ -227,3 +226,8 @@ bool CScript::IsPushOnly() const\n     }\n     return true;\n }\n+\n+bool CScript::IsPushOnly() const\n+{\n+    return this->IsPushOnly(begin());\n+}"
      },
      {
        "sha": "cdc9a71bb24a075a4025e3cb359e828244dd4f88",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "patch": "@@ -167,7 +167,6 @@ enum opcodetype\n \n \n     // template matching params\n-    OP_SMALLDATA = 0xf9,\n     OP_SMALLINTEGER = 0xfa,\n     OP_PUBKEYS = 0xfb,\n     OP_PUBKEYHASH = 0xfd,\n@@ -589,6 +588,7 @@ class CScript : public std::vector<unsigned char>\n     bool IsPayToScriptHash() const;\n \n     /** Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical). */\n+    bool IsPushOnly(const_iterator pc) const;\n     bool IsPushOnly() const;\n \n     /**"
      },
      {
        "sha": "bfef8afa17bbc9d26007a74a77a764dcec3026c5",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "patch": "@@ -51,13 +51,10 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n \n         // Sender provides N pubkeys, receivers provides M signatures\n         mTemplates.insert(make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n-\n-        // Empty, provably prunable, data-carrying output\n-        if (GetBoolArg(\"-datacarrier\", true))\n-            mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n-        mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n+    vSolutionsRet.clear();\n+\n     // Shortcut for pay-to-script-hash, which are more constrained than the other types:\n     // it is always OP_HASH160 20 [20 byte hash] OP_EQUAL\n     if (scriptPubKey.IsPayToScriptHash())\n@@ -68,6 +65,16 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         return true;\n     }\n \n+    // Provably prunable, data-carrying output\n+    //\n+    // So long as script passes the IsUnspendable() test and all but the first\n+    // byte passes the IsPushOnly() test we don't care what exactly is in the\n+    // script.\n+    if (scriptPubKey.size() >= 1 && scriptPubKey[0] == OP_RETURN && scriptPubKey.IsPushOnly(scriptPubKey.begin()+1)) {\n+        typeRet = TX_NULL_DATA;\n+        return true;\n+    }\n+\n     // Scan templates\n     const CScript& script1 = scriptPubKey;\n     BOOST_FOREACH(const PAIRTYPE(txnouttype, CScript)& tplate, mTemplates)\n@@ -140,12 +147,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n                 else\n                     break;\n             }\n-            else if (opcode2 == OP_SMALLDATA)\n-            {\n-                // small pushdata, <= nMaxDatacarrierBytes\n-                if (vch1.size() > nMaxDatacarrierBytes)\n-                    break;\n-            }\n             else if (opcode1 != opcode2 || vch1 != vch2)\n             {\n                 // Others must match exactly"
      },
      {
        "sha": "ae1bbecca0bc58ef1f3dc5e016e94f04dd0131d4",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "patch": "@@ -25,7 +25,7 @@ class CScriptID : public uint160\n     CScriptID(const uint160& in) : uint160(in) {}\n };\n \n-static const unsigned int MAX_OP_RETURN_RELAY = 80;      //! bytes\n+static const unsigned int MAX_OP_RETURN_RELAY = 83; //! bytes (+1 for OP_RETURN, +2 for the pushdata opcodes)\n extern unsigned nMaxDatacarrierBytes;\n \n /**"
      },
      {
        "sha": "9847f6512ea6fbfd879077ec1bd9962fecd66988",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "patch": "@@ -351,12 +351,29 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].scriptPubKey = CScript() << OP_1;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n-    // 80-byte TX_NULL_DATA (standard)\n+    // MAX_OP_RETURN_RELAY-byte TX_NULL_DATA (standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\");\n+    BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY, t.vout[0].scriptPubKey.size());\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n-    // 81-byte TX_NULL_DATA (non-standard)\n+    // MAX_OP_RETURN_RELAY+1-byte TX_NULL_DATA (non-standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\");\n+    BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY + 1, t.vout[0].scriptPubKey.size());\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+\n+    // Data payload can be encoded in any way...\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"00\") << ParseHex(\"01\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    // OP_RESERVED *is* considered to be a PUSHDATA type opcode by IsPushOnly()!\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RESERVED << -1 << 0 << ParseHex(\"01\") << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 << 16;\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << 0 << ParseHex(\"01\") << 2 << ParseHex(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+\n+    // ...so long as it only contains PUSHDATA's\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RETURN;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n     // TX_NULL_DATA w/o PUSHDATA"
      }
    ]
  },
  {
    "sha": "19c71864258f55b07dd290d8740715c4707222f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWM3MTg2NDI1OGY1NWIwN2RkMjkwZDg3NDA3MTVjNDcwNzIyMmYy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T20:47:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T20:47:05Z"
      },
      "message": "Merge pull request #6739\n\n96106f0 [Trivial] start the help texts with lowercase (paveljanik)",
      "tree": {
        "sha": "909c5d2bfccfc8fb9c6fe9d6c3308e5eeb9db44e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/909c5d2bfccfc8fb9c6fe9d6c3308e5eeb9db44e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19c71864258f55b07dd290d8740715c4707222f2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDZvJAAoJEHSBCwEjRsmmaBQH/1sw4wd/ikiXK4T6JvYTfuvN\n0T6F23gRcJfYKlVUu/HHU5ZnL53kheLRIicKdjwUzVNGTJnlAxHmR5Xh8DkI5Ksy\nKEVMROG+zHmciEjYagJXjyBK6D6ITkcJgGcCSTOr29XTUeHaSM9NuHjXCDZCc1Ss\nA0IwapJXeIYbxYbP0nXgwYpTOTuV6U7crZm7+AGt5gP6kXudPcsU9cDSnOA+Shiv\nnKkdjNgQ1Dh41Qvk4DTUVrDnfgsMSHRM86HpA4h+v3HgrwwRAXyTIdsTied1aywd\n/vsikv3hBwZ3c8LOzPbjI3nsSrtMRtX7bDs/r7cna7Z+u8d7B+zq6FP8+SINBIs=\n=xMPH\n-----END PGP SIGNATURE-----",
        "payload": "tree 909c5d2bfccfc8fb9c6fe9d6c3308e5eeb9db44e\nparent cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8\nparent 96106f0f3023369ab88ad6cfde42f689f0296ab8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443732423 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443732425 +0200\n\nMerge pull request #6739\n\n96106f0 [Trivial] start the help texts with lowercase (paveljanik)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19c71864258f55b07dd290d8740715c4707222f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19c71864258f55b07dd290d8740715c4707222f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19c71864258f55b07dd290d8740715c4707222f2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd78c2a421ae5aa1773c8fb84dadc2c61a01e5e8"
      },
      {
        "sha": "96106f0f3023369ab88ad6cfde42f689f0296ab8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96106f0f3023369ab88ad6cfde42f689f0296ab8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96106f0f3023369ab88ad6cfde42f689f0296ab8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ff2c7ab4e931b0a1797a202ea822fe0d2088c8d6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19c71864258f55b07dd290d8740715c4707222f2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19c71864258f55b07dd290d8740715c4707222f2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=19c71864258f55b07dd290d8740715c4707222f2",
        "patch": "@@ -139,7 +139,7 @@ AC_ARG_ENABLE([glibc-back-compat],\n \n AC_ARG_ENABLE([zmq],\n   [AS_HELP_STRING([--disable-zmq],\n-  [Disable ZMQ notifications])],\n+  [disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n "
      }
    ]
  },
  {
    "sha": "5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWI1ZGNhNmYxYmIxZWNjZDQ3ZWE2NDgzNGFjYzRmZWUwNDM1Yjcz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T21:05:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-01T21:06:02Z"
      },
      "message": "Merge pull request #6616\n\n5467820 Migrated rpc-tests.sh to all python rpc-tests.py (ptschip)",
      "tree": {
        "sha": "89bfbe4aa2375b8e37275707f458a45d4a183d85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89bfbe4aa2375b8e37275707f458a45d4a183d85"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWDaA6AAoJEHSBCwEjRsmmLaUIALRBto611AsxqNf+i6BY12At\nX+TzR6ViM/EU/F6290Ng9N8yALTbhfM57EujvD/raSHmPg4FJ5kuJL0v4LvjypS0\nFEaahgZMQGIVg15bstgDwqmilOd7WTn0XM2BBgiAsIw8GfDLSDqD7Vi6iSyMo4TZ\n642zMwgbIyYaeHVl98akRQB/cnRzJmyHdSSD/qBcpT0MhQo7L6ykHhOz75iOMeqd\nEMJz5HWpMEbQv+nz6e4oHBXXZzrVHD2YAG4fpP7XX5kmgn27zAlfokGCFJEb+vcd\nLR/ArOQ1oFvEFtW684W4uGfDeSgL/lUCF2NubOp+jlZS1h+FoX4QzgqUnupEkiU=\n=3HCS\n-----END PGP SIGNATURE-----",
        "payload": "tree 89bfbe4aa2375b8e37275707f458a45d4a183d85\nparent 19c71864258f55b07dd290d8740715c4707222f2\nparent 5467820be5404fa736436a1202079e764a4308b4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1443733531 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1443733562 +0200\n\nMerge pull request #6616\n\n5467820 Migrated rpc-tests.sh to all python rpc-tests.py (ptschip)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19c71864258f55b07dd290d8740715c4707222f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19c71864258f55b07dd290d8740715c4707222f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19c71864258f55b07dd290d8740715c4707222f2"
      },
      {
        "sha": "5467820be5404fa736436a1202079e764a4308b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5467820be5404fa736436a1202079e764a4308b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5467820be5404fa736436a1202079e764a4308b4"
      }
    ],
    "stats": {
      "total": 237,
      "additions": 139,
      "deletions": 98
    },
    "files": [
      {
        "sha": "8e9684826f69081ff8b3bdf4b37c8182a194a267",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "patch": "@@ -69,6 +69,6 @@ script:\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "8a7140398f8d2e69e3c4e6b5402b24f57555ca64",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "patch": "@@ -204,7 +204,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/pull-tester/tests_config.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "9a1029e79f3ad0fcdd2ae82ebad1e877b672702b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "patch": "@@ -899,7 +899,8 @@ AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+chmod +x qa/pull-tester/rpc-tests.py\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -939,3 +940,12 @@ case $host in\n      chmod 755 libtool\n    ;;\n esac\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n+     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+     chmod +x qa/pull-tester/tests_config.py\n+   ;;\n+esac"
      },
      {
        "sha": "68c1c0471e332d48042e1c45c3a7724d308316b9",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "patch": "@@ -0,0 +1,118 @@\n+#!/usr/bin/env python2\n+\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Run Regression Test Suite\n+#\n+\n+import os\n+import sys\n+import subprocess\n+import re\n+from tests_config import *\n+from sets import Set\n+\n+#If imported values are not defined then set to zero (or disabled)\n+if not vars().has_key('ENABLE_WALLET'):\n+    ENABLE_WALLET=0\n+if not vars().has_key('ENABLE_BITCOIND'):\n+    ENABLE_BITCOIND=0\n+if not vars().has_key('ENABLE_UTILS'):\n+    ENABLE_UTILS=0\n+if not vars().has_key('ENABLE_ZMQ'):\n+    ENABLE_ZMQ=0\n+\n+#Create a set to store arguments and create the passOn string\n+opts = Set()\n+passOn = \"\"\n+p = re.compile(\"^--\")\n+for i in range(1,len(sys.argv)):\n+    if (p.match(sys.argv[i]) or sys.argv[i] == \"-h\"):\n+        passOn += \" \" + sys.argv[i]\n+    else:\n+        opts.add(sys.argv[i])\n+\n+#Set env vars\n+buildDir = BUILDDIR\n+os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n+os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n+ \n+#Disable Windows tests by default\n+if EXEEXT == \".exe\" and \"-win\" not in opts:\n+    print \"Win tests currently disabled.  Use -win option to enable\"\n+    sys.exit(0)\n+\n+#Tests\n+testScripts = [\n+    'wallet.py',\n+    'listtransactions.py',\n+    'mempool_resurrect_test.py',\n+    'txn_doublespend.py --mineblock',\n+    'txn_clone.py',\n+    'getchaintips.py',\n+    'rawtransactions.py',\n+    'rest.py',\n+    'mempool_spendcoinbase.py',\n+    'mempool_coinbase_spends.py',\n+    'httpbasics.py',\n+    'zapwallettxes.py',\n+    'proxy_test.py',\n+    'merkle_blocks.py',\n+    'fundrawtransaction.py',\n+    'signrawtransactions.py',\n+    'walletbackup.py',\n+    'nodehandling.py',\n+    'reindex.py',\n+    'decodescript.py',\n+    'p2p-fullblocktest.py',\n+]\n+testScriptsExt = [\n+    'bipdersig-p2p.py',\n+    'bipdersig.py',\n+    'getblocktemplate_longpoll.py',\n+    'getblocktemplate_proposals.py',\n+    'txn_doublespend.py',\n+    'txn_clone.py --mineblock',\n+    'pruning.py',\n+    'forknotify.py',\n+    'invalidateblock.py',\n+    'keypool.py',\n+    'receivedby.py',\n+    'rpcbind_test.py',\n+#   'script_test.py',\n+    'smartfees.py',\n+    'maxblocksinflight.py',\n+    'invalidblockrequest.py',\n+#    'forknotify.py',\n+    'p2p-acceptblock.py',\n+    'mempool_packages.py',\n+]\n+\n+#Enable ZMQ tests\n+if ENABLE_ZMQ == 1:\n+    testScripts.append('zmq_test.py')\n+\n+if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n+    rpcTestDir = buildDir + '/qa/rpc-tests/'\n+    #Run Tests\n+    for i in range(len(testScripts)):\n+       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts \n+           or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n+            print  \"Running testscript \" + testScripts[i] + \"...\" \n+            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+\t    #exit if help is called so we print just one set of instructions\n+            p = re.compile(\" -h| --help\")\n+            if p.match(passOn):\n+                sys.exit(0)\n+\n+    #Run Extended Tests\n+    for i in range(len(testScriptsExt)):\n+        if ('-extended' in opts or testScriptsExt[i] in opts \n+           or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\" \n+            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+else:\n+    print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "7e1d2e8e503fd2f483b3629c0797146fcc826922",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19c71864258f55b07dd290d8740715c4707222f2/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19c71864258f55b07dd290d8740715c4707222f2/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=19c71864258f55b07dd290d8740715c4707222f2",
        "patch": "@@ -1,89 +0,0 @@\n-#!/bin/bash\n-set -e\n-\n-CURDIR=$(cd $(dirname \"$0\"); pwd)\n-# Get BUILDDIR and REAL_BITCOIND\n-. \"${CURDIR}/tests-config.sh\"\n-\n-export BITCOIND=${REAL_BITCOIND}\n-export BITCOINCLI=${REAL_BITCOINCLI}\n-\n-if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n-  echo \"Win tests currently disabled\"\n-  exit 0\n-fi\n-\n-#Run the tests\n-\n-testScripts=(\n-    'wallet.py'\n-    'listtransactions.py'\n-    'mempool_resurrect_test.py'\n-    'txn_doublespend.py --mineblock'\n-    'txn_clone.py'\n-    'getchaintips.py'\n-    'rawtransactions.py'\n-    'rest.py'\n-    'mempool_spendcoinbase.py'\n-    'mempool_coinbase_spends.py'\n-    'httpbasics.py'\n-    'zapwallettxes.py'\n-    'proxy_test.py'\n-    'merkle_blocks.py'\n-    'fundrawtransaction.py'\n-    'signrawtransactions.py'\n-    'walletbackup.py'\n-    'nodehandling.py'\n-    'reindex.py'\n-    'decodescript.py'\n-    'p2p-fullblocktest.py'\n-);\n-testScriptsExt=(\n-    'bipdersig-p2p.py'\n-    'bipdersig.py'\n-    'getblocktemplate_longpoll.py'\n-    'getblocktemplate_proposals.py'\n-    'txn_doublespend.py'\n-    'txn_clone.py --mineblock'\n-    'pruning.py'\n-    'forknotify.py'\n-    'invalidateblock.py'\n-    'keypool.py'\n-    'receivedby.py'\n-    'rpcbind_test.py'\n-#   'script_test.py'\n-    'smartfees.py'\n-    'maxblocksinflight.py'\n-    'invalidblockrequest.py'\n-#    'forknotify.py'\n-    'p2p-acceptblock.py'\n-    'mempool_packages.py'\n-);\n-\n-if [ \"x$ENABLE_ZMQ\" = \"x1\" ]; then\n-  testScripts+=('zmq_test.py')\n-fi\n-\n-extArg=\"-extended\"\n-passOn=${@#$extArg}\n-\n-if [ \"x${ENABLE_BITCOIND}${ENABLE_UTILS}${ENABLE_WALLET}\" = \"x111\" ]; then\n-    for (( i = 0; i < ${#testScripts[@]}; i++ ))\n-    do\n-        if [ -z \"$1\" ] || [ \"${1:0:1}\" == \"-\" ] || [ \"$1\" == \"${testScripts[$i]}\" ] || [ \"$1.py\" == \"${testScripts[$i]}\" ]\n-        then\n-            echo -e \"Running testscript \\033[1m${testScripts[$i]}...\\033[0m\"\n-            ${BUILDDIR}/qa/rpc-tests/${testScripts[$i]} --srcdir \"${BUILDDIR}/src\" ${passOn}\n-        fi\n-    done\n-    for (( i = 0; i < ${#testScriptsExt[@]}; i++ ))\n-    do\n-        if [ \"$1\" == $extArg ] || [ \"$1\" == \"${testScriptsExt[$i]}\" ] || [ \"$1.py\" == \"${testScriptsExt[$i]}\" ]\n-        then\n-            echo -e \"Running \\033[1m2nd level\\033[0m testscript \\033[1m${testScriptsExt[$i]}...\\033[0m\"\n-            ${BUILDDIR}/qa/rpc-tests/${testScriptsExt[$i]} --srcdir \"${BUILDDIR}/src\" ${passOn}\n-        fi\n-    done\n-else\n-  echo \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n-fi"
      },
      {
        "sha": "937b4231f12f82841c52d7f34133c2daf5575668",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env python2\n # Copyright (c) 2013-2014 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -12,6 +12,4 @@ EXEEXT=\"@EXEEXT@\"\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1\n \n-REAL_BITCOIND=\"$BUILDDIR/src/bitcoind${EXEEXT}\"\n-REAL_BITCOINCLI=\"$BUILDDIR/src/bitcoin-cli${EXEEXT}\"\n ",
        "previous_filename": "qa/pull-tester/tests-config.sh.in"
      },
      {
        "sha": "3391ee03aee23f01c1f0017cdfc5300ca2088bfa",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "patch": "@@ -37,9 +37,13 @@ Helper functions for creating blocks and transactions.\n Notes\n =====\n \n-You can run a single test by calling `qa/pull-tester/rpc-tests.sh <testname>`.\n+You can run any single test by calling qa/pull-tester/rpc-tests.py <testname>\n \n-Run all possible tests with `qa/pull-tester/rpc-tests.sh -extended`.\n+Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n+\n+Run the regression test suite with `qa/pull-tester/rpc-tests.py'\n+\n+Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n \n Possible options:\n \n@@ -53,7 +57,7 @@ Possible options:\n   --tracerpc       Print out all RPC calls as they are made\n ```\n \n-If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.sh wallet`). \n+If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`). \n \n A 200-block -regtest blockchain and wallets for four nodes\n is created the first time a regression test is run and"
      }
    ]
  },
  {
    "sha": "9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWU1YWM4MmY2YTZjYTBjMzY1MjdkYmMwY2EzMzkzYWYwMjhhZjdm",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-02T05:44:36Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-02T05:44:36Z"
      },
      "message": "Rewrite help texts for features enabled by default.",
      "tree": {
        "sha": "39c135e78e2a19e59683f71b50673b49ff0a2568",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39c135e78e2a19e59683f71b50673b49ff0a2568"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "284c4cd7f5c1e116b3298aec716afc8df0ed74d2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
        "patch": "@@ -69,8 +69,8 @@ PKG_PROG_PKG_CONFIG\n \n # Enable wallet\n AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--enable-wallet],\n-  [enable wallet (default is yes)])],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n   [enable_wallet=$enableval],\n   [enable_wallet=yes])\n \n@@ -87,7 +87,7 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=no])\n \n AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n@@ -108,8 +108,8 @@ AC_ARG_WITH([qrencode],\n   [use_qr=auto])\n \n AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--enable-hardening],\n-  [attempt to harden the resulting executables (default is yes)])],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden)])],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n@@ -120,8 +120,8 @@ AC_ARG_ENABLE([reduce-exports],\n   [use_reduce_exports=no])\n \n AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--enable-ccache],\n-  [use ccache for building (default is yes if ccache is found)])],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n "
      }
    ]
  },
  {
    "sha": "dd28089fa23b1d91cc0799433904b8467fdc1880",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDI4MDg5ZmEyM2IxZDkxY2MwNzk5NDMzOTA0Yjg0NjdmZGMxODgw",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-10-03T19:21:55Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-10-03T19:21:55Z"
      },
      "message": "autotools: move checking for zmq library to common area in configure.ac\n\n* Fixes #6679\n\n* Tested with --disable-zmq\n* Tested with and without pkgconfig\n* Tested with and without zmq installed\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "e68cb8369bfa6a27abe260f4dfccfb30ba4c12c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e68cb8369bfa6a27abe260f4dfccfb30ba4c12c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd28089fa23b1d91cc0799433904b8467fdc1880",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd28089fa23b1d91cc0799433904b8467fdc1880",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd28089fa23b1d91cc0799433904b8467fdc1880",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd28089fa23b1d91cc0799433904b8467fdc1880/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f297042cae572753e6c25d25caf92091e88b76df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f297042cae572753e6c25d25caf92091e88b76df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f297042cae572753e6c25d25caf92091e88b76df"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 25,
      "deletions": 15
    },
    "files": [
      {
        "sha": "18215a900db1c2c811374e592d92195b6360605a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 25,
        "deletions": 15,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd28089fa23b1d91cc0799433904b8467fdc1880/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd28089fa23b1d91cc0799433904b8467fdc1880/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=dd28089fa23b1d91cc0799433904b8467fdc1880",
        "patch": "@@ -139,7 +139,7 @@ AC_ARG_ENABLE([glibc-back-compat],\n \n AC_ARG_ENABLE([zmq],\n   [AS_HELP_STRING([--disable-zmq],\n-  [Disable ZMQ notifications])],\n+  [disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n \n@@ -676,6 +676,16 @@ if test x$use_pkgconfig = xyes; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n         fi\n       fi\n+\n+      if test \"x$use_zmq\" = \"xyes\"; then\n+        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n+          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+           use_zmq=no])\n+      else\n+          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+      fi\n     ]\n   )\n else\n@@ -693,6 +703,20 @@ else\n     fi\n   fi\n \n+  if test \"x$use_zmq\" = \"xyes\"; then\n+     AC_CHECK_HEADER([zmq.h],\n+       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n+       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+  else\n+    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+  fi\n+\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n@@ -839,20 +863,6 @@ if test x$bitcoin_enable_qt != xno; then\n   fi\n fi\n \n-# conditional search for and use libzmq\n-AC_MSG_CHECKING([whether to build ZMQ support])\n-if test \"x$use_zmq\" = \"xyes\"; then\n-  AC_MSG_RESULT([yes])\n-  PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n-    [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-    [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-     AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-     use_zmq=no])\n-else\n-  AC_MSG_RESULT([no, --disable-zmq used])\n-  AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-fi\n-\n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n AC_MSG_CHECKING([whether to build test_bitcoin])"
      }
    ]
  },
  {
    "sha": "3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWIzZGU4YmExYTYzZDVlYzBmOTdhZTEyZTY2MGQ5NzMwYzYwMTU2",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-04T19:08:18Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-04T19:08:18Z"
      },
      "message": "qa/pull-tester/rpc-tests.py: chmod 0755\n\nFix file mode to be executable.\n\nInclude dummy whitespace change to force git to change mode.",
      "tree": {
        "sha": "6f0caa4e891c7488cec908b2d60ca17c11dec274",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f0caa4e891c7488cec908b2d60ca17c11dec274"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVhF5JiWzCDIBeCsvAQL5SBAAu7k5TLErg7V10MYhkQmMrOANZ5WRUZnu\nC0q66YCgG5qEZEX4s54zk1Cfto0jRd4oXIwtW2KJINqUSxuq2ajXA/122/TxrgJJ\nGQj53FQxsXwvTP55oznSg9houizADOnIH1kqQEt1vpaDOIBKXk83xXHmkgpDy5Yg\nsJxJaFrXEWb/22fzu76vz4BruD05hLXOLtT0UyaiDvsxwfF0eIgfHiMSUAqMrT/q\nkXqptPdKwryW6oLtfQ48pBrTCqfEOAaORHZDQrpwBKDLJHJkJRZbtUa5rcdRBfsW\ni+yowdfW0UD8lNC84EvvTdPhtkYqd5epPeOCxVgOgw2+BUWa1AXhTWvsjjaPMKZD\n8onY1YOFAIGK2BYAJglEWCIQ0vsyJri0xAiN6V1VutSmJkn86R4Wk9+dZFl3nT2S\nq/MSGdnaDp/CCvOG36a+vF1AR70eh547jqEiG58OXUzHCkSDTzGtvCq1hKyJdZdi\n0WykNbJuvDjylqFtKk2qDBFqP00kI63BVAFrvmFABl/8yCOSIm7I0yJHnnvtqxER\n1oNpTxwWZa+DrpISLV0fETfPI75iOhfPtU0cxKs8RQlElEtt27vOuP8DxXwTMnUa\njm3ingR21DCf18dIyB0mdcIpF3/7stnV/gopmcpE1LJgwcascP8KzuwviNzj2gbs\npeUySRFjMug=\n=vdpX\n-----END PGP SIGNATURE-----",
        "payload": "tree 6f0caa4e891c7488cec908b2d60ca17c11dec274\nparent 5ab5dca6f1bb1eccd47ea64834acc4fee0435b73\nauthor Jeff Garzik <jgarzik@pobox.com> 1443985698 -0400\ncommitter Jeff Garzik <jgarzik@pobox.com> 1443985698 -0400\n\nqa/pull-tester/rpc-tests.py: chmod 0755\n\nFix file mode to be executable.\n\nInclude dummy whitespace change to force git to change mode.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "58098bdec52f8949afc957b2134240ae610c7310",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "patch": "@@ -1,5 +1,4 @@\n #!/usr/bin/env python2\n-\n # Copyright (c) 2014 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php."
      }
    ]
  },
  {
    "sha": "ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTcwOTk3MGUwMDEwNGRjYjliNTEwY2EwOTBkMmJkYjUwZTNhYjZi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T09:49:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:32:51Z"
      },
      "message": "build: Remove unnecessary chmods after #6616\n\nDon't chmod a repository-included file in the configure script, and\n`tests_config.py` is a module that doesn't need to be executable.",
      "tree": {
        "sha": "5a27271aedc9a15578641c3a131def24b139d509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a27271aedc9a15578641c3a131def24b139d509"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea709970e00104dcb9b510ca090d2bdb50e3ab6b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "dd6c7d008a48c84b2558b5aa5797bfd7afa0c9c8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea709970e00104dcb9b510ca090d2bdb50e3ab6b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea709970e00104dcb9b510ca090d2bdb50e3ab6b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
        "patch": "@@ -900,7 +900,6 @@ AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n-chmod +x qa/pull-tester/rpc-tests.py\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -946,6 +945,5 @@ case ${OS} in\n    *Windows*)\n      sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n      mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n-     chmod +x qa/pull-tester/tests_config.py\n    ;;\n esac"
      }
    ]
  },
  {
    "sha": "2844b9e90e588ea04bc2116188fa3eef195d3be8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODQ0YjllOTBlNTg4ZWEwNGJjMjExNjE4OGZhM2VlZjE5NWQzYmU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:35:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:35:07Z"
      },
      "message": "Merge pull request #6759\n\nea70997 build: Remove unnecessary chmods after #6616 (Wladimir J. van der Laan)",
      "tree": {
        "sha": "5a27271aedc9a15578641c3a131def24b139d509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a27271aedc9a15578641c3a131def24b139d509"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2844b9e90e588ea04bc2116188fa3eef195d3be8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWEmBrAAoJEHSBCwEjRsmmb2oH+wQgkf0AOFg57yKlGbHMPDd1\nfy+CfD/qk0QZM5ikU9dMU3RznmFvt9KuztnXoBOdViQa0Gkgr8T50gwLIX9KvgVo\nrBrLMFIjX6SjvoJ9ZuMykptYh/L/2ELW9yoj7v1JGebWFrwv4QRZ0cUSxvq0kKvM\n3GO8QuUTlfjf8yEBQzEY9S2rwJ3oi9BXuoX3Hry5/4tnauNsUQ2In8FPsDpMNnQU\nvo3hf+A3mORQARpxERfBDqlejOQf2TocJJtOcFMCtG+rZkL9+53x4eny8YPjxhho\ncKugGcTcl7FyqK0+kicOZK6u1jrPKljOnHSm3XEWH7dShXz6NVrQz0ShSJDbysY=\n=wDaF\n-----END PGP SIGNATURE-----",
        "payload": "tree 5a27271aedc9a15578641c3a131def24b139d509\nparent 3ab3de8ba1a63d5ec0f97ae12e660d9730c60156\nparent ea709970e00104dcb9b510ca090d2bdb50e3ab6b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444044902 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444044907 +0200\n\nMerge pull request #6759\n\nea70997 build: Remove unnecessary chmods after #6616 (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2844b9e90e588ea04bc2116188fa3eef195d3be8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2844b9e90e588ea04bc2116188fa3eef195d3be8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2844b9e90e588ea04bc2116188fa3eef195d3be8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156"
      },
      {
        "sha": "ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea709970e00104dcb9b510ca090d2bdb50e3ab6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea709970e00104dcb9b510ca090d2bdb50e3ab6b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "dd6c7d008a48c84b2558b5aa5797bfd7afa0c9c8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2844b9e90e588ea04bc2116188fa3eef195d3be8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2844b9e90e588ea04bc2116188fa3eef195d3be8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2844b9e90e588ea04bc2116188fa3eef195d3be8",
        "patch": "@@ -900,7 +900,6 @@ AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n-chmod +x qa/pull-tester/rpc-tests.py\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -946,6 +945,5 @@ case ${OS} in\n    *Windows*)\n      sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n      mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n-     chmod +x qa/pull-tester/tests_config.py\n    ;;\n esac"
      }
    ]
  },
  {
    "sha": "5f34a2510f6414a27ac3179ee461c944c8acd395",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjM0YTI1MTBmNjQxNGEyN2FjMzE3OWVlNDYxYzk0NGM4YWNkMzk1",
    "commit": {
      "author": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-10-03T15:03:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:38:31Z"
      },
      "message": "Changed rpc-tests.sh to rpc-tests.py in README.md\n\nGithub-Pull: #6752",
      "tree": {
        "sha": "18abb500e75990f7cc616cf3fe3abc0429dc51a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18abb500e75990f7cc616cf3fe3abc0429dc51a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f34a2510f6414a27ac3179ee461c944c8acd395",
      "comment_count": 1,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWEmE/AAoJEHSBCwEjRsmmf6UIAJHbGr4n6kOQB7FEuYpfQVt5\nPIJUudgvxHSbpRc7l8mg0D6hLlu3qx800p6GLSHPeA1UD44i0W8ii8NPi/5iox38\nXQ7qZYomZVU3IyTbjODIqHOeTp/HG3RMXFhXiVR/h77mPNAJEJB8kE1uNANhBg27\nP06VXR4KkNc3wzgX+VADvnchSuec97UFADVr4zjzlLuL4iKC5YpMDjfxuIZqSLBx\nttgvd8mkl0X8WKS8RFQUjC/8wVwCnjKkvQFc3ES3HkfTFXBu5ykL7QcSkyeHqlqq\n7XyqloBgKIyYWUjEGmeZVx9h9z6XuDGW8RJbGqPj/sGb/iekLSpUXSJx64OlhGU=\n=oMqE\n-----END PGP SIGNATURE-----",
        "payload": "tree 18abb500e75990f7cc616cf3fe3abc0429dc51a5\nparent 2844b9e90e588ea04bc2116188fa3eef195d3be8\nauthor ptschip <peter.tschipper@gmail.com> 1443884605 -0700\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444045111 +0200\n\nChanged rpc-tests.sh to rpc-tests.py in README.md\n\nGithub-Pull: #6752\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f34a2510f6414a27ac3179ee461c944c8acd395",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f34a2510f6414a27ac3179ee461c944c8acd395",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f34a2510f6414a27ac3179ee461c944c8acd395/comments",
    "author": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2844b9e90e588ea04bc2116188fa3eef195d3be8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2844b9e90e588ea04bc2116188fa3eef195d3be8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2844b9e90e588ea04bc2116188fa3eef195d3be8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "39813677c80884d2ae8812f6d7b8e96e01abfad3",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f34a2510f6414a27ac3179ee461c944c8acd395/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f34a2510f6414a27ac3179ee461c944c8acd395/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=5f34a2510f6414a27ac3179ee461c944c8acd395",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core integration/staging tree\n+\ufeffBitcoin Core integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n@@ -53,7 +53,7 @@ submit new unit tests for old code. Unit tests can be compiled and run (assuming\n \n There are also regression and integration tests of the RPC interface, written\n in Python, that are run automatically on the build server.\n-These tests can be run with: `qa/pull-tester/rpc-tests.sh`\n+These tests can be run with: `qa/pull-tester/rpc-tests.py`\n \n Every pull request is built for both Windows and Linux on a dedicated server,\n and unit and sanity tests are automatically run. The binaries produced may be"
      }
    ]
  },
  {
    "sha": "e10a4ab904ab078d3f34c674d19922ec16c3115a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTBhNGFiOTA0YWIwNzhkM2YzNGM2NzRkMTk5MjJlYzE2YzMxMTVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:40:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:41:04Z"
      },
      "message": "Merge pull request #6748\n\n9ee5ac8 Rewrite help texts for features enabled by default. (Pavel Jan\u00edk)",
      "tree": {
        "sha": "91ac332ced323dd952da9247d119160d45f51ad8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91ac332ced323dd952da9247d119160d45f51ad8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e10a4ab904ab078d3f34c674d19922ec16c3115a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWEmHQAAoJEHSBCwEjRsmmAc0H/ioMnaM9pi1mrwDw+5rEI9wo\n03pIoMz0Ixz0xTbRLvApjJfiMvWjClNYNl48KrGbYvHjfzvQ3//6I4eBMk43Zwi6\nG5gMoolC0T4DYiIrOfnRXZCf2potGESn/LRK7Miv3R6ujUK21qfqUaEinMbXUEst\n8XB+ELXg44lJOF7FA/ge/w2CV5U09Yg8fgjGRJP2xEduYcou1hCYBSxUQ90INQIz\n9ArPqiNzP/D92EO8jlT0ryCAwT/8d15JZ3dRy1hhcZbhN8ELOUwbBz7VAjgpSqKI\n59WKM+1InGIU71peTdTyVTjQcYN741jO9/P+cqpub44zOnizH3KX5GuP32S2j+o=\n=OSqD\n-----END PGP SIGNATURE-----",
        "payload": "tree 91ac332ced323dd952da9247d119160d45f51ad8\nparent 5f34a2510f6414a27ac3179ee461c944c8acd395\nparent 9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444045241 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444045264 +0200\n\nMerge pull request #6748\n\n9ee5ac8 Rewrite help texts for features enabled by default. (Pavel Jan\u00edk)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e10a4ab904ab078d3f34c674d19922ec16c3115a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e10a4ab904ab078d3f34c674d19922ec16c3115a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e10a4ab904ab078d3f34c674d19922ec16c3115a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f34a2510f6414a27ac3179ee461c944c8acd395",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f34a2510f6414a27ac3179ee461c944c8acd395",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f34a2510f6414a27ac3179ee461c944c8acd395"
      },
      {
        "sha": "9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ee5ac82f6a6ca0c36527dbc0ca3393af028af7f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "cbfa9cfc6d2acac99de4dcb58239ae68568325ca",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e10a4ab904ab078d3f34c674d19922ec16c3115a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e10a4ab904ab078d3f34c674d19922ec16c3115a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e10a4ab904ab078d3f34c674d19922ec16c3115a",
        "patch": "@@ -69,8 +69,8 @@ PKG_PROG_PKG_CONFIG\n \n # Enable wallet\n AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--enable-wallet],\n-  [enable wallet (default is yes)])],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n   [enable_wallet=$enableval],\n   [enable_wallet=yes])\n \n@@ -87,7 +87,7 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=no])\n \n AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n@@ -108,8 +108,8 @@ AC_ARG_WITH([qrencode],\n   [use_qr=auto])\n \n AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--enable-hardening],\n-  [attempt to harden the resulting executables (default is yes)])],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden)])],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n@@ -120,8 +120,8 @@ AC_ARG_ENABLE([reduce-exports],\n   [use_reduce_exports=no])\n \n AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--enable-ccache],\n-  [use ccache for building (default is yes if ccache is found)])],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n "
      }
    ]
  },
  {
    "sha": "a75c67364d3484147c0643baf535845ce72a50cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzVjNjczNjRkMzQ4NDE0N2MwNjQzYmFmNTM1ODQ1Y2U3MmE1MGNj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:41:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:43:16Z"
      },
      "message": "Merge pull request #6744\n\nbb24835 build: disable -Wself-assign (Wladimir J. van der Laan)",
      "tree": {
        "sha": "6753dcb104315f8170072c41ff7e3fb5bc375dff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6753dcb104315f8170072c41ff7e3fb5bc375dff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a75c67364d3484147c0643baf535845ce72a50cc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWEmJUAAoJEHSBCwEjRsmmWOIIAJT0EnNHnAFrkePesXB9CW7d\nq3Twg8c7neOX0WHceIJbFw2Nh+rS1U4taZPM0y3x9tbYSFie2FbItpoq2q3wEJ+F\nNAyQ41wiDlvTWL3BW69fPCthvzQnyydQmjavAIgwjayBGfaCQGXImHwqY3Nhv9yb\nJF/DS310SsoYksm3Ey//pdO3jLgZB0JOC4MlLisAH9hgPiS4MXeRf8phtf/pnhuv\nNUFdgBnaCCbEXJXuDPMZBXLxvyDBOYQaIraHeqp0afQVQtskUH80saCdzjuwwIre\nn8Snfkg0SZrsMJQN8seO+U6SpXGYRWozGu37/1FFOhdOruWSjuSp4fphU7z0lWA=\n=/lV5\n-----END PGP SIGNATURE-----",
        "payload": "tree 6753dcb104315f8170072c41ff7e3fb5bc375dff\nparent e10a4ab904ab078d3f34c674d19922ec16c3115a\nparent bb24835aed822ff1842bbf0920dba592eb48dfd5\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444045287 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444045396 +0200\n\nMerge pull request #6744\n\nbb24835 build: disable -Wself-assign (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a75c67364d3484147c0643baf535845ce72a50cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e10a4ab904ab078d3f34c674d19922ec16c3115a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e10a4ab904ab078d3f34c674d19922ec16c3115a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e10a4ab904ab078d3f34c674d19922ec16c3115a"
      },
      {
        "sha": "bb24835aed822ff1842bbf0920dba592eb48dfd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb24835aed822ff1842bbf0920dba592eb48dfd5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb24835aed822ff1842bbf0920dba592eb48dfd5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d8c7e8b779b569053d0123467aeaf95eefc9be4b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a75c67364d3484147c0643baf535845ce72a50cc/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a75c67364d3484147c0643baf535845ce72a50cc/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a75c67364d3484147c0643baf535845ce72a50cc",
        "patch": "@@ -167,7 +167,7 @@ fi\n ##       compatibility with the legacy buildsystem.\n ##\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n+  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\n fi\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n "
      }
    ]
  },
  {
    "sha": "efb37d4fda0fe6001f9e112e0392cfae4338022e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmIzN2Q0ZmRhMGZlNjAwMWY5ZTExMmUwMzkyY2ZhZTQzMzgwMjJl",
    "commit": {
      "author": {
        "name": "randy-waterhouse",
        "email": "kiwigb@yahoo.com",
        "date": "2015-10-05T12:25:13Z"
      },
      "committer": {
        "name": "randy-waterhouse",
        "email": "kiwigb@yahoo.com",
        "date": "2015-10-05T12:25:13Z"
      },
      "message": "Changed run-bitcoind-for-test.sh.in to non-executable mode.\nConsistency with other *.in input files.",
      "tree": {
        "sha": "dfe98b1dd7cad2d3030ef2cece44231a01402fc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfe98b1dd7cad2d3030ef2cece44231a01402fc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efb37d4fda0fe6001f9e112e0392cfae4338022e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efb37d4fda0fe6001f9e112e0392cfae4338022e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/efb37d4fda0fe6001f9e112e0392cfae4338022e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efb37d4fda0fe6001f9e112e0392cfae4338022e/comments",
    "author": {
      "login": "randy-waterhouse",
      "id": 637706,
      "node_id": "MDQ6VXNlcjYzNzcwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/637706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randy-waterhouse",
      "html_url": "https://github.com/randy-waterhouse",
      "followers_url": "https://api.github.com/users/randy-waterhouse/followers",
      "following_url": "https://api.github.com/users/randy-waterhouse/following{/other_user}",
      "gists_url": "https://api.github.com/users/randy-waterhouse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randy-waterhouse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randy-waterhouse/subscriptions",
      "organizations_url": "https://api.github.com/users/randy-waterhouse/orgs",
      "repos_url": "https://api.github.com/users/randy-waterhouse/repos",
      "events_url": "https://api.github.com/users/randy-waterhouse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randy-waterhouse/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "randy-waterhouse",
      "id": 637706,
      "node_id": "MDQ6VXNlcjYzNzcwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/637706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randy-waterhouse",
      "html_url": "https://github.com/randy-waterhouse",
      "followers_url": "https://api.github.com/users/randy-waterhouse/followers",
      "following_url": "https://api.github.com/users/randy-waterhouse/following{/other_user}",
      "gists_url": "https://api.github.com/users/randy-waterhouse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randy-waterhouse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randy-waterhouse/subscriptions",
      "organizations_url": "https://api.github.com/users/randy-waterhouse/orgs",
      "repos_url": "https://api.github.com/users/randy-waterhouse/repos",
      "events_url": "https://api.github.com/users/randy-waterhouse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randy-waterhouse/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a75c67364d3484147c0643baf535845ce72a50cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a75c67364d3484147c0643baf535845ce72a50cc"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": null,
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efb37d4fda0fe6001f9e112e0392cfae4338022e/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efb37d4fda0fe6001f9e112e0392cfae4338022e/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=efb37d4fda0fe6001f9e112e0392cfae4338022e"
      }
    ]
  },
  {
    "sha": "a19504b9ab3702998a8cb94866d494f44ca247e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTk1MDRiOWFiMzcwMjk5OGE4Y2I5NDg2NmQ0OTRmNDRjYTI0N2U3",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-05T18:15:18Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-05T18:15:18Z"
      },
      "message": "tests-config.sh is superseded by tests_config.py",
      "tree": {
        "sha": "4652573b7a57214c6dcab08d997498b9c2cf36f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4652573b7a57214c6dcab08d997498b9c2cf36f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a19504b9ab3702998a8cb94866d494f44ca247e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a19504b9ab3702998a8cb94866d494f44ca247e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a19504b9ab3702998a8cb94866d494f44ca247e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a19504b9ab3702998a8cb94866d494f44ca247e7/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a75c67364d3484147c0643baf535845ce72a50cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a75c67364d3484147c0643baf535845ce72a50cc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a8035731d172f9a441c14db71fb3649e7d556098",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a19504b9ab3702998a8cb94866d494f44ca247e7/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a19504b9ab3702998a8cb94866d494f44ca247e7/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=a19504b9ab3702998a8cb94866d494f44ca247e7",
        "patch": "@@ -104,7 +104,7 @@ linux-coverage-build\n linux-build\n win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/tests-config.sh\n+qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n "
      }
    ]
  },
  {
    "sha": "202f612a415f2b32332701bc15f28bd6fab49ebb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDJmNjEyYTQxNWYyYjMyMzMyNzAxYmMxNWYyOGJkNmZhYjQ5ZWJi",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-05T19:20:43Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-05T19:20:43Z"
      },
      "message": "The Bitcoin Core project is releasing Bitcoin Core, not Bitcoin.",
      "tree": {
        "sha": "028b25f4e55e540f91a78d373a2d29db1d7ee368",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/028b25f4e55e540f91a78d373a2d29db1d7ee368"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/202f612a415f2b32332701bc15f28bd6fab49ebb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202f612a415f2b32332701bc15f28bd6fab49ebb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/202f612a415f2b32332701bc15f28bd6fab49ebb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202f612a415f2b32332701bc15f28bd6fab49ebb/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a75c67364d3484147c0643baf535845ce72a50cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a75c67364d3484147c0643baf535845ce72a50cc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5aa8c327df5e215c1710b2b05df63dbe278c01c6",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/202f612a415f2b32332701bc15f28bd6fab49ebb/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/202f612a415f2b32332701bc15f28bd6fab49ebb/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=202f612a415f2b32332701bc15f28bd6fab49ebb",
        "patch": "@@ -1,4 +1,4 @@\n-\ufeffBitcoin Core integration/staging tree\n+Bitcoin Core integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n@@ -28,7 +28,7 @@ Development Process\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin.\n+regularly to indicate new official, stable release versions of Bitcoin Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n "
      }
    ]
  },
  {
    "sha": "92049301017387cc14cd09ee04021a9f36299a97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjA0OTMwMTAxNzM4N2NjMTRjZDA5ZWUwNDAyMWE5ZjM2Mjk5YTk3",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-03T12:57:41Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-05T22:12:57Z"
      },
      "message": "Document pull-req #6424 in release-notes\n\nMention now allowed sequence of pushdatas in OP_RETURN outputs in\nrelease notes.",
      "tree": {
        "sha": "fa432189987d667bd607c13615ec5e29a30ddb16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa432189987d667bd607c13615ec5e29a30ddb16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92049301017387cc14cd09ee04021a9f36299a97",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWEvX+XhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAxMDczNDk1M2NlNDg2YTgyMGI2Zjc5MDdlODc5YjFiNmUz\nMGZjY2Y2MDMwOThiZWYvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQwIXyHOf0udxn+ggAgXy1SBJA9mGsI8omDfZLCdJs\nNQDuVIhvkNKD/W4/im2Uw2kjLCZ+LF6zCqyr9Yhsp73fy+YPPYKQXdqlmNmFvEA2\nz086eMgGuqI0qu9DDPtgO48JEsS1EIunSsaj24qaZ72isrd2DvrfQrAYwqnxvqaj\nPyM4fzkoGIOupZ1FDIvo0QGfXwY6RT8pCIk4nAK1VUrX4VshCUHKBbNuOF73D3cD\nxjcErPikafNwPEZ2hNy393EgydkKFsg5QDr2IUFiqngkKs0dsFkUODyMGwLnbECc\n72JI2DLc2NzLRXf4KxjjXQLxFgBnWMXRFN2Fj4l1eNv4HtELmctV5DkVVeOIUg==\n=uX7C\n-----END PGP SIGNATURE-----",
        "payload": "tree fa432189987d667bd607c13615ec5e29a30ddb16\nparent 5ab5dca6f1bb1eccd47ea64834acc4fee0435b73\nauthor Peter Todd <pete@petertodd.org> 1443877061 +0200\ncommitter Peter Todd <pete@petertodd.org> 1444083177 +0200\n\nDocument pull-req #6424 in release-notes\n\nMention now allowed sequence of pushdatas in OP_RETURN outputs in\nrelease notes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92049301017387cc14cd09ee04021a9f36299a97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92049301017387cc14cd09ee04021a9f36299a97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92049301017387cc14cd09ee04021a9f36299a97/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78ab3516f6bedcc9fc715bea8fff66411993d675",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92049301017387cc14cd09ee04021a9f36299a97/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92049301017387cc14cd09ee04021a9f36299a97/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=92049301017387cc14cd09ee04021a9f36299a97",
        "patch": "@@ -105,6 +105,16 @@ In this version, it is only enforced for peers that send protocol versions\n removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n service bit for nodes that report versions newer than 70011.\n \n+Any sequence of pushdatas in OP_RETURN outputs now allowed\n+----------------------------------------------------------\n+\n+Previously OP_RETURN outputs with a payload were only relayed and mined if they\n+had a single pushdata. This restriction has been lifted to allow any\n+combination of data pushes and numeric constant opcodes (OP_1 to OP_16). The\n+limit on OP_RETURN output size is now applied to the entire serialized\n+scriptPubKey, 83 bytes by default. (the previous 80 byte default plus three\n+bytes overhead)\n+\n Merkle branches removed from wallet\n -----------------------------------\n "
      }
    ]
  },
  {
    "sha": "9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjVjNjQxYTQwMDZiZDcxYmY0YzJkNzZjNzQ0NmNiNmU2YmZjZTQ5",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-10-06T03:09:04Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-10-06T03:09:04Z"
      },
      "message": "zmq: update docs to reflect feature is compiled in automatically if possible\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "d3b338e2baeb04b54624efb5e1a5c4867ecd4f12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3b338e2baeb04b54624efb5e1a5c4867ecd4f12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
      "comment_count": 5,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ab3de8ba1a63d5ec0f97ae12e660d9730c60156"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "484b005cf471f5a53b162fc4fdef23cf39ce3655",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
        "patch": "@@ -43,14 +43,14 @@ operation.\n \n ## Enabling\n \n-By default, the ZeroMQ port functionality is enabled. Two steps are\n-required to enable--compiling in the ZeroMQ code, and configuring\n-runtime operation on the command-line or configuration file.\n+By default, the ZeroMQ feature is automatically compiled in if the\n+necessary prerequisites are found.  To disable, use --disable-zmq\n+during the *configure* step of building bitcoind:\n \n-    $ ./configure --enable-zmq (other options)\n+    $ ./configure --disable-zmq (other options)\n \n-This will produce a binary that is capable of providing the ZeroMQ\n-facility, but will not do so until also configured properly.\n+To actually enable operation, one must set the appropriate options on\n+the commandline or in the configuration file.\n \n ## Usage\n "
      }
    ]
  },
  {
    "sha": "b196b685c9089b74fd4ff3d9a28ea847ab36179b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTk2YjY4NWM5MDg5Yjc0ZmQ0ZmYzZDlhMjhlYTg0N2FiMzYxNzli",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-06T03:19:12Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-06T03:50:38Z"
      },
      "message": "Test LowS in standardness, removes nuisance malleability vector.\n\nThis adds SCRIPT_VERIFY_LOW_S to STANDARD_SCRIPT_VERIFY_FLAGS which\n will make the node require the canonical 'low-s' encoding for\n ECDSA signatures when relaying or mining.\n\nConsensus behavior is unchanged.\n\nThe rational is explained in a81cd96805ce6b65cca3a40ebbd3b2eb428abb7b:\n Absent this kind of test ECDSA is not a strong signature as given\n a valid signature {r, s} both that value and {r, -s mod n} are valid.\n These two encodings have different hashes allowing third parties a\n vector to change users txids.  These attacks are avoided by picking\n a particular form as canonical and rejecting the other form(s); in\n the of the LOW_S rule, the smaller of the two possible S values is\n used.\n\nIf widely deployed this change would eliminate the last remaining\n known vector for nuisance malleability on boring SIGHASH_ALL\n p2pkh transactions.  On the down-side it will block most\n transactions made by sufficiently out of date software.\n\nUnlike the other avenues to change txids on boring transactions this\n one was randomly violated by all deployed bitcoin software prior to\n its discovery.  So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted.  Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n\nBitcoin Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n in March 2014; Bitcoinj has done so for a similar span of time.\n Bitcoinjs and electrum have been more recently updated.\n\nThis does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n\n[1] On the Malleability of Bitcoin Transactions\nMarcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\nhttp://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf",
      "tree": {
        "sha": "77d3a90524f04674d34138a6398476f31558bc27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77d3a90524f04674d34138a6398476f31558bc27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b196b685c9089b74fd4ff3d9a28ea847ab36179b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b196b685c9089b74fd4ff3d9a28ea847ab36179b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b196b685c9089b74fd4ff3d9a28ea847ab36179b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b196b685c9089b74fd4ff3d9a28ea847ab36179b/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a75c67364d3484147c0643baf535845ce72a50cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a75c67364d3484147c0643baf535845ce72a50cc"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0ea0d435adbf55ab2ac4fafdc0504219af6c674f",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b196b685c9089b74fd4ff3d9a28ea847ab36179b/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b196b685c9089b74fd4ff3d9a28ea847ab36179b/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=b196b685c9089b74fd4ff3d9a28ea847ab36179b",
        "patch": "@@ -37,7 +37,8 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n                                                          SCRIPT_VERIFY_NULLDUMMY |\n                                                          SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS |\n                                                          SCRIPT_VERIFY_CLEANSTACK |\n-                                                         SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+                                                         SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY |\n+                                                         SCRIPT_VERIFY_LOW_S;\n \n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;"
      }
    ]
  },
  {
    "sha": "3b2d37c61963d423c9147d342a0985ced33ae4f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjJkMzdjNjE5NjNkNDIzYzkxNDdkMzQyYTA5ODVjZWQzM2FlNGYx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-05T11:43:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T07:59:19Z"
      },
      "message": "Merge pull request #6742\n\n58981d4 Changed logging to make -logtimestamps to work also for -printtoconsole (Arne Brutschy)",
      "tree": {
        "sha": "7a25583cc4b2a37868304b57681cc29f143ff9fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a25583cc4b2a37868304b57681cc29f143ff9fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b2d37c61963d423c9147d342a0985ced33ae4f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE39XAAoJEHSBCwEjRsmmC9MH/jL4oZR1+w8apzAaVBMn0XUz\n0S1etv2Tf5u6BQJi26dyZ2ATxBFEoZAd1PsxMxIZy/lbTkSENBWXOP++3fNtClhU\njDFWLex6bpK++6MiaV892mZAmXQLkurHMnoiQHeMswVtQbJ2oX+2/T3bbvUx1hPC\n15pQoHfDhjgK2HdKwlsjo0wGVuLlNJgLUUYkUOjWiEvDtkO8UopwMq8qovvEZoy6\ntmFKPzKs5/TDzWDWx3zWxwefT24seVtbnKQJ0I7Blw0/inhVowRln67EUkbhqlvL\nf/OxCacpCaZ9cH6526DzK/1IF91/W9Bg2a0PwV+mgNycvsTHNG8olQt80pEYnJc=\n=0Ki/\n-----END PGP SIGNATURE-----",
        "payload": "tree 7a25583cc4b2a37868304b57681cc29f143ff9fe\nparent a75c67364d3484147c0643baf535845ce72a50cc\nparent 58981d4f7d3cab872239f5aa3a8125e06cb93bfd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444045433 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118359 +0200\n\nMerge pull request #6742\n\n58981d4 Changed logging to make -logtimestamps to work also for -printtoconsole (Arne Brutschy)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2d37c61963d423c9147d342a0985ced33ae4f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b2d37c61963d423c9147d342a0985ced33ae4f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2d37c61963d423c9147d342a0985ced33ae4f1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a75c67364d3484147c0643baf535845ce72a50cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a75c67364d3484147c0643baf535845ce72a50cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a75c67364d3484147c0643baf535845ce72a50cc"
      },
      {
        "sha": "58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58981d4f7d3cab872239f5aa3a8125e06cb93bfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58981d4f7d3cab872239f5aa3a8125e06cb93bfd"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8192a7c71ca6fad3568f4e52dfa702b9cfdfd69f",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b2d37c61963d423c9147d342a0985ced33ae4f1/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b2d37c61963d423c9147d342a0985ced33ae4f1/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3b2d37c61963d423c9147d342a0985ced33ae4f1",
        "patch": "@@ -280,19 +280,20 @@ int LogPrintStr(const std::string &str)\n {\n     int ret = 0; // Returns total number of characters written\n     static bool fStartedNewLine = true;\n+\n+    string strTimestamped = LogTimestampStr(str, &fStartedNewLine);\n+\n     if (fPrintToConsole)\n     {\n         // print to console\n-        ret = fwrite(str.data(), 1, str.size(), stdout);\n+        ret = fwrite(strTimestamped.data(), 1, strTimestamped.size(), stdout);\n         fflush(stdout);\n     }\n     else if (fPrintToDebugLog)\n     {\n         boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n         boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n-        string strTimestamped = LogTimestampStr(str, &fStartedNewLine);\n-\n         // buffer if we haven't opened the log yet\n         if (fileout == NULL) {\n             assert(vMsgsBeforeOpenLog);"
      }
    ]
  },
  {
    "sha": "5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDk4ZTBmYTE0OTY5ZGFhYzNjMGRhMmJkZjIwN2QyMDI1YTZjOGFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:00:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:00:51Z"
      },
      "message": "Merge pull request #6768\n\n9f5c641 zmq: update docs to reflect feature is compiled in automatically if possible (Johnathan Corgan)",
      "tree": {
        "sha": "8a9eaf74b649c6a939213364e8c988ce67671547",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a9eaf74b649c6a939213364e8c988ce67671547"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE3+zAAoJEHSBCwEjRsmmaAsIAMGH90kfLcGmHn11xDELy18o\nc7dv38JsHb35vqGeshuSfYNX2evat9q4N3L6dAP+RJoicyYqS8Fbn+y9QJehSZfn\nIJilQEFVwqj3/yuQGVeIY/ogNubT4DYpVeJbSltdIG0MzocbVXJHb1iOwDjioymh\ny3I4nt5kdwKXrnzh3LKipBGe2tpt9huVwbO52Jar8pBF5H8K0rJ3SOxrxzgizTsf\ngm9oJU2HHNmlIHc3HPzsDzFi1CXgtHDtmYTwKfxKy3DPjw30fCnrXWT4nfMoGmEA\n2nR5XEWY6H8g7KfBvSNaiyqk8QHJbXPsUl97UUy/zKM+1a+H14ooTmZxiujuWfk=\n=8N8k\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a9eaf74b649c6a939213364e8c988ce67671547\nparent 3b2d37c61963d423c9147d342a0985ced33ae4f1\nparent 9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444118436 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118451 +0200\n\nMerge pull request #6768\n\n9f5c641 zmq: update docs to reflect feature is compiled in automatically if possible (Johnathan Corgan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d98e0fa14969daac3c0da2bdf207d2025a6c8af/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b2d37c61963d423c9147d342a0985ced33ae4f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2d37c61963d423c9147d342a0985ced33ae4f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b2d37c61963d423c9147d342a0985ced33ae4f1"
      },
      {
        "sha": "9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f5c641a4006bd71bf4c2d76c7446cb6e6bfce49"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "484b005cf471f5a53b162fc4fdef23cf39ce3655",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d98e0fa14969daac3c0da2bdf207d2025a6c8af/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d98e0fa14969daac3c0da2bdf207d2025a6c8af/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
        "patch": "@@ -43,14 +43,14 @@ operation.\n \n ## Enabling\n \n-By default, the ZeroMQ port functionality is enabled. Two steps are\n-required to enable--compiling in the ZeroMQ code, and configuring\n-runtime operation on the command-line or configuration file.\n+By default, the ZeroMQ feature is automatically compiled in if the\n+necessary prerequisites are found.  To disable, use --disable-zmq\n+during the *configure* step of building bitcoind:\n \n-    $ ./configure --enable-zmq (other options)\n+    $ ./configure --disable-zmq (other options)\n \n-This will produce a binary that is capable of providing the ZeroMQ\n-facility, but will not do so until also configured properly.\n+To actually enable operation, one must set the appropriate options on\n+the commandline or in the configuration file.\n \n ## Usage\n "
      }
    ]
  },
  {
    "sha": "b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmYzYTRlYjE5YWU5MzQwM2Y0MjhhY2Y3ZTRmZjkzM2MxNjE0NGNm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:01:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:01:42Z"
      },
      "message": "Merge pull request #6751\n\n9204930 Document pull-req #6424 in release-notes (Peter Todd)",
      "tree": {
        "sha": "8fc3d47bedfa735ea0c5667806655813b69fc8b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fc3d47bedfa735ea0c5667806655813b69fc8b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE3/mAAoJEHSBCwEjRsmmltgH/jUqF7YqMg5ZLCx4HODaF2tl\nCeOYMrMFfZL5dRSwgjVrWCeip27rJWRiAzz/RJW2sRhxxOHuQGNCvQssCRIX0WAY\nMK+CyODe/izz3Y9y7nO/3KD6eCOeiuujhyCu2SMsDzvpQqsuo2i2GFYDH99QNS2p\n0Dk19Gua1lcEh/nasb2779JYwd9VOxCWTqvvwDtD0pbnh1PADArCy1pB/6TnT53l\ne9YPxBahQSay1RGO6RvnVgC2Gj5IrlKvwUShMCi5lfbVnGBMvXeFUNCyVO3aTYXl\nAh1xDE6vP7MhIUnf0Pe8OXYAJJK3IRMHAw2IbBNagFWFr/TEreFh6hAXG4AHXWM=\n=XANN\n-----END PGP SIGNATURE-----",
        "payload": "tree 8fc3d47bedfa735ea0c5667806655813b69fc8b2\nparent 5d98e0fa14969daac3c0da2bdf207d2025a6c8af\nparent 92049301017387cc14cd09ee04021a9f36299a97\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444118483 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118502 +0200\n\nMerge pull request #6751\n\n9204930 Document pull-req #6424 in release-notes (Peter Todd)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6f3a4eb19ae93403f428acf7e4ff933c16144cf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d98e0fa14969daac3c0da2bdf207d2025a6c8af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d98e0fa14969daac3c0da2bdf207d2025a6c8af"
      },
      {
        "sha": "92049301017387cc14cd09ee04021a9f36299a97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92049301017387cc14cd09ee04021a9f36299a97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92049301017387cc14cd09ee04021a9f36299a97"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78ab3516f6bedcc9fc715bea8fff66411993d675",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f3a4eb19ae93403f428acf7e4ff933c16144cf/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f3a4eb19ae93403f428acf7e4ff933c16144cf/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
        "patch": "@@ -105,6 +105,16 @@ In this version, it is only enforced for peers that send protocol versions\n removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n service bit for nodes that report versions newer than 70011.\n \n+Any sequence of pushdatas in OP_RETURN outputs now allowed\n+----------------------------------------------------------\n+\n+Previously OP_RETURN outputs with a payload were only relayed and mined if they\n+had a single pushdata. This restriction has been lifted to allow any\n+combination of data pushes and numeric constant opcodes (OP_1 to OP_16). The\n+limit on OP_RETURN output size is now applied to the entire serialized\n+scriptPubKey, 83 bytes by default. (the previous 80 byte default plus three\n+bytes overhead)\n+\n Merkle branches removed from wallet\n -----------------------------------\n "
      }
    ]
  },
  {
    "sha": "79529e50dbe431934a4ea8d715ff528e55e6eb85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTUyOWU1MGRiZTQzMTkzNGE0ZWE4ZDcxNWZmNTI4ZTU1ZTZlYjg1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:02:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:02:18Z"
      },
      "message": "Merge pull request #6763\n\n202f612 The Bitcoin Core project is releasing Bitcoin Core, not Bitcoin. (Pavel Jan\u00edk)",
      "tree": {
        "sha": "4cafe5f5b704760f345e37a2621ed8bbecc83969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4cafe5f5b704760f345e37a2621ed8bbecc83969"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79529e50dbe431934a4ea8d715ff528e55e6eb85",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE4AKAAoJEHSBCwEjRsmmPqUIAJ7VyYy66EUDva4qWXoAkpnj\nj3FEty05Aviu9QQe7bOXU2SLkHuLt5KOtmnhNy97zttVxb/UWptspDpsV5jTiJaw\nEJFFHOZ1Rfo572VM33mt7va7TxY0u8KMdYQvZoehYKa3NaeYIWIn3CVpvucro9GJ\nOHLcJDKy0A/CTca/MId4WzaU41eifOAmEgWGOD5vfODSaoloiDrji48NAIZhmG5A\nd1rFqowUId035Y3xIaamlft/oGlyhtGHXI1pxwuvBSLiGdzT1DM4p9lLtudhZFFI\nRjv6b6za6uTjQUCcrF5hoMgahY+XWCcw9loRqm4vguIwJxz5vV73zhjKHT9RTl8=\n=O3lm\n-----END PGP SIGNATURE-----",
        "payload": "tree 4cafe5f5b704760f345e37a2621ed8bbecc83969\nparent b6f3a4eb19ae93403f428acf7e4ff933c16144cf\nparent 202f612a415f2b32332701bc15f28bd6fab49ebb\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444118530 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118538 +0200\n\nMerge pull request #6763\n\n202f612 The Bitcoin Core project is releasing Bitcoin Core, not Bitcoin. (Pavel Jan\u00edk)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79529e50dbe431934a4ea8d715ff528e55e6eb85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79529e50dbe431934a4ea8d715ff528e55e6eb85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79529e50dbe431934a4ea8d715ff528e55e6eb85/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6f3a4eb19ae93403f428acf7e4ff933c16144cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6f3a4eb19ae93403f428acf7e4ff933c16144cf"
      },
      {
        "sha": "202f612a415f2b32332701bc15f28bd6fab49ebb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202f612a415f2b32332701bc15f28bd6fab49ebb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/202f612a415f2b32332701bc15f28bd6fab49ebb"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5aa8c327df5e215c1710b2b05df63dbe278c01c6",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79529e50dbe431934a4ea8d715ff528e55e6eb85/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79529e50dbe431934a4ea8d715ff528e55e6eb85/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=79529e50dbe431934a4ea8d715ff528e55e6eb85",
        "patch": "@@ -1,4 +1,4 @@\n-\ufeffBitcoin Core integration/staging tree\n+Bitcoin Core integration/staging tree\n =====================================\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n@@ -28,7 +28,7 @@ Development Process\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin.\n+regularly to indicate new official, stable release versions of Bitcoin Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n "
      }
    ]
  },
  {
    "sha": "0a5385b23f33408a3356720d11f229d1d40ba8b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTUzODViMjNmMzM0MDhhMzM1NjcyMGQxMWYyMjlkMWQ0MGJhOGI1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:03:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:03:25Z"
      },
      "message": "Merge pull request #6760\n\nefb37d4 Changed run-bitcoind-for-test.sh.in to non-executable mode. Consistency with other *.in input files. (randy-waterhouse)",
      "tree": {
        "sha": "ae911c912883d0c48ddaf0e27ef8d8ccb02047c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae911c912883d0c48ddaf0e27ef8d8ccb02047c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a5385b23f33408a3356720d11f229d1d40ba8b5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE4BNAAoJEHSBCwEjRsmmg6MIAMyGIDHacuKLf3i6d3yYpLuU\ntY6CakqDWUkP4LzMSLG8kKReZcZEfLpnzvEAK9S5z9n7FBkHHDcbzx0JaThwXGld\nNxM9KT7tIYdTSelhEjs9Rj6eSZL3zRQeS0T9bsgJtZBLagFr1yMciMXzZcDgXIUv\nsEKTDrYiLMv3koTkSTWHSfCMuu7e08RTbNXE815z2EQ/r43ZCOy7Byje2VdjiFWW\nC26u/pHsMKyrZemgMLOoPODUG9kyXqjvdQve6tlzy4xV/apOjfsdOD2iG60OqEhC\noDimXMljTrtTARLZ03RZxT1Xq8nBTV21ON0isMIN3G9BpNbYOXM2KkUpB4LqXiE=\n=UPAH\n-----END PGP SIGNATURE-----",
        "payload": "tree ae911c912883d0c48ddaf0e27ef8d8ccb02047c0\nparent 79529e50dbe431934a4ea8d715ff528e55e6eb85\nparent efb37d4fda0fe6001f9e112e0392cfae4338022e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444118592 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118605 +0200\n\nMerge pull request #6760\n\nefb37d4 Changed run-bitcoind-for-test.sh.in to non-executable mode. Consistency with other *.in input files. (randy-waterhouse)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a5385b23f33408a3356720d11f229d1d40ba8b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a5385b23f33408a3356720d11f229d1d40ba8b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a5385b23f33408a3356720d11f229d1d40ba8b5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79529e50dbe431934a4ea8d715ff528e55e6eb85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79529e50dbe431934a4ea8d715ff528e55e6eb85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79529e50dbe431934a4ea8d715ff528e55e6eb85"
      },
      {
        "sha": "efb37d4fda0fe6001f9e112e0392cfae4338022e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efb37d4fda0fe6001f9e112e0392cfae4338022e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/efb37d4fda0fe6001f9e112e0392cfae4338022e"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": null,
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a5385b23f33408a3356720d11f229d1d40ba8b5/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a5385b23f33408a3356720d11f229d1d40ba8b5/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=0a5385b23f33408a3356720d11f229d1d40ba8b5"
      }
    ]
  },
  {
    "sha": "bdece5068bc741bf2bae37f7170b298e3d853715",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZGVjZTUwNjhiYzc0MWJmMmJhZTM3ZjcxNzBiMjk4ZTNkODUzNzE1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:04:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:04:55Z"
      },
      "message": "Merge pull request #6743\n\ndd28089 autotools: move checking for zmq library to common area in configure.ac (Johnathan Corgan)",
      "tree": {
        "sha": "bfbf0ad671d7b61d3cf0a00ea78efcee38ddd905",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfbf0ad671d7b61d3cf0a00ea78efcee38ddd905"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bdece5068bc741bf2bae37f7170b298e3d853715",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE4CnAAoJEHSBCwEjRsmm3qEIAIsdi0xxmWr3LLoKrpWDFRm7\nFiw0RRQ48o+trxNUv5GHX839YiSD5EzbAX9xy8P1nqqYgW21TaYBDpK1kc+GBaSA\nyPtapaTLGdlHCPxpk8FUuoPoZceryUkPs2cg14jK1MfZWFf9cT3A0k/7C+GMuxNK\nm0pdQpzKxIfu6LJwL8sWINsWT+PE/EMMiSebRwFUD/wRvQurGWDMWaHyLAqwVfQf\nVM6JBUBjV70Rdm4E4tbAB81roUmTboiW9z3kSxvL9qo2qkb23d+ZDHL4nvKYbqxQ\nszVsGGSl3rK1os/+Vav04cTm1qA0D3Kdm6tztFFLKztE6g9clnn7Lb4Cmvv7L5E=\n=zuR/\n-----END PGP SIGNATURE-----",
        "payload": "tree bfbf0ad671d7b61d3cf0a00ea78efcee38ddd905\nparent 0a5385b23f33408a3356720d11f229d1d40ba8b5\nparent dd28089fa23b1d91cc0799433904b8467fdc1880\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444118686 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118695 +0200\n\nMerge pull request #6743\n\ndd28089 autotools: move checking for zmq library to common area in configure.ac (Johnathan Corgan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bdece5068bc741bf2bae37f7170b298e3d853715",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bdece5068bc741bf2bae37f7170b298e3d853715",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bdece5068bc741bf2bae37f7170b298e3d853715/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a5385b23f33408a3356720d11f229d1d40ba8b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a5385b23f33408a3356720d11f229d1d40ba8b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a5385b23f33408a3356720d11f229d1d40ba8b5"
      },
      {
        "sha": "dd28089fa23b1d91cc0799433904b8467fdc1880",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd28089fa23b1d91cc0799433904b8467fdc1880",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd28089fa23b1d91cc0799433904b8467fdc1880"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 24,
      "deletions": 14
    },
    "files": [
      {
        "sha": "c28c4d11e3ad8b446787feb831a5ecc0beaf3758",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 24,
        "deletions": 14,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bdece5068bc741bf2bae37f7170b298e3d853715/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bdece5068bc741bf2bae37f7170b298e3d853715/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bdece5068bc741bf2bae37f7170b298e3d853715",
        "patch": "@@ -676,6 +676,16 @@ if test x$use_pkgconfig = xyes; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n         fi\n       fi\n+\n+      if test \"x$use_zmq\" = \"xyes\"; then\n+        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n+          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+           use_zmq=no])\n+      else\n+          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+      fi\n     ]\n   )\n else\n@@ -693,6 +703,20 @@ else\n     fi\n   fi\n \n+  if test \"x$use_zmq\" = \"xyes\"; then\n+     AC_CHECK_HEADER([zmq.h],\n+       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n+       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+  else\n+    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+  fi\n+\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n@@ -824,20 +848,6 @@ if test x$bitcoin_enable_qt != xno; then\n   fi\n fi\n \n-# conditional search for and use libzmq\n-AC_MSG_CHECKING([whether to build ZMQ support])\n-if test \"x$use_zmq\" = \"xyes\"; then\n-  AC_MSG_RESULT([yes])\n-  PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n-    [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-    [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-     AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-     use_zmq=no])\n-else\n-  AC_MSG_RESULT([no, --disable-zmq used])\n-  AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-fi\n-\n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n AC_MSG_CHECKING([whether to build test_bitcoin])"
      }
    ]
  },
  {
    "sha": "66a86a3edb94e4769dd318f49dbe3f306274aa2c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmE4NmEzZWRiOTRlNDc2OWRkMzE4ZjQ5ZGJlM2YzMDYyNzRhYTJj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:06:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T08:07:04Z"
      },
      "message": "Merge pull request #6762\n\na19504b tests-config.sh is superseded by tests_config.py (Pavel Jan\u00edk)",
      "tree": {
        "sha": "ac9ce3252bd8d0d5b4c9d003e9ef5b060d5eca8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac9ce3252bd8d0d5b4c9d003e9ef5b060d5eca8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66a86a3edb94e4769dd318f49dbe3f306274aa2c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEbBAABCgAGBQJWE4EoAAoJEHSBCwEjRsmmfK4H91ZdrjZbdbiekQGDOdH43gZW\n7yTesl7G2pe/dNgxB6nhgVQcISNiofb575vWx5HV3tW3nu+IfAhtYSme0NTg1DXM\n09yvdwR2OCzhBHYHWsEKzO3xt9y/8IQUW/Yx1AdNuBtSV8jJ2v0WyeZlr8olyj57\nS9Wb22ehezG9lb5r1xRWYQ3Zc2UStGdi1mqR2iY1GsiekjNVt7GkYxgPPwDcRtw6\nZLdLTWELHixGQAPxYB2m4bbjsrdMSzpardHSoIaHZjgmOM4OkjgxuX0oujAf54WZ\nBNIfqufOVZZdOmjdul/bUK+rI3z2Mbfwg8GQILMPk6juOoU/fXS9PHLg4Dv5JQ==\n=ZaUd\n-----END PGP SIGNATURE-----",
        "payload": "tree ac9ce3252bd8d0d5b4c9d003e9ef5b060d5eca8c\nparent bdece5068bc741bf2bae37f7170b298e3d853715\nparent a19504b9ab3702998a8cb94866d494f44ca247e7\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444118807 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444118824 +0200\n\nMerge pull request #6762\n\na19504b tests-config.sh is superseded by tests_config.py (Pavel Jan\u00edk)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a86a3edb94e4769dd318f49dbe3f306274aa2c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66a86a3edb94e4769dd318f49dbe3f306274aa2c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a86a3edb94e4769dd318f49dbe3f306274aa2c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bdece5068bc741bf2bae37f7170b298e3d853715",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bdece5068bc741bf2bae37f7170b298e3d853715",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bdece5068bc741bf2bae37f7170b298e3d853715"
      },
      {
        "sha": "a19504b9ab3702998a8cb94866d494f44ca247e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a19504b9ab3702998a8cb94866d494f44ca247e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a19504b9ab3702998a8cb94866d494f44ca247e7"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a8035731d172f9a441c14db71fb3649e7d556098",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66a86a3edb94e4769dd318f49dbe3f306274aa2c/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66a86a3edb94e4769dd318f49dbe3f306274aa2c/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=66a86a3edb94e4769dd318f49dbe3f306274aa2c",
        "patch": "@@ -104,7 +104,7 @@ linux-coverage-build\n linux-build\n win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/tests-config.sh\n+qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n "
      }
    ]
  },
  {
    "sha": "b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2Q3OGZkMGJkMjQ0YjMyNGRlZDQxMzFjMWRkMGVjODFhODdkMTVk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T14:22:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T14:34:23Z"
      },
      "message": "Merge pull request #6733\n\n7072c54 Support very-fast-running benchmarks (Gavin Andresen)\n535ed92 Simple benchmarking framework (Gavin Andresen)",
      "tree": {
        "sha": "4f7a368c21fe6fb44ba61aeb2837429cb39ce27b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f7a368c21fe6fb44ba61aeb2837429cb39ce27b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE9vvAAoJEHSBCwEjRsmm2jkH/jKi0UHuYW2FUujvUj8DpRnR\nQJENl1osiZGIc/qG2E1gI+oK+1eVlrCWxl8vDq13S2lefkAiLJheq1fL10Iny9Fa\n6V3/59FDHqRhBSeOxWcNEDVXLaM6f2hPpjq2yh7ioTq4IDBnW/WnCFzuAZD+Rgpm\nIqzdZe9Oe4FNDDxcDCpuQLJmGkyBJZUdexWAy29GrJ1mgMUJWanqx0DnExzGS3m/\nzPxJJebp4KME68HVsjqCQS3Dk1Unm0H4ore6tcj0ouLrTV1KCxwNjOXOgvhicTEF\nD+OzZ++4cNMjGc7kTPNYY8QSqAM5DNM/V6yBLYStxanFbFxahQhRqWAQNG/KHOA=\n=vlJx\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f7a368c21fe6fb44ba61aeb2837429cb39ce27b\nparent 66a86a3edb94e4769dd318f49dbe3f306274aa2c\nparent 7072c544b52774ac5a22835121e8e2747ad61158\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444141323 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444142063 +0200\n\nMerge pull request #6733\n\n7072c54 Support very-fast-running benchmarks (Gavin Andresen)\n535ed92 Simple benchmarking framework (Gavin Andresen)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66a86a3edb94e4769dd318f49dbe3f306274aa2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a86a3edb94e4769dd318f49dbe3f306274aa2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66a86a3edb94e4769dd318f49dbe3f306274aa2c"
      },
      {
        "sha": "7072c544b52774ac5a22835121e8e2747ad61158",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7072c544b52774ac5a22835121e8e2747ad61158",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7072c544b52774ac5a22835121e8e2747ad61158"
      }
    ],
    "stats": {
      "total": 250,
      "additions": 250,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4318aafa559785ff53d00342fc30de04baca625b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -91,6 +91,11 @@ AC_ARG_ENABLE(tests,\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--enable-bench],[compile benchmarks (default is yes)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n AC_ARG_WITH([comparison-tool],\n     AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n     [use_comparison_tool=$withval],\n@@ -876,6 +881,7 @@ AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])"
      },
      {
        "sha": "c3f19926df7c3d06e26de03a0b2e3a49ea3d1e2a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -64,6 +64,7 @@ endif\n \n bin_PROGRAMS =\n TESTS =\n+BENCHMARKS =\n \n if BUILD_BITCOIND\n   bin_PROGRAMS += bitcoind\n@@ -439,6 +440,10 @@ if ENABLE_TESTS\n include Makefile.test.include\n endif\n \n+if ENABLE_BENCH\n+include Makefile.bench.include\n+endif\n+\n if ENABLE_QT\n include Makefile.qt.include\n endif"
      },
      {
        "sha": "61fe9e287d80e7597009014d6dd7fa7e0c5eeedf",
        "filename": "src/Makefile.bench.include",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -0,0 +1,45 @@\n+bin_PROGRAMS += bench/bench_bitcoin\n+BENCH_SRCDIR = bench\n+BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+\n+\n+bench_bench_bitcoin_SOURCES = \\\n+  bench/bench_bitcoin.cpp \\\n+  bench/bench.cpp \\\n+  bench/bench.h \\\n+  bench/Examples.cpp\n+\n+bench_bench_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_LDADD = \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_UNIVALUE) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+if ENABLE_ZMQ\n+bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+endif\n+\n+if ENABLE_WALLET\n+bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+\n+CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno\n+\n+CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n+\n+bitcoin_bench: $(BENCH_BINARY)\n+\n+bench: $(BENCH_BINARY) FORCE\n+\t$(BENCH_BINARY)\n+\n+bitcoin_bench_clean : FORCE\n+\trm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)"
      },
      {
        "sha": "b6b020a97189d84e93d24a8a7d88fff17859aa43",
        "filename": "src/bench/Examples.cpp",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/Examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/Examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/Examples.cpp?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"\n+#include \"main.h\"\n+#include \"utiltime.h\"\n+\n+// Sanity test: this should loop ten times, and\n+// min/max/average should be close to 100ms.\n+static void Sleep100ms(benchmark::State& state)\n+{\n+    while (state.KeepRunning()) {\n+        MilliSleep(100);\n+    }\n+}\n+\n+BENCHMARK(Sleep100ms);\n+\n+// Extremely fast-running benchmark:\n+#include <math.h>\n+\n+volatile double sum = 0.0; // volatile, global so not optimized away\n+\n+static void Trig(benchmark::State& state)\n+{\n+    double d = 0.01;\n+    while (state.KeepRunning()) {\n+        sum += sin(d);\n+        d += 0.000001;\n+    }\n+}\n+\n+BENCHMARK(Trig);"
      },
      {
        "sha": "89c3b0cc2a1b7054d00cfb6b33c50f88ffd7c329",
        "filename": "src/bench/bench.cpp",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"bench.h\"\n+#include <iostream>\n+#include <sys/time.h>\n+\n+using namespace benchmark;\n+\n+std::map<std::string, BenchFunction> BenchRunner::benchmarks;\n+\n+static double gettimedouble(void) {\n+    struct timeval tv;\n+    gettimeofday(&tv, NULL);\n+    return tv.tv_usec * 0.000001 + tv.tv_sec;\n+}\n+\n+BenchRunner::BenchRunner(std::string name, BenchFunction func)\n+{\n+    benchmarks.insert(std::make_pair(name, func));\n+}\n+\n+void\n+BenchRunner::RunAll(double elapsedTimeForOne)\n+{\n+    std::cout << \"Benchmark\" << \",\" << \"count\" << \",\" << \"min\" << \",\" << \"max\" << \",\" << \"average\" << \"\\n\";\n+\n+    for (std::map<std::string,BenchFunction>::iterator it = benchmarks.begin();\n+         it != benchmarks.end(); ++it) {\n+\n+        State state(it->first, elapsedTimeForOne);\n+        BenchFunction& func = it->second;\n+        func(state);\n+    }\n+}\n+\n+bool State::KeepRunning()\n+{\n+    double now;\n+    if (count == 0) {\n+        beginTime = now = gettimedouble();\n+    }\n+    else {\n+        // timeCheckCount is used to avoid calling gettime most of the time,\n+        // so benchmarks that run very quickly get consistent results.\n+        if ((count+1)%timeCheckCount != 0) {\n+            ++count;\n+            return true; // keep going\n+        }\n+        now = gettimedouble();\n+        double elapsedOne = (now - lastTime)/timeCheckCount;\n+        if (elapsedOne < minTime) minTime = elapsedOne;\n+        if (elapsedOne > maxTime) maxTime = elapsedOne;\n+        if (elapsedOne*timeCheckCount < maxElapsed/16) timeCheckCount *= 2;\n+    }\n+    lastTime = now;\n+    ++count;\n+\n+    if (now - beginTime < maxElapsed) return true; // Keep going\n+\n+    --count;\n+\n+    // Output results\n+    double average = (now-beginTime)/count;\n+    std::cout << name << \",\" << count << \",\" << minTime << \",\" << maxTime << \",\" << average << \"\\n\";\n+\n+    return false;\n+}"
      },
      {
        "sha": "bf591a2be6ff59d67181abf8ddd13f45349789dd",
        "filename": "src/bench/bench.h",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -0,0 +1,71 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_BENCH_H\n+#define BITCOIN_BENCH_H\n+\n+// Simple micro-benchmarking framework; API mostly matches a subset of the Google Benchmark\n+// framework (see https://github.com/google/benchmark)\n+// Wny not use the Google Benchmark framework? Because adding Yet Another Dependency\n+// (that uses cmake as its build system and has lots of features we don't need) isn't\n+// worth it.\n+\n+/*\n+ * Usage:\n+\n+static void CODE_TO_TIME(benchmark::State& state)\n+{\n+    ... do any setup needed...\n+    while (state.KeepRunning()) {\n+       ... do stuff you want to time...\n+    }\n+    ... do any cleanup needed...\n+}\n+\n+BENCHMARK(CODE_TO_TIME);\n+\n+ */\n+\n+\n+#include <boost/function.hpp>\n+#include <boost/preprocessor/cat.hpp>\n+#include <boost/preprocessor/stringize.hpp>\n+#include <map>\n+#include <string>\n+\n+namespace benchmark {\n+\n+    class State {\n+        std::string name;\n+        double maxElapsed;\n+        double beginTime;\n+        double lastTime, minTime, maxTime;\n+        int64_t count;\n+        int64_t timeCheckCount;\n+    public:\n+        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n+            minTime = std::numeric_limits<double>::max();\n+            maxTime = std::numeric_limits<double>::min();\n+            timeCheckCount = 1;\n+        }\n+        bool KeepRunning();\n+    };\n+\n+    typedef boost::function<void(State&)> BenchFunction;\n+\n+    class BenchRunner\n+    {\n+        static std::map<std::string, BenchFunction> benchmarks;\n+\n+    public:\n+        BenchRunner(std::string name, BenchFunction func);\n+\n+        static void RunAll(double elapsedTimeForOne=1.0);\n+    };\n+}\n+\n+// BENCHMARK(foo) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", foo);\n+#define BENCHMARK(n) \\\n+    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n+\n+#endif // BITCOIN_BENCH_H"
      },
      {
        "sha": "db1402216d823a93165fe2af90520f2bf41265bf",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"\n+\n+#include \"key.h\"\n+#include \"main.h\"\n+#include \"util.h\"\n+\n+int\n+main(int argc, char** argv)\n+{\n+    ECC_Start();\n+    SetupEnvironment();\n+    fPrintToDebugLog = false; // don't want to write to debug.log file\n+\n+    benchmark::BenchRunner::RunAll();\n+\n+    ECC_Stop();\n+}"
      }
    ]
  },
  {
    "sha": "42cb388167ef78f47a3a440eb651b6938c10f508",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmNiMzg4MTY3ZWY3OGY0N2EzYTQ0MGViNjUxYjY5MzhjMTBmNTA4",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-09-07T22:22:23Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-10-06T14:46:10Z"
      },
      "message": "Add chainstate obfuscation to avoid spurious antivirus detection\n\nAdds an `obfuscate` parameter to `CLevelDBWrapper` and makes use of it\nfor all new chainstate stores built via `CCoinsViewDB`. Also adds an\n`Xor` method to `CDataStream`.\n\nThanks to @sipa @laanwj @pstratem @dexX7 @KyrosKrane @gmaxwell.",
      "tree": {
        "sha": "5030db533bf8e2c8231b9df00865528a6f6b5706",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5030db533bf8e2c8231b9df00865528a6f6b5706"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42cb388167ef78f47a3a440eb651b6938c10f508",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cb388167ef78f47a3a440eb651b6938c10f508",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42cb388167ef78f47a3a440eb651b6938c10f508",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cb388167ef78f47a3a440eb651b6938c10f508/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3932ff50c563df19c14e9987f2297d9f99a299ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3932ff50c563df19c14e9987f2297d9f99a299ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3932ff50c563df19c14e9987f2297d9f99a299ac"
      }
    ],
    "stats": {
      "total": 360,
      "additions": 338,
      "deletions": 22
    },
    "files": [
      {
        "sha": "7107235a8ae095e11b8d8ca71a3708c7bd18a6dc",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -53,6 +53,7 @@ BITCOIN_TESTS =\\\n   test/hash_tests.cpp \\\n   test/key_tests.cpp \\\n   test/limitedmap_tests.cpp \\\n+  test/leveldbwrapper_tests.cpp \\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n   test/miner_tests.cpp \\\n@@ -72,6 +73,7 @@ BITCOIN_TESTS =\\\n   test/sighash_tests.cpp \\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n+  test/streams_tests.cpp \\\n   test/test_bitcoin.cpp \\\n   test/test_bitcoin.h \\\n   test/timedata_tests.cpp \\"
      },
      {
        "sha": "ce96b5c8aa632d8300841c9967e7590bf30f7882",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 1,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -5,13 +5,15 @@\n #include \"leveldbwrapper.h\"\n \n #include \"util.h\"\n+#include \"random.h\"\n \n #include <boost/filesystem.hpp>\n \n #include <leveldb/cache.h>\n #include <leveldb/env.h>\n #include <leveldb/filter_policy.h>\n #include <memenv.h>\n+#include <stdint.h>\n \n void HandleError(const leveldb::Status& status) throw(leveldb_error)\n {\n@@ -43,7 +45,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     return options;\n }\n \n-CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe)\n+CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n@@ -67,6 +69,25 @@ CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCa\n     leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n     HandleError(status);\n     LogPrintf(\"Opened LevelDB successfully\\n\");\n+\n+    // The base-case obfuscation key, which is a noop.\n+    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+\n+    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n+\n+    if (!key_exists && obfuscate && IsEmpty()) {\n+        // Initialize non-degenerate obfuscation if it won't upset \n+        // existing, non-obfuscated data.\n+        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+\n+        // Write `new_key` so we don't obfuscate the key with itself\n+        Write(OBFUSCATE_KEY_KEY, new_key);\n+        obfuscate_key = new_key;\n+\n+        LogPrintf(\"Wrote new obfuscate key for %s: %s\\n\", path.string(), GetObfuscateKeyHex());\n+    }\n+\n+    LogPrintf(\"Using obfuscation key for %s: %s\\n\", path.string(), GetObfuscateKeyHex());\n }\n \n CLevelDBWrapper::~CLevelDBWrapper()\n@@ -87,3 +108,40 @@ bool CLevelDBWrapper::WriteBatch(CLevelDBBatch& batch, bool fSync) throw(leveldb\n     HandleError(status);\n     return true;\n }\n+\n+// Prefixed with null character to avoid collisions with other keys\n+//\n+// We must use a string constructor which specifies length so that we copy\n+// past the null-terminator.\n+const std::string CLevelDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n+\n+const unsigned int CLevelDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n+\n+/**\n+ * Returns a string (consisting of 8 random bytes) suitable for use as an \n+ * obfuscating XOR key. \n+ */\n+std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const \n+{\n+    unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n+    GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n+    return std::vector<unsigned char>(&buff[0], &buff[OBFUSCATE_KEY_NUM_BYTES]);\n+\n+}\n+\n+bool CLevelDBWrapper::IsEmpty()\n+{\n+    boost::scoped_ptr<leveldb::Iterator> it(NewIterator());\n+    it->SeekToFirst();\n+    return !(it->Valid());\n+}\n+\n+const std::vector<unsigned char>& CLevelDBWrapper::GetObfuscateKey() const \n+{ \n+    return obfuscate_key; \n+}\n+\n+std::string CLevelDBWrapper::GetObfuscateKeyHex() const\n+{ \n+    return HexStr(obfuscate_key); \n+}"
      },
      {
        "sha": "f5c463830cbddb5fb0898bfa839e81b1a5d774c2",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 49,
        "deletions": 4,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -9,6 +9,7 @@\n #include \"serialize.h\"\n #include \"streams.h\"\n #include \"util.h\"\n+#include \"utilstrencodings.h\"\n #include \"version.h\"\n \n #include <boost/filesystem/path.hpp>\n@@ -31,8 +32,14 @@ class CLevelDBBatch\n \n private:\n     leveldb::WriteBatch batch;\n+    const std::vector<unsigned char> obfuscate_key;\n \n public:\n+    /**\n+     * @param[in] obfuscate_key    If passed, XOR data with this key.\n+     */\n+    CLevelDBBatch(const std::vector<unsigned char>& obfuscate_key) : obfuscate_key(obfuscate_key) { };\n+\n     template <typename K, typename V>\n     void Write(const K& key, const V& value)\n     {\n@@ -44,6 +51,7 @@ class CLevelDBBatch\n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         ssValue.reserve(ssValue.GetSerializeSize(value));\n         ssValue << value;\n+        ssValue.Xor(obfuscate_key);\n         leveldb::Slice slValue(&ssValue[0], ssValue.size());\n \n         batch.Put(slKey, slValue);\n@@ -85,8 +93,27 @@ class CLevelDBWrapper\n     //! the database itself\n     leveldb::DB* pdb;\n \n+    //! a key used for optional XOR-obfuscation of the database\n+    std::vector<unsigned char> obfuscate_key;\n+\n+    //! the key under which the obfuscation key is stored\n+    static const std::string OBFUSCATE_KEY_KEY;\n+    \n+    //! the length of the obfuscate key in number of bytes\n+    static const unsigned int OBFUSCATE_KEY_NUM_BYTES;\n+    \n+    std::vector<unsigned char> CreateObfuscateKey() const;\n+\n public:\n-    CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n+    /**\n+     * @param[in] path        Location in the filesystem where leveldb data will be stored.\n+     * @param[in] nCacheSize  Configures various leveldb cache settings.\n+     * @param[in] fMemory     If true, use leveldb's memory environment.\n+     * @param[in] fWipe       If true, remove all existing data.\n+     * @param[in] obfuscate   If true, store data obfuscated via simple XOR. If false, XOR\n+     *                        with a zero'd byte array.\n+     */\n+    CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n     ~CLevelDBWrapper();\n \n     template <typename K, typename V>\n@@ -107,6 +134,7 @@ class CLevelDBWrapper\n         }\n         try {\n             CDataStream ssValue(strValue.data(), strValue.data() + strValue.size(), SER_DISK, CLIENT_VERSION);\n+            ssValue.Xor(obfuscate_key);\n             ssValue >> value;\n         } catch (const std::exception&) {\n             return false;\n@@ -117,7 +145,7 @@ class CLevelDBWrapper\n     template <typename K, typename V>\n     bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch;\n+        CLevelDBBatch batch(obfuscate_key);\n         batch.Write(key, value);\n         return WriteBatch(batch, fSync);\n     }\n@@ -144,7 +172,7 @@ class CLevelDBWrapper\n     template <typename K>\n     bool Erase(const K& key, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch;\n+        CLevelDBBatch batch(obfuscate_key);\n         batch.Erase(key);\n         return WriteBatch(batch, fSync);\n     }\n@@ -159,7 +187,7 @@ class CLevelDBWrapper\n \n     bool Sync() throw(leveldb_error)\n     {\n-        CLevelDBBatch batch;\n+        CLevelDBBatch batch(obfuscate_key);\n         return WriteBatch(batch, true);\n     }\n \n@@ -168,6 +196,23 @@ class CLevelDBWrapper\n     {\n         return pdb->NewIterator(iteroptions);\n     }\n+\n+    /**\n+     * Return true if the database managed by this class contains no entries.\n+     */\n+    bool IsEmpty();\n+\n+    /**\n+     * Accessor for obfuscate_key.\n+     */\n+    const std::vector<unsigned char>& GetObfuscateKey() const;\n+\n+    /**\n+     * Return the obfuscate_key as a hex-formatted string.\n+     */\n+    std::string GetObfuscateKeyHex() const;\n+\n };\n \n #endif // BITCOIN_LEVELDBWRAPPER_H\n+"
      },
      {
        "sha": "8610e4d18e612b71a7ae1501153f356275dd8864",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -296,6 +296,29 @@ class CDataStream\n         data.insert(data.end(), begin(), end());\n         clear();\n     }\n+\n+    /**\n+     * XOR the contents of this stream with a certain key.\n+     *\n+     * @param[in] key    The key used to XOR the data in this stream.\n+     */\n+    void Xor(const std::vector<unsigned char>& key)\n+    {\n+        if (key.size() == 0) {\n+            return;\n+        }\n+\n+        for (size_type i = 0, j = 0; i != size(); i++) {\n+            vch[i] ^= key[j++];\n+\n+            // This potentially acts on very many bytes of data, so it's\n+            // important that we calculate `j`, i.e. the `key` index in this\n+            // way instead of doing a %, which would effectively be a division\n+            // for each byte Xor'd -- much slower than need be.\n+            if (j == key.size())\n+                j = 0;\n+        }\n+    }\n };\n \n "
      },
      {
        "sha": "db04f3ea481216e01d9d593bfa3dcf02325973b2",
        "filename": "src/test/leveldbwrapper_tests.cpp",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/test/leveldbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/test/leveldbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/leveldbwrapper_tests.cpp?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"leveldbwrapper.h\"\n+#include \"uint256.h\"\n+#include \"random.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/assign/std/vector.hpp> // for 'operator+=()'\n+#include <boost/assert.hpp>\n+#include <boost/test/unit_test.hpp>\n+                    \n+using namespace std;\n+using namespace boost::assign; // bring 'operator+=()' into scope\n+using namespace boost::filesystem;\n+         \n+// Test if a string consists entirely of null characters\n+bool is_null_key(const vector<unsigned char>& key) {\n+    bool isnull = true;\n+\n+    for (unsigned int i = 0; i < key.size(); i++)\n+        isnull &= (key[i] == '\\x00');\n+\n+    return isnull;\n+}\n+ \n+BOOST_FIXTURE_TEST_SUITE(leveldbwrapper_tests, BasicTestingSetup)\n+                       \n+BOOST_AUTO_TEST_CASE(leveldbwrapper)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (int i = 0; i < 2; i++) {\n+        bool obfuscate = (bool)i;\n+        path ph = temp_directory_path() / unique_path();\n+        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        char key = 'k';\n+        uint256 in = GetRandHash();\n+        uint256 res;\n+\n+        // Ensure that we're doing real obfuscation when obfuscate=true\n+        BOOST_CHECK(obfuscate != is_null_key(dbw.GetObfuscateKey()));\n+\n+        BOOST_CHECK(dbw.Write(key, in));\n+        BOOST_CHECK(dbw.Read(key, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+    }\n+}\n+                       \n+// Test that we do not obfuscation if there is existing data.\n+BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n+{\n+    // We're going to share this path between two wrappers\n+    path ph = temp_directory_path() / unique_path();\n+    create_directories(ph);\n+\n+    // Set up a non-obfuscated wrapper to write some initial data.\n+    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    char key = 'k';\n+    uint256 in = GetRandHash();\n+    uint256 res;\n+\n+    BOOST_CHECK(dbw->Write(key, in));\n+    BOOST_CHECK(dbw->Read(key, res));\n+    BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+\n+    // Call the destructor to free leveldb LOCK\n+    delete dbw;\n+\n+    // Now, set up another wrapper that wants to obfuscate the same directory\n+    CLevelDBWrapper odbw(ph, (1 << 10), false, false, true);\n+\n+    // Check that the key/val we wrote with unobfuscated wrapper exists and \n+    // is readable.\n+    uint256 res2;\n+    BOOST_CHECK(odbw.Read(key, res2));\n+    BOOST_CHECK_EQUAL(res2.ToString(), in.ToString());\n+\n+    BOOST_CHECK(!odbw.IsEmpty()); // There should be existing data\n+    BOOST_CHECK(is_null_key(odbw.GetObfuscateKey())); // The key should be an empty string\n+\n+    uint256 in2 = GetRandHash();\n+    uint256 res3;\n+ \n+    // Check that we can write successfully\n+    BOOST_CHECK(odbw.Write(key, in2));\n+    BOOST_CHECK(odbw.Read(key, res3));\n+    BOOST_CHECK_EQUAL(res3.ToString(), in2.ToString());\n+}\n+                        \n+// Ensure that we start obfuscating during a reindex.\n+BOOST_AUTO_TEST_CASE(existing_data_reindex)\n+{\n+    // We're going to share this path between two wrappers\n+    path ph = temp_directory_path() / unique_path();\n+    create_directories(ph);\n+\n+    // Set up a non-obfuscated wrapper to write some initial data.\n+    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    char key = 'k';\n+    uint256 in = GetRandHash();\n+    uint256 res;\n+\n+    BOOST_CHECK(dbw->Write(key, in));\n+    BOOST_CHECK(dbw->Read(key, res));\n+    BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+\n+    // Call the destructor to free leveldb LOCK\n+    delete dbw;\n+\n+    // Simulate a -reindex by wiping the existing data store\n+    CLevelDBWrapper odbw(ph, (1 << 10), false, true, true);\n+\n+    // Check that the key/val we wrote with unobfuscated wrapper doesn't exist\n+    uint256 res2;\n+    BOOST_CHECK(!odbw.Read(key, res2));\n+    BOOST_CHECK(!is_null_key(odbw.GetObfuscateKey()));\n+\n+    uint256 in2 = GetRandHash();\n+    uint256 res3;\n+ \n+    // Check that we can write successfully\n+    BOOST_CHECK(odbw.Write(key, in2));\n+    BOOST_CHECK(odbw.Read(key, res3));\n+    BOOST_CHECK_EQUAL(res3.ToString(), in2.ToString());\n+}\n+ \n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "0ed8f363d7893d13c4e61b4df1711ab7e36addcb",
        "filename": "src/test/streams_tests.cpp",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"streams.h\"\n+#include \"support/allocators/zeroafterfree.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/assign/std/vector.hpp> // for 'operator+=()'\n+#include <boost/assert.hpp>\n+#include <boost/test/unit_test.hpp>\n+                    \n+using namespace std;\n+using namespace boost::assign; // bring 'operator+=()' into scope\n+\n+BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n+{\n+    std::vector<char> in;\n+    std::vector<char> expected_xor;\n+    std::vector<unsigned char> key;\n+    CDataStream ds(in, 0, 0);\n+\n+    // Degenerate case\n+    \n+    key += '\\x00','\\x00';\n+    ds.Xor(key);\n+    BOOST_CHECK_EQUAL(\n+            std::string(expected_xor.begin(), expected_xor.end()), \n+            std::string(ds.begin(), ds.end()));\n+\n+    in += '\\x0f','\\xf0';\n+    expected_xor += '\\xf0','\\x0f';\n+    \n+    // Single character key\n+\n+    ds.clear();\n+    ds.insert(ds.begin(), in.begin(), in.end());\n+    key.clear();\n+\n+    key += '\\xff';\n+    ds.Xor(key);\n+    BOOST_CHECK_EQUAL(\n+            std::string(expected_xor.begin(), expected_xor.end()), \n+            std::string(ds.begin(), ds.end())); \n+    \n+    // Multi character key\n+\n+    in.clear();\n+    expected_xor.clear();\n+    in += '\\xf0','\\x0f';\n+    expected_xor += '\\x0f','\\x00';\n+                        \n+    ds.clear();\n+    ds.insert(ds.begin(), in.begin(), in.end());\n+\n+    key.clear();\n+    key += '\\xff','\\x0f';\n+\n+    ds.Xor(key);\n+    BOOST_CHECK_EQUAL(\n+            std::string(expected_xor.begin(), expected_xor.end()), \n+            std::string(ds.begin(), ds.end()));  \n+}         \n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "9738dea03d79f2b4b349111c413f1b3834b64f48",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 17,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cb388167ef78f47a3a440eb651b6938c10f508/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cb388167ef78f47a3a440eb651b6938c10f508/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=42cb388167ef78f47a3a440eb651b6938c10f508",
        "patch": "@@ -29,18 +29,8 @@ static const char DB_REINDEX_FLAG = 'R';\n static const char DB_LAST_BLOCK = 'l';\n \n \n-void static BatchWriteCoins(CLevelDBBatch &batch, const uint256 &hash, const CCoins &coins) {\n-    if (coins.IsPruned())\n-        batch.Erase(make_pair(DB_COINS, hash));\n-    else\n-        batch.Write(make_pair(DB_COINS, hash), coins);\n-}\n-\n-void static BatchWriteHashBestChain(CLevelDBBatch &batch, const uint256 &hash) {\n-    batch.Write(DB_BEST_BLOCK, hash);\n-}\n-\n-CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory, bool fWipe) : db(GetDataDir() / \"chainstate\", nCacheSize, fMemory, fWipe) {\n+CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory, bool fWipe) : db(GetDataDir() / \"chainstate\", nCacheSize, fMemory, fWipe, true) \n+{\n }\n \n bool CCoinsViewDB::GetCoins(const uint256 &txid, CCoins &coins) const {\n@@ -59,20 +49,23 @@ uint256 CCoinsViewDB::GetBestBlock() const {\n }\n \n bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n-    CLevelDBBatch batch;\n+    CLevelDBBatch batch(db.GetObfuscateKey());\n     size_t count = 0;\n     size_t changed = 0;\n     for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n         if (it->second.flags & CCoinsCacheEntry::DIRTY) {\n-            BatchWriteCoins(batch, it->first, it->second.coins);\n+            if (it->second.coins.IsPruned())\n+                batch.Erase(make_pair(DB_COINS, it->first));\n+            else\n+                batch.Write(make_pair(DB_COINS, it->first), it->second.coins);\n             changed++;\n         }\n         count++;\n         CCoinsMap::iterator itOld = it++;\n         mapCoins.erase(itOld);\n     }\n     if (!hashBlock.IsNull())\n-        BatchWriteHashBestChain(batch, hashBlock);\n+        batch.Write(DB_BEST_BLOCK, hashBlock);\n \n     LogPrint(\"coindb\", \"Committing %u changed transactions (out of %u) to coin database...\\n\", (unsigned int)changed, (unsigned int)count);\n     return db.WriteBatch(batch);\n@@ -158,7 +151,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n }\n \n bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n-    CLevelDBBatch batch;\n+    CLevelDBBatch batch(GetObfuscateKey());\n     for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n         batch.Write(make_pair(DB_BLOCK_FILES, it->first), *it->second);\n     }\n@@ -174,7 +167,7 @@ bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n }\n \n bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> >&vect) {\n-    CLevelDBBatch batch;\n+    CLevelDBBatch batch(GetObfuscateKey());\n     for (std::vector<std::pair<uint256,CDiskTxPos> >::const_iterator it=vect.begin(); it!=vect.end(); it++)\n         batch.Write(make_pair(DB_TXINDEX, it->first), it->second);\n     return WriteBatch(batch);"
      }
    ]
  },
  {
    "sha": "b2af29b806080d95e1e8d70f2929138a4d5db8e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmFmMjliODA2MDgwZDk1ZTFlOGQ3MGYyOTI5MTM4YTRkNWRiOGUx",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-06T15:46:12Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-10-06T15:46:12Z"
      },
      "message": "Ignore bench_bitcoin binary.",
      "tree": {
        "sha": "b36be23fc82cc75abca5e9de2a1d99a8f0a3c957",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b36be23fc82cc75abca5e9de2a1d99a8f0a3c957"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2af29b806080d95e1e8d70f2929138a4d5db8e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2af29b806080d95e1e8d70f2929138a4d5db8e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2af29b806080d95e1e8d70f2929138a4d5db8e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2af29b806080d95e1e8d70f2929138a4d5db8e1/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e231fe4cab5cb0fb49418ce68b145c0e2c541c16",
        "filename": "src/bench/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2af29b806080d95e1e8d70f2929138a4d5db8e1/src/bench/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2af29b806080d95e1e8d70f2929138a4d5db8e1/src/bench/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/.gitignore?ref=b2af29b806080d95e1e8d70f2929138a4d5db8e1",
        "patch": "@@ -0,0 +1 @@\n+bench_bitcoin"
      }
    ]
  },
  {
    "sha": "4fac576c619f450da8ca09ac8790063b3dea4364",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmFjNTc2YzYxOWY0NTBkYThjYTA5YWM4NzkwMDYzYjNkZWE0MzY0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T15:32:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-06T15:50:46Z"
      },
      "message": "Merge pull request #6650\n\n42cb388 Add chainstate obfuscation to avoid spurious antivirus detection (James O'Beirne)",
      "tree": {
        "sha": "36184ec8419bc1ae12a0285c58406a745e7a6d71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36184ec8419bc1ae12a0285c58406a745e7a6d71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fac576c619f450da8ca09ac8790063b3dea4364",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWE+3WAAoJEHSBCwEjRsmmvHsIAJEm9i9wQ6YXosuYmDEiGwbL\n9gxZSLLbWl24x0D72s8tIrYnGSWUK+YBxwPLuw8VQe02qYaUFUu66lV7OCEGWbN9\n6GaOf1QSmU4EsGx7Kg/dZejtLY7CilM5Q562GG3qvZ/NhZtGYLeV/+Yl/ONXxn7l\nXJ3cBXJTixk8CX3QFmIy3aEf8cz0WNtYOaAATwBwq3CIJwoq3gRneYMq7bNuTDth\nOxVV1Gfra2T22UlI/6rGDt8ne5Gz4ps2I2cwdUr+wZlkb5HmVHN5OfE8wSY7xfef\nbJf50a6Z9MzBljhPsVczHKxHll2vHdDdVciD1Gh3YJeWXRcP65dPaXw9S8oAomY=\n=yPI7\n-----END PGP SIGNATURE-----",
        "payload": "tree 36184ec8419bc1ae12a0285c58406a745e7a6d71\nparent b7d78fd0bd244b324ded4131c1dd0ec81a87d15d\nparent 42cb388167ef78f47a3a440eb651b6938c10f508\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444145538 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444146646 +0200\n\nMerge pull request #6650\n\n42cb388 Add chainstate obfuscation to avoid spurious antivirus detection (James O'Beirne)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fac576c619f450da8ca09ac8790063b3dea4364",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fac576c619f450da8ca09ac8790063b3dea4364",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fac576c619f450da8ca09ac8790063b3dea4364/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7d78fd0bd244b324ded4131c1dd0ec81a87d15d"
      },
      {
        "sha": "42cb388167ef78f47a3a440eb651b6938c10f508",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cb388167ef78f47a3a440eb651b6938c10f508",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42cb388167ef78f47a3a440eb651b6938c10f508"
      }
    ],
    "stats": {
      "total": 360,
      "additions": 338,
      "deletions": 22
    },
    "files": [
      {
        "sha": "a3b6c4d9b1516f6c0428d54b6c940d39134d4f9c",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -53,6 +53,7 @@ BITCOIN_TESTS =\\\n   test/hash_tests.cpp \\\n   test/key_tests.cpp \\\n   test/limitedmap_tests.cpp \\\n+  test/leveldbwrapper_tests.cpp \\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n   test/miner_tests.cpp \\\n@@ -73,6 +74,7 @@ BITCOIN_TESTS =\\\n   test/sighash_tests.cpp \\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n+  test/streams_tests.cpp \\\n   test/test_bitcoin.cpp \\\n   test/test_bitcoin.h \\\n   test/timedata_tests.cpp \\"
      },
      {
        "sha": "ce96b5c8aa632d8300841c9967e7590bf30f7882",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 1,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -5,13 +5,15 @@\n #include \"leveldbwrapper.h\"\n \n #include \"util.h\"\n+#include \"random.h\"\n \n #include <boost/filesystem.hpp>\n \n #include <leveldb/cache.h>\n #include <leveldb/env.h>\n #include <leveldb/filter_policy.h>\n #include <memenv.h>\n+#include <stdint.h>\n \n void HandleError(const leveldb::Status& status) throw(leveldb_error)\n {\n@@ -43,7 +45,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     return options;\n }\n \n-CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe)\n+CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n@@ -67,6 +69,25 @@ CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCa\n     leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n     HandleError(status);\n     LogPrintf(\"Opened LevelDB successfully\\n\");\n+\n+    // The base-case obfuscation key, which is a noop.\n+    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+\n+    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n+\n+    if (!key_exists && obfuscate && IsEmpty()) {\n+        // Initialize non-degenerate obfuscation if it won't upset \n+        // existing, non-obfuscated data.\n+        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+\n+        // Write `new_key` so we don't obfuscate the key with itself\n+        Write(OBFUSCATE_KEY_KEY, new_key);\n+        obfuscate_key = new_key;\n+\n+        LogPrintf(\"Wrote new obfuscate key for %s: %s\\n\", path.string(), GetObfuscateKeyHex());\n+    }\n+\n+    LogPrintf(\"Using obfuscation key for %s: %s\\n\", path.string(), GetObfuscateKeyHex());\n }\n \n CLevelDBWrapper::~CLevelDBWrapper()\n@@ -87,3 +108,40 @@ bool CLevelDBWrapper::WriteBatch(CLevelDBBatch& batch, bool fSync) throw(leveldb\n     HandleError(status);\n     return true;\n }\n+\n+// Prefixed with null character to avoid collisions with other keys\n+//\n+// We must use a string constructor which specifies length so that we copy\n+// past the null-terminator.\n+const std::string CLevelDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n+\n+const unsigned int CLevelDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n+\n+/**\n+ * Returns a string (consisting of 8 random bytes) suitable for use as an \n+ * obfuscating XOR key. \n+ */\n+std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const \n+{\n+    unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n+    GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n+    return std::vector<unsigned char>(&buff[0], &buff[OBFUSCATE_KEY_NUM_BYTES]);\n+\n+}\n+\n+bool CLevelDBWrapper::IsEmpty()\n+{\n+    boost::scoped_ptr<leveldb::Iterator> it(NewIterator());\n+    it->SeekToFirst();\n+    return !(it->Valid());\n+}\n+\n+const std::vector<unsigned char>& CLevelDBWrapper::GetObfuscateKey() const \n+{ \n+    return obfuscate_key; \n+}\n+\n+std::string CLevelDBWrapper::GetObfuscateKeyHex() const\n+{ \n+    return HexStr(obfuscate_key); \n+}"
      },
      {
        "sha": "f5c463830cbddb5fb0898bfa839e81b1a5d774c2",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 49,
        "deletions": 4,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -9,6 +9,7 @@\n #include \"serialize.h\"\n #include \"streams.h\"\n #include \"util.h\"\n+#include \"utilstrencodings.h\"\n #include \"version.h\"\n \n #include <boost/filesystem/path.hpp>\n@@ -31,8 +32,14 @@ class CLevelDBBatch\n \n private:\n     leveldb::WriteBatch batch;\n+    const std::vector<unsigned char> obfuscate_key;\n \n public:\n+    /**\n+     * @param[in] obfuscate_key    If passed, XOR data with this key.\n+     */\n+    CLevelDBBatch(const std::vector<unsigned char>& obfuscate_key) : obfuscate_key(obfuscate_key) { };\n+\n     template <typename K, typename V>\n     void Write(const K& key, const V& value)\n     {\n@@ -44,6 +51,7 @@ class CLevelDBBatch\n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         ssValue.reserve(ssValue.GetSerializeSize(value));\n         ssValue << value;\n+        ssValue.Xor(obfuscate_key);\n         leveldb::Slice slValue(&ssValue[0], ssValue.size());\n \n         batch.Put(slKey, slValue);\n@@ -85,8 +93,27 @@ class CLevelDBWrapper\n     //! the database itself\n     leveldb::DB* pdb;\n \n+    //! a key used for optional XOR-obfuscation of the database\n+    std::vector<unsigned char> obfuscate_key;\n+\n+    //! the key under which the obfuscation key is stored\n+    static const std::string OBFUSCATE_KEY_KEY;\n+    \n+    //! the length of the obfuscate key in number of bytes\n+    static const unsigned int OBFUSCATE_KEY_NUM_BYTES;\n+    \n+    std::vector<unsigned char> CreateObfuscateKey() const;\n+\n public:\n-    CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n+    /**\n+     * @param[in] path        Location in the filesystem where leveldb data will be stored.\n+     * @param[in] nCacheSize  Configures various leveldb cache settings.\n+     * @param[in] fMemory     If true, use leveldb's memory environment.\n+     * @param[in] fWipe       If true, remove all existing data.\n+     * @param[in] obfuscate   If true, store data obfuscated via simple XOR. If false, XOR\n+     *                        with a zero'd byte array.\n+     */\n+    CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n     ~CLevelDBWrapper();\n \n     template <typename K, typename V>\n@@ -107,6 +134,7 @@ class CLevelDBWrapper\n         }\n         try {\n             CDataStream ssValue(strValue.data(), strValue.data() + strValue.size(), SER_DISK, CLIENT_VERSION);\n+            ssValue.Xor(obfuscate_key);\n             ssValue >> value;\n         } catch (const std::exception&) {\n             return false;\n@@ -117,7 +145,7 @@ class CLevelDBWrapper\n     template <typename K, typename V>\n     bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch;\n+        CLevelDBBatch batch(obfuscate_key);\n         batch.Write(key, value);\n         return WriteBatch(batch, fSync);\n     }\n@@ -144,7 +172,7 @@ class CLevelDBWrapper\n     template <typename K>\n     bool Erase(const K& key, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch;\n+        CLevelDBBatch batch(obfuscate_key);\n         batch.Erase(key);\n         return WriteBatch(batch, fSync);\n     }\n@@ -159,7 +187,7 @@ class CLevelDBWrapper\n \n     bool Sync() throw(leveldb_error)\n     {\n-        CLevelDBBatch batch;\n+        CLevelDBBatch batch(obfuscate_key);\n         return WriteBatch(batch, true);\n     }\n \n@@ -168,6 +196,23 @@ class CLevelDBWrapper\n     {\n         return pdb->NewIterator(iteroptions);\n     }\n+\n+    /**\n+     * Return true if the database managed by this class contains no entries.\n+     */\n+    bool IsEmpty();\n+\n+    /**\n+     * Accessor for obfuscate_key.\n+     */\n+    const std::vector<unsigned char>& GetObfuscateKey() const;\n+\n+    /**\n+     * Return the obfuscate_key as a hex-formatted string.\n+     */\n+    std::string GetObfuscateKeyHex() const;\n+\n };\n \n #endif // BITCOIN_LEVELDBWRAPPER_H\n+"
      },
      {
        "sha": "8610e4d18e612b71a7ae1501153f356275dd8864",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -296,6 +296,29 @@ class CDataStream\n         data.insert(data.end(), begin(), end());\n         clear();\n     }\n+\n+    /**\n+     * XOR the contents of this stream with a certain key.\n+     *\n+     * @param[in] key    The key used to XOR the data in this stream.\n+     */\n+    void Xor(const std::vector<unsigned char>& key)\n+    {\n+        if (key.size() == 0) {\n+            return;\n+        }\n+\n+        for (size_type i = 0, j = 0; i != size(); i++) {\n+            vch[i] ^= key[j++];\n+\n+            // This potentially acts on very many bytes of data, so it's\n+            // important that we calculate `j`, i.e. the `key` index in this\n+            // way instead of doing a %, which would effectively be a division\n+            // for each byte Xor'd -- much slower than need be.\n+            if (j == key.size())\n+                j = 0;\n+        }\n+    }\n };\n \n "
      },
      {
        "sha": "db04f3ea481216e01d9d593bfa3dcf02325973b2",
        "filename": "src/test/leveldbwrapper_tests.cpp",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/test/leveldbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/test/leveldbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/leveldbwrapper_tests.cpp?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -0,0 +1,128 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"leveldbwrapper.h\"\n+#include \"uint256.h\"\n+#include \"random.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/assign/std/vector.hpp> // for 'operator+=()'\n+#include <boost/assert.hpp>\n+#include <boost/test/unit_test.hpp>\n+                    \n+using namespace std;\n+using namespace boost::assign; // bring 'operator+=()' into scope\n+using namespace boost::filesystem;\n+         \n+// Test if a string consists entirely of null characters\n+bool is_null_key(const vector<unsigned char>& key) {\n+    bool isnull = true;\n+\n+    for (unsigned int i = 0; i < key.size(); i++)\n+        isnull &= (key[i] == '\\x00');\n+\n+    return isnull;\n+}\n+ \n+BOOST_FIXTURE_TEST_SUITE(leveldbwrapper_tests, BasicTestingSetup)\n+                       \n+BOOST_AUTO_TEST_CASE(leveldbwrapper)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (int i = 0; i < 2; i++) {\n+        bool obfuscate = (bool)i;\n+        path ph = temp_directory_path() / unique_path();\n+        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        char key = 'k';\n+        uint256 in = GetRandHash();\n+        uint256 res;\n+\n+        // Ensure that we're doing real obfuscation when obfuscate=true\n+        BOOST_CHECK(obfuscate != is_null_key(dbw.GetObfuscateKey()));\n+\n+        BOOST_CHECK(dbw.Write(key, in));\n+        BOOST_CHECK(dbw.Read(key, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+    }\n+}\n+                       \n+// Test that we do not obfuscation if there is existing data.\n+BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n+{\n+    // We're going to share this path between two wrappers\n+    path ph = temp_directory_path() / unique_path();\n+    create_directories(ph);\n+\n+    // Set up a non-obfuscated wrapper to write some initial data.\n+    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    char key = 'k';\n+    uint256 in = GetRandHash();\n+    uint256 res;\n+\n+    BOOST_CHECK(dbw->Write(key, in));\n+    BOOST_CHECK(dbw->Read(key, res));\n+    BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+\n+    // Call the destructor to free leveldb LOCK\n+    delete dbw;\n+\n+    // Now, set up another wrapper that wants to obfuscate the same directory\n+    CLevelDBWrapper odbw(ph, (1 << 10), false, false, true);\n+\n+    // Check that the key/val we wrote with unobfuscated wrapper exists and \n+    // is readable.\n+    uint256 res2;\n+    BOOST_CHECK(odbw.Read(key, res2));\n+    BOOST_CHECK_EQUAL(res2.ToString(), in.ToString());\n+\n+    BOOST_CHECK(!odbw.IsEmpty()); // There should be existing data\n+    BOOST_CHECK(is_null_key(odbw.GetObfuscateKey())); // The key should be an empty string\n+\n+    uint256 in2 = GetRandHash();\n+    uint256 res3;\n+ \n+    // Check that we can write successfully\n+    BOOST_CHECK(odbw.Write(key, in2));\n+    BOOST_CHECK(odbw.Read(key, res3));\n+    BOOST_CHECK_EQUAL(res3.ToString(), in2.ToString());\n+}\n+                        \n+// Ensure that we start obfuscating during a reindex.\n+BOOST_AUTO_TEST_CASE(existing_data_reindex)\n+{\n+    // We're going to share this path between two wrappers\n+    path ph = temp_directory_path() / unique_path();\n+    create_directories(ph);\n+\n+    // Set up a non-obfuscated wrapper to write some initial data.\n+    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    char key = 'k';\n+    uint256 in = GetRandHash();\n+    uint256 res;\n+\n+    BOOST_CHECK(dbw->Write(key, in));\n+    BOOST_CHECK(dbw->Read(key, res));\n+    BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+\n+    // Call the destructor to free leveldb LOCK\n+    delete dbw;\n+\n+    // Simulate a -reindex by wiping the existing data store\n+    CLevelDBWrapper odbw(ph, (1 << 10), false, true, true);\n+\n+    // Check that the key/val we wrote with unobfuscated wrapper doesn't exist\n+    uint256 res2;\n+    BOOST_CHECK(!odbw.Read(key, res2));\n+    BOOST_CHECK(!is_null_key(odbw.GetObfuscateKey()));\n+\n+    uint256 in2 = GetRandHash();\n+    uint256 res3;\n+ \n+    // Check that we can write successfully\n+    BOOST_CHECK(odbw.Write(key, in2));\n+    BOOST_CHECK(odbw.Read(key, res3));\n+    BOOST_CHECK_EQUAL(res3.ToString(), in2.ToString());\n+}\n+ \n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "0ed8f363d7893d13c4e61b4df1711ab7e36addcb",
        "filename": "src/test/streams_tests.cpp",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"streams.h\"\n+#include \"support/allocators/zeroafterfree.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/assign/std/vector.hpp> // for 'operator+=()'\n+#include <boost/assert.hpp>\n+#include <boost/test/unit_test.hpp>\n+                    \n+using namespace std;\n+using namespace boost::assign; // bring 'operator+=()' into scope\n+\n+BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n+{\n+    std::vector<char> in;\n+    std::vector<char> expected_xor;\n+    std::vector<unsigned char> key;\n+    CDataStream ds(in, 0, 0);\n+\n+    // Degenerate case\n+    \n+    key += '\\x00','\\x00';\n+    ds.Xor(key);\n+    BOOST_CHECK_EQUAL(\n+            std::string(expected_xor.begin(), expected_xor.end()), \n+            std::string(ds.begin(), ds.end()));\n+\n+    in += '\\x0f','\\xf0';\n+    expected_xor += '\\xf0','\\x0f';\n+    \n+    // Single character key\n+\n+    ds.clear();\n+    ds.insert(ds.begin(), in.begin(), in.end());\n+    key.clear();\n+\n+    key += '\\xff';\n+    ds.Xor(key);\n+    BOOST_CHECK_EQUAL(\n+            std::string(expected_xor.begin(), expected_xor.end()), \n+            std::string(ds.begin(), ds.end())); \n+    \n+    // Multi character key\n+\n+    in.clear();\n+    expected_xor.clear();\n+    in += '\\xf0','\\x0f';\n+    expected_xor += '\\x0f','\\x00';\n+                        \n+    ds.clear();\n+    ds.insert(ds.begin(), in.begin(), in.end());\n+\n+    key.clear();\n+    key += '\\xff','\\x0f';\n+\n+    ds.Xor(key);\n+    BOOST_CHECK_EQUAL(\n+            std::string(expected_xor.begin(), expected_xor.end()), \n+            std::string(ds.begin(), ds.end()));  \n+}         \n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "9738dea03d79f2b4b349111c413f1b3834b64f48",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 17,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fac576c619f450da8ca09ac8790063b3dea4364/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fac576c619f450da8ca09ac8790063b3dea4364/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=4fac576c619f450da8ca09ac8790063b3dea4364",
        "patch": "@@ -29,18 +29,8 @@ static const char DB_REINDEX_FLAG = 'R';\n static const char DB_LAST_BLOCK = 'l';\n \n \n-void static BatchWriteCoins(CLevelDBBatch &batch, const uint256 &hash, const CCoins &coins) {\n-    if (coins.IsPruned())\n-        batch.Erase(make_pair(DB_COINS, hash));\n-    else\n-        batch.Write(make_pair(DB_COINS, hash), coins);\n-}\n-\n-void static BatchWriteHashBestChain(CLevelDBBatch &batch, const uint256 &hash) {\n-    batch.Write(DB_BEST_BLOCK, hash);\n-}\n-\n-CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory, bool fWipe) : db(GetDataDir() / \"chainstate\", nCacheSize, fMemory, fWipe) {\n+CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory, bool fWipe) : db(GetDataDir() / \"chainstate\", nCacheSize, fMemory, fWipe, true) \n+{\n }\n \n bool CCoinsViewDB::GetCoins(const uint256 &txid, CCoins &coins) const {\n@@ -59,20 +49,23 @@ uint256 CCoinsViewDB::GetBestBlock() const {\n }\n \n bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n-    CLevelDBBatch batch;\n+    CLevelDBBatch batch(db.GetObfuscateKey());\n     size_t count = 0;\n     size_t changed = 0;\n     for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n         if (it->second.flags & CCoinsCacheEntry::DIRTY) {\n-            BatchWriteCoins(batch, it->first, it->second.coins);\n+            if (it->second.coins.IsPruned())\n+                batch.Erase(make_pair(DB_COINS, it->first));\n+            else\n+                batch.Write(make_pair(DB_COINS, it->first), it->second.coins);\n             changed++;\n         }\n         count++;\n         CCoinsMap::iterator itOld = it++;\n         mapCoins.erase(itOld);\n     }\n     if (!hashBlock.IsNull())\n-        BatchWriteHashBestChain(batch, hashBlock);\n+        batch.Write(DB_BEST_BLOCK, hashBlock);\n \n     LogPrint(\"coindb\", \"Committing %u changed transactions (out of %u) to coin database...\\n\", (unsigned int)changed, (unsigned int)count);\n     return db.WriteBatch(batch);\n@@ -158,7 +151,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n }\n \n bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n-    CLevelDBBatch batch;\n+    CLevelDBBatch batch(GetObfuscateKey());\n     for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n         batch.Write(make_pair(DB_BLOCK_FILES, it->first), *it->second);\n     }\n@@ -174,7 +167,7 @@ bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n }\n \n bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> >&vect) {\n-    CLevelDBBatch batch;\n+    CLevelDBBatch batch(GetObfuscateKey());\n     for (std::vector<std::pair<uint256,CDiskTxPos> >::const_iterator it=vect.begin(); it!=vect.end(); it++)\n         batch.Write(make_pair(DB_TXINDEX, it->first), it->second);\n     return WriteBatch(batch);"
      }
    ]
  },
  {
    "sha": "49dd5c629df0a08cf3b1ea8085c03312d1a81696",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWRkNWM2MjlkZjBhMDhjZjNiMWVhODA4NWMwMzMxMmQxYTgxNjk2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-07T08:57:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-07T08:58:37Z"
      },
      "message": "Merge pull request #6769\n\nb196b68 Test LowS in standardness, removes nuisance malleability vector. (Gregory Maxwell)",
      "tree": {
        "sha": "26be3c0801fcb4a9391cc21e1ba491fb44d75554",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26be3c0801fcb4a9391cc21e1ba491fb44d75554"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49dd5c629df0a08cf3b1ea8085c03312d1a81696",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWFN69AAoJEHSBCwEjRsmm0akIAMlUqOBnLeLEfRJg2hLxLJtV\nJOpNztwWKzghh+SkW+Hf8qdTnvZmpnzaVUF3g4JpDNeJmgCaFKBn1WMX7usZP9d9\nr0GGIeNv0mq0r5Ql4z+PXOTkGNJTKnC1og8zn26Hra6eez2Vh0EVWasNsDEnasfm\n81E/Y1zZXpJ15M2Lis3t6Oan3hVD4L30K/kbBCy+TDSl2614XZ/lJdCbKuxcBkOp\ntxjPJBSKvzrBOir0Obk8qFxZoV6Ajwq5tidh87YR//6TO9sRVNNIsa1dgfXB0Spl\n2xSUtHgzGmOs7QEu48tuRkVbL2QqMWn0zLTyJWICSPIdhWxRiO8rPN6YYgNOb4M=\n=AULB\n-----END PGP SIGNATURE-----",
        "payload": "tree 26be3c0801fcb4a9391cc21e1ba491fb44d75554\nparent 4fac576c619f450da8ca09ac8790063b3dea4364\nparent b196b685c9089b74fd4ff3d9a28ea847ab36179b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444208270 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444208317 +0200\n\nMerge pull request #6769\n\nb196b68 Test LowS in standardness, removes nuisance malleability vector. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49dd5c629df0a08cf3b1ea8085c03312d1a81696",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49dd5c629df0a08cf3b1ea8085c03312d1a81696",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49dd5c629df0a08cf3b1ea8085c03312d1a81696/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fac576c619f450da8ca09ac8790063b3dea4364",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fac576c619f450da8ca09ac8790063b3dea4364",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fac576c619f450da8ca09ac8790063b3dea4364"
      },
      {
        "sha": "b196b685c9089b74fd4ff3d9a28ea847ab36179b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b196b685c9089b74fd4ff3d9a28ea847ab36179b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b196b685c9089b74fd4ff3d9a28ea847ab36179b"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0ea0d435adbf55ab2ac4fafdc0504219af6c674f",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49dd5c629df0a08cf3b1ea8085c03312d1a81696/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49dd5c629df0a08cf3b1ea8085c03312d1a81696/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=49dd5c629df0a08cf3b1ea8085c03312d1a81696",
        "patch": "@@ -37,7 +37,8 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n                                                          SCRIPT_VERIFY_NULLDUMMY |\n                                                          SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS |\n                                                          SCRIPT_VERIFY_CLEANSTACK |\n-                                                         SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+                                                         SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY |\n+                                                         SCRIPT_VERIFY_LOW_S;\n \n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;"
      }
    ]
  },
  {
    "sha": "d479311dba25d6a697a0c5bebbb1e913a0121b9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDc5MzExZGJhMjVkNmE2OTdhMGM1YmViYmIxZTkxM2EwMTIxYjlm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-07T12:43:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-07T12:59:58Z"
      },
      "message": "Merge pull request #6720\n\n1534d9a Creates unittests for addrman, makes addrman testable. Adds several unittests for addrman to verify it works as expected. Makes small modifications to addrman to allow deterministic and targeted tests. (EthanHeilman)",
      "tree": {
        "sha": "0b68ebc3223acb130a375d200ccdac7b6205ecf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b68ebc3223acb130a375d200ccdac7b6205ecf0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d479311dba25d6a697a0c5bebbb1e913a0121b9f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWFRdOAAoJEHSBCwEjRsmm+/8H/0QYq/ed+42lcDZNJULOeRZi\nGWRhFSJpG3bAmnfnrUTCRM+1ikTS+p/nQ8mpzjM2ay79SwnlwHEhKCDnQyCXIJil\n+WgtzpqmJJLQyio4YzsZHhsxrdwAdf36HvVbEBhtLIdkw0wm+8vd7W0DD+0usCU0\nLReaIFVAKol2fnr74t0iZSjA/wB4DdzBwCmYU8k0X30QpuUiDc3kWSMYl7/8fMMb\nb/79nftubgL6SNoAgjuucE6klQe0SGBtGK8dLKsHsHd7X9aBxx8voukkoaP3uHpp\nYexK3wNv1ljjcZwbUT1ZD6dzBiG3qYuY61gpDc+Z3os02hEq5u9FhN5+vhLGvZI=\n=EAVz\n-----END PGP SIGNATURE-----",
        "payload": "tree 0b68ebc3223acb130a375d200ccdac7b6205ecf0\nparent 49dd5c629df0a08cf3b1ea8085c03312d1a81696\nparent 1534d9a83c3648709690f8ad6af752b782a35be7\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444221818 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444222798 +0200\n\nMerge pull request #6720\n\n1534d9a Creates unittests for addrman, makes addrman testable. Adds several unittests for addrman to verify it works as expected. Makes small modifications to addrman to allow deterministic and targeted tests. (EthanHeilman)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d479311dba25d6a697a0c5bebbb1e913a0121b9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d479311dba25d6a697a0c5bebbb1e913a0121b9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d479311dba25d6a697a0c5bebbb1e913a0121b9f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49dd5c629df0a08cf3b1ea8085c03312d1a81696",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49dd5c629df0a08cf3b1ea8085c03312d1a81696",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49dd5c629df0a08cf3b1ea8085c03312d1a81696"
      },
      {
        "sha": "1534d9a83c3648709690f8ad6af752b782a35be7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1534d9a83c3648709690f8ad6af752b782a35be7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1534d9a83c3648709690f8ad6af752b782a35be7"
      }
    ],
    "stats": {
      "total": 205,
      "additions": 199,
      "deletions": 6
    },
    "files": [
      {
        "sha": "0fe8ea42ff513fa617e116063dcd1b9d0c6735ad",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "patch": "@@ -36,6 +36,7 @@ GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.r\n BITCOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n   test/bignum.h \\\n+  test/addrman_tests.cpp \\\n   test/alert_tests.cpp \\\n   test/allocator_tests.cpp \\\n   test/base32_tests.cpp \\"
      },
      {
        "sha": "078b9e16817544ef9721f4009dc0533871f7b169",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "patch": "@@ -329,13 +329,17 @@ void CAddrMan::Attempt_(const CService& addr, int64_t nTime)\n     info.nAttempts++;\n }\n \n-CAddrInfo CAddrMan::Select_()\n+CAddrInfo CAddrMan::Select_(bool newOnly)\n {\n     if (size() == 0)\n         return CAddrInfo();\n \n+    if (newOnly && nNew == 0)\n+        return CAddrInfo();\n+\n     // Use a 50% chance for choosing between tried and new table entries.\n-    if (nTried > 0 && (nNew == 0 || GetRandInt(2) == 0)) {\n+    if (!newOnly &&\n+       (nTried > 0 && (nNew == 0 || GetRandInt(2) == 0))) { \n         // use a tried node\n         double fChanceFactor = 1.0;\n         while (1) {"
      },
      {
        "sha": "1123caabfaf601a49b7be292d97cfc5443aba4a5",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "patch": "@@ -22,6 +22,8 @@\n  */\n class CAddrInfo : public CAddress\n {\n+\n+\n public:\n     //! last try whatsoever by us (memory only)\n     int64_t nLastTry;\n@@ -230,8 +232,8 @@ class CAddrMan\n     //! Mark an entry as attempted to connect.\n     void Attempt_(const CService &addr, int64_t nTime);\n \n-    //! Select an address to connect to.\n-    CAddrInfo Select_();\n+    //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n+    CAddrInfo Select_(bool newOnly);\n \n #ifdef DEBUG_ADDRMAN\n     //! Perform consistency check. Returns an error code or zero.\n@@ -532,13 +534,13 @@ class CAddrMan\n     /**\n      * Choose an address to connect to.\n      */\n-    CAddrInfo Select()\n+    CAddrInfo Select(bool newOnly = false)\n     {\n         CAddrInfo addrRet;\n         {\n             LOCK(cs);\n             Check();\n-            addrRet = Select_();\n+            addrRet = Select_(newOnly);\n             Check();\n         }\n         return addrRet;\n@@ -567,6 +569,12 @@ class CAddrMan\n             Check();\n         }\n     }\n+    \n+    //! Ensure that bucket placement is always the same for testing purposes.\n+    void MakeDeterministic(){\n+        nKey.SetNull(); //Do not use outside of tests.\n+    }\n+\n };\n \n #endif // BITCOIN_ADDRMAN_H"
      },
      {
        "sha": "cfcdd9abb272440ae83c1103316b3cf0acbec2b6",
        "filename": "src/test/addrman_tests.cpp",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d479311dba25d6a697a0c5bebbb1e913a0121b9f/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "patch": "@@ -0,0 +1,180 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include \"addrman.h\"\n+#include \"test/test_bitcoin.h\"\n+#include <string>\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"random.h\"\n+\n+using namespace std;\n+\n+class CAddrManTest : public CAddrMan{};\n+\n+BOOST_FIXTURE_TEST_SUITE(addrman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(addrman_simple)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    // Test 1: Does Addrman respond correctly when empty.\n+    BOOST_CHECK(addrman.size() == 0);\n+    CAddrInfo addr_null = addrman.Select();\n+    BOOST_CHECK(addr_null.ToString() == \"[::]:0\");\n+\n+    // Test 2: Does Addrman::Add work as expected.\n+    CService addr1 = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+    CAddrInfo addr_ret1 = addrman.Select();\n+    BOOST_CHECK(addr_ret1.ToString() == \"250.1.1.1:8333\");\n+\n+    // Test 3: Does IP address deduplication work correctly. \n+    //  Expected dup IP should not be added.\n+    CService addr1_dup = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1_dup), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+\n+\n+    // Test 5: New table has one addr and we add a diff addr we should\n+    //  have two addrs.\n+    CService addr2 = CService(\"250.1.1.2:8333\");\n+    addrman.Add(CAddress(addr2), source);\n+    BOOST_CHECK(addrman.size() == 2);\n+\n+    // Test 6: AddrMan::Clear() should empty the new table. \n+    addrman.Clear();\n+    BOOST_CHECK(addrman.size() == 0);\n+    CAddrInfo addr_null2 = addrman.Select();\n+    BOOST_CHECK(addr_null2.ToString() == \"[::]:0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(addrman_ports)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    BOOST_CHECK(addrman.size() == 0);\n+\n+    // Test 7; Addr with same IP but diff port does not replace existing addr.\n+    CService addr1 = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+\n+    CService addr1_port = CService(\"250.1.1.1:8334\");\n+    addrman.Add(CAddress(addr1_port), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+    CAddrInfo addr_ret2 = addrman.Select();\n+    BOOST_CHECK(addr_ret2.ToString() == \"250.1.1.1:8333\");\n+\n+    // Test 8: Add same IP but diff port to tried table, it doesn't get added.\n+    //  Perhaps this is not ideal behavior but it is the current behavior.\n+    addrman.Good(CAddress(addr1_port));\n+    BOOST_CHECK(addrman.size() == 1);\n+    bool newOnly = true;\n+    CAddrInfo addr_ret3 = addrman.Select(newOnly);\n+    BOOST_CHECK(addr_ret3.ToString() == \"250.1.1.1:8333\");\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(addrman_select)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    // Test 9: Select from new with 1 addr in new.\n+    CService addr1 = CService(\"250.1.1.1:8333\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 1);\n+\n+    bool newOnly = true;\n+    CAddrInfo addr_ret1 = addrman.Select(newOnly);\n+    BOOST_CHECK(addr_ret1.ToString() == \"250.1.1.1:8333\");\n+\n+\n+    // Test 10: move addr to tried, select from new expected nothing returned.\n+    addrman.Good(CAddress(addr1));\n+    BOOST_CHECK(addrman.size() == 1);\n+    CAddrInfo addr_ret2 = addrman.Select(newOnly);\n+    BOOST_CHECK(addr_ret2.ToString() == \"[::]:0\");\n+\n+    CAddrInfo addr_ret3 = addrman.Select();\n+    BOOST_CHECK(addr_ret3.ToString() == \"250.1.1.1:8333\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(addrman_new_collisions)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    BOOST_CHECK(addrman.size() == 0);\n+\n+    for (unsigned int i = 1; i < 4; i++){\n+        CService addr = CService(\"250.1.1.\"+boost::to_string(i));\n+        addrman.Add(CAddress(addr), source);\n+\n+        //Test 11: No collision in new table yet.\n+        BOOST_CHECK(addrman.size() == i);\n+    }\n+\n+    //Test 12: new table collision!\n+    CService addr1 = CService(\"250.1.1.4\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 3);\n+\n+    CService addr2 = CService(\"250.1.1.5\");\n+    addrman.Add(CAddress(addr2), source);\n+    BOOST_CHECK(addrman.size() == 4);\n+}\n+\n+BOOST_AUTO_TEST_CASE(addrman_tried_collisions)\n+{\n+    CAddrManTest addrman;\n+\n+    // Set addrman addr placement to be deterministic.\n+    addrman.MakeDeterministic();\n+\n+    CNetAddr source = CNetAddr(\"252.2.2.2:8333\");\n+\n+    BOOST_CHECK(addrman.size() == 0);\n+\n+    for (unsigned int i = 1; i < 75; i++){\n+        CService addr = CService(\"250.1.1.\"+boost::to_string(i));\n+        addrman.Add(CAddress(addr), source);\n+        addrman.Good(CAddress(addr));\n+\n+        //Test 13: No collision in tried table yet.\n+        BOOST_TEST_MESSAGE(addrman.size());\n+        BOOST_CHECK(addrman.size() == i);\n+    }\n+\n+    //Test 14: tried table collision!\n+    CService addr1 = CService(\"250.1.1.76\");\n+    addrman.Add(CAddress(addr1), source);\n+    BOOST_CHECK(addrman.size() == 74);\n+\n+    CService addr2 = CService(\"250.1.1.77\");\n+    addrman.Add(CAddress(addr2), source);\n+    BOOST_CHECK(addrman.size() == 75);\n+}\n+\n+\n+BOOST_AUTO_TEST_SUITE_END()\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjI2OTJjZTNlMTY2OWRkZWVlYjE1OGEwZWVjZWRjZGJjYjFlMzZk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-10-08T04:00:03Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-10-08T04:00:55Z"
      },
      "message": "build: Make use of ZMQ_CFLAGS",
      "tree": {
        "sha": "670175449b21d2c52b17baed49d201accfb94cd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/670175449b21d2c52b17baed49d201accfb94cd5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d479311dba25d6a697a0c5bebbb1e913a0121b9f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0654ff4227d67a2b4be7e9bf32d79f4d3334cc0e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
        "patch": "@@ -214,7 +214,7 @@ libbitcoin_server_a_SOURCES = \\\n if ENABLE_ZMQ\n LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n \n-libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n libbitcoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\"
      }
    ]
  },
  {
    "sha": "34754ce3bc33a8b3c2e7d03039301ba171ac3362",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDc1NGNlM2JjMzNhOGIzYzJlN2QwMzAzOTMwMWJhMTcxYWMzMzYy",
    "commit": {
      "author": {
        "name": "Chris Kleeschulte",
        "email": "chrisk@bitpay.com",
        "date": "2015-10-08T19:21:54Z"
      },
      "committer": {
        "name": "Chris Kleeschulte",
        "email": "chrisk@bitpay.com",
        "date": "2015-10-08T19:27:12Z"
      },
      "message": "[Trivial] Fixed typo when referring to a previous section in\ndepends/README.md [skip ci]",
      "tree": {
        "sha": "fd4db7fc1607cb75f19e3ad27872608058ab7a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd4db7fc1607cb75f19e3ad27872608058ab7a32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34754ce3bc33a8b3c2e7d03039301ba171ac3362",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34754ce3bc33a8b3c2e7d03039301ba171ac3362",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34754ce3bc33a8b3c2e7d03039301ba171ac3362",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34754ce3bc33a8b3c2e7d03039301ba171ac3362/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d479311dba25d6a697a0c5bebbb1e913a0121b9f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d85e652c60f23810bef2dca5b32c22b2c1b6946b",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34754ce3bc33a8b3c2e7d03039301ba171ac3362/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34754ce3bc33a8b3c2e7d03039301ba171ac3362/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=34754ce3bc33a8b3c2e7d03039301ba171ac3362",
        "patch": "@@ -13,7 +13,7 @@ For example:\n     make HOST=x86_64-w64-mingw32 -j4\n \n A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named i686-w64-mingw32 will be\n+configure. In the above example, a dir named x86_64-w64-mingw32 will be\n created. To use it for Bitcoin:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32"
      }
    ]
  },
  {
    "sha": "a99b6cb19ee7688e28608ccbdc79470726de51be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTliNmNiMTllZTc2ODhlMjg2MDhjY2JkYzc5NDcwNzI2ZGU1MWJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T08:11:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T08:15:48Z"
      },
      "message": "Merge pull request #6770\n\nb2af29b Ignore bench_bitcoin binary. (Pavel Jan\u00edk)",
      "tree": {
        "sha": "7ec9909f7810ad5f29776c967313ff1e606fc7ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ec9909f7810ad5f29776c967313ff1e606fc7ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a99b6cb19ee7688e28608ccbdc79470726de51be",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWF3e0AAoJEHSBCwEjRsmmON0H/imEZILHrnZVCJjTwVqBoAV4\n/H9kvqZIkl9WkjwSSMeFhgYFgYmZMUdLHXdzG93SE1DDbvI38JJ5ct6EhCMbZvC+\nUT6witHd1sVemtsK04GJSWx4artXUxguNF2Y810Ld/Ei5sXE2JQ6AZOBj1AR0WrB\nNJYuSeSM28hxVHPa12TC0bPiZtoZzbjMbbE0iJmId2CgHBLLE4Zprc9Gij97zMqM\nmUTNYsI3I8DtjVvJ37w5iViJPdPaVQfVCcRp9xm+BdDb3CDnrztH7w8xf7JKexK1\nEEgr57ZXkNbf3hqeELeVjOUbLqEjcQXu9+zrQoLyvBJwqIwmAELXmlapvbht21c=\n=uVdz\n-----END PGP SIGNATURE-----",
        "payload": "tree 7ec9909f7810ad5f29776c967313ff1e606fc7ad\nparent d479311dba25d6a697a0c5bebbb1e913a0121b9f\nparent b2af29b806080d95e1e8d70f2929138a4d5db8e1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444378285 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444378548 +0200\n\nMerge pull request #6770\n\nb2af29b Ignore bench_bitcoin binary. (Pavel Jan\u00edk)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99b6cb19ee7688e28608ccbdc79470726de51be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a99b6cb19ee7688e28608ccbdc79470726de51be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99b6cb19ee7688e28608ccbdc79470726de51be/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d479311dba25d6a697a0c5bebbb1e913a0121b9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d479311dba25d6a697a0c5bebbb1e913a0121b9f"
      },
      {
        "sha": "b2af29b806080d95e1e8d70f2929138a4d5db8e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2af29b806080d95e1e8d70f2929138a4d5db8e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2af29b806080d95e1e8d70f2929138a4d5db8e1"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e231fe4cab5cb0fb49418ce68b145c0e2c541c16",
        "filename": "src/bench/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99b6cb19ee7688e28608ccbdc79470726de51be/src/bench/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99b6cb19ee7688e28608ccbdc79470726de51be/src/bench/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/.gitignore?ref=a99b6cb19ee7688e28608ccbdc79470726de51be",
        "patch": "@@ -0,0 +1 @@\n+bench_bitcoin"
      }
    ]
  },
  {
    "sha": "c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODJlYThiMjcxYzg1ZTg1YjM3NjdiMWE5ODYyZmRjZGM2MzI2MGMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T08:21:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T08:21:27Z"
      },
      "message": "Merge pull request #6783\n\n34754ce [Trivial] Fixed typo when referring to a previous section in depends/README.md [skip ci] (Chris Kleeschulte)",
      "tree": {
        "sha": "d4e4d5a128ab599b5555c2938e58598fd5b548c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4e4d5a128ab599b5555c2938e58598fd5b548c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWF3kHAAoJEHSBCwEjRsmmHksH/3mT0K+knZ2iY/zPAzy1tl73\nLV2zn66m28SpNy0d0MLd62++Xcu6LwpxdHiW/wOSSUxXfO057FZiPScSd7FUQeEN\nOKjigFofQjltq0v6DTdqg5R43xIQhqoOBcF+1efnEjZHmVA99QiIygZ+V7Sogwh9\n1apRssDaCL28ZNZ2bEgPIF4uafZk2TDtzZ9LEfKIa35TaS6gHDH1HS72hDXL7YXg\nYW3HAM9EBf38j021CfE4y6L1/3/6XtKOQgmzqY8kfroyt0X/8TvkdDR+SnLpzLTx\nTeRcs2VzyRu16ZI9oOHi5twIqCGy30K7wR3787oE6M4Ety2UZWmMGoaDetlrv+I=\n=QqnF\n-----END PGP SIGNATURE-----",
        "payload": "tree d4e4d5a128ab599b5555c2938e58598fd5b548c8\nparent a99b6cb19ee7688e28608ccbdc79470726de51be\nparent 34754ce3bc33a8b3c2e7d03039301ba171ac3362\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444378881 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444378887 +0200\n\nMerge pull request #6783\n\n34754ce [Trivial] Fixed typo when referring to a previous section in depends/README.md [skip ci] (Chris Kleeschulte)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c82ea8b271c85e85b3767b1a9862fdcdc63260c2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a99b6cb19ee7688e28608ccbdc79470726de51be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99b6cb19ee7688e28608ccbdc79470726de51be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a99b6cb19ee7688e28608ccbdc79470726de51be"
      },
      {
        "sha": "34754ce3bc33a8b3c2e7d03039301ba171ac3362",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34754ce3bc33a8b3c2e7d03039301ba171ac3362",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34754ce3bc33a8b3c2e7d03039301ba171ac3362"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d85e652c60f23810bef2dca5b32c22b2c1b6946b",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c82ea8b271c85e85b3767b1a9862fdcdc63260c2/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c82ea8b271c85e85b3767b1a9862fdcdc63260c2/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
        "patch": "@@ -13,7 +13,7 @@ For example:\n     make HOST=x86_64-w64-mingw32 -j4\n \n A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named i686-w64-mingw32 will be\n+configure. In the above example, a dir named x86_64-w64-mingw32 will be\n created. To use it for Bitcoin:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32"
      }
    ]
  },
  {
    "sha": "6cf73b0cd4cf510aafc37719c68e6634c1719502",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2Y3M2IwY2Q0Y2Y1MTBhYWZjMzc3MTljNjhlNjYzNGMxNzE5NTAy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T08:24:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T08:26:48Z"
      },
      "message": "Merge pull request #6779\n\nb22692c build: Make use of ZMQ_CFLAGS (Cory Fields)",
      "tree": {
        "sha": "2ce0d6ce629bbeac62c2f608d56101f07ee53e63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ce0d6ce629bbeac62c2f608d56101f07ee53e63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWF3pIAAoJEHSBCwEjRsmmMLYIAI1N3bHjUq8wVo2wQ1ljUHwz\n5hgc6uuEeooZGkRQGsNnzFErKjRTnWgDNTSUJiilXl6iT9Wtq2Db/kkHxONJdbBQ\ntEnBVqkSVSGNAcDMdzg/quM1PMvJxGGIYolGmsDdTNMvwghbVa/kHkBhgQZXpsfx\nAfu2UplBNU7D8oW158Lz974vP4LTNJ/0P4aN1E32oibP1//vZ94NGRIkfpxZCFEC\nwAfU2vVPnICcPOV37h/KQ1ZlC++6IYiyFezCKzR0axuFTRcq4G9ipX9ZdHthcGIN\nn0AGvj8gNdluuidXMsogVaC2EUWW7NxD4eYtuMmEbRdW6g2OVcqy7KkgQIu0XlM=\n=Eqxk\n-----END PGP SIGNATURE-----",
        "payload": "tree 2ce0d6ce629bbeac62c2f608d56101f07ee53e63\nparent c82ea8b271c85e85b3767b1a9862fdcdc63260c2\nparent b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444379066 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444379208 +0200\n\nMerge pull request #6779\n\nb22692c build: Make use of ZMQ_CFLAGS (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf73b0cd4cf510aafc37719c68e6634c1719502",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c82ea8b271c85e85b3767b1a9862fdcdc63260c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c82ea8b271c85e85b3767b1a9862fdcdc63260c2"
      },
      {
        "sha": "b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b22692ce3e1669ddeeeb158a0eecedcdbcb1e36d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0654ff4227d67a2b4be7e9bf32d79f4d3334cc0e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cf73b0cd4cf510aafc37719c68e6634c1719502/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cf73b0cd4cf510aafc37719c68e6634c1719502/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "patch": "@@ -214,7 +214,7 @@ libbitcoin_server_a_SOURCES = \\\n if ENABLE_ZMQ\n LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n \n-libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n libbitcoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\"
      }
    ]
  },
  {
    "sha": "31f4ba97b78e781b34b0e09130de923dc754c8f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWY0YmE5N2I3OGU3ODFiMzRiMGUwOTEzMGRlOTIzZGM3NTRjOGY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T09:37:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T09:37:00Z"
      },
      "message": "Merge commit '313e7f5c89d6e72e06efe9255089765b4c5815fe' into HEAD",
      "tree": {
        "sha": "e82eda6c98889f233641d984706d4061b5779fc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e82eda6c98889f233641d984706d4061b5779fc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31f4ba97b78e781b34b0e09130de923dc754c8f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf73b0cd4cf510aafc37719c68e6634c1719502"
      },
      {
        "sha": "313e7f5c89d6e72e06efe9255089765b4c5815fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/313e7f5c89d6e72e06efe9255089765b4c5815fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/313e7f5c89d6e72e06efe9255089765b4c5815fe"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 15,
      "deletions": 19
    },
    "files": [
      {
        "sha": "a7a2ca91975b11155b9877c745b06aa759197fbe",
        "filename": "src/univalue/.gitignore",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -19,4 +19,13 @@ test-driver\n libtool\n ltmain.sh\n \n+*.a\n+*.la\n+*.lo\n+*.logs\n *.o\n+*.pc\n+*.trs\n+\n+.dirstamp\n+.libs"
      },
      {
        "sha": "df9e66229c4069c164cc47642a1752b31f16ed7b",
        "filename": "src/univalue/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.am?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -5,20 +5,20 @@ ACLOCAL_AMFLAGS = -I build-aux/m4\n include_HEADERS = include/univalue.h\n noinst_HEADERS = lib/univalue_escapes.h\n \n-lib_LTLIBRARIES = lib/libunivalue.la\n+lib_LTLIBRARIES = libunivalue.la\n \n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = pc/libunivalue.pc\n \n-lib_libunivalue_la_SOURCES = \\\n+libunivalue_la_SOURCES = \\\n \tlib/univalue.cpp \\\n \tlib/univalue_read.cpp \\\n \tlib/univalue_write.cpp\n \n-lib_libunivalue_la_LDFLAGS = \\\n+libunivalue_la_LDFLAGS = \\\n \t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n \t-no-undefined\n-lib_libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n \n TESTS = test/unitester\n \n@@ -38,7 +38,7 @@ noinst_PROGRAMS = $(TESTS)\n TEST_DATA_DIR=test\n \n test_unitester_SOURCES = test/unitester.cpp\n-test_unitester_LDADD = lib/libunivalue.la\n+test_unitester_LDADD = libunivalue.la\n test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n "
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/univalue/build-aux/m4/.empty",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cf73b0cd4cf510aafc37719c68e6634c1719502/src/univalue/build-aux/m4/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cf73b0cd4cf510aafc37719c68e6634c1719502/src/univalue/build-aux/m4/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.empty?ref=6cf73b0cd4cf510aafc37719c68e6634c1719502"
      },
      {
        "sha": "f063686524ea4b501f819e52865dff64f3ec5324",
        "filename": "src/univalue/build-aux/m4/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/build-aux/m4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/build-aux/m4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -0,0 +1 @@\n+/*.m4"
      },
      {
        "sha": "ee7fc2851cd511579ee60c7a9fa916f3897c11e2",
        "filename": "src/univalue/lib/.gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/lib/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/lib/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -1,10 +1,2 @@\n-\n-libunivalue-uninstalled.pc\n-libunivalue.pc\n-libunivalue.a\n gen\n-\n .libs\n-*.lo\n-*.la\n-"
      },
      {
        "sha": "4afa094b106d601c690c13d1f88f03a96921fbfd",
        "filename": "src/univalue/test/.gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -1,7 +1 @@\n-\n unitester\n-\n-*.log\n-*.trs\n-\n-.libs"
      }
    ]
  },
  {
    "sha": "3b1279fdb269727f4fd964df0c238401467930ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjEyNzlmZGIyNjk3MjdmNGZkOTY0ZGYwYzIzODQwMTQ2NzkzMGVh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-10-08T04:09:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T09:38:05Z"
      },
      "message": "build: match upstream build change",
      "tree": {
        "sha": "890f87ab0f623887996d3e2140b4d015a81ba846",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/890f87ab0f623887996d3e2140b4d015a81ba846"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b1279fdb269727f4fd964df0c238401467930ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b1279fdb269727f4fd964df0c238401467930ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b1279fdb269727f4fd964df0c238401467930ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b1279fdb269727f4fd964df0c238401467930ea/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31f4ba97b78e781b34b0e09130de923dc754c8f8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "605031eb43fc8cfada3f7a31d53d174d04c87d62",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b1279fdb269727f4fd964df0c238401467930ea/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b1279fdb269727f4fd964df0c238401467930ea/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3b1279fdb269727f4fd964df0c238401467930ea",
        "patch": "@@ -31,7 +31,7 @@ LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n-LIBUNIVALUE=univalue/lib/libunivalue.la\n+LIBUNIVALUE=univalue/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)"
      }
    ]
  }
]