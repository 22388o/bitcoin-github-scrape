[
  {
    "sha": "eed429d2379e41601d6cf7f1c44122a7f7a988f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWQ0MjlkMjM3OWU0MTYwMWQ2Y2Y3ZjFjNDQxMjJhN2Y3YTk4OGY1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-11-13T01:29:30Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-02-14T04:37:35Z"
      },
      "message": "Keep the software running after encrypting a wallet\n\nInsteading of shutting down the entire software after encrypting\na wallet, instead just stop and close all of the wallets and then\nreopen them. This will flush the wallets, clear them from memory,\nand then reopen them to ensure that no unencrypted keys remain\nafter encrypting.",
      "tree": {
        "sha": "a2694fcc55cc3489fab4b19bdfc25c0e06c61a6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2694fcc55cc3489fab4b19bdfc25c0e06c61a6c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eed429d2379e41601d6cf7f1c44122a7f7a988f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eed429d2379e41601d6cf7f1c44122a7f7a988f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eed429d2379e41601d6cf7f1c44122a7f7a988f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eed429d2379e41601d6cf7f1c44122a7f7a988f5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "252ae7111cbff09a4cbc5caee9e02b6ed3580476",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/252ae7111cbff09a4cbc5caee9e02b6ed3580476",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/252ae7111cbff09a4cbc5caee9e02b6ed3580476"
      }
    ],
    "stats": {
      "total": 118,
      "additions": 69,
      "deletions": 49
    },
    "files": [
      {
        "sha": "461aed475015fc62436a0ba22f8e2f624a6dd9f6",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -452,3 +452,10 @@ void AddressTableModel::emitDataChanged(int idx)\n {\n     Q_EMIT dataChanged(index(idx, 0, QModelIndex()), index(idx, columns.length()-1, QModelIndex()));\n }\n+\n+void AddressTableModel::ReloadWallet()\n+{\n+    this->wallet = vpwallets[0];\n+    priv->wallet = vpwallets[0];\n+    priv->refreshAddressTable();\n+}"
      },
      {
        "sha": "32cb036d50c45a2ebc5b5c2e0ab2154c02c911ee",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -76,6 +76,8 @@ class AddressTableModel : public QAbstractTableModel\n \n     EditStatus getEditStatus() const { return editStatus; }\n \n+    void ReloadWallet();\n+\n private:\n     WalletModel *walletModel;\n     CWallet *wallet;"
      },
      {
        "sha": "cb53725aca5c1a67a21fa1c0cb21fe93f03c3751",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -11,6 +11,7 @@\n \n #include <qt/guiconstants.h>\n #include <qt/walletmodel.h>\n+#include <wallet/init.h>\n \n #include <support/allocators/secure.h>\n \n@@ -123,16 +124,23 @@ void AskPassphraseDialog::accept()\n                 {\n                     QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n                                          \"<qt>\" +\n-                                         tr(\"%1 will close now to finish the encryption process. \"\n+                                         tr(\"Your wallet is now encrypted. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n-                                         \"your bitcoins from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n+                                         \"your bitcoins from being stolen by malware infecting your computer.\") +\n                                          \"<br><br><b>\" +\n                                          tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n                                          \"should be replaced with the newly generated, encrypted wallet file. \"\n                                          \"For security reasons, previous backups of the unencrypted wallet file \"\n                                          \"will become useless as soon as you start using the new, encrypted wallet.\") +\n                                          \"</b></qt>\");\n-                    QApplication::quit();\n+                    model->unsubscribeFromCoreSignals();\n+                    model->UnsubscribeTableModelFromCoreSignals();\n+                    StopWallets();\n+                    CloseWallets();\n+                    OpenWallets();\n+                    model->ReloadWallet();\n+                    model->subscribeToCoreSignals();\n+                    model->SubscribeTableModelToCoreSignals();\n                 }\n                 else\n                 {"
      },
      {
        "sha": "0f12724dc49263984aa136514eba7d6de83920a6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -178,34 +178,18 @@ static void ShowProgress(SplashScreen *splash, const std::string &title, int nPr\n             strprintf(\"\\n%d\", nProgress) + \"%\");\n }\n \n-#ifdef ENABLE_WALLET\n-void SplashScreen::ConnectWallet(CWallet* wallet)\n-{\n-    wallet->ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2, false));\n-    connectedWallets.push_back(wallet);\n-}\n-#endif\n-\n void SplashScreen::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.InitMessage.connect(boost::bind(InitMessage, this, _1));\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2, _3));\n-#ifdef ENABLE_WALLET\n-    uiInterface.LoadWallet.connect(boost::bind(&SplashScreen::ConnectWallet, this, _1));\n-#endif\n }\n \n void SplashScreen::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n     uiInterface.InitMessage.disconnect(boost::bind(InitMessage, this, _1));\n     uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2, _3));\n-#ifdef ENABLE_WALLET\n-    for (CWallet* const & pwallet : connectedWallets) {\n-        pwallet->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2, false));\n-    }\n-#endif\n }\n \n void SplashScreen::showMessage(const QString &message, int alignment, const QColor &color)"
      },
      {
        "sha": "23e403a86d95110485e62828b948946f69be6e80",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -44,15 +44,11 @@ public Q_SLOTS:\n     void subscribeToCoreSignals();\n     /** Disconnect core signals to splash screen */\n     void unsubscribeFromCoreSignals();\n-    /** Connect wallet signals to splash screen */\n-    void ConnectWallet(CWallet*);\n \n     QPixmap pixmap;\n     QString curMessage;\n     QColor curColor;\n     int curAlignment;\n-\n-    QList<CWallet*> connectedWallets;\n };\n \n #endif // BITCOIN_QT_SPLASHSCREEN_H"
      },
      {
        "sha": "cd84554da89c75a4b63cf9df7b8374199abf6af1",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -789,3 +789,10 @@ void TransactionTableModel::unsubscribeFromCoreSignals()\n     wallet->NotifyTransactionChanged.disconnect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n     wallet->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n }\n+\n+void TransactionTableModel::ReloadWallet()\n+{\n+    this->wallet = vpwallets[0];\n+    priv->wallet = vpwallets[0];\n+    priv->refreshWallet();\n+}"
      },
      {
        "sha": "96031b993a4158d46fb91a84b020944dec5e13ea",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -81,6 +81,11 @@ class TransactionTableModel : public QAbstractTableModel\n     QModelIndex index(int row, int column, const QModelIndex & parent = QModelIndex()) const;\n     bool processingQueuedTransactions() const { return fProcessingQueuedTransactions; }\n \n+    void ReloadWallet();\n+\n+    void subscribeToCoreSignals();\n+    void unsubscribeFromCoreSignals();\n+\n private:\n     CWallet* wallet;\n     WalletModel *walletModel;\n@@ -89,9 +94,6 @@ class TransactionTableModel : public QAbstractTableModel\n     bool fProcessingQueuedTransactions;\n     const PlatformStyle *platformStyle;\n \n-    void subscribeToCoreSignals();\n-    void unsubscribeFromCoreSignals();\n-\n     QString lookupAddress(const std::string &address, bool tooltip) const;\n     QVariant addressColor(const TransactionRecord *wtx) const;\n     QString formatTxStatus(const TransactionRecord *wtx) const;"
      },
      {
        "sha": "ee85a7c796cac61ccc9b5b0da42e680eb0ffc963",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -742,3 +742,19 @@ int WalletModel::getDefaultConfirmTarget() const\n {\n     return nTxConfirmTarget;\n }\n+void WalletModel::ReloadWallet()\n+{\n+    this->wallet = vpwallets[0];\n+    addressTableModel->ReloadWallet();\n+    transactionTableModel->ReloadWallet();\n+}\n+\n+void WalletModel::SubscribeTableModelToCoreSignals()\n+{\n+    transactionTableModel->subscribeToCoreSignals();\n+}\n+\n+void WalletModel::UnsubscribeTableModelFromCoreSignals()\n+{\n+    transactionTableModel->unsubscribeFromCoreSignals();\n+}"
      },
      {
        "sha": "4235507c3f3189cb3ad9d3f4d87dbbeb0a294012",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -220,6 +220,14 @@ class WalletModel : public QObject\n \n     int getDefaultConfirmTarget() const;\n \n+    void ReloadWallet();\n+\n+    void subscribeToCoreSignals();\n+    void unsubscribeFromCoreSignals();\n+\n+    void SubscribeTableModelToCoreSignals();\n+    void UnsubscribeTableModelFromCoreSignals();\n+\n private:\n     CWallet *wallet;\n     bool fHaveWatchOnly;\n@@ -245,8 +253,6 @@ class WalletModel : public QObject\n \n     QTimer *pollTimer;\n \n-    void subscribeToCoreSignals();\n-    void unsubscribeFromCoreSignals();\n     void checkBalanceChanged();\n \n Q_SIGNALS:"
      },
      {
        "sha": "efa29a9d261665bbe343f2b44d617e8052722b2a",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -279,6 +279,7 @@ bool OpenWallets()\n         return true;\n     }\n \n+    bitdb.Reset();\n     for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n         CWallet * const pwallet = CWallet::CreateWalletFromFile(walletFile);\n         if (!pwallet) {\n@@ -305,6 +306,7 @@ void FlushWallets() {\n void StopWallets() {\n     for (CWalletRef pwallet : vpwallets) {\n         pwallet->Flush(true);\n+        UnregisterValidationInterface(pwallet);\n     }\n }\n "
      },
      {
        "sha": "e5bdc7a6145590692b481bc43a7c1f1fa5902098",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -26,6 +26,7 @@\n #include <wallet/coincontrol.h>\n #include <wallet/feebumper.h>\n #include <wallet/wallet.h>\n+#include <wallet/init.h>\n #include <wallet/walletdb.h>\n #include <wallet/walletutil.h>\n \n@@ -2484,7 +2485,6 @@ UniValue encryptwallet(const JSONRPCRequest& request)\n             \"will require the passphrase to be set prior the making these calls.\\n\"\n             \"Use the walletpassphrase call for this, and then walletlock call.\\n\"\n             \"If the wallet is already encrypted, use the walletpassphrasechange call.\\n\"\n-            \"Note that this will shutdown the server.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"passphrase\\\"    (string) The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long.\\n\"\n             \"\\nExamples:\\n\"\n@@ -2527,8 +2527,10 @@ UniValue encryptwallet(const JSONRPCRequest& request)\n     // BDB seems to have a bad habit of writing old data into\n     // slack space in .dat files; that is bad if the old data is\n     // unencrypted private keys. So:\n-    StartShutdown();\n-    return \"wallet encrypted; Bitcoin server stopping, restart to run with encrypted wallet. The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.\";\n+    StopWallets();\n+    CloseWallets();\n+    OpenWallets();\n+    return \"wallet encrypted; The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.\";\n }\n \n UniValue lockunspent(const JSONRPCRequest& request)"
      },
      {
        "sha": "e01cb755ce6bc4e0bf7d28e7a86379e945cc782c",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -458,7 +458,8 @@ def run_test(self):\n         ############################################################\n         # locked wallet test\n         self.stop_node(0)\n-        self.nodes[1].node_encrypt_wallet(\"test\")\n+        self.nodes[1].encryptwallet(\"test\")\n+        self.stop_node(1)\n         self.stop_node(2)\n         self.stop_node(3)\n "
      },
      {
        "sha": "dcd27ac457a2e023ebd90cdfbc22f8e89ba0bf4a",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -160,14 +160,6 @@ def is_node_stopped(self):\n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n         wait_until(self.is_node_stopped, timeout=timeout)\n \n-    def node_encrypt_wallet(self, passphrase):\n-        \"\"\"\"Encrypts the wallet.\n-\n-        This causes bitcoind to shutdown, so this method takes\n-        care of cleaning up resources.\"\"\"\n-        self.encryptwallet(passphrase)\n-        self.wait_until_stopped()\n-\n     def add_p2p_connection(self, p2p_conn, *args, **kwargs):\n         \"\"\"Add a p2p connection to the node.\n "
      },
      {
        "sha": "85b8a15f410a889bb349b2180208735f537daab1",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -38,8 +38,7 @@ def set_test_params(self):\n \n     def run_test(self):\n         # Encrypt wallet for test_locked_wallet_fails test\n-        self.nodes[1].node_encrypt_wallet(WALLET_PASSPHRASE)\n-        self.start_node(1)\n+        self.nodes[1].encryptwallet(WALLET_PASSPHRASE)\n         self.nodes[1].walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n         connect_nodes_bi(self.nodes, 0, 1)"
      },
      {
        "sha": "3a103892405c140e9398b2e08767fb69e7f7ec11",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -120,8 +120,7 @@ def run_test (self):\n         assert_equal(witness_addr_ret, witness_addr) # p2sh-p2wsh address added to the first key\n \n         #encrypt wallet, restart, unlock and dump\n-        self.nodes[0].node_encrypt_wallet('test')\n-        self.start_node(0)\n+        self.nodes[0].encryptwallet('test')\n         self.nodes[0].walletpassphrase('test', 10)\n         # Should be a no-op:\n         self.nodes[0].keypoolrefill()"
      },
      {
        "sha": "f0a006c5ff752bdea91f890756dcfa4b55c1572a",
        "filename": "test/functional/wallet_encryption.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_encryption.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_encryption.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_encryption.py?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -30,8 +30,7 @@ def run_test(self):\n         assert_equal(len(privkey), 52)\n \n         # Encrypt the wallet\n-        self.nodes[0].node_encrypt_wallet(passphrase)\n-        self.start_node(0)\n+        self.nodes[0].encryptwallet(passphrase)\n \n         # Test that the wallet is encrypted\n         assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first\", self.nodes[0].dumpprivkey, address)"
      },
      {
        "sha": "622197cd9c7f85cefd8bd989b433dcecffabbbf8",
        "filename": "test/functional/wallet_keypool.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed429d2379e41601d6cf7f1c44122a7f7a988f5/test/functional/wallet_keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool.py?ref=eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "patch": "@@ -19,9 +19,7 @@ def run_test(self):\n         assert(addr_before_encrypting_data['hdmasterkeyid'] == wallet_info_old['hdmasterkeyid'])\n         \n         # Encrypt wallet and wait to terminate\n-        nodes[0].node_encrypt_wallet('test')\n-        # Restart node 0\n-        self.start_node(0)\n+        nodes[0].encryptwallet('test')\n         # Keep creating keys\n         addr = nodes[0].getnewaddress()\n         addr_data = nodes[0].validateaddress(addr)"
      }
    ]
  },
  {
    "sha": "7cb328d1018b0e73235a97877a4dbb63eb81b575",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2IzMjhkMTAxOGIwZTczMjM1YTk3ODc3YTRkYmI2M2ViODFiNTc1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-02-14T05:38:15Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-02-14T05:38:15Z"
      },
      "message": "fixup! Reload wallets when encryptwallet is used from rpcconsole",
      "tree": {
        "sha": "9ac3ea38eb4bc51d770cc3c84ec73056ceedd218",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ac3ea38eb4bc51d770cc3c84ec73056ceedd218"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cb328d1018b0e73235a97877a4dbb63eb81b575",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cb328d1018b0e73235a97877a4dbb63eb81b575",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7cb328d1018b0e73235a97877a4dbb63eb81b575",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cb328d1018b0e73235a97877a4dbb63eb81b575/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eed429d2379e41601d6cf7f1c44122a7f7a988f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eed429d2379e41601d6cf7f1c44122a7f7a988f5"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1e92b96aa05d31a689ccf47cefcb22e095c36ff7",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=7cb328d1018b0e73235a97877a4dbb63eb81b575",
        "patch": "@@ -534,6 +534,7 @@ bool BitcoinGUI::addWallet(const QString& name, WalletModel *walletModel)\n     if(!walletFrame)\n         return false;\n     setWalletActionsEnabled(true);\n+    rpcConsole->setWalletModel(walletModel);\n     return walletFrame->addWallet(name, walletModel);\n }\n "
      },
      {
        "sha": "6cc2a6be00376e6926a480f3519ca5e67a73a769",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=7cb328d1018b0e73235a97877a4dbb63eb81b575",
        "patch": "@@ -25,6 +25,7 @@\n #ifdef ENABLE_WALLET\n #include <db_cxx.h>\n #include <wallet/wallet.h>\n+#include <wallet/init.h>\n #endif\n \n #include <QDesktopWidget>\n@@ -446,6 +447,7 @@ RPCConsole::RPCConsole(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::RPCConsole),\n     clientModel(0),\n+    walletModel(0),\n     historyPtr(0),\n     platformStyle(_platformStyle),\n     peersTableContextMenu(0),\n@@ -686,6 +688,11 @@ void RPCConsole::setClientModel(ClientModel *model)\n     }\n }\n \n+void RPCConsole::setWalletModel(WalletModel *model)\n+{\n+    this->walletModel = model;\n+}\n+\n static QString categoryClass(int category)\n {\n     switch(category)\n@@ -793,6 +800,19 @@ void RPCConsole::keyPressEvent(QKeyEvent *event)\n \n void RPCConsole::message(int category, const QString &message, bool html)\n {\n+#ifdef ENABLE_WALLET\n+    // TODO: Put this in a more sensible place\n+    // Only for encrypting wallets and encryption was successful\n+    if (message.indexOf(\"wallet encrypted;\") == 0) {\n+        StopWallets();\n+        CloseWallets();\n+        OpenWallets();\n+        walletModel->ReloadWallet();\n+        walletModel->subscribeToCoreSignals();\n+        walletModel->SubscribeTableModelToCoreSignals();\n+    }\n+#endif\n+\n     QTime time = QTime::currentTime();\n     QString timeString = time.toString();\n     QString out;"
      },
      {
        "sha": "d38c439fefd0c846e9f6c2e5b1f605fffc1cbf84",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=7cb328d1018b0e73235a97877a4dbb63eb81b575",
        "patch": "@@ -7,6 +7,9 @@\n \n #include <qt/guiutil.h>\n #include <qt/peertablemodel.h>\n+#ifdef ENABLE_WALLET\n+#include <qt/walletmodel.h>\n+#endif // ENABLE_WALLET\n \n #include <net.h>\n \n@@ -42,6 +45,7 @@ class RPCConsole: public QWidget\n     }\n \n     void setClientModel(ClientModel *model);\n+    void setWalletModel(WalletModel *model);\n \n     enum MessageClass {\n         MC_ERROR,\n@@ -140,6 +144,7 @@ public Q_SLOTS:\n \n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n+    WalletModel *walletModel;\n     QStringList history;\n     int historyPtr;\n     QString cmdBeforeBrowsing;"
      },
      {
        "sha": "2ad8a58257c420284eb4d7e94ded9781c0ba70a6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cb328d1018b0e73235a97877a4dbb63eb81b575/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7cb328d1018b0e73235a97877a4dbb63eb81b575",
        "patch": "@@ -2530,6 +2530,7 @@ UniValue encryptwallet(const JSONRPCRequest& request)\n     StopWallets();\n     CloseWallets();\n     OpenWallets();\n+    // NOTE: This string is used to check that wallet encryption happened so that the rpcconsole can reset the GUI if encryptwallet is called from the rpcconsole.\n     return \"wallet encrypted; The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.\";\n }\n "
      }
    ]
  },
  {
    "sha": "ca09b2b745745b33feaca726603f70f938b5863e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTA5YjJiNzQ1NzQ1YjMzZmVhY2E3MjY2MDNmNzBmOTM4YjU4NjNl",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-02-15T03:06:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-02-15T04:42:11Z"
      },
      "message": "fixup! ifdef enable wallets (ewewewewewew)",
      "tree": {
        "sha": "a0c7b20c942d4eee765cd628c4ef2246f3651c05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0c7b20c942d4eee765cd628c4ef2246f3651c05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca09b2b745745b33feaca726603f70f938b5863e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca09b2b745745b33feaca726603f70f938b5863e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca09b2b745745b33feaca726603f70f938b5863e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca09b2b745745b33feaca726603f70f938b5863e/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7cb328d1018b0e73235a97877a4dbb63eb81b575",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cb328d1018b0e73235a97877a4dbb63eb81b575",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7cb328d1018b0e73235a97877a4dbb63eb81b575"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f3870c356ad733916508f1effef360e9447257d6",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca09b2b745745b33feaca726603f70f938b5863e/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca09b2b745745b33feaca726603f70f938b5863e/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ca09b2b745745b33feaca726603f70f938b5863e",
        "patch": "@@ -447,7 +447,9 @@ RPCConsole::RPCConsole(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::RPCConsole),\n     clientModel(0),\n+#ifdef ENABLE_WALLET\n     walletModel(0),\n+#endif\n     historyPtr(0),\n     platformStyle(_platformStyle),\n     peersTableContextMenu(0),\n@@ -688,10 +690,12 @@ void RPCConsole::setClientModel(ClientModel *model)\n     }\n }\n \n+#ifdef ENABLE_WALLET\n void RPCConsole::setWalletModel(WalletModel *model)\n {\n     this->walletModel = model;\n }\n+#endif\n \n static QString categoryClass(int category)\n {"
      },
      {
        "sha": "5db326832a79104e7e8deaf99ef25f35373d406b",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca09b2b745745b33feaca726603f70f938b5863e/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca09b2b745745b33feaca726603f70f938b5863e/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=ca09b2b745745b33feaca726603f70f938b5863e",
        "patch": "@@ -45,7 +45,9 @@ class RPCConsole: public QWidget\n     }\n \n     void setClientModel(ClientModel *model);\n+#ifdef ENABLE_WALLET\n     void setWalletModel(WalletModel *model);\n+#endif\n \n     enum MessageClass {\n         MC_ERROR,\n@@ -144,7 +146,9 @@ public Q_SLOTS:\n \n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n+#ifdef ENABLE_WALLET\n     WalletModel *walletModel;\n+#endif\n     QStringList history;\n     int historyPtr;\n     QString cmdBeforeBrowsing;"
      }
    ]
  }
]