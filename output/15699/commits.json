[
  {
    "sha": "6dd469a3bea60d8857ec0be625c2ef8a7716c148",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGQ0NjlhM2JlYTYwZDg4NTdlYzBiZTYyNWMyZWY4YTc3MTZjMTQ4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-03-29T18:11:43Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-03-29T18:34:53Z"
      },
      "message": "Disconnect BlockNotifyGenesisWait and RPCNotifyBlockChange properly. Remove no-op CClientUIInterface::[signal_name]_disconnect.",
      "tree": {
        "sha": "c38d9fb00949b77b0b5775e0147394b51db0547f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c38d9fb00949b77b0b5775e0147394b51db0547f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dd469a3bea60d8857ec0be625c2ef8a7716c148",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd469a3bea60d8857ec0be625c2ef8a7716c148",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd469a3bea60d8857ec0be625c2ef8a7716c148",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd469a3bea60d8857ec0be625c2ef8a7716c148/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0baf4b1f96635cdf5f26b36753321fe3ea40d4a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0baf4b1f96635cdf5f26b36753321fe3ea40d4a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0baf4b1f96635cdf5f26b36753321fe3ea40d4a8"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 7,
      "deletions": 10
    },
    "files": [
      {
        "sha": "3541523e195dd6673042f391536556d1f45c134e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd469a3bea60d8857ec0be625c2ef8a7716c148/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd469a3bea60d8857ec0be625c2ef8a7716c148/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6dd469a3bea60d8857ec0be625c2ef8a7716c148",
        "patch": "@@ -339,14 +339,15 @@ static void registerSignalHandler(int signal, void(*handler)(int))\n }\n #endif\n \n+static boost::signals2::connection rpc_notify_block_change_connection;\n static void OnRPCStarted()\n {\n-    uiInterface.NotifyBlockTip_connect(&RPCNotifyBlockChange);\n+    rpc_notify_block_change_connection = uiInterface.NotifyBlockTip_connect(&RPCNotifyBlockChange);\n }\n \n static void OnRPCStopped()\n {\n-    uiInterface.NotifyBlockTip_disconnect(&RPCNotifyBlockChange);\n+    rpc_notify_block_change_connection.disconnect();\n     RPCNotifyBlockChange(false, nullptr);\n     g_best_block_cv.notify_all();\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n@@ -1687,8 +1688,9 @@ bool AppInitMain(InitInterfaces& interfaces)\n \n     // Either install a handler to notify us when genesis activates, or set fHaveGenesis directly.\n     // No locking, as this happens before any background thread is started.\n+    boost::signals2::connection block_notify_genesis_wait_connection;\n     if (chainActive.Tip() == nullptr) {\n-        uiInterface.NotifyBlockTip_connect(BlockNotifyGenesisWait);\n+        block_notify_genesis_wait_connection = uiInterface.NotifyBlockTip_connect(BlockNotifyGenesisWait);\n     } else {\n         fHaveGenesis = true;\n     }\n@@ -1712,7 +1714,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n         while (!fHaveGenesis && !ShutdownRequested()) {\n             g_genesis_wait_cv.wait_for(lock, std::chrono::milliseconds(500));\n         }\n-        uiInterface.NotifyBlockTip_disconnect(BlockNotifyGenesisWait);\n+        block_notify_genesis_wait_connection.disconnect();\n     }\n \n     if (ShutdownRequested()) {"
      },
      {
        "sha": "dc9ab641f4014f689a7b265740dad28624a20734",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd469a3bea60d8857ec0be625c2ef8a7716c148/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd469a3bea60d8857ec0be625c2ef8a7716c148/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=6dd469a3bea60d8857ec0be625c2ef8a7716c148",
        "patch": "@@ -28,10 +28,6 @@ struct UISignals {\n     boost::signals2::connection CClientUIInterface::signal_name##_connect(std::function<signal_name##Sig> fn) \\\n     {                                                                                                         \\\n         return g_ui_signals.signal_name.connect(fn);                                                          \\\n-    }                                                                                                         \\\n-    void CClientUIInterface::signal_name##_disconnect(std::function<signal_name##Sig> fn)                     \\\n-    {                                                                                                         \\\n-        return g_ui_signals.signal_name.disconnect(&fn);                                                      \\\n     }\n \n ADD_SIGNALS_IMPL_WRAPPER(ThreadSafeMessageBox);"
      },
      {
        "sha": "5bcc4331a6fbc305265d9c4eef0d62f34b7a7cd2",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd469a3bea60d8857ec0be625c2ef8a7716c148/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd469a3bea60d8857ec0be625c2ef8a7716c148/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=6dd469a3bea60d8857ec0be625c2ef8a7716c148",
        "patch": "@@ -81,8 +81,7 @@ class CClientUIInterface\n #define ADD_SIGNALS_DECL_WRAPPER(signal_name, rtype, ...)                                  \\\n     rtype signal_name(__VA_ARGS__);                                                        \\\n     using signal_name##Sig = rtype(__VA_ARGS__);                                           \\\n-    boost::signals2::connection signal_name##_connect(std::function<signal_name##Sig> fn); \\\n-    void signal_name##_disconnect(std::function<signal_name##Sig> fn);\n+    boost::signals2::connection signal_name##_connect(std::function<signal_name##Sig> fn);\n \n     /** Show message box. */\n     ADD_SIGNALS_DECL_WRAPPER(ThreadSafeMessageBox, bool, const std::string& message, const std::string& caption, unsigned int style);"
      }
    ]
  }
]