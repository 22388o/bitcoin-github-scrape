laanwj,2012-09-25T06:44:39Z,"I certainly think this is useful data to keep around. \n\nBut, as precise time is a rare thing, for the wallet scan optimization to be exact (the ""7200 seconds leeway"" makes me a bit uneasy), would it maybe make sense to store a block chain height of first use? Now that we have key metadata anyway...\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-8845010,8845010,
gavinandresen,2012-09-25T14:25:37Z,"7200 seconds is two hours, which matches the blockchain rules (new blocks must have timestamps no more than 2 hours in the future, if I recall correctly).\n\nAnd I think keys are properly thought of as independent of any one particular blockchain, so absolute time of creation is the right notion.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-8856026,8856026,
laanwj,2012-09-25T14:40:39Z,"Yes, but you are using the local time of the machine that creates the key, at the time the key is generated. I don't think this should be ultimately trusted information (ie, reliable enough to base important optimizations on).\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-8856578,8856578,
jgarzik,2012-09-26T22:04:24Z,"&lt;shrug&gt;  The rescan optimization can do ""X - 24 hours"" and still be quite effective.\n\nOne secondary goal along with storing key time is running in client-mode may be optimized to ignore all blocks older than the wallet birthday.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-8908142,8908142,
sipa,2012-09-28T14:10:33Z,"Sounds like a good idea. I prefer keeping a timestamp + lee way, rather than storing blockchain height, as the latter is context that can change during reorganisations.\n\nFor deterministic wallet, the meta data object could be extended.\n\nI haven't tested this.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-8977457,8977457,
BitcoinPullTester,2012-10-21T01:50:11Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fefb9e12b1be676ffff49fccb8be52ae1c65e779 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9638847,9638847,
kjj2,2012-10-29T17:56:42Z,"This is a very important feature for multisig.  While you can do everything with the raw TX API, just importing the keys and spending from the wallet as usual is much easier, and will remain so for probably quite a while.  For me, this patch would have saved a couple of hours worth of rescan time while I was testing multisig.\n\nOne possible addition...  When doing a rescan, can we detect the time",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9878750,9878750,
gavinandresen,2012-10-29T21:31:44Z,"RE: ""just importing the keys and spending from the wallet...""  :  I think we should strongly encourage people to keep private keys private, and not get into the habit of exporting/importing them.  If you are sending private keys around for anything other than backup then you're probably Doing It Wrong(tm).\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9886248,9886248,
kjj2,2012-10-30T12:50:40Z,"I suspect that for a while to come, the most common usage of multisig will be one time cold storage wallets.  You generate some keys, send coins to them, and then later, you redeem whatever is in them.  Importing the privkey is the simplest way to do that, and however wrong it may be, I'll bet you a dollar that lots of people are going to do it.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9904369,9904369,
sipa,2012-10-30T13:13:34Z,"I think we need a standard way of encoding a private key + a txid for such purposes, as that is enough for instant spending without rescanning history at all (however long it is ago).\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9904960,9904960,
schildbach,2012-10-30T13:28:55Z,"Bitcoin Wallet and MultiBit can already exchange private keys against each other by using a text based export format. It's basically one base58-encoded key per line, optionally with a key creation time in ISO8601 format. The whole file can be AES encrypted in a way that also openssl can be used to decrypt.\n\nI think it's time that we document this format properly and maybe propose it as a BIP.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9905436,9905436,
jim618,2012-10-30T17:13:23Z,I am happy to write up the existing key exchange format Andreas and I are using as a BIP if someone gives me a number. It gives a concrete format to critique and improve upon as required. \n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-9914307,9914307,
sipa,2013-04-07T18:16:23Z,"Hmm, mind rebasing this @jgarzik? I think we forgot about this somehow.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-16020156,16020156,
gmaxwell,2013-04-07T21:25:51Z,Did this get derailed due to not having a serialization for it?\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-16024615,16024615,
sipa,2013-04-07T21:47:40Z,"I'm planning to rebase my wallet JSON dump/import RPC patch from 2 years ago, given that there's apparently many people who feel the need to toy with wallets, but shoot themself in the foot by working with individual keys instead of whole wallets. Key birthdates could nice be serialized in that.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-16025014,16025014,
jgarzik,2013-04-08T05:38:54Z,@sipa will put it on the todo list.\n\n@gmaxwell No real blocker other than it seemed like @gavinandresen grumped over this pull request in general.  :)\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-16033425,16033425,
gavinandresen,2013-04-08T13:39:08Z,"Yeah, but I grump over everything, it is my Prime Directive.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-16050682,16050682,
jgarzik,2013-04-08T23:12:56Z,"It looks like a rebase is not trivial, due to some wallet changes in the interim.  Not difficult, but not trivial either.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-16084954,16084954,
jgarzik,2013-05-24T19:27:35Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18424965,18424965,
sipa,2013-05-30T03:56:28Z,"Apart from those static counter variables, ACK on the code changes. A more efficient wallet serialization format (where metadata is stored together with the keys) would be nice, but I guess that can easily be done together with a wallet format overhaul.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18660207,18660207,
jgarzik,2013-05-30T04:02:45Z,@sipa agree that the static counters are ugly\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18660363,18660363,
jgarzik,2013-05-31T15:01:42Z,"@sipa Added commit to encapsulate the static variables, and some existing variables held across invocations from multiple callers, into CWalletScanState.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18750250,18750250,
jgarzik,2013-05-31T15:03:53Z,"Also note that this pull request introduces an extensible key-metadata object in the wallet, fully versioned.  It is now easier to add other metadata to each key.\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18750394,18750394,
jgarzik,2013-05-31T18:52:47Z,Merged with upstream\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18764376,18764376,
sipa,2013-06-01T08:45:20Z,ACK code changes; didn't test yet. Can you rebase instead of doing merges?\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18785787,18785787,
laanwj,2013-06-02T12:15:30Z,ACK on code changes\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-18806305,18806305,
sipa,2013-06-10T06:27:15Z,"I'd like to merge this, can you squash the merge commit?\n",https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-19182448,19182448,
jgarzik,2013-06-10T14:07:22Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/1863#issuecomment-19200529,19200529,
sipa,2012-10-07T13:54:15Z,"nKeyCreateTime defaults to the current time? Doesn't that break compatibility? (importprivkey currently rescans the entire history).\n\nI'd prefer the current time to be the default (as is implemented here), but I'm afraid it will cause issues.\n",https://github.com/bitcoin/bitcoin/pull/1863#discussion_r1780647,1780647,src/rpcdump.cpp
sipa,2013-05-30T03:53:37Z,This is very ugly...\n,https://github.com/bitcoin/bitcoin/pull/1863#discussion_r4450282,4450282,src/walletdb.cpp
