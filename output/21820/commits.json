[
  {
    "sha": "aa888cf8517eae75d47286e1585c72492c9fb563",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTg4OGNmODUxN2VhZTc1ZDQ3Mjg2ZTE1ODVjNzI0OTJjOWZiNTYz",
    "commit": {
      "author": {
        "name": "38",
        "email": "jimmywilk@users.noreply.github.com",
        "date": "2019-12-02T03:29:30Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-12-02T03:29:30Z"
      },
      "message": "Bitcoinaws\n\nBit",
      "tree": {
        "sha": "f35b5301b9bb62cbc90ee163145152972aea344a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f35b5301b9bb62cbc90ee163145152972aea344a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa888cf8517eae75d47286e1585c72492c9fb563",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd5IUbCRBK7hj4Ov3rIwAAdHIIAH8UC5nBF897l3up9ynrzes0\nkAhACUR/+bHpq0Ex/zZ16P0mbw5Fh2XxSYVGsQ+puF6JAoPYhV3B8aqpDYMPbMJ+\nFcgHqpVKNcDJHqvCawPf84JsWwtd208pRDbqEb3IQvDlsIMZHFi6AkmR4gjhMnho\nlkBW4gZVFuxvjkFwJr7PoLqc9L9SGjCGXk6bk9C4ebDrMri6CyZzUFyc8cIqdS30\nXxo1CZHP2aULBkZr0JoizDvaoA3xOQtW577IiYrZ383oj2W00rrJPKraxGSiCF+k\nqjTVjWy8ZAfiW9DMDsOluHORc8AD2QjpqTz5qoe31wQlnkZqJrm9Sr2ioyI5KD4=\n=dxcI\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f35b5301b9bb62cbc90ee163145152972aea344a\nparent 19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08\nauthor 38 <jimmywilk@users.noreply.github.com> 1575257370 -0600\ncommitter GitHub <noreply@github.com> 1575257370 -0600\n\nBitcoinaws\n\nBit"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa888cf8517eae75d47286e1585c72492c9fb563",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa888cf8517eae75d47286e1585c72492c9fb563",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa888cf8517eae75d47286e1585c72492c9fb563/comments",
    "author": {
      "login": "jimmywilk",
      "id": 3312092,
      "node_id": "MDQ6VXNlcjMzMTIwOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3312092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmywilk",
      "html_url": "https://github.com/jimmywilk",
      "followers_url": "https://api.github.com/users/jimmywilk/followers",
      "following_url": "https://api.github.com/users/jimmywilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmywilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmywilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmywilk/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmywilk/orgs",
      "repos_url": "https://api.github.com/users/jimmywilk/repos",
      "events_url": "https://api.github.com/users/jimmywilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmywilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 82,
      "deletions": 0
    },
    "files": [
      {
        "sha": "116c9f13cccf889283cfbc80822453c19b7cbd08",
        "filename": ".github/workflows/aws.yml",
        "status": "added",
        "additions": 82,
        "deletions": 0,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa888cf8517eae75d47286e1585c72492c9fb563/.github/workflows/aws.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa888cf8517eae75d47286e1585c72492c9fb563/.github/workflows/aws.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/workflows/aws.yml?ref=aa888cf8517eae75d47286e1585c72492c9fb563",
        "patch": "@@ -0,0 +1,82 @@\n+# This workflow will build and push a new container image to Amazon ECR,\n+# and then will deploy a new task definition to Amazon ECS, on every push\n+# to the master branch.\n+#\n+# To use this workflow, you will need to complete the following set-up steps:\n+#\n+# 1. Create an ECR repository to store your images.\n+#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.\n+#    Replace the value of `ECR_REPOSITORY` in the workflow below with your repository's name.\n+#    Replace the value of `aws-region` in the workflow below with your repository's region.\n+#\n+# 2. Create an ECS task definition, an ECS cluster, and an ECS service.\n+#    For example, follow the Getting Started guide on the ECS console:\n+#      https://us-east-2.console.aws.amazon.com/ecs/home?region=us-east-2#/firstRun\n+#    Replace the values for `service` and `cluster` in the workflow below with your service and cluster names.\n+#\n+# 3. Store your ECS task definition as a JSON file in your repository.\n+#    The format should follow the output of `aws ecs register-task-definition --generate-cli-skeleton`.\n+#    Replace the value of `task-definition` in the workflow below with your JSON file's name.\n+#    Replace the value of `container-name` in the workflow below with the name of the container\n+#    in the `containerDefinitions` section of the task definition.\n+#\n+# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.\n+#    See the documentation for each action used below for the recommended IAM policies for this IAM user,\n+#    and best practices on handling the access key credentials.\n+\n+on:\n+  push:\n+    branches:\n+      - master\n+\n+name: Deploy to Amazon ECS\n+\n+jobs:\n+  deploy:\n+    name: Deploy\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout\n+      uses: actions/checkout@v1\n+\n+    - name: Configure AWS credentials\n+      uses: aws-actions/configure-aws-credentials@v1\n+      with:\n+        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        aws-region: us-east-2\n+\n+    - name: Login to Amazon ECR\n+      id: login-ecr\n+      uses: aws-actions/amazon-ecr-login@v1\n+\n+    - name: Build, tag, and push image to Amazon ECR\n+      id: build-image\n+      env:\n+        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}\n+        ECR_REPOSITORY: my-ecr-repo\n+        IMAGE_TAG: ${{ github.sha }}\n+      run: |\n+        # Build a docker container and\n+        # push it to ECR so that it can\n+        # be deployed to ECS.\n+        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .\n+        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\n+        echo \"::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\"\n+\n+    - name: Fill in the new image ID in the Amazon ECS task definition\n+      id: task-def\n+      uses: aws-actions/amazon-ecs-render-task-definition@v1\n+      with:\n+        task-definition: task-definition.json\n+        container-name: sample-app\n+        image: ${{ steps.build-image.outputs.image }}\n+\n+    - name: Deploy Amazon ECS task definition\n+      uses: aws-actions/amazon-ecs-deploy-task-definition@v1\n+      with:\n+        task-definition: ${{ steps.task-def.outputs.task-definition }}\n+        service: sample-app-service\n+        cluster: default\n+        wait-for-service-stability: true"
      }
    ]
  }
]