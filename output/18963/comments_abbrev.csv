dongcarl,2020-05-13 18:27:48,"Since this PR touches critical parts of the codebase, I think it deserves a thorough review. I'm going to go through the original PR (#16323) commit by commit and write down my notes here: https://docs.google.com/document/d/1tduRmqcvhdl3FRkmdnj0f3_fknXuIZ57R8zdCGHNt6k/edit?usp=sharing",https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-628167453,628167453,
dongcarl,2020-05-18 21:49:35,"Rebased on newer #17479. `git-bisect`ing the `validationinterface_tests/unregister_all_during_call` says:\n\n```\n194935b1a2968b594a42cb880e30701dd2e2bc7c is the first bad commit\n```",https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-630453121,630453121,
ryanofsky,2020-05-18 22:35:42,"> Rebased on newer #17479. `git-bisect`ing the `validationinterface_tests/unregister_all_during_call` says:\n> \n> ```\n> 194935b1a2968b594a42cb880e30701dd2e2bc7c is the first bad commit\n> ```\n\nTest was relying on the fact that BlockChecked as synchronous and that commit made it asynchronous. You can switch it to a different synchronous method:\n\n```diff\n--- a/src/test/validationinte",https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-630470943,630470943,
dongcarl,2020-05-18 23:50:26,"Now `p2p_unrequested_blocks.py` is failing. `git-bisect` says: \n```\n1d9f66ea37ac6f22f26013cd57ed75fc04a9481f is the first bad commit\n```\n-----\n\nAs noted in the Google Doc:\n\n> Up to this point, it seems that splitting this commit into:\n> \n> 1. Changing the call semantics of `ProcessNewBlock`\n> 2. Changing the return type to a `std::future`\n> \n> Might make it easier to revi",https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-630493441,630493441,
dongcarl,2020-05-19 19:37:54,"Split up the first commit into:\n\n1. cb178903b0752de3edfd87f6013c2b4de41b6e13 which changes the call semantics of `ProcessNewBlock` and deals with the fallout of that\n2. 7532cf6c56d015e8bae646138d71df825d2684ab which changes the return from a bool to a future of a bool and deals with the fallout of that\n3. 2dcdb537b5c1dce60db217238c5e75dae602e755 which contains changes that are non-obvious ",https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-631038490,631038490,
dongcarl,2020-05-21 22:06:45,Got the unit tests and functional tests to pass!,https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-632370917,632370917,
dongcarl,2021-04-20 15:45:21,Not planning to work on this anytime soon unfortunately.,https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-823380098,823380098,
jnewbery,2021-04-20 16:30:40,"![image](https://user-images.githubusercontent.com/1063656/115432151-f68a7900-a1fd-11eb-9a0e-9a29702d40b4.png)\n\nüôÅ \n\nLet me know if you pick this up again!",https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-823421533,823421533,
ariard,2020-05-22 23:42:31,"I think you should define more difference between validation-state and non-validation-state. Right now peer tracking state is spread among multiple class like `CNode` with `TxRelay` or `CNodeState` and now `CPeerState`. We should have a clear idea of _what_ should go _where_, according to which thread uses it. You should also explain how `CPeerState` aims to reduce `cs_main` contention with regard",https://github.com/bitcoin/bitcoin/pull/18963#discussion_r429490419,429490419,src/net_processing.cpp
ariard,2020-05-22 23:46:53,Is reject here making reference to reject messages ? I think it doesn't make sense anymore post-#15437 and post-#17004. Also you may lay out the expected callback sequence (as we do for `TransactionRemovedFromMempool` in `src/validationinterface.h`). ,https://github.com/bitcoin/bitcoin/pull/18963#discussion_r429491029,429491029,src/net_processing.cpp
ariard,2020-05-22 23:47:32,"Please define more ""housekeeping"".",https://github.com/bitcoin/bitcoin/pull/18963#discussion_r429491095,429491095,src/net_processing.cpp
ariard,2020-05-22 23:48:14,"I'm not sure that BIP152 low-bandwidth authorizes invalid header propagation, maybe precise.",https://github.com/bitcoin/bitcoin/pull/18963#discussion_r429491238,429491238,src/net_processing.cpp
ariard,2020-05-22 23:49:32,Please can you comment on what conditional write is laying on.,https://github.com/bitcoin/bitcoin/pull/18963#discussion_r429491376,429491376,src/validation.cpp
ariard,2020-05-22 23:50:28,You should point where errors are distinguished from invalidity.,https://github.com/bitcoin/bitcoin/pull/18963#discussion_r429491503,429491503,src/validation.cpp
