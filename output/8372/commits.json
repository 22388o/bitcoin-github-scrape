[
  {
    "sha": "2fc83d945a4b44cf152c44535d92349c4643118b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmM4M2Q5NDVhNGI0NGNmMTUyYzQ0NTM1ZDkyMzQ5YzQ2NDMxMThi",
    "commit": {
      "author": {
        "name": "UdjinM6",
        "email": "UdjinM6@dash.org",
        "date": "2016-07-19T14:21:06Z"
      },
      "committer": {
        "name": "UdjinM6",
        "email": "UdjinM6@dash.org",
        "date": "2016-07-19T14:44:19Z"
      },
      "message": "Fix AddRef() usage for CNode",
      "tree": {
        "sha": "bdcfecf7d454d6d0f55cb6fbc98475c8ca0cb320",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdcfecf7d454d6d0f55cb6fbc98475c8ca0cb320"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fc83d945a4b44cf152c44535d92349c4643118b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc83d945a4b44cf152c44535d92349c4643118b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fc83d945a4b44cf152c44535d92349c4643118b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc83d945a4b44cf152c44535d92349c4643118b/comments",
    "author": {
      "login": "UdjinM6",
      "id": 1935069,
      "node_id": "MDQ6VXNlcjE5MzUwNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UdjinM6",
      "html_url": "https://github.com/UdjinM6",
      "followers_url": "https://api.github.com/users/UdjinM6/followers",
      "following_url": "https://api.github.com/users/UdjinM6/following{/other_user}",
      "gists_url": "https://api.github.com/users/UdjinM6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UdjinM6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
      "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
      "repos_url": "https://api.github.com/users/UdjinM6/repos",
      "events_url": "https://api.github.com/users/UdjinM6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "UdjinM6",
      "id": 1935069,
      "node_id": "MDQ6VXNlcjE5MzUwNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UdjinM6",
      "html_url": "https://github.com/UdjinM6",
      "followers_url": "https://api.github.com/users/UdjinM6/followers",
      "following_url": "https://api.github.com/users/UdjinM6/following{/other_user}",
      "gists_url": "https://api.github.com/users/UdjinM6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UdjinM6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
      "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
      "repos_url": "https://api.github.com/users/UdjinM6/repos",
      "events_url": "https://api.github.com/users/UdjinM6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "045106b4f13c1d6f3a4f65d6dddc6ac1e15003bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/045106b4f13c1d6f3a4f65d6dddc6ac1e15003bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/045106b4f13c1d6f3a4f65d6dddc6ac1e15003bb"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 7,
      "deletions": 11
    },
    "files": [
      {
        "sha": "da7b414a369269b3502024334e04479eb0e4db7c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fc83d945a4b44cf152c44535d92349c4643118b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fc83d945a4b44cf152c44535d92349c4643118b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2fc83d945a4b44cf152c44535d92349c4643118b",
        "patch": "@@ -387,10 +387,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure\n         // Look for an existing connection\n         CNode* pnode = FindNode((CService)addrConnect);\n         if (pnode)\n-        {\n-            pnode->AddRef();\n             return pnode;\n-        }\n     }\n \n     /// debug print\n@@ -418,7 +415,6 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure\n             CNode* pnode = FindNode((CService)addrConnect);\n             if (pnode)\n             {\n-                pnode->AddRef();\n                 {\n                     LOCK(cs_vNodes);\n                     if (pnode->addrName.empty()) {\n@@ -433,8 +429,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure\n         addrman.Attempt(addrConnect, fCountFailure);\n \n         // Add node\n-        CNode* pnode = new CNode(hSocket, addrConnect, pszDest ? pszDest : \"\", false);\n-        pnode->AddRef();\n+        CNode* pnode = new CNode(hSocket, addrConnect, pszDest ? pszDest : \"\", false, true);\n \n         {\n             LOCK(cs_vNodes);\n@@ -1072,7 +1067,6 @@ static void AcceptConnection(const ListenSocket& hListenSocket) {\n     }\n \n     CNode* pnode = new CNode(hSocket, addr, \"\", true);\n-    pnode->AddRef();\n     pnode->fWhitelisted = whitelisted;\n \n     LogPrint(\"net\", \"connection from %s accepted\\n\", addr.ToString());\n@@ -1792,7 +1786,6 @@ bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSem\n         return false;\n     if (grantOutbound)\n         grantOutbound->MoveTo(pnode->grantOutbound);\n-    pnode->fNetworkNode = true;\n     if (fOneShot)\n         pnode->fOneShot = true;\n \n@@ -2414,7 +2407,7 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n unsigned int ReceiveFloodSize() { return 1000*GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER); }\n unsigned int SendBufferSize() { return 1000*GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER); }\n \n-CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNameIn, bool fInboundIn) :\n+CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNameIn, bool fInboundIn, bool fNetworkNodeIn) :\n     ssSend(SER_NETWORK, INIT_PROTO_VERSION),\n     addr(addrIn),\n     nKeyedNetGroup(CalculateKeyedNetGroup(addrIn)),\n@@ -2438,7 +2431,7 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n     fOneShot = false;\n     fClient = false; // set by version message\n     fInbound = fInboundIn;\n-    fNetworkNode = false;\n+    fNetworkNode = fNetworkNodeIn;\n     fSuccessfullyConnected = false;\n     fDisconnect = false;\n     nRefCount = 0;\n@@ -2476,6 +2469,9 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n         id = nLastNodeId++;\n     }\n \n+    if(fNetworkNode || fInbound)\n+        AddRef();\n+\n     if (fLogIPs)\n         LogPrint(\"net\", \"Added connection to %s peer=%d\\n\", addrName, id);\n     else"
      },
      {
        "sha": "b2d611778261ac0e6452cc2e6db0a3f534309abc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fc83d945a4b44cf152c44535d92349c4643118b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fc83d945a4b44cf152c44535d92349c4643118b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=2fc83d945a4b44cf152c44535d92349c4643118b",
        "patch": "@@ -443,7 +443,7 @@ class CNode\n     CAmount lastSentFeeFilter;\n     int64_t nextSendTimeFeeFilter;\n \n-    CNode(SOCKET hSocketIn, const CAddress &addrIn, const std::string &addrNameIn = \"\", bool fInboundIn = false);\n+    CNode(SOCKET hSocketIn, const CAddress &addrIn, const std::string &addrNameIn = \"\", bool fInboundIn = false, bool fNetworkNode = false);\n     ~CNode();\n \n private:"
      }
    ]
  }
]