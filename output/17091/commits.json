[
  {
    "sha": "89339d14607434b33cfa343dc75877b62b1dfe0e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTMzOWQxNDYwNzQzNGIzM2NmYTM0M2RjNzU4NzdiNjJiMWRmZTBl",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-10-03T18:53:21Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-10-13T11:09:35Z"
      },
      "message": "tests: Add test for loadblock option",
      "tree": {
        "sha": "50a2cea020329590fded6a26730c1de2874dc5d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50a2cea020329590fded6a26730c1de2874dc5d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89339d14607434b33cfa343dc75877b62b1dfe0e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89339d14607434b33cfa343dc75877b62b1dfe0e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89339d14607434b33cfa343dc75877b62b1dfe0e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89339d14607434b33cfa343dc75877b62b1dfe0e/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 89,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b417ac004d094320c621e51027692cdba7ee3414",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89339d14607434b33cfa343dc75877b62b1dfe0e/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89339d14607434b33cfa343dc75877b62b1dfe0e/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=89339d14607434b33cfa343dc75877b62b1dfe0e",
        "patch": "@@ -45,7 +45,10 @@ DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n \t       $(top_srcdir)/contrib/debian/copyright \\\n \t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/install_db4.sh\n+\t       $(top_srcdir)/contrib/install_db4.sh \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\n DIST_SHARE = \\\n   $(top_srcdir)/share/genbuild.sh \\\n   $(top_srcdir)/share/rpcauth"
      },
      {
        "sha": "bf2a4ff61fac3b8c1511a44f7e5f7f9d8c29ba0c",
        "filename": "test/functional/feature_loadblock.py",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89339d14607434b33cfa343dc75877b62b1dfe0e/test/functional/feature_loadblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89339d14607434b33cfa343dc75877b62b1dfe0e/test/functional/feature_loadblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_loadblock.py?ref=89339d14607434b33cfa343dc75877b62b1dfe0e",
        "patch": "@@ -0,0 +1,84 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test loadblock option\n+\n+Test the option to start a node with the option loadblock which loads\n+a serialized blockchain from a file (usually called bootstrap.dat).\n+To generate that file this test uses the helper scripts available\n+in contrib/linearize.\n+\"\"\"\n+\n+import os\n+import subprocess\n+import sys\n+import tempfile\n+import urllib\n+\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import assert_equal, wait_until\n+\n+\n+class LoadblockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def run_test(self):\n+        self.nodes[1].setnetworkactive(state=False)\n+        self.nodes[0].generate(100)\n+\n+        # Parsing the url of our node to get settings for config file\n+        data_dir = self.nodes[0].datadir\n+        node_url = urllib.parse.urlparse(self.nodes[0].url)\n+        cfg_file = os.path.join(data_dir, \"linearize.cfg\")\n+        bootstrap_file = os.path.join(self.options.tmpdir, \"bootstrap.dat\")\n+        genesis_block = self.nodes[0].getblockhash(0)\n+        blocks_dir = os.path.join(data_dir, \"regtest\", \"blocks\")\n+        hash_list = tempfile.NamedTemporaryFile(dir=data_dir,\n+                                                mode='w',\n+                                                delete=False,\n+                                                encoding=\"utf-8\")\n+\n+        self.log.info(\"Create linearization config file\")\n+        with open(cfg_file, \"a\", encoding=\"utf-8\") as cfg:\n+            cfg.write(\"datadir={}\\n\".format(data_dir))\n+            cfg.write(\"rpcuser={}\\n\".format(node_url.username))\n+            cfg.write(\"rpcpassword={}\\n\".format(node_url.password))\n+            cfg.write(\"port={}\\n\".format(node_url.port))\n+            cfg.write(\"host={}\\n\".format(node_url.hostname))\n+            cfg.write(\"output_file={}\\n\".format(bootstrap_file))\n+            cfg.write(\"max_height=100\\n\")\n+            cfg.write(\"netmagic=fabfb5da\\n\")\n+            cfg.write(\"input={}\\n\".format(blocks_dir))\n+            cfg.write(\"genesis={}\\n\".format(genesis_block))\n+            cfg.write(\"hashlist={}\\n\".format(hash_list.name))\n+\n+        base_dir = self.config[\"environment\"][\"SRCDIR\"]\n+        linearize_dir = os.path.join(base_dir, \"contrib\", \"linearize\")\n+\n+        self.log.info(\"Run linearization of block hashes\")\n+        linearize_hashes_file = os.path.join(linearize_dir, \"linearize-hashes.py\")\n+        subprocess.run([sys.executable, linearize_hashes_file, cfg_file],\n+                       stdout=hash_list,\n+                       check=True)\n+\n+        self.log.info(\"Run linearization of block data\")\n+        linearize_data_file = os.path.join(linearize_dir, \"linearize-data.py\")\n+        subprocess.run([sys.executable, linearize_data_file, cfg_file],\n+                       check=True)\n+\n+        self.log.info(\"Restart second, unsynced node with bootstrap file\")\n+        self.stop_node(1)\n+        self.start_node(1, [\"-loadblock=\" + bootstrap_file])\n+        wait_until(lambda: self.nodes[1].getblockcount() == 100)\n+\n+        assert_equal(self.nodes[1].getblockchaininfo()['blocks'], 100)\n+        assert_equal(self.nodes[0].getbestblockhash(), self.nodes[1].getbestblockhash())\n+\n+\n+if __name__ == '__main__':\n+    LoadblockTest().main()"
      },
      {
        "sha": "e0b523b7187992f8dcde64edf5168a0b4c7f1477",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89339d14607434b33cfa343dc75877b62b1dfe0e/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89339d14607434b33cfa343dc75877b62b1dfe0e/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=89339d14607434b33cfa343dc75877b62b1dfe0e",
        "patch": "@@ -197,6 +197,7 @@\n     'feature_uacomment.py',\n     'wallet_coinbase_category.py',\n     'feature_filelock.py',\n+    'feature_loadblock.py',\n     'p2p_dos_header_tree.py',\n     'p2p_unrequested_blocks.py',\n     'feature_includeconf.py',"
      }
    ]
  }
]