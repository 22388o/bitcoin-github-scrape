[
  {
    "sha": "fab6d060ce5f580db538070beec1c5518c8c777c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI2ZDA2MGNlNWY1ODBkYjUzODA3MGJlZWMxYzU1MThjOGM3Nzdj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-23T18:04:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-13T23:57:50Z"
      },
      "message": "test: Add unregister_validation_interface_race test\n\nThis commit is (intentionally) adding a broken test. The test is broken\nbecause it registering a subscriber object that can go out of scope\nwhile events are still being sent.\n\nTo run the broken test and reproduce the bug:\n  - Remove comment /** and */\n  - ./configure --with-sanitizers=address\n  - export ASAN_OPTIONS=detect_leaks=0\n  - make\n  - while ./src/test/test_bitcoin -t validationinterface_tests/unregister_validation_interface_race --catch_system_errors=no  ; do true; done",
      "tree": {
        "sha": "4afbbf3f6247f21339086523bdad735d20338cc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4afbbf3f6247f21339086523bdad735d20338cc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab6d060ce5f580db538070beec1c5518c8c777c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiZswwAxENGD/8kSEcwYnwqzWASpVHy8/aS1bvCNl5kMFoF656loWhxhB7t79Ex\nWkzFmuew0eUxZYQ3BgBM75kSWlGz2Ajic4LUgtkVMLm2AKTaaMMNxeDiFLiGtBBV\nZ0bslN+oMLpFf3HPOWBlu5YjFbw+zlmYkqalWzceYBwgwsZs+0PJgnvsN1cUjjNv\n0Hbf04cqkUeITam2jpYSy5bd/+2j9xDIj8coUWoJHiORilaemzwWuk7PUAtG8CS0\n9m2osvO1SzNZUQfn1+kl8E38dxvEezg/xOxgGvhpUGNdT4nWs4xNmOrYBRS5ztjn\nRcGn2crrl7kFT7LqCE023kf5yYDXnn44OEk0+xuc7mkpPzw29Qhwupzd+6NH9piO\n2e0/AvgKZLhZykzLMQ2VN2y2Gfg5Ehfv89BR3G+7sLWtwIAflempalEyKpiproM0\nRAgKCJe3E5/NOoX/KKqRxipTVywySD1siSq+wQiuZHdaWJYZkEW16Czh6kgaO9Io\nWi8aqbRo\n=e1g4\n-----END PGP SIGNATURE-----",
        "payload": "tree 4afbbf3f6247f21339086523bdad735d20338cc4\nparent 64139803f1225dab26197a20314109d37fa87d5f\nauthor MarcoFalke <falke.marco@gmail.com> 1587665042 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589414270 -0400\n\ntest: Add unregister_validation_interface_race test\n\nThis commit is (intentionally) adding a broken test. The test is broken\nbecause it registering a subscriber object that can go out of scope\nwhile events are still being sent.\n\nTo run the broken test and reproduce the bug:\n  - Remove comment /** and */\n  - ./configure --with-sanitizers=address\n  - export ASAN_OPTIONS=detect_leaks=0\n  - make\n  - while ./src/test/test_bitcoin -t validationinterface_tests/unregister_validation_interface_race --catch_system_errors=no  ; do true; done\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab6d060ce5f580db538070beec1c5518c8c777c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab6d060ce5f580db538070beec1c5518c8c777c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab6d060ce5f580db538070beec1c5518c8c777c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64139803f1225dab26197a20314109d37fa87d5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64139803f1225dab26197a20314109d37fa87d5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64139803f1225dab26197a20314109d37fa87d5f"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 36,
      "deletions": 0
    },
    "files": [
      {
        "sha": "14f09ae905082f24c168085fa449143d3fe58430",
        "filename": "src/test/validationinterface_tests.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab6d060ce5f580db538070beec1c5518c8c777c/src/test/validationinterface_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab6d060ce5f580db538070beec1c5518c8c777c/src/test/validationinterface_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validationinterface_tests.cpp?ref=fab6d060ce5f580db538070beec1c5518c8c777c",
        "patch": "@@ -12,6 +12,42 @@\n \n BOOST_FIXTURE_TEST_SUITE(validationinterface_tests, TestingSetup)\n \n+/**\n+struct TestSubscriberNoop final : public CValidationInterface {\n+    void BlockChecked(const CBlock&, const BlockValidationState&) override {}\n+};\n+\n+BOOST_AUTO_TEST_CASE(unregister_validation_interface_race)\n+{\n+    std::atomic<bool> generate{true};\n+\n+    // Start thread to generate notifications\n+    std::thread gen{[&] {\n+        const CBlock block_dummy;\n+        const BlockValidationState state_dummy;\n+        while (generate) {\n+            GetMainSignals().BlockChecked(block_dummy, state_dummy);\n+        }\n+    }};\n+\n+    // Start thread to consume notifications\n+    std::thread sub{[&] {\n+        // keep going for about 1 sec, which is 250k iterations\n+        for (int i = 0; i < 250000; i++) {\n+            TestSubscriberNoop sub{};\n+            RegisterValidationInterface(&sub);\n+            UnregisterValidationInterface(&sub);\n+        }\n+        // tell the other thread we are done\n+        generate = false;\n+    }};\n+\n+    gen.join();\n+    sub.join();\n+    BOOST_CHECK(!generate);\n+}\n+*/\n+\n class TestInterface : public CValidationInterface\n {\n public:"
      }
    ]
  },
  {
    "sha": "fa770ce7fe67685c43780e219d8232efbee0bb8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc3MGNlN2ZlNjc2ODVjNDM3ODBlMjE5ZDgyMzJlZmJlZTBiYjhl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-27T14:21:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-13T23:57:55Z"
      },
      "message": "validationinterface: Rework documentation, Rename pwalletIn to callbacks",
      "tree": {
        "sha": "15659864603e7fa40b433a43f0144a616becec48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15659864603e7fa40b433a43f0144a616becec48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa770ce7fe67685c43780e219d8232efbee0bb8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiT1QwAljbnWMgXM4euYXaT69YDZwfkvS3FAWqjAqek91guFeTSCmJqzfR5CQuy\nTfzz4REQ5ZNmMqLZQcuaV+3NL2BQ+RWWvS4cI1QIFjfNZCoq1D03Jri1e6k4bNmy\nUwvC5s+573FkyYQweKYE3cpRY7wz6Tn8WAnDhbGFvg+PQVJyVZQfJzOfFUw5acfc\n0Oil3uKX/lwrhNg8yh5eQyH+dNl9j1pLftEJN+z3opsyXAu9u1ARc43kibyT8m39\n6gBxxj+Y3kkUCaRKYDi/04ki/OlA/Aj+Zvivb5THWLJqy/Y2hfvtc3PAtiuNMYhm\nO+ZpA14iG7kyu8VCwZzyQXyZDpukO6ziQMpJkPmvVXfLFBvnvdlrlZOlS1iAHUiP\nB/cVy1Tx6VQeon6pJa3FmeH8AhqXn9LskUPX/ZU09MIMV0AulRHawmkmYm61TaDA\n2A50wdyC48Q/H7MdplnZVNPZnKyjZbtRad/BiOTy6atgvl+x4m13Gg7QesUbIdCn\nD/P2avf9\n=dHYx\n-----END PGP SIGNATURE-----",
        "payload": "tree 15659864603e7fa40b433a43f0144a616becec48\nparent fab6d060ce5f580db538070beec1c5518c8c777c\nauthor MarcoFalke <falke.marco@gmail.com> 1587997279 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589414275 -0400\n\nvalidationinterface: Rework documentation, Rename pwalletIn to callbacks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa770ce7fe67685c43780e219d8232efbee0bb8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa770ce7fe67685c43780e219d8232efbee0bb8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa770ce7fe67685c43780e219d8232efbee0bb8e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab6d060ce5f580db538070beec1c5518c8c777c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab6d060ce5f580db538070beec1c5518c8c777c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab6d060ce5f580db538070beec1c5518c8c777c"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 29,
      "deletions": 20
    },
    "files": [
      {
        "sha": "9437f9c817ce7b6eb26b7de1e710e6cf24c0318c",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 13,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa770ce7fe67685c43780e219d8232efbee0bb8e/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa770ce7fe67685c43780e219d8232efbee0bb8e/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=fa770ce7fe67685c43780e219d8232efbee0bb8e",
        "patch": "@@ -89,22 +89,26 @@ struct MainSignalsInstance {\n \n static CMainSignals g_signals;\n \n-void CMainSignals::RegisterBackgroundSignalScheduler(CScheduler& scheduler) {\n+void CMainSignals::RegisterBackgroundSignalScheduler(CScheduler& scheduler)\n+{\n     assert(!m_internals);\n     m_internals.reset(new MainSignalsInstance(&scheduler));\n }\n \n-void CMainSignals::UnregisterBackgroundSignalScheduler() {\n+void CMainSignals::UnregisterBackgroundSignalScheduler()\n+{\n     m_internals.reset(nullptr);\n }\n \n-void CMainSignals::FlushBackgroundCallbacks() {\n+void CMainSignals::FlushBackgroundCallbacks()\n+{\n     if (m_internals) {\n         m_internals->m_schedulerClient.EmptyQueue();\n     }\n }\n \n-size_t CMainSignals::CallbacksPending() {\n+size_t CMainSignals::CallbacksPending()\n+{\n     if (!m_internals) return 0;\n     return m_internals->m_schedulerClient.CallbacksPending();\n }\n@@ -114,10 +118,11 @@ CMainSignals& GetMainSignals()\n     return g_signals;\n }\n \n-void RegisterSharedValidationInterface(std::shared_ptr<CValidationInterface> pwalletIn) {\n-    // Each connection captures pwalletIn to ensure that each callback is\n-    // executed before pwalletIn is destroyed. For more details see #18338.\n-    g_signals.m_internals->Register(std::move(pwalletIn));\n+void RegisterSharedValidationInterface(std::shared_ptr<CValidationInterface> callbacks)\n+{\n+    // Each connection captures the shared_ptr to ensure that each callback is\n+    // executed before the subscriber is destroyed. For more details see #18338.\n+    g_signals.m_internals->Register(std::move(callbacks));\n }\n \n void RegisterValidationInterface(CValidationInterface* callbacks)\n@@ -132,24 +137,28 @@ void UnregisterSharedValidationInterface(std::shared_ptr<CValidationInterface> c\n     UnregisterValidationInterface(callbacks.get());\n }\n \n-void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n+void UnregisterValidationInterface(CValidationInterface* callbacks)\n+{\n     if (g_signals.m_internals) {\n-        g_signals.m_internals->Unregister(pwalletIn);\n+        g_signals.m_internals->Unregister(callbacks);\n     }\n }\n \n-void UnregisterAllValidationInterfaces() {\n+void UnregisterAllValidationInterfaces()\n+{\n     if (!g_signals.m_internals) {\n         return;\n     }\n     g_signals.m_internals->Clear();\n }\n \n-void CallFunctionInValidationInterfaceQueue(std::function<void ()> func) {\n+void CallFunctionInValidationInterfaceQueue(std::function<void()> func)\n+{\n     g_signals.m_internals->m_schedulerClient.AddToProcessQueue(std::move(func));\n }\n \n-void SyncWithValidationInterfaceQueue() {\n+void SyncWithValidationInterfaceQueue()\n+{\n     AssertLockNotHeld(cs_main);\n     // Block until the validation queue drains\n     std::promise<void> promise;"
      },
      {
        "sha": "9c23965bc162e259cdfb57b1781bab3737f99115",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa770ce7fe67685c43780e219d8232efbee0bb8e/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa770ce7fe67685c43780e219d8232efbee0bb8e/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=fa770ce7fe67685c43780e219d8232efbee0bb8e",
        "patch": "@@ -22,20 +22,20 @@ class CValidationInterface;\n class uint256;\n class CScheduler;\n \n-// These functions dispatch to one or all registered wallets\n-\n-/** Register a wallet to receive updates from core */\n-void RegisterValidationInterface(CValidationInterface* pwalletIn);\n-/** Unregister a wallet from core */\n-void UnregisterValidationInterface(CValidationInterface* pwalletIn);\n-/** Unregister all wallets from core */\n+/** Register subscriber */\n+void RegisterValidationInterface(CValidationInterface* callbacks);\n+/** Unregister subscriber. DEPRECATED. This is not safe to use when the RPC server or main message handler thread is running. */\n+void UnregisterValidationInterface(CValidationInterface* callbacks);\n+/** Unregister all subscribers */\n void UnregisterAllValidationInterfaces();\n \n // Alternate registration functions that release a shared_ptr after the last\n // notification is sent. These are useful for race-free cleanup, since\n // unregistration is nonblocking and can return before the last notification is\n // processed.\n+/** Register subscriber */\n void RegisterSharedValidationInterface(std::shared_ptr<CValidationInterface> callbacks);\n+/** Unregister subscriber */\n void UnregisterSharedValidationInterface(std::shared_ptr<CValidationInterface> callbacks);\n \n /**"
      }
    ]
  },
  {
    "sha": "fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTVjZWIyNWZjZTIyMDBlZGY2YjhlYmZhNmQ0ZjAxZWQ2Nzc0Yjk1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-27T14:30:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-13T23:58:11Z"
      },
      "message": "test: Remove UninterruptibleSleep from test and replace it by SyncWithValidationInterfaceQueue\n\nFor the purpose of this test the two have the same outcome, but this one\nis shorter and avoids a sleep for 0.1 seconds.",
      "tree": {
        "sha": "b1adfde10c065cc8e746a74789b20466fa57d4bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1adfde10c065cc8e746a74789b20466fa57d4bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgw4AwAtcIjgR/GNa0XyD4XBDJGej7//DXc0psoAV3kCe679dtu5eeOV50CfrHh\nBlqqGmCjD2O+opHwAecp7Ms9Ts5zi8EGuE0MPs10KG5DF4oWCU56u3enG4uFdoYT\nm5n2i76cSgzHIXcd5U2aur01u0twn9lQ2HWB+texqLMI4eA27xpMw75rtxPbJs6c\nXvD1vbCoKJNx0ZA7Sjt7GVwXDVE5G76LHkjTQaIg6Wd5sPgt48VYn9fNpTqo3sxw\niZPzdrx1Vpinz90DwY3AH42i1RxCRzjPP+JHUVa7Fc27sQh9tEYJUmN79WnXMjAH\nS8oa9EKukHubvX8wr/AdObH9eYMPDSWUOM8XiYV+C068HmQMrJm4J5azqOWKE+I2\n41T10pWa1GEPwMHRTEZFkIip0iOu01RuifAEpo/tV0OwA52IThPJrVQF9iIJ7b3u\nyd8NWq3M7IIP6CHj6qATyKGBS/LoVTX1mIalZAPAw4zwwvs/Q8cDGbzsmHhw2TBu\nkn0lA59K\n=Tz4X\n-----END PGP SIGNATURE-----",
        "payload": "tree b1adfde10c065cc8e746a74789b20466fa57d4bf\nparent fa770ce7fe67685c43780e219d8232efbee0bb8e\nauthor MarcoFalke <falke.marco@gmail.com> 1587997816 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589414291 -0400\n\ntest: Remove UninterruptibleSleep from test and replace it by SyncWithValidationInterfaceQueue\n\nFor the purpose of this test the two have the same outcome, but this one\nis shorter and avoids a sleep for 0.1 seconds.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa770ce7fe67685c43780e219d8232efbee0bb8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa770ce7fe67685c43780e219d8232efbee0bb8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa770ce7fe67685c43780e219d8232efbee0bb8e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c026e0f43d0073f22b3ec51c14ab1ebbb2d4ab44",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
        "patch": "@@ -204,9 +204,7 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n     for (auto& t : threads) {\n         t.join();\n     }\n-    while (GetMainSignals().CallbacksPending() > 0) {\n-        UninterruptibleSleep(std::chrono::milliseconds{100});\n-    }\n+    SyncWithValidationInterfaceQueue();\n \n     UnregisterValidationInterface(&sub);\n "
      }
    ]
  },
  {
    "sha": "7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Nzc3ZjJhNGJiMWY5ZDg0M2JjNTBhNGUzNTA4NWNmYmIyODA4Nzgw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-27T14:35:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-13T23:58:20Z"
      },
      "message": "miner: Avoid stack-use-after-return in validationinterface\n\nThis is achieved by switching to a shared_ptr.\n\nAlso, switch the validationinterfaces in the tests to use shared_ptrs\nfor the same reason.",
      "tree": {
        "sha": "a4bde70689d7d39b7e551d18ff62260265b8cde8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4bde70689d7d39b7e551d18ff62260265b8cde8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgxXwv/SjhG9qTsfpevhYZwfzDXJQcLDMd1Tv/pD3MRUg5aB7zEVO2jtxy864WK\nBwiXJLyH6XIcAEmiFBaFntIO+8L+oSDC4CAQUteQy/hCJGAjSeKgBy/tnm7/ibaY\nBlHt8T9TG4aQFSN5EzaCM5zI55pDap1T73EqlgR1aKLYRCQ/krj/Z1pwO0J53wRJ\n+Zc+U6rgWiDfyC5lUr0CAb5mCckP3rr477uBruyehMlalnmTvBXsQPNuTDWcheRf\nh0pS8iZorGWbBklOA+ByjBQB5UdaHFhQHYKiLnunjUTdHL7bovODGKlWKHFZDRWK\nc+MxX7dZZDDgiODuLF1P4Egbl/Srupj/vZiFPkMkfVylFC3POTq9q/PCqKROgrUB\nNk2/HCdorY9of1ByAh1K0TjyQvQaRcbQMWBI/nDuHtLrzdbX16Oh+DOYVqOQKM4q\nY22cG690RY/ijc6kbuTQDUr2nXv5FOgPOwkXYq/ihXEzwBomSO4HZYL67SYTuHpO\nlaq4alo4\n=ZJ4P\n-----END PGP SIGNATURE-----",
        "payload": "tree a4bde70689d7d39b7e551d18ff62260265b8cde8\nparent fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95\nauthor MarcoFalke <falke.marco@gmail.com> 1587998132 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589414300 -0400\n\nminer: Avoid stack-use-after-return in validationinterface\n\nThis is achieved by switching to a shared_ptr.\n\nAlso, switch the validationinterfaces in the tests to use shared_ptrs\nfor the same reason.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5ceb25fce2200edf6b8ebfa6d4f01ed6774b95"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 14,
      "deletions": 16
    },
    "files": [
      {
        "sha": "8e752e5e83e23ddacf4b3a005c10ebcb5e1b39b9",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
        "patch": "@@ -874,7 +874,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     return result;\n }\n \n-class submitblock_StateCatcher : public CValidationInterface\n+class submitblock_StateCatcher final : public CValidationInterface\n {\n public:\n     uint256 hash;\n@@ -942,17 +942,17 @@ static UniValue submitblock(const JSONRPCRequest& request)\n     }\n \n     bool new_block;\n-    submitblock_StateCatcher sc(block.GetHash());\n-    RegisterValidationInterface(&sc);\n+    auto sc = std::make_shared<submitblock_StateCatcher>(block.GetHash());\n+    RegisterSharedValidationInterface(sc);\n     bool accepted = ProcessNewBlock(Params(), blockptr, /* fForceProcessing */ true, /* fNewBlock */ &new_block);\n-    UnregisterValidationInterface(&sc);\n+    UnregisterSharedValidationInterface(sc);\n     if (!new_block && accepted) {\n         return \"duplicate\";\n     }\n-    if (!sc.found) {\n+    if (!sc->found) {\n         return \"inconclusive\";\n     }\n-    return BIP22ValidationResult(sc.state);\n+    return BIP22ValidationResult(sc->state);\n }\n \n static UniValue submitheader(const JSONRPCRequest& request)"
      },
      {
        "sha": "eed26511dd0d2bda759120a2729d8e81bc6ff6f4",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
        "patch": "@@ -32,7 +32,7 @@ struct MinerTestingSetup : public RegTestingSetup {\n \n BOOST_FIXTURE_TEST_SUITE(validation_block_tests, MinerTestingSetup)\n \n-struct TestSubscriber : public CValidationInterface {\n+struct TestSubscriber final : public CValidationInterface {\n     uint256 m_expected_tip;\n \n     explicit TestSubscriber(uint256 tip) : m_expected_tip(tip) {}\n@@ -175,8 +175,8 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n         LOCK(cs_main);\n         initial_tip = ::ChainActive().Tip();\n     }\n-    TestSubscriber sub(initial_tip->GetBlockHash());\n-    RegisterValidationInterface(&sub);\n+    auto sub = std::make_shared<TestSubscriber>(initial_tip->GetBlockHash());\n+    RegisterSharedValidationInterface(sub);\n \n     // create a bunch of threads that repeatedly process a block generated above at random\n     // this will create parallelism and randomness inside validation - the ValidationInterface\n@@ -206,10 +206,10 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n     }\n     SyncWithValidationInterfaceQueue();\n \n-    UnregisterValidationInterface(&sub);\n+    UnregisterSharedValidationInterface(sub);\n \n     LOCK(cs_main);\n-    BOOST_CHECK_EQUAL(sub.m_expected_tip, ::ChainActive().Tip()->GetBlockHash());\n+    BOOST_CHECK_EQUAL(sub->m_expected_tip, ::ChainActive().Tip()->GetBlockHash());\n }\n \n /**"
      },
      {
        "sha": "d2fc20e625afaff0f262cf6ee0437cdaccb2791a",
        "filename": "src/test/validationinterface_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/src/test/validationinterface_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7777f2a4bb1f9d843bc50a4e35085cfbb2808780/src/test/validationinterface_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validationinterface_tests.cpp?ref=7777f2a4bb1f9d843bc50a4e35085cfbb2808780",
        "patch": "@@ -12,7 +12,6 @@\n \n BOOST_FIXTURE_TEST_SUITE(validationinterface_tests, TestingSetup)\n \n-/**\n struct TestSubscriberNoop final : public CValidationInterface {\n     void BlockChecked(const CBlock&, const BlockValidationState&) override {}\n };\n@@ -34,9 +33,9 @@ BOOST_AUTO_TEST_CASE(unregister_validation_interface_race)\n     std::thread sub{[&] {\n         // keep going for about 1 sec, which is 250k iterations\n         for (int i = 0; i < 250000; i++) {\n-            TestSubscriberNoop sub{};\n-            RegisterValidationInterface(&sub);\n-            UnregisterValidationInterface(&sub);\n+            auto sub = std::make_shared<TestSubscriberNoop>();\n+            RegisterSharedValidationInterface(sub);\n+            UnregisterSharedValidationInterface(sub);\n         }\n         // tell the other thread we are done\n         generate = false;\n@@ -46,7 +45,6 @@ BOOST_AUTO_TEST_CASE(unregister_validation_interface_race)\n     sub.join();\n     BOOST_CHECK(!generate);\n }\n-*/\n \n class TestInterface : public CValidationInterface\n {"
      }
    ]
  }
]