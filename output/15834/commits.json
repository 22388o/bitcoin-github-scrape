[
  {
    "sha": "218697b645b23249c16afa29b4ada20c1739c502",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTg2OTdiNjQ1YjIzMjQ5YzE2YWZhMjliNGFkYTIwYzE3MzljNTAy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-22T16:17:20Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-26T13:31:29Z"
      },
      "message": "Improve NOTFOUND comment",
      "tree": {
        "sha": "e68fbaf22cf0682a09b999a2702a3611784baf52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e68fbaf22cf0682a09b999a2702a3611784baf52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/218697b645b23249c16afa29b4ada20c1739c502",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/218697b645b23249c16afa29b4ada20c1739c502",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/218697b645b23249c16afa29b4ada20c1739c502",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/218697b645b23249c16afa29b4ada20c1739c502/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c9de67f343c0e740a7f488e85270d519a352119",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c9de67f343c0e740a7f488e85270d519a352119",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c9de67f343c0e740a7f488e85270d519a352119"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f76e5d64a06a5f459e94fd2b15c2c565aaf00ca7",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/218697b645b23249c16afa29b4ada20c1739c502/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/218697b645b23249c16afa29b4ada20c1739c502/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=218697b645b23249c16afa29b4ada20c1739c502",
        "patch": "@@ -1455,12 +1455,19 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n \n     if (!vNotFound.empty()) {\n         // Let the peer know that we didn't find what it asked for, so it doesn't\n-        // have to wait around forever. Currently only SPV clients actually care\n-        // about this message: it's needed when they are recursively walking the\n-        // dependencies of relevant unconfirmed transactions. SPV clients want to\n-        // do that because they want to know about (and store and rebroadcast and\n-        // risk analyze) the dependencies of transactions relevant to them, without\n-        // having to download the entire memory pool.\n+        // have to wait around forever.\n+        // SPV clients care about this message: it's needed when they are\n+        // recursively walking the dependencies of relevant unconfirmed\n+        // transactions. SPV clients want to do that because they want to know\n+        // about (and store and rebroadcast and risk analyze) the dependencies\n+        // of transactions relevant to them, without having to download the\n+        // entire memory pool.\n+        // Also, other nodes can use these messages to automatically request a\n+        // transaction from some other peer that annnounced it, and stop\n+        // waiting for us to respond.\n+        // In normal operation, we often send NOTFOUND messages for parents of\n+        // transactions that we relay; if a peer is missing a parent, they may\n+        // assume we have them and request the parents from us.\n         connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::NOTFOUND, vNotFound));\n     }\n }"
      }
    ]
  },
  {
    "sha": "23163b759354b84c5a076e3e2ae6ae6338106035",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzE2M2I3NTkzNTRiODRjNWEwNzZlM2UyYWU2YWU2MzM4MTA2MDM1",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-22T16:10:16Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-26T13:31:29Z"
      },
      "message": "Add an explicit memory bound to m_tx_process_time\n\nPreviously there was an implicit bound based on the handling of m_tx_announced,\nbut that approach is error-prone (particularly if we start automatically\nremoving things from that set).",
      "tree": {
        "sha": "44da565b74c90b224afac37d70c35ade4a69fb78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44da565b74c90b224afac37d70c35ade4a69fb78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23163b759354b84c5a076e3e2ae6ae6338106035",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23163b759354b84c5a076e3e2ae6ae6338106035",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23163b759354b84c5a076e3e2ae6ae6338106035",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23163b759354b84c5a076e3e2ae6ae6338106035/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "218697b645b23249c16afa29b4ada20c1739c502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/218697b645b23249c16afa29b4ada20c1739c502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/218697b645b23249c16afa29b4ada20c1739c502"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f114981cc7d15528efedc13105ed7aeba4fb7dff",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23163b759354b84c5a076e3e2ae6ae6338106035/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23163b759354b84c5a076e3e2ae6ae6338106035/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=23163b759354b84c5a076e3e2ae6ae6338106035",
        "patch": "@@ -699,7 +699,9 @@ void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LO\n void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n-    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS ||\n+            peer_download_state.m_tx_process_time.size() >= MAX_PEER_TX_ANNOUNCEMENTS ||\n+            peer_download_state.m_tx_announced.count(txid)) {\n         // Too many queued announcements from this peer, or we already have\n         // this announcement\n         return;"
      }
    ]
  },
  {
    "sha": "e32e08407e2781d881b9da92aa06494525ddd085",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzJlMDg0MDdlMjc4MWQ4ODFiOWRhOTJhYTA2NDk0NTI1ZGRkMDg1",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-16T19:13:29Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-26T13:31:29Z"
      },
      "message": "Remove NOTFOUND transactions from in-flight data structures\n\nThis prevents a bug where the in-flight queue for our peers will not be\ndrained, resulting in not downloading any new transactions from our peers.\n\nThanks to ajtowns for reporting this bug.",
      "tree": {
        "sha": "87e2a7e7e9885eea8445c6d2f559727e680909b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87e2a7e7e9885eea8445c6d2f559727e680909b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e32e08407e2781d881b9da92aa06494525ddd085",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e32e08407e2781d881b9da92aa06494525ddd085",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e32e08407e2781d881b9da92aa06494525ddd085",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e32e08407e2781d881b9da92aa06494525ddd085/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23163b759354b84c5a076e3e2ae6ae6338106035",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23163b759354b84c5a076e3e2ae6ae6338106035",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23163b759354b84c5a076e3e2ae6ae6338106035"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 21,
      "deletions": 2
    },
    "files": [
      {
        "sha": "60e16bc413d5a59942adf6ddf099a5a26d05c2bf",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e32e08407e2781d881b9da92aa06494525ddd085/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e32e08407e2781d881b9da92aa06494525ddd085/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e32e08407e2781d881b9da92aa06494525ddd085",
        "patch": "@@ -3120,8 +3120,27 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     }\n \n     if (strCommand == NetMsgType::NOTFOUND) {\n-        // We do not care about the NOTFOUND message, but logging an Unknown Command\n-        // message would be undesirable as we transmit it ourselves.\n+        // Remove the NOTFOUND transactions from the peer\n+        LOCK(cs_main);\n+        CNodeState *state = State(pfrom->GetId());\n+        std::vector<CInv> vInv;\n+        vRecv >> vInv;\n+        if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+            for (CInv &inv : vInv) {\n+                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX) {\n+                    // If we receive a NOTFOUND message for a txid we requested, erase\n+                    // it from our data structures for this peer.\n+                    auto in_flight_it = state->m_tx_download.m_tx_in_flight.find(inv.hash);\n+                    if (in_flight_it == state->m_tx_download.m_tx_in_flight.end()) {\n+                        // Skip any further work if this is a spurious NOTFOUND\n+                        // message.\n+                        continue;\n+                    }\n+                    state->m_tx_download.m_tx_in_flight.erase(in_flight_it);\n+                    state->m_tx_download.m_tx_announced.erase(inv.hash);\n+                }\n+            }\n+        }\n         return true;\n     }\n "
      }
    ]
  },
  {
    "sha": "f635a3ba118aeaf172534f9f802721a6ef07cafc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjM1YTNiYTExOGFlYWYxNzI1MzRmOWY4MDI3MjFhNmVmMDdjYWZj",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-16T19:48:55Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-05-28T20:22:10Z"
      },
      "message": "Expire old entries from the in-flight tx map\n\nIf a peer hasn't responded to a getdata request, eventually time out the request\nand remove it from the in-flight data structures.  This is to prevent any bugs in\nour handling of those in-flight data structures from filling up the in-flight\nmap and preventing us from requesting more transactions (such as the NOTFOUND\nbug, fixed in a previous commit).\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>",
      "tree": {
        "sha": "a6dfb9d887728b591446de14177a982ba277a63d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6dfb9d887728b591446de14177a982ba277a63d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f635a3ba118aeaf172534f9f802721a6ef07cafc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f635a3ba118aeaf172534f9f802721a6ef07cafc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f635a3ba118aeaf172534f9f802721a6ef07cafc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f635a3ba118aeaf172534f9f802721a6ef07cafc/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e32e08407e2781d881b9da92aa06494525ddd085",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e32e08407e2781d881b9da92aa06494525ddd085",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e32e08407e2781d881b9da92aa06494525ddd085"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 32,
      "deletions": 6
    },
    "files": [
      {
        "sha": "979f3c146c718c74154c2924bed1b8dc3699d9b9",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 6,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f635a3ba118aeaf172534f9f802721a6ef07cafc/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f635a3ba118aeaf172534f9f802721a6ef07cafc/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=f635a3ba118aeaf172534f9f802721a6ef07cafc",
        "patch": "@@ -70,11 +70,13 @@ static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n /** How many microseconds to delay requesting transactions from inbound peers */\n-static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n+static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000; // 2 seconds\n /** How long to wait (in microseconds) before downloading a transaction from an additional peer */\n-static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n+static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000; // 1 minute\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n-static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000;\n+static constexpr int64_t MAX_GETDATA_RANDOM_DELAY = 2 * 1000000; // 2 seconds\n+/** How long to wait (in microseconds) before expiring an in-flight getdata request to a peer */\n+static constexpr int64_t TX_EXPIRY_INTERVAL = 10 * GETDATA_TX_INTERVAL;\n static_assert(INBOUND_PEER_TX_DELAY >= MAX_GETDATA_RANDOM_DELAY,\n \"To preserve security, MAX_GETDATA_RANDOM_DELAY should not exceed INBOUND_PEER_DELAY\");\n /** Limit to avoid sending big packets. Not used in processing incoming GETDATA for compatibility */\n@@ -345,8 +347,11 @@ struct CNodeState {\n         //! Store all the transactions a peer has recently announced\n         std::set<uint256> m_tx_announced;\n \n-        //! Store transactions which were requested by us\n-        std::set<uint256> m_tx_in_flight;\n+        //! Store transactions which were requested by us, with timestamp\n+        std::map<uint256, int64_t> m_tx_in_flight;\n+\n+        //! Periodically check for stuck getdata requests\n+        int64_t m_check_expiry_timer{0};\n     };\n \n     TxDownloadState m_tx_download;\n@@ -3939,6 +3944,27 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n+\n+        // For robustness, expire old requests after a long timeout, so that\n+        // we can resume downloading transactions from a peer even if they\n+        // were unresponsive in the past.\n+        // Eventually we should consider disconnecting peers, but this is\n+        // conservative.\n+        if (state.m_tx_download.m_check_expiry_timer <= nNow) {\n+            for (auto it=state.m_tx_download.m_tx_in_flight.begin(); it != state.m_tx_download.m_tx_in_flight.end();) {\n+                if (it->second <= nNow - TX_EXPIRY_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"timeout of inflight tx %s from peer=%d\\n\", it->first.ToString(), pto->GetId());\n+                    state.m_tx_download.m_tx_announced.erase(it->first);\n+                    state.m_tx_download.m_tx_in_flight.erase(it++);\n+                } else {\n+                    ++it;\n+                }\n+            }\n+            // On average, we do this check every TX_EXPIRY_INTERVAL. Randomize\n+            // so that we're not doing this for all peers at the same time.\n+            state.m_tx_download.m_check_expiry_timer = nNow + TX_EXPIRY_INTERVAL/2 + GetRand(TX_EXPIRY_INTERVAL);\n+        }\n+\n         auto& tx_process_time = state.m_tx_download.m_tx_process_time;\n         while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_tx_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n             const uint256& txid = tx_process_time.begin()->second;\n@@ -3955,7 +3981,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                         vGetData.clear();\n                     }\n                     UpdateTxRequestTime(inv.hash, nNow);\n-                    state.m_tx_download.m_tx_in_flight.insert(inv.hash);\n+                    state.m_tx_download.m_tx_in_flight.emplace(inv.hash, nNow);\n                 } else {\n                     // This transaction is in flight from someone else; queue\n                     // up processing to happen after the download times out"
      }
    ]
  },
  {
    "sha": "308b76732f97020c86977e29c854e8e27262cf7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDhiNzY3MzJmOTcwMjBjODY5NzdlMjljODU0ZThlMjcyNjJjZjdj",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-04-22T18:13:30Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2019-05-28T20:22:10Z"
      },
      "message": "Fix bug around transaction requests\n\nIf a transaction is already in-flight when a peer announces a new tx to us, we\nschedule a time in the future to reconsider whether to download. At that future\ntime, there was a bug that would prevent transactions from being rescheduled\nfor potential download again (ie if the transaction was still in-flight at the\ntime of reconsideration, such as from some other peer). Fix this.",
      "tree": {
        "sha": "db32ba135185490d45b61f0d766d73b1aebfb2e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db32ba135185490d45b61f0d766d73b1aebfb2e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/308b76732f97020c86977e29c854e8e27262cf7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/308b76732f97020c86977e29c854e8e27262cf7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/308b76732f97020c86977e29c854e8e27262cf7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/308b76732f97020c86977e29c854e8e27262cf7c/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f635a3ba118aeaf172534f9f802721a6ef07cafc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f635a3ba118aeaf172534f9f802721a6ef07cafc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f635a3ba118aeaf172534f9f802721a6ef07cafc"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 27,
      "deletions": 16
    },
    "files": [
      {
        "sha": "1ed7058811ad3a719798f946cbb35f8921f0c3c5",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 16,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/308b76732f97020c86977e29c854e8e27262cf7c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/308b76732f97020c86977e29c854e8e27262cf7c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=308b76732f97020c86977e29c854e8e27262cf7c",
        "patch": "@@ -700,6 +700,24 @@ void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LO\n     }\n }\n \n+int64_t CalculateTxGetDataTime(const uint256& txid, int64_t current_time, bool use_inbound_delay) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        process_time = current_time;\n+    } else {\n+        // Randomize the delay to avoid biasing some peers over others (such as due to\n+        // fixed ordering of peer processing in ThreadMessageHandler)\n+        process_time = last_request_time + GETDATA_TX_INTERVAL + GetRand(MAX_GETDATA_RANDOM_DELAY);\n+    }\n+\n+    // We delay processing announcements from inbound peers\n+    if (use_inbound_delay) process_time += INBOUND_PEER_TX_DELAY;\n+\n+    return process_time;\n+}\n \n void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n@@ -713,19 +731,9 @@ void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_L\n     }\n     peer_download_state.m_tx_announced.insert(txid);\n \n-    int64_t process_time;\n-    int64_t last_request_time = GetTxRequestTime(txid);\n-    // First time requesting this tx\n-    if (last_request_time == 0) {\n-        process_time = nNow;\n-    } else {\n-        // Randomize the delay to avoid biasing some peers over others (such as due to\n-        // fixed ordering of peer processing in ThreadMessageHandler)\n-        process_time = last_request_time + GETDATA_TX_INTERVAL + GetRand(MAX_GETDATA_RANDOM_DELAY);\n-    }\n-\n-    // We delay processing announcements from non-preferred (eg inbound) peers\n-    if (!state->fPreferredDownload) process_time += INBOUND_PEER_TX_DELAY;\n+    // Calculate the time to try requesting this transaction. Use\n+    // fPreferredDownload as a proxy for outbound peers.\n+    int64_t process_time = CalculateTxGetDataTime(txid, nNow, !state->fPreferredDownload);\n \n     peer_download_state.m_tx_process_time.emplace(process_time, txid);\n }\n@@ -3967,7 +3975,10 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n \n         auto& tx_process_time = state.m_tx_download.m_tx_process_time;\n         while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_tx_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n-            const uint256& txid = tx_process_time.begin()->second;\n+            const uint256 txid = tx_process_time.begin()->second;\n+            // Erase this entry from tx_process_time (it may be added back for\n+            // processing at a later time, see below)\n+            tx_process_time.erase(tx_process_time.begin());\n             CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n             if (!AlreadyHave(inv)) {\n                 // If this transaction was last requested more than 1 minute ago,\n@@ -3987,14 +3998,14 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                     // up processing to happen after the download times out\n                     // (with a slight delay for inbound peers, to prefer\n                     // requests to outbound peers).\n-                    RequestTx(&state, txid, nNow);\n+                    int64_t next_process_time = CalculateTxGetDataTime(txid, nNow, !state.fPreferredDownload);\n+                    tx_process_time.emplace(next_process_time, txid);\n                 }\n             } else {\n                 // We have already seen this transaction, no need to download.\n                 state.m_tx_download.m_tx_announced.erase(inv.hash);\n                 state.m_tx_download.m_tx_in_flight.erase(inv.hash);\n             }\n-            tx_process_time.erase(tx_process_time.begin());\n         }\n \n "
      }
    ]
  }
]