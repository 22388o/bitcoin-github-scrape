[
  {
    "sha": "fa1e69e52bf8de08b1ce7a774416aa7a8d20068b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFlNjllNTJiZjhkZTA4YjFjZTdhNzc0NDE2YWE3YThkMjAwNjhi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-17T01:16:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-17T21:44:32Z"
      },
      "message": "qa: Sync with validationinterface queue in sync_mempools",
      "tree": {
        "sha": "1ea4464d1cf8ebb220977146936ab743f16e4445",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ea4464d1cf8ebb220977146936ab743f16e4445"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66e3af709dd444b2d85e15c56f4608c700ff82ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66e3af709dd444b2d85e15c56f4608c700ff82ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66e3af709dd444b2d85e15c56f4608c700ff82ee"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 21,
      "deletions": 1
    },
    "files": [
      {
        "sha": "346672e45a900095155d47a620c4343721fac58c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fa1e69e52bf8de08b1ce7a774416aa7a8d20068b",
        "patch": "@@ -24,6 +24,7 @@\n #include <util.h>\n #include <utilstrencodings.h>\n #include <hash.h>\n+#include <validationinterface.h>\n #include <warnings.h>\n \n #include <stdint.h>\n@@ -323,6 +324,21 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue syncwithvalidationinterfacequeue(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 0) {\n+        throw std::runtime_error(\n+            \"syncwithvalidationinterfacequeue\\n\"\n+            \"\\nWaits for the validation interface queue to catch up on everything that was there when we entered this function.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"syncwithvalidationinterfacequeue\",\"\")\n+            + HelpExampleRpc(\"syncwithvalidationinterfacequeue\",\"\")\n+        );\n+    }\n+    SyncWithValidationInterfaceQueue();\n+    return NullUniValue;\n+}\n+\n UniValue getdifficulty(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n@@ -1628,6 +1644,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        {\"timeout\"} },\n     { \"hidden\",             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n     { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n+    { \"hidden\",             \"syncwithvalidationinterfacequeue\", &syncwithvalidationinterfacequeue, {} },\n };\n \n void RegisterBlockchainRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "7fdc17133225d1affd1967c96db08bb3c6d57a55",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1e69e52bf8de08b1ce7a774416aa7a8d20068b/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fa1e69e52bf8de08b1ce7a774416aa7a8d20068b",
        "patch": "@@ -390,7 +390,7 @@ def sync_chain(rpc_connections, *, wait=1, timeout=60):\n         timeout -= wait\n     raise AssertionError(\"Chain sync failed: Best block hashes don't match\")\n \n-def sync_mempools(rpc_connections, *, wait=1, timeout=60):\n+def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n@@ -402,6 +402,9 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60):\n             if set(rpc_connections[i].getrawmempool()) == pool:\n                 num_match = num_match + 1\n         if num_match == len(rpc_connections):\n+            if flush_scheduler:\n+                for r in rpc_connections:\n+                    r.syncwithvalidationinterfacequeue()\n             return\n         time.sleep(wait)\n         timeout -= wait"
      }
    ]
  }
]