sipa,2013-05-21T02:18:30Z,"test conditions: on my VPS, a bitcoind patched to ignore the dust filtering and free relay limiting, and sending a ""mempool"" to every peer at connect time, waited until poolsz >5000, then measure getblocktemplate RPC latency. Result: 10-20s without this patch, 0.5-0.7s with this patch.\n\nEDIT: up to 1.0-1.5s after running for several hours (poolsz still ~5000).\n",https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18185364,18185364,
BitcoinPullTester,2013-05-21T02:30:15Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2ec349bc420d7f4541bf91acf8b830377a1421f3 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18185669,18185669,
gyver,2013-05-21T21:26:49Z,I'm not familiar enough with the code and the template structure to know what is possible so please bear with my uneducated suggestion.\n\nWould it make sense to have part of the template being computed asynchronously?\nHave a thread wake up regularly and build a base structure with a snapshot of the tx available. When a call to getblocktemplate or other RPC functions scaling in o(nb_tx) or worse ,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18242132,18242132,
gmaxwell,2013-05-21T21:29:27Z,@gyver Thats what miner software should and (some) does do.  .. but at some point you need to compute the data... and it's good if it's not a slow and expensive operation.\n,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18242271,18242271,
jgarzik,2013-05-21T21:42:42Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18243098,18243098,
gyver,2013-05-21T21:43:49Z,@gmaxwell of course I agree speeding up the actual computation is desirable.\n\nI was wondering if it wouldn't make sense to implement this async technique in bitcoind itself. For example I suspect (again: uninformed guess) that slow calls to getmininginfo and getblocktemplate use the same access pattern to an internal tx structure and could benefit from the same optimization (at least they became,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18243282,18243282,
gyver,2013-05-21T22:11:49Z,@gmaxwell still thinking about your suggestion and focusing on how miner software can optimize their latency when a new block is accepted by the local node. The miner doesn't want to use an old cached template to avoid wasting work but can't simply call getblocktemplate naively if it wants a fast reply (event after a new block there can be and often is a lot of transactions to include in a templat,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18245264,18245264,
gmaxwell,2013-05-21T22:18:21Z,@gyver Eloipool is free software an implements the optimizations you appear to be describing there. (precomputed empty templates and such).\n,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18245577,18245577,
gyver,2013-05-21T22:26:52Z,@gmaxwell thanks for the pointer. Was already in my large bag of source code to read but moved near the top of the pile :)\n,https://github.com/bitcoin/bitcoin/pull/2677#issuecomment-18245961,18245961,
