[
  {
    "sha": "2ec349bc420d7f4541bf91acf8b830377a1421f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWMzNDliYzQyMGQ3ZjQ1NDFiZjkxYWNmOGI4MzAzNzdhMTQyMWYz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2013-05-21T00:36:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2013-05-21T01:53:32Z"
      },
      "message": "CreateNewBlock performance improvements",
      "tree": {
        "sha": "aff02045dc8588076202f559a581a23f00859786",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aff02045dc8588076202f559a581a23f00859786"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ec349bc420d7f4541bf91acf8b830377a1421f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ec349bc420d7f4541bf91acf8b830377a1421f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ec349bc420d7f4541bf91acf8b830377a1421f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ec349bc420d7f4541bf91acf8b830377a1421f3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3702f127fdcd9dd6787112a05c11b80607367b39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3702f127fdcd9dd6787112a05c11b80607367b39",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3702f127fdcd9dd6787112a05c11b80607367b39"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 10,
      "deletions": 20
    },
    "files": [
      {
        "sha": "2d22541bafb32de51742f193882555e89dd7a548",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 19,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ec349bc420d7f4541bf91acf8b830377a1421f3/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ec349bc420d7f4541bf91acf8b830377a1421f3/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2ec349bc420d7f4541bf91acf8b830377a1421f3",
        "patch": "@@ -1342,7 +1342,7 @@ unsigned int CTransaction::GetP2SHSigOpCount(CCoinsViewCache& inputs) const\n     return nSigOps;\n }\n \n-bool CTransaction::UpdateCoins(CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight, const uint256 &txhash) const\n+void CTransaction::UpdateCoins(CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight, const uint256 &txhash) const\n {\n     // mark inputs spent\n     if (!IsCoinBase()) {\n@@ -1356,8 +1356,6 @@ bool CTransaction::UpdateCoins(CValidationState &state, CCoinsViewCache &inputs,\n \n     // add outputs\n     assert(inputs.SetCoins(txhash, CCoins(*this, nHeight)));\n-\n-    return true;\n }\n \n bool CTransaction::HaveInputs(CCoinsViewCache &inputs) const\n@@ -1683,8 +1681,7 @@ bool CBlock::ConnectBlock(CValidationState &state, CBlockIndex* pindex, CCoinsVi\n         }\n \n         CTxUndo txundo;\n-        if (!tx.UpdateCoins(state, view, txundo, pindex->nHeight, GetTxHash(i)))\n-            return error(\"ConnectBlock() : UpdateInputs failed\");\n+        tx.UpdateCoins(state, view, txundo, pindex->nHeight, GetTxHash(i));\n         if (!tx.IsCoinBase())\n             blockundo.vtxundo.push_back(txundo);\n \n@@ -4233,8 +4230,7 @@ CBlockTemplate* CreateNewBlock(CReserveKey& reservekey)\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n             {\n                 // Read prev transaction\n-                CCoins coins;\n-                if (!view.GetCoins(txin.prevout.hash, coins))\n+                if (!view.HaveCoins(txin.prevout.hash))\n                 {\n                     // This should never happen; all transactions in the memory\n                     // pool should connect to either transactions in the chain\n@@ -4261,6 +4257,7 @@ CBlockTemplate* CreateNewBlock(CReserveKey& reservekey)\n                     nTotalIn += mempool.mapTx[txin.prevout.hash].vout[txin.prevout.n].nValue;\n                     continue;\n                 }\n+                const CCoins &coins = view.GetCoins(txin.prevout.hash);\n \n                 int64 nValueIn = coins.vout[txin.prevout.n].nValue;\n                 nTotalIn += nValueIn;\n@@ -4308,9 +4305,6 @@ CBlockTemplate* CreateNewBlock(CReserveKey& reservekey)\n             std::pop_heap(vecPriority.begin(), vecPriority.end(), comparer);\n             vecPriority.pop_back();\n \n-            // second layer cached modifications just for this transaction\n-            CCoinsViewCache viewTemp(view, true);\n-\n             // Size limits\n             unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n             if (nBlockSize + nTxSize >= nBlockMaxSize)\n@@ -4335,26 +4329,22 @@ CBlockTemplate* CreateNewBlock(CReserveKey& reservekey)\n                 std::make_heap(vecPriority.begin(), vecPriority.end(), comparer);\n             }\n \n-            if (!tx.HaveInputs(viewTemp))\n+            if (!tx.HaveInputs(view))\n                 continue;\n \n-            int64 nTxFees = tx.GetValueIn(viewTemp)-tx.GetValueOut();\n+            int64 nTxFees = tx.GetValueIn(view)-tx.GetValueOut();\n \n-            nTxSigOps += tx.GetP2SHSigOpCount(viewTemp);\n+            nTxSigOps += tx.GetP2SHSigOpCount(view);\n             if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n                 continue;\n \n             CValidationState state;\n-            if (!tx.CheckInputs(state, viewTemp, true, SCRIPT_VERIFY_P2SH))\n+            if (!tx.CheckInputs(state, view, true, SCRIPT_VERIFY_P2SH))\n                 continue;\n \n             CTxUndo txundo;\n             uint256 hash = tx.GetHash();\n-            if (!tx.UpdateCoins(state, viewTemp, txundo, pindexPrev->nHeight+1, hash))\n-                continue;\n-\n-            // push changes from the second layer cache to the first one\n-            viewTemp.Flush();\n+            tx.UpdateCoins(state, view, txundo, pindexPrev->nHeight+1, hash);\n \n             // Added\n             pblock->vtx.push_back(tx);"
      },
      {
        "sha": "8e71e66cc8344fd3dfec7f52b94caf7c757728be",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ec349bc420d7f4541bf91acf8b830377a1421f3/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ec349bc420d7f4541bf91acf8b830377a1421f3/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=2ec349bc420d7f4541bf91acf8b830377a1421f3",
        "patch": "@@ -659,7 +659,7 @@ class CTransaction\n                      std::vector<CScriptCheck> *pvChecks = NULL) const;\n \n     // Apply the effects of this transaction on the UTXO set represented by view\n-    bool UpdateCoins(CValidationState &state, CCoinsViewCache &view, CTxUndo &txundo, int nHeight, const uint256 &txhash) const;\n+    void UpdateCoins(CValidationState &state, CCoinsViewCache &view, CTxUndo &txundo, int nHeight, const uint256 &txhash) const;\n \n     // Context-independent validity checks\n     bool CheckTransaction(CValidationState &state) const;"
      }
    ]
  }
]