[
  {
    "sha": "ffe83123eb5d095ae0597f5e0e918564bb10306b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmU4MzEyM2ViNWQwOTVhZTA1OTdmNWUwZTkxODU2NGJiMTAzMDZi",
    "commit": {
      "author": {
        "name": "Miguel Herranz",
        "email": "miguel@ipglider.org",
        "date": "2018-11-17T14:09:23Z"
      },
      "committer": {
        "name": "Miguel Herranz",
        "email": "miguel@ipglider.org",
        "date": "2018-11-17T14:09:23Z"
      },
      "message": "Check for invalid prefixes in config file",
      "tree": {
        "sha": "0a9fda8c780bc3cc26d69349c2205d36cb754171",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a9fda8c780bc3cc26d69349c2205d36cb754171"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffe83123eb5d095ae0597f5e0e918564bb10306b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffe83123eb5d095ae0597f5e0e918564bb10306b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffe83123eb5d095ae0597f5e0e918564bb10306b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffe83123eb5d095ae0597f5e0e918564bb10306b/comments",
    "author": {
      "login": "IPGlider",
      "id": 54533,
      "node_id": "MDQ6VXNlcjU0NTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IPGlider",
      "html_url": "https://github.com/IPGlider",
      "followers_url": "https://api.github.com/users/IPGlider/followers",
      "following_url": "https://api.github.com/users/IPGlider/following{/other_user}",
      "gists_url": "https://api.github.com/users/IPGlider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IPGlider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IPGlider/subscriptions",
      "organizations_url": "https://api.github.com/users/IPGlider/orgs",
      "repos_url": "https://api.github.com/users/IPGlider/repos",
      "events_url": "https://api.github.com/users/IPGlider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IPGlider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "IPGlider",
      "id": 54533,
      "node_id": "MDQ6VXNlcjU0NTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/54533?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IPGlider",
      "html_url": "https://github.com/IPGlider",
      "followers_url": "https://api.github.com/users/IPGlider/followers",
      "following_url": "https://api.github.com/users/IPGlider/following{/other_user}",
      "gists_url": "https://api.github.com/users/IPGlider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IPGlider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IPGlider/subscriptions",
      "organizations_url": "https://api.github.com/users/IPGlider/orgs",
      "repos_url": "https://api.github.com/users/IPGlider/repos",
      "events_url": "https://api.github.com/users/IPGlider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IPGlider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35739976c1d9ad250ece573980c57e7e7976ae23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35739976c1d9ad250ece573980c57e7e7976ae23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35739976c1d9ad250ece573980c57e7e7976ae23"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 32,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78e1e9b8ae79d60dc41901e53c76bc9e7c39b153",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffe83123eb5d095ae0597f5e0e918564bb10306b/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffe83123eb5d095ae0597f5e0e918564bb10306b/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=ffe83123eb5d095ae0597f5e0e918564bb10306b",
        "patch": "@@ -523,6 +523,19 @@ bool ArgsManager::IsArgNegated(const std::string& strArg) const\n     return false;\n }\n \n+bool ArgsManager::IsPrefixKnown(const std::string& key) const\n+{\n+    const size_t option_index = key.find('.');\n+\n+    if (option_index == std::string::npos) {\n+        return true;\n+    }\n+\n+    const std::string prefix = key.substr(0, option_index);\n+\n+    return valid_prefixes.find(prefix) != valid_prefixes.end();\n+}\n+\n std::string ArgsManager::GetArg(const std::string& strArg, const std::string& strDefault) const\n {\n     if (IsArgNegated(strArg)) return \"0\";\n@@ -877,6 +890,18 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, std::string& error, boo\n             m_config_args[strKey].push_back(strValue);\n         }\n \n+        // Check that the prefix is known\n+        if (!IsPrefixKnown(option.first)) {\n+            const std::string prefix = option.first.substr(0, option.first.find('.'));\n+\n+            if (!ignore_invalid_keys) {\n+                error = strprintf(\"Invalid configuration prefix %s in value %s\", prefix, option.first.c_str());\n+                return false;\n+            } else {\n+                LogPrintf(\"Ignoring configuration value %s with unknown configuration prefix %s\\n\", option.first, prefix);\n+            }\n+        }\n+\n         // Check that the arg is known\n         if (!IsArgKnown(strKey)) {\n             if (!ignore_invalid_keys) {"
      },
      {
        "sha": "5be144a944696610e4a5e22aac8aa5a8c5654148",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffe83123eb5d095ae0597f5e0e918564bb10306b/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffe83123eb5d095ae0597f5e0e918564bb10306b/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=ffe83123eb5d095ae0597f5e0e918564bb10306b",
        "patch": "@@ -150,6 +150,8 @@ class ArgsManager\n     std::set<std::string> m_network_only_args GUARDED_BY(cs_args);\n     std::map<OptionsCategory, std::map<std::string, Arg>> m_available_args GUARDED_BY(cs_args);\n \n+    const std::set<std::string> valid_prefixes = {\"main\", \"test\", \"regtest\"};\n+\n     bool ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys = false);\n \n public:\n@@ -278,6 +280,11 @@ class ArgsManager\n      * Check whether we know of this arg\n      */\n     bool IsArgKnown(const std::string& key) const;\n+\n+    /**\n+     * Check whether we know of this prefix\n+     */\n+    bool IsPrefixKnown(const std::string& key) const;\n };\n \n extern ArgsManager gArgs;"
      }
    ]
  }
]