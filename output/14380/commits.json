[
  {
    "sha": "b06483c96a83af3f7721d01c4cafe3edf5909552",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDY0ODNjOTZhODNhZjNmNzcyMWQwMWM0Y2FmZTNlZGY1OTA5NTUy",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-10-03T05:40:47Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-11-12T18:10:54Z"
      },
      "message": "Remove stale comment in CalculateMaximumSignedInputSize",
      "tree": {
        "sha": "f69c1e9ce5aac93ae5bd72d9db5029b181cd9fd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f69c1e9ce5aac93ae5bd72d9db5029b181cd9fd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b06483c96a83af3f7721d01c4cafe3edf5909552",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b06483c96a83af3f7721d01c4cafe3edf5909552",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b06483c96a83af3f7721d01c4cafe3edf5909552",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b06483c96a83af3f7721d01c4cafe3edf5909552/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90c0b6aca2da0e15bd0575d583a167723f9cebed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90c0b6aca2da0e15bd0575d583a167723f9cebed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90c0b6aca2da0e15bd0575d583a167723f9cebed"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "79e3b5b22ba43225d7dfaf0e9a3feaa454e60fb3",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b06483c96a83af3f7721d01c4cafe3edf5909552/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b06483c96a83af3f7721d01c4cafe3edf5909552/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b06483c96a83af3f7721d01c4cafe3edf5909552",
        "patch": "@@ -1530,8 +1530,6 @@ int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* wallet,\n     CMutableTransaction txn;\n     txn.vin.push_back(CTxIn(COutPoint()));\n     if (!wallet->DummySignInput(txn.vin[0], txout, use_max_sig)) {\n-        // This should never happen, because IsAllFromMe(ISMINE_SPENDABLE)\n-        // implies that we can sign for every input.\n         return -1;\n     }\n     return GetVirtualTransactionInputSize(txn.vin[0]);"
      }
    ]
  },
  {
    "sha": "0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZmIyZTY5ODE1YmQ1MTQ2ZTYwMWE3ZmQzNTg1ZjIxYTFmZGQ2ZjVk",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-10-03T05:41:03Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-11-12T18:12:09Z"
      },
      "message": "CreateTransaction: Assume minimum p2sh-p2wpkh spend size for unknown change",
      "tree": {
        "sha": "acfb980599ed7acc72c31292bb56e67e32841e46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acfb980599ed7acc72c31292bb56e67e32841e46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b06483c96a83af3f7721d01c4cafe3edf5909552",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b06483c96a83af3f7721d01c4cafe3edf5909552",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b06483c96a83af3f7721d01c4cafe3edf5909552"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 59,
      "deletions": 1
    },
    "files": [
      {
        "sha": "623c5c39a212effcc468bea648a731e4c76f0be4",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
        "patch": "@@ -17,6 +17,7 @@\n #include <validation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/test/wallet_test_fixture.h>\n+#include <policy/policy.h>\n \n #include <boost/test/unit_test.hpp>\n #include <univalue.h>\n@@ -394,4 +395,47 @@ BOOST_FIXTURE_TEST_CASE(wallet_disableprivkeys, TestChain100Setup)\n     BOOST_CHECK(!wallet->GetKeyFromPool(pubkey, false));\n }\n \n+// Explicit calculation which is used to test the wallet constant\n+// We get the same virtual size due to rounding(weight/4) for both use_max_sig values\n+static size_t CalculateNestedKeyhashInputSize(bool use_max_sig)\n+{\n+    // Generate ephemeral valid pubkey\n+    CKey key;\n+    key.MakeNewKey(true);\n+    CPubKey pubkey = key.GetPubKey();\n+\n+    // Generate pubkey hash\n+    uint160 key_hash(Hash160(pubkey.begin(), pubkey.end()));\n+\n+    // Create inner-script to enter into keystore. Key hash can't be 0...\n+    CScript inner_script = CScript() << OP_0 << std::vector<unsigned char>(key_hash.begin(), key_hash.end());\n+\n+    // Create outer P2SH script for the output\n+    uint160 script_id(Hash160(inner_script.begin(), inner_script.end()));\n+    CScript script_pubkey = CScript() << OP_HASH160 << std::vector<unsigned char>(script_id.begin(), script_id.end()) << OP_EQUAL;\n+\n+    // Add inner-script to key store and key to watchonly\n+    CBasicKeyStore keystore;\n+    keystore.AddCScript(inner_script);\n+    keystore.AddKeyPubKey(key, pubkey);\n+\n+    // Fill in dummy signatures for fee calculation.\n+    SignatureData sig_data;\n+\n+    if (!ProduceSignature(keystore, use_max_sig ? DUMMY_MAXIMUM_SIGNATURE_CREATOR : DUMMY_SIGNATURE_CREATOR, script_pubkey, sig_data)) {\n+        // We're hand-feeding it correct arguments; shouldn't happen\n+        assert(false);\n+    }\n+\n+    CTxIn tx_in;\n+    UpdateInput(tx_in, sig_data);\n+    return (size_t)GetVirtualTransactionInputSize(tx_in);\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n+{\n+    BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(false), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n+    BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "eff94455db80406e1138a35f48ff40cd47b4491c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
        "patch": "@@ -2753,7 +2753,14 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                 if (pick_new_inputs) {\n                     nValueIn = 0;\n                     setCoins.clear();\n-                    coin_selection_params.change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+                    // as lower-bound to allow BnB to do it's thing\n+                    if (change_spend_size == -1) {\n+                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+                    } else {\n+                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+                    }\n                     coin_selection_params.effective_fee = nFeeRateNeeded;\n                     if (!SelectCoins(vAvailableCoins, nValueToSelect, setCoins, nValueIn, coin_control, coin_selection_params, bnb_used))\n                     {"
      },
      {
        "sha": "4291163bea94a0232e020968d350d4fb39bf8353",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
        "patch": "@@ -85,6 +85,9 @@ static const bool DEFAULT_WALLET_RBF = false;\n static const bool DEFAULT_WALLETBROADCAST = true;\n static const bool DEFAULT_DISABLE_WALLET = false;\n \n+//! Pre-calculated constants for input size estimation in *virtual size*\n+static constexpr size_t DUMMY_NESTED_P2WPKH_INPUT_SIZE = 91;\n+\n class CBlockIndex;\n class CCoinControl;\n class COutput;"
      },
      {
        "sha": "c651abcfb4096236a7b1729166cea2c3a100cba8",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=0fb2e69815bd5146e601a7fd3585f21a1fdd6f5d",
        "patch": "@@ -207,6 +207,10 @@ def run_test(self):\n             assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n+        # Make sure change address wallet does not have P2SH innerscript access to results in success\n+        # when attempting BnB coin selection\n+        self.nodes[0].walletcreatefundedpsbt([], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"changeAddress\":self.nodes[1].getnewaddress()}, False)\n+\n         # Regression test for 14473 (mishandling of already-signed witness transaction):\n         psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}])\n         complete_psbt = self.nodes[0].walletprocesspsbt(psbtx_info[\"psbt\"])"
      }
    ]
  }
]