[
  {
    "sha": "c38c49d0b708cf948eb46e0857eb743cda09980c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzhjNDlkMGI3MDhjZjk0OGViNDZlMDg1N2ViNzQzY2RhMDk5ODBj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-15T15:17:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-27T12:47:54Z"
      },
      "message": "Fix argument parsing oddity with -noX\n\n`bitcoind -X -noX` ends up, unintuitively, with `X` set.\n(for all boolean options X)\n\nThis result is due to the odd two-pass processing of arguments. This\npatch fixes this oddity and simplifies the code at the same time.",
      "tree": {
        "sha": "99b7a6a7d0b2e02b381a90cb8cd4be74fe0fb77e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99b7a6a7d0b2e02b381a90cb8cd4be74fe0fb77e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c38c49d0b708cf948eb46e0857eb743cda09980c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38c49d0b708cf948eb46e0857eb743cda09980c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c38c49d0b708cf948eb46e0857eb743cda09980c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38c49d0b708cf948eb46e0857eb743cda09980c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca37e0f33980a1fe96ac4ed08fd7d692a7a592a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca37e0f33980a1fe96ac4ed08fd7d692a7a592a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca37e0f33980a1fe96ac4ed08fd7d692a7a592a5"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 30,
      "deletions": 39
    },
    "files": [
      {
        "sha": "eb61a2884d9f909f9e648bb74c04dd414814c729",
        "filename": "src/test/getarg_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38c49d0b708cf948eb46e0857eb743cda09980c/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38c49d0b708cf948eb46e0857eb743cda09980c/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=c38c49d0b708cf948eb46e0857eb743cda09980c",
        "patch": "@@ -60,18 +60,18 @@ BOOST_AUTO_TEST_CASE(boolarg)\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n-    ResetArgs(\"-foo -nofoo\");  // -foo should win\n-    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n-    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n-\n-    ResetArgs(\"-foo=1 -nofoo=1\");  // -foo should win\n-    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n-    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+    ResetArgs(\"-foo -nofoo\");  // -nofoo should win\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n-    ResetArgs(\"-foo=0 -nofoo=0\");  // -foo should win\n+    ResetArgs(\"-foo=1 -nofoo=1\");  // -nofoo should win\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n+    ResetArgs(\"-foo=0 -nofoo=0\");  // -nofoo=0 should win\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+\n     // New 0.6 feature: treat -- same as -:\n     ResetArgs(\"--foo=1\");\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n@@ -150,9 +150,9 @@ BOOST_AUTO_TEST_CASE(boolargno)\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n \n-    ResetArgs(\"-foo --nofoo\");\n-    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n-    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n+    ResetArgs(\"-foo --nofoo\"); // --nofoo should win\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n+    BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n \n     ResetArgs(\"-nofoo -foo\"); // foo always wins:\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));"
      },
      {
        "sha": "a7ec740de8c86922540b2a2d170a788ad79bdf8e",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 28,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38c49d0b708cf948eb46e0857eb743cda09980c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38c49d0b708cf948eb46e0857eb743cda09980c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=c38c49d0b708cf948eb46e0857eb743cda09980c",
        "patch": "@@ -315,18 +315,21 @@ int LogPrintStr(const std::string &str)\n     return ret;\n }\n \n-static void InterpretNegativeSetting(string name, map<string, string>& mapSettingsRet)\n+/** Interpret string as boolean, for argument parsing */\n+static bool InterpretBool(const std::string& strValue)\n {\n-    // interpret -nofoo as -foo=0 (and -nofoo=0 as -foo=1) as long as -foo not set\n-    if (name.find(\"-no\") == 0)\n+    if (strValue.empty())\n+        return true;\n+    return (atoi(strValue) != 0);\n+}\n+\n+/** Turn -noX into -X=0 */\n+static void InterpretNegativeSetting(std::string& strKey, std::string& strValue)\n+{\n+    if (strKey.length()>3 && strKey[0]=='-' && strKey[1]=='n' && strKey[2]=='o')\n     {\n-        std::string positive(\"-\");\n-        positive.append(name.begin()+3, name.end());\n-        if (mapSettingsRet.count(positive) == 0)\n-        {\n-            bool value = !GetBoolArg(name, false);\n-            mapSettingsRet[positive] = (value ? \"1\" : \"0\");\n-        }\n+        strKey = \"-\" + strKey.substr(3);\n+        strValue = InterpretBool(strValue) ? \"0\" : \"1\";\n     }\n }\n \n@@ -358,17 +361,11 @@ void ParseParameters(int argc, const char* const argv[])\n         // If both --foo and -foo are set, the last takes effect.\n         if (str.length() > 1 && str[1] == '-')\n             str = str.substr(1);\n+        InterpretNegativeSetting(str, strValue);\n \n         mapArgs[str] = strValue;\n         mapMultiArgs[str].push_back(strValue);\n     }\n-\n-    // New 0.6 features:\n-    BOOST_FOREACH(const PAIRTYPE(string,string)& entry, mapArgs)\n-    {\n-        // interpret -nofoo as -foo=0 (and -nofoo=0 as -foo=1) as long as -foo not set\n-        InterpretNegativeSetting(entry.first, mapArgs);\n-    }\n }\n \n std::string GetArg(const std::string& strArg, const std::string& strDefault)\n@@ -388,11 +385,7 @@ int64_t GetArg(const std::string& strArg, int64_t nDefault)\n bool GetBoolArg(const std::string& strArg, bool fDefault)\n {\n     if (mapArgs.count(strArg))\n-    {\n-        if (mapArgs[strArg].empty())\n-            return true;\n-        return (atoi(mapArgs[strArg]) != 0);\n-    }\n+        return InterpretBool(mapArgs[strArg]);\n     return fDefault;\n }\n \n@@ -543,13 +536,11 @@ void ReadConfigFile(map<string, string>& mapSettingsRet,\n     {\n         // Don't overwrite existing settings so command line settings override bitcoin.conf\n         string strKey = string(\"-\") + it->string_key;\n+        string strValue = it->value[0];\n+        InterpretNegativeSetting(strKey, strValue);\n         if (mapSettingsRet.count(strKey) == 0)\n-        {\n-            mapSettingsRet[strKey] = it->value[0];\n-            // interpret nofoo=1 as foo=0 (and nofoo=0 as foo=1) as long as foo not set)\n-            InterpretNegativeSetting(strKey, mapSettingsRet);\n-        }\n-        mapMultiSettingsRet[strKey].push_back(it->value[0]);\n+            mapSettingsRet[strKey] = strValue;\n+        mapMultiSettingsRet[strKey].push_back(strValue);\n     }\n     // If datadir is changed in .conf file:\n     ClearDatadirCache();"
      }
    ]
  },
  {
    "sha": "c6455c77ab90910bf4c03005fb0a7dfe785e7087",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjQ1NWM3N2FiOTA5MTBiZjRjMDMwMDVmYjBhN2RmZTc4NWU3MDg3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-27T12:54:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-27T12:55:15Z"
      },
      "message": "doc: mention change to option parsing behavior in release notes",
      "tree": {
        "sha": "68c75f17e52d83ab9f60926c912d2820edfd02f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68c75f17e52d83ab9f60926c912d2820edfd02f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6455c77ab90910bf4c03005fb0a7dfe785e7087",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6455c77ab90910bf4c03005fb0a7dfe785e7087",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6455c77ab90910bf4c03005fb0a7dfe785e7087",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6455c77ab90910bf4c03005fb0a7dfe785e7087/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c38c49d0b708cf948eb46e0857eb743cda09980c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38c49d0b708cf948eb46e0857eb743cda09980c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c38c49d0b708cf948eb46e0857eb743cda09980c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "db6c28972d8ec4a9c532f65af7ae75612fd5296c",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6455c77ab90910bf4c03005fb0a7dfe785e7087/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6455c77ab90910bf4c03005fb0a7dfe785e7087/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=c6455c77ab90910bf4c03005fb0a7dfe785e7087",
        "patch": "@@ -27,6 +27,14 @@ Low-level RPC API changes\n   advantage if a JSON library insists on using a lossy floating point type for\n   numbers, which would be dangerous for monetary amounts.\n \n+Option parsing behavior\n+-----------------------\n+\n+Command line options are now parsed strictly in the order in which they are\n+specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n+set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n+other software, the last specified value for an option will hold.\n+\n 0.12.0 Change log\n =================\n "
      }
    ]
  }
]