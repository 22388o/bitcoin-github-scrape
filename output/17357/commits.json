[
  {
    "sha": "85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWEzNGIxNjgzMjMzMDYwYzQ1MDBjZmI4ZTNmNWQ4NGM4YjhmMGRh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-05T08:25:00Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-05T09:23:44Z"
      },
      "message": "tests: Move CaseInsensitiveEqual to test/util/str",
      "tree": {
        "sha": "c486a5cd2f774b060d41bb4043ad27f37b694bb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c486a5cd2f774b060d41bb4043ad27f37b694bb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "463eab5e1418a592036e7bf9bf46f66fe6462435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/463eab5e1418a592036e7bf9bf46f66fe6462435",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/463eab5e1418a592036e7bf9bf46f66fe6462435"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 37,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b467591c3cd749d02b4bb16a467320b995ee824c",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
        "patch": "@@ -60,7 +60,9 @@ BITCOIN_TEST_SUITE = \\\n   test/lib/transaction_utils.cpp \\\n   test/main.cpp \\\n   test/setup_common.h \\\n-  test/setup_common.cpp\n+  test/setup_common.cpp \\\n+  test/util/str.h \\\n+  test/util/str.cpp\n \n FUZZ_SUITE = \\\n   test/setup_common.h \\"
      },
      {
        "sha": "a1dabee57910adebc5148cee9436033b8d824674",
        "filename": "src/test/bech32_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/test/bech32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/test/bech32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bech32_tests.cpp?ref=85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
        "patch": "@@ -4,24 +4,12 @@\n \n #include <bech32.h>\n #include <test/setup_common.h>\n+#include <test/util/str.h>\n \n #include <boost/test/unit_test.hpp>\n \n BOOST_FIXTURE_TEST_SUITE(bech32_tests, BasicTestingSetup)\n \n-static bool CaseInsensitiveEqual(const std::string &s1, const std::string &s2)\n-{\n-    if (s1.size() != s2.size()) return false;\n-    for (size_t i = 0; i < s1.size(); ++i) {\n-        char c1 = s1[i];\n-        if (c1 >= 'A' && c1 <= 'Z') c1 -= ('A' - 'a');\n-        char c2 = s2[i];\n-        if (c2 >= 'A' && c2 <= 'Z') c2 -= ('A' - 'a');\n-        if (c1 != c2) return false;\n-    }\n-    return true;\n-}\n-\n BOOST_AUTO_TEST_CASE(bip173_testvectors_valid)\n {\n     static const std::string CASES[] = {"
      },
      {
        "sha": "c517fe44d9cb365f118e94ea5cba0e3514753983",
        "filename": "src/test/util/str.cpp",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/test/util/str.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/test/util/str.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/str.cpp?ref=85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/str.h>\n+\n+#include <cstdint>\n+#include <string>\n+\n+bool CaseInsensitiveEqual(const std::string& s1, const std::string& s2)\n+{\n+    if (s1.size() != s2.size()) return false;\n+    for (size_t i = 0; i < s1.size(); ++i) {\n+        char c1 = s1[i];\n+        if (c1 >= 'A' && c1 <= 'Z') c1 -= ('A' - 'a');\n+        char c2 = s2[i];\n+        if (c2 >= 'A' && c2 <= 'Z') c2 -= ('A' - 'a');\n+        if (c1 != c2) return false;\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "63629501e85eb36bfe08c7d06f8ed12eaadf1616",
        "filename": "src/test/util/str.h",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/test/util/str.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85a34b1683233060c4500cfb8e3f5d84c8b8f0da/src/test/util/str.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/str.h?ref=85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
        "patch": "@@ -0,0 +1,12 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEST_UTIL_STR_H\n+#define BITCOIN_TEST_UTIL_STR_H\n+\n+#include <string>\n+\n+bool CaseInsensitiveEqual(const std::string& s1, const std::string& s2);\n+\n+#endif // BITCOIN_TEST_UTIL_STR_H"
      }
    ]
  },
  {
    "sha": "b7541705d0abfbddf682a0134f3fa8a8e1d06cdf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzU0MTcwNWQwYWJmYmRkZjY4MmEwMTM0ZjNmYThhOGUxZDA2Y2Rm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-05T09:18:27Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-05T09:23:44Z"
      },
      "message": "tests: Add fuzzing harness for Bech32 encoding/decoding",
      "tree": {
        "sha": "02b0e4db554798ba96d4f6932e9b6bfba3defbd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02b0e4db554798ba96d4f6932e9b6bfba3defbd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85a34b1683233060c4500cfb8e3f5d84c8b8f0da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85a34b1683233060c4500cfb8e3f5d84c8b8f0da"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 55,
      "deletions": 3
    },
    "files": [
      {
        "sha": "36f474ea981e20df2019cf0a35af6006c48ef616",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=b7541705d0abfbddf682a0134f3fa8a8e1d06cdf",
        "patch": "@@ -7,6 +7,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/address_deserialize \\\n   test/fuzz/addrman_deserialize \\\n   test/fuzz/banentry_deserialize \\\n+  test/fuzz/bech32 \\\n   test/fuzz/block_deserialize \\\n   test/fuzz/blockheader_deserialize \\\n   test/fuzz/blocklocator_deserialize \\\n@@ -65,11 +66,13 @@ BITCOIN_TEST_SUITE = \\\n   test/util/str.cpp\n \n FUZZ_SUITE = \\\n-  test/setup_common.h \\\n-  test/setup_common.cpp \\\n   test/fuzz/fuzz.cpp \\\n   test/fuzz/fuzz.h \\\n-  test/fuzz/FuzzedDataProvider.h\n+  test/fuzz/FuzzedDataProvider.h \\\n+  test/setup_common.cpp \\\n+  test/setup_common.h \\\n+  test/util/str.cpp \\\n+  test/util/str.h\n \n FUZZ_SUITE_LD_COMMON = \\\n  $(LIBBITCOIN_SERVER) \\\n@@ -242,6 +245,12 @@ test_fuzz_banentry_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_banentry_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_banentry_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_bech32_SOURCES = $(FUZZ_SUITE) test/fuzz/bech32.cpp\n+test_fuzz_bech32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_bech32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_bech32_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_bech32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_txundo_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_txundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXUNDO_DESERIALIZE=1\n test_fuzz_txundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "8b91f9bc96ffbfa903d810b03d19ae000c4729a0",
        "filename": "src/test/fuzz/bech32.cpp",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf/src/test/fuzz/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7541705d0abfbddf682a0134f3fa8a8e1d06cdf/src/test/fuzz/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/bech32.cpp?ref=b7541705d0abfbddf682a0134f3fa8a8e1d06cdf",
        "patch": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bech32.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string random_string(buffer.begin(), buffer.end());\n+    const std::pair<std::string, std::vector<uint8_t>> r1 = bech32::Decode(random_string);\n+    if (r1.first.empty()) {\n+        assert(r1.second.empty());\n+    } else {\n+        const std::string& hrp = r1.first;\n+        const std::vector<uint8_t>& data = r1.second;\n+        const std::string reencoded = bech32::Encode(hrp, data);\n+        assert(CaseInsensitiveEqual(random_string, reencoded));\n+    }\n+\n+    std::vector<unsigned char> input;\n+    ConvertBits<8, 5, true>([&](unsigned char c) { input.push_back(c); }, buffer.begin(), buffer.end());\n+    const std::string encoded = bech32::Encode(\"bc\", input);\n+    assert(!encoded.empty());\n+\n+    const std::pair<std::string, std::vector<uint8_t>> r2 = bech32::Decode(encoded);\n+    if (r2.first.empty()) {\n+        assert(r2.second.empty());\n+    } else {\n+        const std::string& hrp = r2.first;\n+        const std::vector<uint8_t>& data = r2.second;\n+        assert(hrp == \"bc\");\n+        assert(data == input);\n+    }\n+}"
      }
    ]
  }
]