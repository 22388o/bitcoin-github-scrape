DrahtBot,2019-11-03 02:13:07,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17229](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17229.html) (tests: Add fuzzing harnesses for various Ba",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549098218,549098218,
jonatack,2019-11-04 11:19:58,"When I try to test this, `make` fails with:\n```\nCXXLD    test/fuzz/address_deserialize\n/usr/bin/ld: libbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): in function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::~UniqueLock()':\n/home/jon/projects/bitcoin/bitcoin/src/./sync.h:168: undefined reference to `LeaveCritical()'\nclang: error: linker command failed with",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549311269,549311269,
MarcoFalke,2019-11-04 12:53:18,Have you tried a `make distclean` before `./configure`?,https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549339731,549339731,
practicalswift,2019-11-04 13:22:04,"@jonatack What @MarcoFalke said :) \n\nI've now updated OP with `make distclean; ./autogen.sh`. Will use that in the ""how to test this PR template"" in future OP:s for fuzzing PR:s.\n\n```\n$ make distclean\n$ ./autogen.sh\n$ CC=clang CXX=clang++ ./configure --enable-fuzz \\n      --with-sanitizers=address,fuzzer,undefined\n$ make\n$ src/test/fuzz/bech32\nâ€¦\n```",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549350426,549350426,
jonatack,2019-11-04 20:03:45,"It looks like that solved it. Thanks!\n\nHow long does the test run -- until it's interrupted?\n```\n$ src/test/fuzz/bech32\nINFO: Seed: 2164764235\nINFO: Loaded 1 modules   (506453 inline 8-bit counters): 506453 [0x559733d74988, 0x559733df03dd), \nINFO: Loaded 1 PC tables (506453 PCs): 506453 [0x559733df03e0,0x5597345aa930), \nINFO: -max_len is not provided; libFuzzer will not generate in",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549523712,549523712,
practicalswift,2019-11-04 20:12:24,"@jonasnick Yes, libFuzzer runs until interrupted :)  \n\nPass `-max_total_time=60` to run the fuzzer during 60 seconds, and `-help=1` to list all other libFuzzer options.\n\nRecommended setup:\n\n```\n$ mkdir -p generated-test-corpus/\n$ src/test/fuzz/bech32 -max_total_time=60 generated-test-corpus/\n$ # now go into generated-test-corpus/ and investigate the generated test corpus :)\n```",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549526961,549526961,
jonasnick,2019-11-04 20:19:34,"Thank you @practicalswift, I almost lost my mind trying to figure out libFuzzer today.",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549529437,549529437,
practicalswift,2019-11-04 20:25:37,Sorry - wrong Jonas/Jon. Was meaning to mention @jonatack :),https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549531470,549531470,
practicalswift,2019-11-05 11:45:54,@MarcoFalke Feedback addressed! Please re-review :),https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-549789200,549789200,
jonatack,2019-11-06 12:56:55,"I'm seeing appveyor failures:\n```\nbech32_tests.obj : error LNK2001: unresolved external symbol ""bool __cdecl CaseInsensitiveEqual\n```",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-550297470,550297470,
ryanofsky,2019-11-06 13:42:12,"> I'm seeing appveyor failures:\n\nAppveyor error is presumably caused by this PR and fixed by https://github.com/bitcoin/bitcoin/pull/17384#issuecomment-550305021",https://github.com/bitcoin/bitcoin/pull/17357#issuecomment-550313710,550313710,
MarcoFalke,2019-11-04 20:35:06,This is only used in tests? Could move to `src/test/util/str`?,https://github.com/bitcoin/bitcoin/pull/17357#discussion_r342257010,342257010,src/util/strencodings.h
MarcoFalke,2019-11-04 21:03:30,could remove?,https://github.com/bitcoin/bitcoin/pull/17357#discussion_r342268650,342268650,test/fuzz/test_runner.py
jonatack,2019-11-05 15:10:08,"Can remove?\n```diff\n+#include <cstdint>\n+#include <string>\n+#include <utility>\n+#include <vector>\n```",https://github.com/bitcoin/bitcoin/pull/17357#discussion_r342616000,342616000,src/test/fuzz/bech32.cpp
practicalswift,2019-11-05 16:33:15,"We are supposed to include what we use according to the developer notes :)\n\n> Every .cpp and .h file should #include every header file it directly uses classes, functions or other definitions from, even if those headers are already included indirectly through other headers.\n> \n> Rationale: Excluding headers because they are already indirectly included results in compilation failures when t",https://github.com/bitcoin/bitcoin/pull/17357#discussion_r342664444,342664444,src/test/fuzz/bech32.cpp
jonatack,2019-11-05 16:56:14,Oh right. Thanks for the reminder :),https://github.com/bitcoin/bitcoin/pull/17357#discussion_r342677622,342677622,src/test/fuzz/bech32.cpp
