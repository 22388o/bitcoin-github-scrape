[
  {
    "sha": "f8393504205089112cdec27ac1829282b76b94a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODM5MzUwNDIwNTA4OTExMmNkZWMyN2FjMTgyOTI4MmI3NmI5NGEz",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2016-09-09T11:43:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-23T10:42:00Z"
      },
      "message": "Do not shadow in src/qt",
      "tree": {
        "sha": "c38c196ef0873e372b63066f5e8b31e0f6e82b97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c38c196ef0873e372b63066f5e8b31e0f6e82b97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8393504205089112cdec27ac1829282b76b94a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8393504205089112cdec27ac1829282b76b94a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8393504205089112cdec27ac1829282b76b94a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8393504205089112cdec27ac1829282b76b94a3/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26b370a93700d81ab92b528c3194bd90234b07ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26b370a93700d81ab92b528c3194bd90234b07ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26b370a93700d81ab92b528c3194bd90234b07ce"
      }
    ],
    "stats": {
      "total": 432,
      "additions": 216,
      "deletions": 216
    },
    "files": [
      {
        "sha": "58cf4dede046ec9d293e56d4dea333d1deda2dc6",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -21,12 +21,12 @@\n #include <QMessageBox>\n #include <QSortFilterProxyModel>\n \n-AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode mode, Tabs tab, QWidget *parent) :\n+AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode _mode, Tabs _tab, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::AddressBookPage),\n     model(0),\n-    mode(mode),\n-    tab(tab)\n+    mode(_mode),\n+    tab(_tab)\n {\n     ui->setupUi(this);\n \n@@ -107,14 +107,14 @@ AddressBookPage::~AddressBookPage()\n     delete ui;\n }\n \n-void AddressBookPage::setModel(AddressTableModel *model)\n+void AddressBookPage::setModel(AddressTableModel *_model)\n {\n-    this->model = model;\n-    if(!model)\n+    this->model = _model;\n+    if(!_model)\n         return;\n \n     proxyModel = new QSortFilterProxyModel(this);\n-    proxyModel->setSourceModel(model);\n+    proxyModel->setSourceModel(_model);\n     proxyModel->setDynamicSortFilter(true);\n     proxyModel->setSortCaseSensitivity(Qt::CaseInsensitive);\n     proxyModel->setFilterCaseSensitivity(Qt::CaseInsensitive);\n@@ -147,7 +147,7 @@ void AddressBookPage::setModel(AddressTableModel *model)\n         this, SLOT(selectionChanged()));\n \n     // Select row for newly created address\n-    connect(model, SIGNAL(rowsInserted(QModelIndex,int,int)), this, SLOT(selectNewAddress(QModelIndex,int,int)));\n+    connect(_model, SIGNAL(rowsInserted(QModelIndex,int,int)), this, SLOT(selectNewAddress(QModelIndex,int,int)));\n \n     selectionChanged();\n }"
      },
      {
        "sha": "830c9cdf19bb75ce41c3784061a4197b1786db10",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -31,8 +31,8 @@ struct AddressTableEntry\n     QString address;\n \n     AddressTableEntry() {}\n-    AddressTableEntry(Type type, const QString &label, const QString &address):\n-        type(type), label(label), address(address) {}\n+    AddressTableEntry(Type _type, const QString &_label, const QString &_address):\n+        type(_type), label(_label), address(_address) {}\n };\n \n struct AddressTableEntryLessThan\n@@ -73,8 +73,8 @@ class AddressTablePriv\n     QList<AddressTableEntry> cachedAddressTable;\n     AddressTableModel *parent;\n \n-    AddressTablePriv(CWallet *wallet, AddressTableModel *parent):\n-        wallet(wallet), parent(parent) {}\n+    AddressTablePriv(CWallet *_wallet, AddressTableModel *_parent):\n+        wallet(_wallet), parent(_parent) {}\n \n     void refreshAddressTable()\n     {\n@@ -164,8 +164,8 @@ class AddressTablePriv\n     }\n };\n \n-AddressTableModel::AddressTableModel(CWallet *wallet, WalletModel *parent) :\n-    QAbstractTableModel(parent),walletModel(parent),wallet(wallet),priv(0)\n+AddressTableModel::AddressTableModel(CWallet *_wallet, WalletModel *parent) :\n+    QAbstractTableModel(parent),walletModel(parent),wallet(_wallet),priv(0)\n {\n     columns << tr(\"Label\") << tr(\"Address\");\n     priv = new AddressTablePriv(wallet, this);"
      },
      {
        "sha": "129ea1efa4f04eab84d33c57d89289709da4ca6b",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -18,10 +18,10 @@\n #include <QMessageBox>\n #include <QPushButton>\n \n-AskPassphraseDialog::AskPassphraseDialog(Mode mode, QWidget *parent) :\n+AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::AskPassphraseDialog),\n-    mode(mode),\n+    mode(_mode),\n     model(0),\n     fCapsLock(false)\n {\n@@ -81,9 +81,9 @@ AskPassphraseDialog::~AskPassphraseDialog()\n     delete ui;\n }\n \n-void AskPassphraseDialog::setModel(WalletModel *model)\n+void AskPassphraseDialog::setModel(WalletModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n }\n \n void AskPassphraseDialog::accept()"
      },
      {
        "sha": "16d7778a272c544261923439d30c62a7b64e6ce6",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -75,7 +75,7 @@ const std::string BitcoinGUI::DEFAULT_UIPLATFORM =\n \n const QString BitcoinGUI::DEFAULT_WALLET = \"~Default\";\n \n-BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent) :\n+BitcoinGUI::BitcoinGUI(const PlatformStyle *_platformStyle, const NetworkStyle *networkStyle, QWidget *parent) :\n     QMainWindow(parent),\n     enableWallet(false),\n     clientModel(0),\n@@ -117,7 +117,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n     helpMessageDialog(0),\n     prevBlocks(0),\n     spinnerFrame(0),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n@@ -146,13 +146,13 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n     setUnifiedTitleAndToolBarOnMac(true);\n #endif\n \n-    rpcConsole = new RPCConsole(platformStyle, 0);\n+    rpcConsole = new RPCConsole(_platformStyle, 0);\n     helpMessageDialog = new HelpMessageDialog(this, false);\n #ifdef ENABLE_WALLET\n     if(enableWallet)\n     {\n         /** Create wallet frame and make it the central widget */\n-        walletFrame = new WalletFrame(platformStyle, this);\n+        walletFrame = new WalletFrame(_platformStyle, this);\n         setCentralWidget(walletFrame);\n     } else\n #endif // ENABLE_WALLET\n@@ -449,38 +449,38 @@ void BitcoinGUI::createToolBars()\n     }\n }\n \n-void BitcoinGUI::setClientModel(ClientModel *clientModel)\n+void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n {\n-    this->clientModel = clientModel;\n-    if(clientModel)\n+    this->clientModel = _clientModel;\n+    if(_clientModel)\n     {\n         // Create system tray menu (or setup the dock menu) that late to prevent users from calling actions,\n         // while the client has not yet fully loaded\n         createTrayIconMenu();\n \n         // Keep up to date with client\n-        setNumConnections(clientModel->getNumConnections());\n-        connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n+        setNumConnections(_clientModel->getNumConnections());\n+        connect(_clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(clientModel->getNumBlocks(), clientModel->getLastBlockDate(), clientModel->getVerificationProgress(NULL), false);\n-        connect(clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n+        setNumBlocks(_clientModel->getNumBlocks(), _clientModel->getLastBlockDate(), _clientModel->getVerificationProgress(NULL), false);\n+        connect(_clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n \n         // Receive and report messages from client model\n-        connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n+        connect(_clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         // Show progress dialog\n-        connect(clientModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+        connect(_clientModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n \n-        rpcConsole->setClientModel(clientModel);\n+        rpcConsole->setClientModel(_clientModel);\n #ifdef ENABLE_WALLET\n         if(walletFrame)\n         {\n-            walletFrame->setClientModel(clientModel);\n+            walletFrame->setClientModel(_clientModel);\n         }\n #endif // ENABLE_WALLET\n-        unitDisplayControl->setOptionsModel(clientModel->getOptionsModel());\n+        unitDisplayControl->setOptionsModel(_clientModel->getOptionsModel());\n         \n-        OptionsModel* optionsModel = clientModel->getOptionsModel();\n+        OptionsModel* optionsModel = _clientModel->getOptionsModel();\n         if(optionsModel)\n         {\n             // be aware of the tray icon disable state change reported by the OptionsModel object.\n@@ -1168,17 +1168,17 @@ void UnitDisplayStatusBarControl::createContextMenu()\n }\n \n /** Lets the control know about the Options Model (and its signals) */\n-void UnitDisplayStatusBarControl::setOptionsModel(OptionsModel *optionsModel)\n+void UnitDisplayStatusBarControl::setOptionsModel(OptionsModel *_optionsModel)\n {\n-    if (optionsModel)\n+    if (_optionsModel)\n     {\n-        this->optionsModel = optionsModel;\n+        this->optionsModel = _optionsModel;\n \n         // be aware of a display unit change reported by the OptionsModel object.\n-        connect(optionsModel,SIGNAL(displayUnitChanged(int)),this,SLOT(updateDisplayUnit(int)));\n+        connect(_optionsModel,SIGNAL(displayUnitChanged(int)),this,SLOT(updateDisplayUnit(int)));\n \n         // initialize the display units label with the current value in the model.\n-        updateDisplayUnit(optionsModel->getDisplayUnit());\n+        updateDisplayUnit(_optionsModel->getDisplayUnit());\n     }\n }\n "
      },
      {
        "sha": "62a70bacd93c7461a91c7e22f971e138fba23a66",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -27,9 +27,9 @@ static const int64_t nClientStartupTime = GetTime();\n static int64_t nLastHeaderTipUpdateNotification = 0;\n static int64_t nLastBlockTipUpdateNotification = 0;\n \n-ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n+ClientModel::ClientModel(OptionsModel *_optionsModel, QObject *parent) :\n     QObject(parent),\n-    optionsModel(optionsModel),\n+    optionsModel(_optionsModel),\n     peerTableModel(0),\n     banTableModel(0),\n     pollTimer(0)"
      },
      {
        "sha": "86fd4ebd656f19a49c421f7cc0d07c3234903a31",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -35,11 +35,11 @@ QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n-CoinControlDialog::CoinControlDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n+CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::CoinControlDialog),\n     model(0),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n \n@@ -152,15 +152,15 @@ CoinControlDialog::~CoinControlDialog()\n     delete ui;\n }\n \n-void CoinControlDialog::setModel(WalletModel *model)\n+void CoinControlDialog::setModel(WalletModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n \n-    if(model && model->getOptionsModel() && model->getAddressTableModel())\n+    if(_model && _model->getOptionsModel() && _model->getAddressTableModel())\n     {\n         updateView();\n         updateLabelLocked();\n-        CoinControlDialog::updateLabels(model, this);\n+        CoinControlDialog::updateLabels(_model, this);\n     }\n }\n "
      },
      {
        "sha": "f424e6cd9824349cc3e151ea6da1abe11d1ef162",
        "filename": "src/qt/csvmodelwriter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/csvmodelwriter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/csvmodelwriter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -8,15 +8,15 @@\n #include <QFile>\n #include <QTextStream>\n \n-CSVModelWriter::CSVModelWriter(const QString &filename, QObject *parent) :\n+CSVModelWriter::CSVModelWriter(const QString &_filename, QObject *parent) :\n     QObject(parent),\n-    filename(filename), model(0)\n+    filename(_filename), model(0)\n {\n }\n \n-void CSVModelWriter::setModel(const QAbstractItemModel *model)\n+void CSVModelWriter::setModel(const QAbstractItemModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n }\n \n void CSVModelWriter::addColumn(const QString &title, int column, int role)"
      },
      {
        "sha": "a9ffe016fd91d6d01d1fd60cf8651b766210315c",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -11,11 +11,11 @@\n #include <QDataWidgetMapper>\n #include <QMessageBox>\n \n-EditAddressDialog::EditAddressDialog(Mode mode, QWidget *parent) :\n+EditAddressDialog::EditAddressDialog(Mode _mode, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::EditAddressDialog),\n     mapper(0),\n-    mode(mode),\n+    mode(_mode),\n     model(0)\n {\n     ui->setupUi(this);\n@@ -49,13 +49,13 @@ EditAddressDialog::~EditAddressDialog()\n     delete ui;\n }\n \n-void EditAddressDialog::setModel(AddressTableModel *model)\n+void EditAddressDialog::setModel(AddressTableModel *_model)\n {\n-    this->model = model;\n-    if(!model)\n+    this->model = _model;\n+    if(!_model)\n         return;\n \n-    mapper->setModel(model);\n+    mapper->setModel(_model);\n     mapper->addMapping(ui->labelEdit, AddressTableModel::Label);\n     mapper->addMapping(ui->addressEdit, AddressTableModel::Address);\n }\n@@ -137,8 +137,8 @@ QString EditAddressDialog::getAddress() const\n     return address;\n }\n \n-void EditAddressDialog::setAddress(const QString &address)\n+void EditAddressDialog::setAddress(const QString &_address)\n {\n-    this->address = address;\n-    ui->addressEdit->setText(address);\n+    this->address = _address;\n+    ui->addressEdit->setText(_address);\n }"
      },
      {
        "sha": "277a9a1d10124b37c3ab599c6f9dbbf00fd9ef10",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -462,9 +462,9 @@ void SubstituteFonts(const QString& language)\n #endif\n }\n \n-ToolTipToRichTextFilter::ToolTipToRichTextFilter(int size_threshold, QObject *parent) :\n+ToolTipToRichTextFilter::ToolTipToRichTextFilter(int _size_threshold, QObject *parent) :\n     QObject(parent),\n-    size_threshold(size_threshold)\n+    size_threshold(_size_threshold)\n {\n \n }"
      },
      {
        "sha": "5a336b105ec7b0d2742f352ab9ef49106590c754",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -63,9 +63,9 @@ public Q_SLOTS:\n \n #include \"intro.moc\"\n \n-FreespaceChecker::FreespaceChecker(Intro *intro)\n+FreespaceChecker::FreespaceChecker(Intro *_intro)\n {\n-    this->intro = intro;\n+    this->intro = _intro;\n }\n \n void FreespaceChecker::check()"
      },
      {
        "sha": "acbfee08684d16042561e2f78130bc0e5d04b64c",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -22,9 +22,9 @@ static const struct {\n static const unsigned network_styles_count = sizeof(network_styles)/sizeof(*network_styles);\n \n // titleAddText needs to be const char* for tr()\n-NetworkStyle::NetworkStyle(const QString &appName, const int iconColorHueShift, const int iconColorSaturationReduction, const char *titleAddText):\n-    appName(appName),\n-    titleAddText(qApp->translate(\"SplashScreen\", titleAddText))\n+NetworkStyle::NetworkStyle(const QString &_appName, const int iconColorHueShift, const int iconColorSaturationReduction, const char *_titleAddText):\n+    appName(_appName),\n+    titleAddText(qApp->translate(\"SplashScreen\", _titleAddText))\n {\n     // load pixmap\n     QPixmap pixmap(\":/icons/bitcoin\");"
      },
      {
        "sha": "8277e20c909baadb9747bb6b1ce5a438ac0f52ad",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -33,17 +33,17 @@\n const int FREEDESKTOP_NOTIFICATION_ICON_SIZE = 128;\n #endif\n \n-Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon, QWidget *parent) :\n-    QObject(parent),\n-    parent(parent),\n-    programName(programName),\n+Notificator::Notificator(const QString &_programName, QSystemTrayIcon *_trayIcon, QWidget *_parent) :\n+    QObject(_parent),\n+    parent(_parent),\n+    programName(_programName),\n     mode(None),\n-    trayIcon(trayicon)\n+    trayIcon(_trayIcon)\n #ifdef USE_DBUS\n     ,interface(0)\n #endif\n {\n-    if(trayicon && trayicon->supportsMessages())\n+    if(_trayIcon && _trayIcon->supportsMessages())\n     {\n         mode = QSystemTray;\n     }"
      },
      {
        "sha": "588059d0c577a84cfd80243c35bc23eb8678bf74",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -135,22 +135,22 @@ OptionsDialog::~OptionsDialog()\n     delete ui;\n }\n \n-void OptionsDialog::setModel(OptionsModel *model)\n+void OptionsDialog::setModel(OptionsModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n \n-    if(model)\n+    if(_model)\n     {\n         /* check if client restart is needed and show persistent message */\n-        if (model->isRestartRequired())\n+        if (_model->isRestartRequired())\n             showRestartWarning(true);\n \n-        QString strLabel = model->getOverriddenByCommandLine();\n+        QString strLabel = _model->getOverriddenByCommandLine();\n         if (strLabel.isEmpty())\n             strLabel = tr(\"none\");\n         ui->overriddenByCommandLineLabel->setText(strLabel);\n \n-        mapper->setModel(model);\n+        mapper->setModel(_model);\n         setMapper();\n         mapper->toFirst();\n "
      },
      {
        "sha": "788d917bcc0df31116cce95516578664123fca87",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -25,9 +25,9 @@ class TxViewDelegate : public QAbstractItemDelegate\n {\n     Q_OBJECT\n public:\n-    TxViewDelegate(const PlatformStyle *platformStyle):\n+    TxViewDelegate(const PlatformStyle *_platformStyle):\n         QAbstractItemDelegate(), unit(BitcoinUnits::BTC),\n-        platformStyle(platformStyle)\n+        platformStyle(_platformStyle)\n     {\n \n     }"
      },
      {
        "sha": "9f23e77a137001ee60fa84bf06a0abd27921e87d",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -749,9 +749,9 @@ void PaymentServer::reportSslErrors(QNetworkReply* reply, const QList<QSslError>\n     Q_EMIT message(tr(\"Network request error\"), errString, CClientUIInterface::MSG_ERROR);\n }\n \n-void PaymentServer::setOptionsModel(OptionsModel *optionsModel)\n+void PaymentServer::setOptionsModel(OptionsModel *_optionsModel)\n {\n-    this->optionsModel = optionsModel;\n+    this->optionsModel = _optionsModel;\n }\n \n void PaymentServer::handlePaymentACK(const QString& paymentACKMsg)"
      },
      {
        "sha": "e4438cc43d83c2551197e891c0cd3591b28c5812",
        "filename": "src/qt/platformstyle.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/platformstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/platformstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/platformstyle.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -73,11 +73,11 @@ QIcon ColorizeIcon(const QString& filename, const QColor& colorbase)\n }\n \n \n-PlatformStyle::PlatformStyle(const QString &name, bool imagesOnButtons, bool colorizeIcons, bool useExtraSpacing):\n-    name(name),\n-    imagesOnButtons(imagesOnButtons),\n-    colorizeIcons(colorizeIcons),\n-    useExtraSpacing(useExtraSpacing),\n+PlatformStyle::PlatformStyle(const QString &_name, bool _imagesOnButtons, bool _colorizeIcons, bool _useExtraSpacing):\n+    name(_name),\n+    imagesOnButtons(_imagesOnButtons),\n+    colorizeIcons(_colorizeIcons),\n+    useExtraSpacing(_useExtraSpacing),\n     singleColor(0,0,0),\n     textColor(0,0,0)\n {"
      },
      {
        "sha": "492b96ff09b6163ddf469927ea803f4941856bbb",
        "filename": "src/qt/qvalidatedlineedit.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/qvalidatedlineedit.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/qvalidatedlineedit.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvalidatedlineedit.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -15,22 +15,22 @@ QValidatedLineEdit::QValidatedLineEdit(QWidget *parent) :\n     connect(this, SIGNAL(textChanged(QString)), this, SLOT(markValid()));\n }\n \n-void QValidatedLineEdit::setValid(bool valid)\n+void QValidatedLineEdit::setValid(bool _valid)\n {\n-    if(valid == this->valid)\n+    if(_valid == this->valid)\n     {\n         return;\n     }\n \n-    if(valid)\n+    if(_valid)\n     {\n         setStyleSheet(\"\");\n     }\n     else\n     {\n         setStyleSheet(STYLE_INVALID);\n     }\n-    this->valid = valid;\n+    this->valid = _valid;\n }\n \n void QValidatedLineEdit::focusInEvent(QFocusEvent *evt)"
      },
      {
        "sha": "2f2478783c02ca41c3975e74e9eecf5126274a4f",
        "filename": "src/qt/qvaluecombobox.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/qvaluecombobox.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/qvaluecombobox.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvaluecombobox.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -20,9 +20,9 @@ void QValueComboBox::setValue(const QVariant &value)\n     setCurrentIndex(findData(value, role));\n }\n \n-void QValueComboBox::setRole(int role)\n+void QValueComboBox::setRole(int _role)\n {\n-    this->role = role;\n+    this->role = _role;\n }\n \n void QValueComboBox::handleSelectionChanged(int idx)"
      },
      {
        "sha": "5c6dc97b20b90ad66b6a8617da6a07adc0e1f1d1",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -22,24 +22,24 @@\n #include <QScrollBar>\n #include <QTextDocument>\n \n-ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n+ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::ReceiveCoinsDialog),\n     model(0),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n \n-    if (!platformStyle->getImagesOnButtons()) {\n+    if (!_platformStyle->getImagesOnButtons()) {\n         ui->clearButton->setIcon(QIcon());\n         ui->receiveButton->setIcon(QIcon());\n         ui->showRequestButton->setIcon(QIcon());\n         ui->removeRequestButton->setIcon(QIcon());\n     } else {\n-        ui->clearButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n-        ui->receiveButton->setIcon(platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"));\n-        ui->showRequestButton->setIcon(platformStyle->SingleColorIcon(\":/icons/edit\"));\n-        ui->removeRequestButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+        ui->clearButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/remove\"));\n+        ui->receiveButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"));\n+        ui->showRequestButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/edit\"));\n+        ui->removeRequestButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/remove\"));\n     }\n \n     // context menu actions\n@@ -62,21 +62,21 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *platformStyle, QWidg\n     connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n }\n \n-void ReceiveCoinsDialog::setModel(WalletModel *model)\n+void ReceiveCoinsDialog::setModel(WalletModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n \n-    if(model && model->getOptionsModel())\n+    if(_model && _model->getOptionsModel())\n     {\n-        model->getRecentRequestsTableModel()->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n-        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        _model->getRecentRequestsTableModel()->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n+        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n         updateDisplayUnit();\n \n         QTableView* tableView = ui->recentRequestsView;\n \n         tableView->verticalHeader()->hide();\n         tableView->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n-        tableView->setModel(model->getRecentRequestsTableModel());\n+        tableView->setModel(_model->getRecentRequestsTableModel());\n         tableView->setAlternatingRowColors(true);\n         tableView->setSelectionBehavior(QAbstractItemView::SelectRows);\n         tableView->setSelectionMode(QAbstractItemView::ContiguousSelection);"
      },
      {
        "sha": "998c9176d7bcaf94676f543af1879240e90a1593",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -109,20 +109,20 @@ ReceiveRequestDialog::~ReceiveRequestDialog()\n     delete ui;\n }\n \n-void ReceiveRequestDialog::setModel(OptionsModel *model)\n+void ReceiveRequestDialog::setModel(OptionsModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n \n-    if (model)\n-        connect(model, SIGNAL(displayUnitChanged(int)), this, SLOT(update()));\n+    if (_model)\n+        connect(_model, SIGNAL(displayUnitChanged(int)), this, SLOT(update()));\n \n     // update the display unit if necessary\n     update();\n }\n \n-void ReceiveRequestDialog::setInfo(const SendCoinsRecipient &info)\n+void ReceiveRequestDialog::setInfo(const SendCoinsRecipient &_info)\n {\n-    this->info = info;\n+    this->info = _info;\n     update();\n }\n "
      },
      {
        "sha": "ace9f1ceaad6bb1e450f98482208f48789f62c95",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -83,8 +83,8 @@ class QtRPCTimerBase: public QObject, public RPCTimerBase\n {\n     Q_OBJECT\n public:\n-    QtRPCTimerBase(boost::function<void(void)>& func, int64_t millis):\n-        func(func)\n+    QtRPCTimerBase(boost::function<void(void)>& _func, int64_t millis):\n+        func(_func)\n     {\n         timer.setSingleShot(true);\n         connect(&timer, SIGNAL(timeout()), this, SLOT(timeout()));\n@@ -335,13 +335,13 @@ void RPCExecutor::request(const QString &command)\n     }\n }\n \n-RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n+RPCConsole::RPCConsole(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::RPCConsole),\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    platformStyle(platformStyle),\n+    platformStyle(_platformStyle),\n     peersTableContextMenu(0),\n     banTableContextMenu(0),\n     consoleFontSize(0)"
      },
      {
        "sha": "4b2ba7d6241d2c650ffa007e6eda4abd2bcb13b8",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -30,25 +30,25 @@\n \n #define SEND_CONFIRM_DELAY   3\n \n-SendCoinsDialog::SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n+SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SendCoinsDialog),\n     clientModel(0),\n     model(0),\n     fNewRecipientAllowed(true),\n     fFeeMinimized(true),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n \n-    if (!platformStyle->getImagesOnButtons()) {\n+    if (!_platformStyle->getImagesOnButtons()) {\n         ui->addButton->setIcon(QIcon());\n         ui->clearButton->setIcon(QIcon());\n         ui->sendButton->setIcon(QIcon());\n     } else {\n-        ui->addButton->setIcon(platformStyle->SingleColorIcon(\":/icons/add\"));\n-        ui->clearButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n-        ui->sendButton->setIcon(platformStyle->SingleColorIcon(\":/icons/send\"));\n+        ui->addButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/add\"));\n+        ui->clearButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/remove\"));\n+        ui->sendButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/send\"));\n     }\n \n     GUIUtil::setupAddressWidget(ui->lineEditCoinControlChange, this);\n@@ -116,40 +116,40 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *pa\n     minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n }\n \n-void SendCoinsDialog::setClientModel(ClientModel *clientModel)\n+void SendCoinsDialog::setClientModel(ClientModel *_clientModel)\n {\n-    this->clientModel = clientModel;\n+    this->clientModel = _clientModel;\n \n-    if (clientModel) {\n-        connect(clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(updateSmartFeeLabel()));\n+    if (_clientModel) {\n+        connect(_clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(updateSmartFeeLabel()));\n     }\n }\n \n-void SendCoinsDialog::setModel(WalletModel *model)\n+void SendCoinsDialog::setModel(WalletModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n \n-    if(model && model->getOptionsModel())\n+    if(_model && _model->getOptionsModel())\n     {\n         for(int i = 0; i < ui->entries->count(); ++i)\n         {\n             SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n             if(entry)\n             {\n-                entry->setModel(model);\n+                entry->setModel(_model);\n             }\n         }\n \n-        setBalance(model->getBalance(), model->getUnconfirmedBalance(), model->getImmatureBalance(),\n-                   model->getWatchBalance(), model->getWatchUnconfirmedBalance(), model->getWatchImmatureBalance());\n-        connect(model, SIGNAL(balanceChanged(CAmount,CAmount,CAmount,CAmount,CAmount,CAmount)), this, SLOT(setBalance(CAmount,CAmount,CAmount,CAmount,CAmount,CAmount)));\n-        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        setBalance(_model->getBalance(), _model->getUnconfirmedBalance(), _model->getImmatureBalance(),\n+                   _model->getWatchBalance(), _model->getWatchUnconfirmedBalance(), _model->getWatchImmatureBalance());\n+        connect(_model, SIGNAL(balanceChanged(CAmount,CAmount,CAmount,CAmount,CAmount,CAmount)), this, SLOT(setBalance(CAmount,CAmount,CAmount,CAmount,CAmount,CAmount)));\n+        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n         updateDisplayUnit();\n \n         // Coin Control\n-        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        connect(model->getOptionsModel(), SIGNAL(coinControlFeaturesChanged(bool)), this, SLOT(coinControlFeatureChanged(bool)));\n-        ui->frameCoinControl->setVisible(model->getOptionsModel()->getCoinControlFeatures());\n+        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(coinControlUpdateLabels()));\n+        connect(_model->getOptionsModel(), SIGNAL(coinControlFeaturesChanged(bool)), this, SLOT(coinControlFeatureChanged(bool)));\n+        ui->frameCoinControl->setVisible(_model->getOptionsModel()->getCoinControlFeatures());\n         coinControlUpdateLabels();\n \n         // fee section\n@@ -826,9 +826,9 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     }\n }\n \n-SendConfirmationDialog::SendConfirmationDialog(const QString &title, const QString &text, int secDelay,\n+SendConfirmationDialog::SendConfirmationDialog(const QString &title, const QString &text, int _secDelay,\n     QWidget *parent) :\n-    QMessageBox(QMessageBox::Question, title, text, QMessageBox::Yes | QMessageBox::Cancel, parent), secDelay(secDelay)\n+    QMessageBox(QMessageBox::Question, title, text, QMessageBox::Yes | QMessageBox::Cancel, parent), secDelay(_secDelay)\n {\n     setDefaultButton(QMessageBox::Cancel);\n     yesButton = button(QMessageBox::Yes);"
      },
      {
        "sha": "7eb1eb7e3a128ef5dbabd0ab8694a6fc64d7f6c5",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -15,11 +15,11 @@\n #include <QApplication>\n #include <QClipboard>\n \n-SendCoinsEntry::SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *parent) :\n+SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QStackedWidget(parent),\n     ui(new Ui::SendCoinsEntry),\n     model(0),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n \n@@ -79,12 +79,12 @@ void SendCoinsEntry::on_payTo_textChanged(const QString &address)\n     updateLabel(address);\n }\n \n-void SendCoinsEntry::setModel(WalletModel *model)\n+void SendCoinsEntry::setModel(WalletModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n \n-    if (model && model->getOptionsModel())\n-        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+    if (_model && _model->getOptionsModel())\n+        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n \n     clear();\n }"
      },
      {
        "sha": "4061909b719fbc99c0976e9530e1928954cd95a3",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -20,11 +20,11 @@\n \n #include <QClipboard>\n \n-SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *platformStyle, QWidget *parent) :\n+SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SignVerifyMessageDialog),\n     model(0),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n \n@@ -60,9 +60,9 @@ SignVerifyMessageDialog::~SignVerifyMessageDialog()\n     delete ui;\n }\n \n-void SignVerifyMessageDialog::setModel(WalletModel *model)\n+void SignVerifyMessageDialog::setModel(WalletModel *_model)\n {\n-    this->model = model;\n+    this->model = _model;\n }\n \n void SignVerifyMessageDialog::setAddress_SM(const QString &address)"
      },
      {
        "sha": "e21b89b935483e59d599fbdbc0695c4900dd8646",
        "filename": "src/qt/transactionfilterproxy.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactionfilterproxy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactionfilterproxy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -66,9 +66,9 @@ void TransactionFilterProxy::setDateRange(const QDateTime &from, const QDateTime\n     invalidateFilter();\n }\n \n-void TransactionFilterProxy::setAddressPrefix(const QString &addrPrefix)\n+void TransactionFilterProxy::setAddressPrefix(const QString &_addrPrefix)\n {\n-    this->addrPrefix = addrPrefix;\n+    this->addrPrefix = _addrPrefix;\n     invalidateFilter();\n }\n \n@@ -95,9 +95,9 @@ void TransactionFilterProxy::setLimit(int limit)\n     this->limitRows = limit;\n }\n \n-void TransactionFilterProxy::setShowInactive(bool showInactive)\n+void TransactionFilterProxy::setShowInactive(bool _showInactive)\n {\n-    this->showInactive = showInactive;\n+    this->showInactive = _showInactive;\n     invalidateFilter();\n }\n "
      },
      {
        "sha": "8eff302affe11552119a956c54e1f977a8c944ca",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -88,16 +88,16 @@ class TransactionRecord\n     {\n     }\n \n-    TransactionRecord(uint256 hash, qint64 time):\n-            hash(hash), time(time), type(Other), address(\"\"), debit(0),\n+    TransactionRecord(uint256 _hash, qint64 _time):\n+            hash(_hash), time(_time), type(Other), address(\"\"), debit(0),\n             credit(0), idx(0)\n     {\n     }\n \n-    TransactionRecord(uint256 hash, qint64 time,\n-                Type type, const std::string &address,\n-                const CAmount& debit, const CAmount& credit):\n-            hash(hash), time(time), type(type), address(address), debit(debit), credit(credit),\n+    TransactionRecord(uint256 _hash, qint64 _time,\n+                Type _type, const std::string &_address,\n+                const CAmount& _debit, const CAmount& _credit):\n+            hash(_hash), time(_time), type(_type), address(_address), debit(_debit), credit(_credit),\n             idx(0)\n     {\n     }"
      },
      {
        "sha": "52261ff04b34b1613a4a2b3c88cfd1616779bf11",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -59,9 +59,9 @@ struct TxLessThan\n class TransactionTablePriv\n {\n public:\n-    TransactionTablePriv(CWallet *wallet, TransactionTableModel *parent) :\n-        wallet(wallet),\n-        parent(parent)\n+    TransactionTablePriv(CWallet *_wallet, TransactionTableModel *_parent) :\n+        wallet(_wallet),\n+        parent(_parent)\n     {\n     }\n \n@@ -235,13 +235,13 @@ class TransactionTablePriv\n     }\n };\n \n-TransactionTableModel::TransactionTableModel(const PlatformStyle *platformStyle, CWallet* wallet, WalletModel *parent):\n+TransactionTableModel::TransactionTableModel(const PlatformStyle *_platformStyle, CWallet* _wallet, WalletModel *parent):\n         QAbstractTableModel(parent),\n-        wallet(wallet),\n+        wallet(_wallet),\n         walletModel(parent),\n-        priv(new TransactionTablePriv(wallet, this)),\n+        priv(new TransactionTablePriv(_wallet, this)),\n         fProcessingQueuedTransactions(false),\n-        platformStyle(platformStyle)\n+        platformStyle(_platformStyle)\n {\n     columns << QString() << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Label\") << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n     priv->refreshWallet();\n@@ -714,8 +714,8 @@ struct TransactionNotification\n {\n public:\n     TransactionNotification() {}\n-    TransactionNotification(uint256 hash, ChangeType status, bool showTransaction):\n-        hash(hash), status(status), showTransaction(showTransaction) {}\n+    TransactionNotification(uint256 _hash, ChangeType _status, bool _showTransaction):\n+        hash(_hash), status(_status), showTransaction(_showTransaction) {}\n \n     void invoke(QObject *ttm)\n     {"
      },
      {
        "sha": "856b16d2c46eebf007374fb11e2eb81d64bbc670",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -184,13 +184,13 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     connect(showDetailsAction, SIGNAL(triggered()), this, SLOT(showDetails()));\n }\n \n-void TransactionView::setModel(WalletModel *model)\n+void TransactionView::setModel(WalletModel *_model)\n {\n-    this->model = model;\n-    if(model)\n+    this->model = _model;\n+    if(_model)\n     {\n         transactionProxyModel = new TransactionFilterProxy(this);\n-        transactionProxyModel->setSourceModel(model->getTransactionTableModel());\n+        transactionProxyModel->setSourceModel(_model->getTransactionTableModel());\n         transactionProxyModel->setDynamicSortFilter(true);\n         transactionProxyModel->setSortCaseSensitivity(Qt::CaseInsensitive);\n         transactionProxyModel->setFilterCaseSensitivity(Qt::CaseInsensitive);\n@@ -214,10 +214,10 @@ void TransactionView::setModel(WalletModel *model)\n \n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(transactionView, AMOUNT_MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH);\n \n-        if (model->getOptionsModel())\n+        if (_model->getOptionsModel())\n         {\n             // Add third party transaction URLs to context menu\n-            QStringList listUrls = model->getOptionsModel()->getThirdPartyTxUrls().split(\"|\", QString::SkipEmptyParts);\n+            QStringList listUrls = _model->getOptionsModel()->getThirdPartyTxUrls().split(\"|\", QString::SkipEmptyParts);\n             for (int i = 0; i < listUrls.size(); ++i)\n             {\n                 QString host = QUrl(listUrls[i].trimmed(), QUrl::StrictMode).host();\n@@ -234,10 +234,10 @@ void TransactionView::setModel(WalletModel *model)\n         }\n \n         // show/hide column Watch-only\n-        updateWatchOnlyColumn(model->haveWatchOnly());\n+        updateWatchOnlyColumn(_model->haveWatchOnly());\n \n         // Watch-only signal\n-        connect(model, SIGNAL(notifyWatchonlyChanged(bool)), this, SLOT(updateWatchOnlyColumn(bool)));\n+        connect(_model, SIGNAL(notifyWatchonlyChanged(bool)), this, SLOT(updateWatchOnlyColumn(bool)));\n     }\n }\n "
      },
      {
        "sha": "640be4d7a7e16f88c139fd9b79b0da0acb87990e",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -12,10 +12,10 @@\n #include <QHBoxLayout>\n #include <QLabel>\n \n-WalletFrame::WalletFrame(const PlatformStyle *platformStyle, BitcoinGUI *_gui) :\n+WalletFrame::WalletFrame(const PlatformStyle *_platformStyle, BitcoinGUI *_gui) :\n     QFrame(_gui),\n     gui(_gui),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     // Leave HBox hook for adding a list view later\n     QHBoxLayout *walletFrameLayout = new QHBoxLayout(this);\n@@ -33,9 +33,9 @@ WalletFrame::~WalletFrame()\n {\n }\n \n-void WalletFrame::setClientModel(ClientModel *clientModel)\n+void WalletFrame::setClientModel(ClientModel *_clientModel)\n {\n-    this->clientModel = clientModel;\n+    this->clientModel = _clientModel;\n }\n \n bool WalletFrame::addWallet(const QString& name, WalletModel *walletModel)"
      },
      {
        "sha": "c8a2cb37ec3f3f213dea6c692fb0af04d9f10685",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -27,8 +27,8 @@\n \n #include <boost/foreach.hpp>\n \n-WalletModel::WalletModel(const PlatformStyle *platformStyle, CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n-    QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n+WalletModel::WalletModel(const PlatformStyle *platformStyle, CWallet *_wallet, OptionsModel *_optionsModel, QObject *parent) :\n+    QObject(parent), wallet(_wallet), optionsModel(_optionsModel), addressTableModel(0),\n     transactionTableModel(0),\n     recentRequestsTableModel(0),\n     cachedBalance(0), cachedUnconfirmedBalance(0), cachedImmatureBalance(0),\n@@ -531,10 +531,10 @@ WalletModel::UnlockContext WalletModel::requestUnlock()\n     return UnlockContext(this, valid, was_locked);\n }\n \n-WalletModel::UnlockContext::UnlockContext(WalletModel *wallet, bool valid, bool relock):\n-        wallet(wallet),\n-        valid(valid),\n-        relock(relock)\n+WalletModel::UnlockContext::UnlockContext(WalletModel *_wallet, bool _valid, bool _relock):\n+        wallet(_wallet),\n+        valid(_valid),\n+        relock(_relock)\n {\n }\n "
      },
      {
        "sha": "e233fa690d5df8846ae50fc7a46a47f233cc9158",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -38,8 +38,8 @@ class SendCoinsRecipient\n {\n public:\n     explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n-    explicit SendCoinsRecipient(const QString &addr, const QString &label, const CAmount& amount, const QString &message):\n-        address(addr), label(label), amount(amount), message(message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n+    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n+        address(addr), label(_label), amount(_amount), message(_message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n \n     // If from an unauthenticated payment request, this is used for storing\n     // the addresses, e.g. address-A<br />address-B<br />address-C.\n@@ -145,8 +145,8 @@ class WalletModel : public QObject\n     // Return status record for SendCoins, contains error id + information\n     struct SendCoinsReturn\n     {\n-        SendCoinsReturn(StatusCode status = OK):\n-            status(status) {}\n+        SendCoinsReturn(StatusCode _status = OK):\n+            status(_status) {}\n         StatusCode status;\n     };\n "
      },
      {
        "sha": "fdec6a1c863a00eeb6eac0ba0fbb62650866eb57",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -7,8 +7,8 @@\n #include \"policy/policy.h\"\n #include \"wallet/wallet.h\"\n \n-WalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &recipients) :\n-    recipients(recipients),\n+WalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &_recipients) :\n+    recipients(_recipients),\n     walletTransaction(0),\n     keyChange(0),\n     fee(0)"
      },
      {
        "sha": "2b61ca1c640da05b39cd6263fdbdff0f554e75d4",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8393504205089112cdec27ac1829282b76b94a3/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=f8393504205089112cdec27ac1829282b76b94a3",
        "patch": "@@ -29,11 +29,11 @@\n #include <QPushButton>\n #include <QVBoxLayout>\n \n-WalletView::WalletView(const PlatformStyle *platformStyle, QWidget *parent):\n+WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n     QStackedWidget(parent),\n     clientModel(0),\n     walletModel(0),\n-    platformStyle(platformStyle)\n+    platformStyle(_platformStyle)\n {\n     // Create tabs\n     overviewPage = new OverviewPage(platformStyle);\n@@ -104,47 +104,47 @@ void WalletView::setBitcoinGUI(BitcoinGUI *gui)\n     }\n }\n \n-void WalletView::setClientModel(ClientModel *clientModel)\n+void WalletView::setClientModel(ClientModel *_clientModel)\n {\n-    this->clientModel = clientModel;\n+    this->clientModel = _clientModel;\n \n-    overviewPage->setClientModel(clientModel);\n-    sendCoinsPage->setClientModel(clientModel);\n+    overviewPage->setClientModel(_clientModel);\n+    sendCoinsPage->setClientModel(_clientModel);\n }\n \n-void WalletView::setWalletModel(WalletModel *walletModel)\n+void WalletView::setWalletModel(WalletModel *_walletModel)\n {\n-    this->walletModel = walletModel;\n+    this->walletModel = _walletModel;\n \n     // Put transaction list in tabs\n-    transactionView->setModel(walletModel);\n-    overviewPage->setWalletModel(walletModel);\n-    receiveCoinsPage->setModel(walletModel);\n-    sendCoinsPage->setModel(walletModel);\n-    usedReceivingAddressesPage->setModel(walletModel->getAddressTableModel());\n-    usedSendingAddressesPage->setModel(walletModel->getAddressTableModel());\n-\n-    if (walletModel)\n+    transactionView->setModel(_walletModel);\n+    overviewPage->setWalletModel(_walletModel);\n+    receiveCoinsPage->setModel(_walletModel);\n+    sendCoinsPage->setModel(_walletModel);\n+    usedReceivingAddressesPage->setModel(_walletModel->getAddressTableModel());\n+    usedSendingAddressesPage->setModel(_walletModel->getAddressTableModel());\n+\n+    if (_walletModel)\n     {\n         // Receive and pass through messages from wallet model\n-        connect(walletModel, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n+        connect(_walletModel, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n \n         // Handle changes in encryption status\n-        connect(walletModel, SIGNAL(encryptionStatusChanged(int)), this, SIGNAL(encryptionStatusChanged(int)));\n+        connect(_walletModel, SIGNAL(encryptionStatusChanged(int)), this, SIGNAL(encryptionStatusChanged(int)));\n         updateEncryptionStatus();\n \n         // update HD status\n-        Q_EMIT hdEnabledStatusChanged(walletModel->hdEnabled());\n+        Q_EMIT hdEnabledStatusChanged(_walletModel->hdEnabled());\n \n         // Balloon pop-up for new transaction\n-        connect(walletModel->getTransactionTableModel(), SIGNAL(rowsInserted(QModelIndex,int,int)),\n+        connect(_walletModel->getTransactionTableModel(), SIGNAL(rowsInserted(QModelIndex,int,int)),\n                 this, SLOT(processNewTransaction(QModelIndex,int,int)));\n \n         // Ask for passphrase if needed\n-        connect(walletModel, SIGNAL(requireUnlock()), this, SLOT(unlockWallet()));\n+        connect(_walletModel, SIGNAL(requireUnlock()), this, SLOT(unlockWallet()));\n \n         // Show progress dialog\n-        connect(walletModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+        connect(_walletModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n     }\n }\n "
      }
    ]
  }
]