kiminuo,2021-05-18 07:22:16,"> Maybe use a scripted diff for the second commit. I'm not sure you changed all the instances.\n\nMy understanding of a scripted diff commit feature is that one does his changes, commits the changes using git and modifies the commit message to include a script that corresponds 1:1 with the changes in the commit. If this is correct, then I'm not really sure how to add Python imports in an automat",https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-842923422,842923422,
jonatack,2021-05-18 07:28:17,More info and examples in https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#scripted-diffs.,https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-842927755,842927755,
jonatack,2021-05-18 07:31:42,"Oh, you're right, adding the imports with a scripted diff would be complicated (at least for me it would). Feel free to ignore. ",https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-842930137,842930137,
theStack,2021-05-18 08:21:59,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-842963982,842963982,
DrahtBot,2021-05-18 13:39:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21832 (cli: Improve -getinfo return format by klementtan)\n* #21178 (test: run mempool_reorg.py even with wallet disabled",https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-843180388,843180388,
mjdietzx,2021-05-21 16:49:07,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-846098984,846098984,
sipa,2021-05-21 17:39:21,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-846127188,846127188,
klementtan,2021-05-24 12:38:54,"A search for `100` and `101` shows the following places that  could also be possibly refactored to `COINBASE_MATURITY`:\n1. [p2p_compactblocks.py#L118](https://github.com/bitcoin/bitcoin/blob/ce4a852475fc445be88685197ea48c19256e0401/test/functional/p2p_compactblocks.py#L118)\n2. [mempool_reorg.py#L47](https://github.com/bitcoin/bitcoin/blob/ce4a852475fc445be88685197ea48c19256e0401/test/functiona",https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-847014281,847014281,
kiminuo,2021-05-24 13:00:26,"> A search for `100` and `101` shows the following places that could also be possibly refactored to `COINBASE_MATURITY`:\n\nThank you for researching this! I believe you are correct but I need to check those one by one. I will address this in coming days.",https://github.com/bitcoin/bitcoin/pull/21989#issuecomment-847025652,847025652,
jonatack,2021-05-18 06:15:33,"If you like, there is a definition you can borrow elements from in test/functional/interface_bitcoin_cli.py:\n```text\n# The block reward of coinbaseoutput.nValue (50) BTC/block matures after\n# COINBASE_MATURITY (100) blocks. Therefore, after mining 101 blocks we expect\n# node 0 to have a balance of (BLOCKS - COINBASE_MATURITY) * 50 BTC/block.\n```\n",https://github.com/bitcoin/bitcoin/pull/21989#discussion_r634074802,634074802,test/functional/test_framework/blocktools.py
jonatack,2021-05-18 06:16:03,The commit messages are written with `COINBASE_MATURE` instead of maturity,https://github.com/bitcoin/bitcoin/pull/21989#discussion_r634075031,634075031,test/functional/test_framework/blocktools.py
kiminuo,2021-05-18 07:17:46,You are right. Will fix.,https://github.com/bitcoin/bitcoin/pull/21989#discussion_r634109193,634109193,test/functional/test_framework/blocktools.py
kiminuo,2021-05-18 20:39:16,"Thank you for bringing my attention to this file - I like the comment. Anyway, I think the current comment is reasonably good. If you think it can/should be improved, please suggest a better comment and I'll (most likely) accept it :)",https://github.com/bitcoin/bitcoin/pull/21989#discussion_r634730568,634730568,test/functional/test_framework/blocktools.py
theStack,2021-05-21 10:01:06,"You could use the chance to change all lines that `import` the introduced constant to a lexicographically sorted multi-line import, which is now used in most functional tests (to avoid potential merge conflicts):\n\n```suggestion\nfrom test_framework.blocktools import (\n    COINBASE_MATURITY,\n    NORMAL_GBT_REQUEST_PARAMS,\n    add_witness_commitment,\n    create_block,\n    create_trans",https://github.com/bitcoin/bitcoin/pull/21989#discussion_r636795931,636795931,test/functional/feature_nulldummy.py
theStack,2021-05-21 11:42:48,These two `import`s should be joined into one.,https://github.com/bitcoin/bitcoin/pull/21989#discussion_r636852585,636852585,test/functional/feature_assumevalid.py
kiminuo,2021-05-21 11:51:25,I use VSCode. Can it do this for me? (or possibly PyCharm?) Or is it necessary to do this sorting by hand in general?,https://github.com/bitcoin/bitcoin/pull/21989#discussion_r636857398,636857398,test/functional/feature_nulldummy.py
theStack,2021-05-21 12:22:08,"Personally I don't have any experience with Python IDEs or code formatting tools (I'm using vim for both C++ and Python code) and also guess most other contributors do it by hand. In this specific PR, as far as I can see there is only a single instance where this is relevant anyway.",https://github.com/bitcoin/bitcoin/pull/21989#discussion_r636874805,636874805,test/functional/feature_nulldummy.py
kiminuo,2021-05-21 12:30:53,I see. I was asking not because of the manual effort but to get some insight how others work to align my workflow. Thanks,https://github.com/bitcoin/bitcoin/pull/21989#discussion_r636880214,636880214,test/functional/feature_nulldummy.py
jonatack,2021-05-21 12:40:44,> I use VSCode. Can it do this for me? (or possibly PyCharm?) Or is it necessary to do this sorting by hand in general?\n\nIIRC black (the python liner) does it automatically for you.\n\n(I believe most contributors are using vim or non-IDEs. Suggest clang-format for the c++ and black/pycodestyle for the python),https://github.com/bitcoin/bitcoin/pull/21989#discussion_r636886090,636886090,test/functional/feature_nulldummy.py
kiminuo,2021-05-27 20:36:41,"Done, thank you.",https://github.com/bitcoin/bitcoin/pull/21989#discussion_r640948928,640948928,test/functional/feature_assumevalid.py
theStack,2021-05-30 21:25:10,"nit: import order\n```suggestion\nfrom test_framework.blocktools import (\n    COINBASE_MATURITY,\n    NORMAL_GBT_REQUEST_PARAMS,\n    add_witness_commitment,\n    create_block,\n)\n```",https://github.com/bitcoin/bitcoin/pull/21989#discussion_r642130472,642130472,test/functional/p2p_compactblocks.py
kiminuo,2021-05-31 05:32:52,Thank you,https://github.com/bitcoin/bitcoin/pull/21989#discussion_r642219867,642219867,test/functional/p2p_compactblocks.py
