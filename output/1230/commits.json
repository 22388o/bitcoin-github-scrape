[
  {
    "sha": "f621326c24791be14aa61221f7e35530378b84d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjIxMzI2YzI0NzkxYmUxNGFhNjEyMjFmN2UzNTUzMDM3OGI4NGQ4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-09T01:48:14Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-09T01:48:30Z"
      },
      "message": "Clean up warnings\n\n* Use -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameters\n* Remove xCXXFLAGS usage in makefile.unix\n* Fix several recent and older sign-compare warnings",
      "tree": {
        "sha": "447995abd684e0fa74804aa5df76bd14417250c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/447995abd684e0fa74804aa5df76bd14417250c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f621326c24791be14aa61221f7e35530378b84d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f621326c24791be14aa61221f7e35530378b84d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f621326c24791be14aa61221f7e35530378b84d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f621326c24791be14aa61221f7e35530378b84d8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "781fc2c8c0972764e61dafda6fa82b7fd2a198f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/781fc2c8c0972764e61dafda6fa82b7fd2a198f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/781fc2c8c0972764e61dafda6fa82b7fd2a198f2"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 24,
      "deletions": 26
    },
    "files": [
      {
        "sha": "112e8e93895be06089c3b87d50434743a5467c87",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -90,7 +90,7 @@ contains(BITCOIN_NEED_QT_PLUGINS, 1) {\n     DEFINES += HAVE_BUILD_INFO\n }\n \n-QMAKE_CXXFLAGS_WARN_ON = -fdiagnostics-show-option -Wall -Wextra -Wformat -Wformat-security -Wno-invalid-offsetof -Wno-sign-compare -Wno-unused-parameter\n+QMAKE_CXXFLAGS_WARN_ON = -fdiagnostics-show-option -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\n \n # Input\n DEPENDPATH += src src/json src/qt"
      },
      {
        "sha": "56ac9ca12ca75ccf3fa06c30e19bc5e5d6dda906",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -102,12 +102,11 @@ CAddrInfo* CAddrMan::Create(const CAddress &addr, const CNetAddr &addrSource, in\n     return &mapInfo[nId];\n }\n \n-void CAddrMan::SwapRandom(int nRndPos1, int nRndPos2)\n+void CAddrMan::SwapRandom(unsigned int nRndPos1, unsigned int nRndPos2)\n {\n     if (nRndPos1 == nRndPos2)\n         return;\n \n-    assert(nRndPos1 >= 0 && nRndPos2 >= 0);\n     assert(nRndPos1 < vRandom.size() && nRndPos2 < vRandom.size());\n \n     int nId1 = vRandom[nRndPos1];\n@@ -149,7 +148,7 @@ int CAddrMan::SelectTried(int nKBucket)\n \n int CAddrMan::ShrinkNew(int nUBucket)\n {\n-    assert(nUBucket >= 0 && nUBucket < vvNew.size());\n+    assert(nUBucket >= 0 && (unsigned int)nUBucket < vvNew.size());\n     std::set<int> &vNew = vvNew[nUBucket];\n \n     // first look for deletable items"
      },
      {
        "sha": "43b6d35ed8420b4b4a5398b0d18ac9beb5a645f3",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -204,7 +204,7 @@ class CAddrMan\n     CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = NULL);\n \n     // Swap two elements in vRandom.\n-    void SwapRandom(int nRandomPos1, int nRandomPos2);\n+    void SwapRandom(unsigned int nRandomPos1, unsigned int nRandomPos2);\n \n     // Return position in given bucket to replace.\n     int SelectTried(int nKBucket);"
      },
      {
        "sha": "b0ed28aa1418a65bcd2d180e4c4db2e493e07c56",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -2060,15 +2060,15 @@ bool LoadExternalBlockFile(FILE* fileIn)\n         try {\n             CAutoFile blkdat(fileIn, SER_DISK, CLIENT_VERSION);\n             unsigned int nPos = 0;\n-            while (nPos != -1 && blkdat.good() && !fRequestShutdown)\n+            while (nPos != (unsigned int)-1 && blkdat.good() && !fRequestShutdown)\n             {\n                 unsigned char pchData[65536];\n                 do {\n                     fseek(blkdat, nPos, SEEK_SET);\n                     int nRead = fread(pchData, 1, sizeof(pchData), blkdat);\n                     if (nRead <= 8)\n                     {\n-                        nPos = -1;\n+                        nPos = (unsigned int)-1;\n                         break;\n                     }\n                     void* nFind = memchr(pchData, pchMessageStart[0], nRead+1-sizeof(pchMessageStart));\n@@ -2084,7 +2084,7 @@ bool LoadExternalBlockFile(FILE* fileIn)\n                     else\n                         nPos += sizeof(pchData) - sizeof(pchMessageStart) + 1;\n                 } while(!fRequestShutdown);\n-                if (nPos == -1)\n+                if (nPos == (unsigned int)-1)\n                     break;\n                 fseek(blkdat, nPos, SEEK_SET);\n                 unsigned int nSize;"
      },
      {
        "sha": "194d9fdc666314fafc98e5bdb6fe7bca66ff4dab",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -36,7 +36,7 @@ static const int64 MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(int64 nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n static const int COINBASE_MATURITY = 100;\n // Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp.\n-static const int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n+static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n #ifdef USE_UPNP\n static const int fHaveUPnP = true;\n #else"
      },
      {
        "sha": "645f0a16e47e6984ccbb912b7cc01b3ba9fd9d89",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -29,7 +29,7 @@ LIBS= \\\n \n DEFS=-D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\n DEBUGFLAGS=-g\n-CFLAGS=-O2 -w -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n+CFLAGS=-O2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n \n TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n "
      },
      {
        "sha": "bb6466954fbd4da687815013db10840dcdc3e1d3",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -25,7 +25,7 @@ LIBS= \\\n \n DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\n DEBUGFLAGS=-g\n-CFLAGS=-mthreads -O2 -w -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n+CFLAGS=-mthreads -O2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n \n TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n "
      },
      {
        "sha": "7582da04726ee41eb0b2a4faee1ae816fdd1f314",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -65,7 +65,7 @@ CFLAGS = -g\n endif\n \n # ppc doesn't work because we don't support big-endian\n-CFLAGS += -Wextra -Wno-sign-compare -Wno-invalid-offsetof -Wformat-security \\\n+CFLAGS += -Wall -Wextra -Wformat -Wformat-security -Wno-unused-paramter \\\n     $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n \n OBJS= \\"
      },
      {
        "sha": "53fb1f0b8d607f2017b495e4cfd5b68964f23b82",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -82,9 +82,8 @@ LIBS+= \\\n \n \n DEBUGFLAGS=-g\n-CXXFLAGS=-O2\n-xCXXFLAGS=-pthread -Wall -Wextra -Wno-invalid-offsetof -Wno-unused-parameter -Wformat -Wformat-security \\\n-    $(DEBUGFLAGS) $(DEFS) $(HARDENING) $(CXXFLAGS)\n+CXXFLAGS=-O2 -pthread -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \\\n+    $(DEBUGFLAGS) $(DEFS) $(HARDENING)\n \n OBJS= \\\n     obj/version.o \\\n@@ -121,26 +120,26 @@ version.cpp: obj/build.h\n DEFS += -DHAVE_BUILD_INFO\n \n obj/%.o: %.cpp\n-\t$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<\n+\t$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<\n \t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n \t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n \t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n \t  rm -f $(@:%.o=%.d)\n \n bitcoind: $(OBJS:obj/%=obj/%)\n-\t$(CXX) $(xCXXFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)\n+\t$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)\n \n TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))\n \n obj-test/%.o: test/%.cpp\n-\t$(CXX) -c $(TESTDEFS) $(xCXXFLAGS) -MMD -o $@ $<\n+\t$(CXX) -c $(TESTDEFS) $(CXXFLAGS) -MMD -o $@ $<\n \t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n \t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n \t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n \t  rm -f $(@:%.o=%.d)\n \n test_bitcoin: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))\n-\t$(CXX) $(xCXXFLAGS) -o $@ $(LIBPATHS) $^ -Wl,-B$(LMODE) -lboost_unit_test_framework $(LDFLAGS) $(LIBS)\n+\t$(CXX) $(CXXFLAGS) -o $@ $(LIBPATHS) $^ -Wl,-B$(LMODE) -lboost_unit_test_framework $(LDFLAGS) $(LIBS)\n \n clean:\n \t-rm -f bitcoind test_bitcoin"
      },
      {
        "sha": "48709dc5c6a63f07115b05b2856c22efe79f5dda",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -208,9 +208,9 @@ bool static Socks5(string strDest, int port, SOCKET& hSocket)\n     }\n     char pszSocks5Init[] = \"\\5\\1\\0\";\n     char *pszSocks5 = pszSocks5Init;\n-    int nSize = sizeof(pszSocks5Init);\n+    ssize_t nSize = sizeof(pszSocks5Init);\n \n-    int ret = send(hSocket, pszSocks5, nSize, MSG_NOSIGNAL);\n+    ssize_t ret = send(hSocket, pszSocks5, nSize, MSG_NOSIGNAL);\n     if (ret != nSize)\n     {\n         closesocket(hSocket);\n@@ -234,7 +234,7 @@ bool static Socks5(string strDest, int port, SOCKET& hSocket)\n     strSocks5 += static_cast<char>((port >> 8) & 0xFF);\n     strSocks5 += static_cast<char>((port >> 0) & 0xFF);\n     ret = send(hSocket, strSocks5.c_str(), strSocks5.size(), MSG_NOSIGNAL);\n-    if (ret != strSocks5.size())\n+    if (ret != (ssize_t)strSocks5.size())\n     {\n         closesocket(hSocket);\n         return error(\"Error sending to proxy\");"
      },
      {
        "sha": "53cfb409ff1e67ef75ba1cd3be4ab55b98e651c1",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -102,7 +102,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 //\n                 int64 nTxFee = nDebit - wtx.GetValueOut();\n \n-                for (int nOut = 0; nOut < wtx.vout.size(); nOut++)\n+                for (unsigned int nOut = 0; nOut < wtx.vout.size(); nOut++)\n                 {\n                     const CTxOut& txout = wtx.vout[nOut];\n                     TransactionRecord sub(hash, nTime);"
      },
      {
        "sha": "de4096cd39f76093009b8d36cfc715e8df645394",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -67,7 +67,7 @@ const char *vstrOut[] = {\n \n BOOST_AUTO_TEST_CASE(base58_EncodeBase58)\n {\n-    for (int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n+    for (unsigned int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n     {\n         BOOST_CHECK_EQUAL(EncodeBase58(vstrIn[i].data, vstrIn[i].data + vstrIn[i].size), vstrOut[i]);\n     }\n@@ -76,7 +76,7 @@ BOOST_AUTO_TEST_CASE(base58_EncodeBase58)\n BOOST_AUTO_TEST_CASE(base58_DecodeBase58)\n {\n     std::vector<unsigned char> result;\n-    for (int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n+    for (unsigned int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n     {\n         std::vector<unsigned char> expected(vstrIn[i].data, vstrIn[i].data + vstrIn[i].size);\n         BOOST_CHECK(DecodeBase58(vstrOut[i], result));"
      },
      {
        "sha": "c5a053e2eb9758e7a68e77ecc19a274a54fd22fb",
        "filename": "src/test/base64_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f621326c24791be14aa61221f7e35530378b84d8/src/test/base64_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f621326c24791be14aa61221f7e35530378b84d8/src/test/base64_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base64_tests.cpp?ref=f621326c24791be14aa61221f7e35530378b84d8",
        "patch": "@@ -10,7 +10,7 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n {\n     static const std::string vstrIn[]  = {\"\",\"f\",\"fo\",\"foo\",\"foob\",\"fooba\",\"foobar\"};\n     static const std::string vstrOut[] = {\"\",\"Zg==\",\"Zm8=\",\"Zm9v\",\"Zm9vYg==\",\"Zm9vYmE=\",\"Zm9vYmFy\"};\n-    for (int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n+    for (unsigned int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n     {\n         std::string strEnc = EncodeBase64(vstrIn[i]);\n         BOOST_CHECK(strEnc == vstrOut[i]);"
      }
    ]
  }
]