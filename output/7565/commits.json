[
  {
    "sha": "a355de8018f6044f4341b9f11537b687caec44f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzU1ZGU4MDE4ZjYwNDRmNDM0MWI5ZjExNTM3YjY4N2NhZWM0NGYy",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-18T13:34:07Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-25T03:06:32Z"
      },
      "message": "BIP113: Introduce Consensus::VerifyTx() and Consensus::CheckTxPreInputs()\n\nAlso move the locktime flags with the script ones.",
      "tree": {
        "sha": "2dab5c6c32455ac1bea79031714f5d0d3282450f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2dab5c6c32455ac1bea79031714f5d0d3282450f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a355de8018f6044f4341b9f11537b687caec44f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a355de8018f6044f4341b9f11537b687caec44f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a355de8018f6044f4341b9f11537b687caec44f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a355de8018f6044f4341b9f11537b687caec44f2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6e00af8193f46fa02af13c2e9852a6bd7461d00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6e00af8193f46fa02af13c2e9852a6bd7461d00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6e00af8193f46fa02af13c2e9852a6bd7461d00"
      }
    ],
    "stats": {
      "total": 112,
      "additions": 87,
      "deletions": 25
    },
    "files": [
      {
        "sha": "76ed2474f1bfef5d9135be8446e370e0a693f87c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a355de8018f6044f4341b9f11537b687caec44f2/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a355de8018f6044f4341b9f11537b687caec44f2/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a355de8018f6044f4341b9f11537b687caec44f2",
        "patch": "@@ -179,6 +179,7 @@ libbitcoin_server_a_SOURCES = \\\n   bloom.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  consensus/consensus.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\"
      },
      {
        "sha": "3cead19e9144f677bf24a67c482a06c392fb3b83",
        "filename": "src/consensus/consensus.cpp",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a355de8018f6044f4341b9f11537b687caec44f2/src/consensus/consensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a355de8018f6044f4341b9f11537b687caec44f2/src/consensus/consensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.cpp?ref=a355de8018f6044f4341b9f11537b687caec44f2",
        "patch": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus.h\"\n+\n+#include \"validation.h\"\n+#include \"primitives/transaction.h\"\n+#include \"script/interpreter.h\"\n+\n+// TODO remove the following dependencies\n+#include \"main.h\"\n+\n+bool Consensus::CheckTxPreInputs(const CTransaction& tx, CValidationState& state, const int nHeight, int64_t nLockTimeCutoff, int64_t& nSigOps)\n+{\n+    if (!IsFinalTx(tx, nHeight, nLockTimeCutoff))\n+        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n+\n+    if (!CheckTransaction(tx, state))\n+        return false;\n+\n+    nSigOps += GetLegacySigOpCount(tx);\n+    if (nSigOps > MAX_BLOCK_SIGOPS)\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-sigops\", \"too many sigops\");\n+\n+    return true;\n+}\n+\n+bool Consensus::VerifyTx(const CTransaction& tx, CValidationState& state, const unsigned int flags, const int nHeight, const int64_t nMedianTime, const int64_t nBlockTime, int64_t& nSigOps)\n+{\n+    const int64_t nLockTimeCutoff = (flags & LOCKTIME_MEDIAN_TIME_PAST) ? nMedianTime : nBlockTime;\n+    if (!CheckTxPreInputs(tx, state, nHeight, nLockTimeCutoff, nSigOps))\n+        return false;\n+\n+    return true;\n+}"
      },
      {
        "sha": "d5c0d68f1b9ec8ba7bc63cec2a8a4f2fb9f6c963",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 26,
        "deletions": 7,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a355de8018f6044f4341b9f11537b687caec44f2/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a355de8018f6044f4341b9f11537b687caec44f2/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=a355de8018f6044f4341b9f11537b687caec44f2",
        "patch": "@@ -6,20 +6,39 @@\n #ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n #define BITCOIN_CONSENSUS_CONSENSUS_H\n \n+#include <stdint.h>\n+\n+class CTransaction;\n+class CValidationState;\n+\n /** The maximum allowed size for a serialized block, in bytes (network rule) */\n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n-/** Flags for nSequence and nLockTime locks */\n-enum {\n-    /* Interpret sequence numbers as relative lock-time constraints. */\n-    LOCKTIME_VERIFY_SEQUENCE = (1 << 0),\n+/**\n+ * Consensus validations (for Script, Tx, Header and Block):\n+ * Check_ means checking everything possible with the data provided.\n+ * Verify_ means all data provided was enough for this level and its \"consensus-verified\".\n+ */\n+namespace Consensus {\n+\n+/** Transaction validation functions */\n+\n+/**\n+ * Performs all tx the checks that are common for coinbase and regular transactions.\n+ * It doesn't require knowledge of the inputs (utxo).\n+ */\n+bool CheckTxPreInputs(const CTransaction& tx, CValidationState& state, const int nHeight, int64_t nLockTimeCutoff, int64_t& nSigOps);\n+\n+/**\n+ * Fully verify a CTransaction.\n+ * @TODO this is incomplete, among other things, the scripts are not checked yet.\n+ */\n+bool VerifyTx(const CTransaction& tx, CValidationState& state, const unsigned int flags, const int nHeight, const int64_t nMedianTime, const int64_t nBlockTime, int64_t& nSigOps);\n \n-    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n-    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n-};\n+} // namespace Consensus\n \n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "62b66ffdc266e4024edd5b837d1b05ffeb6b84fd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 18,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a355de8018f6044f4341b9f11537b687caec44f2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a355de8018f6044f4341b9f11537b687caec44f2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a355de8018f6044f4341b9f11537b687caec44f2",
        "patch": "@@ -2183,25 +2183,25 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n \n+    const int nHeight = pindex == NULL ? 0 : pindex->nHeight + 1;\n+    const int64_t nMedianTime = pindex == NULL ? 0 : pindex->GetMedianTimePast();\n+    int64_t nSigOps = 0;\n+\n     std::vector<int> prevheights;\n     int nLockTimeFlags = 0;\n     CAmount nFees = 0;\n     int nInputs = 0;\n-    unsigned int nSigOps = 0;\n     CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n     std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n     vPos.reserve(block.vtx.size());\n     blockundo.vtxundo.reserve(block.vtx.size() - 1);\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const CTransaction &tx = block.vtx[i];\n+        if (!Consensus::VerifyTx(tx, state, flags, nHeight, nMedianTime, block.nTime, nSigOps))\n+            return error(\"%s: Consensus::VerifyTx on %s: %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n \n         nInputs += tx.vin.size();\n-        nSigOps += GetLegacySigOpCount(tx);\n-        if (nSigOps > MAX_BLOCK_SIGOPS)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n-                             REJECT_INVALID, \"bad-blk-sigops\");\n-\n         if (!tx.IsCoinBase())\n         {\n             if (!view.HaveInputs(tx))\n@@ -3166,18 +3166,6 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n {\n     const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-\n-    // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n-        int nLockTimeFlags = 0;\n-        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n-                                ? pindexPrev->GetMedianTimePast()\n-                                : block.GetBlockTime();\n-        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n-            return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n-        }\n-    }\n-\n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n     if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))"
      },
      {
        "sha": "e53cb50612faf3a2c02f128c548b619691fbb5f4",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a355de8018f6044f4341b9f11537b687caec44f2/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a355de8018f6044f4341b9f11537b687caec44f2/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=a355de8018f6044f4341b9f11537b687caec44f2",
        "patch": "@@ -86,6 +86,23 @@ enum\n     //\n     // See BIP112 for details\n     SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10),\n+\n+    /* BIP113: Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1U << 10),\n+\n+    /**\n+     * BIP68: Validate relative locktime in input's sequences.\n+     *\n+     * CTrasaction::CTxIn::Sequence gets a consensus function for the\n+     * first time, in the same spirit of the original intend: the\n+     * signer should be able to arbitrarely order its own decisions in time\n+     * before publishing/sharing them within smart contracts. See BIP68.\n+     *\n+     * In contrast with the original nSequence which was only\n+     * theoretically useful assuming a universal uniform relay/mining\n+     * tx policy, BIP68 can be unambiguously enforced as a consensus rule.\n+     */\n+    LOCKTIME_VERIFY_SEQUENCE = (1U << 11),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      }
    ]
  },
  {
    "sha": "bf6ebd4c8c40b7dfba53067990f252a5749d63ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjZlYmQ0YzhjNDBiN2RmYmE1MzA2Nzk5MGYyNTJhNTc0OWQ2M2Vj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-25T20:10:32Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-25T20:10:32Z"
      },
      "message": "fixup travis?",
      "tree": {
        "sha": "f6182242b83939b8c20114a67681ad501c5ba5dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6182242b83939b8c20114a67681ad501c5ba5dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf6ebd4c8c40b7dfba53067990f252a5749d63ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf6ebd4c8c40b7dfba53067990f252a5749d63ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf6ebd4c8c40b7dfba53067990f252a5749d63ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf6ebd4c8c40b7dfba53067990f252a5749d63ec/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a355de8018f6044f4341b9f11537b687caec44f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a355de8018f6044f4341b9f11537b687caec44f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a355de8018f6044f4341b9f11537b687caec44f2"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d48f53b98ecf8f5fc43c1ee6140d02e18c542ba3",
        "filename": "src/consensus/consensus.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf6ebd4c8c40b7dfba53067990f252a5749d63ec/src/consensus/consensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf6ebd4c8c40b7dfba53067990f252a5749d63ec/src/consensus/consensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.cpp?ref=bf6ebd4c8c40b7dfba53067990f252a5749d63ec",
        "patch": "@@ -17,9 +17,6 @@ bool Consensus::CheckTxPreInputs(const CTransaction& tx, CValidationState& state\n     if (!IsFinalTx(tx, nHeight, nLockTimeCutoff))\n         return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n \n-    if (!CheckTransaction(tx, state))\n-        return false;\n-\n     nSigOps += GetLegacySigOpCount(tx);\n     if (nSigOps > MAX_BLOCK_SIGOPS)\n         return state.DoS(100, false, REJECT_INVALID, \"bad-blk-sigops\", \"too many sigops\");"
      },
      {
        "sha": "f82519c2558f7b5a150eccdfc3a3a0c85b5b6185",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf6ebd4c8c40b7dfba53067990f252a5749d63ec/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf6ebd4c8c40b7dfba53067990f252a5749d63ec/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=bf6ebd4c8c40b7dfba53067990f252a5749d63ec",
        "patch": "@@ -30,6 +30,7 @@ namespace Consensus {\n /**\n  * Performs all tx the checks that are common for coinbase and regular transactions.\n  * It doesn't require knowledge of the inputs (utxo).\n+ * @TODO this is incomplete until CheckTransaction() is called from it.\n  */\n bool CheckTxPreInputs(const CTransaction& tx, CValidationState& state, const int nHeight, int64_t nLockTimeCutoff, int64_t& nSigOps);\n "
      }
    ]
  }
]