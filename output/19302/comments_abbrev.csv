MarcoFalke,2020-06-17 11:26:01,Can be tested by adding an `assert(false)` to the line that I claim to add coverage to and observing a deterministic crash when running the new test and no crash when running the previous test script.,https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645316321,645316321,
MarcoFalke,2020-06-17 11:26:51,"@troygiorshev @jnewbery based on your recent work in this area, you seem qualified to review this :pray: ",https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645316660,645316660,
MarcoFalke,2020-06-17 12:42:17,"> they could be placed next to each other\n\nDone",https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645349840,645349840,
jnewbery,2020-06-17 12:57:20,@troygiorshev already has a test that verifies that we're able to deserialize a message that is split across two buffer reads. I think that's preferable - there's no obvious reason that split messages and invalid messages need to be linked.,https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645356952,645356952,
MarcoFalke,2020-06-17 13:12:09,Is there a pull request for the test? I'd be happy to review and close this one instead.,https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645364551,645364551,
troygiorshev,2020-06-17 15:05:05,#19304 should cover everything discussed here. ,https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645431753,645431753,
MarcoFalke,2020-06-17 15:45:58,Thx,https://github.com/bitcoin/bitcoin/pull/19302#issuecomment-645456064,645456064,
jonatack,2020-06-17 11:50:57,I think this log can be `info`.,https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441486490,441486490,test/functional/p2p_invalid_messages.py
jonatack,2020-06-17 11:51:25,I think this line can be removed.,https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441486733,441486733,test/functional/p2p_invalid_messages.py
MarcoFalke,2020-06-17 12:37:07,It is required to disconnect `conn_ping`,https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441511236,441511236,test/functional/p2p_invalid_messages.py
MarcoFalke,2020-06-17 12:41:55,Changed,https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441514079,441514079,test/functional/p2p_invalid_messages.py
jonatack,2020-06-17 12:54:42,"Interesting. I need to look at it more, but this seems to hit the conditional:\n```diff\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -652,9 +652,10 @@ int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n     nHdrPos += nCopy;\n \n     // if header incomplete, exit\n-    if (nHdrPos < CMessageHeader::HEADER_SIZE)\n+    if (nHdrPos < CMessageHeader::HEADER_SIZE) {\n",https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441521857,441521857,test/functional/p2p_invalid_messages.py
