DrahtBot,2021-07-21 10:29:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23602](https://github.com/bitcoin/bitcoin/pull/23602) (wallet: Split stuff from rpcwallet by MarcoFalke)\n* [#23578](htt",https://github.com/bitcoin/bitcoin/pull/22513#issuecomment-884080972,884080972,
laanwj,2021-07-28 14:17:56,I'm not entirely sure whether it's better to use an options object here instead of the conventional interface with named parameters? The latter is easier to use from `bitcoin-cli` at least (can just use `-named arg=value` instead of having to wrap everything into JSON manually).,https://github.com/bitcoin/bitcoin/pull/22513#issuecomment-888347306,888347306,
achow101,2021-07-28 18:05:57,"> I'm not entirely sure whether it's better to use an options object here instead of the conventional interface with named parameters? The latter is easier to use from `bitcoin-cli` at least (can just use `-named arg=value` instead of having to wrap everything into JSON manually).\n\nI wonder if there is some syntactic sugar thing we can add that allows us to not have to write JSON manually.",https://github.com/bitcoin/bitcoin/pull/22513#issuecomment-888512655,888512655,
ryanofsky,2021-07-28 20:22:15,"> I wonder if there is some syntactic sugar thing we can add that allows us to not have to write JSON manually.\n\nIf by syntactic sugar you mean a client-only change, then `bitcoin-cli` could accept a lighter weight YAML-like syntax and turn it into JSON. But this seems it would be a headache to maintain and a new thing users would have to learn to take advantage of.\n\nI think a better appro",https://github.com/bitcoin/bitcoin/pull/22513#issuecomment-888596094,888596094,
achow101,2021-07-28 21:21:34,I've dropped the change to use the options object since it is orthogonal to the purpose of this PR. It seems like that will need more discussion too. I've opened issue #22575 for the discussion of what to do about RPCs with lots of positional arguments.,https://github.com/bitcoin/bitcoin/pull/22513#issuecomment-888629969,888629969,
theStack,2021-07-21 11:16:02,nit: could also add doxygen documentation (a few lines above) for the newly introduced parameter,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r673882720,673882720,src/wallet/wallet.h
luke-jr,2021-07-22 07:54:43,Please take more care when changing function signatures. This could silently cast a `SignatureData*` to a `bool` when merging another PR created prior to the API change.,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r674576267,674576267,src/psbt.h
luke-jr,2021-07-22 07:55:30,Can you make an `options` Object instead of another series of booleans?,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r674576757,674576757,src/wallet/rpcwallet.cpp
achow101,2021-07-24 02:13:52,Done,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r675933052,675933052,src/wallet/wallet.h
achow101,2021-07-24 02:14:04,Changed to the last parameter,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r675933092,675933092,src/psbt.h
achow101,2021-07-24 02:14:09,Done,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r675933107,675933107,src/wallet/rpcwallet.cpp
meshcollider,2021-09-30 01:55:47,Could also assert `['complete']` is not true before finalizing but is true afterwards,https://github.com/bitcoin/bitcoin/pull/22513#discussion_r719000611,719000611,test/functional/rpc_psbt.py
Sjors,2021-11-19 09:50:37,"In that case the result documentation for `complete` should also be clarified: ""If the transaction has a complete set of signatures _and its inputs are finalized_"" ",https://github.com/bitcoin/bitcoin/pull/22513#discussion_r753034404,753034404,test/functional/rpc_psbt.py
