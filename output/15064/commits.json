[
  {
    "sha": "78097bb89df83dd012ebd64be01d5cb079ec0e46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODA5N2JiODlkZjgzZGQwMTJlYmQ2NGJlMDFkNWNiMDc5ZWMwZTQ2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-12-30T10:58:30Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-12-30T10:58:30Z"
      },
      "message": "GUI: Migrate BIP70 merchant info to mapValue[\"to\"]",
      "tree": {
        "sha": "1adf0e06763b49c739b99c14e745c8c1093b1077",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1adf0e06763b49c739b99c14e745c8c1093b1077"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78097bb89df83dd012ebd64be01d5cb079ec0e46",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78097bb89df83dd012ebd64be01d5cb079ec0e46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78097bb89df83dd012ebd64be01d5cb079ec0e46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78097bb89df83dd012ebd64be01d5cb079ec0e46/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2741b2b6f4688ee46caaa48b51c74a110320d50d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2741b2b6f4688ee46caaa48b51c74a110320d50d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2741b2b6f4688ee46caaa48b51c74a110320d50d"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 87,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9adedf583f05bcdd72a79b618d754ddef64ea6f7",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -354,6 +354,13 @@ class WalletImpl : public Wallet\n         }\n         return {};\n     }\n+    bool writeWalletTxValues(const uint256& txid, std::map<std::string, std::string> new_map)\n+    {\n+        LOCK(m_wallet.cs_wallet);\n+        auto mi = m_wallet.mapWallet.find(txid);\n+        assert(mi != m_wallet.mapWallet.end());\n+        return m_wallet.UpdateWtxValues(mi->second, new_map);\n+    }\n     WalletBalances getBalances() override\n     {\n         WalletBalances result;"
      },
      {
        "sha": "11eaf02684d30e8547c120c3b59c1a6b6f4718c1",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -187,6 +187,8 @@ class Wallet\n         bool& in_mempool,\n         int& num_blocks) = 0;\n \n+    virtual bool writeWalletTxValues(const uint256& txid, std::map<std::string, std::string> new_map) = 0;\n+\n     //! Get balances.\n     virtual WalletBalances getBalances() = 0;\n "
      },
      {
        "sha": "df0c102be1f95e348556c4e0592bf0dce3675b6a",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -2,6 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#ifdef ENABLE_BIP70\n+#include <qt/paymentrequestplus.h>\n+#include <qt/paymentserver.h>\n+#endif\n #include <qt/transactionrecord.h>\n \n #include <consensus/consensus.h>\n@@ -244,3 +252,46 @@ int TransactionRecord::getOutputIndex() const\n {\n     return idx;\n }\n+\n+void TransactionRecord::migrateOldInfo(interfaces::Wallet& wallet, const interfaces::WalletTx& wtx)\n+{\n+#ifdef ENABLE_BIP70\n+    if (wtx.value_map.count(\"to\") || wtx.value_map.count(\"skip_bip70\")) {\n+        // If there's already a \"to\", leave it alone\n+        return;\n+    }\n+\n+    for (const CTxOut& txout : wtx.tx->vout) {\n+        CTxDestination address;\n+        if (ExtractDestination(txout.scriptPubKey, address)) {\n+            std::string name;\n+            if (wallet.getAddress(address, &name, /* is_mine= */ nullptr, /* purpose= */ nullptr) && !name.empty()) {\n+                // At least one output has a label, so leave it alone\n+                return;\n+            }\n+        }\n+    }\n+\n+    interfaces::WalletTxStatus tx_status;\n+    interfaces::WalletOrderForm order_form;\n+    bool in_mempool;\n+    int num_blocks;\n+    wallet.getWalletTxDetails(wtx.tx->GetHash(), tx_status, order_form, in_mempool, num_blocks);\n+\n+    for (const std::pair<std::string, std::string>& r : order_form)\n+    {\n+        if (r.first == \"PaymentRequest\") {\n+            PaymentRequestPlus req;\n+            req.parse(QByteArray::fromRawData(r.second.data(), r.second.size()));\n+            QString merchant;\n+            if (req.getMerchant(PaymentServer::getCertStore(), merchant)) {\n+                const uint256 txid = wtx.tx->GetHash();\n+                std::map<std::string, std::string> new_map = wtx.value_map;\n+                new_map[\"to\"] = merchant.toStdString();\n+                wallet.writeWalletTxValues(txid, new_map);\n+                return;\n+            }\n+        }\n+    }\n+#endif\n+}"
      },
      {
        "sha": "57485eee1446cb192bd2a630d2259c04dda4e10d",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -143,6 +143,8 @@ class TransactionRecord\n     /** Return whether a status update is needed.\n      */\n     bool statusUpdateNeeded(int numBlocks) const;\n+\n+    static void migrateOldInfo(interfaces::Wallet& wallet, const interfaces::WalletTx& wtx);\n };\n \n #endif // BITCOIN_QT_TRANSACTIONRECORD_H"
      },
      {
        "sha": "9b23f115322ca6cdc777b6039bdb213e95f5f39b",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -80,6 +80,7 @@ class TransactionTablePriv\n         cachedWallet.clear();\n         {\n             for (const auto& wtx : wallet.getWalletTxs()) {\n+                TransactionRecord::migrateOldInfo(wallet, wtx);\n                 if (TransactionRecord::showTransaction()) {\n                     cachedWallet.append(TransactionRecord::decomposeTransaction(wtx));\n                 }"
      },
      {
        "sha": "0172cb36091d17dd46e1daa8cffc3a8456bf4dac",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -238,6 +238,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n     QByteArray transaction_array; /* store serialized transaction */\n \n     {\n+        mapValue_t mapValue;\n         std::vector<std::pair<std::string, std::string>> vOrderForm;\n         for (const SendCoinsRecipient &rcp : transaction.getRecipients())\n         {\n@@ -253,6 +254,9 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n                 std::string value;\n                 rcp.paymentRequest.SerializeToString(&value);\n                 vOrderForm.emplace_back(\"PaymentRequest\", std::move(value));\n+                if (!rcp.authenticatedMerchant.isEmpty()) {\n+                    mapValue[\"to\"] = rcp.authenticatedMerchant.toStdString();\n+                }\n             }\n             else\n #endif"
      },
      {
        "sha": "f63a37a4f44a32d954c0b974702eef92dbde6be4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -791,6 +791,24 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+bool CWallet::UpdateWtxValues(CWalletTx& wtx, const mapValue_t& new_map)\n+{\n+    LOCK(cs_wallet);\n+    wtx.mapValue = new_map;\n+\n+    WalletBatch batch(*database, \"r+\");\n+\n+    bool success = true;\n+    if (!batch.WriteTx(wtx)) {\n+        WalletLogPrintf(\"%s: Updating batch tx %s failed\\n\", __func__, wtx.GetHash().ToString());\n+        success = false;\n+    }\n+\n+    NotifyTransactionChanged(this, wtx.tx->GetHash(), CT_UPDATED);\n+\n+    return success;\n+}\n+\n bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n {\n     LOCK(cs_wallet);"
      },
      {
        "sha": "317ac47113d72f18c0c151e91984ff43abd7f73a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78097bb89df83dd012ebd64be01d5cb079ec0e46/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=78097bb89df83dd012ebd64be01d5cb079ec0e46",
        "patch": "@@ -1092,6 +1092,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     /** Mark a transaction as replaced by another transaction (e.g., BIP 125). */\n     bool MarkReplaced(const uint256& originalHash, const uint256& newHash);\n \n+    bool UpdateWtxValues(CWalletTx& wtx, const mapValue_t& new_map);\n+\n     //! Verify wallet naming and perform salvage on the wallet if required\n     static bool Verify(interfaces::Chain& chain, const WalletLocation& location, bool salvage_wallet, std::string& error_string, std::string& warning_string);\n "
      }
    ]
  }
]