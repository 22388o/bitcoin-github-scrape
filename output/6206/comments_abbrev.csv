laanwj,2015-06-01T08:05:59Z,There are still a _lot_ of these cases where a const reference can be used for strings throughout the source code. Instead of many little pulls I'd prefer (for post-0.11) a pull where they're all addressed at once.\n\nA quick `git grep string -- \*.h|grep -v '&'` shows at least:\n- FormatParagraph\n- CAlert::AppliesTo\n- ParseScript()\n- GetWarnings()\n- ParseNetwork()\n- CRPCTable::operator[](std,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107351313,107351313,
Diapolo,2015-06-01T08:50:40Z,I'm going to update this :).\n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107370851,107370851,
Diapolo,2015-06-01T09:09:54Z,"ParseNetwork() isn't suitable, because we use `boost::to_lower(net);` inside.\n",https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107376676,107376676,
Diapolo,2015-06-01T09:32:29Z,@laanwj I catched all your results and also changed a few other occurances in BOOST_FOREACH loops and in the CNode constructor (unrelated to std::string). Mind reviewing it?\n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107380546,107380546,
Diapolo,2015-06-01T11:24:28Z,"@laanwj I'm going to attach a second squashme pull, which covers BOOST_FOREACH and updated to constant refs if appropriate, if you want me to do so?\n",https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107405788,107405788,
laanwj,2015-06-01T11:25:23Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107405983,107405983,
laanwj,2015-06-01T11:28:08Z,"> I'm going to attach a second squashme pull, which covers BOOST_FOREACH and updated to constant refs if appropriate, if you want me to do so?\n\nYes, why not\n",https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107406915,107406915,
Diapolo,2015-06-01T12:06:23Z,@laanwj See 2nd commit.\n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107417514,107417514,
laanwj,2015-06-02T08:20:27Z,utACK^2 . WIll merge this after #6121 \n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107856630,107856630,
Diapolo,2015-06-02T08:31:22Z,"That's fine, could be I forgot a few cases in the GUI code, but that can be a seperate pull.\n",https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-107861910,107861910,
fanquake,2015-06-03T14:48:15Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-108465774,108465774,
laanwj,2015-06-04T16:48:35Z,Will merge after rebase.\n@diapolo can you please include `getValStr()` https://github.com/bitcoin/bitcoin/blob/master/src/univalue/univalue.h#L64 to return a const reference?\n,https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-108966531,108966531,
Diapolo,2015-06-04T17:36:11Z,"@laanwj Fixed 2 merge conflicts, one in rpcnet.cpp and the other in utilstrencodings.cpp and added getValStr(). Should be ready.\n",https://github.com/bitcoin/bitcoin/pull/6206#issuecomment-108985073,108985073,
laanwj,2015-06-01T09:41:09Z,"No need to do this for SOCKET, which is just an integer handle.\n",https://github.com/bitcoin/bitcoin/pull/6206#discussion_r31411763,31411763,src/net.cpp
Diapolo,2015-06-01T09:50:05Z,"You are right, reverted for hSocketIn :), thanks.\n",https://github.com/bitcoin/bitcoin/pull/6206#discussion_r31412220,31412220,src/net.cpp
