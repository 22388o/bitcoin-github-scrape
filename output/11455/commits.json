[
  {
    "sha": "ab973a87109417f6902fb7b155a89226af0043f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjk3M2E4NzEwOTQxN2Y2OTAyZmI3YjE1NWE4OTIyNmFmMDA0M2Y4",
    "commit": {
      "author": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-10-05T15:09:07Z"
      },
      "committer": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-10-05T15:09:07Z"
      },
      "message": "CTxMemPool::GetMinFee should not return CFeeRate(0)\n\nThe ::minRelayTxFee should be taken into account",
      "tree": {
        "sha": "3c5380eeb92be9f6b65d1cb0fdec85c54c5b79ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c5380eeb92be9f6b65d1cb0fdec85c54c5b79ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab973a87109417f6902fb7b155a89226af0043f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab973a87109417f6902fb7b155a89226af0043f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab973a87109417f6902fb7b155a89226af0043f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab973a87109417f6902fb7b155a89226af0043f8/comments",
    "author": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e93fff1463ae906fc986bf98c3b118c82f171546",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e93fff1463ae906fc986bf98c3b118c82f171546",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e93fff1463ae906fc986bf98c3b118c82f171546"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "70e14877807d27709e00ea1b6e720f46dcd79eab",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab973a87109417f6902fb7b155a89226af0043f8/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab973a87109417f6902fb7b155a89226af0043f8/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=ab973a87109417f6902fb7b155a89226af0043f8",
        "patch": "@@ -572,11 +572,10 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n \n     SetMockTime(42 + 7*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n     BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 1000);\n-    // ... but feerate should never drop below 1000\n \n     SetMockTime(42 + 8*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n-    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 0);\n-    // ... unless it has gone all the way to 0 (after getting past 1000/2)\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 1000);\n+    // ... but feerate should never drop below 1000\n \n     SetMockTime(0);\n }"
      },
      {
        "sha": "194d934eb4294e90bcea93a01d2ee16049c975d8",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab973a87109417f6902fb7b155a89226af0043f8/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab973a87109417f6902fb7b155a89226af0043f8/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ab973a87109417f6902fb7b155a89226af0043f8",
        "patch": "@@ -996,7 +996,7 @@ CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n \n         if (rollingMinimumFeeRate < (double)incrementalRelayFee.GetFeePerK() / 2) {\n             rollingMinimumFeeRate = 0;\n-            return CFeeRate(0);\n+            return ::minRelayTxFee;\n         }\n     }\n     return std::max(CFeeRate(llround(rollingMinimumFeeRate)), incrementalRelayFee);"
      }
    ]
  }
]