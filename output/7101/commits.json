[
  {
    "sha": "f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDFiMTk1YTAwNTRhZDhmYTFiMGZlY2E0ZTUzNzUxY2U5NGE0Y2Vm",
    "commit": {
      "author": {
        "name": "raedah",
        "email": "raedah@users.noreply.github.com",
        "date": "2015-11-25T00:23:44Z"
      },
      "committer": {
        "name": "raedah",
        "email": "raedah@users.noreply.github.com",
        "date": "2015-11-25T00:23:44Z"
      },
      "message": "display tx details correctly when part of a coinjoin",
      "tree": {
        "sha": "aefc5b33cb602cf73e9d5279b84ba37a048516a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aefc5b33cb602cf73e9d5279b84ba37a048516a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f01b195a0054ad8fa1b0feca4e53751ce94a4cef/comments",
    "author": {
      "login": "raedah",
      "id": 15878246,
      "node_id": "MDQ6VXNlcjE1ODc4MjQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15878246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raedah",
      "html_url": "https://github.com/raedah",
      "followers_url": "https://api.github.com/users/raedah/followers",
      "following_url": "https://api.github.com/users/raedah/following{/other_user}",
      "gists_url": "https://api.github.com/users/raedah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raedah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raedah/subscriptions",
      "organizations_url": "https://api.github.com/users/raedah/orgs",
      "repos_url": "https://api.github.com/users/raedah/repos",
      "events_url": "https://api.github.com/users/raedah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raedah/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "raedah",
      "id": 15878246,
      "node_id": "MDQ6VXNlcjE1ODc4MjQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15878246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raedah",
      "html_url": "https://github.com/raedah",
      "followers_url": "https://api.github.com/users/raedah/followers",
      "following_url": "https://api.github.com/users/raedah/following{/other_user}",
      "gists_url": "https://api.github.com/users/raedah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raedah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raedah/subscriptions",
      "organizations_url": "https://api.github.com/users/raedah/orgs",
      "repos_url": "https://api.github.com/users/raedah/repos",
      "events_url": "https://api.github.com/users/raedah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raedah/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b19fe277dd6208b80fea837adf9e64631b07f946",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b19fe277dd6208b80fea837adf9e64631b07f946",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b19fe277dd6208b80fea837adf9e64631b07f946"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 1,
      "deletions": 8
    },
    "files": [
      {
        "sha": "90e23dfd8f3bd04a35a54ede4c83c05721d12a1f",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f01b195a0054ad8fa1b0feca4e53751ce94a4cef/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f01b195a0054ad8fa1b0feca4e53751ce94a4cef/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
        "patch": "@@ -140,13 +140,6 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n             strHTML += \"(\" + tr(\"not accepted\") + \")\";\n         strHTML += \"<br>\";\n     }\n-    else if (nNet > 0)\n-    {\n-        //\n-        // Credit\n-        //\n-        strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nNet) + \"<br>\";\n-    }\n     else\n     {\n         isminetype fAllFromMe = ISMINE_SPENDABLE;"
      },
      {
        "sha": "08552e8bbde5848a91662d27372a38646a855824",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f01b195a0054ad8fa1b0feca4e53751ce94a4cef/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f01b195a0054ad8fa1b0feca4e53751ce94a4cef/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
        "patch": "@@ -42,7 +42,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n     uint256 hash = wtx.GetHash();\n     std::map<std::string, std::string> mapValue = wtx.mapValue;\n \n-    if (nNet > 0 || wtx.IsCoinBase())\n+    if (wtx.IsCoinBase())\n     {\n         //\n         // Credit"
      }
    ]
  },
  {
    "sha": "73496aaa0b5a68237b1e295a1a4c2de0f004dcc7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzQ5NmFhYTBiNWE2ODIzN2IxZTI5NWExYTRjMmRlMGYwMDRkY2M3",
    "commit": {
      "author": {
        "name": "raedah",
        "email": "raedah@users.noreply.github.com",
        "date": "2015-11-26T07:24:50Z"
      },
      "committer": {
        "name": "raedah",
        "email": "raedah@users.noreply.github.com",
        "date": "2015-11-26T07:24:50Z"
      },
      "message": "change main conditional block",
      "tree": {
        "sha": "c6dccf42cdf7a13e0e3fcd3bf54c0f03d6cfb781",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6dccf42cdf7a13e0e3fcd3bf54c0f03d6cfb781"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73496aaa0b5a68237b1e295a1a4c2de0f004dcc7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73496aaa0b5a68237b1e295a1a4c2de0f004dcc7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73496aaa0b5a68237b1e295a1a4c2de0f004dcc7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73496aaa0b5a68237b1e295a1a4c2de0f004dcc7/comments",
    "author": {
      "login": "raedah",
      "id": 15878246,
      "node_id": "MDQ6VXNlcjE1ODc4MjQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15878246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raedah",
      "html_url": "https://github.com/raedah",
      "followers_url": "https://api.github.com/users/raedah/followers",
      "following_url": "https://api.github.com/users/raedah/following{/other_user}",
      "gists_url": "https://api.github.com/users/raedah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raedah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raedah/subscriptions",
      "organizations_url": "https://api.github.com/users/raedah/orgs",
      "repos_url": "https://api.github.com/users/raedah/repos",
      "events_url": "https://api.github.com/users/raedah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raedah/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "raedah",
      "id": 15878246,
      "node_id": "MDQ6VXNlcjE1ODc4MjQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15878246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raedah",
      "html_url": "https://github.com/raedah",
      "followers_url": "https://api.github.com/users/raedah/followers",
      "following_url": "https://api.github.com/users/raedah/following{/other_user}",
      "gists_url": "https://api.github.com/users/raedah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raedah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raedah/subscriptions",
      "organizations_url": "https://api.github.com/users/raedah/orgs",
      "repos_url": "https://api.github.com/users/raedah/repos",
      "events_url": "https://api.github.com/users/raedah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raedah/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f01b195a0054ad8fa1b0feca4e53751ce94a4cef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f01b195a0054ad8fa1b0feca4e53751ce94a4cef"
      }
    ],
    "stats": {
      "total": 162,
      "additions": 80,
      "deletions": 82
    },
    "files": [
      {
        "sha": "311bfc99e4cdd052c753cf2a77a882dbf57caeda",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 80,
        "deletions": 82,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73496aaa0b5a68237b1e295a1a4c2de0f004dcc7/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73496aaa0b5a68237b1e295a1a4c2de0f004dcc7/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=73496aaa0b5a68237b1e295a1a4c2de0f004dcc7",
        "patch": "@@ -42,7 +42,80 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n     uint256 hash = wtx.GetHash();\n     std::map<std::string, std::string> mapValue = wtx.mapValue;\n \n-    if (wtx.IsCoinBase())\n+    bool involvesWatchAddress = false;\n+    isminetype fAllFromMe = ISMINE_SPENDABLE;\n+    BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n+    {\n+        isminetype mine = wallet->IsMine(txin);\n+        if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n+        if(fAllFromMe > mine) fAllFromMe = mine;\n+    }\n+\n+    isminetype fAllToMe = ISMINE_SPENDABLE;\n+    BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+    {\n+        isminetype mine = wallet->IsMine(txout);\n+        if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n+        if(fAllToMe > mine) fAllToMe = mine;\n+    }\n+\n+    if (fAllFromMe && fAllToMe)\n+    {\n+        // Payment to self\n+        CAmount nChange = wtx.GetChange();\n+\n+        parts.append(TransactionRecord(hash, nTime, TransactionRecord::SendToSelf, \"\",\n+                        -(nDebit - nChange), nCredit - nChange));\n+        parts.last().involvesWatchAddress = involvesWatchAddress;   // maybe pass to TransactionRecord as constructor argument\n+    }\n+    else if (fAllFromMe)\n+    {\n+        //\n+        // Debit\n+        //\n+        CAmount nTxFee = nDebit - wtx.GetValueOut();\n+\n+        for (unsigned int nOut = 0; nOut < wtx.vout.size(); nOut++)\n+        {\n+            const CTxOut& txout = wtx.vout[nOut];\n+            TransactionRecord sub(hash, nTime);\n+            sub.idx = parts.size();\n+            sub.involvesWatchAddress = involvesWatchAddress;\n+\n+            if(wallet->IsMine(txout))\n+            {\n+                // Ignore parts sent to self, as this is usually the change\n+                // from a transaction sent back to our own address.\n+                continue;\n+            }\n+\n+            CTxDestination address;\n+            if (ExtractDestination(txout.scriptPubKey, address))\n+            {\n+                // Sent to Bitcoin Address\n+                sub.type = TransactionRecord::SendToAddress;\n+                sub.address = CBitcoinAddress(address).ToString();\n+            }\n+            else\n+            {\n+                // Sent to IP, or other non-address transaction like OP_EVAL\n+                sub.type = TransactionRecord::SendToOther;\n+                sub.address = mapValue[\"to\"];\n+            }\n+\n+            CAmount nValue = txout.nValue;\n+            /* Add fee to first output */\n+            if (nTxFee > 0)\n+            {\n+                nValue += nTxFee;\n+                nTxFee = 0;\n+            }\n+            sub.debit = -nValue;\n+\n+            parts.append(sub);\n+        }\n+    }\n+    else if (fAllToMe)\n     {\n         //\n         // Credit\n@@ -81,87 +154,12 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n     }\n     else\n     {\n-        bool involvesWatchAddress = false;\n-        isminetype fAllFromMe = ISMINE_SPENDABLE;\n-        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n-        {\n-            isminetype mine = wallet->IsMine(txin);\n-            if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n-            if(fAllFromMe > mine) fAllFromMe = mine;\n-        }\n-\n-        isminetype fAllToMe = ISMINE_SPENDABLE;\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-        {\n-            isminetype mine = wallet->IsMine(txout);\n-            if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n-            if(fAllToMe > mine) fAllToMe = mine;\n-        }\n-\n-        if (fAllFromMe && fAllToMe)\n-        {\n-            // Payment to self\n-            CAmount nChange = wtx.GetChange();\n-\n-            parts.append(TransactionRecord(hash, nTime, TransactionRecord::SendToSelf, \"\",\n-                            -(nDebit - nChange), nCredit - nChange));\n-            parts.last().involvesWatchAddress = involvesWatchAddress;   // maybe pass to TransactionRecord as constructor argument\n-        }\n-        else if (fAllFromMe)\n-        {\n-            //\n-            // Debit\n-            //\n-            CAmount nTxFee = nDebit - wtx.GetValueOut();\n-\n-            for (unsigned int nOut = 0; nOut < wtx.vout.size(); nOut++)\n-            {\n-                const CTxOut& txout = wtx.vout[nOut];\n-                TransactionRecord sub(hash, nTime);\n-                sub.idx = parts.size();\n-                sub.involvesWatchAddress = involvesWatchAddress;\n-\n-                if(wallet->IsMine(txout))\n-                {\n-                    // Ignore parts sent to self, as this is usually the change\n-                    // from a transaction sent back to our own address.\n-                    continue;\n-                }\n-\n-                CTxDestination address;\n-                if (ExtractDestination(txout.scriptPubKey, address))\n-                {\n-                    // Sent to Bitcoin Address\n-                    sub.type = TransactionRecord::SendToAddress;\n-                    sub.address = CBitcoinAddress(address).ToString();\n-                }\n-                else\n-                {\n-                    // Sent to IP, or other non-address transaction like OP_EVAL\n-                    sub.type = TransactionRecord::SendToOther;\n-                    sub.address = mapValue[\"to\"];\n-                }\n-\n-                CAmount nValue = txout.nValue;\n-                /* Add fee to first output */\n-                if (nTxFee > 0)\n-                {\n-                    nValue += nTxFee;\n-                    nTxFee = 0;\n-                }\n-                sub.debit = -nValue;\n-\n-                parts.append(sub);\n-            }\n-        }\n-        else\n-        {\n-            //\n-            // Mixed debit transaction, can't break down payees\n-            //\n-            parts.append(TransactionRecord(hash, nTime, TransactionRecord::Other, \"\", nNet, 0));\n-            parts.last().involvesWatchAddress = involvesWatchAddress;\n-        }\n+        //\n+        // Mixed debit transaction, can't break down payees\n+        // Coinjoins\n+        //\n+        parts.append(TransactionRecord(hash, nTime, TransactionRecord::Other, \"\", nNet, 0));\n+        parts.last().involvesWatchAddress = involvesWatchAddress;\n     }\n \n     return parts;"
      }
    ]
  }
]