DrahtBot,2020-06-09 10:25:04,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19310 (wallet: BerkeleyDatabase make BerkeleyDatabase::Create, CreateMock, and CreateDummy non-static functions by achow1",https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-641195630,641195630,
pstratem,2020-06-11 05:17:02,@promag im using the block height because everything that calls it is using the block height,https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-642412989,642412989,
pstratem,2020-06-11 22:36:00,"@promag the rescan is pretty ambiguous to start with, it's scanning whatever the current active chain is\n\nedit: the entire concept in theory should do nothing so it's a much ""fuzzier"" thing than other wallet ops that handle reorgs cleanly",https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-642965385,642965385,
promag,2020-06-11 22:39:32,"Code review ACK dbd8498b8134cb4cefa351eb21bef2769a7bdf18, dropped unnecessary statement since last review",https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-642966543,642966543,
DrahtBot,2020-06-18 21:48:31,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-646322830,646322830,
ryanofsky,2020-06-30 21:35:32,"This isn't a good change, I think. It doesn't simplify the code very much, and makes the scanning code less correct and more fragile. The problem is the new `getBlockHash` call added here:\n\nhttps://github.com/pstratem/bitcoin/blob/dbd8498b8134cb4cefa351eb21bef2769a7bdf18/src/wallet/wallet.cpp#L1672\n\n`getBlockHash` is a synchronous method that will assert and the crash the process if it is ",https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-652058640,652058640,
promag,2020-07-01 10:30:14,"> Concept ACK dropping one of the start args. I have a preference to keep start_block hash instead.\n\n> @pstratem the interface uses heights but internally block hash is unambiguous - a block at a certain height can change after a reorg - but not a strong opinion.\n\nI've mentioned this before, but considering @ryanofsky comment https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-65205",https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-652337057,652337057,
ryanofsky,2020-07-01 15:51:59,Another option could be to drop the start_height argument and keep the start_block argument,https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-652501094,652501094,
fanquake,2021-08-18 08:00:49,Closing for now.,https://github.com/bitcoin/bitcoin/pull/19216#issuecomment-900904823,900904823,
MarcoFalke,2020-06-09 11:41:52,Is there a reason you didn't remove the `start_block` variable?,https://github.com/bitcoin/bitcoin/pull/19216#discussion_r437343394,437343394,src/wallet/rpcwallet.cpp
pstratem,2020-06-11 04:44:06,i didn't want to change the function called but i guess i should,https://github.com/bitcoin/bitcoin/pull/19216#discussion_r438539578,438539578,src/wallet/rpcwallet.cpp
promag,2020-06-11 21:24:58,I think this can be removed now that block hash is gone.,https://github.com/bitcoin/bitcoin/pull/19216#discussion_r439078557,439078557,src/wallet/rpcwallet.cpp
pstratem,2020-06-11 22:05:45,indeed,https://github.com/bitcoin/bitcoin/pull/19216#discussion_r439097727,439097727,src/wallet/rpcwallet.cpp
