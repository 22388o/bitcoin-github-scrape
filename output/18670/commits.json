[
  {
    "sha": "69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWZmZGRjODNlMGYzZTI2NWJmNmNmN2FlMzE0ODlhZTYyOWZlNmJl",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-04-16T12:41:46Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-04-16T23:09:39Z"
      },
      "message": "refactor: Remove unused methods CBloomFilter::reset()/clear()\n\nCo-authored-by: MarcoFalke <falke.marco@gmail.com>",
      "tree": {
        "sha": "599503b5ebb661970d9d3dbf7912caf98d634e10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/599503b5ebb661970d9d3dbf7912caf98d634e10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "544709763e1f45148d1926831e07ff03487673ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544709763e1f45148d1926831e07ff03487673ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/544709763e1f45148d1926831e07ff03487673ee"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 4,
      "deletions": 27
    },
    "files": [
      {
        "sha": "30af507243fd5b43775f25c37c44f615376f4785",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
        "patch": "@@ -102,19 +102,6 @@ bool CBloomFilter::contains(const uint256& hash) const\n     return contains(data);\n }\n \n-void CBloomFilter::clear()\n-{\n-    vData.assign(vData.size(),0);\n-    isFull = false;\n-    isEmpty = true;\n-}\n-\n-void CBloomFilter::reset(const unsigned int nNewTweak)\n-{\n-    clear();\n-    nTweak = nNewTweak;\n-}\n-\n bool CBloomFilter::IsWithinSizeConstraints() const\n {\n     return vData.size() <= MAX_BLOOM_FILTER_SIZE && nHashFuncs <= MAX_HASH_FUNCS;"
      },
      {
        "sha": "8e3b7be54d073f4320e3e77eca4b3c422f813cda",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
        "patch": "@@ -84,9 +84,6 @@ class CBloomFilter\n     bool contains(const COutPoint& outpoint) const;\n     bool contains(const uint256& hash) const;\n \n-    void clear();\n-    void reset(const unsigned int nNewTweak);\n-\n     //! True if the size is <= MAX_BLOOM_FILTER_SIZE and the number of hash functions is <= MAX_HASH_FUNCS\n     //! (catch a filter which was just deserialized which was too big)\n     bool IsWithinSizeConstraints() const;"
      },
      {
        "sha": "bcf2e8ccfff25de25d017900f6bf9421a760071f",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
        "patch": "@@ -27,6 +27,7 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_serialize)\n {\n     CBloomFilter filter(3, 0.01, 0, BLOOM_UPDATE_ALL);\n \n+    BOOST_CHECK_MESSAGE( !filter.contains(ParseHex(\"99108ad8ed9bb6274d3980bab5a85c048f0950c8\")), \"Bloom filter should be empty!\");\n     filter.insert(ParseHex(\"99108ad8ed9bb6274d3980bab5a85c048f0950c8\"));\n     BOOST_CHECK_MESSAGE( filter.contains(ParseHex(\"99108ad8ed9bb6274d3980bab5a85c048f0950c8\")), \"Bloom filter doesn't contain just-inserted object!\");\n     // One bit different in first byte\n@@ -50,8 +51,6 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_serialize)\n     BOOST_CHECK_EQUAL_COLLECTIONS(stream.begin(), stream.end(), expected.begin(), expected.end());\n \n     BOOST_CHECK_MESSAGE( filter.contains(ParseHex(\"99108ad8ed9bb6274d3980bab5a85c048f0950c8\")), \"Bloom filter doesn't contain just-inserted object!\");\n-    filter.clear();\n-    BOOST_CHECK_MESSAGE( !filter.contains(ParseHex(\"99108ad8ed9bb6274d3980bab5a85c048f0950c8\")), \"Bloom filter should be empty!\");\n }\n \n BOOST_AUTO_TEST_CASE(bloom_create_insert_serialize_with_tweak)"
      },
      {
        "sha": "50036ce5bd8a883b8950cbdaa00679913db1545f",
        "filename": "src/test/fuzz/bloom_filter.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/test/fuzz/bloom_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ffddc83e0f3e265bf6cf7ae31489ae629fe6be/src/test/fuzz/bloom_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/bloom_filter.cpp?ref=69ffddc83e0f3e265bf6cf7ae31489ae629fe6be",
        "patch": "@@ -25,7 +25,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         fuzzed_data_provider.ConsumeIntegral<unsigned int>(),\n         static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n     while (fuzzed_data_provider.remaining_bytes() > 0) {\n-        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 6)) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 4)) {\n         case 0: {\n             const std::vector<unsigned char> b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n             (void)bloom_filter.contains(b);\n@@ -56,13 +56,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             assert(present);\n             break;\n         }\n-        case 3:\n-            bloom_filter.clear();\n-            break;\n-        case 4:\n-            bloom_filter.reset(fuzzed_data_provider.ConsumeIntegral<unsigned int>());\n-            break;\n-        case 5: {\n+        case 3: {\n             const Optional<CMutableTransaction> mut_tx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n             if (!mut_tx) {\n                 break;\n@@ -71,7 +65,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             (void)bloom_filter.IsRelevantAndUpdate(tx);\n             break;\n         }\n-        case 6:\n+        case 4:\n             bloom_filter.UpdateEmptyFull();\n             break;\n         }"
      }
    ]
  }
]