[
  {
    "sha": "9fc68faf35c700ae955af194dd7f8c1aee85a05b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmM2OGZhZjM1YzcwMGFlOTU1YWYxOTRkZDdmOGMxYWVlODVhMDVi",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-01-05T12:32:41Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-04-28T08:00:28Z"
      },
      "message": "script: match multisigs with up to MAX_PUBKEYS_PER_MULTISIG keys\n\nWe were previously ruling out 17-20 pubkeys multisig, while they are\nonly invalid under P2SH context.\nThis makes multisigs with up to 20 keys be detected as valid by the\nsolver. This is however *not* a policy change as it would only apply\nto bare multisigs, which are already limited to 3 pubkeys.\n\nNote that this does not change the sigOpCount calculation (as it would\nbreak consensus). Therefore 1-16 keys multisigs are counted as 1-16 sigops\nand 17-20 keys multisigs are counted as 20 sigops.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "cf66e42635bc96a9152feb391a8b9b89bca31644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf66e42635bc96a9152feb391a8b9b89bca31644"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fc68faf35c700ae955af194dd7f8c1aee85a05b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmCJFhwACgkQ4T/BRc0/\nQwQv6Av/WBMso+TihJImZuWFAxmGZjcrlKHCcPpGWNjS/ccQJilddjUVG4WAL0L2\nkTJaHUY4T29KOyWca0vdO6o+cUdFxbpXTed2QCYyuZ68LRKBEuMWHj1p2k6J6YRo\nNrojeqnEQRSic0x4+uQJXEvIxycRIrMVUgfvRt294qaBc13JZebnuyYe+1qLijDP\noLAqENa72GKZBfU8QubIrkJhB5pSo62vEw23Mx+GQh+amaIxocpmKM/02OjB0k5y\nP8UUrM5bGb9J9GmBV2QUO3dh1lNawO9HbdCLPrrYzZ3nQmNDYfDFOJWAXjaqc1yS\nUt2z5mYpokO/mN3XJ00Dqo6DAu2OuMqYFcDFY1/DyItiQDpctRzNLJcYG4X2SDAN\naBwQLTq2UM3Dzyqus1hDPlXjd1sGCLSO7JZ20PrPTO031AH3DqPywr4+0YhhJdBT\nw/n5VyeAm2KuIE1WOVNg5AsXm8mxTaTBBUDhqSEtTq9OgapseGM3jZHiuA3E2Dba\nbX24U4Lq\n=B4YI\n-----END PGP SIGNATURE-----",
        "payload": "tree cf66e42635bc96a9152feb391a8b9b89bca31644\nparent ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b\nauthor Antoine Poinsot <darosior@protonmail.com> 1609849961 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1619596828 +0200\n\nscript: match multisigs with up to MAX_PUBKEYS_PER_MULTISIG keys\n\nWe were previously ruling out 17-20 pubkeys multisig, while they are\nonly invalid under P2SH context.\nThis makes multisigs with up to 20 keys be detected as valid by the\nsolver. This is however *not* a policy change as it would only apply\nto bare multisigs, which are already limited to 3 pubkeys.\n\nNote that this does not change the sigOpCount calculation (as it would\nbreak consensus). Therefore 1-16 keys multisigs are counted as 1-16 sigops\nand 17-20 keys multisigs are counted as 20 sigops.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fc68faf35c700ae955af194dd7f8c1aee85a05b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fc68faf35c700ae955af194dd7f8c1aee85a05b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fc68faf35c700ae955af194dd7f8c1aee85a05b/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac219dcbcc18a48210d58cdfaf7cf27ca5e7435b"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 72,
      "deletions": 8
    },
    "files": [
      {
        "sha": "7e119bb3c4ba18426d2e2348d27e6dd6ba2fbe04",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=9fc68faf35c700ae955af194dd7f8c1aee85a05b",
        "patch": "@@ -225,7 +225,7 @@ bool static CheckPubKeyEncoding(const valtype &vchPubKey, unsigned int flags, co\n     return true;\n }\n \n-bool static CheckMinimalPush(const valtype& data, opcodetype opcode) {\n+bool CheckMinimalPush(const valtype& data, opcodetype opcode) {\n     // Excludes OP_1NEGATE, OP_1-16 since they are by definition minimal\n     assert(0 <= opcode && opcode <= OP_PUSHDATA4);\n     if (data.size() == 0) {"
      },
      {
        "sha": "212de17c7b03b1d89bbc910a49a86dd6dc6b3939",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=9fc68faf35c700ae955af194dd7f8c1aee85a05b",
        "patch": "@@ -316,6 +316,8 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n \n size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags);\n \n+bool CheckMinimalPush(const std::vector<unsigned char>& data, opcodetype opcode);\n+\n int FindAndDelete(CScript& script, const CScript& b);\n \n #endif // BITCOIN_SCRIPT_INTERPRETER_H"
      },
      {
        "sha": "e6f99f3034e157b0596ecb77f86448b78f3f069d",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 7,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=9fc68faf35c700ae955af194dd7f8c1aee85a05b",
        "patch": "@@ -88,21 +88,53 @@ static constexpr bool IsSmallInteger(opcodetype opcode)\n     return opcode >= OP_1 && opcode <= OP_16;\n }\n \n-static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+static constexpr bool IsPushdataOp(opcodetype opcode)\n+{\n+    return opcode > OP_FALSE && opcode <= OP_PUSHDATA4;\n+}\n+\n+static constexpr bool IsValidMultisigKeyCount(int n_keys)\n+{\n+    return n_keys > 0 && n_keys <= MAX_PUBKEYS_PER_MULTISIG;\n+}\n+\n+static bool GetMultisigKeyCount(opcodetype opcode, valtype data, int& count)\n+{\n+    if (IsSmallInteger(opcode)) {\n+        count = CScript::DecodeOP_N(opcode);\n+        return IsValidMultisigKeyCount(count);\n+    }\n+\n+    if (IsPushdataOp(opcode)) {\n+        if (!CheckMinimalPush(data, opcode)) return false;\n+        try {\n+            count = CScriptNum(data, /* fRequireMinimal = */ true).getint();\n+            return IsValidMultisigKeyCount(count);\n+        } catch (const scriptnum_error&) {\n+            return false;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector<valtype>& pubkeys)\n {\n     opcodetype opcode;\n     valtype data;\n+    int num_keys;\n+\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode)) return false;\n-    required = CScript::DecodeOP_N(opcode);\n+    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!IsSmallInteger(opcode)) return false;\n-    unsigned int keys = CScript::DecodeOP_N(opcode);\n-    if (pubkeys.size() != keys || keys < required) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+\n+    if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n+\n     return (it + 1 == script.end());\n }\n \n@@ -163,7 +195,7 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n         return TxoutType::PUBKEYHASH;\n     }\n \n-    unsigned int required;\n+    int required;\n     std::vector<std::vector<unsigned char>> keys;\n     if (MatchMultisig(scriptPubKey, required, keys)) {\n         vSolutionsRet.push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..16"
      },
      {
        "sha": "975c982fea998822b0641aa1ee08ac1fadc32774",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fc68faf35c700ae955af194dd7f8c1aee85a05b/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=9fc68faf35c700ae955af194dd7f8c1aee85a05b",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <pubkey.h>\n #include <script/descriptor.h>\n #include <script/sign.h>\n #include <script/standard.h>\n@@ -27,6 +28,14 @@ void CheckUnparsable(const std::string& prv, const std::string& pub, const std::\n     BOOST_CHECK_EQUAL(error, expected_error);\n }\n \n+/** Check that the script is inferred as non-standard */\n+void CheckInferRaw(const CScript& script)\n+{\n+    FlatSigningProvider dummy_provider;\n+    std::unique_ptr<Descriptor> desc = InferDescriptor(script, dummy_provider);\n+    BOOST_CHECK(desc->ToString().rfind(\"raw(\", 0) == 0);\n+}\n+\n constexpr int DEFAULT = 0;\n constexpr int RANGE = 1; // Expected to be ranged descriptor\n constexpr int HARDENED = 2; // Derivation needs access to private keys\n@@ -376,6 +385,27 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n     CheckUnparsable(\"\", \"addr(asdf)\", \"Address is not valid\"); // Invalid address\n     CheckUnparsable(\"\", \"raw(asdf)\", \"Raw script is not hex\"); // Invalid script\n     CheckUnparsable(\"\", \"raw(\u00dc)#00000000\", \"Invalid characters in payload\"); // Invalid chars\n+\n+    // A 2of4 but using a direct push rather than OP_2\n+    CScript nonminimalmultisig;\n+    CKey keys[4];\n+    nonminimalmultisig << std::vector<unsigned char>{2};\n+    for (int i = 0; i < 4; i++) {\n+        keys[i].MakeNewKey(true);\n+        nonminimalmultisig << ToByteVector(keys[i].GetPubKey());\n+    }\n+    nonminimalmultisig << 4 << OP_CHECKMULTISIG;\n+    CheckInferRaw(nonminimalmultisig);\n+\n+    // A 2of4 but using a direct push rather than OP_4\n+    nonminimalmultisig.clear();\n+    nonminimalmultisig << 2;\n+    for (int i = 0; i < 4; i++) {\n+        keys[i].MakeNewKey(true);\n+        nonminimalmultisig << ToByteVector(keys[i].GetPubKey());\n+    }\n+    nonminimalmultisig << std::vector<unsigned char>{4} << OP_CHECKMULTISIG;\n+    CheckInferRaw(nonminimalmultisig);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTA0MjlkM2FmNmRlNDhmNjE5MWYxNDRkZmY0YWQ0YWI2NzJkY2Q2",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-01-05T13:14:55Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-04-28T08:00:29Z"
      },
      "message": "script: allow up to 20 keys in wsh() descriptors\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "d0dddac37126b0268254200e83a137230c1e8425",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0dddac37126b0268254200e83a137230c1e8425"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmCJFh0ACgkQ4T/BRc0/\nQwTG9wwAkZoIn2dLG8E+w5uwTtYKluvL/YLbHfBatwckJdjVDaR1cEZqmevVG148\ne+r59yPZ7LLTgtnWea4h+n/wScEN/QTCSlpT04vCBfI3wOlOjg94oMnFy0Erteql\n2rVfyoFCxFzQPUXt33JkLXXAUhUdyIFXshqDHk/OMZnWNon/F09fH2LAoFccPJw3\n+zdCYj6t+RsE5PV/GhlQmLY7eH15s45bu4RXpqozyV00ev51fqfcTz5+j28yqEWs\nbfCj96/AgxS40P7tQ7uz9dXKQbASDaqYW62jTdkhh5taIvaWBje0TWO1c4UV9wJZ\nW6YZ1ZSgvDUzBFCRX+oIUiNSu/d8NBbJll9awWBt9ZHTdqbExaiNlJ+IX5fM0hbX\nO1USCcPLzF3KrZ0Muac8DwWGgw6WFhZ/uppImUet88dvKNTauzCtz8sOSTIVMDPt\nRmLBo5x7Z+g2Occot7kr7m47H91PrXEJgp3uo5BGJWakRANUFi4/k0HwvMVP7fjO\n8UJjfv+K\n=wJNJ\n-----END PGP SIGNATURE-----",
        "payload": "tree d0dddac37126b0268254200e83a137230c1e8425\nparent 9fc68faf35c700ae955af194dd7f8c1aee85a05b\nauthor Antoine Poinsot <darosior@protonmail.com> 1609852495 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1619596829 +0200\n\nscript: allow up to 20 keys in wsh() descriptors\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fc68faf35c700ae955af194dd7f8c1aee85a05b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fc68faf35c700ae955af194dd7f8c1aee85a05b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fc68faf35c700ae955af194dd7f8c1aee85a05b"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e433ed6764364340c94f6da0be39efe55e88b5f7",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
        "patch": "@@ -998,8 +998,8 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n             providers.emplace_back(std::move(pk));\n             key_exp_index++;\n         }\n-        if (providers.empty() || providers.size() > 16) {\n-            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());\n+        if (providers.empty() || providers.size() > MAX_PUBKEYS_PER_MULTISIG) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and %d keys, inclusive\", providers.size(), MAX_PUBKEYS_PER_MULTISIG);\n             return nullptr;\n         } else if (thres < 1) {\n             error = strprintf(\"Multisig threshold cannot be %d, must be at least 1\", thres);\n@@ -1015,6 +1015,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n             }\n         }\n         if (ctx == ParseScriptContext::P2SH) {\n+            // This limits the maximum number of compressed pubkeys to 15.\n             if (script_size + 3 > MAX_SCRIPT_ELEMENT_SIZE) {\n                 error = strprintf(\"P2SH script is too large, %d bytes is larger than %d bytes\", script_size + 3, MAX_SCRIPT_ELEMENT_SIZE);\n                 return nullptr;"
      },
      {
        "sha": "364fac3c84db858bd35c33e08898029685a89da1",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
        "patch": "@@ -198,9 +198,9 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n     int required;\n     std::vector<std::vector<unsigned char>> keys;\n     if (MatchMultisig(scriptPubKey, required, keys)) {\n-        vSolutionsRet.push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..16\n+        vSolutionsRet.push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..20\n         vSolutionsRet.insert(vSolutionsRet.end(), keys.begin(), keys.end());\n-        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())}); // safe as size is in range 1..16\n+        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())}); // safe as size is in range 1..20\n         return TxoutType::MULTISIG;\n     }\n \n@@ -350,10 +350,11 @@ CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys)\n {\n     CScript script;\n \n-    script << CScript::EncodeOP_N(nRequired);\n+    script << nRequired;\n     for (const CPubKey& key : keys)\n         script << ToByteVector(key);\n-    script << CScript::EncodeOP_N(keys.size()) << OP_CHECKMULTISIG;\n+    script << keys.size() << OP_CHECKMULTISIG;\n+\n     return script;\n }\n "
      },
      {
        "sha": "36e2dac3ffc06005da07ed84c14e2d5909c8a0da",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae0429d3af6de48f6191f144dff4ad4ab672dcd6/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
        "patch": "@@ -360,8 +360,9 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n     CheckUnparsable(\"multi(0,L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1,5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"multi(0,03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd,04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", \"Multisig threshold cannot be 0, must be at least 1\"); // Threshold of 0\n     CheckUnparsable(\"multi(3,L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1,5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"multi(3,03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd,04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", \"Multisig threshold cannot be larger than the number of keys; threshold is 3 but only 2 keys specified\"); // Threshold larger than number of keys\n     CheckUnparsable(\"multi(3,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f)\", \"multi(3,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8)\", \"Cannot have 4 pubkeys in bare multisig; only at most 3 pubkeys\"); // Threshold larger than number of keys\n-    CheckUnparsable(\"sh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9,L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\",\"sh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232,03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", \"Cannot have 17 keys in multisig; must have between 1 and 16 keys, inclusive\"); // Cannot have more than 16 keys in a multisig\n-\n+    CheckUnparsable(\"sh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9,L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\",\"sh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232,03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", \"P2SH script is too large, 581 bytes is larger than 520 bytes\"); // Cannot have more than 15 keys in a P2SH multisig, or we exceed maximum push size\n+    Check(\"wsh(multi(20,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9,KzRedjSwMggebB3VufhbzpYJnvHfHe9kPJSjCU5QpJdAW3NSZxYS,Kyjtp5858xL7JfeV4PNRCKy2t6XvgqNNepArGY9F9F1SSPqNEMs3,L2D4RLHPiHBidkHS8ftx11jJk1hGFELvxh8LoxNQheaGT58dKenW,KyLPZdwY4td98bKkXqEXTEBX3vwEYTQo1yyLjX2jKXA63GBpmSjv))\",\"wsh(multi(20,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232,02bc2feaa536991d269aae46abb8f3772a5b3ad592314945e51543e7da84c4af6e,0318bf32e5217c1eb771a6d5ce1cd39395dff7ff665704f175c9a5451d95a2f2ca,02c681a6243f16208c2004bb81f5a8a67edfdd3e3711534eadeec3dcf0b010c759,0249fdd6b69768b8d84b4893f8ff84b36835c50183de20fcae8f366a45290d01fd))\", \"wsh(multi(20,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9,KzRedjSwMggebB3VufhbzpYJnvHfHe9kPJSjCU5QpJdAW3NSZxYS,Kyjtp5858xL7JfeV4PNRCKy2t6XvgqNNepArGY9F9F1SSPqNEMs3,L2D4RLHPiHBidkHS8ftx11jJk1hGFELvxh8LoxNQheaGT58dKenW,KyLPZdwY4td98bKkXqEXTEBX3vwEYTQo1yyLjX2jKXA63GBpmSjv))\",\"wsh(multi(20,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232,02bc2feaa536991d269aae46abb8f3772a5b3ad592314945e51543e7da84c4af6e,0318bf32e5217c1eb771a6d5ce1cd39395dff7ff665704f175c9a5451d95a2f2ca,02c681a6243f16208c2004bb81f5a8a67edfdd3e3711534eadeec3dcf0b010c759,0249fdd6b69768b8d84b4893f8ff84b36835c50183de20fcae8f366a45290d01fd))\", SIGNABLE, {{\"0020376bd8344b8b6ebe504ff85ef743eaa1aa9272178223bcb6887e9378efb341ac\"}}, OutputType::BECH32); // In P2WSH we can have up to 20 keys\n+Check(\"sh(wsh(multi(20,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9,KzRedjSwMggebB3VufhbzpYJnvHfHe9kPJSjCU5QpJdAW3NSZxYS,Kyjtp5858xL7JfeV4PNRCKy2t6XvgqNNepArGY9F9F1SSPqNEMs3,L2D4RLHPiHBidkHS8ftx11jJk1hGFELvxh8LoxNQheaGT58dKenW,KyLPZdwY4td98bKkXqEXTEBX3vwEYTQo1yyLjX2jKXA63GBpmSjv)))\",\"sh(wsh(multi(20,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232,02bc2feaa536991d269aae46abb8f3772a5b3ad592314945e51543e7da84c4af6e,0318bf32e5217c1eb771a6d5ce1cd39395dff7ff665704f175c9a5451d95a2f2ca,02c681a6243f16208c2004bb81f5a8a67edfdd3e3711534eadeec3dcf0b010c759,0249fdd6b69768b8d84b4893f8ff84b36835c50183de20fcae8f366a45290d01fd)))\", \"sh(wsh(multi(20,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9,KzRedjSwMggebB3VufhbzpYJnvHfHe9kPJSjCU5QpJdAW3NSZxYS,Kyjtp5858xL7JfeV4PNRCKy2t6XvgqNNepArGY9F9F1SSPqNEMs3,L2D4RLHPiHBidkHS8ftx11jJk1hGFELvxh8LoxNQheaGT58dKenW,KyLPZdwY4td98bKkXqEXTEBX3vwEYTQo1yyLjX2jKXA63GBpmSjv)))\",\"sh(wsh(multi(20,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232,02bc2feaa536991d269aae46abb8f3772a5b3ad592314945e51543e7da84c4af6e,0318bf32e5217c1eb771a6d5ce1cd39395dff7ff665704f175c9a5451d95a2f2ca,02c681a6243f16208c2004bb81f5a8a67edfdd3e3711534eadeec3dcf0b010c759,0249fdd6b69768b8d84b4893f8ff84b36835c50183de20fcae8f366a45290d01fd)))\", SIGNABLE, {{\"a914c2c9c510e9d7f92fd6131e94803a8d34a8ef675e87\"}}, OutputType::P2SH_SEGWIT); // Even if it's wrapped into P2SH\n     // Check for invalid nesting of structures\n     CheckUnparsable(\"sh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"sh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", \"A function is needed within P2SH\"); // P2SH needs a script, not a key\n     CheckUnparsable(\"sh(combo(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(combo(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", \"Can only have combo() at top level\"); // Old must be top level"
      }
    ]
  },
  {
    "sha": "063df9e89730fd2c92646577e2fab894e1692130",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjNkZjllODk3MzBmZDJjOTI2NDY1NzdlMmZhYjg5NGUxNjkyMTMw",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-01-06T13:03:31Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-04-28T08:00:30Z"
      },
      "message": "test/functional: standardness sanity checks for P2(W)SH multisig\n\nNote that it also test for sortedmulti(), which the previous commit didn't.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "a6f59769453823854b15a78c58d32298b6c83e8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6f59769453823854b15a78c58d32298b6c83e8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/063df9e89730fd2c92646577e2fab894e1692130",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmCJFh4ACgkQ4T/BRc0/\nQwQLYgv/R8yo6EXoD+MENj9nN9ZSX7PlCt4LDjEPCya2TMXsh7MbpJqx4LC8BmCs\nO3Dw9STuZnbgaIffAhq5fFqbW+o/zgLQ/8uvpTAZsXPr+TEh38/HeQtP/0de3sHp\nKT1G/JTz1Vu1+nictnUTvXuFfNz/TKkZLMmbZVo3Yz1iBBjUBHfMc3f4RSU45Oto\nTuQ98SZkJf5ol9UB+S+e9pAgff0IQIEdcGwu+BpvDJGpEl+G5sHsz8ZEtukSXUrp\nd1Ve1kBcCKTzpfiJPoeQgxHzq1lKbj15xF7mHQ3tCmYx1Lwe8Z9jkdazunKpKJkr\nW4LFOUnfJlOLQzXofl+sQreH3lXQg5siXt9XUrTj7/xkUneVXc6C1L/+MFUZFxZR\nbOissoZPcqpehWR5ILEUnOhbvm66kT/2EipZUk304LxZJQ6a3VnlHWD7G+Wbgw38\nG2KRh9e6RbdEoaFiGvX67oZXr9zve5qQb05l8oxZq+KYn9xMuQb57TPwFDE40R4G\ncLU8bLHe\n=cRhh\n-----END PGP SIGNATURE-----",
        "payload": "tree a6f59769453823854b15a78c58d32298b6c83e8a\nparent ae0429d3af6de48f6191f144dff4ad4ab672dcd6\nauthor Antoine Poinsot <darosior@protonmail.com> 1609938211 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1619596830 +0200\n\ntest/functional: standardness sanity checks for P2(W)SH multisig\n\nNote that it also test for sortedmulti(), which the previous commit didn't.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/063df9e89730fd2c92646577e2fab894e1692130",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/063df9e89730fd2c92646577e2fab894e1692130",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/063df9e89730fd2c92646577e2fab894e1692130/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae0429d3af6de48f6191f144dff4ad4ab672dcd6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae0429d3af6de48f6191f144dff4ad4ab672dcd6"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 71,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0a3dd5662046124d24ea0ad009adbbd1e0e13e40",
        "filename": "test/functional/wallet_importdescriptors.py",
        "status": "modified",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/063df9e89730fd2c92646577e2fab894e1692130/test/functional/wallet_importdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/063df9e89730fd2c92646577e2fab894e1692130/test/functional/wallet_importdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptors.py?ref=063df9e89730fd2c92646577e2fab894e1692130",
        "patch": "@@ -459,6 +459,77 @@ def run_test(self):\n         assert_equal(tx_signed_2['complete'], True)\n         self.nodes[1].sendrawtransaction(tx_signed_2['hex'])\n \n+        self.log.info(\"We can create and use a huge multisig under P2WSH\")\n+        self.nodes[1].createwallet(wallet_name='wmulti_priv_big', blank=True, descriptors=True)\n+        wmulti_priv_big = self.nodes[1].get_wallet_rpc('wmulti_priv_big')\n+        xkey = \"tprv8ZgxMBicQKsPeZSeYx7VXDDTs3XrTcmZQpRLbAeSQFCQGgKwR4gKpcxHaKdoTNHniv4EPDJNdzA3KxRrrBHcAgth8fU5X4oCndkkxk39iAt/*\"\n+        xkey_int = \"tprv8ZgxMBicQKsPeZSeYx7VXDDTs3XrTcmZQpRLbAeSQFCQGgKwR4gKpcxHaKdoTNHniv4EPDJNdzA3KxRrrBHcAgth8fU5X4oCndkkxk39iAt/1/*\"\n+        res = wmulti_priv_big.importdescriptors([\n+        {\n+            \"desc\": descsum_create(f\"wsh(sortedmulti(20,{(xkey + ',') * 19}{xkey}))\"),\n+            \"active\": True,\n+            \"range\": 1000,\n+            \"next_index\": 0,\n+            \"timestamp\": \"now\"\n+        },\n+        {\n+            \"desc\": descsum_create(f\"wsh(sortedmulti(20,{(xkey_int + ',') * 19}{xkey_int}))\"),\n+            \"active\": True,\n+            \"internal\": True,\n+            \"range\": 1000,\n+            \"next_index\": 0,\n+            \"timestamp\": \"now\"\n+        }])\n+        assert_equal(res[0]['success'], True)\n+        assert_equal(res[1]['success'], True)\n+\n+        addr = wmulti_priv_big.getnewaddress()\n+        w0.sendtoaddress(addr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        # It is standard and would relay.\n+        txid = wmulti_priv_big.sendtoaddress(w0.getnewaddress(), 9.999)\n+        decoded = wmulti_priv_big.decoderawtransaction(wmulti_priv_big.gettransaction(txid)['hex'])\n+        # 20 sigs + dummy + witness script\n+        assert_equal(len(decoded['vin'][0]['txinwitness']), 22)\n+\n+\n+        self.log.info(\"Under P2SH, multisig are standard with up to 15 \"\n+                      \"compressed keys\")\n+        self.nodes[1].createwallet(wallet_name='multi_priv_big_legacy',\n+                                   blank=True, descriptors=True)\n+        multi_priv_big = self.nodes[1].get_wallet_rpc('multi_priv_big_legacy')\n+        res = multi_priv_big.importdescriptors([\n+        {\n+            \"desc\": descsum_create(f\"sh(multi(15,{(xkey + ',') * 14}{xkey}))\"),\n+            \"active\": True,\n+            \"range\": 1000,\n+            \"next_index\": 0,\n+            \"timestamp\": \"now\"\n+        },\n+        {\n+            \"desc\": descsum_create(f\"sh(multi(15,{(xkey_int + ',') * 14}{xkey_int}))\"),\n+            \"active\": True,\n+            \"internal\": True,\n+            \"range\": 1000,\n+            \"next_index\": 0,\n+            \"timestamp\": \"now\"\n+        }])\n+        assert_equal(res[0]['success'], True)\n+        assert_equal(res[1]['success'], True)\n+\n+        addr = multi_priv_big.getnewaddress(\"\", \"legacy\")\n+        w0.sendtoaddress(addr, 10)\n+        self.nodes[0].generate(6)\n+        self.sync_all()\n+        # It is standard and would relay.\n+        txid = multi_priv_big.sendtoaddress(w0.getnewaddress(), 10, \"\", \"\",\n+                                            True)\n+        decoded = multi_priv_big.decoderawtransaction(\n+            multi_priv_big.gettransaction(txid)['hex']\n+        )\n+\n+\n         self.log.info(\"Combo descriptors cannot be active\")\n         self.test_importdesc({\"desc\": descsum_create(\"combo(tpubDCJtdt5dgJpdhW4MtaVYDhG4T4tF6jcLR1PxL43q9pq1mxvXgMS9Mzw1HnXG15vxUGQJMMSqCQHMTy3F1eW5VkgVroWzchsPD5BUojrcWs8/*)\"),\n                               \"active\": True,"
      }
    ]
  },
  {
    "sha": "5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWE1MGFiOWNjNzk5NGIxNmNmMTNlNGM3M2FmODBmMDA5OGYxYmVh",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-01-06T13:42:32Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-04-28T08:00:30Z"
      },
      "message": "rpc/util: multisig: only check redeemScript size is <= 520 for P2SH\n\nThis increase the maximum number of pubkeys to 20 (valid in P2WSH and\nP2SH-P2WSH) and only checks the redeemScript doesn't exceed\nMAX_SCRIPT_ELEMENT_SIZE for P2SH, as this checked is removed under\nSegwit context.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "c4511ab32c77faa281a6000973f58756e6886c9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4511ab32c77faa281a6000973f58756e6886c9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmCJFh4ACgkQ4T/BRc0/\nQwTg5wwAiGEfUz4B/FFlH7oGbA+SS23wFBc1wwMcR+j7EniAE53zc1mLspEhr1TA\neu4OxjFhGSD8flUrs0DCzswPt53F5jOVs7pO7koDVNM7qB5+9dtvQuC3fUFAOBsS\n7PevJ8XlsLfcc9UT+XfEVvK5C5WDlfos0O9Ni5/SWQnHk+bgaHyErGz7wFeBTt9S\neIQljB1VxsE0OvT8pafamN7n6hXCK5A1i/J1QnFGtRSM8jm0iBh6M/36ae2xwkHo\nlsOdBNV4gm99Dt4YT49nLmbRIPJH9UFmsnJj8Spx7u2RH73c8NXTkK9iL7y38N2J\nUEyZkYKFmtyUkAXze9rC/OdEqb5NCsPK6m8wdFKH3p/36tvPDNQnpkBkRo2f8bmh\nVmYXLtVwuWxSnt1/682cnRShK6bMbjKAN4f1UNe+/9rKRnPd0lj3Dy9RUwHDxC/x\nhzLzLJMsPV4civeXDHfw9fWrpRrYpS9uH2ITQQZc1JoF2AbVfGX5ttKO1jNgiZ/w\ne0jwi3l5\n=hIYB\n-----END PGP SIGNATURE-----",
        "payload": "tree c4511ab32c77faa281a6000973f58756e6886c9d\nparent 063df9e89730fd2c92646577e2fab894e1692130\nauthor Antoine Poinsot <darosior@protonmail.com> 1609940552 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1619596830 +0200\n\nrpc/util: multisig: only check redeemScript size is <= 520 for P2SH\n\nThis increase the maximum number of pubkeys to 20 (valid in P2WSH and\nP2SH-P2WSH) and only checks the redeemScript doesn't exceed\nMAX_SCRIPT_ELEMENT_SIZE for P2SH, as this checked is removed under\nSegwit context.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "063df9e89730fd2c92646577e2fab894e1692130",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/063df9e89730fd2c92646577e2fab894e1692130",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/063df9e89730fd2c92646577e2fab894e1692130"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "069669bb3bfcc9b8c836ed356a38f84d1dc88a0d",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
        "patch": "@@ -231,16 +231,12 @@ CTxDestination AddAndGetMultisigDestination(const int required, const std::vecto\n     if ((int)pubkeys.size() < required) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"not enough keys supplied (got %u keys, but need at least %d to redeem)\", pubkeys.size(), required));\n     }\n-    if (pubkeys.size() > 16) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Number of keys involved in the multisignature address creation > 16\\nReduce the number\");\n+    if (pubkeys.size() > MAX_PUBKEYS_PER_MULTISIG) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Number of keys involved in the multisignature address creation > %d\\nReduce the number\", MAX_PUBKEYS_PER_MULTISIG));\n     }\n \n     script_out = GetScriptForMultisig(required, pubkeys);\n \n-    if (script_out.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, (strprintf(\"redeemScript exceeds size limit: %d > %d\", script_out.size(), MAX_SCRIPT_ELEMENT_SIZE)));\n-    }\n-\n     // Check if any keys are uncompressed. If so, the type is legacy\n     for (const CPubKey& pk : pubkeys) {\n         if (!pk.IsCompressed()) {\n@@ -249,6 +245,10 @@ CTxDestination AddAndGetMultisigDestination(const int required, const std::vecto\n         }\n     }\n \n+    if (type == OutputType::LEGACY && script_out.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, (strprintf(\"redeemScript exceeds size limit: %d > %d\", script_out.size(), MAX_SCRIPT_ELEMENT_SIZE)));\n+    }\n+\n     // Make the address\n     CTxDestination dest = AddAndGetDestinationForScript(keystore, script_out, type);\n "
      }
    ]
  },
  {
    "sha": "ebd4be43cc945e643f91d3a91007b5a35bbbd5a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmQ0YmU0M2NjOTQ1ZTY0M2Y5MWQzYTkxMDA3YjVhMzViYmJkNWEx",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-02-19T22:03:03Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-04-28T08:00:31Z"
      },
      "message": "doc: add release notes for 20867\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "b2ae7605ec35a170e39c06f9a49a41df4dbd4260",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2ae7605ec35a170e39c06f9a49a41df4dbd4260"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebd4be43cc945e643f91d3a91007b5a35bbbd5a1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmCJFh8ACgkQ4T/BRc0/\nQwSU/QwAoVli6ZJpaZBX6SJPUlunat9oplAoe+rxnM6zWEmxZL5PzwSNZf1zMqNh\n2i0DPKocEPn+mmGXnc9XsFdj61Wypqa9qy8iPqHHsAKiembw2oGQ0DGgJxYMmmwG\nqhOfHMA8b94tgJd7SZHE0b6CHs18mZVKhCLfV+jPxF9Nt4Q+JPjTVaHE3Bk0cULR\nfh8Qz6CsF3NKJp2P1j7V0Teo8QkDe3LM90GPjpiVGL9zJ4e1YNSeMrtRsHYl3bEJ\nxjW09rpIO8ohPV3NgqDLkflO5aDAPHCpofoHV9OUvKk3zeQ2U9iw84syjzzXGlNj\n3bNc/YRTFKnzubudYHah3Osyp88SESGCGZyp2+4gqSzO14Ql1/2miXo0C8aZWiqc\n0WTHZ3wbx/QxNgTmep1zbs1wOzLfkehNH7Tpzfmd7Y7WcJ9cvbhZ6lVEo+K0lkc4\n8EQugmUXXd4Ghg/ns84Zu4Z7o9yi05iwDlGLpFpTUzQrxnesy2nXVr8Q8eAjN09d\newczTXhV\n=CuHp\n-----END PGP SIGNATURE-----",
        "payload": "tree b2ae7605ec35a170e39c06f9a49a41df4dbd4260\nparent 5aa50ab9cc7994b16cf13e4c73af80f0098f1bea\nauthor Antoine Poinsot <darosior@protonmail.com> 1613772183 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1619596831 +0200\n\ndoc: add release notes for 20867\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebd4be43cc945e643f91d3a91007b5a35bbbd5a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ebd4be43cc945e643f91d3a91007b5a35bbbd5a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebd4be43cc945e643f91d3a91007b5a35bbbd5a1/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aa50ab9cc7994b16cf13e4c73af80f0098f1bea"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "60eed6838f7b4690f945fdcc253f9f2224667038",
        "filename": "doc/release-notes-20867.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebd4be43cc945e643f91d3a91007b5a35bbbd5a1/doc/release-notes-20867.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebd4be43cc945e643f91d3a91007b5a35bbbd5a1/doc/release-notes-20867.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-20867.md?ref=ebd4be43cc945e643f91d3a91007b5a35bbbd5a1",
        "patch": "@@ -0,0 +1,11 @@\n+Wallet\n+------\n+\n+- We now support up to 20 keys in `multi()` and `sortedmulti()` descriptors\n+  under `wsh()`. (#20867)\n+\n+Updated RPCs\n+------------\n+\n+- `addmultisigaddress` and `createmultisig` now support up to 20 keys for\n+  Segwit addresses."
      }
    ]
  }
]