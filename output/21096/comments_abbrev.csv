flack,2021-02-06 19:16:36,"meh, turns out clicked the wrong button, and now I can't mark it as Draft anymore... modified the title instead",https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-774528101,774528101,
flack,2021-02-08 18:53:22,"#21081 has been merged and the other issue I mentioned has been addressed in #21107, so this should now be ready for review. I also bumped the `vulture` dependency to 2.3 since it turns out Python 3.5 support is no longer needed ",https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-775365132,775365132,
MarcoFalke,2021-02-08 19:05:03,Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits,https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-775372428,775372428,
flack,2021-02-08 20:16:51,@MarcoFalke done,https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-775417490,775417490,
fanquake,2021-02-09 03:34:23,"Seems like at `--min-confidence=100` vulture will just report unreachable code.\nYou have to drop it to `90` for it to report unused imports:\n```diff\ndiff --git a/test/functional/test_framework/key.py b/test/functional/test_framework/key.py\nindex e0cbab45c..d0f3472e9 100644\n--- a/test/functional/test_framework/key.py\n+++ b/test/functional/test_framework/key.py\n@@ -14,6 +14,10 @@ impor",https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-775635572,775635572,
laanwj,2021-02-10 08:38:43,~~NACK on this. I still stand by discussion in #16961. Even having to fine-tune the threshold value just seems a recipe for endless frustration.~~,https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-776538941,776538941,
flack,2021-02-10 10:07:39,"@laanwj I'm not going to spend too much time arguing, but the rationale for #16961 was to avoid false positives. `--min-confidence=100` accomplished that, since it is guaranteed to only find dead code (inside of `if (false)`, after return statement or similar). So there isn't any need to fine-tune anything. This is just a little sanity check that even on my five year old laptop completes in less t",https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-776596713,776596713,
practicalswift,2021-02-10 21:21:29,"Concept ACK\n\nIf simply specifying `--min-confidence 100` means that the false positives we've seen in the past are avoided then this should be an obvious win, no? :)\n\n@laanwj, is your NACK made assuming that `--min-confidence 100` is not sufficient to solve the false positive issues we've seen in the past? Not questioning: just trying to understand the reasoning :)",https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-777044391,777044391,
laanwj,2021-02-11 15:45:06,Okay retracted the NACK if everyone else wants this it's okay with me I just would really prefer if it doesn't come up as issue again.,https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-777589954,777589954,
practicalswift,2021-02-13 15:20:05,ACK 3f8776a1391c3978ed66144df15fd9bcb9edd35d,https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-778633156,778633156,
MarcoFalke,2021-02-15 14:13:40,"Tested ACK by reintroducing the bug, didn't review:\n\n\n```\n/tmp/cirrus-ci-build/test/functional/feature_taproot.py:521: unreachable code after 'return' (100% confidence)\n^---- failure generated from test/lint/lint-python-dead-code.sh",https://github.com/bitcoin/bitcoin/pull/21096#issuecomment-779249112,779249112,
MarcoFalke,2021-02-10 10:24:29,"Maybe add a comment to say that this must stay at 100 to avoid false positives, which we can't deal with in this repo?",https://github.com/bitcoin/bitcoin/pull/21096#discussion_r573610749,573610749,test/lint/lint-python-dead-code.sh
flack,2021-02-10 17:35:01,added note as requested,https://github.com/bitcoin/bitcoin/pull/21096#discussion_r573933435,573933435,test/lint/lint-python-dead-code.sh
practicalswift,2021-02-11 16:18:46,"Should this be `$(vulture --min-confidence 100 -- $(git ls-files -- ""*.py""))` instead to make sure only files in the repo are checked?",https://github.com/bitcoin/bitcoin/pull/21096#discussion_r574634983,574634983,test/lint/lint-python-dead-code.sh
flack,2021-02-12 10:54:43,"Could be changed if people think that's better. The `rev-parse` version is what the previous incarnation of the linter had. I was thinking maybe you want to run the linter against a new file before you `git add` it? \n\nAFAICT, vulture automatically filters by file extension (https://github.com/jendrikseipp/vulture/blob/master/vulture/config.py#L105), so `*.py` should be implicit",https://github.com/bitcoin/bitcoin/pull/21096#discussion_r575140317,575140317,test/lint/lint-python-dead-code.sh
laanwj,2021-02-12 11:33:38,"don't think this is a serious issue but, ostensibly a developer could, unwisely, keep their own `.py` scripts inside the repo directory, which would make no sense to check here, so i think `ls-files` to only check the committed ones makes sense",https://github.com/bitcoin/bitcoin/pull/21096#discussion_r575161323,575161323,test/lint/lint-python-dead-code.sh
flack,2021-02-13 08:58:47,"Alright, changed to `ls-files` as requested",https://github.com/bitcoin/bitcoin/pull/21096#discussion_r575642222,575642222,test/lint/lint-python-dead-code.sh
