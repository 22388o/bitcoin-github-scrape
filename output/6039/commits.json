[
  {
    "sha": "27ce808fb546eba0204cdcb2d87b62efdf583c62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2NlODA4ZmI1NDZlYmEwMjA0Y2RjYjJkODdiNjJlZmRmNTgzYzYy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-04-21T08:14:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-04-21T08:14:06Z"
      },
      "message": "tests: Error when setgenerate is used on regtest\n\nEver since #5957 there has been the problem that older RPC test cases\n(as can be found plenty in open pulls) use setgenerate() on regtest,\nassuming a different interpretation of the arguments. Directly\ngenerating a number of blocks has been split off into a new method\n`generate` - however using `setgenerate` with the previous arguments will\nresult in spawning an unreasonable number of threads, and well, simply\nnot work as expected without clear indication of the error.\n\nAdd an error to point the user at the right method.",
      "tree": {
        "sha": "c39f7b6a288e88982bd5c3df595f371e7c3a19b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c39f7b6a288e88982bd5c3df595f371e7c3a19b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27ce808fb546eba0204cdcb2d87b62efdf583c62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ce808fb546eba0204cdcb2d87b62efdf583c62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27ce808fb546eba0204cdcb2d87b62efdf583c62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ce808fb546eba0204cdcb2d87b62efdf583c62/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ea3bcede1cbbf89486b9d67329e0110c4624ae"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "aba250ba49c4bf7ffcb33f312c3935af67f37c8c",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27ce808fb546eba0204cdcb2d87b62efdf583c62/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27ce808fb546eba0204cdcb2d87b62efdf583c62/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=27ce808fb546eba0204cdcb2d87b62efdf583c62",
        "patch": "@@ -196,6 +196,8 @@ Value setgenerate(const Array& params, bool fHelp)\n \n     if (pwalletMain == NULL)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found (disabled)\");\n+    if (Params().MineBlocksOnDemand())\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Use the generate method instead of setgenerate on this network\");\n \n     bool fGenerate = true;\n     if (params.size() > 0)"
      }
    ]
  }
]