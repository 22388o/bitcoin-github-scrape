[
  {
    "sha": "b1f584dbc185fc9961d4d8d16680ca4041f3d1f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWY1ODRkYmMxODVmYzk5NjFkNGQ4ZDE2NjgwY2E0MDQxZjNkMWYz",
    "commit": {
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2017-03-23T17:54:18Z"
      },
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2017-03-25T01:22:34Z"
      },
      "message": "fix build if spaces in src dir path",
      "tree": {
        "sha": "5d14c6e9cb0ea20cf05c3d8bf1bd72ede67819ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d14c6e9cb0ea20cf05c3d8bf1bd72ede67819ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3/comments",
    "author": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pinheadmz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pinheadmz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a230b0588788dbe1ac84622aea169c577b381241",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a230b0588788dbe1ac84622aea169c577b381241",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a230b0588788dbe1ac84622aea169c577b381241"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8a3215688419df30f9be5f230229dad6611ede04",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b1f584dbc185fc9961d4d8d16680ca4041f3d1f3",
        "patch": "@@ -167,8 +167,8 @@ BITCOIN_CORE_H = \\\n \n obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n-\t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n-\t  $(abs_top_srcdir)\n+\t@$(top_srcdir)/share/genbuild.sh \"$(abs_top_builddir)/src/obj/build.h\" \\\n+\t  \"$(abs_top_srcdir)\"\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt"
      },
      {
        "sha": "2844f3bac283ec0298298008df851c7e7b75b389",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f584dbc185fc9961d4d8d16680ca4041f3d1f3/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=b1f584dbc185fc9961d4d8d16680ca4041f3d1f3",
        "patch": "@@ -87,7 +87,7 @@\n ZMQ_SCRIPTS = [\n     # ZMQ test can only be run if bitcoin was built with zmq-enabled.\n     # call test_runner.py with -nozmq to explicitly exclude these tests.\n-    \"zmq_test.py\"]\n+    'zmq_test.py']\n \n EXTENDED_SCRIPTS = [\n     # These tests are not run by the travis build process.\n@@ -203,9 +203,9 @@ def main():\n         sys.exit(0)\n \n     if args.help:\n-        # Print help for test_runner.py, then print help of the first script and exit.\n+        # Print help for test_runner.py, then print help of the first script (with args removed) and exit.\n         parser.print_help()\n-        subprocess.check_call((config[\"environment\"][\"SRCDIR\"] + '/test/functional/' + test_list[0]).split() + ['-h'])\n+        subprocess.check_call([(config[\"environment\"][\"SRCDIR\"] + '/test/functional/' + test_list[0].split()[0])] + ['-h'])\n         sys.exit(0)\n \n     run_tests(test_list, config[\"environment\"][\"SRCDIR\"], config[\"environment\"][\"BUILDDIR\"], config[\"environment\"][\"EXEEXT\"], args.jobs, args.coverage, passon_args)\n@@ -296,9 +296,10 @@ def get_next(self):\n             port_seed = [\"--portseed={}\".format(len(self.test_list) + self.portseed_offset)]\n             log_stdout = tempfile.SpooledTemporaryFile(max_size=2**16)\n             log_stderr = tempfile.SpooledTemporaryFile(max_size=2**16)\n+            test_argv = t.split()\n             self.jobs.append((t,\n                               time.time(),\n-                              subprocess.Popen((self.tests_dir + t).split() + self.flags + port_seed,\n+                              subprocess.Popen([self.tests_dir + test_argv[0]] + test_argv[1:] + self.flags + port_seed,\n                                                universal_newlines=True,\n                                                stdout=log_stdout,\n                                                stderr=log_stderr),"
      }
    ]
  }
]