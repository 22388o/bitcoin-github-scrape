DrahtBot,2019-05-21 22:22:17,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16278](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16278.html) (tests: Reduce compile-time memory usage, co",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-494580930,494580930,
MarcoFalke,2019-05-21 23:00:01,"<details><summary>Maximum resident set size before</summary>\n\n|rss|file|\n|----|----|\n| 142888 | test/main.cpp |\n| 625172 | test/setup_common.cpp |\n| 686472 | wallet/test/wallet_test_fixture.cpp |\n| 544948 | wallet/test/init_test_fixture.cpp |\n| 692280 | test/arith_uint256_tests.cpp |\n| 652108 | test/addrman_tests.cpp |\n| 551336 | test/amount_tests.cpp |\n| 552988 | test/alloca",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-494589737,494589737,
gmaxwell,2019-05-24 01:57:40,"Concept ACK splitting tests up to reduce compile time memory usage. \n\nIf I'm not mistaken,  script_tests.cpp is the peak?\n\n> -| 1422800 | test/script_tests.cpp |\n> +| 1308364 | test/script_tests.cpp |\n\nThis isn't a really huge reduction? Is there a different strategy which might make a more meaningful difference in terms of what systems can compile the tests?",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-495445062,495445062,
laanwj,2019-05-29 10:10:10,"> This isn't a really huge reduction? Is there a different strategy which might make a more meaningful difference in terms of what systems can compile the tests?\n\nMost of that is hardcoded JSON data,  I think. If parsing large hardcoded data structures are a run-time memory sink, there's are other ways of embedding data by converting directly to a compilation unit like:\n\n- `ld -r -b binary",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-496874269,496874269,
MarcoFalke,2019-06-11 15:21:56,"@laanwj I think the JSON doesn't matter much, see\n\n*  test: Compile json to hex separately, at most once #16120 \n\nRebased and updated RSS diff\n\n```diff\n@@ -3,0 +4 @@\n+| test/args_tests.cpp | 778888 |\n@@ -47 +48 @@\n-| test/rpc_tests.cpp | 782820 |\n+| test/rpc_tests.cpp | 783044 |\n@@ -49,0 +51 @@\n+| test/script_eval_tests.cpp | 791044 |\n@@ -53 +55 @@\n-| test/script_test",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-500891022,500891022,
DrahtBot,2019-06-27 15:05:49,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-506385572,506385572,
practicalswift,2019-06-27 18:58:46,"@MarcoFalke You're correct that the absurd memory usage in the case of `script_tests.cpp` is not due to the inclusion of `test/data/script_tests.json.h` :-)\n\nTry dropping the inclusion by using a dummy `json_tests::script_tests` array instead and you'll see that the drop in memory usage is insignificant.\n\nWith the inclusion dropped this is how memory consumption varies between compiler con",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-506470204,506470204,
fanquake,2019-07-04 02:26:31,"Closing this, as it's ""Up for grabs"" and the issue seems to be being addressed in other PRs.",https://github.com/bitcoin/bitcoin/pull/16069#issuecomment-508314609,508314609,
