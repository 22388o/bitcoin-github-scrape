[
  {
    "sha": "993d1ecd191a7d9161082d4026f020cbf00835bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTNkMWVjZDE5MWE3ZDkxNjEwODJkNDAyNmYwMjBjYmYwMDgzNWJi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-17T15:33:56Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-17T18:56:00Z"
      },
      "message": "test, fuzz: fix constructing CNode with invalid inbound_onion\n\nas CNode ctor should only be passed inbound_onion = true\nwhen the connection is inbound",
      "tree": {
        "sha": "61fb760240d31cf7acfec84df4459c856307c05c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61fb760240d31cf7acfec84df4459c856307c05c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/993d1ecd191a7d9161082d4026f020cbf00835bb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl/bqccACgkQT1chs9Dj\nkh2iOw//ar2VprANsPuT4IVCuGlwAZh+cPAPn1P0qyMg6AZZvCHfgSZAeW0JDo5N\ngealY0DqeQsqgACMuV54w64OuPrMDidlhrbxZg+PgyMxMnkvfV3O4CJZqKsnZ9W+\n8Sxc2ZW9B0MqHnuL2LO/+gt1DGEmWI+mqOjS7tzLWgp/e9AkjGWtR5R76KSfd+89\nZBorWzYfTcHBbuTcTVpjC0AVuTDI0gmGbpGsb54tws3NJkfeXSs/YophFBtWy+bF\nyFpAbMSpmRmDaeq1A+/yKVxLv4Jzr+RkmELirNsgZnr3XUpthgk8f2BHGt+6yRlQ\nwsOjnYV4swyz84quxy4kpBFZ0Wbj6/Au4gQ8dhplUz/yz79pcv2ilWR0pV1qLyjt\nvcZfkj0basEeJhvZVzJbh0xNeL12gV8lR3RggrVKAu/5aDfn4Zb023SwjEf6bIuZ\nkhyLl7x1nA6wzC4xSGPkt1Kb7U9+JkR+XTose9XDgxfcagE1lvhQldb1USLHSu5x\n78RmqWjbXyPOfK5ITms8e4M3uy07n+mQagjHFKmYFHZsL/WjNMLRAB4f0Bizsllf\nhb0tqH75m+hA1oyfWZeqmmP9V3NkpOyQGfMkaYF9FXpeKvhe4sDDW13cF0Ydd72h\nINlGDQ+BH/5ZiaumVbCShv+VfHbxnMoshzw0X7cN5ywKl1ivNB8=\n=ktwd\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPnTOhNf7FdLNEerq7/ZXe1NHMB4+b3MCDzfZEgSJoISCP/wECCMSlQbTrfe\nsvii2peQ090I8SBNVXGE/sek4HrwWwWOUaLM4hb7KpyG5s5GzbLv9sMkUwjxBF/b\nqcnwCIvfl375IxxpAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQMHeSJYqJxCk943vvtKRG4QjxBF/bqcnwCB8lk6vK\nvi06AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn//AQqPHKUOueiNg1AI13m3+01AjxIEcVRNdwf1PKB4FiTuUMD/6s\njtmwyWdwiVh4yuKBp4QRCPEEX9upyfAIvIXJIC4KnZUAg9/jDS75DI4uLWh0dHBz\nOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ5nD2+tjn\nK7M3u/YT0J8ajQjxBF/bqcrwCONlaefukwCdAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 61fb760240d31cf7acfec84df4459c856307c05c\nparent b7136c11ab6448142cfcc617babe866e428eeeb4\nauthor Jon Atack <jon@atack.com> 1608219236 +0100\ncommitter Jon Atack <jon@atack.com> 1608231360 +0100\n\ntest, fuzz: fix constructing CNode with invalid inbound_onion\n\nas CNode ctor should only be passed inbound_onion = true\nwhen the connection is inbound\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/993d1ecd191a7d9161082d4026f020cbf00835bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/993d1ecd191a7d9161082d4026f020cbf00835bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/993d1ecd191a7d9161082d4026f020cbf00835bb/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7136c11ab6448142cfcc617babe866e428eeeb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7136c11ab6448142cfcc617babe866e428eeeb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7136c11ab6448142cfcc617babe866e428eeeb4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8a2de0f9c9649300b8616636e7c08981e90db600",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/993d1ecd191a7d9161082d4026f020cbf00835bb/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/993d1ecd191a7d9161082d4026f020cbf00835bb/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=993d1ecd191a7d9161082d4026f020cbf00835bb",
        "patch": "@@ -298,7 +298,7 @@ CNode ConsumeNode(FuzzedDataProvider& fuzzed_data_provider) noexcept\n     const CAddress addr_bind = ConsumeAddress(fuzzed_data_provider);\n     const std::string addr_name = fuzzed_data_provider.ConsumeRandomLengthString(64);\n     const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray({ConnectionType::INBOUND, ConnectionType::OUTBOUND_FULL_RELAY, ConnectionType::MANUAL, ConnectionType::FEELER, ConnectionType::BLOCK_RELAY, ConnectionType::ADDR_FETCH});\n-    const bool inbound_onion = fuzzed_data_provider.ConsumeBool();\n+    const bool inbound_onion{conn_type == ConnectionType::INBOUND ? fuzzed_data_provider.ConsumeBool() : false};\n     return {node_id, local_services, my_starting_height, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n }\n "
      },
      {
        "sha": "eb2f4cee690bbde624839bcc72770bfc97c606e9",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/993d1ecd191a7d9161082d4026f020cbf00835bb/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/993d1ecd191a7d9161082d4026f020cbf00835bb/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=993d1ecd191a7d9161082d4026f020cbf00835bb",
        "patch": "@@ -221,7 +221,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n         /* nKeyedNetGroupIn = */ 0,\n         /* nLocalHostNonceIn = */ 0,\n         CAddress(), pszDest, ConnectionType::OUTBOUND_FULL_RELAY,\n-        /* inbound_onion = */ true);\n+        /* inbound_onion = */ false);\n     BOOST_CHECK(pnode3->IsFullOutboundConn() == true);\n     BOOST_CHECK(pnode3->IsManualConn() == false);\n     BOOST_CHECK(pnode3->IsBlockOnlyConn() == false);"
      }
    ]
  },
  {
    "sha": "6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjA5ZWI4Y2I1MGZlOTJjNzMxN2I1ZGI5ZTcyZDQzMzNiM2FhYjFi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-21T09:52:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-17T18:56:10Z"
      },
      "message": "net: assert CNode::m_inbound_onion is inbound in ctor\n\nand drop an unneeded check in CNode::ConnectedThroughNetwork()",
      "tree": {
        "sha": "922267bc8df6660793b3e42f41b8ed5ad579bbeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/922267bc8df6660793b3e42f41b8ed5ad579bbeb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl/bqcoACgkQT1chs9Dj\nkh1QMxAAol/mf1oROpEE7mEY+hTAFFO7uHPvHwlPwe5f2qXpp/CNWVjKRx4aiCWL\nKYpiYmblwbM0SIvQdKadBKpDF2DasNy/DEBkLLLO2FL55igGRdq0k1U5UWjzE/l2\nyyI0CBmr7SvyXjSWCVbdyRV7gSHQWFkHVrxyK5MCAm2Ris3Zu5A+S4JmwO5pmQSt\nV4KyIstnK05cL2YD3GWZ3++QtMbY213Jyl2blV9swqYfUQ2x2aBsvzVK9xCX9NBU\n5xG1/xkM14up2dDh1fTjjhskoUZaXjZlqlbQv4s0doqx0FTtsq7vv1WuNaUlxNa3\nmC3R5IiJAs4lfrTBz48PSV6JIpd+JRaf3KR6wyH4i3Wu2P7fzBCQzwKM/LNcf4an\nqnJhM5x70FxJFsVDx7wfSdyaYEobQF1rcphvBwDKcXjm0yPzLD/z7cIxQEFXLixH\neMZN+x1orvCSWZfqntoQdxLkpT1Sy0fTu3V18bl/k22Q2yQ5vHulGRuLP/Rv6UJ5\nDLm+VMnGZC6QjSi1AyX+L8IjeJ8Xy9HQi7+YUOoO0o+TG8T2D9TiK5llhHzSp6C6\ngkcQXDdUQD2pMN5zU7aYXkKlBWEa3TR4yGHXycxaMOljym2bnmm2M/Wkwz9dR+n4\nBKXQCx7ToVU9H02/XnY1OZJ2UUj8STd9cr86p+Ix2jIpraHgaf8=\n=ow3s\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwII5oObV1vfPH4ps48M7H+B2nBRtsPtr0u3koz7H5BsSJCP/wELW3UzrLC3QE\naqBH+rWFL+oI8QRf26nM8AhmkEQquQ9O4QCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wELXrOSkIx3Z2iBEl0PBITWII\n8QRf26nM8AgIl5XkSsiC0ACD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wELbLRV+BAPePWA71o+JZEi4I8QRf26nM\n8Agb8cQ9dgMMAACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ9FlXsVloiJsdRGfFqaXIPwjxBF/bqczwCEro0YOiBIs5AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 922267bc8df6660793b3e42f41b8ed5ad579bbeb\nparent 993d1ecd191a7d9161082d4026f020cbf00835bb\nauthor Jon Atack <jon@atack.com> 1603273939 +0200\ncommitter Jon Atack <jon@atack.com> 1608231370 +0100\n\nnet: assert CNode::m_inbound_onion is inbound in ctor\n\nand drop an unneeded check in CNode::ConnectedThroughNetwork()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "993d1ecd191a7d9161082d4026f020cbf00835bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/993d1ecd191a7d9161082d4026f020cbf00835bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/993d1ecd191a7d9161082d4026f020cbf00835bb"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "cf1ac357128a91b3f679ebc5fa36ded532981948",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
        "patch": "@@ -555,7 +555,7 @@ void CNode::SetAddrLocal(const CService& addrLocalIn) {\n \n Network CNode::ConnectedThroughNetwork() const\n {\n-    return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n+    return m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n #undef X\n@@ -2954,6 +2954,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n       nMyStartingHeight(nMyStartingHeightIn),\n       m_inbound_onion(inbound_onion)\n {\n+    if (inbound_onion) assert(conn_type_in == ConnectionType::INBOUND);\n     hSocket = hSocketIn;\n     addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n     hashContinue = uint256();"
      },
      {
        "sha": "ca5944d46b24b4d981cad8d3ece3af7f155e0f1e",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
        "patch": "@@ -1110,7 +1110,7 @@ class CNode\n     CService addrLocal GUARDED_BY(cs_addrLocal);\n     mutable RecursiveMutex cs_addrLocal;\n \n-    //! Whether this peer connected via our Tor onion service.\n+    //! Whether this peer is an inbound onion, e.g. connected via our Tor onion service.\n     const bool m_inbound_onion{false};\n \n public:"
      }
    ]
  },
  {
    "sha": "86c495223f048e5ca2cf0d8730af7db3b76f7aba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NmM0OTUyMjNmMDQ4ZTVjYTJjZjBkODczMGFmN2RiM2I3NmY3YWJh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-21T09:53:38Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-17T18:56:12Z"
      },
      "message": "net: add CNode::IsInboundOnion() public getter and unit tests",
      "tree": {
        "sha": "b70377a1fe0754b0536735984ac7ebb1e3214ce1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b70377a1fe0754b0536735984ac7ebb1e3214ce1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86c495223f048e5ca2cf0d8730af7db3b76f7aba",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl/bqcwACgkQT1chs9Dj\nkh1mkhAAnsvOPphgsmtK+Wm0KuW7Gyv6k8eFtxRjybPSW0O5doYi/eFxGXp8PlHi\nqjkJjnzWhzOzWk5SHRG+7whc5Sz4xZfU64fAVmpwZHwPC1frdCOM08CDmkAmgUlO\nqZxUakQ7JVIcW2KtccfMnHCMPKps0byYXVVhRscf6clJY9nFvsUsdDfGImOocT1U\nhAI6u+mNhrRv6J1f9ZQQ/Qar1AnPxlKR78L3XE1zi6esbLzCw0C3QRQArVOrJuKh\nBxjtrVAw0LaEn9IB3UMPff4fDQSv4yJsMJg4+KQWpFiBSqI3BhoGseO128MJgdEc\nJJWyP8QNDhvkvvXXScomMHH0WqPc0QIDsi3oHORB9NJTmQZTru++9DmIwGCOmGCH\nLjWmCTbsKfYif/aUOJ6BcQKyBRJcto/55gfOalZ44BHm8LW+rRH6+L691WVKF05P\nChHUEo7i++GSsqiv5kovFmNkRpiQnixuf0HPFi5Y7CagGfdkKHNhoGQLpgcQtFSj\nXkmRFnTxtmY4T+VML4nhxRgWL6F0yPxIrnoeuDYNaJ1XRuRzm8AOSCcSp2dxzljL\nanNGUlD1qR65qus0pbQxPOfynCsb4Nn65JABYV0AcEvSYZB9prw9kzDn3pMMKUqu\n4E4FOhmKlRaFpUtHCuNkCvpgQr+BrHw4WEcpeddwn+LKZOqPux0=\n=dFgR\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINBllKR8i65bsWCKv+begCFgLFgSZo8gM/5zNrOxH4LVCP/wEALPxIlhbb//\n6xrW6uiyn1MI8QRf26nO8AhHP4+DipDu7wCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEG0VThI5DNqaYVghJ+MqQ2UI\n8QRf26nO8AjXH68rctqw1wCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEK+vykxXf+OC+fHe/RLIBioI8QRf26nO\n8AjwIuMv5hf00wCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQzll+lmww3fm4BKzQp9gH0AjxBF/bqc7wCKbed0mNF7B/AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b70377a1fe0754b0536735984ac7ebb1e3214ce1\nparent 6609eb8cb50fe92c7317b5db9e72d4333b3aab1b\nauthor Jon Atack <jon@atack.com> 1603274018 +0200\ncommitter Jon Atack <jon@atack.com> 1608231372 +0100\n\nnet: add CNode::IsInboundOnion() public getter and unit tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86c495223f048e5ca2cf0d8730af7db3b76f7aba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/86c495223f048e5ca2cf0d8730af7db3b76f7aba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86c495223f048e5ca2cf0d8730af7db3b76f7aba/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6609eb8cb50fe92c7317b5db9e72d4333b3aab1b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0b7d0f406cf3d7536d6037f2af6821922216cabc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86c495223f048e5ca2cf0d8730af7db3b76f7aba/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86c495223f048e5ca2cf0d8730af7db3b76f7aba/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=86c495223f048e5ca2cf0d8730af7db3b76f7aba",
        "patch": "@@ -1234,6 +1234,9 @@ class CNode\n     void MaybeSetAddrName(const std::string& addrNameIn);\n \n     std::string ConnectionTypeAsString() const;\n+\n+    /** Whether this peer is an inbound onion, e.g. connected via our Tor onion service. */\n+    bool IsInboundOnion() const { return m_inbound_onion; }\n };\n \n /** Return a timestamp in the future (in microseconds) for exponentially distributed events. */"
      },
      {
        "sha": "f6adc6a28daa4c59586c4413fa9e497b56b7ff66",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86c495223f048e5ca2cf0d8730af7db3b76f7aba/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86c495223f048e5ca2cf0d8730af7db3b76f7aba/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=86c495223f048e5ca2cf0d8730af7db3b76f7aba",
        "patch": "@@ -200,6 +200,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode1->IsFeelerConn() == false);\n     BOOST_CHECK(pnode1->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode1->IsInboundConn() == false);\n+    BOOST_CHECK(pnode1->IsInboundOnion() == false);\n     BOOST_CHECK_EQUAL(pnode1->ConnectedThroughNetwork(), Network::NET_IPV4);\n \n     std::unique_ptr<CNode> pnode2 = MakeUnique<CNode>(\n@@ -214,6 +215,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode2->IsFeelerConn() == false);\n     BOOST_CHECK(pnode2->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode2->IsInboundConn() == true);\n+    BOOST_CHECK(pnode2->IsInboundOnion() == false);\n     BOOST_CHECK_EQUAL(pnode2->ConnectedThroughNetwork(), Network::NET_IPV4);\n \n     std::unique_ptr<CNode> pnode3 = MakeUnique<CNode>(\n@@ -228,6 +230,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode3->IsFeelerConn() == false);\n     BOOST_CHECK(pnode3->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode3->IsInboundConn() == false);\n+    BOOST_CHECK(pnode3->IsInboundOnion() == false);\n     BOOST_CHECK_EQUAL(pnode3->ConnectedThroughNetwork(), Network::NET_IPV4);\n \n     std::unique_ptr<CNode> pnode4 = MakeUnique<CNode>(\n@@ -242,6 +245,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode4->IsFeelerConn() == false);\n     BOOST_CHECK(pnode4->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode4->IsInboundConn() == true);\n+    BOOST_CHECK(pnode4->IsInboundOnion() == true);\n     BOOST_CHECK_EQUAL(pnode4->ConnectedThroughNetwork(), Network::NET_ONION);\n }\n "
      }
    ]
  }
]