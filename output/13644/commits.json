[
  {
    "sha": "c04a4a5ae97915fce1c35dff715e373b1290a169",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDRhNGE1YWU5NzkxNWZjZTFjMzVkZmY3MTVlMzczYjEyOTBhMTY5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-07-10T00:06:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T13:49:41Z"
      },
      "message": "Remove useless mapRequest tracking that just effects Qt display.\n\nI thought we had removed this a long time ago, TBH, its really\nconfusing feedback to users that we display whether a tx was\nbroadcast to immediate neighbor nodes, given that has little\nindication of whether the tx propagated very far.\n\nGithub-Pull: #13622\nRebased-From: beef7ec4be725beea870a2da510d2817487601ec",
      "tree": {
        "sha": "bcd209fa8c7a9293409226ef1c1a383cca9c881d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcd209fa8c7a9293409226ef1c1a383cca9c881d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c04a4a5ae97915fce1c35dff715e373b1290a169",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04a4a5ae97915fce1c35dff715e373b1290a169",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c04a4a5ae97915fce1c35dff715e373b1290a169",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04a4a5ae97915fce1c35dff715e373b1290a169/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dac5374ccee6b21605127a6f8000666aab5caecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dac5374ccee6b21605127a6f8000666aab5caecc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dac5374ccee6b21605127a6f8000666aab5caecc"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 1,
      "deletions": 109
    },
    "files": [
      {
        "sha": "842e5ce6cfefc48fc6dabef5dd5d497760ba8da6",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -1221,9 +1221,6 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n             if (!push) {\n                 vNotFound.push_back(inv);\n             }\n-\n-            // Track requests for our stuff.\n-            GetMainSignals().Inventory(inv.hash);\n         }\n     } // release cs_main\n \n@@ -1908,9 +1905,6 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     pfrom->AskFor(inv);\n                 }\n             }\n-\n-            // Track requests for our stuff\n-            GetMainSignals().Inventory(inv.hash);\n         }\n     }\n "
      },
      {
        "sha": "ff47653fb770a391aa6fc37eea92b73d5384a68f",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -27,8 +27,6 @@ static const bool DEFAULT_SPLASHSCREEN = true;\n #define COLOR_BAREADDRESS QColor(140, 140, 140)\n /* Transaction list -- TX status decoration - open until date */\n #define COLOR_TX_STATUS_OPENUNTILDATE QColor(64, 64, 255)\n-/* Transaction list -- TX status decoration - offline */\n-#define COLOR_TX_STATUS_OFFLINE QColor(192, 192, 192)\n /* Transaction list -- TX status decoration - danger, tx needs attention */\n #define COLOR_TX_STATUS_DANGER QColor(200, 100, 100)\n /* Transaction list -- TX status decoration - default color */"
      },
      {
        "sha": "42b86fd3161d98dcb53cbf2b9b12448b2fb25bed",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -36,8 +36,6 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n         int nDepth = wtx.GetDepthInMainChain();\n         if (nDepth < 0)\n             return tr(\"conflicted with a transaction with %1 confirmations\").arg(-nDepth);\n-        else if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n-            return tr(\"%1/offline\").arg(nDepth);\n         else if (nDepth == 0)\n             return tr(\"0/unconfirmed, %1\").arg((wtx.InMempool() ? tr(\"in memory pool\") : tr(\"not in memory pool\"))) + (wtx.isAbandoned() ? \", \"+tr(\"abandoned\") : \"\");\n         else if (nDepth < 6)\n@@ -61,14 +59,6 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     CAmount nNet = nCredit - nDebit;\n \n     strHTML += \"<b>\" + tr(\"Status\") + \":</b> \" + FormatTxStatus(wtx);\n-    int nRequests = wtx.GetRequestCount();\n-    if (nRequests != -1)\n-    {\n-        if (nRequests == 0)\n-            strHTML += tr(\", has not been successfully broadcast yet\");\n-        else if (nRequests > 0)\n-            strHTML += tr(\", broadcast through %n node(s)\", \"\", nRequests);\n-    }\n     strHTML += \"<br>\";\n \n     strHTML += \"<b>\" + tr(\"Date\") + \":</b> \" + (nTime ? GUIUtil::dateTimeStr(nTime) : \"\") + \"<br>\";"
      },
      {
        "sha": "c4cd8af0e4fc955094da5a671f6ca57aefddb3da",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -205,10 +205,6 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n             if (wtx.IsInMainChain())\n             {\n                 status.matures_in = wtx.GetBlocksToMaturity();\n-\n-                // Check if the block was requested by anyone\n-                if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n-                    status.status = TransactionStatus::MaturesWarning;\n             }\n             else\n             {\n@@ -226,10 +222,6 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n         {\n             status.status = TransactionStatus::Conflicted;\n         }\n-        else if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n-        {\n-            status.status = TransactionStatus::Offline;\n-        }\n         else if (status.depth == 0)\n         {\n             status.status = TransactionStatus::Unconfirmed;"
      },
      {
        "sha": "377e3cba70b34cd29a0e7bcdac0b47715b7e3eca",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -21,22 +21,20 @@ class TransactionStatus\n public:\n     TransactionStatus():\n         countsForBalance(false), sortKey(\"\"),\n-        matures_in(0), status(Offline), depth(0), open_for(0), cur_num_blocks(-1)\n+        matures_in(0), status(Unconfirmed), depth(0), open_for(0), cur_num_blocks(-1)\n     { }\n \n     enum Status {\n         Confirmed,          /**< Have 6 or more confirmations (normal tx) or fully mature (mined tx) **/\n         /// Normal (sent/received) transactions\n         OpenUntilDate,      /**< Transaction not yet final, waiting for date */\n         OpenUntilBlock,     /**< Transaction not yet final, waiting for block */\n-        Offline,            /**< Not sent to any other nodes **/\n         Unconfirmed,        /**< Not yet mined into a block **/\n         Confirming,         /**< Confirmed, but waiting for the recommended number of confirmations **/\n         Conflicted,         /**< Conflicts with other transaction or mempool **/\n         Abandoned,          /**< Abandoned from the wallet **/\n         /// Generated (mined) transactions\n         Immature,           /**< Mined but waiting for maturity */\n-        MaturesWarning,     /**< Transaction will likely not mature because no nodes have confirmed */\n         NotAccepted         /**< Mined but not accepted */\n     };\n "
      },
      {
        "sha": "5272a3ef39a52f1d3d4d641cfeb0e1110435979b",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -308,9 +308,6 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n     case TransactionStatus::OpenUntilDate:\n         status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n         break;\n-    case TransactionStatus::Offline:\n-        status = tr(\"Offline\");\n-        break;\n     case TransactionStatus::Unconfirmed:\n         status = tr(\"Unconfirmed\");\n         break;\n@@ -329,9 +326,6 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n     case TransactionStatus::Immature:\n         status = tr(\"Immature (%1 confirmations, will be available after %2)\").arg(wtx->status.depth).arg(wtx->status.depth + wtx->status.matures_in);\n         break;\n-    case TransactionStatus::MaturesWarning:\n-        status = tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n-        break;\n     case TransactionStatus::NotAccepted:\n         status = tr(\"Generated but not accepted\");\n         break;\n@@ -469,8 +463,6 @@ QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx)\n     case TransactionStatus::OpenUntilBlock:\n     case TransactionStatus::OpenUntilDate:\n         return COLOR_TX_STATUS_OPENUNTILDATE;\n-    case TransactionStatus::Offline:\n-        return COLOR_TX_STATUS_OFFLINE;\n     case TransactionStatus::Unconfirmed:\n         return QIcon(\":/icons/transaction_0\");\n     case TransactionStatus::Abandoned:\n@@ -493,7 +485,6 @@ QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx)\n         int part = (wtx->status.depth * 4 / total) + 1;\n         return QIcon(QString(\":/icons/transaction_%1\").arg(part));\n         }\n-    case TransactionStatus::MaturesWarning:\n     case TransactionStatus::NotAccepted:\n         return QIcon(\":/icons/transaction_0\");\n     default:"
      },
      {
        "sha": "90513bc6c029cbcc132d48cf8a2a12c73953173f",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -26,7 +26,6 @@ struct MainSignalsInstance {\n     boost::signals2::signal<void (const std::shared_ptr<const CBlock> &)> BlockDisconnected;\n     boost::signals2::signal<void (const CTransactionRef &)> TransactionRemovedFromMempool;\n     boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;\n-    boost::signals2::signal<void (const uint256 &)> Inventory;\n     boost::signals2::signal<void (int64_t nBestBlockTime, CConnman* connman)> Broadcast;\n     boost::signals2::signal<void (const CBlock&, const CValidationState&)> BlockChecked;\n     boost::signals2::signal<void (const CBlockIndex *, const std::shared_ptr<const CBlock>&)> NewPoWValidBlock;\n@@ -81,7 +80,6 @@ void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.m_internals->BlockDisconnected.connect(boost::bind(&CValidationInterface::BlockDisconnected, pwalletIn, _1));\n     g_signals.m_internals->TransactionRemovedFromMempool.connect(boost::bind(&CValidationInterface::TransactionRemovedFromMempool, pwalletIn, _1));\n     g_signals.m_internals->SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n-    g_signals.m_internals->Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n     g_signals.m_internals->Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, _1, _2));\n     g_signals.m_internals->BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n     g_signals.m_internals->NewPoWValidBlock.connect(boost::bind(&CValidationInterface::NewPoWValidBlock, pwalletIn, _1, _2));\n@@ -90,7 +88,6 @@ void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.m_internals->BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n     g_signals.m_internals->Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, _1, _2));\n-    g_signals.m_internals->Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n     g_signals.m_internals->SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.m_internals->TransactionAddedToMempool.disconnect(boost::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, _1));\n     g_signals.m_internals->BlockConnected.disconnect(boost::bind(&CValidationInterface::BlockConnected, pwalletIn, _1, _2, _3));\n@@ -106,7 +103,6 @@ void UnregisterAllValidationInterfaces() {\n     }\n     g_signals.m_internals->BlockChecked.disconnect_all_slots();\n     g_signals.m_internals->Broadcast.disconnect_all_slots();\n-    g_signals.m_internals->Inventory.disconnect_all_slots();\n     g_signals.m_internals->SetBestChain.disconnect_all_slots();\n     g_signals.m_internals->TransactionAddedToMempool.disconnect_all_slots();\n     g_signals.m_internals->BlockConnected.disconnect_all_slots();\n@@ -172,12 +168,6 @@ void CMainSignals::SetBestChain(const CBlockLocator &locator) {\n     });\n }\n \n-void CMainSignals::Inventory(const uint256 &hash) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([hash, this] {\n-        m_internals->Inventory(hash);\n-    });\n-}\n-\n void CMainSignals::Broadcast(int64_t nBestBlockTime, CConnman* connman) {\n     m_internals->Broadcast(nBestBlockTime, connman);\n }"
      },
      {
        "sha": "784757a28a5937838de983201a9bbd351b872dbe",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -101,12 +101,6 @@ class CValidationInterface {\n      * Called on a background thread.\n      */\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n-    /**\n-     * Notifies listeners about an inventory item being seen on the network.\n-     *\n-     * Called on a background thread.\n-     */\n-    virtual void Inventory(const uint256 &hash) {}\n     /** Tells listeners to broadcast their data. */\n     virtual void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) {}\n     /**\n@@ -157,7 +151,6 @@ class CMainSignals {\n     void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>> &);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &);\n     void SetBestChain(const CBlockLocator &);\n-    void Inventory(const uint256 &);\n     void Broadcast(int64_t nBestBlockTime, CConnman* connman);\n     void BlockChecked(const CBlock&, const CValidationState&);\n     void NewPoWValidBlock(const CBlockIndex *, const std::shared_ptr<const CBlock>&);"
      },
      {
        "sha": "b4d76e5f916e5f5047829e72d5ce8500501c2f3e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -1506,45 +1506,6 @@ int64_t CWalletTx::GetTxTime() const\n     return n ? n : nTimeReceived;\n }\n \n-int CWalletTx::GetRequestCount() const\n-{\n-    // Returns -1 if it wasn't being tracked\n-    int nRequests = -1;\n-    {\n-        LOCK(pwallet->cs_wallet);\n-        if (IsCoinBase())\n-        {\n-            // Generated block\n-            if (!hashUnset())\n-            {\n-                std::map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(hashBlock);\n-                if (mi != pwallet->mapRequestCount.end())\n-                    nRequests = (*mi).second;\n-            }\n-        }\n-        else\n-        {\n-            // Did anyone request this transaction?\n-            std::map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(GetHash());\n-            if (mi != pwallet->mapRequestCount.end())\n-            {\n-                nRequests = (*mi).second;\n-\n-                // How about the block it's in?\n-                if (nRequests == 0 && !hashUnset())\n-                {\n-                    std::map<uint256, int>::const_iterator _mi = pwallet->mapRequestCount.find(hashBlock);\n-                    if (_mi != pwallet->mapRequestCount.end())\n-                        nRequests = (*_mi).second;\n-                    else\n-                        nRequests = 1; // If it's in someone else's block it must have got out\n-                }\n-            }\n-        }\n-    }\n-    return nRequests;\n-}\n-\n void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n                            std::list<COutputEntry>& listSent, CAmount& nFee, std::string& strSentAccount, const isminefilter& filter) const\n {\n@@ -3085,9 +3046,6 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey, CCon\n             }\n         }\n \n-        // Track how many getdata requests our transaction gets\n-        mapRequestCount[wtxNew.GetHash()] = 0;\n-\n         // Get the inserted-CWalletTx from mapWallet so that the\n         // fInMempool flag is cached properly\n         CWalletTx& wtx = mapWallet[wtxNew.GetHash()];"
      },
      {
        "sha": "9f777b8f03cad2ac5473cb3ee74dccc7f0fdeea0",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04a4a5ae97915fce1c35dff715e373b1290a169/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04a4a5ae97915fce1c35dff715e373b1290a169/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=c04a4a5ae97915fce1c35dff715e373b1290a169",
        "patch": "@@ -478,7 +478,6 @@ class CWalletTx : public CMerkleTx\n     bool IsTrusted() const;\n \n     int64_t GetTxTime() const;\n-    int GetRequestCount() const;\n \n     // RelayWalletTransaction may only be called if fBroadcastTransactions!\n     bool RelayWalletTransaction(CConnman* connman);\n@@ -834,7 +833,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     int64_t nOrderPosNext;\n     uint64_t nAccountingEntryNumber;\n-    std::map<uint256, int> mapRequestCount;\n \n     std::map<CTxDestination, CAddressBookData> mapAddressBook;\n \n@@ -1043,16 +1041,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     const std::string& GetAccountName(const CScript& scriptPubKey) const;\n \n-    void Inventory(const uint256 &hash) override\n-    {\n-        {\n-            LOCK(cs_wallet);\n-            std::map<uint256, int>::iterator mi = mapRequestCount.find(hash);\n-            if (mi != mapRequestCount.end())\n-                (*mi).second++;\n-        }\n-    }\n-\n     void GetScriptForMining(std::shared_ptr<CReserveScript> &script);\n     \n     unsigned int GetKeyPoolSize()"
      }
    ]
  },
  {
    "sha": "79c4fff9edec13ca4685abde953a320840544869",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWM0ZmZmOWVkZWMxM2NhNDY4NWFiZGU5NTNhMzIwODQwNTQ0ODY5",
    "commit": {
      "author": {
        "name": "lmanners",
        "email": "lowellmanners@gmail.com",
        "date": "2018-05-08T20:38:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:03:02Z"
      },
      "message": "[tests] Fixed intermittent failure in p2p_sendheaders.py.\n\nAdded handling for the case where headers are announced over more than one message.\nrefs #12453\n\nGithub-Pull: #13192\nRebased-From: 12d1b77f7eb2ca274890d9fb45d6c19a40ba8f74",
      "tree": {
        "sha": "90e1967145a74efc056d41490f22f90c9e594632",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90e1967145a74efc056d41490f22f90c9e594632"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79c4fff9edec13ca4685abde953a320840544869",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79c4fff9edec13ca4685abde953a320840544869",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79c4fff9edec13ca4685abde953a320840544869",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79c4fff9edec13ca4685abde953a320840544869/comments",
    "author": {
      "login": "lmanners",
      "id": 834253,
      "node_id": "MDQ6VXNlcjgzNDI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/834253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmanners",
      "html_url": "https://github.com/lmanners",
      "followers_url": "https://api.github.com/users/lmanners/followers",
      "following_url": "https://api.github.com/users/lmanners/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmanners/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmanners/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmanners/subscriptions",
      "organizations_url": "https://api.github.com/users/lmanners/orgs",
      "repos_url": "https://api.github.com/users/lmanners/repos",
      "events_url": "https://api.github.com/users/lmanners/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmanners/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c04a4a5ae97915fce1c35dff715e373b1290a169",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04a4a5ae97915fce1c35dff715e373b1290a169",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c04a4a5ae97915fce1c35dff715e373b1290a169"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 51,
      "deletions": 45
    },
    "files": [
      {
        "sha": "d338dc8d86cec259903a3ff6d42b887b57692869",
        "filename": "test/functional/p2p_sendheaders.py",
        "status": "modified",
        "additions": 51,
        "deletions": 45,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79c4fff9edec13ca4685abde953a320840544869/test/functional/p2p_sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79c4fff9edec13ca4685abde953a320840544869/test/functional/p2p_sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_sendheaders.py?ref=79c4fff9edec13ca4685abde953a320840544869",
        "patch": "@@ -116,6 +116,7 @@ def __init__(self):\n \n         self.block_announced = False\n         self.last_blockhash_announced = None\n+        self.recent_headers_announced = []\n \n     def send_get_data(self, block_hashes):\n         \"\"\"Request data for a list of block hashes.\"\"\"\n@@ -163,40 +164,45 @@ def on_inv(self, message):\n     def on_headers(self, message):\n         if len(message.headers):\n             self.block_announced = True\n-            message.headers[-1].calc_sha256()\n+            for x in message.headers:\n+                x.calc_sha256()\n+                # append because headers may be announced over multiple messages.\n+                self.recent_headers_announced.append(x.sha256)\n             self.last_blockhash_announced = message.headers[-1].sha256\n \n-    def clear_last_announcement(self):\n+    def clear_block_announcements(self):\n         with mininode_lock:\n             self.block_announced = False\n             self.last_message.pop(\"inv\", None)\n             self.last_message.pop(\"headers\", None)\n+            self.recent_headers_announced = []\n \n-    def check_last_announcement(self, headers=None, inv=None):\n-        \"\"\"Test whether the last announcement received had the right header or the right inv.\n \n-        inv and headers should be lists of block hashes.\"\"\"\n+    def check_last_headers_announcement(self, headers):\n+        \"\"\"Test whether the last headers announcements received are right.\n+           Headers may be announced across more than one message.\"\"\"\n+        test_function = lambda: (len(self.recent_headers_announced) >= len(headers))\n+        wait_until(test_function, timeout=60, lock=mininode_lock)\n+        with mininode_lock:\n+            assert_equal(self.recent_headers_announced, headers)\n+            self.block_announced = False\n+            self.last_message.pop(\"headers\", None)\n+            self.recent_headers_announced = []\n+\n+    def check_last_inv_announcement(self, inv):\n+        \"\"\"Test whether the last announcement received had the right inv.\n+        inv should be a list of block hashes.\"\"\"\n \n         test_function = lambda: self.block_announced\n         wait_until(test_function, timeout=60, lock=mininode_lock)\n \n         with mininode_lock:\n-            self.block_announced = False\n-\n             compare_inv = []\n             if \"inv\" in self.last_message:\n                 compare_inv = [x.hash for x in self.last_message[\"inv\"].inv]\n-            if inv is not None:\n-                assert_equal(compare_inv, inv)\n-\n-            compare_headers = []\n-            if \"headers\" in self.last_message:\n-                compare_headers = [x.sha256 for x in self.last_message[\"headers\"].headers]\n-            if headers is not None:\n-                assert_equal(compare_headers, headers)\n-\n+            assert_equal(compare_inv, inv)\n+            self.block_announced = False\n             self.last_message.pop(\"inv\", None)\n-            self.last_message.pop(\"headers\", None)\n \n class SendHeadersTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -206,8 +212,8 @@ def set_test_params(self):\n     def mine_blocks(self, count):\n         \"\"\"Mine count blocks and return the new tip.\"\"\"\n \n-        # Clear out last block announcement from each p2p listener\n-        [x.clear_last_announcement() for x in self.nodes[0].p2ps]\n+        # Clear out block announcements from each p2p listener\n+        [x.clear_block_announcements() for x in self.nodes[0].p2ps]\n         self.nodes[0].generate(count)\n         return int(self.nodes[0].getbestblockhash(), 16)\n \n@@ -222,7 +228,7 @@ def mine_reorg(self, length):\n         sync_blocks(self.nodes, wait=0.1)\n         for x in self.nodes[0].p2ps:\n             x.wait_for_block_announcement(int(self.nodes[0].getbestblockhash(), 16))\n-            x.clear_last_announcement()\n+            x.clear_block_announcements()\n \n         tip_height = self.nodes[1].getblockcount()\n         hash_to_invalidate = self.nodes[1].getblockhash(tip_height - (length - 1))\n@@ -255,25 +261,25 @@ def test_null_locators(self, test_node, inv_node):\n         tip = self.nodes[0].getblockheader(self.nodes[0].generate(1)[0])\n         tip_hash = int(tip[\"hash\"], 16)\n \n-        inv_node.check_last_announcement(inv=[tip_hash], headers=[])\n-        test_node.check_last_announcement(inv=[tip_hash], headers=[])\n+        inv_node.check_last_inv_announcement(inv=[tip_hash])\n+        test_node.check_last_inv_announcement(inv=[tip_hash])\n \n         self.log.info(\"Verify getheaders with null locator and valid hashstop returns headers.\")\n-        test_node.clear_last_announcement()\n+        test_node.clear_block_announcements()\n         test_node.send_get_headers(locator=[], hashstop=tip_hash)\n-        test_node.check_last_announcement(headers=[tip_hash])\n+        test_node.check_last_headers_announcement(headers=[tip_hash])\n \n         self.log.info(\"Verify getheaders with null locator and invalid hashstop does not return headers.\")\n         block = create_block(int(tip[\"hash\"], 16), create_coinbase(tip[\"height\"] + 1), tip[\"mediantime\"] + 1)\n         block.solve()\n         test_node.send_header_for_blocks([block])\n-        test_node.clear_last_announcement()\n+        test_node.clear_block_announcements()\n         test_node.send_get_headers(locator=[], hashstop=int(block.hash, 16))\n         test_node.sync_with_ping()\n         assert_equal(test_node.block_announced, False)\n-        inv_node.clear_last_announcement()\n+        inv_node.clear_block_announcements()\n         test_node.send_message(msg_block(block))\n-        inv_node.check_last_announcement(inv=[int(block.hash, 16)], headers=[])\n+        inv_node.check_last_inv_announcement(inv=[int(block.hash, 16)])\n \n     def test_nonnull_locators(self, test_node, inv_node):\n         tip = int(self.nodes[0].getbestblockhash(), 16)\n@@ -284,8 +290,8 @@ def test_nonnull_locators(self, test_node, inv_node):\n         for i in range(4):\n             old_tip = tip\n             tip = self.mine_blocks(1)\n-            inv_node.check_last_announcement(inv=[tip], headers=[])\n-            test_node.check_last_announcement(inv=[tip], headers=[])\n+            inv_node.check_last_inv_announcement(inv=[tip])\n+            test_node.check_last_inv_announcement(inv=[tip])\n             # Try a few different responses; none should affect next announcement\n             if i == 0:\n                 # first request the block\n@@ -296,7 +302,7 @@ def test_nonnull_locators(self, test_node, inv_node):\n                 test_node.send_get_headers(locator=[old_tip], hashstop=tip)\n                 test_node.send_get_data([tip])\n                 test_node.wait_for_block(tip)\n-                test_node.clear_last_announcement()  # since we requested headers...\n+                test_node.clear_block_announcements()  # since we requested headers...\n             elif i == 2:\n                 # this time announce own block via headers\n                 height = self.nodes[0].getblockcount()\n@@ -308,8 +314,8 @@ def test_nonnull_locators(self, test_node, inv_node):\n                 test_node.wait_for_getdata([new_block.sha256])\n                 test_node.send_message(msg_block(new_block))\n                 test_node.sync_with_ping()  # make sure this block is processed\n-                inv_node.clear_last_announcement()\n-                test_node.clear_last_announcement()\n+                inv_node.clear_block_announcements()\n+                test_node.clear_block_announcements()\n \n         self.log.info(\"Part 1: success!\")\n         self.log.info(\"Part 2: announce blocks with headers after sendheaders message...\")\n@@ -323,8 +329,8 @@ def test_nonnull_locators(self, test_node, inv_node):\n \n         # Now that we've synced headers, headers announcements should work\n         tip = self.mine_blocks(1)\n-        inv_node.check_last_announcement(inv=[tip], headers=[])\n-        test_node.check_last_announcement(headers=[tip])\n+        inv_node.check_last_inv_announcement(inv=[tip])\n+        test_node.check_last_headers_announcement(headers=[tip])\n \n         height = self.nodes[0].getblockcount() + 1\n         block_time += 10  # Advance far enough ahead\n@@ -368,8 +374,8 @@ def test_nonnull_locators(self, test_node, inv_node):\n                 assert \"inv\" not in inv_node.last_message\n                 assert \"headers\" not in inv_node.last_message\n                 tip = self.mine_blocks(1)\n-                inv_node.check_last_announcement(inv=[tip], headers=[])\n-                test_node.check_last_announcement(headers=[tip])\n+                inv_node.check_last_inv_announcement(inv=[tip])\n+                test_node.check_last_headers_announcement(headers=[tip])\n                 height += 1\n                 block_time += 1\n \n@@ -383,16 +389,16 @@ def test_nonnull_locators(self, test_node, inv_node):\n             # First try mining a reorg that can propagate with header announcement\n             new_block_hashes = self.mine_reorg(length=7)\n             tip = new_block_hashes[-1]\n-            inv_node.check_last_announcement(inv=[tip], headers=[])\n-            test_node.check_last_announcement(headers=new_block_hashes)\n+            inv_node.check_last_inv_announcement(inv=[tip])\n+            test_node.check_last_headers_announcement(headers=new_block_hashes)\n \n             block_time += 8\n \n             # Mine a too-large reorg, which should be announced with a single inv\n             new_block_hashes = self.mine_reorg(length=8)\n             tip = new_block_hashes[-1]\n-            inv_node.check_last_announcement(inv=[tip], headers=[])\n-            test_node.check_last_announcement(inv=[tip], headers=[])\n+            inv_node.check_last_inv_announcement(inv=[tip])\n+            test_node.check_last_inv_announcement(inv=[tip])\n \n             block_time += 9\n \n@@ -401,15 +407,15 @@ def test_nonnull_locators(self, test_node, inv_node):\n \n             # Use getblocks/getdata\n             test_node.send_getblocks(locator=[fork_point])\n-            test_node.check_last_announcement(inv=new_block_hashes, headers=[])\n+            test_node.check_last_inv_announcement(inv=new_block_hashes)\n             test_node.send_get_data(new_block_hashes)\n             test_node.wait_for_block(new_block_hashes[-1])\n \n             for i in range(3):\n                 # Mine another block, still should get only an inv\n                 tip = self.mine_blocks(1)\n-                inv_node.check_last_announcement(inv=[tip], headers=[])\n-                test_node.check_last_announcement(inv=[tip], headers=[])\n+                inv_node.check_last_inv_announcement(inv=[tip])\n+                test_node.check_last_inv_announcement(inv=[tip])\n                 if i == 0:\n                     # Just get the data -- shouldn't cause headers announcements to resume\n                     test_node.send_get_data([tip])\n@@ -434,8 +440,8 @@ def test_nonnull_locators(self, test_node, inv_node):\n                         test_node.sync_with_ping()\n             # New blocks should now be announced with header\n             tip = self.mine_blocks(1)\n-            inv_node.check_last_announcement(inv=[tip], headers=[])\n-            test_node.check_last_announcement(headers=[tip])\n+            inv_node.check_last_inv_announcement(inv=[tip])\n+            test_node.check_last_headers_announcement(headers=[tip])\n \n         self.log.info(\"Part 3: success!\")\n "
      }
    ]
  },
  {
    "sha": "cbdabef35e25d84206006b5dddbf6f8376157d5e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmRhYmVmMzVlMjVkODQyMDYwMDZiNWRkZGJmNmY4Mzc2MTU3ZDVl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-05-22T21:07:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:03:02Z"
      },
      "message": "qa: Fix wallet_listreceivedby race\n\nGithub-Pull: #13304\nRebased-From: fa865efa4a21ae08be8b4c390b7661182e0b415b",
      "tree": {
        "sha": "cb4304645a4796a12f59f12e07e51e885ac6e3d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb4304645a4796a12f59f12e07e51e885ac6e3d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbdabef35e25d84206006b5dddbf6f8376157d5e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbdabef35e25d84206006b5dddbf6f8376157d5e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbdabef35e25d84206006b5dddbf6f8376157d5e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbdabef35e25d84206006b5dddbf6f8376157d5e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79c4fff9edec13ca4685abde953a320840544869",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79c4fff9edec13ca4685abde953a320840544869",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79c4fff9edec13ca4685abde953a320840544869"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "dd17ac122a1ae9ee452dc663f3f3102a62675711",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbdabef35e25d84206006b5dddbf6f8376157d5e/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbdabef35e25d84206006b5dddbf6f8376157d5e/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=cbdabef35e25d84206006b5dddbf6f8376157d5e",
        "patch": "@@ -6,10 +6,13 @@\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (assert_array_result,\n-                                 assert_equal,\n-                                 assert_raises_rpc_error,\n-                                 )\n+from test_framework.util import (\n+    assert_array_result,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    sync_blocks,\n+)\n+\n \n class ReceivedByTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -18,6 +21,7 @@ def set_test_params(self):\n     def run_test(self):\n         # Generate block to get out of IBD\n         self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n \n         self.log.info(\"listreceivedbyaddress Test\")\n "
      }
    ]
  },
  {
    "sha": "cf6feb783764bd37647548c4013a1dde605dcc54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjZmZWI3ODM3NjRiZDM3NjQ3NTQ4YzQwMTNhMWRkZTYwNWRjYzU0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-03-26T19:13:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:03:02Z"
      },
      "message": "qt: Avoid resetting on resetguisettigs=0\n\nGithub-Pull: #12793\nRebased-From: 342fb8034640d4393771899dc132c9e3b170b369",
      "tree": {
        "sha": "be496eb68a75e4aaecf71e4a6f6ed26895db41a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be496eb68a75e4aaecf71e4a6f6ed26895db41a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf6feb783764bd37647548c4013a1dde605dcc54",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf6feb783764bd37647548c4013a1dde605dcc54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf6feb783764bd37647548c4013a1dde605dcc54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf6feb783764bd37647548c4013a1dde605dcc54/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cbdabef35e25d84206006b5dddbf6f8376157d5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbdabef35e25d84206006b5dddbf6f8376157d5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cbdabef35e25d84206006b5dddbf6f8376157d5e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "90a7cbec8e7c2eeda01bf5a782e5ed34d2331c4a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf6feb783764bd37647548c4013a1dde605dcc54/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf6feb783764bd37647548c4013a1dde605dcc54/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=cf6feb783764bd37647548c4013a1dde605dcc54",
        "patch": "@@ -689,7 +689,7 @@ int main(int argc, char *argv[])\n     // Allow parameter interaction before we create the options model\n     app.parameterSetup();\n     // Load GUI settings from QSettings\n-    app.createOptionsModel(gArgs.IsArgSet(\"-resetguisettings\"));\n+    app.createOptionsModel(gArgs.GetBoolArg(\"-resetguisettings\", false));\n \n     // Subscribe to global signals from core\n     uiInterface.InitMessage.connect(InitMessage);"
      }
    ]
  },
  {
    "sha": "2291774bd5a4cd7692db27de09728c98298db599",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjkxNzc0YmQ1YTRjZDc2OTJkYjI3ZGUwOTcyOGM5ODI5OGRiNTk5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-04T19:52:18Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:03:02Z"
      },
      "message": "[trivial] Add newlines to end of log messages.\n\nLog messages should terminate with a '\\n', or the following log will be\nwritten to the same line without a timestamp. Fix a couple of cases\nwhere the message is not terminated with a \\n.\n\nGithub-Pull: #12887\nRebased-From: 5b10ab0116245ee73b493e2248ad2f8bb8e34f21",
      "tree": {
        "sha": "b7cc1884fbb751f709895ac7e7ef060e9301b2f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7cc1884fbb751f709895ac7e7ef060e9301b2f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2291774bd5a4cd7692db27de09728c98298db599",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2291774bd5a4cd7692db27de09728c98298db599",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2291774bd5a4cd7692db27de09728c98298db599",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2291774bd5a4cd7692db27de09728c98298db599/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf6feb783764bd37647548c4013a1dde605dcc54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf6feb783764bd37647548c4013a1dde605dcc54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf6feb783764bd37647548c4013a1dde605dcc54"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "68933b0d3445cddea5dd34accb640e6b2f52e40b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2291774bd5a4cd7692db27de09728c98298db599/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2291774bd5a4cd7692db27de09728c98298db599/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2291774bd5a4cd7692db27de09728c98298db599",
        "patch": "@@ -684,7 +684,7 @@ void ThreadImport(std::vector<fs::path> vImportFiles)\n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n     CValidationState state;\n     if (!ActivateBestChain(state, chainparams)) {\n-        LogPrintf(\"Failed to connect best block\");\n+        LogPrintf(\"Failed to connect best block\\n\");\n         StartShutdown();\n         return;\n     }"
      },
      {
        "sha": "92a3c4e9142fb17789c307557ddbc0030b5c823a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2291774bd5a4cd7692db27de09728c98298db599/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2291774bd5a4cd7692db27de09728c98298db599/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2291774bd5a4cd7692db27de09728c98298db599",
        "patch": "@@ -891,7 +891,7 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n \n     bool success = true;\n     if (!walletdb.WriteTx(wtx)) {\n-        LogPrintf(\"%s: Updating walletdb tx %s failed\", __func__, wtx.GetHash().ToString());\n+        LogPrintf(\"%s: Updating walletdb tx %s failed\\n\", __func__, wtx.GetHash().ToString());\n         success = false;\n     }\n "
      }
    ]
  },
  {
    "sha": "bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjFmMTUwMTkwM2EyYTBkZjRhYzVmZDRiMmJmZTA4NmZmZTg4Nzcz",
    "commit": {
      "author": {
        "name": "joemphilips",
        "email": "joemphilips@gmail.com",
        "date": "2018-03-30T08:59:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:03:03Z"
      },
      "message": "rpc: fix type mistmatch in listreceivedbyaddress\n\nGithub-Pull: #12837\nRebased-From: 05c03d1249c6fe30dbfcea9f3f3a3bd02106035b",
      "tree": {
        "sha": "0aaf4c8e676c7aaced42b45d7c9ab91d8627d4c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0aaf4c8e676c7aaced42b45d7c9ab91d8627d4c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773/comments",
    "author": {
      "login": "joemphilips",
      "id": 10084960,
      "node_id": "MDQ6VXNlcjEwMDg0OTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10084960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joemphilips",
      "html_url": "https://github.com/joemphilips",
      "followers_url": "https://api.github.com/users/joemphilips/followers",
      "following_url": "https://api.github.com/users/joemphilips/following{/other_user}",
      "gists_url": "https://api.github.com/users/joemphilips/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joemphilips/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joemphilips/subscriptions",
      "organizations_url": "https://api.github.com/users/joemphilips/orgs",
      "repos_url": "https://api.github.com/users/joemphilips/repos",
      "events_url": "https://api.github.com/users/joemphilips/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joemphilips/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2291774bd5a4cd7692db27de09728c98298db599",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2291774bd5a4cd7692db27de09728c98298db599",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2291774bd5a4cd7692db27de09728c98298db599"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8d8c58242463793d8010f7bac51870f8a62aa480",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
        "patch": "@@ -1537,7 +1537,7 @@ UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n             \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n             \"    \\\"label\\\" : \\\"label\\\",               (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"txids\\\": [\\n\"\n-            \"       n,                                (numeric) The ids of transactions received with the address \\n\"\n+            \"       \\\"txid\\\",                         (string) The ids of transactions received with the address \\n\"\n             \"       ...\\n\"\n             \"    ]\\n\"\n             \"  }\\n\""
      }
    ]
  },
  {
    "sha": "cfc6f7413bfa486aed9811fcef177cd80568f2db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmM2Zjc0MTNiZmE0ODZhZWQ5ODExZmNlZjE3N2NkODA1NjhmMmRi",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-06T15:54:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:03:03Z"
      },
      "message": "[rpcwallet] Clamp walletpassphrase value at 100M seconds\n\nLarger values seem to trigger a bug on macos+libevent (resulting in the\nrpc server stopping).\n\nGithub-Pull: #12905\nRebased-From: 662d19ff7217d0e6c7975ca311933f640955a53e",
      "tree": {
        "sha": "16277a8a14925570983ed76a10e3f2eda0be4fc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16277a8a14925570983ed76a10e3f2eda0be4fc0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfc6f7413bfa486aed9811fcef177cd80568f2db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfc6f7413bfa486aed9811fcef177cd80568f2db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfc6f7413bfa486aed9811fcef177cd80568f2db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfc6f7413bfa486aed9811fcef177cd80568f2db/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf1f1501903a2a0df4ac5fd4b2bfe086ffe88773"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a86f38cf7fcf769d0301ebd8ff4c33157ce5dbf2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfc6f7413bfa486aed9811fcef177cd80568f2db/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfc6f7413bfa486aed9811fcef177cd80568f2db/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cfc6f7413bfa486aed9811fcef177cd80568f2db",
        "patch": "@@ -2322,8 +2322,7 @@ UniValue walletpassphrase(const JSONRPCRequest& request)\n             \"This is needed prior to performing transactions related to private keys such as sending bitcoins\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"passphrase\\\"     (string, required) The wallet passphrase\\n\"\n-            \"2. timeout            (numeric, required) The time to keep the decryption key in seconds. Limited to at most 1073741824 (2^30) seconds.\\n\"\n-            \"                                          Any value greater than 1073741824 seconds will be set to 1073741824 seconds.\\n\"\n+            \"2. timeout            (numeric, required) The time to keep the decryption key in seconds; capped at 100000000 (~3 years).\\n\"\n             \"\\nNote:\\n\"\n             \"Issuing the walletpassphrase command while the wallet is already unlocked will set a new unlock\\n\"\n             \"time that overrides the old one.\\n\"\n@@ -2358,9 +2357,10 @@ UniValue walletpassphrase(const JSONRPCRequest& request)\n     if (nSleepTime < 0) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n     }\n-    // Clamp timeout to 2^30 seconds\n-    if (nSleepTime > (int64_t)1 << 30) {\n-        nSleepTime = (int64_t)1 << 30;\n+    // Clamp timeout\n+    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+    if (nSleepTime > MAX_SLEEP_TIME) {\n+        nSleepTime = MAX_SLEEP_TIME;\n     }\n \n     if (strWalletPass.length() > 0)"
      },
      {
        "sha": "64ee6787449c346530e2a9dc081e9a8948c9fc80",
        "filename": "test/functional/wallet_encryption.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfc6f7413bfa486aed9811fcef177cd80568f2db/test/functional/wallet_encryption.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfc6f7413bfa486aed9811fcef177cd80568f2db/test/functional/wallet_encryption.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_encryption.py?ref=cfc6f7413bfa486aed9811fcef177cd80568f2db",
        "patch": "@@ -64,14 +64,15 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"Timeout cannot be negative.\", self.nodes[0].walletpassphrase, passphrase2, -10)\n         # Check the timeout\n         # Check a time less than the limit\n-        expected_time = int(time.time()) + (1 << 30) - 600\n-        self.nodes[0].walletpassphrase(passphrase2, (1 << 30) - 600)\n+        MAX_VALUE = 100000000\n+        expected_time = int(time.time()) + MAX_VALUE - 600\n+        self.nodes[0].walletpassphrase(passphrase2, MAX_VALUE - 600)\n         actual_time = self.nodes[0].getwalletinfo()['unlocked_until']\n         assert_greater_than_or_equal(actual_time, expected_time)\n         assert_greater_than(expected_time + 5, actual_time) # 5 second buffer\n         # Check a time greater than the limit\n-        expected_time = int(time.time()) + (1 << 30) - 1\n-        self.nodes[0].walletpassphrase(passphrase2, (1 << 33))\n+        expected_time = int(time.time()) + MAX_VALUE - 1\n+        self.nodes[0].walletpassphrase(passphrase2, MAX_VALUE + 1000)\n         actual_time = self.nodes[0].getwalletinfo()['unlocked_until']\n         assert_greater_than_or_equal(actual_time, expected_time)\n         assert_greater_than(expected_time + 5, actual_time) # 5 second buffer"
      }
    ]
  },
  {
    "sha": "170b3099814c96c9af39fb2405502b0a85a33b5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzBiMzA5OTgxNGM5NmM5YWYzOWZiMjQwNTUwMmIwYTg1YTMzYjVk",
    "commit": {
      "author": {
        "name": "Bernhard M. Wiedemann",
        "email": "bwiedemann@suse.de",
        "date": "2018-04-23T21:57:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-12T14:27:29Z"
      },
      "message": "Make tests pass after 2020\n\nalso test that 64 bit integers are properly handled\n\nGithub-Pull: #13061\nRebased-From: 3ee4be10500710fc8e9b03acf974fd81224c05c4",
      "tree": {
        "sha": "5ea655ab37e81c6ca3a49456a0f4927f411d4f25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ea655ab37e81c6ca3a49456a0f4927f411d4f25"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/170b3099814c96c9af39fb2405502b0a85a33b5d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/170b3099814c96c9af39fb2405502b0a85a33b5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/170b3099814c96c9af39fb2405502b0a85a33b5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/170b3099814c96c9af39fb2405502b0a85a33b5d/comments",
    "author": {
      "login": "bmwiedemann",
      "id": 637990,
      "node_id": "MDQ6VXNlcjYzNzk5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/637990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmwiedemann",
      "html_url": "https://github.com/bmwiedemann",
      "followers_url": "https://api.github.com/users/bmwiedemann/followers",
      "following_url": "https://api.github.com/users/bmwiedemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmwiedemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmwiedemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmwiedemann/subscriptions",
      "organizations_url": "https://api.github.com/users/bmwiedemann/orgs",
      "repos_url": "https://api.github.com/users/bmwiedemann/repos",
      "events_url": "https://api.github.com/users/bmwiedemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmwiedemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfc6f7413bfa486aed9811fcef177cd80568f2db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfc6f7413bfa486aed9811fcef177cd80568f2db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfc6f7413bfa486aed9811fcef177cd80568f2db"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1365227fab63e83d048529b5db3b666e52934b88",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/170b3099814c96c9af39fb2405502b0a85a33b5d/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/170b3099814c96c9af39fb2405502b0a85a33b5d/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=170b3099814c96c9af39fb2405502b0a85a33b5d",
        "patch": "@@ -256,14 +256,14 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     ar = r.get_array();\n     BOOST_CHECK_EQUAL(ar.size(), 0);\n \n-    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add 1607731200 true\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add 9907731200 true\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     UniValue banned_until = find_value(o1, \"banned_until\");\n     BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n-    BOOST_CHECK_EQUAL(banned_until.get_int64(), 1607731200); // absolute time check\n+    BOOST_CHECK_EQUAL(banned_until.get_int64(), 9907731200); // absolute time check\n \n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n "
      }
    ]
  },
  {
    "sha": "10621995edaa8237b5846f81a1d731648af4d017",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDYyMTk5NWVkYWE4MjM3YjU4NDZmODFhMWQ3MzE2NDhhZjRkMDE3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-06-27T14:59:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T15:50:25Z"
      },
      "message": "Fix incorrect tests\n\nGithub-Pull: #13545\nRebased-From: c6fd0df4efcd9f75c43ff527fd57fe43bc47a474",
      "tree": {
        "sha": "6b4345a0d5b1e7afdefea9abc92798e4aecef422",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b4345a0d5b1e7afdefea9abc92798e4aecef422"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10621995edaa8237b5846f81a1d731648af4d017",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10621995edaa8237b5846f81a1d731648af4d017",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10621995edaa8237b5846f81a1d731648af4d017",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10621995edaa8237b5846f81a1d731648af4d017/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "170b3099814c96c9af39fb2405502b0a85a33b5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/170b3099814c96c9af39fb2405502b0a85a33b5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/170b3099814c96c9af39fb2405502b0a85a33b5d"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6f71f71ab1966b44ea2192fcce1f248057d22fed",
        "filename": "src/test/streams_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10621995edaa8237b5846f81a1d731648af4d017/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10621995edaa8237b5846f81a1d731648af4d017/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=10621995edaa8237b5846f81a1d731648af4d017",
        "patch": "@@ -80,14 +80,17 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n \n     // Degenerate case\n     \n-    key += '\\x00','\\x00';\n+    key += '\\x00';\n+    key += '\\x00';\n     ds.Xor(key);\n     BOOST_CHECK_EQUAL(\n             std::string(expected_xor.begin(), expected_xor.end()), \n             std::string(ds.begin(), ds.end()));\n \n-    in += '\\x0f','\\xf0';\n-    expected_xor += '\\xf0','\\x0f';\n+    in += '\\x0f';\n+    in += '\\xf0';\n+    expected_xor += '\\xf0';\n+    expected_xor += '\\x0f';\n     \n     // Single character key\n \n@@ -105,14 +108,17 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n \n     in.clear();\n     expected_xor.clear();\n-    in += '\\xf0','\\x0f';\n-    expected_xor += '\\x0f','\\x00';\n+    in += '\\xf0';\n+    in += '\\x0f';\n+    expected_xor += '\\x0f';\n+    expected_xor += '\\x00';\n                         \n     ds.clear();\n     ds.insert(ds.begin(), in.begin(), in.end());\n \n     key.clear();\n-    key += '\\xff','\\x0f';\n+    key += '\\xff';\n+    key += '\\x0f';\n \n     ds.Xor(key);\n     BOOST_CHECK_EQUAL("
      }
    ]
  },
  {
    "sha": "e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTVlM2E5ZGRkMTdlMWQ0NmIzNTQ4Y2Q0NzViY2Q2YjE3OTVjMzc4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-06-27T15:45:18Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T15:50:25Z"
      },
      "message": "Remove boost dependency (boost/assign/std/vector.hpp)\n\nGithub-Pull: #13545\nRebased-From: 962d8eed5bdbe62b9926f01cb85bdce9d435d3d6",
      "tree": {
        "sha": "28df1ba0f7e0044cbbde3895f3c8ce9b75507c18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28df1ba0f7e0044cbbde3895f3c8ce9b75507c18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10621995edaa8237b5846f81a1d731648af4d017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10621995edaa8237b5846f81a1d731648af4d017",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10621995edaa8237b5846f81a1d731648af4d017"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 13,
      "deletions": 16
    },
    "files": [
      {
        "sha": "abd4a29d9897738ad13b0ac4e9998da171e1745b",
        "filename": "src/test/streams_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 16,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
        "patch": "@@ -6,11 +6,8 @@\n #include <support/allocators/zeroafterfree.h>\n #include <test/test_bitcoin.h>\n \n-#include <boost/assign/std/vector.hpp> // for 'operator+=()'\n #include <boost/test/unit_test.hpp>\n \n-using namespace boost::assign; // bring 'operator+=()' into scope\n-\n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(streams_vector_writer)\n@@ -80,25 +77,25 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n \n     // Degenerate case\n     \n-    key += '\\x00';\n-    key += '\\x00';\n+    key.push_back('\\x00');\n+    key.push_back('\\x00');\n     ds.Xor(key);\n     BOOST_CHECK_EQUAL(\n             std::string(expected_xor.begin(), expected_xor.end()), \n             std::string(ds.begin(), ds.end()));\n \n-    in += '\\x0f';\n-    in += '\\xf0';\n-    expected_xor += '\\xf0';\n-    expected_xor += '\\x0f';\n+    in.push_back('\\x0f');\n+    in.push_back('\\xf0');\n+    expected_xor.push_back('\\xf0');\n+    expected_xor.push_back('\\x0f');\n     \n     // Single character key\n \n     ds.clear();\n     ds.insert(ds.begin(), in.begin(), in.end());\n     key.clear();\n \n-    key += '\\xff';\n+    key.push_back('\\xff');\n     ds.Xor(key);\n     BOOST_CHECK_EQUAL(\n             std::string(expected_xor.begin(), expected_xor.end()), \n@@ -108,17 +105,17 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n \n     in.clear();\n     expected_xor.clear();\n-    in += '\\xf0';\n-    in += '\\x0f';\n-    expected_xor += '\\x0f';\n-    expected_xor += '\\x00';\n+    in.push_back('\\xf0');\n+    in.push_back('\\x0f');\n+    expected_xor.push_back('\\x0f');\n+    expected_xor.push_back('\\x00');\n                         \n     ds.clear();\n     ds.insert(ds.begin(), in.begin(), in.end());\n \n     key.clear();\n-    key += '\\xff';\n-    key += '\\x0f';\n+    key.push_back('\\xff');\n+    key.push_back('\\x0f');\n \n     ds.Xor(key);\n     BOOST_CHECK_EQUAL("
      }
    ]
  },
  {
    "sha": "ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDgyZTcxNzZkNmY3YzNlNWY1MzM2MzEwMmRkMWU3ZDU1OGIxZjky",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-06-11T18:09:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T15:50:25Z"
      },
      "message": "wallet: Erase wtxOrderd wtx pointer on removeprunedfunds\n\nGithub-Pull: #13437\nRebased-From: faa18ca046e9043b2cf68cb1bd17cc8c60fe26d9",
      "tree": {
        "sha": "8891c813d1ac072ca01432ea0306e849783d5c5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8891c813d1ac072ca01432ea0306e849783d5c5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e15e3a9ddd17e1d46b3548cd475bcd6b1795c378"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "fc1d2076b69ac3b4c750bb16c74a132659acf63e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
        "patch": "@@ -913,11 +913,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     CWalletTx& wtx = (*ret.first).second;\n     wtx.BindWallet(this);\n     bool fInsertedNew = ret.second;\n-    if (fInsertedNew)\n-    {\n+    if (fInsertedNew) {\n         wtx.nTimeReceived = GetAdjustedTime();\n         wtx.nOrderPos = IncOrderPosNext(&walletdb);\n-        wtxOrdered.insert(std::make_pair(wtx.nOrderPos, TxPair(&wtx, nullptr)));\n+        wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, TxPair(&wtx, nullptr)));\n         wtx.nTimeSmart = ComputeTimeSmart(wtx);\n         AddToSpends(hash);\n     }\n@@ -987,9 +986,12 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n bool CWallet::LoadToWallet(const CWalletTx& wtxIn)\n {\n     uint256 hash = wtxIn.GetHash();\n-    CWalletTx& wtx = mapWallet.emplace(hash, wtxIn).first->second;\n+    const auto& ins = mapWallet.emplace(hash, wtxIn);\n+    CWalletTx& wtx = ins.first->second;\n     wtx.BindWallet(this);\n-    wtxOrdered.insert(std::make_pair(wtx.nOrderPos, TxPair(&wtx, nullptr)));\n+    if (/* insertion took place */ ins.second) {\n+        wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, TxPair(&wtx, nullptr)));\n+    }\n     AddToSpends(hash);\n     for (const CTxIn& txin : wtx.tx->vin) {\n         auto it = mapWallet.find(txin.prevout.hash);\n@@ -3123,8 +3125,11 @@ DBErrors CWallet::ZapSelectTx(std::vector<uint256>& vHashIn, std::vector<uint256\n {\n     AssertLockHeld(cs_wallet); // mapWallet\n     DBErrors nZapSelectTxRet = CWalletDB(*dbw,\"cr+\").ZapSelectTx(vHashIn, vHashOut);\n-    for (uint256 hash : vHashOut)\n-        mapWallet.erase(hash);\n+    for (uint256 hash : vHashOut) {\n+        const auto& it = mapWallet.find(hash);\n+        wtxOrdered.erase(it->second.m_it_wtxOrdered);\n+        mapWallet.erase(it);\n+    }\n \n     if (nZapSelectTxRet == DB_NEED_REWRITE)\n     {"
      },
      {
        "sha": "0630840f6349ac09d438f5ddac4b6e7db28d180b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
        "patch": "@@ -327,6 +327,7 @@ class CWalletTx : public CMerkleTx\n     char fFromMe;\n     std::string strFromAccount;\n     int64_t nOrderPos; //!< position in ordered transaction list\n+    std::multimap<int64_t, std::pair<CWalletTx*, CAccountingEntry*>>::const_iterator m_it_wtxOrdered;\n \n     // memory only\n     mutable bool fDebitCached;"
      }
    ]
  },
  {
    "sha": "6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjlkYzhjZWFlZDU5N2Q5YzUzOWJhNmIwOWMxNzFiMjU4YjY2Y2Ez",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-06-12T21:10:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T16:23:39Z"
      },
      "message": "have verifytxoutproof check the number of txns in proof structure\n\nGithub-Pull: #13452\nRebased-From: ed82f1700006830b6fe34572b66245c1487ccd29",
      "tree": {
        "sha": "137950ec6af0dcfb0c276d39d675a9ca5e1b9d2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/137950ec6af0dcfb0c276d39d675a9ca5e1b9d2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed82e7176d6f7c3e5f53363102dd1e7d558b1f92"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "984e33a96160cc613a01be41ec57d1a21d1366e5",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
        "patch": "@@ -115,6 +115,12 @@ class CPartialMerkleTree\n      * returns the merkle root, or 0 in case of failure\n      */\n     uint256 ExtractMatches(std::vector<uint256> &vMatch, std::vector<unsigned int> &vnIndex);\n+\n+    /** Get number of transactions the merkle proof is indicating for cross-reference with\n+     * local blockchain knowledge.\n+     */\n+    unsigned int GetNumTransactions() const { return nTransactions; };\n+\n };\n \n "
      },
      {
        "sha": "5e0ce9e01bd70330772c5f5c5ca1c2971133d031",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
        "patch": "@@ -290,7 +290,7 @@ UniValue verifytxoutproof(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"proof\\\"    (string, required) The hex-encoded proof generated by gettxoutproof\\n\"\n             \"\\nResult:\\n\"\n-            \"[\\\"txid\\\"]      (array, strings) The txid(s) which the proof commits to, or empty array if the proof is invalid\\n\"\n+            \"[\\\"txid\\\"]      (array, strings) The txid(s) which the proof commits to, or empty array if the proof can not be validated.\\n\"\n         );\n \n     CDataStream ssMB(ParseHexV(request.params[0], \"proof\"), SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n@@ -306,11 +306,16 @@ UniValue verifytxoutproof(const JSONRPCRequest& request)\n \n     LOCK(cs_main);\n \n-    if (!mapBlockIndex.count(merkleBlock.header.GetHash()) || !chainActive.Contains(mapBlockIndex[merkleBlock.header.GetHash()]))\n+    if (!mapBlockIndex.count(merkleBlock.header.GetHash()) || !chainActive.Contains(mapBlockIndex[merkleBlock.header.GetHash()]) || mapBlockIndex[merkleBlock.header.GetHash()]->nTx == 0)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found in chain\");\n \n-    for (const uint256& hash : vMatch)\n-        res.push_back(hash.GetHex());\n+    // Check if proof is valid, only add results if so\n+    if (mapBlockIndex[merkleBlock.header.GetHash()]->nTx == merkleBlock.txn.GetNumTransactions()) {\n+        for (const uint256& hash : vMatch) {\n+            res.push_back(hash.GetHex());\n+        }\n+    }\n+\n     return res;\n }\n "
      }
    ]
  },
  {
    "sha": "b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzJjMGJkNGM5Y2YzNjE2M2ZkZWY2Y2UwYzYwOTcwZDExMmQxMTAw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-06-20T20:03:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T16:23:39Z"
      },
      "message": "[qa] Add a test for merkle proof malleation\n\nGithub-Pull: #13452\nRebased-From: d280617bf569f84457eaea546541dc74c67cd1e4",
      "tree": {
        "sha": "4d33c7b8bd82cbd7e7c7581781b835e948f6fd41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d33c7b8bd82cbd7e7c7581781b835e948f6fd41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b72c0bd4c9cf36163fdef6ce0c60970d112d1100/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b9dc8ceaed597d9c539ba6b09c171b258b66ca3"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 69,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d35cc2751e6ba13549f2cc481052e49f1fa74aeb",
        "filename": "test/functional/rpc_txoutproof.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b72c0bd4c9cf36163fdef6ce0c60970d112d1100/test/functional/rpc_txoutproof.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b72c0bd4c9cf36163fdef6ce0c60970d112d1100/test/functional/rpc_txoutproof.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_txoutproof.py?ref=b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
        "patch": "@@ -6,6 +6,8 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n+from test_framework.mininode import FromHex, ToHex\n+from test_framework.messages import CMerkleBlock\n \n class MerkleBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -78,6 +80,27 @@ def run_test(self):\n         # We can't get a proof if we specify transactions from different blocks\n         assert_raises_rpc_error(-5, \"Not all transactions found in specified or retrieved block\", self.nodes[2].gettxoutproof, [txid1, txid3])\n \n+        # Now we'll try tweaking a proof.\n+        proof = self.nodes[3].gettxoutproof([txid1, txid2])\n+        assert txid1 in self.nodes[0].verifytxoutproof(proof)\n+        assert txid2 in self.nodes[1].verifytxoutproof(proof)\n+\n+        tweaked_proof = FromHex(CMerkleBlock(), proof)\n+\n+        # Make sure that our serialization/deserialization is working\n+        assert txid1 in self.nodes[2].verifytxoutproof(ToHex(tweaked_proof))\n+\n+        # Check to see if we can go up the merkle tree and pass this off as a\n+        # single-transaction block\n+        tweaked_proof.txn.nTransactions = 1\n+        tweaked_proof.txn.vHash = [tweaked_proof.header.hashMerkleRoot]\n+        tweaked_proof.txn.vBits = [True] + [False]*7\n+\n+        for n in self.nodes:\n+            assert not n.verifytxoutproof(ToHex(tweaked_proof))\n+\n+        # TODO: try more variants, eg transactions at different depths, and\n+        # verify that the proofs are invalid\n \n if __name__ == '__main__':\n     MerkleBlockTest().main()"
      },
      {
        "sha": "06566b8122310d49a6d0310b220a2d2bf3e62b7c",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b72c0bd4c9cf36163fdef6ce0c60970d112d1100/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b72c0bd4c9cf36163fdef6ce0c60970d112d1100/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
        "patch": "@@ -830,6 +830,52 @@ def serialize(self, with_witness=True):\n     def __repr__(self):\n         return \"BlockTransactions(hash=%064x transactions=%s)\" % (self.blockhash, repr(self.transactions))\n \n+class CPartialMerkleTree():\n+    def __init__(self):\n+        self.nTransactions = 0\n+        self.vHash = []\n+        self.vBits = []\n+        self.fBad = False\n+\n+    def deserialize(self, f):\n+        self.nTransactions = struct.unpack(\"<i\", f.read(4))[0]\n+        self.vHash = deser_uint256_vector(f)\n+        vBytes = deser_string(f)\n+        self.vBits = []\n+        for i in range(len(vBytes) * 8):\n+            self.vBits.append(vBytes[i//8] & (1 << (i % 8)) != 0)\n+\n+    def serialize(self):\n+        r = b\"\"\n+        r += struct.pack(\"<i\", self.nTransactions)\n+        r += ser_uint256_vector(self.vHash)\n+        vBytesArray = bytearray([0x00] * ((len(self.vBits) + 7)//8))\n+        for i in range(len(self.vBits)):\n+            vBytesArray[i // 8] |= self.vBits[i] << (i % 8)\n+        r += ser_string(bytes(vBytesArray))\n+        return r\n+\n+    def __repr__(self):\n+        return \"CPartialMerkleTree(nTransactions=%d, vHash=%s, vBits=%s)\" % (self.nTransactions, repr(self.vHash), repr(self.vBits))\n+\n+class CMerkleBlock():\n+    def __init__(self):\n+        self.header = CBlockHeader()\n+        self.txn = CPartialMerkleTree()\n+\n+    def deserialize(self, f):\n+        self.header.deserialize(f)\n+        self.txn.deserialize(f)\n+\n+    def serialize(self):\n+        r = b\"\"\n+        r += self.header.serialize()\n+        r += self.txn.serialize()\n+        return r\n+\n+    def __repr__(self):\n+        return \"CMerkleBlock(header=%s, txn=%s)\" % (repr(self.header), repr(self.txn))\n+\n \n # Objects that correspond to messages on the wire\n class msg_version():"
      }
    ]
  },
  {
    "sha": "88d1a649a2e9cfa471fc00f8c853e53383eb4695",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGQxYTY0OWEyZTljZmE0NzFmYzAwZjhjODUzZTUzMzgzZWI0Njk1",
    "commit": {
      "author": {
        "name": "532479301",
        "email": "532479301@qq.com",
        "date": "2018-03-01T09:20:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T16:23:39Z"
      },
      "message": "Consensus: Fix bug when compiler do not support __builtin_clz*\n\n#ifdef is not correct since defination is defined to 0 or 1. Should change to #if\n\nGithub-Pull: #12573\nRebased-From: 18307849b405f9e2067eaa8091b105838f413707",
      "tree": {
        "sha": "714cbcb4831334b3a8498e4f3297038c1d8fdc4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/714cbcb4831334b3a8498e4f3297038c1d8fdc4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88d1a649a2e9cfa471fc00f8c853e53383eb4695",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d1a649a2e9cfa471fc00f8c853e53383eb4695",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88d1a649a2e9cfa471fc00f8c853e53383eb4695",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d1a649a2e9cfa471fc00f8c853e53383eb4695/comments",
    "author": {
      "login": "532479301",
      "id": 14291548,
      "node_id": "MDQ6VXNlcjE0MjkxNTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14291548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/532479301",
      "html_url": "https://github.com/532479301",
      "followers_url": "https://api.github.com/users/532479301/followers",
      "following_url": "https://api.github.com/users/532479301/following{/other_user}",
      "gists_url": "https://api.github.com/users/532479301/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/532479301/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/532479301/subscriptions",
      "organizations_url": "https://api.github.com/users/532479301/orgs",
      "repos_url": "https://api.github.com/users/532479301/repos",
      "events_url": "https://api.github.com/users/532479301/events{/privacy}",
      "received_events_url": "https://api.github.com/users/532479301/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b72c0bd4c9cf36163fdef6ce0c60970d112d1100",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b72c0bd4c9cf36163fdef6ce0c60970d112d1100"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6e9d6dc82aa76d35b2c8d7cd7be3cecb902ba4d9",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d1a649a2e9cfa471fc00f8c853e53383eb4695/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d1a649a2e9cfa471fc00f8c853e53383eb4695/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=88d1a649a2e9cfa471fc00f8c853e53383eb4695",
        "patch": "@@ -82,12 +82,12 @@ void static inline WriteBE64(unsigned char* ptr, uint64_t x)\n /** Return the smallest number n such that (x >> n) == 0 (or 64 if the highest bit in x is set. */\n uint64_t static inline CountBits(uint64_t x)\n {\n-#ifdef HAVE_DECL___BUILTIN_CLZL\n+#if HAVE_DECL___BUILTIN_CLZL\n     if (sizeof(unsigned long) >= sizeof(uint64_t)) {\n         return x ? 8 * sizeof(unsigned long) - __builtin_clzl(x) : 0;\n     }\n #endif\n-#ifdef HAVE_DECL___BUILTIN_CLZLL\n+#if HAVE_DECL___BUILTIN_CLZLL\n     if (sizeof(unsigned long long) >= sizeof(uint64_t)) {\n         return x ? 8 * sizeof(unsigned long long) - __builtin_clzll(x) : 0;\n     }"
      }
    ]
  },
  {
    "sha": "657dfc5bca2bd476d124f51f711e889f98f1e7d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTdkZmM1YmNhMmJkNDc2ZDEyNGY1MWY3MTFlODg5Zjk4ZjFlN2Q2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-03-21T04:04:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T16:23:39Z"
      },
      "message": "Fix csBestBlock/cvBlockChange waiting in rpc/mining\n\nGithub-Pull: #12743\nRebased-From: 45dd13503918e75a45ce33eb5c934b998790fdc8",
      "tree": {
        "sha": "6af07143addfc483114fdb7c7c1aed06b368a80d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6af07143addfc483114fdb7c7c1aed06b368a80d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/657dfc5bca2bd476d124f51f711e889f98f1e7d6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/657dfc5bca2bd476d124f51f711e889f98f1e7d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/657dfc5bca2bd476d124f51f711e889f98f1e7d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/657dfc5bca2bd476d124f51f711e889f98f1e7d6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88d1a649a2e9cfa471fc00f8c853e53383eb4695",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d1a649a2e9cfa471fc00f8c853e53383eb4695",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88d1a649a2e9cfa471fc00f8c853e53383eb4695"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f029be7fa3468a2405c645be947a26985603b3d7",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/657dfc5bca2bd476d124f51f711e889f98f1e7d6/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/657dfc5bca2bd476d124f51f711e889f98f1e7d6/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=657dfc5bca2bd476d124f51f711e889f98f1e7d6",
        "patch": "@@ -477,7 +477,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n             WaitableLock lock(csBestBlock);\n-            while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n+            while (hashBestBlock == hashWatchedChain && IsRPCRunning())\n             {\n                 if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)\n                 {"
      },
      {
        "sha": "7795905c48977cb5230327b83ac3b3d0cb528139",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/657dfc5bca2bd476d124f51f711e889f98f1e7d6/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/657dfc5bca2bd476d124f51f711e889f98f1e7d6/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=657dfc5bca2bd476d124f51f711e889f98f1e7d6",
        "patch": "@@ -210,6 +210,7 @@ CChain& chainActive = g_chainstate.chainActive;\n CBlockIndex *pindexBestHeader = nullptr;\n CWaitableCriticalSection csBestBlock;\n CConditionVariable cvBlockChange;\n+uint256 hashBestBlock;\n int nScriptCheckThreads = 0;\n std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n@@ -2151,7 +2152,11 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n     // New best block\n     mempool.AddTransactionsUpdated(1);\n \n-    cvBlockChange.notify_all();\n+    {\n+        WaitableLock lock(csBestBlock);\n+        hashBestBlock = pindexNew->GetBlockHash();\n+        cvBlockChange.notify_all();\n+    }\n \n     std::vector<std::string> warningMessages;\n     if (!IsInitialBlockDownload())"
      },
      {
        "sha": "e9a1eabdf123793179461983b4a6708a33e0033b",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/657dfc5bca2bd476d124f51f711e889f98f1e7d6/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/657dfc5bca2bd476d124f51f711e889f98f1e7d6/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=657dfc5bca2bd476d124f51f711e889f98f1e7d6",
        "patch": "@@ -166,6 +166,7 @@ extern uint64_t nLastBlockWeight;\n extern const std::string strMessageMagic;\n extern CWaitableCriticalSection csBestBlock;\n extern CConditionVariable cvBlockChange;\n+extern uint256 hashBestBlock;\n extern std::atomic_bool fImporting;\n extern std::atomic_bool fReindex;\n extern int nScriptCheckThreads;"
      }
    ]
  },
  {
    "sha": "f78e7f6589eca50650ecd2010c41333b12f964b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNzhlN2Y2NTg5ZWNhNTA2NTBlY2QyMDEwYzQxMzMzYjEyZjk2NGIw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-02-14T13:23:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T17:33:58Z"
      },
      "message": "[qt] send: Clear All also resets coin control options\n\nGithub-Pull: #12432\nRebased-From: f506c0a7f8ea6bae089177884e44e38cd2bfeb23",
      "tree": {
        "sha": "aa0d1f7b44a1da9543229a256101bda5e888eebf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa0d1f7b44a1da9543229a256101bda5e888eebf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f78e7f6589eca50650ecd2010c41333b12f964b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f78e7f6589eca50650ecd2010c41333b12f964b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f78e7f6589eca50650ecd2010c41333b12f964b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f78e7f6589eca50650ecd2010c41333b12f964b0/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "657dfc5bca2bd476d124f51f711e889f98f1e7d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/657dfc5bca2bd476d124f51f711e889f98f1e7d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/657dfc5bca2bd476d124f51f711e889f98f1e7d6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bd02fde30e2a1726b7de7da833ed86d596ea848a",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f78e7f6589eca50650ecd2010c41333b12f964b0/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f78e7f6589eca50650ecd2010c41333b12f964b0/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=f78e7f6589eca50650ecd2010c41333b12f964b0",
        "patch": "@@ -375,6 +375,12 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n void SendCoinsDialog::clear()\n {\n+    // Clear coin control settings\n+    CoinControlDialog::coinControl()->UnSelectAll();\n+    ui->checkBoxCoinControlChange->setChecked(false);\n+    ui->lineEditCoinControlChange->clear();\n+    coinControlUpdateLabels();\n+\n     // Remove entries until only one left\n     while(ui->entries->count())\n     {"
      }
    ]
  },
  {
    "sha": "21dd5127a423f38712dcdcef4002e714e8276bd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMWRkNTEyN2E0MjNmMzg3MTJkY2RjZWY0MDAyZTcxNGU4Mjc2YmQy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-03-06T15:39:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-13T17:33:58Z"
      },
      "message": "gui: Show messages as text not html\n\nCurrently, error messages (such as InitError) are displayed as-is, which\nmeans Qt does auto detection on the format.\n\nThis means that it's possible to inject HTML from the command line\nthough e.g. specifying a wallet name with HTML in it. This isn't\na direct security risk because fetching content from internet is\ndisabled (and as far as I know we never report strings received\nfrom the network this way). However, it can be confusing.\n\nSo explicitly force the format as text.\n\nGithub-Pull: #12617\nRebased-From: 6fbc0986fa2d49a1cb65b60eca71c25c84842a54",
      "tree": {
        "sha": "5f17dc61a7de41b5b528f673a8f3d6a9ad85f4ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f17dc61a7de41b5b528f673a8f3d6a9ad85f4ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21dd5127a423f38712dcdcef4002e714e8276bd2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21dd5127a423f38712dcdcef4002e714e8276bd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/21dd5127a423f38712dcdcef4002e714e8276bd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21dd5127a423f38712dcdcef4002e714e8276bd2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f78e7f6589eca50650ecd2010c41333b12f964b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f78e7f6589eca50650ecd2010c41333b12f964b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f78e7f6589eca50650ecd2010c41333b12f964b0"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "14ea9d75e4348f7606c40c0438c281a4094a326d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21dd5127a423f38712dcdcef4002e714e8276bd2/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21dd5127a423f38712dcdcef4002e714e8276bd2/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=21dd5127a423f38712dcdcef4002e714e8276bd2",
        "patch": "@@ -923,6 +923,7 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n \n         showNormalIfMinimized();\n         QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons, this);\n+        mBox.setTextFormat(Qt::PlainText);\n         int r = mBox.exec();\n         if (ret != nullptr)\n             *ret = r == QMessageBox::Ok;"
      }
    ]
  },
  {
    "sha": "d9c563095d71055ff054d3a27e11a12d3d1ec92f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOWM1NjMwOTVkNzEwNTVmZjA1NGQzYTI3ZTExYTEyZDNkMWVjOTJm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-05-22T01:35:47Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-14T15:12:47Z"
      },
      "message": "qa: Initialize lockstack to prevent null pointer deref\n\nGithub-Pull: #13300\nRebased-From: fa9da85b7cc759d06bc24854be2bad0ea87b6006",
      "tree": {
        "sha": "76e130ff6fadb504fc88079c5108756862a8bae8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76e130ff6fadb504fc88079c5108756862a8bae8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9c563095d71055ff054d3a27e11a12d3d1ec92f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9c563095d71055ff054d3a27e11a12d3d1ec92f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9c563095d71055ff054d3a27e11a12d3d1ec92f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9c563095d71055ff054d3a27e11a12d3d1ec92f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "21dd5127a423f38712dcdcef4002e714e8276bd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21dd5127a423f38712dcdcef4002e714e8276bd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21dd5127a423f38712dcdcef4002e714e8276bd2"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "0ec00b6f6d95f312fc59d8d51550670bdc5bb4af",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 11,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9c563095d71055ff054d3a27e11a12d3d1ec92f/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9c563095d71055ff054d3a27e11a12d3d1ec92f/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=d9c563095d71055ff054d3a27e11a12d3d1ec92f",
        "patch": "@@ -73,7 +73,7 @@ struct LockData {\n     std::mutex dd_mutex;\n } static lockdata;\n \n-static thread_local std::unique_ptr<LockStack> lockstack;\n+static thread_local LockStack g_lockstack;\n \n static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)\n {\n@@ -103,21 +103,18 @@ static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch,\n \n static void push_lock(void* c, const CLockLocation& locklocation)\n {\n-    if (!lockstack)\n-        lockstack.reset(new LockStack);\n-\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n-    lockstack->push_back(std::make_pair(c, locklocation));\n+    g_lockstack.push_back(std::make_pair(c, locklocation));\n \n-    for (const std::pair<void*, CLockLocation> & i : (*lockstack)) {\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\n         if (i.first == c)\n             break;\n \n         std::pair<void*, void*> p1 = std::make_pair(i.first, c);\n         if (lockdata.lockorders.count(p1))\n             continue;\n-        lockdata.lockorders[p1] = (*lockstack);\n+        lockdata.lockorders[p1] = g_lockstack;\n \n         std::pair<void*, void*> p2 = std::make_pair(c, i.first);\n         lockdata.invlockorders.insert(p2);\n@@ -128,7 +125,7 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n \n static void pop_lock()\n {\n-    (*lockstack).pop_back();\n+    g_lockstack.pop_back();\n }\n \n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n@@ -144,14 +141,14 @@ void LeaveCritical()\n std::string LocksHeld()\n {\n     std::string result;\n-    for (const std::pair<void*, CLockLocation> & i : *lockstack)\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n         result += i.second.ToString() + std::string(\"\\n\");\n     return result;\n }\n \n void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const std::pair<void*, CLockLocation> & i : *lockstack)\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n         if (i.first == cs)\n             return;\n     fprintf(stderr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld().c_str());\n@@ -160,7 +157,7 @@ void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine,\n \n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const std::pair<void*, CLockLocation>& i : *lockstack) {\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\n         if (i.first == cs) {\n             fprintf(stderr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld().c_str());\n             abort();"
      }
    ]
  }
]